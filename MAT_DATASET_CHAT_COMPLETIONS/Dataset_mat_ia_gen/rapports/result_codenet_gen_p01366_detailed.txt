================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def main():
    input = sys.stdin.readline
    while True:
        # Read the number of cities N and roads M
        N, M = map(int, input().split())
        if N == 0 and M == 0:
            break

        # Graph representation: adjacency list
        # Each element: (neighbor, length, cost)
        graph = [[] for _ in range(N + 1)]
        edges = []

        for _ in range(M):
            u, v, d, c = map(int, input().split())
            graph[u].append((v, d, c))
            graph[v].append((u, d, c))
            edges.append((u, v, d, c))

        # Step 1: Use Dijkstra's algorithm from the capital (city 1)
        # to get shortest distance from capital to each city
        dist = [float('inf')] * (N + 1)
        dist[1] = 0
        pq = [(0, 1)]  # (distance, city)

        while pq:
            cur_dist, u = heapq.heappop(pq)
            if cur_dist > dist[u]:
                continue
            for v, length, cost in graph[u]:
                nd = cur_dist + length
                if nd < dist[v]:
                    dist[v] = nd
                    heapq.heappush(pq, (nd, v))

        # After this, dist[i] is the shortest distance from city 1 to city i

        # Step 2: Filter edges that can be on shortest paths from capital
        # Condition for edge (u,v) with length d:
        # It can appear in shortest paths if dist[u] + d == dist[v]
        # or dist[v] + d == dist[u].
        # We'll use these edges to build a subgraph where all shortest paths are preserved.

        shortest_path_edges = []  # To store edges that lie on at least one shortest path

        for u, v, d, c in edges:
            if dist[u] + d == dist[v] or dist[v] + d == dist[u]:
                # This edge could be on some shortest path from city 1
                shortest_path_edges.append((u, v, c))

        # Step 3: The required plan must connect all cities (graph is connected through shortest paths),
        # and distances from capital must not change => only edges in shortest_path_edges can be chosen.
        # We want a minimal cost subset that still connects all cities (spanning tree)
        # and keeps distances from capital unchanged.

        # The problem reduces to finding a Minimum Spanning Tree (MST) on the graph formed by shortest_path_edges.

        # Step 4: Build MST from edges in shortest_path_edges using Kruskal's algorithm

        # Union-Find data structure (Disjoint Set Union - DSU)
        parent = [i for i in range(N + 1)]
        rank = [0] * (N + 1)

        def find(x):
            while parent[x] != x:
                parent[x] = parent[parent[x]]
                x = parent[x]
            return x

        def union(a, b):
            a = find(a)
            b = find(b)
            if a == b:
                return False
            if rank[a] < rank[b]:
                parent[a] = b
            else:
                parent[b] = a
                if rank[a] == rank[b]:
                    rank[a] += 1
            return True

        # Sort edges by cost
        shortest_path_edges.sort(key=lambda x: x[2])

        mst_cost = 0
        edges_used = 0
        for u, v, c in shortest_path_edges:
            if union(u, v):
                mst_cost += c
                edges_used += 1
                if edges_used == N - 1:
                    break

        # Output the total MST cost that satisfies constraints
        print(mst_cost)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8051367998123169
    2. '\n' → logprob: -1.930136799812317
    3. '

' → logprob: -2.0551366806030273
    4. '\' → logprob: -2.9301366806030273
    5. 'import' → logprob: -2.9301366806030273
    6. '.' → logprob: -3.0551366806030273
    7. '<|end|>' → logprob: -3.0551366806030273
    8. '' → logprob: -3.6801366806030273
    9. '```' → logprob: -3.8051366806030273
    10. '<|end|>' → logprob: -4.555136680603027

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6963363289833069
    2. 'def' → logprob: -1.696336269378662
    3. '
' → logprob: -2.321336269378662
    4. '\' → logprob: -3.196336269378662
    5. '```' → logprob: -3.321336269378662
    6. 'class' → logprob: -3.571336269378662
    7. '\n' → logprob: -3.821336269378662
    8. 'from' → logprob: -4.071336269378662
    9. 'import' → logprob: -4.196336269378662
    10. '' → logprob: -4.321336269378662

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003044802288059145
    2. '(:' → logprob: -8.875304222106934
    3. '():' → logprob: -10.000304222106934
    4. ' (' → logprob: -10.750304222106934
    5. '(
' → logprob: -11.000304222106934
    6. '("("' → logprob: -11.000304222106934
    7. ':' → logprob: -11.500304222106934
    8. '(`' → logprob: -11.875304222106934
    9. '):' → logprob: -12.125304222106934
    10. '```' → logprob: -12.250304222106934

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.616561233997345
    2. '(' → logprob: -1.8665611743927002
    3. ' ' → logprob: -1.9915611743927002
    4. '    ' → logprob: -2.6165611743927
    5. '\' → logprob: -3.3665611743927
    6. '[' → logprob: -4.491561412811279
    7. ' 
' → logprob: -4.741561412811279
    8. ')' → logprob: -4.991561412811279
    9. '    
' → logprob: -5.116561412811279
    10. ' (' → logprob: -5.741561412811279

Token 11: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6296129822731018
    2. 'n' → logprob: -2.254612922668457
    3. ' data' → logprob: -2.254612922668457
    4. '   ' → logprob: -2.254612922668457
    5. 'data' → logprob: -3.379612922668457
    6. ' ' → logprob: -3.754612922668457
    7. ' input' → logprob: -3.754612922668457
    8. ' max' → logprob: -4.254612922668457
    9. ' heap' → logprob: -4.629612922668457
    10. 'input' (adapté à ' input') → logprob: -5.129612922668457

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21003930270671844
    2. '()' → logprob: -1.7100392580032349
    3. '_data' → logprob: -5.585039138793945
    4. '_' → logprob: -6.335039138793945
    5. ' =' → logprob: -7.835039138793945
    6. '.' → logprob: -7.835039138793945
    7. '_line' → logprob: -8.085039138793945
    8. '=' → logprob: -8.210039138793945
    9. '().' → logprob: -8.460039138793945
    10. '```' → logprob: -8.710039138793945

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00023286080977413803
    2. 'sys' → logprob: -8.500232696533203
    3. ' ' → logprob: -11.375232696533203
    4. ' input' → logprob: -11.875232696533203
    5. '(sys' → logprob: -12.125232696533203
    6. '	sys' → logprob: -12.375232696533203
    7. '=sys' → logprob: -13.750232696533203
    8. 'input' → logprob: -15.625232696533203
    9. '   ' → logprob: -17.750232696533203
    10. ' lambda' → logprob: -17.750232696533203

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.021301066502928734
    2. '.' → logprob: -3.896301031112671
    3. '.stdout' → logprob: -7.89630126953125
    4. ' .' → logprob: -8.77130126953125
    5. '.std' → logprob: -9.27130126953125
    6. '.readline' → logprob: -9.64630126953125
    7. '.argv' → logprob: -9.77130126953125
    8. '.stderr' → logprob: -12.77130126953125
    9. '.setdefault' → logprob: -13.02130126953125
    10. '.input' → logprob: -13.52130126953125

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019461149349808693
    2. '.read' → logprob: -4.019461154937744
    3. '.' → logprob: -6.644461154937744
    4. '.readlines' → logprob: -12.144460678100586
    5. '.Read' → logprob: -13.144460678100586
    6. 'read' → logprob: -14.144460678100586
    7. '.buffer' → logprob: -14.644460678100586
    8. ' .' → logprob: -14.894460678100586
    9. ' readline' → logprob: -16.144460678100586
    10. '.write' → logprob: -16.394460678100586

Token 16: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004249469842761755
    2. '()
' → logprob: -6.004249572753906
    3. '(' → logprob: -7.129249572753906
    4. '().' → logprob: -7.129249572753906
    5. '(
' → logprob: -9.629249572753906
    6. '()\' → logprob: -10.504249572753906
    7. ' ()' → logprob: -10.629249572753906
    8. '()

' → logprob: -11.129249572753906
    9. ')' → logprob: -11.629249572753906
    10. '
' → logprob: -11.629249572753906

Token 17: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009914509952068329
    2. '   ' → logprob: -4.759914398193359
    3. '()
' → logprob: -7.384914398193359
    4. '(' → logprob: -8.38491439819336
    5. ' ()' → logprob: -8.63491439819336
    6. '().' → logprob: -9.50991439819336
    7. '()\' → logprob: -9.88491439819336
    8. '()

' → logprob: -10.25991439819336
    9. '():' → logprob: -10.88491439819336
    10. ')' → logprob: -11.50991439819336

Token 18: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6155687570571899
    2. '()' → logprob: -1.11556875705719
    3. ' n' → logprob: -2.6155686378479004
    4. '   ' → logprob: -2.9905686378479004
    5. '(' → logprob: -5.3655686378479
    6. '(n' → logprob: -6.9905686378479
    7. ' ()' → logprob: -7.1155686378479
    8. 'num' → logprob: -8.365569114685059
    9. 'number' → logprob: -8.490569114685059
    10. '()\' → logprob: -8.615569114685059

Token 19: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0018787815934047103
    2. 'True' → logprob: -6.37687873840332
    3. '(True' → logprob: -8.75187873840332
    4. ' ' → logprob: -11.12687873840332
    5. ' not' → logprob: -13.12687873840332
    6. '(' → logprob: -14.12687873840332
    7. ' (' → logprob: -14.62687873840332
    8. ' true' → logprob: -15.50187873840332
    9. '  ' → logprob: -16.50187873840332
    10. '    ' → logprob: -16.75187873840332

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009124542586505413
    2. '():' → logprob: -4.759124755859375
    3. '):' → logprob: -8.509124755859375
    4. ' :' → logprob: -9.384124755859375
    5. '       ' → logprob: -9.384124755859375
    6. ':
' → logprob: -10.009124755859375
    7. ':**' → logprob: -10.384124755859375
    8. '   ' → logprob: -11.009124755859375
    9. '(' → logprob: -11.384124755859375
    10. '():
' → logprob: -11.509124755859375

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018307620659470558
    2. '    ' → logprob: -4.643307685852051
    3. ' ' → logprob: -5.643307685852051
    4. '   ' → logprob: -5.893307685852051
    5. '        
' → logprob: -6.518307685852051
    6. '        ' → logprob: -8.64330768585205
    7. '<|end|>' → logprob: -9.01830768585205
    8. '      ' → logprob: -9.39330768585205
    9. '     ' → logprob: -9.51830768585205
    10. '  ' → logprob: -10.14330768585205

Token 22: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6475056409835815
    2. 'n' → logprob: -1.7725056409835815
    3. 'line' → logprob: -2.147505760192871
    4. ' n' → logprob: -2.147505760192871
    5. 'data' → logprob: -3.647505760192871
    6. ' data' → logprob: -4.022505760192871
    7. '   ' → logprob: -4.397505760192871
    8. 's' → logprob: -4.647505760192871
    9. ' s' → logprob: -6.147505760192871
    10. '       ' → logprob: -6.772505760192871

Token 23: ' Read' (ID: 5405)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2685891091823578
    2. 'line' → logprob: -1.7685891389846802
    3. 'data' → logprob: -3.0185890197753906
    4. ' data' → logprob: -4.768589019775391
    5. '   ' → logprob: -6.018589019775391
    6. '    ' → logprob: -6.393589019775391
    7. 's' → logprob: -6.768589019775391
    8. '       ' → logprob: -7.268589019775391
    9. '        ' → logprob: -7.768589019775391
    10. ' s' → logprob: -8.51858901977539

Token 24: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03454713523387909
    2. '<|end|>' → logprob: -5.034547328948975
    3. '    ' → logprob: -5.159547328948975
    4. '        ' → logprob: -5.284547328948975
    5. '<|end|>' → logprob: -5.284547328948975
    6. ' )' → logprob: -5.284547328948975
    7. '       ' → logprob: -6.784547328948975
    8. '  ' → logprob: -6.784547328948975
    9. ')' → logprob: -7.659547328948975
    10. 'space' → logprob: -7.659547328948975

Token 25: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.3147358000278473
    2. 'number' → logprob: -1.814735770225525
    3. 'n' → logprob: -3.5647358894348145
    4. ' line' → logprob: -3.6897358894348145
    5. ' n' → logprob: -3.8147358894348145
    6. ' next' → logprob: -4.4397358894348145
    7. 'line' → logprob: -5.0647358894348145
    8. ' length' → logprob: -6.0647358894348145
    9. ' size' → logprob: -6.5647358894348145
    10. 'next' → logprob: -6.6897358894348145

Token 26: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2350294589996338
    2. 's' → logprob: -1.4850294589996338
    3. ' ' → logprob: -1.7350294589996338
    4. '=' → logprob: -1.8600294589996338
    5. '   ' → logprob: -3.235029458999634
    6. '    ' → logprob: -3.735029458999634
    7. '(' → logprob: -4.235029220581055
    8. '       ' → logprob: -4.360029220581055
    9. ' of' → logprob: -4.360029220581055
    10. '  ' → logprob: -4.485029220581055

Token 27: ' cities' (ID: 15636)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.7604079246520996
    2. ' cards' → logprob: -2.1354079246520996
    3. ' test' → logprob: -2.5104079246520996
    4. ' students' → logprob: -2.6354079246520996
    5. ' people' → logprob: -2.8854079246520996
    6. ' integers' → logprob: -3.0104079246520996
    7. ' sticks' → logprob: -3.1354079246520996
    8. ' numbers' → logprob: -3.3854079246520996
    9. ' items' → logprob: -3.3854079246520996
    10. ' words' → logprob: -3.5104079246520996

Token 28: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2025304138660431
    2. ' ' → logprob: -2.8275303840637207
    3. '        ' → logprob: -3.4525303840637207
    4. ',' → logprob: -3.7025303840637207
    5. 'n' → logprob: -4.077530384063721
    6. '<|end|>' → logprob: -4.577530384063721
    7. '    ' → logprob: -4.952530384063721
    8. ' ,' → logprob: -5.202530384063721
    9. ' n' → logprob: -5.327530384063721
    10. ' =' → logprob: -5.452530384063721

Token 29: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23803289234638214
    2. '=' → logprob: -1.6130329370498657
    3. '       ' → logprob: -5.363032817840576
    4. ',' → logprob: -5.738032817840576
    5. ' ' → logprob: -6.238032817840576
    6. ' and' → logprob: -7.613032817840576
    7. '        ' → logprob: -7.738032817840576
    8. '    ' → logprob: -7.988032817840576
    9. ' ,' → logprob: -7.988032817840576
    10. '<|end|>' → logprob: -7.988032817840576

Token 30: ' roads' (ID: 30027)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3640443682670593
    2. 'M' → logprob: -1.489044427871704
    3. ' the' → logprob: -3.864044427871704
    4. ' K' → logprob: -4.676544189453125
    5. 'the' → logprob: -4.801544189453125
    6. ' roads' → logprob: -5.051544189453125
    7. 'K' → logprob: -5.301544189453125
    8. ' passengers' → logprob: -6.551544189453125
    9. 'T' → logprob: -6.801544189453125
    10. 'k' → logprob: -6.864044189453125

Token 31: ' M' (ID: 391)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.490703821182251
    2. ' =' → logprob: -1.615703821182251
    3. '=' → logprob: -2.865703821182251
    4. '       ' → logprob: -2.990703821182251
    5. '   ' → logprob: -3.365703821182251
    6. ' ,' → logprob: -4.240703582763672
    7. 'n' → logprob: -4.990703582763672
    8. ' (' → logprob: -5.490703582763672
    9. '    ' → logprob: -5.615703582763672
    10. ':' → logprob: -6.365703582763672

Token 32: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8817943334579468
    2. ' ' → logprob: -1.3817943334579468
    3. '       ' → logprob: -2.6317944526672363
    4. ':' → logprob: -3.0067944526672363
    5. ' =' → logprob: -3.1317944526672363
    6. '=' → logprob: -3.1317944526672363
    7. '<|end|>' → logprob: -3.1317944526672363
    8. '    ' → logprob: -3.7567944526672363
    9. '        ' → logprob: -4.256794452667236
    10. '  ' → logprob: -4.881794452667236

Token 33: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15814346075057983
    2. ':' → logprob: -3.2831435203552246
    3. '):' → logprob: -3.7831435203552246
    4. '=' → logprob: -4.033143520355225
    5. ' ' → logprob: -4.033143520355225
    6. ' =' → logprob: -4.283143520355225
    7. ' ,' → logprob: -4.408143520355225
    8. '       ' → logprob: -4.658143520355225
    9. '<|end|>' → logprob: -5.033143520355225
    10. ')' → logprob: -6.033143520355225

Token 34: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.18876422941684723
    2. 'line' → logprob: -2.8137643337249756
    3. 'n' → logprob: -2.9387643337249756
    4. ' n' → logprob: -3.0637643337249756
    5. ' N' → logprob: -5.8137640953063965
    6. 'data' → logprob: -6.1887640953063965
    7. 'N' (adapté à ' N') → logprob: -6.6887640953063965
    8. ' ' → logprob: -6.8137640953063965
    9. '   ' → logprob: -6.9387640953063965
    10. ' data' → logprob: -7.1887640953063965

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.50003719329834
    3. ',M' → logprob: -12.12503719329834
    4. ',N' → logprob: -13.25003719329834
    5. '=' → logprob: -13.50003719329834
    6. '‌,' → logprob: -15.50003719329834
    7. ')' → logprob: -15.87503719329834
    8. '<|end|>' → logprob: -15.87503719329834
    9. ',C' → logprob: -16.250038146972656
    10. ',
' → logprob: -16.375038146972656

Token 36: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.03355221822857857
    2. '<|end|>' → logprob: -4.158552169799805
    3. ' ' → logprob: -4.783552169799805
    4. 'M' → logprob: -4.783552169799805
    5. '<|end|>' → logprob: -8.408552169799805
    6. '  ' → logprob: -8.533552169799805
    7. '    ' → logprob: -9.658552169799805
    8. ')' → logprob: -10.658552169799805
    9. ',' → logprob: -11.033552169799805
    10. ' ' → logprob: -11.158552169799805

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693241238594055
    2. '=' → logprob: -2.126932382583618
    3. ')' → logprob: -13.001932144165039
    4. ',' → logprob: -14.251932144165039
    5. ' ' → logprob: -14.501932144165039
    6. '   ' → logprob: -15.126932144165039
    7. '    ' → logprob: -15.876932144165039
    8. '=input' → logprob: -16.12693214416504
    9. ')=' → logprob: -16.75193214416504
    10. '=line' → logprob: -16.75193214416504

Token 38: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0042462656274437904
    2. 'map' → logprob: -5.504246234893799
    3. ' input' → logprob: -9.004246711730957
    4. ' ' → logprob: -10.754246711730957
    5. ' list' → logprob: -11.254246711730957
    6. 'input' → logprob: -12.004246711730957
    7. '	map' → logprob: -13.254246711730957
    8. ' tuple' → logprob: -14.379246711730957
    9. ' [' → logprob: -14.754246711730957
    10. ' mapa' → logprob: -15.379246711730957

Token 39: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017694460228085518
    2. '(int' → logprob: -4.392694473266602
    3. '(str' → logprob: -5.892694473266602
    4. '(input' → logprob: -6.392694473266602
    5. '(lambda' → logprob: -7.392694473266602
    6. '(
' → logprob: -10.392694473266602
    7. '(eval' → logprob: -11.017694473266602
    8. '<|end|>' → logprob: -11.142694473266602
    9. '(list' → logprob: -11.642694473266602
    10. ' (' → logprob: -12.017694473266602

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28764215111732483
    2. '(' → logprob: -2.412642240524292
    3. ',input' → logprob: -2.537642240524292
    4. '(input' → logprob: -2.787642240524292
    5. ')' → logprob: -4.912642002105713
    6. 'input' → logprob: -5.287642002105713
    7. '(sys' → logprob: -5.537642002105713
    8. ' ,' → logprob: -6.662642002105713
    9. '```' → logprob: -7.287642002105713
    10. '=input' → logprob: -8.287642478942871

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20150737464427948
    2. 'input' → logprob: -1.701507329940796
    3. ' sys' → logprob: -9.701507568359375
    4. 'sys' → logprob: -10.451507568359375
    5. ')' → logprob: -13.451507568359375
    6. ',input' → logprob: -13.951507568359375
    7. '(input' → logprob: -14.951507568359375
    8. 'str' → logprob: -15.201507568359375
    9. ' ' → logprob: -15.201507568359375
    10. '=input' → logprob: -15.576507568359375

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011808235431089997
    2. '()' → logprob: -6.751180648803711
    3. ' ().' → logprob: -12.001180648803711
    4. '()
' → logprob: -13.626180648803711
    5. '(' → logprob: -14.001180648803711
    6. ')' → logprob: -14.126180648803711
    7. '   ' → logprob: -14.751180648803711
    8. '())' → logprob: -15.251180648803711
    9. '()

' → logprob: -16.12618064880371
    10. '('' → logprob: -16.50118064880371

Token 43: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5862118005752563
    2. 'split' → logprob: -0.8362118005752563
    3. 'rstrip' → logprob: -4.586211681365967
    4. 'read' → logprob: -11.086212158203125
    5. ')' → logprob: -11.836212158203125
    6. '(split' → logprob: -12.836212158203125
    7. 'decode' → logprob: -14.211212158203125
    8. '())' → logprob: -14.461212158203125
    9. '```' → logprob: -14.586212158203125
    10. '(strip' → logprob: -14.961212158203125

Token 44: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014521556906402111
    2. '))' → logprob: -4.389521598815918
    3. '())' → logprob: -6.389521598815918
    4. '()' → logprob: -8.139521598815918
    5. '(' → logprob: -11.389521598815918
    6. ')
' → logprob: -12.014521598815918
    7. '()))' → logprob: -12.014521598815918
    8. ')))' → logprob: -12.264521598815918
    9. '),' → logprob: -13.139521598815918
    10. ' )' → logprob: -13.514521598815918

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39283743500709534
    2. '<|end|>' → logprob: -1.767837405204773
    3. '   ' → logprob: -2.7678375244140625
    4. ' if' → logprob: -3.3928375244140625
    5. 'if' → logprob: -4.1428375244140625
    6. ')' → logprob: -5.0178375244140625
    7. ' ' → logprob: -5.1428375244140625
    8. '
' → logprob: -5.2678375244140625
    9. '<|end|>' → logprob: -5.3928375244140625
    10. '\n' → logprob: -5.5178375244140625

Token 46: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5298795700073242
    2. '<|end|>' → logprob: -1.2798795700073242
    3. 'if' (adapté à ' if') → logprob: -3.029879570007324
    4. ' if' → logprob: -3.904879570007324
    5. '
' → logprob: -4.029879570007324
    6. '\n' → logprob: -4.404879570007324
    7. ':' → logprob: -4.404879570007324
    8. '   ' → logprob: -5.029879570007324
    9. '<|end|>' → logprob: -5.404879570007324
    10. ' ' → logprob: -5.904879570007324

Token 47: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.009309163317084312
    2. 'N' → logprob: -5.2593092918396
    3. ' not' → logprob: -5.5093092918396
    4. 'not' → logprob: -11.509308815002441
    5. ' ' → logprob: -12.009308815002441
    6. ' M' → logprob: -13.634308815002441
    7. ' (' → logprob: -14.509308815002441
    8. '0' → logprob: -16.259309768676758
    9. '	N' → logprob: -16.384309768676758
    10. ' ' → logprob: -16.759309768676758

Token 48: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04863482713699341
    2. '==' → logprob: -3.0486347675323486
    3. '=' → logprob: -10.67363452911377
    4. ')' → logprob: -12.42363452911377
    5. ')==' → logprob: -12.42363452911377
    6. ' ' → logprob: -12.67363452911377
    7. '0' → logprob: -12.79863452911377
    8. ' =' → logprob: -13.04863452911377
    9. ' ' → logprob: -13.67363452911377
    10. ']==' → logprob: -13.67363452911377

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541290521621704
    2. ' ' → logprob: -1.6004128456115723
    3. '۰' → logprob: -15.72541332244873
    4. '  ' → logprob: -17.475412368774414
    5. '_' → logprob: -17.475412368774414
    6. '０' → logprob: -17.787912368774414
    7. ' ' → logprob: -17.912912368774414
    8. '   ' → logprob: -18.662912368774414
    9. '০' → logprob: -18.725412368774414
    10. '<|end|>' → logprob: -18.912912368774414

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '۰' → logprob: -15.312532424926758
    4. '```' → logprob: -15.437532424926758
    5. '০' → logprob: -16.875032424926758
    6. 'and' → logprob: -17.000032424926758
    7. '०' → logprob: -17.250032424926758
    8. '  ' → logprob: -17.375032424926758
    9. '０' → logprob: -17.375032424926758
    10. '٠' → logprob: -17.812532424926758

Token 51: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02413143962621689
    2. 'and' → logprob: -3.8991315364837646
    3. ':' → logprob: -5.8991312980651855
    4. ' or' → logprob: -7.1491312980651855
    5. ' ' → logprob: -10.024131774902344
    6. '<|end|>' → logprob: -12.024131774902344
    7. '	and' → logprob: -12.774131774902344
    8. ' :' → logprob: -14.399131774902344
    9. ' ' → logprob: -14.774131774902344
    10. '  ' → logprob: -15.149131774902344

Token 52: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.011048170737922192
    2. 'M' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.011048316955566
    4. ' ' → logprob: -16.51104736328125
    5. '	M' → logprob: -18.01104736328125
    6. '   ' → logprob: -18.13604736328125
    7. '  ' → logprob: -19.38604736328125
    8. '    ' → logprob: -19.38604736328125
    9. ' М' → logprob: -19.88604736328125
    10. '<M' → logprob: -20.38604736328125

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14093700051307678
    2. '==' → logprob: -2.140937089920044
    3. '<|end|>' → logprob: -4.390936851501465
    4. '<|end|>' → logprob: -7.765936851501465
    5. '=' → logprob: -8.140936851501465
    6. ' ' → logprob: -8.390936851501465
    7. ' =' → logprob: -9.265936851501465
    8. '0' → logprob: -9.390936851501465
    9. ' ' → logprob: -9.890936851501465
    10. ')==' → logprob: -9.890936851501465

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014203518629074
    2. ' ' → logprob: -1.7014203071594238
    3. ' ' → logprob: -12.576420783996582
    4. '<|end|>' → logprob: -12.951420783996582
    5. '  ' → logprob: -14.701420783996582
    6. '   ' → logprob: -15.701420783996582
    7. '```' → logprob: -15.951420783996582
    8. '<|end|>' → logprob: -15.951420783996582
    9. '۰' → logprob: -16.388919830322266
    10. '‌' → logprob: -16.888919830322266

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '<|end|>' → logprob: -17.625179290771484
    4. '۰' → logprob: -17.750179290771484
    5. '```' → logprob: -18.812679290771484
    6. ' ' → logprob: -18.937679290771484
    7. '  ' → logprob: -19.250179290771484
    8. '   ' → logprob: -19.375179290771484
    9. ')' → logprob: -19.812679290771484
    10. '০' → logprob: -19.875179290771484

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.019237768370658e-05
    2. ':
' → logprob: -9.500090599060059
    3. ':return' → logprob: -12.000090599060059
    4. '   ' → logprob: -12.250090599060059
    5. ' :' → logprob: -13.125090599060059
    6. '       ' → logprob: -13.500090599060059
    7. '):' → logprob: -14.875090599060059
    8. '.' → logprob: -15.250090599060059
    9. '<|end|>' → logprob: -16.625089645385742
    10. '           ' → logprob: -17.125089645385742

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009805086068809032
    2. '       ' → logprob: -4.634805202484131
    3. '   ' → logprob: -10.884804725646973
    4. '               ' → logprob: -12.134804725646973
    5. ' break' → logprob: -12.384804725646973
    6. '          ' → logprob: -12.384804725646973
    7. '<|end|>' → logprob: -13.134804725646973
    8. '            ' → logprob: -13.259804725646973
    9. '	       ' → logprob: -13.259804725646973
    10. '        ' → logprob: -13.509804725646973

Token 58: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5578885078430176
    2. '       ' → logprob: -1.5578885078430176
    3. 'break' (adapté à ' break') → logprob: -1.6828885078430176
    4. '           ' → logprob: -3.5578885078430176
    5. '	break' → logprob: -6.807888507843018
    6. '   ' → logprob: -7.182888507843018
    7. 'return' → logprob: -7.682888507843018
    8. ' return' → logprob: -8.55788803100586
    9. '               ' → logprob: -9.93288803100586
    10. '```' → logprob: -10.05788803100586

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12038132548332214
    2. '       ' → logprob: -2.4953813552856445
    3. '<|end|>' → logprob: -4.1203813552856445
    4. '        
' → logprob: -4.8703813552856445
    5. '    
' → logprob: -6.4953813552856445
    6. '\n' → logprob: -6.6203813552856445
    7. '' → logprob: -6.6203813552856445
    8. '   ' → logprob: -7.3703813552856445
    9. '
' → logprob: -7.7453813552856445
    10. '```' → logprob: -8.245381355285645

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08812805265188217
    2. '        
' → logprob: -2.963128089904785
    3. '<|end|>' → logprob: -4.838128089904785
    4. '
' → logprob: -5.088128089904785
    5. '   ' → logprob: -5.463128089904785
    6. 'graph' → logprob: -5.713128089904785
    7. '    
' → logprob: -6.213128089904785
    8. 'cities' → logprob: -6.713128089904785
    9. ' roads' → logprob: -7.088128089904785
    10. '```' → logprob: -7.088128089904785

Token 61: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12714658677577972
    2. ' graph' → logprob: -2.2521464824676514
    3. '       ' → logprob: -4.6271467208862305
    4. 'roads' → logprob: -7.1271467208862305
    5. 'dist' → logprob: -7.1271467208862305
    6. 'cities' → logprob: -7.5021467208862305
    7. ' roads' → logprob: -7.7521467208862305
    8. 'adj' → logprob: -8.12714672088623
    9. 'graphs' → logprob: -8.25214672088623
    10. '	graph' → logprob: -8.50214672088623

Token 62: ' Graph' (ID: 15559)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08937583118677139
    2. ' graph' → logprob: -2.5893757343292236
    3. 'cities' → logprob: -5.714375972747803
    4. 'adj' → logprob: -6.214375972747803
    5. 'roads' → logprob: -6.464375972747803
    6. 'city' → logprob: -7.339375972747803
    7. '#' → logprob: -7.464375972747803
    8. 'dist' → logprob: -7.464375972747803
    9. ' roads' → logprob: -7.714375972747803
    10. ' adj' → logprob: -8.089375495910645

Token 63: ' representation' (ID: 22311)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021596604492515326
    2. '=' → logprob: -6.252159595489502
    3. '       ' → logprob: -9.00216007232666
    4. '   ' → logprob: -9.62716007232666
    5. '[' → logprob: -11.00216007232666
    6. '<|end|>' → logprob: -12.25216007232666
    7. '```' → logprob: -12.37716007232666
    8. '        ' → logprob: -12.50216007232666
    9. '    ' → logprob: -13.37716007232666
    10. ' =
' → logprob: -13.50216007232666

Token 64: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10153158754110336
    2. ':' → logprob: -3.476531505584717
    3. 'graph' → logprob: -3.601531505584717
    4. ' graph' → logprob: -3.601531505584717
    5. ' =' → logprob: -5.726531505584717
    6. ',' → logprob: -5.851531505584717
    7. '	graph' → logprob: -6.601531505584717
    8. '<|end|>' → logprob: -6.851531505584717
    9. ' adjacency' → logprob: -8.351531982421875
    10. '=' → logprob: -8.351531982421875

Token 65: ' adjacency' (ID: 177015)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.04282606765627861
    2. 'graph' → logprob: -3.2928261756896973
    3. '       ' → logprob: -5.542826175689697
    4. '	graph' → logprob: -7.667826175689697
    5. ' defaultdict' → logprob: -9.042825698852539
    6. '```' → logprob: -9.667825698852539
    7. ' adjacency' → logprob: -9.792825698852539
    8. ' graphs' → logprob: -10.167825698852539
    9. '        ' → logprob: -10.167825698852539
    10. '   ' → logprob: -11.417825698852539

Token 66: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5786044597625732
    2. 'list' → logprob: -0.8286044597625732
    3. ' list' → logprob: -6.078604698181152
    4. ' =' → logprob: -8.703604698181152
    5. 'List' → logprob: -9.328604698181152
    6. '=' → logprob: -10.578604698181152
    7. '_' → logprob: -10.703604698181152
    8. '_lists' → logprob: -10.703604698181152
    9. '-list' → logprob: -10.828604698181152
    10. ' lists' → logprob: -12.078604698181152

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23092572391033173
    2. 'graph' → logprob: -2.2309257984161377
    3. ' graph' → logprob: -2.6059257984161377
    4. '<|end|>' → logprob: -4.730925559997559
    5. '	graph' → logprob: -5.730925559997559
    6. ':' → logprob: -5.855925559997559
    7. ',' → logprob: -6.105925559997559
    8. '   ' → logprob: -6.480925559997559
    9. ' =' → logprob: -6.855925559997559
    10. '        ' → logprob: -7.230925559997559

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07989180088043213
    2. 'graph' → logprob: -3.4548916816711426
    3. ' graph' → logprob: -3.5798916816711426
    4. '<|end|>' → logprob: -4.829891681671143
    5. '	graph' → logprob: -6.329891681671143
    6. '   ' → logprob: -6.454891681671143
    7. ',' → logprob: -6.704891681671143
    8. ':' → logprob: -7.079891681671143
    9. '        ' → logprob: -7.329891681671143
    10. '        
' → logprob: -7.329891681671143

Token 69: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.20852135121822357
    2. 'graph' → logprob: -1.7085213661193848
    3. '       ' → logprob: -5.083521366119385
    4. '	graph' → logprob: -7.583521366119385
    5. ' graphs' → logprob: -9.208520889282227
    6. '        ' → logprob: -9.208520889282227
    7. '_graph' → logprob: -10.208520889282227
    8. 'graphs' → logprob: -10.208520889282227
    9. '   ' → logprob: -10.833520889282227
    10. 'Graph' → logprob: -11.583520889282227

Token 70: ' Each' (ID: 11555)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2521120607852936
    2. 'graph' → logprob: -1.5021120309829712
    3. '       ' → logprob: -9.50211238861084
    4. '	graph' → logprob: -9.87711238861084
    5. '   ' → logprob: -10.75211238861084
    6. ' graphs' → logprob: -11.37711238861084
    7. 'graphs' → logprob: -11.87711238861084
    8. 'Graph' → logprob: -12.37711238861084
    9. '    ' → logprob: -13.00211238861084
    10. 'g' → logprob: -13.50211238861084

Token 71: ' element' (ID: 3577)
  Prédit: ' entry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entry' → logprob: -1.2055904865264893
    2. ' node' → logprob: -1.4555904865264893
    3. ' element' → logprob: -1.5805904865264893
    4. ' city' → logprob: -2.7055904865264893
    5. ' adjacency' → logprob: -2.7055904865264893
    6. ' graph' → logprob: -3.5805904865264893
    7. ' road' → logprob: -4.08059024810791
    8. 'node' → logprob: -4.33059024810791
    9. ' edge' → logprob: -4.33059024810791
    10. 'adj' → logprob: -4.83059024810791

Token 72: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03736566752195358
    2. ' in' → logprob: -3.787365674972534
    3. 'is' → logprob: -4.412365436553955
    4. '[' → logprob: -7.662365436553955
    5. 'in' → logprob: -7.662365436553955
    6. ' =' → logprob: -8.162365913391113
    7. ':' → logprob: -9.037365913391113
    8. ' of' → logprob: -9.162365913391113
    9. '[]' → logprob: -9.662365913391113
    10. ' consists' → logprob: -9.787365913391113

Token 73: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3737914562225342
    2. ' []' → logprob: -1.4987914562225342
    3. ' (' → logprob: -2.623791456222534
    4. '[' → logprob: -4.873791694641113
    5. ' [' → logprob: -5.873791694641113
    6. ' [(' → logprob: -6.748791694641113
    7. '[(' → logprob: -7.373791694641113
    8. '[node' → logprob: -7.373791694641113
    9. ' [[]' → logprob: -7.748791694641113
    10. ' list' → logprob: -8.373791694641113

Token 74: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.6110755801200867
    2. 'cost' → logprob: -1.8610756397247314
    3. ' cost' → logprob: -2.4860756397247314
    4. 'distance' → logprob: -2.4860756397247314
    5. ' neighbor' → logprob: -3.1110756397247314
    6. ' destination' → logprob: -3.8610756397247314
    7. ' distance' → logprob: -4.111075401306152
    8. 'destination' → logprob: -4.236075401306152
    9. 'node' → logprob: -4.861075401306152
    10. 'weight' → logprob: -4.861075401306152

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008999044075608253
    2. '_node' → logprob: -7.625899791717529
    3. '_city' → logprob: -8.375900268554688
    4. ' ,' → logprob: -9.500900268554688
    5. '_,' → logprob: -10.875900268554688
    6. ',node' → logprob: -10.875900268554688
    7. 'node' → logprob: -11.375900268554688
    8. 'city' → logprob: -11.500900268554688
    9. '```' → logprob: -11.625900268554688
    10. '_index' → logprob: -12.000900268554688

Token 76: ' length' (ID: 5517)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.3744908273220062
    2. 'cost' → logprob: -1.9994908571243286
    3. ' weight' → logprob: -2.624490737915039
    4. 'weight' → logprob: -2.874490737915039
    5. 'distance' → logprob: -3.499490737915039
    6. ' distance' → logprob: -4.124490737915039
    7. ' time' → logprob: -7.749490737915039
    8. 'time' → logprob: -8.374490737915039
    9. ')' → logprob: -8.499490737915039
    10. '   ' → logprob: -9.374490737915039

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1605920046567917
    2. ')' → logprob: -1.910591959953308
    3. '<|end|>' → logprob: -8.535592079162598
    4. '),' → logprob: -9.285592079162598
    5. ' ,' → logprob: -11.535592079162598
    6. 'length' → logprob: -11.660592079162598
    7. ',length' → logprob: -11.785592079162598
    8. '<|end|>' → logprob: -11.910592079162598
    9. 'distance' → logprob: -12.285592079162598
    10. '   ' → logprob: -12.410592079162598

Token 78: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8108134269714355
    2. ' cost' → logprob: -1.4358134269714355
    3. 'is' → logprob: -2.3108134269714355
    4. ' is' → logprob: -3.4358134269714355
    5. 'time' → logprob: -3.4358134269714355
    6. ' toll' → logprob: -3.5608134269714355
    7. 'danger' → logprob: -4.3108134269714355
    8. ' time' → logprob: -4.6233134269714355
    9. 'risk' → logprob: -4.9358134269714355
    10. 'price' → logprob: -4.9983134269714355

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.774276774493046e-05
    2. ',' → logprob: -10.625038146972656
    3. '),' → logprob: -12.250038146972656
    4. ' )' → logprob: -12.250038146972656
    5. '<|end|>' → logprob: -13.375038146972656
    6. ')
' → logprob: -14.625038146972656
    7. '<|end|>' → logprob: -15.125038146972656
    8. ')...' → logprob: -15.375038146972656
    9. ')

' → logprob: -15.375038146972656
    10. '   ' → logprob: -15.500038146972656

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05952036753296852
    2. ')' → logprob: -3.0595204830169678
    3. ',' → logprob: -4.809520244598389
    4. '<|end|>' → logprob: -6.684520244598389
    5. '   ' → logprob: -7.309520244598389
    6. '        
' → logprob: -9.059520721435547
    7. '
' → logprob: -9.684520721435547
    8. '\n' → logprob: -9.809520721435547
    9. '),' → logprob: -9.934520721435547
    10. '```' → logprob: -10.059520721435547

Token 81: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8845539689064026
    2. 'graph' (adapté à ' graph') → logprob: -0.8845539689064026
    3. '       ' → logprob: -1.7595539093017578
    4. '	graph' → logprob: -6.634553909301758
    5. '   ' → logprob: -8.509553909301758
    6. '_graph' → logprob: -9.134553909301758
    7. '        ' → logprob: -9.384553909301758
    8. 'Graph' → logprob: -10.009553909301758
    9. '        
' → logprob: -10.259553909301758
    10. 'graphs' → logprob: -10.259553909301758

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023675858974457
    2. '=' → logprob: -2.350236654281616
    3. '[' → logprob: -10.850236892700195
    4. ' ' → logprob: -12.600236892700195
    5. '=[]' → logprob: -13.225236892700195
    6. ')' → logprob: -13.600236892700195
    7. ']' → logprob: -13.850236892700195
    8. '   ' → logprob: -14.100236892700195
    9. '[]' → logprob: -14.475236892700195
    10. ' =[' → logprob: -14.600236892700195

Token 83: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5768321752548218
    2. ' [[]' → logprob: -0.8268321752548218
    3. ' [' → logprob: -7.076832294464111
    4. '[]' → logprob: -10.951831817626953
    5. ' defaultdict' → logprob: -11.576831817626953
    6. ' [{}' → logprob: -11.701831817626953
    7. '{' → logprob: -11.701831817626953
    8. '{}' → logprob: -13.326831817626953
    9. ' {' → logprob: -13.826831817626953
    10. 'default' → logprob: -14.201831817626953

Token 84: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7950251698493958
    2. ')' → logprob: -1.420025110244751
    3. ',' → logprob: -1.545025110244751
    4. ' for' → logprob: -2.420025110244751
    5. '       ' → logprob: -6.17002534866333
    6. ']' → logprob: -7.04502534866333
    7. '<|end|>' → logprob: -7.17002534866333
    8. ')]' → logprob: -9.170024871826172
    9. ' ,' → logprob: -9.545024871826172
    10. '(N' → logprob: -9.670024871826172

Token 85: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13422849774360657
    2. ' _' → logprob: -2.759228467941284
    3. '_' → logprob: -2.884228467941284
    4. 'range' → logprob: -5.384228706359863
    5. ' in' → logprob: -6.634228706359863
    6. '(range' → logprob: -8.509228706359863
    7. ' ' → logprob: -9.509228706359863
    8. '_range' → logprob: -9.634228706359863
    9. '<|end|>' → logprob: -10.259228706359863
    10. ' i' → logprob: -10.509228706359863

Token 86: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4753037095069885
    2. ' in' → logprob: -1.6003036499023438
    3. 'range' → logprob: -1.8503036499023438
    4. ' range' → logprob: -4.100303649902344
    5. '(range' → logprob: -6.975303649902344
    6. 'ange' → logprob: -7.100303649902344
    7. 'n' → logprob: -8.100303649902344
    8. '(n' → logprob: -9.225303649902344
    9. 'ran' → logprob: -9.475303649902344
    10. 's' → logprob: -9.475303649902344

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018152866512537003
    2. 'range' → logprob: -4.018152713775635
    3. '(range' → logprob: -12.893153190612793
    4. '	range' → logprob: -15.518153190612793
    5. ' ' → logprob: -16.143152236938477
    6. ')' → logprob: -17.018152236938477
    7. ' xrange' → logprob: -17.393152236938477
    8. ' ran' → logprob: -17.393152236938477
    9. ' rang' → logprob: -17.643152236938477
    10. ' in' → logprob: -17.643152236938477

Token 88: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06995288282632828
    2. '(' → logprob: -2.694952964782715
    3. ' (' → logprob: -11.944952964782715
    4. '(
' → logprob: -12.194952964782715
    5. ')' → logprob: -13.194952964782715
    6. '(n' → logprob: -13.444952964782715
    7. ')(' → logprob: -15.444952964782715
    8. '((' → logprob: -15.444952964782715
    9. ' ' → logprob: -15.944952964782715
    10. '(

' → logprob: -16.0699520111084

Token 89: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.214019307051785e-05
    2. ')' → logprob: -11.125032424926758
    3. ' )' → logprob: -11.250032424926758
    4. ']' → logprob: -13.125032424926758
    5. '+' → logprob: -14.625032424926758
    6. ' ]' → logprob: -14.750032424926758
    7. ')],' → logprob: -14.750032424926758
    8. ')]
' → logprob: -15.250032424926758
    9. '   ' → logprob: -15.875032424926758
    10. '       ' → logprob: -15.875032424926758

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615872822701931
    2. ' ' → logprob: -4.758615970611572
    3. ')' → logprob: -14.258615493774414
    4. ' )' → logprob: -14.508615493774414
    5. '0' → logprob: -16.008615493774414
    6. '```' → logprob: -16.508615493774414
    7. '2' → logprob: -16.758615493774414
    8. '   ' → logprob: -17.071115493774414
    9. '  ' → logprob: -18.133615493774414
    10. ' ' → logprob: -18.321115493774414

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. ')' → logprob: -15.125052452087402
    4. '```' → logprob: -15.875052452087402
    5. '2' → logprob: -16.250051498413086
    6. '0' → logprob: -16.750051498413086
    7. '  ' → logprob: -17.687551498413086
    8. '   ' → logprob: -18.125051498413086
    9. '１' → logprob: -18.187551498413086
    10. ']' → logprob: -18.437551498413086

Token 92: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0957382470369339
    2. ')]' → logprob: -2.595738172531128
    3. ']' → logprob: -4.095738410949707
    4. ')
' → logprob: -10.720738410949707
    5. '])' → logprob: -11.220738410949707
    6. ')])' → logprob: -11.470738410949707
    7. '   ' → logprob: -12.595738410949707
    8. '       ' → logprob: -12.845738410949707
    9. ' )' → logprob: -12.970738410949707
    10. '<|end|>' → logprob: -13.470738410949707

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3669624924659729
    2. '
' → logprob: -2.241962432861328
    3. '<|end|>' → logprob: -2.616962432861328
    4. '   ' → logprob: -3.116962432861328
    5. '        
' → logprob: -3.491962432861328
    6. '    
' → logprob: -4.616962432861328
    7. ' ' → logprob: -4.616962432861328
    8. '' → logprob: -4.741962432861328
    9. '  
' → logprob: -5.491962432861328
    10. '\n' → logprob: -5.616962432861328

Token 94: ' edges' (ID: 22569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6859745383262634
    2. 'for' → logprob: -0.8109745383262634
    3. '   ' → logprob: -3.685974597930908
    4. '
' → logprob: -4.935974597930908
    5. '    
' → logprob: -5.560974597930908
    6. '	for' → logprob: -5.560974597930908
    7. '<|end|>' → logprob: -5.935974597930908
    8. '       ' → logprob: -6.060974597930908
    9. ' ' → logprob: -6.435974597930908
    10. ' 
' → logprob: -6.560974597930908

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1437714844942093
    2. '=' → logprob: -2.0187714099884033
    3. ':' → logprob: -8.393771171569824
    4. '=[]' → logprob: -8.393771171569824
    5. 'for' → logprob: -8.518771171569824
    6. '.' → logprob: -8.768771171569824
    7. '<|end|>' → logprob: -9.768771171569824
    8. ' =
' → logprob: -10.393771171569824
    9. '<|end|>' → logprob: -10.518771171569824
    10. '=[]
' → logprob: -10.768771171569824

Token 96: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03810839354991913
    2. '[]' → logprob: -3.2881083488464355
    3. ' [' → logprob: -10.413108825683594
    4. ' ' → logprob: -11.538108825683594
    5. '[' → logprob: -12.038108825683594
    6. ' []
' → logprob: -12.288108825683594
    7. ' M' → logprob: -12.538108825683594
    8. ' {}' → logprob: -12.663108825683594
    9. ' [];' → logprob: -13.038108825683594
    10. '{}' → logprob: -13.663108825683594

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02760249748826027
    2. ' for' → logprob: -4.402602672576904
    3. '<|end|>' → logprob: -4.902602672576904
    4. 'for' → logprob: -5.652602672576904
    5. '   ' → logprob: -6.527602672576904
    6. '        
' → logprob: -6.652602672576904
    7. '<|end|>' → logprob: -7.527602672576904
    8. '
' → logprob: -8.527602195739746
    9. '	for' → logprob: -8.777602195739746
    10. ' ' → logprob: -9.402602195739746

Token 98: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5252698659896851
    2. ' for' → logprob: -1.025269865989685
    3. '   ' → logprob: -3.2752699851989746
    4. '       ' → logprob: -4.650269985198975
    5. '	for' → logprob: -6.275269985198975
    6. '    
' → logprob: -8.650269508361816
    7. ' ' → logprob: -9.275269508361816
    8. '\t' → logprob: -9.400269508361816
    9. '	   ' → logprob: -9.400269508361816
    10. '
' → logprob: -9.900269508361816

Token 99: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00013238313840702176
    2. '_' → logprob: -9.25013256072998
    3. ' i' → logprob: -10.25013256072998
    4. ' ' → logprob: -14.50013256072998
    5. ' ‌' → logprob: -15.75013256072998
    6. ' _
' → logprob: -16.500131607055664
    7. ' ' → logprob: -17.375131607055664
    8. '_i' → logprob: -18.375131607055664
    9. 'i' → logprob: -18.500131607055664
    10. '  ' → logprob: -18.625131607055664

Token 100: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11341837793588638
    2. ' in' → logprob: -2.2384183406829834
    3. 'i' → logprob: -8.113418579101562
    4. ' ' → logprob: -8.738418579101562
    5. 'n' → logprob: -10.488418579101562
    6. '  ' → logprob: -10.863418579101562
    7. ' i' → logprob: -11.363418579101562
    8. 'import' → logprob: -11.613418579101562
    9. '	in' → logprob: -11.613418579101562
    10. '1' → logprob: -11.863418579101562

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004940562648698688
    2. ' range' → logprob: -7.625494003295898
    3. '(range' → logprob: -12.250494003295898
    4. '```' → logprob: -15.250494003295898
    5. '	range' → logprob: -15.375494003295898
    6. 'ange' → logprob: -15.500494003295898
    7. ')' → logprob: -15.875494003295898
    8. 'm' → logprob: -16.0004940032959
    9. 'input' → logprob: -16.7504940032959
    10. '[' → logprob: -16.8754940032959

Token 102: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006803472060710192
    2. '(' → logprob: -5.631803512573242
    3. ' (' → logprob: -5.756803512573242
    4. ' M' → logprob: -10.256803512573242
    5. ' ' → logprob: -13.631803512573242
    6. '   ' → logprob: -15.756803512573242
    7. 'M' → logprob: -15.756803512573242
    8. '(m' → logprob: -16.131803512573242
    9. '	M' → logprob: -16.131803512573242
    10. ')' → logprob: -16.756803512573242

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012016133405268192
    2. ' ):' → logprob: -4.512016296386719
    3. '):
' → logprob: -7.012016296386719
    4. ')' → logprob: -10.262016296386719
    5. ' ):
' → logprob: -11.387016296386719
    6. ':' → logprob: -11.762016296386719
    7. ' )' → logprob: -11.887016296386719
    8. ',' → logprob: -13.387016296386719
    9. '():' → logprob: -13.387016296386719
    10. ' ' → logprob: -14.512016296386719

Token 104: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46567302942276
    2. '           ' → logprob: -1.7156729698181152
    3. '       ' → logprob: -2.3406729698181152
    4. ',' → logprob: -3.4656729698181152
    5. ' :' → logprob: -3.7156729698181152
    6. '   ' → logprob: -4.090672969818115
    7. '):' → logprob: -4.715672969818115
    8. ' ,' → logprob: -5.965672969818115
    9. '():' → logprob: -5.965672969818115
    10. ':
' → logprob: -6.340672969818115

Token 105: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.02080625854432583
    2. 'u' (adapté à ' u') → logprob: -4.020806312561035
    3. ' a' → logprob: -6.520806312561035
    4. 'a' → logprob: -7.770806312561035
    5. ' city' → logprob: -8.145806312561035
    6. ' s' → logprob: -8.895806312561035
    7. ' line' → logprob: -9.520806312561035
    8. ' 
' → logprob: -10.020806312561035
    9. '   ' → logprob: -10.520806312561035
    10. ' x' → logprob: -10.895806312561035

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009261108934879303
    2. ' ,' → logprob: -7.0009260177612305
    3. '<|end|>' → logprob: -11.87592601776123
    4. ',u' → logprob: -12.50092601776123
    5. ' ' → logprob: -14.00092601776123
    6. '‌,' → logprob: -14.12592601776123
    7. ',v' → logprob: -14.12592601776123
    8. ',user' → logprob: -15.00092601776123
    9. '<|end|>' → logprob: -15.50092601776123
    10. 'u' → logprob: -15.81342601776123

Token 107: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16345997154712677
    2. 'v' → logprob: -1.9134600162506104
    3. ' ' → logprob: -5.788459777832031
    4. '<|end|>' → logprob: -9.038459777832031
    5. ',v' → logprob: -11.163459777832031
    6. '	v' → logprob: -11.913459777832031
    7. 'space' → logprob: -11.913459777832031
    8. ' ,' → logprob: -12.038459777832031
    9. '_v' → logprob: -12.913459777832031
    10. '_' → logprob: -13.038459777832031

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001051984610967338
    2. ' ,' → logprob: -6.876051902770996
    3. '=' → logprob: -11.501051902770996
    4. '<|end|>' → logprob: -12.126051902770996
    5. ' ' → logprob: -13.626051902770996
    6. ' =' → logprob: -13.876051902770996
    7. ',v' → logprob: -14.626051902770996
    8. '‌,' → logprob: -15.501051902770996
    9. '<|end|>' → logprob: -15.876051902770996
    10. ',u' → logprob: -16.001052856445312

Token 109: ' d' (ID: 272)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4876834750175476
    2. 'length' → logprob: -1.4876835346221924
    3. ' l' → logprob: -2.1126835346221924
    4. 'w' → logprob: -4.112683296203613
    5. ' length' → logprob: -4.612683296203613
    6. ' w' → logprob: -4.862683296203613
    7. 'L' → logprob: -6.612683296203613
    8. 'd' → logprob: -7.112683296203613
    9. ' ' → logprob: -7.487683296203613
    10. 'len' → logprob: -7.737683296203613

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015066476771607995
    2. ' ,' → logprob: -6.501506805419922
    3. '<|end|>' → logprob: -13.126506805419922
    4. 'istance' → logprob: -14.376506805419922
    5. 'e' → logprob: -15.001506805419922
    6. 'ist' → logprob: -15.376506805419922
    7. 's' → logprob: -15.626506805419922
    8. 'elta' → logprob: -15.751506805419922
    9. 'elay' → logprob: -16.001506805419922
    10. '=' → logprob: -16.251506805419922

Token 111: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05467090383172035
    2. ' c' → logprob: -3.429670810699463
    3. 'p' → logprob: -3.929670810699463
    4. ' p' → logprob: -7.429670810699463
    5. 't' → logprob: -8.804671287536621
    6. 'l' → logprob: -9.804671287536621
    7. 'o' → logprob: -9.804671287536621
    8. ' ' → logprob: -10.054671287536621
    9. 'cost' → logprob: -10.054671287536621
    10. 'h' → logprob: -10.179671287536621

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329917907714844
    2. '=' → logprob: -1.3132991790771484
    3. ',' → logprob: -10.313299179077148
    4. ' ' → logprob: -13.313299179077148
    5. ')' → logprob: -13.688299179077148
    6. '  ' → logprob: -14.688299179077148
    7. '   ' → logprob: -16.31329917907715
    8. '=int' → logprob: -16.31329917907715
    9. ' =
' → logprob: -16.43829917907715
    10. '<|end|>' → logprob: -16.43829917907715

Token 113: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0001601539261173457
    2. 'map' → logprob: -8.750160217285156
    3. '	map' → logprob: -13.875160217285156
    4. ' ' → logprob: -14.750160217285156
    5. ' list' → logprob: -16.500160217285156
    6. '    ' → logprob: -16.750160217285156
    7. ' mapa' → logprob: -17.000160217285156
    8. ' m' → logprob: -17.250160217285156
    9. ' ' → logprob: -17.500160217285156
    10. '(map' → logprob: -18.125160217285156

Token 114: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015136697329580784
    2. '(' → logprob: -6.501513481140137
    3. '<int' → logprob: -12.251513481140137
    4. 'int' → logprob: -13.626513481140137
    5. '(in' → logprob: -13.876513481140137
    6. '[int' → logprob: -14.251513481140137
    7. '=int' → logprob: -14.251513481140137
    8. '(str' → logprob: -14.251513481140137
    9. ' (' → logprob: -14.626513481140137
    10. '(input' → logprob: -14.876513481140137

Token 115: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6207924485206604
    2. ',' → logprob: -0.8707924485206604
    3. '(input' → logprob: -3.2457923889160156
    4. ')' → logprob: -5.620792388916016
    5. '(' → logprob: -7.245792388916016
    6. 'input' → logprob: -8.995792388916016
    7. '=input' → logprob: -9.120792388916016
    8. ' input' → logprob: -9.120792388916016
    9. ' ,' → logprob: -9.745792388916016
    10. ')(' → logprob: -9.995792388916016

Token 116: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.313262403011322
    2. 'input' → logprob: -1.3132624626159668
    3. 'sys' → logprob: -15.813261985778809
    4. ' sys' → logprob: -15.813261985778809
    5. '	input' → logprob: -15.938261985778809
    6. '(input' → logprob: -16.438262939453125
    7. ')' → logprob: -16.938262939453125
    8. '_input' → logprob: -17.063262939453125
    9. '=input' → logprob: -17.063262939453125
    10. ' ' → logprob: -17.188262939453125

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.253090865968261e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -15.250009536743164
    4. ')' → logprob: -18.000009536743164
    5. '(' → logprob: -18.500009536743164
    6. '())' → logprob: -18.500009536743164
    7. '.' → logprob: -18.625009536743164
    8. '()
' → logprob: -20.125009536743164
    9. '().__' → logprob: -20.500009536743164
    10. '().'' → logprob: -20.625009536743164

Token 118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -14.375000953674316
    3. '(split' → logprob: -14.875000953674316
    4. 'strip' → logprob: -15.625000953674316
    5. 'spl' → logprob: -16.125001907348633
    6. 'rstrip' → logprob: -17.625001907348633
    7. ')' → logprob: -17.625001907348633
    8. 'plit' → logprob: -18.750001907348633
    9. '.split' → logprob: -19.625001907348633
    10. 's' → logprob: -20.625001907348633

Token 119: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001475220051361248
    2. '()' → logprob: -9.500147819519043
    3. '())' → logprob: -10.250147819519043
    4. ')
' → logprob: -10.625147819519043
    5. ' )' → logprob: -12.000147819519043
    6. ')`' → logprob: -13.125147819519043
    7. '))' → logprob: -13.500147819519043
    8. '(' → logprob: -14.375147819519043
    9. '   ' → logprob: -14.500147819519043
    10. ')}' → logprob: -14.750147819519043

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06999301165342331
    2. '            
' → logprob: -3.694993019104004
    3. '<|end|>' → logprob: -4.819993019104004
    4. '
' → logprob: -4.819993019104004
    5. '       ' → logprob: -4.944993019104004
    6. ' 
' → logprob: -5.069993019104004
    7. ')' → logprob: -5.319993019104004
    8. '        
' → logprob: -6.444993019104004
    9. ' ' → logprob: -6.694993019104004
    10. '   ' → logprob: -7.069993019104004

Token 121: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2394428551197052
    2. 'graph' (adapté à ' graph') → logprob: -2.239442825317383
    3. '           ' → logprob: -2.364442825317383
    4. '	graph' → logprob: -5.364442825317383
    5. '   ' → logprob: -6.364442825317383
    6. '
' → logprob: -6.739442825317383
    7. '       ' → logprob: -6.864442825317383
    8. ' 
' → logprob: -6.989442825317383
    9. '            
' → logprob: -7.114442825317383
    10. '            ' → logprob: -7.614442825317383

Token 122: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. '[v' → logprob: -16.375001907348633
    4. ' [' → logprob: -16.875001907348633
    5. 'u' → logprob: -18.000001907348633
    6. '```' → logprob: -18.375001907348633
    7. ')[' → logprob: -19.250001907348633
    8. '[user' → logprob: -19.625001907348633
    9. '	u' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.750001907348633

Token 123: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.20672664046287537
    2. ').' → logprob: -1.7067266702651978
    3. '[u' → logprob: -5.956726551055908
    4. '[' → logprob: -6.581726551055908
    5. '.append' → logprob: -7.206726551055908
    6. ')' → logprob: -8.706727027893066
    7. '       ' → logprob: -9.081727027893066
    8. '           ' → logprob: -9.456727027893066
    9. ']' → logprob: -9.706727027893066
    10. ' ].' → logprob: -9.956727027893066

Token 124: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.088346359931165e-07
    2. ' append' → logprob: -14.375000953674316
    3. '.append' → logprob: -15.750000953674316
    4. 'app' → logprob: -16.0
    5. 'appen' → logprob: -17.625
    6. '_append' → logprob: -17.75
    7. 'push' → logprob: -17.875
    8. ' ' → logprob: -18.5
    9. 'Append' → logprob: -19.0
    10. '	append' → logprob: -19.375

Token 125: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011706985533237457
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -14.876171112060547
    4. '(v' → logprob: -16.376171112060547
    5. ' ((' → logprob: -18.001171112060547
    6. ' (' → logprob: -18.251171112060547
    7. '([' → logprob: -18.251171112060547
    8. '<|end|>' → logprob: -18.876171112060547
    9. '(('' → logprob: -19.376171112060547
    10. '(((' → logprob: -20.376171112060547

Token 126: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3306015716807451e-05
    2. ' v' → logprob: -11.25001335144043
    3. ')v' → logprob: -16.62501335144043
    4. '	v' → logprob: -16.87501335144043
    5. '
' → logprob: -18.25001335144043
    6. 'vi' → logprob: -19.75001335144043
    7. ',v' → logprob: -20.00001335144043
    8. '   ' → logprob: -20.25001335144043
    9. 'vq' → logprob: -20.75001335144043
    10. 'vj' → logprob: -21.00001335144043

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005600620643235743
    2. ' ,' → logprob: -7.500560283660889
    3. ',d' → logprob: -12.37555980682373
    4. '<|end|>' → logprob: -13.50055980682373
    5. '‌,' → logprob: -14.87555980682373
    6. '`,' → logprob: -15.00055980682373
    7. '```' → logprob: -15.75055980682373
    8. ',
' → logprob: -15.75055980682373
    9. '),' → logprob: -16.750560760498047
    10. ' ' → logprob: -16.875560760498047

Token 128: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3132745027542114
    2. 'd' → logprob: -1.3132745027542114
    3. ')d' → logprob: -12.563274383544922
    4. ' ' → logprob: -13.063274383544922
    5. ' 
' → logprob: -13.313274383544922
    6. '
' → logprob: -13.438274383544922
    7. ',d' → logprob: -13.813274383544922
    8. '    ' → logprob: -13.813274383544922
    9. ' ' → logprob: -14.063274383544922
    10. '	d' → logprob: -14.313274383544922

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -13.625000953674316
    3. ',c' → logprob: -17.000001907348633
    4. ')' → logprob: -17.875001907348633
    5. ',
' → logprob: -18.500001907348633
    6. ',

' → logprob: -18.625001907348633
    7. '‌,' → logprob: -18.875001907348633
    8. '),' → logprob: -19.750001907348633
    9. 'c' → logprob: -20.250001907348633
    10. ',d' → logprob: -20.625001907348633

Token 130: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0382581427693367
    2. 'c' → logprob: -3.2882580757141113
    3. ' ' → logprob: -8.91325855255127
    4. ' ' → logprob: -10.53825855255127
    5. ' 
' → logprob: -11.03825855255127
    6. ')' → logprob: -11.28825855255127
    7. ' )' → logprob: -11.41325855255127
    8. ')c' → logprob: -11.78825855255127
    9. '<|end|>' → logprob: -12.41325855255127
    10. '	c' → logprob: -14.03825855255127

Token 131: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0016932693542912602
    2. '))
' → logprob: -6.626693248748779
    3. ')' → logprob: -8.251693725585938
    4. ' ))' → logprob: -9.376693725585938
    5. ',' → logprob: -11.001693725585938
    6. '));' → logprob: -13.626693725585938
    7. ')
' → logprob: -14.001693725585938
    8. '),' → logprob: -14.126693725585938
    9. ' )' → logprob: -14.751693725585938
    10. ' ))
' → logprob: -14.876693725585938

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.615255839889869e-05
    2. '<|end|>' → logprob: -9.500096321105957
    3. '	       ' → logprob: -12.375096321105957
    4. '		' → logprob: -12.375096321105957
    5. '   ' → logprob: -13.000096321105957
    6. '          ' → logprob: -13.125096321105957
    7. ',' → logprob: -13.125096321105957
    8. '       ' → logprob: -13.250096321105957
    9. '<|end|>' → logprob: -13.250096321105957
    10. ' ' → logprob: -14.375096321105957

Token 133: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.4887988567352295
    2. ' graph' → logprob: -0.9887988567352295
    3. '           ' → logprob: -4.488799095153809
    4. '	graph' → logprob: -5.738799095153809
    5. '   ' → logprob: -9.613799095153809
    6. '(graph' → logprob: -10.363799095153809
    7. '		' → logprob: -11.363799095153809
    8. ' ' → logprob: -11.738799095153809
    9. '.graph' → logprob: -11.988799095153809
    10. '    ' → logprob: -12.238799095153809

Token 134: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0004919105558656156
    2. '[u' → logprob: -7.625492095947266
    3. '[' → logprob: -12.625492095947266
    4. 'v' → logprob: -14.875492095947266
    5. '[s' → logprob: -17.125492095947266
    6. '[z' → logprob: -17.750492095947266
    7. '[c' → logprob: -18.125492095947266
    8. '[t' → logprob: -18.125492095947266
    9. '```' → logprob: -18.125492095947266
    10. '[x' → logprob: -18.250492095947266

Token 135: '].' (ID: 1651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13670995831489563
    2. ').' → logprob: -2.1367099285125732
    3. '.append' → logprob: -5.386710166931152
    4. '.' → logprob: -5.886710166931152
    5. '].' → logprob: -6.261710166931152
    6. ')' → logprob: -8.386710166931152
    7. '           ' → logprob: -9.511710166931152
    8. ' ,' → logprob: -10.011710166931152
    9. '[' → logprob: -10.386710166931152
    10. '}.' → logprob: -10.761710166931152

Token 136: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. ' append' → logprob: -14.000001907348633
    3. '.append' → logprob: -14.125001907348633
    4. 'appen' → logprob: -15.000001907348633
    5. '	append' → logprob: -16.000001907348633
    6. '_append' → logprob: -17.750001907348633
    7. 'app' → logprob: -17.875001907348633
    8. 'prepend' → logprob: -18.500001907348633
    9. 'Append' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.375001907348633

Token 137: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005432962439954281
    2. ' (' → logprob: -6.130433082580566
    3. '(' → logprob: -6.255433082580566
    4. '(v' → logprob: -6.880433082580566
    5. ' ((' → logprob: -8.255433082580566
    6. '<|end|>' → logprob: -11.130433082580566
    7. '(u' → logprob: -11.380433082580566
    8. '(
' → logprob: -11.880433082580566
    9. ' ' → logprob: -14.255433082580566
    10. ')((' → logprob: -14.505433082580566

Token 138: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.011734114959836006
    2. 'u' → logprob: -4.5117340087890625
    3. '(' → logprob: -7.6367340087890625
    4. ' (' → logprob: -8.636734008789062
    5. ' u' → logprob: -11.386734008789062
    6. '(
' → logprob: -12.261734008789062
    7. '[u' → logprob: -12.761734008789062
    8. ',' → logprob: -13.511734008789062
    9. '
' → logprob: -13.511734008789062
    10. '<|end|>' → logprob: -13.886734008789062

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002979240380227566
    2. ' ,' → logprob: -8.125297546386719
    3. '‌,' → logprob: -14.750297546386719
    4. ',v' → logprob: -15.000297546386719
    5. '`,' → logprob: -15.375297546386719
    6. ',d' → logprob: -15.375297546386719
    7. ',
' → logprob: -15.500297546386719
    8. ')' → logprob: -16.25029754638672
    9. '),' → logprob: -16.37529754638672
    10. '```' → logprob: -16.87529754638672

Token 140: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02326388470828533
    2. 'd' → logprob: -3.773263931274414
    3. ' ' → logprob: -11.773263931274414
    4. '<|end|>' → logprob: -12.898263931274414
    5. '	d' → logprob: -13.648263931274414
    6. ' ' → logprob: -13.648263931274414
    7. ',d' → logprob: -13.648263931274414
    8. ',' → logprob: -13.648263931274414
    9. ' 
' → logprob: -14.023263931274414
    10. ')d' → logprob: -14.148263931274414

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ' ,' → logprob: -8.625182151794434
    3. ',c' → logprob: -13.750182151794434
    4. ',
' → logprob: -14.125182151794434
    5. '           ' → logprob: -16.375181198120117
    6. '```' → logprob: -16.375181198120117
    7. '‌,' → logprob: -16.625181198120117
    8. ')' → logprob: -16.750181198120117
    9. '),' → logprob: -17.125181198120117
    10. '   ' → logprob: -17.250181198120117

Token 142: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.006818146910518408
    2. 'c' → logprob: -5.0068182945251465
    3. ' ' → logprob: -9.756817817687988
    4. ' ' → logprob: -10.381817817687988
    5. ',' → logprob: -12.381817817687988
    6. ' 
' → logprob: -12.381817817687988
    7. ' ,' → logprob: -13.506817817687988
    8. '<|end|>' → logprob: -13.881817817687988
    9. ' )' → logprob: -14.381817817687988
    10. ')' → logprob: -14.381817817687988

Token 143: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06209954991936684
    2. '))' → logprob: -2.8120994567871094
    3. ')
' → logprob: -9.18709945678711
    4. '))
' → logprob: -10.81209945678711
    5. ' )' → logprob: -11.93709945678711
    6. ')}' → logprob: -13.68709945678711
    7. ')))' → logprob: -14.43709945678711
    8. ' ))' → logprob: -15.68709945678711
    9. '       ' → logprob: -15.81209945678711
    10. ')

' → logprob: -15.93709945678711

Token 144: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.491991251707077
    2. 'edges' (adapté à ' edges') → logprob: -0.9919912815093994
    3. '       ' → logprob: -4.61699104309082
    4. '           ' → logprob: -4.99199104309082
    5. '   ' → logprob: -7.24199104309082
    6. '.edges' → logprob: -9.24199104309082
    7. '(edges' → logprob: -9.67949104309082
    8. '```' → logprob: -10.49199104309082
    9. '
' → logprob: -10.99199104309082
    10. ' ' → logprob: -11.17949104309082

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007662582211196423
    2. '.' → logprob: -4.882662773132324
    3. '.app' → logprob: -10.882662773132324
    4. '.ap' → logprob: -11.507662773132324
    5. ' .' → logprob: -11.632662773132324
    6. '<|end|>' → logprob: -12.382662773132324
    7. '.extend' → logprob: -12.632662773132324
    8. ').' → logprob: -12.882662773132324
    9. '.add' → logprob: -13.007662773132324
    10. '.push' → logprob: -13.007662773132324

Token 147: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00019901065388694406
    2. '(u' → logprob: -9.125199317932129
    3. '(' → logprob: -9.375199317932129
    4. ' ((' → logprob: -12.500199317932129
    5. '(((' → logprob: -14.125199317932129
    6. '([' → logprob: -15.500199317932129
    7. '(
' → logprob: -16.000198364257812
    8. '(v' → logprob: -16.875198364257812
    9. '```' → logprob: -17.000198364257812
    10. ')((' → logprob: -17.125198364257812

Token 148: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0012496389681473374
    2. ' u' → logprob: -7.00124979019165
    3. '(u' → logprob: -8.751249313354492
    4. 'v' → logprob: -9.251249313354492
    5. 'd' → logprob: -10.126249313354492
    6. '   ' → logprob: -11.376249313354492
    7. ')' → logprob: -11.626249313354492
    8. '[u' → logprob: -12.376249313354492
    9. '0' → logprob: -12.751249313354492
    10. ' (' → logprob: -12.876249313354492

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017505438881926239
    2. ',v' → logprob: -8.750175476074219
    3. ',
' → logprob: -11.750175476074219
    4. ' ,' → logprob: -12.250175476074219
    5. ')' → logprob: -13.875175476074219
    6. ',u' → logprob: -14.250175476074219
    7. '<|end|>' → logprob: -14.250175476074219
    8. ',

' → logprob: -14.500175476074219
    9. 'v' → logprob: -14.875175476074219
    10. '‌,' → logprob: -15.250175476074219

Token 150: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25214672088623047
    2. ' v' → logprob: -1.5021467208862305
    3. ',v' → logprob: -9.12714672088623
    4. ',' → logprob: -10.25214672088623
    5. ' ' → logprob: -10.50214672088623
    6. '<|end|>' → logprob: -10.75214672088623
    7. '	v' → logprob: -12.37714672088623
    8. ')v' → logprob: -12.62714672088623
    9. '0' → logprob: -12.75214672088623
    10. ' 
' → logprob: -12.75214672088623

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015872348740231246
    2. '))' → logprob: -9.250158309936523
    3. ')' → logprob: -10.125158309936523
    4. ' ,' → logprob: -11.625158309936523
    5. ',
' → logprob: -12.250158309936523
    6. ',d' → logprob: -12.875158309936523
    7. ',)' → logprob: -13.750158309936523
    8. '),' → logprob: -13.750158309936523
    9. ',u' → logprob: -14.000158309936523
    10. '<|end|>' → logprob: -14.250158309936523

Token 152: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5761003494262695
    2. 'd' → logprob: -0.8261003494262695
    3. ')' → logprob: -9.70110034942627
    4. ')d' → logprob: -10.57610034942627
    5. ' ' → logprob: -10.95110034942627
    6. 'c' → logprob: -11.32610034942627
    7. ' c' → logprob: -11.70110034942627
    8. ' )' → logprob: -11.82610034942627
    9. ',d' → logprob: -12.57610034942627
    10. '	d' → logprob: -13.01360034942627

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016802136087790132
    2. '))' → logprob: -9.250167846679688
    3. ')' → logprob: -10.000167846679688
    4. ' ,' → logprob: -11.375167846679688
    5. ',
' → logprob: -12.000167846679688
    6. ',c' → logprob: -12.250167846679688
    7. ',

' → logprob: -13.625167846679688
    8. '),' → logprob: -14.000167846679688
    9. ',)' → logprob: -14.125167846679688
    10. ')))' → logprob: -15.125167846679688

Token 154: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28115394711494446
    2. ' c' → logprob: -1.406153917312622
    3. ' 
' → logprob: -13.781153678894043
    4. ' ' → logprob: -13.781153678894043
    5. ' ' → logprob: -14.281153678894043
    6. ')c' → logprob: -15.156153678894043
    7. ')' → logprob: -15.406153678894043
    8. '	c' → logprob: -15.656153678894043
    9. '
' → logprob: -15.906153678894043
    10. ',' → logprob: -16.53115463256836

Token 155: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018153687939047813
    2. '))' → logprob: -4.018153667449951
    3. ' )' → logprob: -13.76815414428711
    4. ')
' → logprob: -13.89315414428711
    5. ',' → logprob: -14.01815414428711
    6. ')))' → logprob: -14.64315414428711
    7. '),' → logprob: -15.64315414428711
    8. '))
' → logprob: -16.14315414428711
    9. ',)' → logprob: -16.14315414428711
    10. ')}' → logprob: -16.64315414428711

Token 156: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09545546770095825
    2. '   ' → logprob: -3.2204554080963135
    3. '       ' → logprob: -3.4704554080963135
    4. '<|end|>' → logprob: -4.595455646514893
    5. '    
' → logprob: -5.720455646514893
    6. '        
' → logprob: -5.970455646514893
    7. '

' → logprob: -6.595455646514893
    8. '' → logprob: -7.845455646514893
    9. ')' → logprob: -7.970455646514893
    10. '  
' → logprob: -8.345455169677734

Token 157: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.031460803002119064
    2. 'distance' → logprob: -4.531460762023926
    3. '#' (adapté à ' #') → logprob: -4.656460762023926
    4. 'def' → logprob: -5.656460762023926
    5. ' dist' → logprob: -6.156460762023926
    6. '       ' → logprob: -6.156460762023926
    7. 'import' → logprob: -7.031460762023926
    8. '   ' → logprob: -8.406460762023926
    9. 'visited' → logprob: -8.781460762023926
    10. 'max' → logprob: -8.906460762023926

Token 158: ' Step' (ID: 22291)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08421681076288223
    2. '#' → logprob: -3.084216833114624
    3. 'def' → logprob: -4.084216594696045
    4. 'distance' → logprob: -4.834216594696045
    5. ' dist' → logprob: -5.459216594696045
    6. 'import' → logprob: -6.209216594696045
    7. 'dp' → logprob: -7.209216594696045
    8. 'INF' → logprob: -7.834216594696045
    9. 'start' → logprob: -8.084217071533203
    10. 'visited' → logprob: -8.209217071533203

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1545562744140625
    2. '1' → logprob: -1.4045562744140625
    3. ' =' → logprob: -1.4045562744140625
    4. '   ' → logprob: -1.9045562744140625
    5. '    ' → logprob: -4.4045562744140625
    6. 'def' → logprob: -4.7795562744140625
    7. '_' → logprob: -5.4045562744140625
    8. '       ' → logprob: -5.4045562744140625
    9. '  ' → logprob: -5.5295562744140625
    10. ':' → logprob: -5.7795562744140625

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006183321587741375
    2. ' ' → logprob: -5.25618314743042
    3. '0' → logprob: -8.131183624267578
    4. '=' → logprob: -8.256183624267578
    5. ' =' → logprob: -8.381183624267578
    6. ':' → logprob: -9.756183624267578
    7. '   ' → logprob: -10.006183624267578
    8. 'in' → logprob: -10.756183624267578
    9. '       ' → logprob: -11.631183624267578
    10. '#' → logprob: -11.756183624267578

Token 161: ':' (ID: 25)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.13261878490448
    2. 'dist' → logprob: -1.25761878490448
    3. ' distances' → logprob: -1.88261878490448
    4. '       ' → logprob: -2.3826189041137695
    5. ' dist' → logprob: -2.8826189041137695
    6. ':' → logprob: -3.7576189041137695
    7. '   ' → logprob: -3.7576189041137695
    8. ' distance' → logprob: -3.8826189041137695
    9. 'import' → logprob: -4.8826189041137695
    10. ' #' → logprob: -5.5076189041137695

Token 162: ' Use' (ID: 7649)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15545795857906342
    2. ' dist' → logprob: -3.2804579734802246
    3. 'distance' → logprob: -3.5304579734802246
    4. '#' → logprob: -3.6554579734802246
    5. 'def' → logprob: -4.155457973480225
    6. 'd' → logprob: -4.530457973480225
    7. 'import' → logprob: -4.905457973480225
    8. ' distances' → logprob: -5.280457973480225
    9. 'heap' → logprob: -6.655457973480225
    10. 'cost' → logprob: -6.780457973480225

Token 163: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.551482081413269
    2. 'D' → logprob: -0.926482081413269
    3. 'd' → logprob: -4.551482200622559
    4. 'heap' → logprob: -4.926482200622559
    5. ' heap' → logprob: -5.051482200622559
    6. '```' → logprob: -6.801482200622559
    7. ' d' → logprob: -7.051482200622559
    8. ' a' → logprob: -7.051482200622559
    9. 'prim' → logprob: -8.301482200622559
    10. 'a' → logprob: -8.801482200622559

Token 164: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.023685995489358902
    2. 'ijk' → logprob: -3.773685932159424
    3. 'ij' → logprob: -7.898685932159424
    4. 'i' → logprob: -10.023686408996582
    5. 'jik' → logprob: -11.398686408996582
    6. 'ijks' → logprob: -12.273686408996582
    7. 'ik' → logprob: -12.398686408996582
    8. '   ' → logprob: -13.398686408996582
    9. 'ijs' → logprob: -14.398686408996582
    10. 'is' → logprob: -15.023686408996582

Token 165: ''s' (ID: 885)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26815998554229736
    2. '(graph' → logprob: -2.643159866333008
    3. '(' → logprob: -3.018159866333008
    4. '   ' → logprob: -4.018159866333008
    5. ' for' → logprob: -4.143159866333008
    6. '(distance' → logprob: -4.143159866333008
    7. ''s' → logprob: -4.268159866333008
    8. '(queue' → logprob: -4.768159866333008
    9. ' distances' → logprob: -5.018159866333008
    10. 'distance' → logprob: -5.143159866333008

Token 166: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.6336175203323364
    2. 'algorithm' → logprob: -0.7586175203323364
    3. ' to' → logprob: -7.383617401123047
    4. '_algorithm' → logprob: -8.133617401123047
    5. ' shortest' → logprob: -10.633617401123047
    6. 'Algorithm' → logprob: -11.008617401123047
    7. 'to' → logprob: -11.133617401123047
    8. 'algo' → logprob: -11.758617401123047
    9. '```' → logprob: -11.758617401123047
    10. ' for' → logprob: -11.883617401123047

Token 167: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6840109825134277
    2. '   ' → logprob: -1.8090109825134277
    3. 'distance' → logprob: -2.8090109825134277
    4. 'def' → logprob: -2.9340109825134277
    5. '(distance' → logprob: -3.0590109825134277
    6. ' to' → logprob: -3.1840109825134277
    7. 'dist' → logprob: -3.1840109825134277
    8. '       ' → logprob: -3.4340109825134277
    9. ' for' → logprob: -4.309010982513428
    10. 'import' → logprob: -5.059010982513428

Token 168: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07335406541824341
    2. 'node' → logprob: -2.9483540058135986
    3. 'city' → logprob: -4.698354244232178
    4. 'the' → logprob: -6.073354244232178
    5. 'source' → logprob: -6.073354244232178
    6. ' node' → logprob: -6.198354244232178
    7. ' city' → logprob: -6.948354244232178
    8. '(' → logprob: -7.698354244232178
    9. ' ' → logprob: -8.44835376739502
    10. 'vertex' → logprob: -8.82335376739502

Token 169: ' capital' (ID: 9029)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014376575127243996
    2. 'source' → logprob: -4.889376640319824
    3. 'start' → logprob: -6.139376640319824
    4. '0' → logprob: -6.264376640319824
    5. ' source' → logprob: -7.014376640319824
    6. ' ' → logprob: -8.389376640319824
    7. 'import' → logprob: -8.514376640319824
    8. 'capital' → logprob: -8.639376640319824
    9. 'starting' → logprob: -8.889376640319824
    10. 's' → logprob: -9.014376640319824

Token 170: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3477795124053955
    2. '   ' → logprob: -1.3477795124053955
    3. ' to' → logprob: -1.5977795124053955
    4. ' (' → logprob: -1.5977795124053955
    5. '(cap' → logprob: -3.9727795124053955
    6. 'def' → logprob: -4.347779273986816
    7. '(city' → logprob: -4.722779273986816
    8. ' ' → logprob: -4.972779273986816
    9. '1' → logprob: -5.472779273986816
    10. ',' → logprob: -5.472779273986816

Token 171: 'city' (ID: 17500)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000954694114625454
    2. ' ' → logprob: -7.000954627990723
    3. ')' → logprob: -11.250954627990723
    4. '0' → logprob: -11.750954627990723
    5. 'city' → logprob: -11.875954627990723
    6. ' city' → logprob: -12.375954627990723
    7. 'node' → logprob: -13.250954627990723
    8. '   ' → logprob: -13.500954627990723
    9. 'def' → logprob: -13.750954627990723
    10. '       ' → logprob: -13.875954627990723

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5018016695976257
    2. '=' → logprob: -1.3768017292022705
    3. ' =' → logprob: -2.1268017292022705
    4. ' ' → logprob: -4.001801490783691
    5. ',' → logprob: -6.376801490783691
    6. ')' → logprob: -6.751801490783691
    7. '(' → logprob: -7.126801490783691
    8. '0' → logprob: -7.501801490783691
    9. ' (' → logprob: -8.626801490783691
    10. ' )' → logprob: -9.501801490783691

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003520277969073504
    2. ' ' → logprob: -8.000351905822754
    3. '=' → logprob: -11.750351905822754
    4. ')' → logprob: -12.750351905822754
    5. ' =' → logprob: -13.125351905822754
    6. '0' → logprob: -13.375351905822754
    7. '(' → logprob: -14.375351905822754
    8. '`' → logprob: -14.875351905822754
    9. ',' → logprob: -15.375351905822754
    10. 'city' → logprob: -15.750351905822754

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10118106752634048
    2. ',' → logprob: -3.3511810302734375
    3. ' )' → logprob: -3.3511810302734375
    4. ' to' → logprob: -3.7261810302734375
    5. '   ' → logprob: -6.4761810302734375
    6. ' ,' → logprob: -8.226181030273438
    7. 'to' → logprob: -10.101181030273438
    8. 'def' → logprob: -10.226181030273438
    9. ')
' → logprob: -10.726181030273438
    10. ' for' → logprob: -11.351181030273438

Token 175: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8944280743598938
    2. '       ' → logprob: -1.144428014755249
    3. '
' → logprob: -1.644428014755249
    4. ' to' → logprob: -3.769428014755249
    5. '    ' → logprob: -4.644428253173828
    6. ' ' → logprob: -5.019428253173828
    7. '        
' → logprob: -5.144428253173828
    8. '' → logprob: -5.269428253173828
    9. '    
' → logprob: -5.644428253173828
    10. 'import' → logprob: -5.644428253173828

Token 176: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3309214413166046
    2. ' dist' → logprob: -1.4559214115142822
    3. '       ' → logprob: -3.8309214115142822
    4. 'distance' → logprob: -4.705921649932861
    5. ' distances' → logprob: -4.705921649932861
    6. ' distance' → logprob: -5.705921649932861
    7. 'import' → logprob: -5.955921649932861
    8. '   ' → logprob: -6.955921649932861
    9. ' import' → logprob: -6.955921649932861
    10. '        
' → logprob: -8.455921173095703

Token 177: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21606628596782684
    2. ' dist' → logprob: -1.7160662412643433
    3. '       ' → logprob: -5.216066360473633
    4. 'distance' → logprob: -5.841066360473633
    5. 'import' → logprob: -6.091066360473633
    6. ' distances' → logprob: -6.091066360473633
    7. ' distance' → logprob: -7.341066360473633
    8. ' import' → logprob: -7.466066360473633
    9. '   ' → logprob: -8.841066360473633
    10. '```' → logprob: -9.966066360473633

Token 178: ' get' (ID: 717)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5798126459121704
    2. ' find' → logprob: -0.8298126459121704
    3. 'calculate' → logprob: -6.579812526702881
    4. 'compute' → logprob: -7.079812526702881
    5. 'get' → logprob: -7.329812526702881
    6. 'det' → logprob: -7.579812526702881
    7. ' compute' → logprob: -8.454813003540039
    8. ' get' → logprob: -9.329813003540039
    9. ' calculate' → logprob: -9.454813003540039
    10. 'dist' → logprob: -9.829813003540039

Token 179: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19084087014198303
    2. ' distances' → logprob: -2.19084095954895
    3. ' the' → logprob: -3.69084095954895
    4. 'distance' → logprob: -4.190840721130371
    5. 'the' → logprob: -4.815840721130371
    6. ' shortest' → logprob: -5.065840721130371
    7. ' dist' → logprob: -5.315840721130371
    8. 'short' → logprob: -6.565840721130371
    9. ' distance' → logprob: -7.815840721130371
    10. '(dist' → logprob: -8.440840721130371

Token 180: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2384873479604721
    2. '_dist' → logprob: -1.8634873628616333
    3. ' distances' → logprob: -3.7384872436523438
    4. '_paths' → logprob: -4.363487243652344
    5. 'distance' → logprob: -4.488487243652344
    6. '_path' → logprob: -5.738487243652344
    7. '_distance' → logprob: -5.863487243652344
    8. 'paths' → logprob: -6.363487243652344
    9. 'path' → logprob: -7.113487243652344
    10. ' paths' → logprob: -8.738487243652344

Token 181: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011304336600005627
    2. ' and' → logprob: -5.8863043785095215
    3. ' to' → logprob: -6.0113043785095215
    4. '[]' → logprob: -6.2613043785095215
    5. 'dist' → logprob: -7.1363043785095215
    6. 'from' → logprob: -7.3863043785095215
    7. '_to' → logprob: -8.011303901672363
    8. 'and' → logprob: -8.136303901672363
    9. ' from' → logprob: -8.136303901672363
    10. ',' → logprob: -8.136303901672363

Token 182: ' capital' (ID: 9029)
  Prédit: ' city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.3516857326030731
    2. 'city' → logprob: -1.4766857624053955
    3. '1' → logprob: -2.8516857624053955
    4. ' ' → logprob: -4.851685523986816
    5. 'the' → logprob: -6.851685523986816
    6. ' the' → logprob: -6.976685523986816
    7. ' node' → logprob: -9.226685523986816
    8. 'capital' → logprob: -9.226685523986816
    9. 'node' → logprob: -9.476685523986816
    10. ' each' → logprob: -9.476685523986816

Token 183: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1624668836593628
    2. 'dist' → logprob: -2.9124670028686523
    3. ' and' → logprob: -3.7874670028686523
    4. 's' → logprob: -3.7874670028686523
    5. ' distances' → logprob: -4.287467002868652
    6. ',' → logprob: -5.037467002868652
    7. ' ' → logprob: -5.412467002868652
    8. '[]' → logprob: -5.662467002868652
    9. '   ' → logprob: -5.912467002868652
    10. '_dist' → logprob: -5.912467002868652

Token 184: ' each' (ID: 2454)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3021847605705261
    2. 'each' → logprob: -1.802184820175171
    3. 'every' → logprob: -2.927184820175171
    4. ' all' → logprob: -3.427184820175171
    5. ' each' → logprob: -5.177184581756592
    6. ' every' → logprob: -5.552184581756592
    7. 'other' → logprob: -8.92718505859375
    8. 'city' → logprob: -9.17718505859375
    9. 'any' → logprob: -11.05218505859375
    10. 'everyone' → logprob: -11.30218505859375

Token 185: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.16857676208019257
    2. 'city' → logprob: -1.918576717376709
    3. ' node' → logprob: -5.043576717376709
    4. 'node' → logprob: -6.293576717376709
    5. ' ' → logprob: -11.918577194213867
    6. 'vertex' → logprob: -12.293577194213867
    7. ' vertex' → logprob: -12.543577194213867
    8. '_city' → logprob: -14.418577194213867
    9. ')' → logprob: -14.543577194213867
    10. 'cities' → logprob: -14.668577194213867

Token 186: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1780117154121399
    2. '       ' → logprob: -2.178011655807495
    3. '   ' → logprob: -3.678011655807495
    4. 'distance' → logprob: -5.178011894226074
    5. ' distances' → logprob: -5.303011894226074
    6. 'dist' → logprob: -5.678011894226074
    7. '        
' → logprob: -5.803011894226074
    8. '    
' → logprob: -5.928011894226074
    9. '    ' → logprob: -6.678011894226074
    10. '' → logprob: -7.303011894226074

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5531532168388367
    2. '
' → logprob: -0.9281532168388367
    3. '        
' → logprob: -3.8031532764434814
    4. ',' → logprob: -7.178153038024902
    5. 'distance' → logprob: -7.178153038024902
    6. '    
' → logprob: -7.303153038024902
    7. '   ' → logprob: -7.428153038024902
    8. '
' → logprob: -7.428153038024902
    9. '    ' → logprob: -7.678153038024902
    10. 'dist' → logprob: -7.803153038024902

Token 188: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0470990315079689
    2. '       ' → logprob: -3.5470991134643555
    3. ' dist' → logprob: -4.6720991134643555
    4. 'distance' → logprob: -5.5470991134643555
    5. '   ' → logprob: -5.9220991134643555
    6. ' distances' → logprob: -7.6720991134643555
    7. 'import' → logprob: -7.7970991134643555
    8. '        
' → logprob: -9.047099113464355
    9. ' distance' → logprob: -9.422099113464355
    10. '
' → logprob: -9.422099113464355

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019694596529006958
    2. '=' → logprob: -4.519694805145264
    3. ',' → logprob: -4.769694805145264
    4. '[' → logprob: -9.269694328308105
    5. '[]' → logprob: -11.894694328308105
    6. ' ,' → logprob: -12.019694328308105
    7. '=[' → logprob: -12.644694328308105
    8. ')' → logprob: -12.644694328308105
    9. ' =[' → logprob: -12.769694328308105
    10. ' ' → logprob: -13.269694328308105

Token 190: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001902458956465125
    2. '[int' → logprob: -6.5019025802612305
    3. '[node' → logprob: -9.62690258026123
    4. '[N' → logprob: -9.87690258026123
    5. '[input' → logprob: -10.37690258026123
    6. '[n' → logprob: -10.50190258026123
    7. '[len' → logprob: -10.50190258026123
    8. '[num' → logprob: -10.87690258026123
    9. '[in' → logprob: -11.00190258026123
    10. '[u' → logprob: -11.25190258026123

Token 191: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.394135612528771e-05
    2. ' float' → logprob: -10.625043869018555
    3. '10' → logprob: -11.250043869018555
    4. 'int' → logprob: -12.250043869018555
    5. 'sys' → logprob: -13.625043869018555
    6. '   ' → logprob: -14.625043869018555
    7. '	float' → logprob: -16.375043869018555
    8. '(float' → logprob: -17.000043869018555
    9. '1' → logprob: -17.500043869018555
    10. ' ' → logprob: -17.750043869018555

Token 192: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.875004768371582
    3. '("' → logprob: -13.125004768371582
    4. ''in' → logprob: -15.875004768371582
    5. '('-' → logprob: -16.5000057220459
    6. ' ('' → logprob: -16.7500057220459
    7. ''' → logprob: -16.7500057220459
    8. ']' → logprob: -17.5000057220459
    9. '(in' → logprob: -17.7500057220459
    10. 'inf' → logprob: -18.1250057220459

Token 193: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.512236498361744e-07
    2. 'in' → logprob: -14.875000953674316
    3. ''' → logprob: -16.375
    4. 'info' → logprob: -17.875
    5. ''in' → logprob: -18.125
    6. ' inf' → logprob: -18.75
    7. 'INF' → logprob: -19.375
    8. 'Inf' → logprob: -19.375
    9. '')' → logprob: -19.5
    10. '_inf' → logprob: -19.875

Token 194: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.015785526484251022
    2. ')' → logprob: -4.2657856941223145
    3. ']' → logprob: -7.1407856941223145
    4. ' )' → logprob: -7.6407856941223145
    5. '')]' → logprob: -8.140785217285156
    6. '),' → logprob: -10.640785217285156
    7. ',' → logprob: -11.890785217285156
    8. ' ]' → logprob: -12.015785217285156
    9. '   ' → logprob: -12.515785217285156
    10. '']' → logprob: -12.765785217285156

Token 195: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027047686278820038
    2. ' for' → logprob: -3.902047634124756
    3. 'for' → logprob: -6.152047634124756
    4. ' ]' → logprob: -6.277047634124756
    5. ']*' → logprob: -6.777047634124756
    6. ']*(' → logprob: -7.027047634124756
    7. ',' → logprob: -8.527048110961914
    8. '[' → logprob: -9.277048110961914
    9. '(' → logprob: -9.777048110961914
    10. ')' → logprob: -10.777048110961914

Token 196: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02988794445991516
    2. ' (' → logprob: -3.5298879146575928
    3. '(' → logprob: -9.404888153076172
    4. '(n' → logprob: -10.029888153076172
    5. '   ' → logprob: -12.904888153076172
    6. '((' → logprob: -13.154888153076172
    7. ' ' → logprob: -13.154888153076172
    8. '(len' → logprob: -13.779888153076172
    9. '
' → logprob: -13.904888153076172
    10. '(NUM' → logprob: -14.654888153076172

Token 197: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009342113509774208
    2. '(N' → logprob: -5.009342193603516
    3. ' N' → logprob: -6.009342193603516
    4. ' (' → logprob: -9.009342193603516
    5. '   ' → logprob: -10.134342193603516
    6. '(' → logprob: -13.509342193603516
    7. ' ' → logprob: -13.759342193603516
    8. '	N' → logprob: -13.884342193603516
    9. ')' → logprob: -14.759342193603516
    10. '{' → logprob: -15.259342193603516

Token 198: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0022125851828604937
    2. ' +' → logprob: -6.1272125244140625
    3. '+
' → logprob: -10.627212524414062
    4. ')' → logprob: -13.127212524414062
    5. ' +
' → logprob: -15.002212524414062
    6. '
' → logprob: -15.502212524414062
    7. '1' → logprob: -16.002212524414062
    8. ' ' → logprob: -16.127212524414062
    9. '+)' → logprob: -16.502212524414062
    10. '+

' → logprob: -16.502212524414062

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.87504768371582
    4. ')' → logprob: -14.62504768371582
    5. '0' → logprob: -15.12504768371582
    6. '2' → logprob: -15.75004768371582
    7. '```' → logprob: -15.75004768371582
    8. '(' → logprob: -16.12504768371582
    9. '  ' → logprob: -17.06254768371582
    10. '１' → logprob: -17.81254768371582

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.375009536743164
    4. '0' → logprob: -15.750009536743164
    5. '```' → logprob: -15.812509536743164
    6. ')' → logprob: -16.312509536743164
    7. '

' → logprob: -16.500009536743164
    8. '
' → logprob: -17.000009536743164
    9. '１' → logprob: -17.312509536743164
    10. '2' → logprob: -17.437509536743164

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011066090315580368
    2. ')
' → logprob: -4.51106595993042
    3. ')
' → logprob: -11.636066436767578
    4. ' )' → logprob: -12.011066436767578
    5. '   ' → logprob: -14.011066436767578
    6. '
' → logprob: -14.011066436767578
    7. ']' → logprob: -14.511066436767578
    8. ' )
' → logprob: -14.761066436767578
    9. '       ' → logprob: -15.386066436767578
    10. ')

' → logprob: -16.011066436767578

Token 202: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05117513984441757
    2. ' dist' → logprob: -4.176175117492676
    3. '   ' → logprob: -4.926175117492676
    4. '	dist' → logprob: -4.926175117492676
    5. ' 
' → logprob: -5.551175117492676
    6. '[' → logprob: -5.676175117492676
    7. ' ' → logprob: -5.676175117492676
    8. '
' → logprob: -6.426175117492676
    9. '    ' → logprob: -6.426175117492676
    10. '    
' → logprob: -6.676175117492676

Token 203: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.012528604827821255
    2. ' dist' → logprob: -4.387528419494629
    3. '	dist' → logprob: -11.887528419494629
    4. 'd' → logprob: -12.637528419494629
    5. '   ' → logprob: -12.637528419494629
    6. 'distance' → logprob: -13.512528419494629
    7. '
' → logprob: -14.137528419494629
    8. '       ' → logprob: -14.137528419494629
    9. '```' → logprob: -14.137528419494629
    10. '_dist' → logprob: -14.887528419494629

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.125
    3. '```' → logprob: -17.375
    4. '[
' → logprob: -19.75
    5. '\[' → logprob: -20.0
    6. '1' → logprob: -20.375
    7. ' ' → logprob: -20.375
    8. ')' → logprob: -20.875
    9. ']' → logprob: -21.125
    10. '=' → logprob: -21.5

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ' ' → logprob: -11.125020027160645
    3. '0' → logprob: -13.000020027160645
    4. ')' → logprob: -13.500020027160645
    5. '[' → logprob: -14.250020027160645
    6. ']' → logprob: -14.250020027160645
    7. '   ' → logprob: -15.750020027160645
    8. '
' → logprob: -16.00002098083496
    9. '=' → logprob: -17.00002098083496
    10. '][' → logprob: -17.50002098083496

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0048158844001591206
    2. ')' → logprob: -5.879816055297852
    3. ' ]' → logprob: -6.254816055297852
    4. ']=' → logprob: -9.754816055297852
    5. ')]' → logprob: -11.254816055297852
    6. ' )' → logprob: -11.629816055297852
    7. '[' → logprob: -12.254816055297852
    8. '])' → logprob: -13.629816055297852
    9. '=' → logprob: -14.629816055297852
    10. ' =' → logprob: -14.754816055297852

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048591457307338715
    2. '=' → logprob: -3.048591375350952
    3. ']' → logprob: -13.548591613769531
    4. '[' → logprob: -13.673591613769531
    5. ',' → logprob: -14.798591613769531
    6. ')' → logprob: -15.048591613769531
    7. ']=' → logprob: -15.048591613769531
    8. ' =
' → logprob: -15.048591613769531
    9. ')=' → logprob: -15.548591613769531
    10. ' ' → logprob: -16.17359161376953

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '۰' → logprob: -18.687536239624023
    5. ' ' → logprob: -19.187536239624023
    6. '  ' → logprob: -19.625036239624023
    7. '０' → logprob: -19.687536239624023
    8. '00' → logprob: -19.750036239624023
    9. '000' → logprob: -20.125036239624023
    10. '```' → logprob: -20.250036239624023

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -19.0
    4. '   ' → logprob: -19.375
    5. '０' → logprob: -20.125
    6. '00' → logprob: -20.125
    7. '000' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '٠' → logprob: -21.4375
    10. '  ' → logprob: -21.5

Token 210: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6171724796295166
    2. '   ' → logprob: -1.2421724796295166
    3. '<|end|>' → logprob: -2.3671724796295166
    4. '       ' → logprob: -2.7421724796295166
    5. ',' → logprob: -5.7421722412109375
    6. 'heap' → logprob: -6.4921722412109375
    7. '    
' → logprob: -6.6171722412109375
    8. '<|end|>' → logprob: -6.6171722412109375
    9. '
' → logprob: -6.9921722412109375
    10. '' → logprob: -7.3671722412109375

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1713326871395111
    2. '
' → logprob: -2.671332597732544
    3. '       ' → logprob: -3.046332597732544
    4. '<|end|>' → logprob: -3.546332597732544
    5. 'heap' → logprob: -5.546332836151123
    6. ',' → logprob: -6.296332836151123
    7. 'import' → logprob: -7.046332836151123
    8. '    
' → logprob: -7.171332836151123
    9. 'queue' → logprob: -7.421332836151123
    10. '	queue' → logprob: -7.546332836151123

Token 212: ' pq' (ID: 65424)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6927670240402222
    2. 'pq' (adapté à ' pq') → logprob: -1.1927670240402222
    3. 'queue' → logprob: -1.6927670240402222
    4. 'hq' → logprob: -5.067767143249512
    5. '       ' → logprob: -5.567767143249512
    6. ' heap' → logprob: -6.942767143249512
    7. 'priority' → logprob: -7.567767143249512
    8. 'import' → logprob: -7.942767143249512
    9. '   ' → logprob: -8.067767143249512
    10. ' queue' → logprob: -9.567767143249512

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004133372567594051
    2. '=' → logprob: -5.504133224487305
    3. '=[]' → logprob: -10.254133224487305
    4. '.' → logprob: -11.629133224487305
    5. '.append' → logprob: -13.004133224487305
    6. ',' → logprob: -13.254133224487305
    7. '.push' → logprob: -13.379133224487305
    8. ')' → logprob: -13.629133224487305
    9. ' ' → logprob: -13.879133224487305
    10. '<|end|>' → logprob: -14.129133224487305

Token 214: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.07889595627784729
    2. ' [(' → logprob: -2.5788960456848145
    3. '[]' → logprob: -12.078895568847656
    4. ' []' → logprob: -15.203895568847656
    5. '[]
' → logprob: -15.828895568847656
    6. '([(' → logprob: -16.328895568847656
    7. ' []
' → logprob: -18.203895568847656
    8. '[' → logprob: -18.953895568847656
    9. '[((' → logprob: -19.328895568847656
    10. '[]

' → logprob: -21.328895568847656

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.625001907348633
    3. '(' → logprob: -13.875001907348633
    4. 'dist' → logprob: -15.875001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '(dist' → logprob: -18.750001907348633
    7. '```' → logprob: -19.500001907348633
    8. ')' → logprob: -19.875001907348633
    9. ' dist' → logprob: -20.375001907348633
    10. '
' → logprob: -20.375001907348633

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.37500286102295
    3. ')' → logprob: -15.37500286102295
    4. '```' → logprob: -15.87500286102295
    5. ',
' → logprob: -16.250001907348633
    6. ')]' → logprob: -16.375001907348633
    7. '<|end|>' → logprob: -16.375001907348633
    8. 'import' → logprob: -16.500001907348633
    9. ',(' → logprob: -16.875001907348633
    10. ',)' → logprob: -17.125001907348633

Token 217: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.62506675720215
    4. '0' → logprob: -18.43756675720215
    5. '```' → logprob: -19.00006675720215
    6. '<|end|>' → logprob: -19.00006675720215
    7. ')' → logprob: -19.12506675720215
    8. '  ' → logprob: -19.56256675720215
    9. ',' → logprob: -20.06256675720215
    10. '
' → logprob: -20.18756675720215

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.625001907348633
    5. '１' → logprob: -21.062501907348633
    6. '
' → logprob: -21.125001907348633
    7. '  ' → logprob: -21.187501907348633
    8. '۱' → logprob: -21.250001907348633
    9. ',' → logprob: -21.437501907348633
    10. ')' → logprob: -21.625001907348633

Token 219: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015429535415023565
    2. ')' → logprob: -6.501543045043945
    3. ')]
' → logprob: -10.376543045043945
    4. '))' → logprob: -13.126543045043945
    5. '),' → logprob: -13.376543045043945
    6. ')])' → logprob: -13.376543045043945
    7. ' )' → logprob: -13.751543045043945
    8. ')]
' → logprob: -14.501543045043945
    9. ']' → logprob: -14.501543045043945
    10. ',' → logprob: -14.876543045043945

Token 220: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08517517894506454
    2. '
' → logprob: -2.7101752758026123
    3. ')' → logprob: -5.210175037384033
    4. 'while' → logprob: -5.585175037384033
    5. '   ' → logprob: -6.085175037384033
    6. '        
' → logprob: -6.710175037384033
    7. ' while' → logprob: -7.210175037384033
    8. '  
' → logprob: -7.835175037384033
    9. '    
' → logprob: -8.335175514221191
    10. '\n' → logprob: -8.710175514221191

Token 221: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9600900411605835
    2. '
' → logprob: -1.3350900411605835
    3. 'while' → logprob: -1.8350900411605835
    4. ')' → logprob: -2.460090160369873
    5. '   ' → logprob: -2.585090160369873
    6. ' while' → logprob: -3.835090160369873
    7. ')
' → logprob: -5.085090160369873
    8. '<|end|>' → logprob: -6.585090160369873
    9. '	while' → logprob: -6.835090160369873
    10. '    
' → logprob: -7.210090160369873

Token 222: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45591074228286743
    2. 'heap' → logprob: -1.0809106826782227
    3. ' heap' → logprob: -4.830910682678223
    4. '(heap' → logprob: -4.955910682678223
    5. '<|end|>' → logprob: -5.705910682678223
    6. 'while' → logprob: -5.830910682678223
    7. '0' → logprob: -6.330910682678223
    8. 'import' → logprob: -6.455910682678223
    9. ']' → logprob: -7.830910682678223
    10. 'distance' → logprob: -8.205910682678223

Token 223: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.023926030844449997
    2. 'dist' → logprob: -3.773926019668579
    3. 'cost' → logprob: -7.523926258087158
    4. ' distance' → logprob: -8.89892578125
    5. ' dist' → logprob: -13.27392578125
    6. '0' → logprob: -13.77392578125
    7. 'current' → logprob: -15.02392578125
    8. ' cost' → logprob: -15.14892578125
    9. ')' → logprob: -16.64892578125
    10. 'd' → logprob: -16.77392578125

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ')' → logprob: -12.500017166137695
    3. ',)' → logprob: -12.500017166137695
    4. ',
' → logprob: -12.625017166137695
    5. '<|end|>' → logprob: -12.875017166137695
    6. ' ,' → logprob: -13.375017166137695
    7. 'cost' → logprob: -15.125017166137695
    8. '‌,' → logprob: -15.250017166137695
    9. '```' → logprob: -15.375017166137695
    10. ',user' → logprob: -15.625017166137695

Token 225: ' city' (ID: 5030)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.23950710892677307
    2. 'city' → logprob: -1.7395070791244507
    3. ' node' → logprob: -3.6145071983337402
    4. ' city' → logprob: -4.61450719833374
    5. 'vertex' → logprob: -7.61450719833374
    6. 'current' → logprob: -10.489506721496582
    7. ' vertex' → logprob: -11.739506721496582
    8. ')' → logprob: -12.364506721496582
    9. '```' → logprob: -13.114506721496582
    10. ' current' → logprob: -13.489506721496582

Token 226: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029756641015410423
    2. ')
' → logprob: -8.125297546386719
    3. ' )' → logprob: -14.250297546386719
    4. ')]' → logprob: -14.750297546386719
    5. '))' → logprob: -16.12529754638672
    6. ')

' → logprob: -16.25029754638672
    7. ')
' → logprob: -16.62529754638672
    8. ']' → logprob: -16.87529754638672
    9. '   ' → logprob: -17.50029754638672
    10. '),' → logprob: -17.50029754638672

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06921909749507904
    2. 'while' → logprob: -3.1942191123962402
    3. '   ' → logprob: -4.19421911239624
    4. ' while' → logprob: -4.69421911239624
    5. '	while' → logprob: -6.56921911239624
    6. ')' → logprob: -8.944218635559082
    7. '        
' → logprob: -10.194218635559082
    8. '    
' → logprob: -11.194218635559082
    9. '```' → logprob: -11.194218635559082
    10. '	' → logprob: -11.319218635559082

Token 228: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0049706934951245785
    2. ' while' → logprob: -5.504970550537109
    3. '       ' → logprob: -7.129970550537109
    4. '   ' → logprob: -9.87997055053711
    5. '	while' → logprob: -10.25497055053711
    6. ')' → logprob: -12.50497055053711
    7. '```' → logprob: -14.62997055053711
    8. 'While' → logprob: -15.25497055053711
    9. ',' → logprob: -15.75497055053711
    10. '    ' → logprob: -16.87997055053711

Token 229: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.01416798122227192
    2. ' pq' → logprob: -4.264167785644531
    3. 'len' → logprob: -12.889167785644531
    4. 'p' → logprob: -13.889167785644531
    5. '	p' → logprob: -14.389167785644531
    6. 'q' → logprob: -15.764167785644531
    7. '   ' → logprob: -16.01416778564453
    8. 'PQ' → logprob: -16.51416778564453
    9. ' ' → logprob: -16.88916778564453
    10. '
' → logprob: -17.13916778564453

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014103800989687443
    2. '):' → logprob: -4.514103889465332
    3. ':
' → logprob: -5.889103889465332
    4. '):
' → logprob: -9.639103889465332
    5. ']:' → logprob: -9.889103889465332
    6. '>:' → logprob: -10.139103889465332
    7. ',' → logprob: -10.264103889465332
    8. ' and' → logprob: -10.264103889465332
    9. '.pop' → logprob: -10.514103889465332
    10. '[' → logprob: -12.389103889465332

Token 231: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3514469265937805
    2. '           ' → logprob: -1.3514468669891357
    3. '       ' → logprob: -3.3514468669891357
    4. ' ,' → logprob: -6.476447105407715
    5. ',
' → logprob: -8.976447105407715
    6. ',p' → logprob: -9.476447105407715
    7. '   ' → logprob: -9.476447105407715
    8. ',d' → logprob: -9.476447105407715
    9. ')' → logprob: -9.601447105407715
    10. '```' → logprob: -9.851447105407715

Token 232: ' cur' (ID: 4396)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07407638430595398
    2. 'd' → logprob: -3.5740764141082764
    3. ' dist' → logprob: -3.5740764141082764
    4. 'cur' (adapté à ' cur') → logprob: -4.949076175689697
    5. 'distance' → logprob: -5.949076175689697
    6. 'cost' → logprob: -6.449076175689697
    7. 'current' → logprob: -6.574076175689697
    8. 'curr' → logprob: -6.824076175689697
    9. ' d' → logprob: -7.199076175689697
    10. '   ' → logprob: -7.574076175689697

Token 233: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.14121578633785248
    2. '_distance' → logprob: -2.8912158012390137
    3. '_' → logprob: -3.1412158012390137
    4. 'dist' → logprob: -3.7662158012390137
    5. '[' → logprob: -5.141215801239014
    6. '_d' → logprob: -5.766215801239014
    7. '_cost' → logprob: -8.016215324401855
    8. 'Dist' → logprob: -8.516215324401855
    9. 'distance' → logprob: -9.016215324401855
    10. '_[' → logprob: -10.266215324401855

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',
' → logprob: -15.250007629394531
    4. '=' → logprob: -16.50000762939453
    5. ',current' → logprob: -16.62500762939453
    6. '[' → logprob: -17.25000762939453
    7. ',c' → logprob: -17.50000762939453
    8. ',u' → logprob: -17.50000762939453
    9. ',_' → logprob: -17.87500762939453
    10. '‌,' → logprob: -18.12500762939453

Token 235: ' u' (ID: 337)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -1.0005114078521729
    2. 'cur' → logprob: -1.3755114078521729
    3. ' u' → logprob: -2.000511407852173
    4. 'u' → logprob: -2.250511407852173
    5. ' city' → logprob: -2.250511407852173
    6. 'city' → logprob: -3.750511407852173
    7. ' node' → logprob: -4.875511169433594
    8. 'node' → logprob: -6.000511169433594
    9. 'curr' → logprob: -11.875511169433594
    10. ' ' → logprob: -12.500511169433594

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07335362583398819
    2. '=' → logprob: -2.6983535289764404
    3. ')' → logprob: -5.6983537673950195
    4. ' )' → logprob: -10.57335376739502
    5. ')=' → logprob: -11.07335376739502
    6. ' ' → logprob: -11.57335376739502
    7. ',' → logprob: -12.94835376739502
    8. '<|end|>' → logprob: -13.19835376739502
    9. ']' → logprob: -13.69835376739502
    10. '   ' → logprob: -13.69835376739502

Token 237: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0009159822366200387
    2. ' heap' → logprob: -7.000916004180908
    3. 'he' → logprob: -12.37591552734375
    4. '(heap' → logprob: -16.50091552734375
    5. '.heap' → logprob: -17.12591552734375
    6. '
' → logprob: -18.12591552734375
    7. '   ' → logprob: -18.12591552734375
    8. '_heap' → logprob: -18.25091552734375
    9. ' he' → logprob: -18.37591552734375
    10. ' ' → logprob: -18.50091552734375

Token 238: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.000001907348633
    3. 'p' → logprob: -15.750001907348633
    4. '
' → logprob: -16.000001907348633
    5. '```' → logprob: -16.125001907348633
    6. ')' → logprob: -16.250001907348633
    7. 'app' → logprob: -16.375001907348633
    8. '

' → logprob: -16.500001907348633
    9. '	q' → logprob: -16.750001907348633
    10. '   ' → logprob: -16.750001907348633

Token 239: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.3544423381972592e-05
    2. 'q' → logprob: -11.75001335144043
    3. '.' → logprob: -13.00001335144043
    4. 'he' → logprob: -13.62501335144043
    5. '.heap' → logprob: -13.87501335144043
    6. ' he' → logprob: -14.00001335144043
    7. '.pop' → logprob: -15.75001335144043
    8. '.q' → logprob: -16.50001335144043
    9. ' .' → logprob: -17.00001335144043
    10. 'app' → logprob: -18.00001335144043

Token 240: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011331788846291602
    2. 'pp' → logprob: -9.125113487243652
    3. 'ap' → logprob: -12.750113487243652
    4. 'pop' → logprob: -15.000113487243652
    5. '```' → logprob: -15.250113487243652
    6. 'q' → logprob: -15.875113487243652
    7. '[' → logprob: -15.875113487243652
    8. 'appen' → logprob: -16.125112533569336
    9. 'p' → logprob: -16.250112533569336
    10. 'appe' → logprob: -16.500112533569336

Token 241: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.929046630859375
    2. 'q' → logprob: -1.554046630859375
    3. 'app' → logprob: -1.679046630859375
    4. 'p' → logprob: -2.554046630859375
    5. 'pp' → logprob: -2.804046630859375
    6. 'ush' → logprob: -2.929046630859375
    7. 'ap' → logprob: -4.304046630859375
    8. 'push' → logprob: -8.179046630859375
    9. '```' → logprob: -8.679046630859375
    10. 'uf' → logprob: -8.804046630859375

Token 242: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.008717515505850315
    2. '(' → logprob: -4.7587175369262695
    3. ' (' → logprob: -9.50871753692627
    4. '(
' → logprob: -11.63371753692627
    5. '(q' → logprob: -11.75871753692627
    6. ' pq' → logprob: -11.88371753692627
    7. 'pq' → logprob: -13.13371753692627
    8. '(P' → logprob: -14.00871753692627
    9. ')' → logprob: -14.50871753692627
    10. '(

' → logprob: -14.63371753692627

Token 243: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.796184723294573e-06
    2. 'Q' → logprob: -13.500005722045898
    3. '
' → logprob: -13.750005722045898
    4. ')' → logprob: -14.125005722045898
    5. ')
' → logprob: -15.000005722045898
    6. 'w' → logprob: -15.000005722045898
    7. 'r' → logprob: -15.125005722045898
    8. 'g' → logprob: -15.500005722045898
    9. '[' → logprob: -15.750005722045898
    10. 'u' → logprob: -16.1250057220459

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001966223819181323
    2. ')
' → logprob: -6.2519659996032715
    3. '           ' → logprob: -10.25196647644043
    4. '       ' → logprob: -14.00196647644043
    5. ' )' → logprob: -15.00196647644043
    6. ')
' → logprob: -15.12696647644043
    7. '   ' → logprob: -15.75196647644043
    8. '),' → logprob: -15.75196647644043
    9. '):
' → logprob: -16.00196647644043
    10. ')`' → logprob: -16.12696647644043

Token 245: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6385266184806824
    2. '           ' → logprob: -0.7635266184806824
    3. ' if' → logprob: -6.388526439666748
    4. '<|end|>' → logprob: -6.888526439666748
    5. '        ' → logprob: -7.013526439666748
    6. '        
' → logprob: -7.138526439666748
    7. 'if' → logprob: -8.013526916503906
    8. ')' → logprob: -8.013526916503906
    9. '            
' → logprob: -8.513526916503906
    10. '   ' → logprob: -8.763526916503906

Token 246: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2207217812538147
    2. '       ' → logprob: -1.97072172164917
    3. ' if' → logprob: -3.47072172164917
    4. '   ' → logprob: -4.09572172164917
    5. 'if' (adapté à ' if') → logprob: -5.22072172164917
    6. '            
' → logprob: -6.09572172164917
    7. '
' → logprob: -7.09572172164917
    8. ' 
' → logprob: -7.09572172164917
    9. '        
' → logprob: -7.59572172164917
    10. '    
' → logprob: -7.97072172164917

Token 247: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2018406242132187
    2. ' cur' → logprob: -1.7018406391143799
    3. 'dist' → logprob: -8.2018404006958
    4. ' dist' → logprob: -8.8268404006958
    5. '	cur' → logprob: -12.0768404006958
    6. '(cur' → logprob: -15.4518404006958
    7. ' ' → logprob: -15.9518404006958
    8. '   ' → logprob: -16.076841354370117
    9. '[cur' → logprob: -16.451841354370117
    10. ' ' → logprob: -16.826841354370117

Token 248: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.3458322731312364e-06
    2. 'ist' → logprob: -12.250007629394531
    3. 'dist' → logprob: -14.000007629394531
    4. '_' → logprob: -14.000007629394531
    5. '_DIST' → logprob: -15.125007629394531
    6. '_distance' → logprob: -16.00000762939453
    7. 'istance' → logprob: -16.12500762939453
    8. 'u' → logprob: -16.37500762939453
    9. '	dist' → logprob: -16.37500762939453
    10. '_st' → logprob: -16.87500762939453

Token 249: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06198359653353691
    2. '>' → logprob: -2.811983585357666
    3. ' ' → logprob: -11.811984062194824
    4. ' ' → logprob: -12.061984062194824
    5. '[' → logprob: -14.436984062194824
    6. ' >
' → logprob: -14.811984062194824
    7. ' >
' → logprob: -14.811984062194824
    8. '">' → logprob: -14.936984062194824
    9. ' !=' → logprob: -15.186984062194824
    10. ' ">' → logprob: -16.311983108520508

Token 250: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011703446507453918
    2. ' dist' → logprob: -6.7511701583862305
    3. '	dist' → logprob: -16.001171112060547
    4. '_dist' → logprob: -18.751171112060547
    5. '(dist' → logprob: -19.001171112060547
    6. 'Dist' → logprob: -20.501171112060547
    7. '.dist' → logprob: -20.626171112060547
    8. ' ' → logprob: -20.751171112060547
    9. '```' → logprob: -20.751171112060547
    10. 'd' → logprob: -21.251171112060547

Token 251: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.00000286102295
    3. 'u' → logprob: -15.75000286102295
    4. '```' → logprob: -17.000001907348633
    5. '[
' → logprob: -18.125001907348633
    6. '

' → logprob: -19.750001907348633
    7. ' [' → logprob: -19.750001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '<u' → logprob: -19.875001907348633
    10. '
' → logprob: -20.000001907348633

Token 252: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4831352233886719
    2. '):
' → logprob: -0.9831352233886719
    3. ':' → logprob: -4.983135223388672
    4. ':
' → logprob: -6.858135223388672
    5. ')' → logprob: -7.483135223388672
    6. 'continue' → logprob: -7.858135223388672
    7. ' continue' → logprob: -10.108135223388672
    8. ']:' → logprob: -10.608135223388672
    9. '):
' → logprob: -10.858135223388672
    10. 'Continue' → logprob: -10.858135223388672

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09427943825721741
    2. '           ' → logprob: -2.5942795276641846
    3. ' continue' → logprob: -4.4692792892456055
    4. 'continue' → logprob: -5.5942792892456055
    5. '	continue' → logprob: -10.594279289245605
    6. '_continue' → logprob: -10.844279289245605
    7. '       ' → logprob: -11.219279289245605
    8. '   ' → logprob: -11.219279289245605
    9. '                   ' → logprob: -12.219279289245605
    10. '\n' → logprob: -12.344279289245605

Token 254: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3873644769191742
    2. 'continue' (adapté à ' continue') → logprob: -1.1373645067214966
    3. '	continue' → logprob: -8.387364387512207
    4. '           ' → logprob: -9.012364387512207
    5. '               ' → logprob: -9.387364387512207
    6. '_continue' → logprob: -10.012364387512207
    7. 'contin' → logprob: -11.762364387512207
    8. 'Continue' → logprob: -13.262364387512207
    9. 'continu' → logprob: -13.512364387512207
    10. '   ' → logprob: -13.637364387512207

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026599718257784843
    2. '       ' → logprob: -3.901599645614624
    3. '            
' → logprob: -6.276599884033203
    4. '<|end|>' → logprob: -6.276599884033203
    5. ')' → logprob: -7.526599884033203
    6. '   ' → logprob: -7.651599884033203
    7. '        
' → logprob: -8.151599884033203
    8. '  
' → logprob: -8.901599884033203
    9. '    
' → logprob: -9.026599884033203
    10. ' 
' → logprob: -9.151599884033203

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48701712489128113
    2. '       ' → logprob: -0.9870171546936035
    3. ' for' → logprob: -5.3620171546936035
    4. '            
' → logprob: -6.1120171546936035
    5. '        
' → logprob: -6.2370171546936035
    6. '   ' → logprob: -6.2370171546936035
    7. ' 
' → logprob: -7.2370171546936035
    8. '<|end|>' → logprob: -7.9870171546936035
    9. '    
' → logprob: -8.487016677856445
    10. 'for' → logprob: -8.612016677856445

Token 257: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19230224192142487
    2. ' for' → logprob: -2.4423022270202637
    3. 'for' (adapté à ' for') → logprob: -2.5673022270202637
    4. '           ' → logprob: -4.567302227020264
    5. '   ' → logprob: -7.192302227020264
    6. '	for' → logprob: -9.942302703857422
    7. '        
' → logprob: -10.317302703857422
    8. '            
' → logprob: -12.192302703857422
    9. '               ' → logprob: -13.317302703857422
    10. ' ' → logprob: -13.442302703857422

Token 258: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31344515085220337
    2. '(v' → logprob: -1.3134450912475586
    3. 'neighbor' → logprob: -9.188445091247559
    4. ' v' → logprob: -9.688445091247559
    5. ' (' → logprob: -11.438445091247559
    6. 'to' → logprob: -12.938445091247559
    7. 'w' → logprob: -12.938445091247559
    8. '(ne' → logprob: -13.688445091247559
    9. '(' → logprob: -14.188445091247559
    10. '(u' → logprob: -15.063445091247559

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.782141569303349e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ',v' → logprob: -14.50009822845459
    4. '_,' → logprob: -14.75009822845459
    5. '‌,' → logprob: -14.87509822845459
    6. ',d' → logprob: -16.125097274780273
    7. '<|end|>' → logprob: -16.750097274780273
    8. ',
' → logprob: -16.875097274780273
    9. ',u' → logprob: -17.125097274780273
    10. '```' → logprob: -18.000097274780273

Token 260: ' length' (ID: 5517)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006449016276746988
    2. ' d' → logprob: -5.131449222564697
    3. 'length' → logprob: -7.631449222564697
    4. 'w' → logprob: -11.506448745727539
    5. ' length' → logprob: -11.631448745727539
    6. 'distance' → logprob: -12.256448745727539
    7. 'dist' → logprob: -13.131448745727539
    8. ',' → logprob: -13.506448745727539
    9. ' w' → logprob: -13.881448745727539
    10. '   ' → logprob: -14.006448745727539

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001307142956648022
    2. ' ,' → logprob: -9.000130653381348
    3. ',c' → logprob: -12.250130653381348
    4. '_,' → logprob: -13.375130653381348
    5. 'c' → logprob: -14.875130653381348
    6. '‌,' → logprob: -15.875130653381348
    7. 's' → logprob: -16.375131607055664
    8. ' in' → logprob: -16.750131607055664
    9. 'cost' → logprob: -17.000131607055664
    10. ',_' → logprob: -17.125131607055664

Token 262: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.005935790482908487
    2. ' cost' → logprob: -5.1309356689453125
    3. '_cost' → logprob: -12.005935668945312
    4. 'c' → logprob: -15.005935668945312
    5. 'price' → logprob: -15.380935668945312
    6. '_' → logprob: -16.005935668945312
    7. '```' → logprob: -16.505935668945312
    8. '
' → logprob: -16.755935668945312
    9. 'color' → logprob: -17.255935668945312
    10. '(cost' → logprob: -17.255935668945312

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011726059019565582
    2. 'in' → logprob: -6.7511725425720215
    3. ' ' → logprob: -13.75117301940918
    4. '	in' → logprob: -14.87617301940918
    5. ',' → logprob: -15.62617301940918
    6. 's' → logprob: -15.75117301940918
    7. ' ' → logprob: -16.37617301940918
    8. '   ' → logprob: -16.50117301940918
    9. '_in' → logprob: -16.75117301940918
    10. '    ' → logprob: -16.87617301940918

Token 264: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0002036595979006961
    2. ' graph' → logprob: -8.500204086303711
    3. '	graph' → logprob: -16.62520408630371
    4. '(graph' → logprob: -18.50020408630371
    5. '
' → logprob: -19.75020408630371
    6. ' ' → logprob: -20.00020408630371
    7. '_graph' → logprob: -20.25020408630371
    8. '   ' → logprob: -20.37520408630371
    9. 'raph' → logprob: -20.87520408630371
    10. 'grid' → logprob: -21.37520408630371

Token 265: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.700132997939363e-05
    2. 'u' → logprob: -11.000017166137695
    3. '[' → logprob: -16.250017166137695
    4. '[v' → logprob: -16.500017166137695
    5. '(u' → logprob: -17.625017166137695
    6. '	u' → logprob: -18.500017166137695
    7. '   ' → logprob: -18.750017166137695
    8. '```' → logprob: -19.000017166137695
    9. 's' → logprob: -20.000017166137695
    10. '
' → logprob: -20.000017166137695

Token 266: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6178067326545715
    2. '):' → logprob: -1.6178066730499268
    3. ':' → logprob: -2.1178066730499268
    4. ']:
' → logprob: -2.3678066730499268
    5. '):
' → logprob: -3.1178066730499268
    6. ':
' → logprob: -5.742806911468506
    7. '           ' → logprob: -7.992806911468506
    8. '}:' → logprob: -8.742806434631348
    9. '       ' → logprob: -8.867806434631348
    10. ']:
' → logprob: -9.117806434631348

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010855979286134243
    2. '           ' → logprob: -5.1358561515808105
    3. ',' → logprob: -5.8858561515808105
    4. '<|end|>' → logprob: -6.8858561515808105
    5. ' if' → logprob: -7.2608561515808105
    6. ':' → logprob: -9.385855674743652
    7. ' ' → logprob: -9.885855674743652
    8. '                
' → logprob: -10.010855674743652
    9. ')' → logprob: -10.385855674743652
    10. '            ' → logprob: -10.635855674743652

Token 268: ' nd' (ID: 5914)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10242410004138947
    2. ' if' → logprob: -2.852424144744873
    3. '                ' → logprob: -4.477424144744873
    4. ' 
' → logprob: -4.477424144744873
    5. ' ' → logprob: -5.477424144744873
    6. '                   ' → logprob: -5.727424144744873
    7. '                
' → logprob: -5.727424144744873
    8. 'if' → logprob: -5.852424144744873
    9. '                    
' → logprob: -7.102424144744873
    10. '           ' → logprob: -7.352424144744873

Token 269: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.029272709041833878
    2. ' =' → logprob: -4.529272556304932
    3. '=' → logprob: -4.654272556304932
    4. 'istance' → logprob: -4.779272556304932
    5. 'is' → logprob: -9.52927303314209
    6. 'ista' → logprob: -11.27927303314209
    7. '```' → logprob: -11.77927303314209
    8. 'ists' → logprob: -12.02927303314209
    9. 'i' → logprob: -12.27927303314209
    10. '_' → logprob: -12.27927303314209

Token 270: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.10022015124559402
    2. ' cur' → logprob: -2.350220203399658
    3. 'dist' → logprob: -11.8502197265625
    4. '	cur' → logprob: -12.9752197265625
    5. ' dist' → logprob: -13.2252197265625
    6. '[cur' → logprob: -13.9752197265625
    7. '(cur' → logprob: -14.6002197265625
    8. '               ' → logprob: -14.8502197265625
    9. '_cur' → logprob: -15.8502197265625
    10. '           ' → logprob: -16.2252197265625

Token 271: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.847109812544659e-05
    2. 'ist' → logprob: -10.000048637390137
    3. 'dist' → logprob: -13.750048637390137
    4. '_' → logprob: -14.500048637390137
    5. '_DIST' → logprob: -14.750048637390137
    6. '-dist' → logprob: -14.875048637390137
    7. 'istance' → logprob: -15.125048637390137
    8. '	dist' → logprob: -15.375048637390137
    9. '_st' → logprob: -16.00004768371582
    10. 'st' → logprob: -16.62504768371582

Token 272: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02975141443312168
    2. '+' → logprob: -3.5297513008117676
    3. '<|end|>' → logprob: -15.279751777648926
    4. ' ' → logprob: -16.02975082397461
    5. ' ' → logprob: -16.15475082397461
    6. ' plus' → logprob: -16.27975082397461
    7. '＋' → logprob: -16.52975082397461
    8. '+n' → logprob: -16.52975082397461
    9. '+d' → logprob: -16.90475082397461
    10. ' +
' → logprob: -17.15475082397461

Token 273: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.16022422909736633
    2. ' length' → logprob: -1.910224199295044
    3. '(length' → logprob: -16.28522491455078
    4. '	length' → logprob: -17.66022491455078
    5. 'leng' → logprob: -17.91022491455078
    6. ' ' → logprob: -18.28522491455078
    7. '[length' → logprob: -19.03522491455078
    8. ' lenght' → logprob: -19.16022491455078
    9. 'len' → logprob: -19.53522491455078
    10. 'ength' → logprob: -19.66022491455078

Token 274: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008300608024001122
    2. '<|end|>' → logprob: -5.00830078125
    3. '           ' → logprob: -7.75830078125
    4. '                ' → logprob: -8.25830078125
    5. '                
' → logprob: -8.63330078125
    6. '<|end|>' → logprob: -8.75830078125
    7. '                   ' → logprob: -9.00830078125
    8. ')' → logprob: -9.00830078125
    9. '              ' → logprob: -9.50830078125
    10. '
' → logprob: -9.75830078125

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014334988372866064
    2. '                
' → logprob: -10.000143051147461
    3. '<|end|>' → logprob: -10.375143051147461
    4. '                ' → logprob: -11.125143051147461
    5. ' if' → logprob: -11.375143051147461
    6. '           ' → logprob: -11.625143051147461
    7. ' 
' → logprob: -12.000143051147461
    8. ')' → logprob: -12.125143051147461
    9. ',' → logprob: -12.250143051147461
    10. '              ' → logprob: -12.500143051147461

Token 276: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03254040703177452
    2. ' if' → logprob: -3.5325403213500977
    3. '                ' → logprob: -6.657540321350098
    4. ' ' → logprob: -7.032540321350098
    5. '                
' → logprob: -8.532540321350098
    6. 'if' (adapté à ' if') → logprob: -8.907540321350098
    7. ' 
' → logprob: -9.032540321350098
    8. '<|end|>' → logprob: -9.782540321350098
    9. ' ' → logprob: -11.032540321350098
    10. '              ' → logprob: -11.032540321350098

Token 277: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.06495172530412674
    2. 'nd' → logprob: -2.8149516582489014
    3. ' dist' → logprob: -5.9399518966674805
    4. 'dist' → logprob: -8.06495189666748
    5. '(nd' → logprob: -10.68995189666748
    6. '```' → logprob: -12.81495189666748
    7. '	dist' → logprob: -13.43995189666748
    8. '   ' → logprob: -13.81495189666748
    9. '
' → logprob: -14.18995189666748
    10. ' ' → logprob: -14.50245189666748

Token 278: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.043028879910707474
    2. '<' → logprob: -3.1680288314819336
    3. ' ' → logprob: -11.543028831481934
    4. '<|end|>' → logprob: -11.668028831481934
    5. ' ' → logprob: -12.418028831481934
    6. '[' → logprob: -13.043028831481934
    7. ',' → logprob: -14.418028831481934
    8. '<th' → logprob: -14.543028831481934
    9. ' <",' → logprob: -14.793028831481934
    10. '<len' → logprob: -15.043028831481934

Token 279: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.048588622361421585
    2. ' dist' → logprob: -3.048588514328003
    3. '	dist' → logprob: -14.298588752746582
    4. '(dist' → logprob: -14.673588752746582
    5. '_dist' → logprob: -16.798587799072266
    6. '
' → logprob: -16.798587799072266
    7. 'Dist' → logprob: -17.548587799072266
    8. '.dist' → logprob: -17.548587799072266
    9. ' ' → logprob: -18.798587799072266
    10. '```' → logprob: -18.923587799072266

Token 280: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.2200749754119897e-06
    2. 'v' → logprob: -13.250001907348633
    3. '[' → logprob: -15.250001907348633
    4. '[u' → logprob: -15.625001907348633
    5. '[V' → logprob: -19.375001907348633
    6. '<v' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. '[n' → logprob: -20.375001907348633
    9. '(v' → logprob: -20.500001907348633
    10. ' v' → logprob: -20.750001907348633

Token 281: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.499629408121109
    2. ':' → logprob: -1.3746293783187866
    3. ']:' → logprob: -2.749629497528076
    4. '):
' → logprob: -2.749629497528076
    5. ':
' → logprob: -4.874629497528076
    6. ']:
' → logprob: -5.749629497528076
    7. '}:' → logprob: -6.749629497528076
    8. '>:' → logprob: -9.249629020690918
    9. '[' → logprob: -9.624629020690918
    10. ',' → logprob: -10.999629020690918

Token 282: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17848719656467438
    2. ':' → logprob: -1.9284871816635132
    3. ':
' → logprob: -4.803487300872803
    4. '               ' → logprob: -5.178487300872803
    5. '):' → logprob: -6.678487300872803
    6. '):
' → logprob: -7.428487300872803
    7. '                       ' → logprob: -7.553487300872803
    8. ',' → logprob: -7.928487300872803
    9. '                           ' → logprob: -8.428486824035645
    10. '<|end|>' → logprob: -8.428486824035645

Token 283: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.291584312915802
    2. '                       ' → logprob: -2.0415842533111572
    3. 'dist' (adapté à ' dist') → logprob: -2.5415842533111572
    4. '                   ' → logprob: -3.1665842533111572
    5. '                    ' → logprob: -7.041584491729736
    6. '               ' → logprob: -8.416584014892578
    7. '                        
' → logprob: -8.791584014892578
    8. '                        ' → logprob: -8.791584014892578
    9. '	dist' → logprob: -8.916584014892578
    10. '                    
' → logprob: -9.291584014892578

Token 284: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. 'v' → logprob: -17.000001907348633
    4. '[val' → logprob: -18.250001907348633
    5. '[var' → logprob: -20.500001907348633
    6. '[
' → logprob: -20.500001907348633
    7. ' [' → logprob: -20.625001907348633
    8. '[V' → logprob: -21.125001907348633
    9. '[value' → logprob: -21.125001907348633
    10. '	v' → logprob: -21.250001907348633

Token 285: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18826386332511902
    2. '=' → logprob: -2.5632638931274414
    3. ']=' → logprob: -2.8132638931274414
    4. ' =' → logprob: -3.6882638931274414
    5. '[v' → logprob: -4.688263893127441
    6. '=v' → logprob: -8.688263893127441
    7. '[' → logprob: -10.063263893127441
    8. 'v' → logprob: -10.188263893127441
    9. ',' → logprob: -10.938263893127441
    10. ' ]' → logprob: -11.313263893127441

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871476352214813
    2. ' =' → logprob: -1.1371476650238037
    3. '[v' → logprob: -8.762147903442383
    4. '=v' → logprob: -9.137147903442383
    5. ',' → logprob: -12.387147903442383
    6. '[' → logprob: -12.762147903442383
    7. ']' → logprob: -13.262147903442383
    8. '=
' → logprob: -14.012147903442383
    9. ']=' → logprob: -14.387147903442383
    10. '.=' → logprob: -14.637147903442383

Token 287: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6931514143943787
    2. ' nd' → logprob: -0.6931514143943787
    3. '(nd' → logprob: -12.818151473999023
    4. '_nd' → logprob: -14.818151473999023
    5. ' ' → logprob: -15.443151473999023
    6. 'n' → logprob: -16.068151473999023
    7. '.nd' → logprob: -16.193151473999023
    8. '
' → logprob: -16.318151473999023
    9. 'ndl' → logprob: -16.568151473999023
    10. 'nt' → logprob: -16.693151473999023

Token 288: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00015240935317706317
    2. '               ' → logprob: -10.000152587890625
    3. '                       ' → logprob: -10.625152587890625
    4. ',' → logprob: -11.000152587890625
    5. '				' → logprob: -11.000152587890625
    6. '           ' → logprob: -11.500152587890625
    7. '<|end|>' → logprob: -11.500152587890625
    8. '                    ' → logprob: -11.750152587890625
    9. '                  ' → logprob: -11.750152587890625
    10. 'heap' → logprob: -12.875152587890625

Token 289: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.429896944202483e-05
    2. '				' → logprob: -11.375043869018555
    3. ',' → logprob: -11.625043869018555
    4. 'heap' → logprob: -12.000043869018555
    5. '                  ' → logprob: -12.250043869018555
    6. '               ' → logprob: -12.875043869018555
    7. '                    
' → logprob: -13.000043869018555
    8. '           ' → logprob: -13.250043869018555
    9. '                    ' → logprob: -13.500043869018555
    10. '		           ' → logprob: -13.750043869018555

Token 290: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -5.180879816180095e-05
    2. ' heap' → logprob: -9.875051498413086
    3. '                   ' → logprob: -15.250051498413086
    4. '           ' → logprob: -19.000051498413086
    5. '               ' → logprob: -19.125051498413086
    6. 'he' → logprob: -19.125051498413086
    7. '
' → logprob: -19.750051498413086
    8. '                       ' → logprob: -19.750051498413086
    9. '(heap' → logprob: -19.875051498413086
    10. '.heap' → logprob: -20.125051498413086

Token 291: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. 'p' → logprob: -13.125001907348633
    3. 'push' → logprob: -15.875001907348633
    4. 'app' → logprob: -16.500001907348633
    5. '```' → logprob: -17.000001907348633
    6. '.push' → logprob: -17.875001907348633
    7. '.he' → logprob: -18.250001907348633
    8. '-p' → logprob: -18.500001907348633
    9. 'v' → logprob: -18.500001907348633
    10. '_push' → logprob: -18.750001907348633

Token 292: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0001561009994475171
    2. 'he' → logprob: -9.12515640258789
    3. 'q' → logprob: -10.25015640258789
    4. '.' → logprob: -12.25015640258789
    5. '.heap' → logprob: -12.62515640258789
    6. '.push' → logprob: -13.12515640258789
    7. 'push' → logprob: -14.75015640258789
    8. 'ush' → logprob: -14.87515640258789
    9. '```' → logprob: -15.37515640258789
    10. '/he' → logprob: -15.50015640258789

Token 293: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.014520147815346718
    2. 'pp' → logprob: -4.264520168304443
    3. 'p' → logprob: -8.889519691467285
    4. 'push' → logprob: -9.139519691467285
    5. 'ap' → logprob: -9.514519691467285
    6. 'op' → logprob: -11.014519691467285
    7. 'ush' → logprob: -11.764519691467285
    8. 'he' → logprob: -12.389519691467285
    9. 'q' → logprob: -12.514519691467285
    10. '```' → logprob: -13.514519691467285

Token 294: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.029601674526929855
    2. 'app' → logprob: -3.779601573944092
    3. 'push' → logprob: -5.654601573944092
    4. 'op' → logprob: -6.279601573944092
    5. 'pp' → logprob: -8.02960205078125
    6. 'p' → logprob: -8.15460205078125
    7. 'ap' → logprob: -8.27960205078125
    8. '```' → logprob: -9.77960205078125
    9. 'q' → logprob: -11.27960205078125
    10. '   ' → logprob: -12.52960205078125

Token 295: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -16.125028610229492
    4. '((' → logprob: -17.250028610229492
    5. 'pq' → logprob: -17.375028610229492
    6. '(q' → logprob: -17.875028610229492
    7. 'p' → logprob: -18.625028610229492
    8. '(
' → logprob: -19.875028610229492
    9. ' ' → logprob: -20.500028610229492
    10. ' pq' → logprob: -20.875028610229492

Token 296: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8908587662735954e-05
    2. '(p' → logprob: -11.250019073486328
    3. '(q' → logprob: -12.625019073486328
    4. '(' → logprob: -14.625019073486328
    5. 'Q' → logprob: -15.125019073486328
    6. ')' → logprob: -15.250019073486328
    7. '
' → logprob: -15.250019073486328
    8. 'pq' → logprob: -15.250019073486328
    9. '	q' → logprob: -15.750019073486328
    10. 'v' → logprob: -15.875019073486328

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30634990334510803
    2. '(p' → logprob: -1.8063498735427856
    3. '(' → logprob: -3.056349992752075
    4. '((' → logprob: -3.681349992752075
    5. ',(' → logprob: -4.306349754333496
    6. ' (' → logprob: -4.931349754333496
    7. ' ,' → logprob: -5.681349754333496
    8. ')' → logprob: -6.181349754333496
    9. ',p' → logprob: -7.681349754333496
    10. '(q' → logprob: -8.931349754333496

Token 298: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6336544752120972
    2. '(nd' → logprob: -0.8836544752120972
    3. ' (' → logprob: -2.8836545944213867
    4. '(n' → logprob: -8.883654594421387
    5. '(nn' → logprob: -12.258654594421387
    6. '(nt' → logprob: -13.758654594421387
    7. '(ns' → logprob: -13.883654594421387
    8. '((' → logprob: -14.133654594421387
    9. '(rd' → logprob: -14.383654594421387
    10. '   ' → logprob: -14.383654594421387

Token 299: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0019308974733576179
    2. ' nd' → logprob: -6.2519307136535645
    3. '(nd' → logprob: -13.376931190490723
    4. 'dist' → logprob: -14.876931190490723
    5. '_nd' → logprob: -15.501931190490723
    6. 'rd' → logprob: -16.751930236816406
    7. '   ' → logprob: -17.376930236816406
    8. ' ' → logprob: -17.376930236816406
    9. 'Nd' → logprob: -18.251930236816406
    10. 'nt' → logprob: -18.376930236816406

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ',v' → logprob: -11.750011444091797
    3. ' ,' → logprob: -12.875011444091797
    4. ',
' → logprob: -14.625011444091797
    5. '<|end|>' → logprob: -15.375011444091797
    6. 'v' → logprob: -16.125011444091797
    7. '‌,' → logprob: -17.250011444091797
    8. ')' → logprob: -17.750011444091797
    9. '),' → logprob: -18.000011444091797
    10. '```' → logprob: -18.375011444091797

Token 301: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. ')v' → logprob: -16.876171112060547
    4. '	v' → logprob: -18.001171112060547
    5. ')' → logprob: -20.376171112060547
    6. 'vq' → logprob: -20.501171112060547
    7. '[v' → logprob: -21.126171112060547
    8. '```' → logprob: -21.251171112060547
    9. '<|end|>' → logprob: -21.251171112060547
    10. 've' → logprob: -21.376171112060547

Token 302: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.900034299585968e-05
    2. '))
' → logprob: -9.500088691711426
    3. ')' → logprob: -11.375088691711426
    4. ' ))' → logprob: -13.375088691711426
    5. ')))' → logprob: -14.500088691711426
    6. '               ' → logprob: -16.000089645385742
    7. '           ' → logprob: -16.250089645385742
    8. '))

' → logprob: -16.875089645385742
    9. ',' → logprob: -16.875089645385742
    10. '                   ' → logprob: -17.375089645385742

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03897405415773392
    2. '   ' → logprob: -4.413974285125732
    3. '
' → logprob: -4.538974285125732
    4. 'for' → logprob: -5.288974285125732
    5. '#' → logprob: -5.788974285125732
    6. '        
' → logprob: -6.163974285125732
    7. 'def' → logprob: -7.163974285125732
    8. ')' → logprob: -7.538974285125732
    9. '```' → logprob: -7.538974285125732
    10. '    
' → logprob: -7.663974285125732

Token 304: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6613188982009888
    2. '#' (adapté à ' #') → logprob: -1.6613188982009888
    3. 'prev' → logprob: -2.036318778991699
    4. 'parents' → logprob: -2.411318778991699
    5. 'path' → logprob: -3.661318778991699
    6. 'used' → logprob: -4.786318778991699
    7. 'pre' → logprob: -5.036318778991699
    8. 'cost' → logprob: -5.286318778991699
    9. 'par' → logprob: -5.536318778991699
    10. 'pred' → logprob: -5.536318778991699

Token 305: ' After' (ID: 6311)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0088739395141602
    2. 'parent' → logprob: -1.0088739395141602
    3. 'parents' → logprob: -2.88387393951416
    4. 'used' → logprob: -3.13387393951416
    5. 'path' → logprob: -4.00887393951416
    6. 'visited' → logprob: -4.13387393951416
    7. 'prev' → logprob: -4.25887393951416
    8. 'min' → logprob: -4.25887393951416
    9. 'pre' → logprob: -4.25887393951416
    10. 'edges' → logprob: -4.75887393951416

Token 306: ' this' (ID: 495)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8351675868034363
    2. 'this' → logprob: -1.085167646408081
    3. 'that' → logprob: -2.460167646408081
    4. ' this' → logprob: -3.085167646408081
    5. 'dist' → logprob: -3.835167646408081
    6. 'D' → logprob: -3.835167646408081
    7. ' that' → logprob: -4.085167407989502
    8. '#' → logprob: -4.210167407989502
    9. 'the' → logprob: -4.835167407989502
    10. 'Step' → logprob: -6.335167407989502

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21817080676555634
    2. '#' → logprob: -1.9681707620620728
    3. '       ' → logprob: -2.9681708812713623
    4. ',
' → logprob: -6.968170642852783
    5. ' #' → logprob: -7.593170642852783
    6. ' step' → logprob: -7.968170642852783
    7. 'we' → logprob: -8.343171119689941
    8. 'distance' → logprob: -8.343171119689941
    9. 'Step' → logprob: -8.468171119689941
    10. 'dist' → logprob: -8.593171119689941

Token 308: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07160893827676773
    2. 'parent' → logprob: -3.4466090202331543
    3. 'parents' → logprob: -4.571609020233154
    4. 'prev' → logprob: -4.946609020233154
    5. 'min' → logprob: -5.821609020233154
    6. 'pre' → logprob: -6.071609020233154
    7. 'paths' → logprob: -6.946609020233154
    8. ' #' → logprob: -7.071609020233154
    9. '```' → logprob: -7.071609020233154
    10. 'cost' → logprob: -7.196609020233154

Token 309: '[i' (ID: 1768)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.7678688764572144
    2. ' represents' → logprob: -2.142868995666504
    3. 'rep' → logprob: -2.267868995666504
    4. '<|end|>' → logprob: -2.517868995666504
    5. 'contains' → logprob: -2.767868995666504
    6. '[v' → logprob: -2.767868995666504
    7. '[' → logprob: -3.517868995666504
    8. ' stores' → logprob: -4.017868995666504
    9. ' is' → logprob: -4.767868995666504
    10. '[]' → logprob: -4.767868995666504

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014694714918732643
    2. ' represents' → logprob: -5.389694690704346
    3. ' contains' → logprob: -5.639694690704346
    4. ' ]' → logprob: -6.139694690704346
    5. 'contains' → logprob: -6.514694690704346
    6. 'rep' → logprob: -6.514694690704346
    7. '[i' → logprob: -7.764694690704346
    8. ')' → logprob: -8.639695167541504
    9. '])' → logprob: -8.764695167541504
    10. '[' → logprob: -8.764695167541504

Token 311: ' is' (ID: 382)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -1.0374171733856201
    2. 'contains' → logprob: -1.1624171733856201
    3. 'rep' → logprob: -1.6624171733856201
    4. ' represents' → logprob: -3.16241717338562
    5. '<|end|>' → logprob: -3.53741717338562
    6. ' stores' → logprob: -4.662417411804199
    7. 'is' → logprob: -4.787417411804199
    8. '==' → logprob: -5.287417411804199
    9. ' holds' → logprob: -5.287417411804199
    10. ' is' → logprob: -5.287417411804199

Token 312: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.020820152014493942
    2. ' the' → logprob: -3.895820140838623
    3. '#' → logprob: -9.520820617675781
    4. '<|end|>' → logprob: -9.520820617675781
    5. 'minimum' → logprob: -9.770820617675781
    6. 'short' → logprob: -11.270820617675781
    7. 'final' → logprob: -11.770820617675781
    8. 'a' → logprob: -11.895820617675781
    9. '<|end|>' → logprob: -11.895820617675781
    10. ' shortest' → logprob: -12.145820617675781

Token 313: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.1878173053264618
    2. ' shortest' → logprob: -1.9378173351287842
    3. 'minimum' → logprob: -3.812817335128784
    4. 'length' → logprob: -5.437817096710205
    5. 'distance' → logprob: -8.062817573547363
    6. ' length' → logprob: -8.812817573547363
    7. ' minimum' → logprob: -9.187817573547363
    8. 'minimal' → logprob: -9.562817573547363
    9. '#' → logprob: -10.562817573547363
    10. '```' → logprob: -10.687817573547363

Token 314: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.11844188719987869
    2. ' distance' → logprob: -2.4934418201446533
    3. 'path' → logprob: -3.8684418201446533
    4. ' path' → logprob: -4.868442058563232
    5. 'dist' → logprob: -8.868441581726074
    6. 'paths' → logprob: -9.993441581726074
    7. '_distance' → logprob: -9.993441581726074
    8. '_path' → logprob: -10.118441581726074
    9. ' distances' → logprob: -10.368441581726074
    10. 'possible' → logprob: -10.368441581726074

Token 315: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12081614136695862
    2. 'to' → logprob: -2.995816230773926
    3. ' to' → logprob: -3.620816230773926
    4. 'for' → logprob: -3.745816230773926
    5. ' from' → logprob: -4.620816230773926
    6. ' for' → logprob: -5.870816230773926
    7. '       ' → logprob: -8.245816230773926
    8. '#' → logprob: -8.370816230773926
    9. '   ' → logprob: -9.495816230773926
    10. ' of' → logprob: -9.620816230773926

Token 316: ' city' (ID: 5030)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.5817256569862366
    2. 'capital' → logprob: -1.3317255973815918
    3. '1' → logprob: -2.081725597381592
    4. 'the' → logprob: -3.456725597381592
    5. ' city' → logprob: -4.331725597381592
    6. ' capital' → logprob: -5.206725597381592
    7. ' the' → logprob: -6.581725597381592
    8. ' ' → logprob: -7.581725597381592
    9. 'node' → logprob: -8.58172607421875
    10. '   ' → logprob: -10.45672607421875

Token 317: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010373335098847747
    2. ' ' → logprob: -6.876037120819092
    3. 'i' → logprob: -13.12603759765625
    4. '
' → logprob: -14.12603759765625
    5. '0' → logprob: -14.25103759765625
    6. '   ' → logprob: -15.00103759765625
    7. ' i' → logprob: -15.62603759765625
    8. '```' → logprob: -15.62603759765625
    9. '[i' → logprob: -16.37603759765625
    10. ' ' → logprob: -16.50103759765625

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. 'i' → logprob: -11.125025749206543
    3. ' ' → logprob: -11.625025749206543
    4. '0' → logprob: -13.625025749206543
    5. '
' → logprob: -15.625025749206543
    6. ' i' → logprob: -15.750025749206543
    7. '   ' → logprob: -15.875025749206543
    8. '[i' → logprob: -16.00002670288086
    9. 'to' → logprob: -16.25002670288086
    10. '```' → logprob: -16.25002670288086

Token 319: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22777879238128662
    2. ' to' → logprob: -1.6027787923812866
    3. '       ' → logprob: -6.852778911590576
    4. 'for' → logprob: -6.852778911590576
    5. '#' → logprob: -8.602778434753418
    6. ' for' → logprob: -10.227778434753418
    7. '   ' → logprob: -10.852778434753418
    8. 'def' → logprob: -13.102778434753418
    9. ' ' → logprob: -13.352778434753418
    10. ',' → logprob: -13.477778434753418

Token 320: ' city' (ID: 5030)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08642712235450745
    2. 'city' → logprob: -2.5864272117614746
    3. 'each' → logprob: -5.086427211761475
    4. ' city' → logprob: -6.961427211761475
    5. ' i' → logprob: -8.086426734924316
    6. ' each' → logprob: -9.961426734924316
    7. 'every' → logprob: -11.461426734924316
    8. 'all' → logprob: -11.961426734924316
    9. 'any' → logprob: -12.711426734924316
    10. '[i' → logprob: -12.961426734924316

Token 321: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021896660327911
    2. ' i' → logprob: -2.3502190113067627
    3. '_i' → logprob: -11.725218772888184
    4. '   ' → logprob: -13.350218772888184
    5. ' ' → logprob: -14.350218772888184
    6. '[i' → logprob: -14.475218772888184
    7. ' to' → logprob: -14.975218772888184
    8. '```' → logprob: -15.100218772888184
    9. ',' → logprob: -15.350218772888184
    10. '`' → logprob: -15.475218772888184

Token 322: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13255906105041504
    2. '
' → logprob: -3.007559061050415
    3. '#' → logprob: -3.507559061050415
    4. '        
' → logprob: -3.632559061050415
    5. ',' → logprob: -5.382558822631836
    6. 'prev' → logprob: -5.757558822631836
    7. 'parent' → logprob: -5.757558822631836
    8. '

' → logprob: -7.007558822631836
    9. '```' → logprob: -7.257558822631836
    10. 'parents' → logprob: -7.382558822631836

Token 323: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.201566457748413
    2. 'parent' → logprob: -1.201566457748413
    3. 'parents' → logprob: -2.451566457748413
    4. 'prev' → logprob: -2.826566457748413
    5. '       ' → logprob: -2.951566457748413
    6. 'used' → logprob: -3.326566457748413
    7. 'path' → logprob: -3.576566457748413
    8. 'dp' → logprob: -3.951566457748413
    9. 'mst' → logprob: -4.326566696166992
    10. 'min' → logprob: -4.451566696166992

Token 324: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0095924139022827
    2. 'parent' → logprob: -1.0095924139022827
    3. 'parents' → logprob: -2.8845925331115723
    4. 'used' → logprob: -3.7595925331115723
    5. 'cost' → logprob: -3.7595925331115723
    6. 'path' → logprob: -3.7595925331115723
    7. 'dp' → logprob: -4.009592533111572
    8. 'prev' → logprob: -4.134592533111572
    9. 'min' → logprob: -4.384592533111572
    10. 'pre' → logprob: -4.509592533111572

Token 325: ' Step' (ID: 22291)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6046088933944702
    2. 'parent' → logprob: -1.7296088933944702
    3. 'parents' → logprob: -2.7296090126037598
    4. 'used' → logprob: -3.2296090126037598
    5. 'dp' → logprob: -3.4796090126037598
    6. 'path' → logprob: -4.35460901260376
    7. 'min' → logprob: -4.47960901260376
    8. 'cost' → logprob: -4.47960901260376
    9. 'visited' → logprob: -4.47960901260376
    10. 'prev' → logprob: -4.72960901260376

Token 326: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3517773449420929
    2. '2' → logprob: -1.2267773151397705
    3. ' #' → logprob: -7.10177755355835
    4. '1' → logprob: -7.35177755355835
    5. '#' → logprob: -7.35177755355835
    6. '   ' → logprob: -7.85177755355835
    7. ':' → logprob: -8.601777076721191
    8. '       ' → logprob: -8.976777076721191
    9. ' =' → logprob: -9.476777076721191
    10. '3' → logprob: -9.601777076721191

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008546437602490187
    2. '3' → logprob: -7.7508544921875
    3. ' ' → logprob: -8.3758544921875
    4. '#' → logprob: -9.6258544921875
    5. ':' → logprob: -9.8758544921875
    6. '4' → logprob: -10.8758544921875
    7. '       ' → logprob: -11.1258544921875
    8. '1' → logprob: -11.2508544921875
    9. '5' → logprob: -12.2508544921875
    10. '   ' → logprob: -12.6258544921875

Token 328: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6615524888038635
    2. ':' → logprob: -0.7865524888038635
    3. '#' → logprob: -3.6615524291992188
    4. '   ' → logprob: -6.786552429199219
    5. ' #' → logprob: -7.286552429199219
    6. ':
' → logprob: -7.911552429199219
    7. ',' → logprob: -9.036552429199219
    8. '
' → logprob: -9.286552429199219
    9. '        
' → logprob: -9.661552429199219
    10. '           ' → logprob: -10.036552429199219

Token 329: ' Filter' (ID: 20308)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5145260095596313
    2. 'parent' → logprob: -1.3895260095596313
    3. 'dp' → logprob: -3.514525890350342
    4. 'parents' → logprob: -3.639525890350342
    5. 'min' → logprob: -4.139525890350342
    6. 'candidate' → logprob: -4.514525890350342
    7. 'possible' → logprob: -4.889525890350342
    8. 'selected' → logprob: -5.014525890350342
    9. 'c' → logprob: -5.139525890350342
    10. ' #' → logprob: -5.514525890350342

Token 330: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7284093499183655
    2. 'edges' → logprob: -1.3534092903137207
    3. 'the' → logprob: -2.7284092903137207
    4. ' the' → logprob: -3.2284092903137207
    5. 'graph' → logprob: -3.6034092903137207
    6. 'for' → logprob: -3.8534092903137207
    7. '_edges' → logprob: -4.228409290313721
    8. '(' → logprob: -4.353409290313721
    9. ' for' → logprob: -4.728409290313721
    10. '#' → logprob: -4.728409290313721

Token 331: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9186808466911316
    2. ' =' → logprob: -1.1686809062957764
    3. 'filtered' → logprob: -2.5436809062957764
    4. 'valid' → logprob: -3.0436809062957764
    5. 'for' → logprob: -3.4186809062957764
    6. '=' → logprob: -3.5436809062957764
    7. ' for' → logprob: -3.9186809062957764
    8. ' valid' → logprob: -4.418680667877197
    9. ' that' → logprob: -4.793680667877197
    10. 'used' → logprob: -5.043680667877197

Token 332: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6560017466545105
    2. 'can' → logprob: -1.0310018062591553
    3. 'could' → logprob: -2.9060018062591553
    4. ' could' → logprob: -3.9060018062591553
    5. ' lie' → logprob: -4.156001567840576
    6. 'are' → logprob: -4.906001567840576
    7. 's' → logprob: -4.906001567840576
    8. ' are' → logprob: -5.031001567840576
    9. 'connect' → logprob: -5.531001567840576
    10. 'have' → logprob: -6.531001567840576

Token 333: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4244138300418854
    2. 'be' → logprob: -1.174413800239563
    3. 'potential' → logprob: -4.424413681030273
    4. ' potentially' → logprob: -5.049413681030273
    5. ' possibly' → logprob: -5.174413681030273
    6. 'possibly' → logprob: -5.299413681030273
    7. 'connect' → logprob: -5.799413681030273
    8. '	be' → logprob: -6.924413681030273
    9. ' connect' → logprob: -7.424413681030273
    10. '   ' → logprob: -7.799413681030273

Token 334: ' on' (ID: 402)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.15798936784267426
    2. 'used' → logprob: -2.657989263534546
    3. ' part' → logprob: -2.782989263534546
    4. 'on' → logprob: -5.282989501953125
    5. ' used' → logprob: -5.782989501953125
    6. 'potential' → logprob: -6.407989501953125
    7. 'in' → logprob: -6.907989501953125
    8. ' on' → logprob: -7.032989501953125
    9. '   ' → logprob: -7.907989501953125
    10. 'included' → logprob: -7.907989501953125

Token 335: ' shortest' (ID: 70564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6374896168708801
    2. ' the' → logprob: -0.8874896168708801
    3. ' shortest' → logprob: -3.6374895572662354
    4. 'a' → logprob: -4.1374897956848145
    5. ' a' → logprob: -4.1374897956848145
    6. 'short' → logprob: -7.6374897956848145
    7. ' any' → logprob: -7.7624897956848145
    8. 'Shortest' → logprob: -8.512489318847656
    9. ' next' → logprob: -10.137489318847656
    10. 'some' → logprob: -10.137489318847656

Token 336: ' paths' (ID: 23373)
  Prédit: ' paths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paths' → logprob: -0.622675895690918
    2. 'paths' → logprob: -1.372675895690918
    3. 'path' → logprob: -2.122675895690918
    4. ' path' → logprob: -2.497675895690918
    5. '_paths' → logprob: -5.497675895690918
    6. '_path' → logprob: -5.622675895690918
    7. 'distance' → logprob: -8.747675895690918
    8. '   ' → logprob: -9.497675895690918
    9. ' distance' → logprob: -9.872675895690918
    10. ' distances' → logprob: -10.747675895690918

Token 337: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14779938757419586
    2. 'valid' → logprob: -2.897799491882324
    3. 'possible' → logprob: -3.272799491882324
    4. ' valid' → logprob: -3.897799491882324
    5. 'filtered' → logprob: -5.022799491882324
    6. ' possible' → logprob: -5.897799491882324
    7. 'short' → logprob: -6.522799491882324
    8. '        
' → logprob: -6.647799491882324
    9. ' filtered' → logprob: -6.772799491882324
    10. 'edges' → logprob: -6.772799491882324

Token 338: ' capital' (ID: 9029)
  Prédit: 'city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'city' → logprob: -0.7923505306243896
    2. 'capital' → logprob: -1.4173505306243896
    3. 'the' → logprob: -2.1673505306243896
    4. '1' → logprob: -2.4173505306243896
    5. ' city' → logprob: -3.0423505306243896
    6. ' capital' → logprob: -3.9173505306243896
    7. ' the' → logprob: -4.042350769042969
    8. ' ' → logprob: -4.917350769042969
    9. 'u' → logprob: -5.417350769042969
    10. 'any' → logprob: -6.667350769042969

Token 339: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14500439167022705
    2. ' valid' → logprob: -2.7700042724609375
    3. 'valid' → logprob: -3.7700042724609375
    4. 'possible' → logprob: -4.5200042724609375
    5. ' shortest' → logprob: -4.6450042724609375
    6. ' to' → logprob: -5.2700042724609375
    7. 'filtered' → logprob: -5.7700042724609375
    8. ' possible' → logprob: -5.7700042724609375
    9. '        
' → logprob: -6.3950042724609375
    10. ' for' → logprob: -6.6450042724609375

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00952149834483862
    2. '        
' → logprob: -6.634521484375
    3. ' for' → logprob: -6.759521484375
    4. ' valid' → logprob: -7.009521484375
    5. 'valid' → logprob: -7.009521484375
    6. 'possible' → logprob: -7.009521484375
    7. '
' → logprob: -7.134521484375
    8. 'filtered' → logprob: -7.259521484375
    9. 'for' → logprob: -7.634521484375
    10. ' to' → logprob: -7.634521484375

Token 341: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.48691391944885254
    2. ' valid' → logprob: -1.8619139194488525
    3. 'possible' → logprob: -2.6119139194488525
    4. '       ' → logprob: -2.9869139194488525
    5. 'short' → logprob: -3.4869139194488525
    6. 'filtered' → logprob: -3.6119139194488525
    7. 'usable' → logprob: -5.111913681030273
    8. 'good' → logprob: -5.236913681030273
    9. 'candidate' → logprob: -5.361913681030273
    10. ' shortest' → logprob: -5.486913681030273

Token 342: ' Condition' (ID: 30255)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5138731002807617
    2. 'possible' → logprob: -2.0138731002807617
    3. 'short' → logprob: -2.5138731002807617
    4. 'filtered' → logprob: -2.6388731002807617
    5. 'candidate' → logprob: -3.2638731002807617
    6. ' valid' → logprob: -4.388873100280762
    7. 'usable' → logprob: -4.388873100280762
    8. '   ' → logprob: -4.888873100280762
    9. 'sp' → logprob: -5.388873100280762
    10. 'good' → logprob: -5.513873100280762

Token 343: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4297311305999756
    2. '=' → logprob: -1.6797311305999756
    3. ':' → logprob: -2.6797311305999756
    4. ' for' → logprob: -3.3047311305999756
    5. 'for' → logprob: -3.4297311305999756
    6. '       ' → logprob: -3.9297311305999756
    7. '           ' → logprob: -6.554731369018555
    8. 'edges' → logprob: -6.679731369018555
    9. ' edges' → logprob: -7.179731369018555
    10. '   ' → logprob: -7.804731369018555

Token 344: ' edge' (ID: 11165)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.6010083556175232
    2. ' an' → logprob: -1.476008415222168
    3. 'e' → logprob: -2.351008415222168
    4. 'edge' → logprob: -2.601008415222168
    5. ' edge' → logprob: -3.726008415222168
    6. 'u' → logprob: -4.726008415222168
    7. 'edges' → logprob: -5.101008415222168
    8. '(u' → logprob: -5.851008415222168
    9. 'each' → logprob: -5.851008415222168
    10. 'v' → logprob: -6.601008415222168

Token 345: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6262860298156738
    2. '=' → logprob: -1.1262860298156738
    3. 's' → logprob: -3.251286029815674
    4. '(u' → logprob: -3.751286029815674
    5. ' in' → logprob: -3.876286029815674
    6. ':' → logprob: -4.251286029815674
    7. 'u' → logprob: -4.376286029815674
    8. ' u' → logprob: -4.626286029815674
    9. ' for' → logprob: -5.126286029815674
    10. ' is' → logprob: -5.751286029815674

Token 346: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.020010486245155334
    2. ' u' → logprob: -4.520010471343994
    3. '(u' → logprob: -4.895010471343994
    4. ',' → logprob: -7.395010471343994
    5. ')' → logprob: -8.270010948181152
    6. ' (' → logprob: -8.895010948181152
    7. '   ' → logprob: -8.895010948181152
    8. ',u' → logprob: -9.270010948181152
    9. '),' → logprob: -10.520010948181152
    10. '_,' → logprob: -10.770010948181152

Token 347: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009066895581781864
    2. ',v' → logprob: -4.759067058563232
    3. ' ,' → logprob: -8.259066581726074
    4. ',u' → logprob: -9.009066581726074
    5. ')' → logprob: -10.259066581726074
    6. 'v' → logprob: -11.759066581726074
    7. '=' → logprob: -12.384066581726074
    8. ',
' → logprob: -13.009066581726074
    9. 'u' → logprob: -13.134066581726074
    10. '==' → logprob: -13.384066581726074

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0748562440276146
    2. ',' → logprob: -3.3248562812805176
    3. '):' → logprob: -3.4498562812805176
    4. ' )' → logprob: -6.324856281280518
    5. ' to' → logprob: -7.324856281280518
    6. ' ,' → logprob: -7.824856281280518
    7. '   ' → logprob: -7.824856281280518
    8. '):
' → logprob: -8.32485580444336
    9. ',)' → logprob: -8.69985580444336
    10. ',u' → logprob: -9.19985580444336

Token 349: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11408970504999161
    2. ' if' → logprob: -3.1140897274017334
    3. ' to' → logprob: -3.7390897274017334
    4. ' is' → logprob: -4.239089488983154
    5. ',' → logprob: -5.614089488983154
    6. '   ' → logprob: -5.864089488983154
    7. ' in' → logprob: -5.864089488983154
    8. 'if' → logprob: -5.989089488983154
    9. ' :' → logprob: -5.989089488983154
    10. '=' → logprob: -6.364089488983154

Token 350: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8311604857444763
    2. 'distance' → logprob: -1.456160545349121
    3. 'd' → logprob: -2.081160545349121
    4. ' length' → logprob: -2.706160545349121
    5. '(u' → logprob: -2.831160545349121
    6. 'u' → logprob: -3.831160545349121
    7. 'dist' → logprob: -4.456160545349121
    8. ' distance' → logprob: -4.456160545349121
    9. ' d' → logprob: -4.956160545349121
    10. '(length' → logprob: -5.206160545349121

Token 351: ' d' (ID: 272)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.782344400882721
    2. '<=' → logprob: -1.4073443412780762
    3. '==' → logprob: -2.032344341278076
    4. ' ==' → logprob: -2.532344341278076
    5. ')' → logprob: -3.157344341278076
    6. ' d' → logprob: -4.407344341278076
    7. 'd' → logprob: -4.407344341278076
    8. ',' → logprob: -5.032344341278076
    9. ')==' → logprob: -6.157344341278076
    10. ')<=' → logprob: -6.157344341278076

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1391180008649826
    2. ' to' → logprob: -2.514117956161499
    3. ' <=' → logprob: -4.264118194580078
    4. ',' → logprob: -5.014118194580078
    5. ' if' → logprob: -5.639118194580078
    6. ' is' → logprob: -5.764118194580078
    7. ')' → logprob: -5.764118194580078
    8. ' :' → logprob: -5.764118194580078
    9. ' in' → logprob: -6.014118194580078
    10. '=' → logprob: -6.139118194580078

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028567200526595116
    2. ' if' → logprob: -4.153567314147949
    3. '        ' → logprob: -4.903567314147949
    4. ' for' → logprob: -5.778567314147949
    5. '        
' → logprob: -7.903567314147949
    6. '    ' → logprob: -8.15356731414795
    7. '   ' → logprob: -8.77856731414795
    8. ' to' → logprob: -8.77856731414795
    9. '           ' → logprob: -8.90356731414795
    10. ' ' → logprob: -9.02856731414795

Token 354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1305091381072998
    2. ' if' → logprob: -2.5055091381073
    3. '        ' → logprob: -4.005509376525879
    4. ' for' → logprob: -4.130509376525879
    5. ' ' → logprob: -6.255509376525879
    6. '    ' → logprob: -6.755509376525879
    7. '           ' → logprob: -7.255509376525879
    8. '   ' → logprob: -7.755509376525879
    9. ')' → logprob: -8.005509376525879
    10. '        
' → logprob: -8.255509376525879

Token 355: ' It' (ID: 1225)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4601878225803375
    2. 'if' → logprob: -1.4601877927780151
    3. ' (' → logprob: -2.4601879119873047
    4. ' dist' → logprob: -4.085187911987305
    5. 'dist' → logprob: -4.585187911987305
    6. '(u' → logprob: -4.835187911987305
    7. ' u' → logprob: -5.335187911987305
    8. 'u' → logprob: -5.960187911987305
    9. '       ' → logprob: -5.960187911987305
    10. '(dist' → logprob: -5.960187911987305

Token 356: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8281615376472473
    2. ' satisfies' → logprob: -0.9531615376472473
    3. ' is' → logprob: -3.0781614780426025
    4. ' must' → logprob: -3.5781614780426025
    5. ' s' → logprob: -3.7031614780426025
    6. 'u' → logprob: -3.8281614780426025
    7. ' in' → logprob: -4.703161716461182
    8. ' can' → logprob: -5.078161716461182
    9. '=' → logprob: -5.328161716461182
    10. 'if' → logprob: -5.328161716461182

Token 357: ' appear' (ID: 7680)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10421033203601837
    2. 'be' → logprob: -2.354210376739502
    3. ' either' → logprob: -6.229210376739502
    4. 'either' → logprob: -7.104210376739502
    5. 'connect' → logprob: -8.229209899902344
    6. ' connect' → logprob: -8.354209899902344
    7. '   ' → logprob: -8.729209899902344
    8. '	be' → logprob: -9.104209899902344
    9. ' only' → logprob: -9.604209899902344
    10. 'continue' → logprob: -9.854209899902344

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.537221372127533
    2. ' on' → logprob: -1.0372214317321777
    3. 'in' → logprob: -3.4122214317321777
    4. 'on' → logprob: -3.7872214317321777
    5. ' as' → logprob: -6.537221431732178
    6. '   ' → logprob: -6.662221431732178
    7. ' if' → logprob: -6.662221431732178
    8. '           ' → logprob: -7.787221431732178
    9. ' only' → logprob: -8.16222095489502
    10. ',' → logprob: -8.66222095489502

Token 359: ' shortest' (ID: 70564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7277477979660034
    2. 'the' → logprob: -1.1027477979660034
    3. ' a' → logprob: -2.727747917175293
    4. 'dist' → logprob: -2.977747917175293
    5. ' the' → logprob: -3.227747917175293
    6. 'short' → logprob: -3.977747917175293
    7. ' shortest' → logprob: -4.977747917175293
    8. ' dist' → logprob: -6.977747917175293
    9. 'any' → logprob: -7.227747917175293
    10. ' any' → logprob: -8.102747917175293

Token 360: ' paths' (ID: 23373)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.39443182945251465
    2. ' path' → logprob: -1.8944318294525146
    3. 'paths' → logprob: -2.7694318294525146
    4. '_path' → logprob: -2.8944318294525146
    5. ' paths' → logprob: -3.3944318294525146
    6. '_paths' → logprob: -3.7694318294525146
    7. 'distance' → logprob: -8.394432067871094
    8. 's' → logprob: -8.894432067871094
    9. '-path' → logprob: -9.019432067871094
    10. '   ' → logprob: -9.644432067871094

Token 361: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1084798276424408
    2. ' only' → logprob: -2.3584797382354736
    3. 'if' → logprob: -5.733479976654053
    4. '   ' → logprob: -6.108479976654053
    5. 'only' → logprob: -6.608479976654053
    6. ' iff' → logprob: -8.108479499816895
    7. '[u' → logprob: -8.358479499816895
    8. ' and' → logprob: -8.733479499816895
    9. '(u' → logprob: -9.108479499816895
    10. '       ' → logprob: -9.108479499816895

Token 362: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.030816026031970978
    2. ' dist' → logprob: -3.780816078186035
    3. '(dist' → logprob: -4.905816078186035
    4. '   ' → logprob: -9.280816078186035
    5. ' (' → logprob: -10.655816078186035
    6. '       ' → logprob: -11.780816078186035
    7. '	dist' → logprob: -12.280816078186035
    8. '           ' → logprob: -13.280816078186035
    9. '(' → logprob: -13.530816078186035
    10. '
' → logprob: -13.905816078186035

Token 363: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.001520695281215012
    2. '[v' → logprob: -6.50152063369751
    3. 'u' → logprob: -11.501521110534668
    4. '[' → logprob: -12.126521110534668
    5. '   ' → logprob: -14.251521110534668
    6. '```' → logprob: -14.501521110534668
    7. ' [' → logprob: -15.376521110534668
    8. '	u' → logprob: -15.376521110534668
    9. 'v' → logprob: -15.626521110534668
    10. '[i' → logprob: -16.37652015686035

Token 364: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8649424314498901
    2. '[u' → logprob: -0.9899424314498901
    3. ']+' → logprob: -1.7399424314498901
    4. '+' → logprob: -3.7399425506591797
    5. '[v' → logprob: -5.73994255065918
    6. '[' → logprob: -5.73994255065918
    7. ' +' → logprob: -6.98994255065918
    8. ')' → logprob: -8.73994255065918
    9. ')+' → logprob: -9.48994255065918
    10. '][' → logprob: -9.48994255065918

Token 365: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602904349565506
    2. ' +' → logprob: -1.9102904796600342
    3. '==' → logprob: -9.910290718078613
    4. '+
' → logprob: -11.910290718078613
    5. '＋' → logprob: -13.160290718078613
    6. '<=' → logprob: -13.410290718078613
    7. ' +
' → logprob: -13.910290718078613
    8. ' ==' → logprob: -14.160290718078613
    9. '[' → logprob: -14.410290718078613
    10. ' plus' → logprob: -14.410290718078613

Token 366: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023256894201040268
    2. ' d' → logprob: -3.773256778717041
    3. 'length' → logprob: -12.1482572555542
    4. ' ' → logprob: -13.5232572555542
    5. '1' → logprob: -14.3982572555542
    6. '```' → logprob: -14.3982572555542
    7. '`' → logprob: -14.5232572555542
    8. ' length' → logprob: -14.9607572555542
    9. '   ' → logprob: -15.0232572555542
    10. '
' → logprob: -15.0857572555542

Token 367: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4787447452545166
    2. '==' → logprob: -0.9787447452545166
    3. ' <=' → logprob: -5.8537445068359375
    4. '<=' → logprob: -6.3537445068359375
    5. '=' → logprob: -11.228744506835938
    6. ' ' → logprob: -11.353744506835938
    7. '>=' → logprob: -12.103744506835938
    8. ' >=' → logprob: -12.603744506835938
    9. '   ' → logprob: -13.228744506835938
    10. '           ' → logprob: -13.353744506835938

Token 368: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00033546582562848926
    2. ' dist' → logprob: -8.000335693359375
    3. '	dist' → logprob: -18.500335693359375
    4. '(dist' → logprob: -21.125335693359375
    5. '   ' → logprob: -21.500335693359375
    6. 'dis' → logprob: -21.500335693359375
    7. '.dist' → logprob: -21.750335693359375
    8. '_dist' → logprob: -22.125335693359375
    9. 'd' → logprob: -22.375335693359375
    10. 'distance' → logprob: -22.625335693359375

Token 369: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0007166040013544261
    2. 'v' → logprob: -7.250716686248779
    3. '[u' → logprob: -12.500716209411621
    4. '[' → logprob: -13.500716209411621
    5. '(v' → logprob: -14.250716209411621
    6. '	v' → logprob: -15.750716209411621
    7. '```' → logprob: -16.000717163085938
    8. ' v' → logprob: -16.250717163085938
    9. '[
' → logprob: -16.500717163085938
    10. '<v' → logprob: -16.625717163085938

Token 370: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0704633966088295
    2. ' or' → logprob: -2.6954634189605713
    3. ' )' → logprob: -8.320463180541992
    4. ' and' → logprob: -9.445463180541992
    5. 'or' → logprob: -9.445463180541992
    6. '       ' → logprob: -10.195463180541992
    7. '           ' → logprob: -10.445463180541992
    8. ')
' → logprob: -11.195463180541992
    9. ']' → logprob: -11.570463180541992
    10. '),' → logprob: -11.820463180541992

Token 371: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6415922045707703
    2. '       ' → logprob: -0.8915922045707703
    3. ' and' → logprob: -2.891592264175415
    4. ' for' → logprob: -5.766592025756836
    5. ',' → logprob: -6.391592025756836
    6. '        
' → logprob: -7.516592025756836
    7. '           ' → logprob: -7.641592025756836
    8. '
' → logprob: -7.891592025756836
    9. '   ' → logprob: -8.141592025756836
    10. ')' → logprob: -8.266592025756836

Token 372: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22055073082447052
    2. 'valid' → logprob: -2.345550775527954
    3. ' valid' → logprob: -3.970550775527954
    4. 'filtered' → logprob: -4.220550537109375
    5. ' for' → logprob: -4.470550537109375
    6. 'for' → logprob: -4.970550537109375
    7. 'possible' → logprob: -4.970550537109375
    8. 'selected' → logprob: -5.095550537109375
    9. '
' → logprob: -5.095550537109375
    10. 'next' → logprob: -5.595550537109375

Token 373: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6538726687431335
    2. 'valid' → logprob: -1.4038727283477783
    3. ' valid' → logprob: -3.1538727283477783
    4. 'filtered' → logprob: -3.2788727283477783
    5. ' and' → logprob: -3.4038727283477783
    6. '#' → logprob: -4.153872489929199
    7. 'possible' → logprob: -4.278872489929199
    8. 'and' → logprob: -4.528872489929199
    9. ' or' → logprob: -4.653872489929199
    10. 'edges' → logprob: -4.903872489929199

Token 374: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.016057360917329788
    2. 'dist' → logprob: -4.14105749130249
    3. ' ' → logprob: -11.266057014465332
    4. '    ' → logprob: -12.891057014465332
    5. '(dist' → logprob: -12.891057014465332
    6. '	dist' → logprob: -13.141057014465332
    7. '   ' → logprob: -13.766057014465332
    8. '        ' → logprob: -13.891057014465332
    9. ' ' → logprob: -15.141057014465332
    10. '       ' → logprob: -15.266057014465332

Token 375: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.014176084659993649
    2. '[v' → logprob: -4.264175891876221
    3. '[' → logprob: -11.514176368713379
    4. ' [' → logprob: -13.889176368713379
    5. '```' → logprob: -14.639176368713379
    6. '
' → logprob: -15.639176368713379
    7. 'u' → logprob: -15.764176368713379
    8. '[
' → logprob: -16.389175415039062
    9. '   ' → logprob: -16.514175415039062
    10. '[user' → logprob: -16.639175415039062

Token 376: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.29808759689331055
    2. '+' → logprob: -1.9230875968933105
    3. ')' → logprob: -2.7980875968933105
    4. ']' → logprob: -3.4230875968933105
    5. ' ==' → logprob: -5.2980875968933105
    6. ')+' → logprob: -5.2980875968933105
    7. ']+' → logprob: -5.6730875968933105
    8. '==' → logprob: -6.1730875968933105
    9. '[' → logprob: -6.9230875968933105
    10. ' ' → logprob: -7.9230875968933105

Token 377: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0619727298617363
    2. '+' → logprob: -2.8119726181030273
    3. '==' → logprob: -13.186972618103027
    4. ' ==' → logprob: -13.311972618103027
    5. ' ' → logprob: -13.811972618103027
    6. ' +
' → logprob: -16.436973571777344
    7. '   ' → logprob: -16.436973571777344
    8. '＋' → logprob: -16.811973571777344
    9. '```' → logprob: -16.936973571777344
    10. ' plus' → logprob: -17.311973571777344

Token 378: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5759708881378174
    2. ' d' → logprob: -0.8259708881378174
    3. ' ' → logprob: -11.950970649719238
    4. '    ' → logprob: -12.325970649719238
    5. ' u' → logprob: -12.450970649719238
    6. '   ' → logprob: -12.575970649719238
    7. '       ' → logprob: -13.200970649719238
    8. ' length' → logprob: -13.700970649719238
    9. 'length' → logprob: -13.700970649719238
    10. '
' → logprob: -13.950970649719238

Token 379: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740789234638214
    2. '==' → logprob: -0.974078893661499
    3. '=' → logprob: -13.974079132080078
    4. ' ' → logprob: -14.849079132080078
    5. ']==' → logprob: -15.349079132080078
    6. ')==' → logprob: -15.349079132080078
    7. '===' → logprob: -16.224079132080078
    8. '==
' → logprob: -16.224079132080078
    9. ' =' → logprob: -16.474079132080078
    10. '==(' → logprob: -17.474079132080078

Token 380: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.12693022191524506
    2. 'dist' → logprob: -2.1269302368164062
    3. ' u' → logprob: -14.251930236816406
    4. 'u' → logprob: -14.626930236816406
    5. '	dist' → logprob: -15.001930236816406
    6. '(dist' → logprob: -15.376930236816406
    7. '[' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.126930236816406
    9. ' ' → logprob: -16.376930236816406
    10. '[u' → logprob: -16.626930236816406

Token 381: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.061992447823286057
    2. 'u' → logprob: -2.8119924068450928
    3. '	u' → logprob: -11.936992645263672
    4. '[' → logprob: -11.936992645263672
    5. '```' → logprob: -12.561992645263672
    6. ' u' → logprob: -12.811992645263672
    7. '   ' → logprob: -13.186992645263672
    8. ''u' → logprob: -14.436992645263672
    9. '<u' → logprob: -14.436992645263672
    10. '
' → logprob: -14.561992645263672

Token 382: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14549873769283295
    2. '):' → logprob: -2.020498752593994
    3. '):
' → logprob: -6.270498752593994
    4. ':' → logprob: -8.270498275756836
    5. ' )' → logprob: -8.270498275756836
    6. ')
' → logprob: -8.520498275756836
    7. '       ' → logprob: -9.270498275756836
    8. ' ):' → logprob: -9.895498275756836
    9. '           ' → logprob: -11.020498275756836
    10. ']' → logprob: -11.270498275756836

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1437652111053467
    2. 'for' → logprob: -1.1437652111053467
    3. 'filtered' → logprob: -2.2687652111053467
    4. 'valid' → logprob: -2.3937652111053467
    5. '
' → logprob: -3.6437652111053467
    6. ' for' → logprob: -3.8937652111053467
    7. 'selected' → logprob: -4.018765449523926
    8. '        
' → logprob: -4.143765449523926
    9. '```' → logprob: -4.393765449523926
    10. '   ' → logprob: -4.518765449523926

Token 384: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6295925378799438
    2. '       ' → logprob: -2.0045924186706543
    3. 'filtered' → logprob: -2.3795924186706543
    4. 'short' → logprob: -2.7545924186706543
    5. 'possible' → logprob: -3.1295924186706543
    6. 'good' → logprob: -3.8795924186706543
    7. 'usable' → logprob: -4.004592418670654
    8. '   ' → logprob: -4.129592418670654
    9. 'sp' → logprob: -4.379592418670654
    10. 'selected' → logprob: -4.629592418670654

Token 385: ' We'll' (ID: 46830)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.986958384513855
    2. 'filtered' → logprob: -1.111958384513855
    3. '       ' → logprob: -1.986958384513855
    4. 'possible' → logprob: -3.3619585037231445
    5. 'short' → logprob: -3.6119585037231445
    6. 'usable' → logprob: -3.8619585037231445
    7. ' valid' → logprob: -4.3619585037231445
    8. '   ' → logprob: -4.6119585037231445
    9. ' filtered' → logprob: -4.7369585037231445
    10. 'good' → logprob: -4.8619585037231445

Token 386: ' use' (ID: 1199)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.29802316427230835
    2. 'create' → logprob: -2.548023223876953
    3. 'filter' → logprob: -2.798023223876953
    4. 'use' → logprob: -3.173023223876953
    5. 'keep' → logprob: -3.298023223876953
    6. 'construct' → logprob: -3.923023223876953
    7. 'filtered' → logprob: -4.923023223876953
    8. 'continue' → logprob: -6.298023223876953
    9. ' build' → logprob: -6.673023223876953
    10. 'select' → logprob: -6.673023223876953

Token 387: ' these' (ID: 1879)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.27916765213012695
    2. 'valid' → logprob: -2.779167652130127
    3. 'adj' → logprob: -3.029167652130127
    4. 'for' → logprob: -3.279167652130127
    5. 'default' → logprob: -3.779167652130127
    6. 'selected' → logprob: -3.779167652130127
    7. 'set' → logprob: -5.279167652130127
    8. 'filter' → logprob: -5.654167652130127
    9. 'short' → logprob: -5.779167652130127
    10. 'used' → logprob: -5.779167652130127

Token 388: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.8667231202125549
    2. 'filtered' → logprob: -0.9917231202125549
    3. 'valid' → logprob: -2.11672306060791
    4. ' edges' → logprob: -3.24172306060791
    5. 'for' → logprob: -4.74172306060791
    6. 'to' → logprob: -4.99172306060791
    7. ' filtered' → logprob: -5.36672306060791
    8. 'conditions' → logprob: -5.49172306060791
    9. ' to' → logprob: -5.49172306060791
    10. ' valid' → logprob: -5.61672306060791

Token 389: ' to' (ID: 316)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.2440851628780365
    2. 'short' → logprob: -3.2440850734710693
    3. 'valid' → logprob: -3.2440850734710693
    4. ' to' → logprob: -3.4940850734710693
    5. ' filtered' → logprob: -4.494085311889648
    6. 'in' → logprob: -4.494085311889648
    7. ' in' → logprob: -4.494085311889648
    8. 'selected' → logprob: -4.494085311889648
    9. ' as' → logprob: -4.744085311889648
    10. '_filtered' → logprob: -4.869085311889648

Token 390: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0331544354557991
    2. ' build' → logprob: -3.5331544876098633
    3. 'construct' → logprob: -5.783154487609863
    4. ' construct' → logprob: -9.033154487609863
    5. 'create' → logprob: -9.283154487609863
    6. '#' → logprob: -10.033154487609863
    7. ' create' → logprob: -11.283154487609863
    8. '_build' → logprob: -11.533154487609863
    9. 'form' → logprob: -11.658154487609863
    10. 'find' → logprob: -11.908154487609863

Token 391: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06165178120136261
    2. ' a' → logprob: -3.5616517066955566
    3. 'the' → logprob: -4.186651706695557
    4. 'an' → logprob: -4.686651706695557
    5. 'adj' → logprob: -5.561651706695557
    6. 'new' → logprob: -7.061651706695557
    7. ' the' → logprob: -7.436651706695557
    8. ' an' → logprob: -7.436651706695557
    9. 'graph' → logprob: -8.436652183532715
    10. 'mst' → logprob: -8.561652183532715

Token 392: ' sub' (ID: 1543)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.866112470626831
    2. 'new' → logprob: -1.241112470626831
    3. 'graph' → logprob: -2.741112470626831
    4. 'short' → logprob: -2.741112470626831
    5. 'sub' → logprob: -3.241112470626831
    6. 'sp' → logprob: -3.366112470626831
    7. 'tree' → logprob: -3.991112470626831
    8. 'mst' → logprob: -3.991112470626831
    9. 're' → logprob: -4.49111270904541
    10. 'parent' → logprob: -4.61611270904541

Token 393: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.003247943241149187
    2. 'set' → logprob: -5.7532477378845215
    3. ' graph' → logprob: -10.12824821472168
    4. '   ' → logprob: -11.75324821472168
    5. '       ' → logprob: -11.87824821472168
    6. 'tree' → logprob: -12.25324821472168
    7. 'raph' → logprob: -12.37824821472168
    8. '_graph' → logprob: -12.87824821472168
    9. '	graph' → logprob: -14.00324821472168
    10. '
' → logprob: -14.62824821472168

Token 394: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39766597747802734
    2. ',' → logprob: -2.3976659774780273
    3. '
' → logprob: -2.3976659774780273
    4. '.' → logprob: -3.8976659774780273
    5. ' for' → logprob: -4.147665977478027
    6. '        
' → logprob: -4.147665977478027
    7. ' and' → logprob: -4.272665977478027
    8. 'filtered' → logprob: -4.397665977478027
    9. ':' → logprob: -4.772665977478027
    10. ' to' → logprob: -5.272665977478027

Token 395: ' all' (ID: 722)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4470160901546478
    2. 'short' → logprob: -2.0720160007476807
    3. 'edges' → logprob: -2.5720160007476807
    4. 'all' → logprob: -2.6970160007476807
    5. 'we' → logprob: -3.8220160007476807
    6. 'only' → logprob: -3.9470160007476807
    7. 'for' → logprob: -4.19701623916626
    8. ' shortest' → logprob: -4.32201623916626
    9. ' each' → logprob: -5.19701623916626
    10. 'every' → logprob: -5.69701623916626

Token 396: ' shortest' (ID: 70564)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.033942122012376785
    2. ' edges' → logprob: -3.908942222595215
    3. 'short' → logprob: -5.158942222595215
    4. 'nodes' → logprob: -5.783942222595215
    5. ' shortest' → logprob: -6.658942222595215
    6. '(edges' → logprob: -7.533942222595215
    7. ' nodes' → logprob: -7.658942222595215
    8. 'dist' → logprob: -8.033942222595215
    9. '```' → logprob: -8.158942222595215
    10. 'the' → logprob: -8.658942222595215

Token 397: ' paths' (ID: 23373)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.18827521800994873
    2. '_path' → logprob: -1.9382752180099487
    3. '_edges' → logprob: -4.188275337219238
    4. '_' → logprob: -4.938275337219238
    5. '   ' → logprob: -6.563275337219238
    6. '       ' → logprob: -6.938275337219238
    7. 'paths' → logprob: -6.938275337219238
    8. '_graph' → logprob: -7.063275337219238
    9. '_dist' → logprob: -7.813275337219238
    10. 'path' → logprob: -8.188275337219238

Token 398: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.32059645652771
    2. ' can' → logprob: -1.69559645652771
    3. 'can' → logprob: -1.69559645652771
    4. ' are' → logprob: -1.82059645652771
    5. ' lie' → logprob: -2.94559645652771
    6. 'appear' → logprob: -3.32059645652771
    7. '   ' → logprob: -3.57059645652771
    8. ' exist' → logprob: -3.57059645652771
    9. ' reside' → logprob: -4.445596694946289
    10. 'exist' → logprob: -4.945596694946289

Token 399: ' preserved' (ID: 59936)
  Prédit: 'contained'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contained' → logprob: -0.9345775842666626
    2. 'allowed' → logprob: -2.059577465057373
    3. 'included' → logprob: -2.309577465057373
    4. 'consider' → logprob: -2.809577465057373
    5. 'edges' → logprob: -2.809577465057373
    6. 'pres' → logprob: -2.809577465057373
    7. 'stored' → logprob: -2.934577465057373
    8. 'possible' → logprob: -2.934577465057373
    9. 'ke' → logprob: -3.809577465057373
    10. 'valid' → logprob: -3.809577465057373

Token 400: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.65320885181427
    2. '
' → logprob: -0.90320885181427
    3. '        
' → logprob: -3.4032087326049805
    4. ',' → logprob: -3.9032087326049805
    5. 'filtered' → logprob: -5.4032087326049805
    6. '<|end|>' → logprob: -6.0282087326049805
    7. '

' → logprob: -6.2782087326049805
    8. ',
' → logprob: -6.5282087326049805
    9. '        

' → logprob: -6.6532087326049805
    10. '.' → logprob: -6.7782087326049805

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19033999741077423
    2. '
' → logprob: -2.315340042114258
    3. 'filtered' → logprob: -3.565340042114258
    4. '        
' → logprob: -3.815340042114258
    5. '```' → logprob: -5.315340042114258
    6. 'sub' → logprob: -5.690340042114258
    7. 'for' → logprob: -5.815340042114258
    8. 'valid' → logprob: -6.440340042114258
    9. 'edges' → logprob: -6.440340042114258
    10. 'graph' → logprob: -7.190340042114258

Token 402: ' shortest' (ID: 70564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37499257922172546
    2. 'short' → logprob: -1.8749926090240479
    3. 'filtered' → logprob: -2.624992609024048
    4. 'sub' → logprob: -3.249992609024048
    5. 'valid' → logprob: -3.874992609024048
    6. 'sp' → logprob: -5.499992370605469
    7. '
' → logprob: -5.624992370605469
    8. '        
' → logprob: -6.124992370605469
    9. 'edges' → logprob: -6.249992370605469
    10. ' shortest' → logprob: -6.499992370605469

Token 403: '_path' (ID: 5558)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.020024040713906288
    2. '_paths' → logprob: -4.145023822784424
    3. '_path' → logprob: -6.020023822784424
    4. '_sub' → logprob: -7.645023822784424
    5. 'edges' → logprob: -7.645023822784424
    6. '_graph' → logprob: -7.895023822784424
    7. '_' → logprob: -8.895024299621582
    8. '_edge' → logprob: -11.145024299621582
    9. 'Edges' → logprob: -11.270024299621582
    10. '```' → logprob: -11.520024299621582

Token 404: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.015737421810626984
    2. '_graph' → logprob: -4.640737533569336
    3. '_sub' → logprob: -5.140737533569336
    4. 'edges' → logprob: -10.265737533569336
    5. '_' → logprob: -10.765737533569336
    6. 'graph' → logprob: -11.015737533569336
    7. '_edge' → logprob: -11.890737533569336
    8. 'sub' → logprob: -12.015737533569336
    9. '```' → logprob: -12.265737533569336
    10. '_tree' → logprob: -12.390737533569336

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889595627784729
    2. '=' → logprob: -2.5788960456848145
    3. '=[]' → logprob: -12.203895568847656
    4. '_' → logprob: -13.953895568847656
    5. ' ' → logprob: -16.328895568847656
    6. ',' → logprob: -16.578895568847656
    7. 's' → logprob: -17.328895568847656
    8. '=set' → logprob: -17.453895568847656
    9. '＝' → logprob: -17.453895568847656
    10. ' ' → logprob: -17.578895568847656

Token 406: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007518961559981108
    2. 'set' → logprob: -5.007518768310547
    3. ' []' → logprob: -7.257518768310547
    4. '[]
' → logprob: -9.507518768310547
    5. ' set' → logprob: -11.007518768310547
    6. '[' → logprob: -12.382518768310547
    7. '[]}' → logprob: -13.382518768310547
    8. '[]

' → logprob: -13.882518768310547
    9. '[]"' → logprob: -15.507518768310547
    10. '[]>' → logprob: -16.007518768310547

Token 407: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1995636373758316
    2. 'for' → logprob: -2.32456374168396
    3. ' for' → logprob: -3.32456374168396
    4. '       ' → logprob: -4.074563503265381
    5. ' =' → logprob: -4.324563503265381
    6. '        
' → logprob: -4.699563503265381
    7. '<|end|>' → logprob: -6.074563503265381
    8. '
' → logprob: -6.449563503265381
    9. '=' → logprob: -6.824563503265381
    10. '  
' → logprob: -7.074563503265381

Token 408: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03706669062376022
    2. ' for' → logprob: -3.412066698074341
    3. '
' → logprob: -6.037066459655762
    4. '       ' → logprob: -7.537066459655762
    5. '        
' → logprob: -8.037066459655762
    6. '=' → logprob: -9.662066459655762
    7. ' =' → logprob: -10.787066459655762
    8. ',' → logprob: -11.162066459655762
    9. '<|end|>' → logprob: -11.287066459655762
    10. '
' → logprob: -11.537066459655762

Token 409: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24186092615127563
    2. '[]' → logprob: -1.6168608665466309
    3. '[]
' → logprob: -4.241860866546631
    4. ' for' → logprob: -6.741860866546631
    5. '[
' → logprob: -8.491861343383789
    6. '[' → logprob: -8.741861343383789
    7. '[u' → logprob: -9.116861343383789
    8. '[(' → logprob: -9.366861343383789
    9. ' []' → logprob: -10.366861343383789
    10. 'edges' → logprob: -10.616861343383789

Token 410: ' store' (ID: 4897)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.2967512309551239
    2. 'store' → logprob: -2.6717512607574463
    3. '[]' → logprob: -2.7967512607574463
    4. '=[]' → logprob: -3.1717512607574463
    5. '=' → logprob: -4.296751022338867
    6. 'collect' → logprob: -4.421751022338867
    7. 'build' → logprob: -4.421751022338867
    8. 'extend' → logprob: -4.546751022338867
    9. 'continue' → logprob: -4.921751022338867
    10. 'keep' → logprob: -5.046751022338867

Token 411: ' edges' (ID: 22569)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.22416917979717255
    2. '[]' → logprob: -2.2241692543029785
    3. '[u' → logprob: -3.0991692543029785
    4. 'edges' → logprob: -3.4741692543029785
    5. '(' → logprob: -5.0991692543029785
    6. ' (' → logprob: -5.9741692543029785
    7. '(e' → logprob: -6.2241692543029785
    8. '(edges' → logprob: -6.5991692543029785
    9. ' edges' → logprob: -7.2241692543029785
    10. 'e' → logprob: -7.7241692543029785

Token 412: ' that' (ID: 484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8988251686096191
    2. ' =' → logprob: -1.6488251686096191
    3. '<|end|>' → logprob: -2.023825168609619
    4. '=' → logprob: -2.398825168609619
    5. ' for' → logprob: -2.398825168609619
    6. '       ' → logprob: -2.898825168609619
    7. '
' → logprob: -4.898825168609619
    8. '        
' → logprob: -5.523825168609619
    9. '=[]
' → logprob: -5.773825168609619
    10. '=[]' → logprob: -6.023825168609619

Token 413: ' lie' (ID: 7149)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.23196610808372498
    2. 'appear' → logprob: -2.356966018676758
    3. ' can' → logprob: -3.231966018676758
    4. 'pres' → logprob: -3.481966018676758
    5. 'connect' → logprob: -3.856966018676758
    6. 's' → logprob: -5.606966018676758
    7. 'are' → logprob: -5.981966018676758
    8. 'bel' → logprob: -5.981966018676758
    9. 'keep' → logprob: -6.231966018676758
    10. 'be' → logprob: -6.231966018676758

Token 414: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.07127664238214493
    2. ' on' → logprob: -2.6962766647338867
    3. 'in' → logprob: -6.821276664733887
    4. ' in' → logprob: -8.821276664733887
    5. 'within' → logprob: -9.821276664733887
    6. '   ' → logprob: -11.446276664733887
    7. '	on' → logprob: -11.446276664733887
    8. ' within' → logprob: -11.696276664733887
    9. '_on' → logprob: -12.696276664733887
    10. 'along' → logprob: -12.946276664733887

Token 415: ' at' (ID: 540)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.42177480459213257
    2. 'short' → logprob: -1.2967748641967773
    3. 'the' → logprob: -2.7967748641967773
    4. ' the' → logprob: -4.671774864196777
    5. 'a' → logprob: -8.796774864196777
    6. ' a' → logprob: -9.421774864196777
    7. 'Shortest' → logprob: -10.796774864196777
    8. 'any' → logprob: -11.171774864196777
    9. 'some' → logprob: -11.421774864196777
    10. '   ' → logprob: -11.546774864196777

Token 416: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.006245157681405544
    2. ' least' → logprob: -5.131245136260986
    3. 'short' → logprob: -8.381245613098145
    4. '#' → logprob: -10.756245613098145
    5. 'Least' → logprob: -10.756245613098145
    6. '_le' → logprob: -11.381245613098145
    7. 'east' → logprob: -11.756245613098145
    8. 'le' → logprob: -13.006245613098145
    9. 'he' → logprob: -13.131245613098145
    10. '```' → logprob: -13.131245613098145

Token 417: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.10140341520309448
    2. 'least' → logprob: -2.4764034748077393
    3. ' one' → logprob: -4.72640323638916
    4. ' least' → logprob: -5.72640323638916
    5. 'some' → logprob: -9.35140323638916
    6. '   ' → logprob: -9.72640323638916
    7. ' ' → logprob: -10.85140323638916
    8. 'part' → logprob: -10.85140323638916
    9. ')' → logprob: -11.22640323638916
    10. '```' → logprob: -11.85140323638916

Token 418: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.049008116126060486
    2. 'short' → logprob: -3.0490081310272217
    3. ' short' → logprob: -9.4240083694458
    4. ' line' → logprob: -9.5490083694458
    5. '   ' → logprob: -9.7990083694458
    6. 'path' → logprob: -9.7990083694458
    7. '_short' → logprob: -10.0490083694458
    8. ' path' → logprob: -10.4240083694458
    9. 'Shortest' → logprob: -10.5490083694458
    10. ' ' → logprob: -11.1740083694458

Token 419: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00023095356300473213
    2. '_paths' → logprob: -9.00023078918457
    3. '_' → logprob: -9.50023078918457
    4. 'path' → logprob: -10.62523078918457
    5. ' path' → logprob: -12.25023078918457
    6. '       ' → logprob: -14.00023078918457
    7. '   ' → logprob: -14.25023078918457
    8. '
' → logprob: -15.25023078918457
    9. '_route' → logprob: -15.37523078918457
    10. ' _' → logprob: -15.37523078918457

Token 420: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8457232713699341
    2. 'for' → logprob: -1.470723271369934
    3. ' for' → logprob: -1.720723271369934
    4. '
' → logprob: -2.2207231521606445
    5. '<|end|>' → logprob: -3.5957231521606445
    6. '        
' → logprob: -4.2207231521606445
    7. '   ' → logprob: -6.2207231521606445
    8. '  
' → logprob: -6.2207231521606445
    9. '    
' → logprob: -6.7207231521606445
    10. '\n' → logprob: -6.9707231521606445

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2639196813106537
    2. 'for' → logprob: -2.0139195919036865
    3. ' for' → logprob: -2.3889195919036865
    4. '
' → logprob: -5.763919830322266
    5. '        
' → logprob: -6.013919830322266
    6. '	for' → logprob: -7.513919830322266
    7. '<|end|>' → logprob: -9.013919830322266
    8. '		
' → logprob: -9.513919830322266
    9. '   ' → logprob: -9.513919830322266
    10. '    
' → logprob: -9.763919830322266

Token 422: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013810855336487293
    2. ' for' → logprob: -4.763810634613037
    3. '       ' → logprob: -5.263810634613037
    4. '   ' → logprob: -12.013811111450195
    5. '```' → logprob: -14.763811111450195
    6. '
' → logprob: -15.138811111450195
    7. '	for' → logprob: -15.138811111450195
    8. '        
' → logprob: -16.013811111450195
    9. '           ' → logprob: -16.263811111450195
    10. ' ' → logprob: -16.388811111450195

Token 423: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07061447948217392
    2. ' u' → logprob: -2.8206145763397217
    3. '(u' → logprob: -4.820614337921143
    4. ' (' → logprob: -7.945614337921143
    5. '   ' → logprob: -8.8206148147583
    6. 'edge' → logprob: -11.3206148147583
    7. '	u' → logprob: -12.0706148147583
    8. ' ' → logprob: -12.1956148147583
    9. 'e' → logprob: -12.3206148147583
    10. '_u' → logprob: -12.5706148147583

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010285420343279839
    2. ',v' → logprob: -4.635285377502441
    3. ' ,' → logprob: -7.635285377502441
    4. ',u' → logprob: -10.885285377502441
    5. ' in' → logprob: -11.135285377502441
    6. ',e' → logprob: -13.260285377502441
    7. ',_' → logprob: -13.385285377502441
    8. '‌,' → logprob: -13.510285377502441
    9. ',user' → logprob: -14.010285377502441
    10. 'in' → logprob: -14.385285377502441

Token 425: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000713266315869987
    2. ' v' → logprob: -7.250713348388672
    3. ',v' → logprob: -13.250713348388672
    4. ',' → logprob: -13.625713348388672
    5. 'u' → logprob: -15.375713348388672
    6. '(v' → logprob: -17.250713348388672
    7. ' ' → logprob: -17.625713348388672
    8. '	v' → logprob: -17.750713348388672
    9. '
' → logprob: -18.000713348388672
    10. '<|end|>' → logprob: -18.000713348388672

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',u' → logprob: -13.875021934509277
    4. ',v' → logprob: -14.125021934509277
    5. '_,' → logprob: -14.250021934509277
    6. ',d' → logprob: -15.250021934509277
    7. ' in' → logprob: -16.12502098083496
    8. ',w' → logprob: -16.87502098083496
    9. '‌,' → logprob: -17.00002098083496
    10. 'in' → logprob: -17.37502098083496

Token 427: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016504127415828407
    2. ' d' → logprob: -8.750164985656738
    3. 'length' → logprob: -13.125164985656738
    4. 'u' → logprob: -14.000164985656738
    5. ',d' → logprob: -14.000164985656738
    6. ',' → logprob: -14.125164985656738
    7. ' ' → logprob: -14.500164985656738
    8. '<|end|>' → logprob: -14.625164985656738
    9. ')d' → logprob: -15.250164985656738
    10. '
' → logprob: -15.875164985656738

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003320783842355013
    2. ',c' → logprob: -5.753320693969727
    3. ' ,' → logprob: -9.128320693969727
    4. 'c' → logprob: -10.753320693969727
    5. ' in' → logprob: -12.128320693969727
    6. 'in' → logprob: -12.503320693969727
    7. '_,' → logprob: -14.128320693969727
    8. ',_' → logprob: -14.378320693969727
    9. ',v' → logprob: -14.753320693969727
    10. ',
' → logprob: -15.253320693969727

Token 429: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0022456541191786528
    2. ' c' → logprob: -6.1272454261779785
    3. 'cost' → logprob: -9.752245903015137
    4. ' cost' → logprob: -13.752245903015137
    5. ' ' → logprob: -14.127245903015137
    6. '   ' → logprob: -15.877245903015137
    7. '
' → logprob: -16.00224494934082
    8. '	c' → logprob: -16.37724494934082
    9. ',' → logprob: -16.87724494934082
    10. ')c' → logprob: -16.87724494934082

Token 430: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759527087211609
    2. ' in' → logprob: -0.8259527087211609
    3. ',' → logprob: -12.450952529907227
    4. '	in' → logprob: -13.200952529907227
    5. ' ' → logprob: -13.825952529907227
    6. 'n' → logprob: -13.825952529907227
    7. '   ' → logprob: -13.950952529907227
    8. ')' → logprob: -14.200952529907227
    9. 's' → logprob: -14.325952529907227
    10. '_in' → logprob: -14.575952529907227

Token 431: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0052354102954268456
    2. ' edges' → logprob: -5.255235195159912
    3. '(edges' → logprob: -13.88023567199707
    4. '   ' → logprob: -15.38023567199707
    5. 'edge' → logprob: -16.00523567199707
    6. '.edges' → logprob: -16.13023567199707
    7. ' ' → logprob: -16.75523567199707
    8. '_edges' → logprob: -17.00523567199707
    9. '```' → logprob: -17.38023567199707
    10. 'ed' → logprob: -17.50523567199707

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038078103214502335
    2. ':
' → logprob: -3.2880780696868896
    3. ':
' → logprob: -11.538078308105469
    4. '):
' → logprob: -11.788078308105469
    5. '       ' → logprob: -12.288078308105469
    6. '   ' → logprob: -12.663078308105469
    7. ',' → logprob: -12.788078308105469
    8. ':

' → logprob: -13.288078308105469
    9. ' :' → logprob: -13.538078308105469
    10. '):' → logprob: -13.538078308105469

Token 433: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31650471687316895
    2. '           ' → logprob: -1.816504716873169
    3. ' if' → logprob: -2.691504716873169
    4. '   ' → logprob: -4.31650447845459
    5. '<|end|>' → logprob: -4.81650447845459
    6. '        ' → logprob: -5.31650447845459
    7. ' ' → logprob: -5.69150447845459
    8. '
' → logprob: -6.19150447845459
    9. '    
' → logprob: -6.44150447845459
    10. ' 
' → logprob: -6.69150447845459

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4033302962779999
    2. ' if' → logprob: -1.1533303260803223
    3. '   ' → logprob: -4.528330326080322
    4. '       ' → logprob: -5.403330326080322
    5. '           ' → logprob: -6.903330326080322
    6. ' ' → logprob: -11.903329849243164
    7. '	if' → logprob: -12.028329849243164
    8. '    ' → logprob: -13.028329849243164
    9. '  ' → logprob: -13.653329849243164
    10. '               ' → logprob: -13.778329849243164

Token 435: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07095210999250412
    2. ' dist' → logprob: -2.6959521770477295
    3. '(dist' → logprob: -6.94595193862915
    4. ' (' → logprob: -10.695952415466309
    5. '   ' → logprob: -10.820952415466309
    6. '	dist' → logprob: -12.320952415466309
    7. '(' → logprob: -13.195952415466309
    8. ' ' → logprob: -13.195952415466309
    9. '  ' → logprob: -14.070952415466309
    10. '    ' → logprob: -15.195952415466309

Token 436: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00010485442908247933
    2. 'u' → logprob: -9.250104904174805
    3. '[' → logprob: -12.375104904174805
    4. ' [' → logprob: -13.125104904174805
    5. '[v' → logprob: -13.125104904174805
    6. ' u' → logprob: -16.750104904174805
    7. '[
' → logprob: -16.875104904174805
    8. ')' → logprob: -16.875104904174805
    9. ')[' → logprob: -16.875104904174805
    10. '   ' → logprob: -17.125104904174805

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007800268009305
    2. ']+' → logprob: -5.007800102233887
    3. '+' → logprob: -7.632800102233887
    4. ' ]' → logprob: -7.757800102233887
    5. ' +' → logprob: -9.382800102233887
    6. ')' → logprob: -9.632800102233887
    7. '[' → logprob: -11.257800102233887
    8. '+]' → logprob: -13.132800102233887
    9. ']==' → logprob: -13.257800102233887
    10. ')+' → logprob: -13.882800102233887

Token 438: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868752717971802
    2. ' +' → logprob: -1.1368752717971802
    3. '==' → logprob: -13.01187515258789
    4. ' ' → logprob: -15.01187515258789
    5. ' ' → logprob: -15.38687515258789
    6. '   ' → logprob: -15.63687515258789
    7. '+
' → logprob: -15.76187515258789
    8. '+d' → logprob: -15.88687515258789
    9. '+c' → logprob: -15.88687515258789
    10. ' plus' → logprob: -16.01187515258789

Token 439: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.376928329467773
    4. '	d' → logprob: -18.376928329467773
    5. '1' → logprob: -18.876928329467773
    6. '```' → logprob: -19.001928329467773
    7. ')d' → logprob: -19.626928329467773
    8. '   ' → logprob: -19.626928329467773
    9. '(d' → logprob: -19.751928329467773
    10. '
' → logprob: -19.751928329467773

Token 440: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07891236990690231
    2. ' ==' → logprob: -2.5789122581481934
    3. '=' → logprob: -10.828912734985352
    4. '==
' → logprob: -13.578912734985352
    5. ']==' → logprob: -14.328912734985352
    6. ')==' → logprob: -14.703912734985352
    7. '===' → logprob: -15.203912734985352
    8. '```' → logprob: -16.70391273498535
    9. ')' → logprob: -16.95391273498535
    10. '()==' → logprob: -17.32891273498535

Token 441: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007099286303855479
    2. ' dist' → logprob: -7.2507100105285645
    3. '	dist' → logprob: -17.750709533691406
    4. '(dist' → logprob: -18.875709533691406
    5. '.dist' → logprob: -19.750709533691406
    6. '
' → logprob: -20.000709533691406
    7. 'dest' → logprob: -21.125709533691406
    8. '_dist' → logprob: -21.250709533691406
    9. 'd' → logprob: -21.375709533691406
    10. 'Dist' → logprob: -21.625709533691406

Token 442: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.60414821645827e-06
    2. 'v' → logprob: -12.500004768371582
    3. '[u' → logprob: -14.875004768371582
    4. '[' → logprob: -15.625004768371582
    5. '(v' → logprob: -16.625003814697266
    6. '<v' → logprob: -16.750003814697266
    7. '```' → logprob: -17.375003814697266
    8. '	v' → logprob: -17.500003814697266
    9. ' v' → logprob: -17.750003814697266
    10. ' [' → logprob: -18.000003814697266

Token 443: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0014295210130512714
    2. 'or' → logprob: -6.626429557800293
    3. ')' → logprob: -9.876429557800293
    4. '           ' → logprob: -10.126429557800293
    5. '	or' → logprob: -12.626429557800293
    6. ']' → logprob: -12.751429557800293
    7. ' ' → logprob: -13.251429557800293
    8. ':' → logprob: -13.626429557800293
    9. '               ' → logprob: -14.001429557800293
    10. '       ' → logprob: -14.501429557800293

Token 444: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000743995129596442
    2. 'or' → logprob: -7.250743865966797
    3. '           ' → logprob: -10.750743865966797
    4. '	or' → logprob: -12.000743865966797
    5. ' ' → logprob: -13.125743865966797
    6. ':' → logprob: -13.250743865966797
    7. '               ' → logprob: -13.750743865966797
    8. ')' → logprob: -14.750743865966797
    9. '            ' → logprob: -15.000743865966797
    10. '          ' → logprob: -15.250743865966797

Token 445: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0036131395027041435
    2. 'dist' → logprob: -5.628612995147705
    3. '(dist' → logprob: -11.503613471984863
    4. '	dist' → logprob: -13.753613471984863
    5. ' ' → logprob: -13.878613471984863
    6. '.dist' → logprob: -15.378613471984863
    7. '```' → logprob: -16.128612518310547
    8. ' ' → logprob: -16.253612518310547
    9. '"' → logprob: -16.378612518310547
    10. '`' → logprob: -16.503612518310547

Token 446: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.980854959692806e-05
    2. '[u' → logprob: -10.375069618225098
    3. 'v' → logprob: -10.875069618225098
    4. '[' → logprob: -11.000069618225098
    5. ' [' → logprob: -14.375069618225098
    6. '	v' → logprob: -14.875069618225098
    7. '   ' → logprob: -14.875069618225098
    8. '(v' → logprob: -15.250069618225098
    9. '<v' → logprob: -15.375069618225098
    10. '```' → logprob: -15.375069618225098

Token 447: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12694931030273438
    2. '+' → logprob: -2.1269493103027344
    3. ')' → logprob: -12.001949310302734
    4. '[' → logprob: -12.251949310302734
    5. ' ' → logprob: -12.876949310302734
    6. ']+' → logprob: -13.626949310302734
    7. ']' → logprob: -13.751949310302734
    8. ')+' → logprob: -13.876949310302734
    9. '+c' → logprob: -14.126949310302734
    10. '```' → logprob: -14.751949310302734

Token 448: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.225419282913208
    2. '+' → logprob: -1.600419282913208
    3. ' ' → logprob: -12.850419044494629
    4. '+c' → logprob: -13.725419044494629
    5. '```' → logprob: -14.350419044494629
    6. ' ' → logprob: -14.912919044494629
    7. ' +
' → logprob: -15.037919044494629
    8. '[' → logprob: -15.100419044494629
    9. '+
' → logprob: -15.287919044494629
    10. '＋' → logprob: -15.787919044494629

Token 449: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00760887423530221
    2. ' d' → logprob: -4.882608890533447
    3. '<|end|>' → logprob: -13.007608413696289
    4. ' ' → logprob: -15.507608413696289
    5. '
' → logprob: -16.50760841369629
    6. '	d' → logprob: -16.88260841369629
    7. '```' → logprob: -17.25760841369629
    8. ' ' → logprob: -17.25760841369629
    9. ' 
' → logprob: -17.75760841369629
    10. '  ' → logprob: -18.07010841369629

Token 450: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20142309367656708
    2. ' ==' → logprob: -1.7014230489730835
    3. ']==' → logprob: -12.826422691345215
    4. '==
' → logprob: -12.826422691345215
    5. '=' → logprob: -13.326422691345215
    6. ')==' → logprob: -13.576422691345215
    7. '===' → logprob: -14.076422691345215
    8. ' ' → logprob: -15.326422691345215
    9. '```' → logprob: -15.701422691345215
    10. ' ==
' → logprob: -16.20142364501953

Token 451: ' dist' (ID: 3601)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9323079586029053
    2. 'dist' → logprob: -1.0573079586029053
    3. ' dist' → logprob: -1.6823079586029053
    4. ' u' → logprob: -2.8073079586029053
    5. '[u' → logprob: -4.432308197021484
    6. 'd' → logprob: -7.557308197021484
    7. 'c' → logprob: -9.682308197021484
    8. '```' → logprob: -10.307308197021484
    9. '(u' → logprob: -10.557308197021484
    10. '   ' → logprob: -10.932308197021484

Token 452: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.007994360290467739
    2. 'u' → logprob: -4.882994174957275
    3. '[v' → logprob: -8.882994651794434
    4. '[' → logprob: -9.007994651794434
    5. '{' → logprob: -10.757994651794434
    6. '1' → logprob: -10.882994651794434
    7. ' u' → logprob: -11.007994651794434
    8. '(u' → logprob: -11.132994651794434
    9. '           ' → logprob: -11.257994651794434
    10. ')' → logprob: -11.882994651794434

Token 453: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05687040835618973
    2. ':' → logprob: -2.931870460510254
    3. ']:' → logprob: -6.931870460510254
    4. '):
' → logprob: -7.056870460510254
    5. ' ):' → logprob: -10.431870460510254
    6. '}:' → logprob: -10.556870460510254
    7. ')' → logprob: -10.806870460510254
    8. ':
' → logprob: -11.181870460510254
    9. '>:' → logprob: -11.431870460510254
    10. '.' → logprob: -11.806870460510254

Token 454: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1161956638097763
    2. ':' → logprob: -2.8661956787109375
    3. '           ' → logprob: -3.1161956787109375
    4. ':
' → logprob: -5.7411956787109375
    5. ' shortest' → logprob: -6.4911956787109375
    6. ',' → logprob: -6.6161956787109375
    7. 'short' → logprob: -7.8661956787109375
    8. ' and' → logprob: -7.9911956787109375
    9. ' :' → logprob: -8.741195678710938
    10. 'Shortest' → logprob: -8.866195678710938

Token 455: ' #' (ID: 1069)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.22941599786281586
    2. ' shortest' → logprob: -1.604416012763977
    3. '               ' → logprob: -6.1044158935546875
    4. ' short' → logprob: -6.7294158935546875
    5. '           ' → logprob: -8.354415893554688
    6. '   ' → logprob: -8.604415893554688
    7. 'Shortest' → logprob: -10.104415893554688
    8. ' if' → logprob: -10.354415893554688
    9. 'if' → logprob: -10.854415893554688
    10. '	short' → logprob: -11.104415893554688

Token 456: ' This' (ID: 1328)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.005753868259489536
    2. ' shortest' → logprob: -5.880753993988037
    3. 'if' → logprob: -6.880753993988037
    4. '               ' → logprob: -6.880753993988037
    5. '   ' → logprob: -7.380753993988037
    6. '           ' → logprob: -9.005753517150879
    7. ' short' → logprob: -10.130753517150879
    8. ' if' → logprob: -10.255753517150879
    9. 'shortcut' → logprob: -11.130753517150879
    10. '                   ' → logprob: -11.380753517150879

Token 457: ' edge' (ID: 11165)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.2440238893032074
    2. 'short' → logprob: -1.7440239191055298
    3. '.' → logprob: -3.8690237998962402
    4. '.short' → logprob: -4.74402379989624
    5. ' is' → logprob: -4.86902379989624
    6. ' .' → logprob: -6.74402379989624
    7. ' can' → logprob: -7.61902379989624
    8. 'Shortest' → logprob: -7.74402379989624
    9. ' short' → logprob: -7.99402379989624
    10. 's' → logprob: -8.244024276733398

Token 458: ' could' (ID: 2023)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.1004124879837036
    2. 'short' → logprob: -1.7254124879837036
    3. '.append' → logprob: -2.100412368774414
    4. '.' → logprob: -2.350412368774414
    5. '_short' → logprob: -2.600412368774414
    6. '               ' → logprob: -2.850412368774414
    7. ' is' → logprob: -3.600412368774414
    8. '.short' → logprob: -3.725412368774414
    9. ',' → logprob: -4.100412368774414
    10. 's' → logprob: -4.475412368774414

Token 459: ' be' (ID: 413)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.48007601499557495
    2. ' shortest' → logprob: -1.2300760746002197
    3. 'be' → logprob: -2.9800760746002197
    4. ' be' → logprob: -3.3550760746002197
    5. ' short' → logprob: -6.605075836181641
    6. '               ' → logprob: -7.480075836181641
    7. '_short' → logprob: -7.605075836181641
    8. 'continue' → logprob: -8.73007583618164
    9. 'appear' → logprob: -9.10507583618164
    10. 'Shortest' → logprob: -9.35507583618164

Token 460: ' on' (ID: 402)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.4213753044605255
    2. ' part' → logprob: -1.2963752746582031
    3. 'on' → logprob: -3.546375274658203
    4. 'included' → logprob: -4.296375274658203
    5. 'used' → logprob: -4.546375274658203
    6. 'a' → logprob: -5.421375274658203
    7. 'added' → logprob: -5.421375274658203
    8. 'short' → logprob: -5.671375274658203
    9. ' on' → logprob: -5.671375274658203
    10. ' used' → logprob: -7.921375274658203

Token 461: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.036040350794792175
    2. ' a' → logprob: -4.036040306091309
    3. 'the' → logprob: -4.786040306091309
    4. 'short' → logprob: -4.911040306091309
    5. 'some' → logprob: -7.661040306091309
    6. 'one' → logprob: -7.786040306091309
    7. ' the' → logprob: -8.036040306091309
    8. 'at' → logprob: -8.036040306091309
    9. ' at' → logprob: -8.411040306091309
    10. ' shortest' → logprob: -8.536040306091309

Token 462: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.03814121335744858
    2. 'short' → logprob: -3.2881412506103516
    3. ' short' → logprob: -9.663141250610352
    4. ''s' → logprob: -11.538141250610352
    5. 'Shortest' → logprob: -11.788141250610352
    6. '_short' → logprob: -12.538141250610352
    7. '   ' → logprob: -12.913141250610352
    8. 'path' → logprob: -13.038141250610352
    9. '
' → logprob: -13.288141250610352
    10. ' ' → logprob: -13.288141250610352

Token 463: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.2073477804660797
    2. '_path' → logprob: -1.9573477506637573
    3. 'path' → logprob: -3.082347869873047
    4. ' paths' → logprob: -9.332347869873047
    5. '_paths' → logprob: -9.707347869873047
    6. 'paths' → logprob: -11.582347869873047
    7. '	path' → logprob: -11.957347869873047
    8. ' _' → logprob: -12.707347869873047
    9. ' ' → logprob: -13.457347869873047
    10. ' pathway' → logprob: -13.457347869873047

Token 464: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021375872194767
    2. '           ' → logprob: -4.02137565612793
    3. ',' → logprob: -6.27137565612793
    4. 'short' → logprob: -7.52137565612793
    5. ' shortest' → logprob: -7.77137565612793
    6. '
' → logprob: -9.77137565612793
    7. '.' → logprob: -9.77137565612793
    8. '   ' → logprob: -10.02137565612793
    9. '                   ' → logprob: -10.39637565612793
    10. '       ' → logprob: -10.64637565612793

Token 465: ' city' (ID: 5030)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.31988513469696045
    2. ' u' → logprob: -2.19488525390625
    3. 'capital' → logprob: -2.69488525390625
    4. '1' → logprob: -3.69488525390625
    5. 'the' → logprob: -3.81988525390625
    6. ' the' → logprob: -3.81988525390625
    7. ' capital' → logprob: -4.56988525390625
    8. 'city' → logprob: -4.69488525390625
    9. ' city' → logprob: -5.69488525390625
    10. ' ' → logprob: -6.19488525390625

Token 466: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12322832643985748
    2. ' u' → logprob: -2.7482283115386963
    3. ' ' → logprob: -3.4982283115386963
    4. 'u' → logprob: -3.8732283115386963
    5. ' to' → logprob: -8.498228073120117
    6. '[u' → logprob: -8.873228073120117
    7. ',' → logprob: -8.998228073120117
    8. '   ' → logprob: -9.498228073120117
    9. '0' → logprob: -9.498228073120117
    10. '(u' → logprob: -10.248228073120117

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002898666774854064
    2. ' ' → logprob: -6.002898693084717
    3. 'u' → logprob: -7.877898693084717
    4. ' u' → logprob: -10.502898216247559
    5. '0' → logprob: -12.627898216247559
    6. '
' → logprob: -12.752898216247559
    7. 's' → logprob: -13.377898216247559
    8. ',' → logprob: -13.565398216247559
    9. '   ' → logprob: -13.690398216247559
    10. ' to' → logprob: -13.940398216247559

Token 468: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016723261214792728
    2. ',' → logprob: -7.251672267913818
    3. '           ' → logprob: -8.001672744750977
    4. 'short' → logprob: -9.126672744750977
    5. '
' → logprob: -9.376672744750977
    6. ' shortest' → logprob: -9.376672744750977
    7. ' to' → logprob: -9.501672744750977
    8. '.' → logprob: -9.626672744750977
    9. '       ' → logprob: -9.626672744750977
    10. '                
' → logprob: -10.251672744750977

Token 469: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008216609712690115
    2. '           ' → logprob: -8.000822067260742
    3. '
' → logprob: -8.250822067260742
    4. '                
' → logprob: -9.750822067260742
    5. ',' → logprob: -9.875822067260742
    6. '                   ' → logprob: -9.875822067260742
    7. ' shortest' → logprob: -11.125822067260742
    8. 'short' → logprob: -11.375822067260742
    9. '   ' → logprob: -11.625822067260742
    10. '       ' → logprob: -12.250822067260742

Token 470: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.17575883865356445
    2. ' shortest' → logprob: -2.1757588386535645
    3. '               ' → logprob: -3.1757588386535645
    4. '   ' → logprob: -6.1757588386535645
    5. ' short' → logprob: -6.3007588386535645
    6. '           ' → logprob: -7.1757588386535645
    7. ' if' → logprob: -7.5507588386535645
    8. 'if' → logprob: -7.6757588386535645
    9. '                   ' → logprob: -10.050758361816406
    10. 'Shortest' → logprob: -10.425758361816406

Token 471: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.50000286102295
    3. '```' → logprob: -14.37500286102295
    4. 'path' → logprob: -15.37500286102295
    5. '\' → logprob: -16.250001907348633
    6. '
' → logprob: -16.375001907348633
    7. ' _' → logprob: -16.625001907348633
    8. '_PATH' → logprob: -17.000001907348633
    9. '_short' → logprob: -17.000001907348633
    10. ')_' → logprob: -17.125001907348633

Token 472: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.625001907348633
    3. 'edges' → logprob: -15.000001907348633
    4. '_ed' → logprob: -15.500001907348633
    5. '
' → logprob: -15.875001907348633
    6. '_
' → logprob: -16.000001907348633
    7. '_edge' → logprob: -16.000001907348633
    8. '```' → logprob: -16.125001907348633
    9. 's' → logprob: -16.625001907348633
    10. '\' → logprob: -17.375001907348633

Token 473: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023287521675229073
    2. '.' → logprob: -3.773287534713745
    3. ' .' → logprob: -10.273287773132324
    4. '.app' → logprob: -12.773287773132324
    5. '.ap' → logprob: -13.023287773132324
    6. ').' → logprob: -14.273287773132324
    7. '.extend' → logprob: -14.273287773132324
    8. '.add' → logprob: -14.398287773132324
    9. '].' → logprob: -15.273287773132324
    10. 'append' → logprob: -15.773287773132324

Token 474: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001205893131555058
    2. '(u' → logprob: -9.125120162963867
    3. '(' → logprob: -11.375120162963867
    4. '(((' → logprob: -16.250120162963867
    5. '([' → logprob: -18.750120162963867
    6. ' ((' → logprob: -18.875120162963867
    7. '(
' → logprob: -19.125120162963867
    8. '(edge' → logprob: -19.250120162963867
    9. '
' → logprob: -20.375120162963867
    10. '   ' → logprob: -20.625120162963867

Token 475: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -9.925185440806672e-05
    2. ' u' → logprob: -9.625099182128906
    3. 'c' → logprob: -10.875099182128906
    4. 'min' → logprob: -11.625099182128906
    5. '   ' → logprob: -12.875099182128906
    6. '(u' → logprob: -14.125099182128906
    7. ')' → logprob: -14.625099182128906
    8. '[u' → logprob: -15.000099182128906
    9. 'cost' → logprob: -15.250099182128906
    10. '	u' → logprob: -15.875099182128906

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023238400171976537
    2. ',v' → logprob: -8.500232696533203
    3. ' ,' → logprob: -10.750232696533203
    4. ',
' → logprob: -11.875232696533203
    5. 'v' → logprob: -15.625232696533203
    6. ',

' → logprob: -16.500232696533203
    7. '),' → logprob: -16.750232696533203
    8. ')' → logprob: -17.375232696533203
    9. '‌,' → logprob: -17.500232696533203
    10. ',
' → logprob: -17.625232696533203

Token 477: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000714935187716037
    2. ' v' → logprob: -7.2507147789001465
    3. '<|end|>' → logprob: -12.750715255737305
    4. '
' → logprob: -14.500715255737305
    5. ')v' → logprob: -14.500715255737305
    6. 'c' → logprob: -15.375715255737305
    7. ',v' → logprob: -15.875715255737305
    8. 'u' → logprob: -16.125715255737305
    9. ' ' → logprob: -16.125715255737305
    10. ')' → logprob: -16.375715255737305

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003975416184403002
    2. ' ,' → logprob: -8.375397682189941
    3. ',c' → logprob: -8.750397682189941
    4. ',
' → logprob: -12.500397682189941
    5. ')' → logprob: -12.875397682189941
    6. '),' → logprob: -14.625397682189941
    7. '))' → logprob: -15.000397682189941
    8. ',u' → logprob: -15.375397682189941
    9. ',d' → logprob: -15.625397682189941
    10. 'c' → logprob: -15.875397682189941

Token 479: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3492518961429596
    2. 'c' → logprob: -1.2242518663406372
    3. 'cost' → logprob: -7.974251747131348
    4. ' d' → logprob: -8.599251747131348
    5. ' c' → logprob: -8.849251747131348
    6. 'length' → logprob: -9.474251747131348
    7. '   ' → logprob: -11.536751747131348
    8. ' ' → logprob: -11.974251747131348
    9. '
' → logprob: -12.224251747131348
    10. ')' → logprob: -12.411751747131348

Token 480: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.043267615139484406
    2. ')' → logprob: -3.1682677268981934
    3. ',' → logprob: -8.668267250061035
    4. '))
' → logprob: -9.418267250061035
    5. '),' → logprob: -12.168267250061035
    6. ' ))' → logprob: -12.793267250061035
    7. ')
' → logprob: -13.043267250061035
    8. ')))' → logprob: -14.043267250061035
    9. ' )' → logprob: -14.418267250061035
    10. '));' → logprob: -14.543267250061035

Token 481: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.8945084810256958
    2. '       ' → logprob: -1.2695084810256958
    3. '   ' → logprob: -1.6445084810256958
    4. '#' (adapté à ' #') → logprob: -3.5195083618164062
    5. 'parents' → logprob: -3.8945083618164062
    6. 'import' → logprob: -4.394508361816406
    7. 'graph' → logprob: -4.519508361816406
    8. 'mst' → logprob: -4.644508361816406
    9. 'dist' → logprob: -5.019508361816406
    10. 'short' → logprob: -5.269508361816406

Token 483: ' Step' (ID: 22291)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2457236647605896
    2. 'short' → logprob: -2.3707237243652344
    3. '#' → logprob: -2.8707237243652344
    4. 'uf' → logprob: -3.6207237243652344
    5. 'import' → logprob: -4.870723724365234
    6. 'parents' → logprob: -5.120723724365234
    7. 'mst' → logprob: -5.245723724365234
    8. 'from' → logprob: -5.620723724365234
    9. '   ' → logprob: -5.870723724365234
    10. 'graph' → logprob: -5.995723724365234

Token 484: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2135559767484665
    2. '2' → logprob: -2.0885560512542725
    3. '3' → logprob: -2.8385560512542725
    4. '1' → logprob: -5.213555812835693
    5. '#' → logprob: -6.213555812835693
    6. '       ' → logprob: -7.213555812835693
    7. '   ' → logprob: -7.463555812835693
    8. '_' → logprob: -7.463555812835693
    9. '           ' → logprob: -9.213556289672852
    10. ' #' → logprob: -9.463556289672852

Token 485: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0007809189846739173
    2. '2' → logprob: -7.625781059265137
    3. '#' → logprob: -8.500781059265137
    4. '       ' → logprob: -10.375781059265137
    5. ' ' → logprob: -10.875781059265137
    6. '   ' → logprob: -11.500781059265137
    7. '4' → logprob: -11.500781059265137
    8. 'def' → logprob: -12.750781059265137
    9. ' #' → logprob: -13.125781059265137
    10. ':' → logprob: -13.563281059265137

Token 486: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3612663745880127
    2. '       ' → logprob: -1.2362663745880127
    3. '#' → logprob: -5.111266136169434
    4. ' =' → logprob: -5.611266136169434
    5. ':
' → logprob: -6.861266136169434
    6. '=' → logprob: -7.236266136169434
    7. '   ' → logprob: -7.611266136169434
    8. '        
' → logprob: -8.486266136169434
    9. ' :' → logprob: -8.736266136169434
    10. '
' → logprob: -8.736266136169434

Token 487: ' The' (ID: 623)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.3619365394115448
    2. '#' → logprob: -1.3619365692138672
    3. 'parent' → logprob: -3.361936569213867
    4. ' shortest' → logprob: -4.986936569213867
    5. ' #' → logprob: -6.861936569213867
    6. 'selected' → logprob: -7.361936569213867
    7. 'uf' → logprob: -7.361936569213867
    8. 'sort' → logprob: -7.611936569213867
    9. 'import' → logprob: -7.986936569213867
    10. '   ' → logprob: -8.111936569213867

Token 488: ' required' (ID: 3759)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7836036086082458
    2. 'short' → logprob: -1.2836036682128906
    3. 'parent' → logprob: -1.6586036682128906
    4. 'import' → logprob: -2.9086036682128906
    5. '
' → logprob: -4.783603668212891
    6. 'visited' → logprob: -6.158603668212891
    7. ' #' → logprob: -6.783603668212891
    8. 'uf' → logprob: -6.783603668212891
    9. ' shortest' → logprob: -6.783603668212891
    10. 'answer' → logprob: -6.908603668212891

Token 489: ' plan' (ID: 3496)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08347587287425995
    2. 'edges' → logprob: -4.5834760665893555
    3. 'graph' → logprob: -4.7084760665893555
    4. 'minimum' → logprob: -4.9584760665893555
    5. ' #' → logprob: -5.3334760665893555
    6. 'import' → logprob: -5.5834760665893555
    7. 'next' → logprob: -5.5834760665893555
    8. ' next' → logprob: -5.7084760665893555
    9. 'task' → logprob: -5.8334760665893555
    10. ' edges' → logprob: -5.8334760665893555

Token 490: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8955515623092651
    2. '       ' → logprob: -1.5205515623092651
    3. 'is' → logprob: -2.0205516815185547
    4. ':' → logprob: -2.1455516815185547
    5. '#' → logprob: -2.5205516815185547
    6. ' =' → logprob: -4.145551681518555
    7. '=' → logprob: -4.895551681518555
    8. 'for' → logprob: -5.645551681518555
    9. ' involves' → logprob: -6.270551681518555
    10. '   ' → logprob: -6.395551681518555

Token 491: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -1.1159534454345703
    2. 'include' → logprob: -1.4909534454345703
    3. 'select' → logprob: -1.7409534454345703
    4. 'min' → logprob: -2.7409534454345703
    5. 'choose' → logprob: -3.1159534454345703
    6. ' select' → logprob: -3.4909534454345703
    7. ' connect' → logprob: -3.6159534454345703
    8. '#' → logprob: -3.8659534454345703
    9. 'ensure' → logprob: -4.24095344543457
    10. 'use' → logprob: -4.24095344543457

Token 492: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.28168198466300964
    2. ' all' → logprob: -1.406682014465332
    3. '1' → logprob: -8.531682014465332
    4. 'cities' → logprob: -9.531682014465332
    5. 'the' → logprob: -10.156682014465332
    6. ' ' → logprob: -10.531682014465332
    7. 'every' → logprob: -10.531682014465332
    8. '0' → logprob: -10.781682014465332
    9. ' the' → logprob: -11.156682014465332
    10. '#' → logprob: -11.156682014465332

Token 493: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.07154501974582672
    2. 'N' → logprob: -3.696545124053955
    3. ' cities' → logprob: -3.696545124053955
    4. 'nodes' → logprob: -4.196545124053955
    5. ' nodes' → logprob: -6.196545124053955
    6. ' N' → logprob: -6.696545124053955
    7. 'the' → logprob: -7.446545124053955
    8. 'vertices' → logprob: -8.196544647216797
    9. ' the' → logprob: -9.571544647216797
    10. '   ' → logprob: -10.321544647216797

Token 494: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18489231169223785
    2. ' using' → logprob: -2.809892416000366
    3. ' with' → logprob: -3.059892416000366
    4. '#' → logprob: -4.309892177581787
    5. 'using' → logprob: -4.309892177581787
    6. ',' → logprob: -4.559892177581787
    7. 'with' → logprob: -4.809892177581787
    8. '
' → logprob: -5.934892177581787
    9. ' #' → logprob: -6.059892177581787
    10. ' and' → logprob: -6.309892177581787

Token 495: 'graph' (ID: 7978)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9321879744529724
    2. '       ' → logprob: -1.4321880340576172
    3. '#' → logprob: -2.182188034057617
    4. ' using' → logprob: -3.057188034057617
    5. 'using' → logprob: -3.182188034057617
    6. ' and' → logprob: -3.182188034057617
    7. ',' → logprob: -3.807188034057617
    8. 'and' → logprob: -3.807188034057617
    9. ' #' → logprob: -4.807188034057617
    10. ' with' → logprob: -4.932188034057617

Token 496: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1072447299957275
    2. ' is' → logprob: -1.7322447299957275
    3. ' with' → logprob: -2.6072447299957275
    4. '=' → logprob: -2.6072447299957275
    5. ')' → logprob: -3.1072447299957275
    6. ' edges' → logprob: -3.1072447299957275
    7. '   ' → logprob: -3.6072447299957275
    8. '#' → logprob: -3.7322447299957275
    9. ' =' → logprob: -3.7322447299957275
    10. '
' → logprob: -3.9822447299957275

Token 497: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.085719347000122
    2. '   ' → logprob: -1.835719347000122
    3. '       ' → logprob: -1.835719347000122
    4. ' connected' → logprob: -1.960719347000122
    5. 'und' → logprob: -2.710719347000122
    6. ')' → logprob: -2.960719347000122
    7. 'not' → logprob: -4.335719108581543
    8. ' not' → logprob: -4.460719108581543
    9. 'N' → logprob: -4.585719108581543
    10. 'sp' → logprob: -5.335719108581543

Token 498: ' through' (ID: 1819)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12424059957265854
    2. ',' → logprob: -2.7492406368255615
    3. ' by' → logprob: -3.8742406368255615
    4. ' and' → logprob: -5.124240398406982
    5. ' with' → logprob: -5.249240398406982
    6. ' through' → logprob: -5.749240398406982
    7. 'and' → logprob: -5.999240398406982
    8. ' via' → logprob: -5.999240398406982
    9. '       ' → logprob: -6.124240398406982
    10. ' using' → logprob: -6.374240398406982

Token 499: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.27968332171440125
    2. 'short' → logprob: -2.0296833515167236
    3. 'the' → logprob: -3.0296833515167236
    4. '#' → logprob: -3.6546833515167236
    5. ' the' → logprob: -4.2796831130981445
    6. 'all' → logprob: -4.6546831130981445
    7. 'edges' → logprob: -6.0296831130981445
    8. ' these' → logprob: -6.0296831130981445
    9. ' all' → logprob: -6.1546831130981445
    10. ' #' → logprob: -6.5296831130981445

Token 500: ' paths' (ID: 23373)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.015888191759586334
    2. '_paths' → logprob: -4.890888214111328
    3. 'path' → logprob: -5.515888214111328
    4. ' paths' → logprob: -6.515888214111328
    5. 'paths' → logprob: -6.765888214111328
    6. ' path' → logprob: -7.265888214111328
    7. '_' → logprob: -7.390888214111328
    8. ' _' → logprob: -10.015888214111328
    9. ' edges' → logprob: -10.140888214111328
    10. '_edges' → logprob: -10.265888214111328

Token 501: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39474236965179443
    2. ')
' → logprob: -1.7697423696517944
    3. ',' → logprob: -3.144742488861084
    4. ').' → logprob: -3.519742488861084
    5. '       ' → logprob: -3.644742488861084
    6. '),' → logprob: -4.144742488861084
    7. '#' → logprob: -4.394742488861084
    8. ').
' → logprob: -4.519742488861084
    9. ')

' → logprob: -5.394742488861084
    10. ' edges' → logprob: -5.769742488861084

Token 502: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47843021154403687
    2. '       ' → logprob: -0.9784302115440369
    3. ' #' → logprob: -6.228430271148682
    4. 'cost' → logprob: -8.228429794311523
    5. '        
' → logprob: -8.353429794311523
    6. 'mst' → logprob: -8.353429794311523
    7. 'edges' → logprob: -8.478429794311523
    8. '
' → logprob: -8.978429794311523
    9. 'selected' → logprob: -9.103429794311523
    10. '   ' → logprob: -9.228429794311523

Token 503: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08123479783535004
    2. '       ' → logprob: -2.5812346935272217
    3. ' #' → logprob: -6.456234931945801
    4. 'cost' → logprob: -8.5812349319458
    5. 'parent' → logprob: -9.3312349319458
    6. 'u' → logprob: -9.9562349319458
    7. 'short' → logprob: -10.0812349319458
    8. 'selected' → logprob: -10.0812349319458
    9. 'visited' → logprob: -10.0812349319458
    10. '   ' → logprob: -10.3312349319458

Token 504: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01734468899667263
    2. '       ' → logprob: -4.1423444747924805
    3. 'short' → logprob: -7.2673444747924805
    4. ' #' → logprob: -8.64234447479248
    5. 'import' → logprob: -9.26734447479248
    6. 'selected' → logprob: -9.76734447479248
    7. 'parent' → logprob: -9.89234447479248
    8. 'visited' → logprob: -9.89234447479248
    9. 'and' → logprob: -10.51734447479248
    10. '
' → logprob: -11.01734447479248

Token 505: ' distances' (ID: 48294)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20926253497600555
    2. 'short' → logprob: -2.2092626094818115
    3. 'the' → logprob: -3.8342626094818115
    4. ' shortest' → logprob: -3.9592626094818115
    5. 'we' → logprob: -4.459262371063232
    6. '       ' → logprob: -4.959262371063232
    7. '
' → logprob: -5.584262371063232
    8. ' #' → logprob: -5.834262371063232
    9. 'use' → logprob: -6.459262371063232
    10. ' the' → logprob: -6.459262371063232

Token 506: ' from' (ID: 591)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8649325966835022
    2. ' must' → logprob: -1.9899325370788574
    3. 'must' → logprob: -2.2399325370788574
    4. 'are' → logprob: -2.8649325370788574
    5. ' can' → logprob: -3.6149325370788574
    6. '#' → logprob: -3.6149325370788574
    7. 'from' → logprob: -3.7399325370788574
    8. ' should' → logprob: -3.8649325370788574
    9. ' between' → logprob: -3.9899325370788574
    10. ',' → logprob: -3.9899325370788574

Token 507: ' capital' (ID: 9029)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1576744318008423
    2. 'city' → logprob: -1.4076744318008423
    3. 'the' → logprob: -1.5326744318008423
    4. 'capital' → logprob: -1.5326744318008423
    5. ' ' → logprob: -5.907674312591553
    6. ' capital' → logprob: -6.032674312591553
    7. ' the' → logprob: -6.157674312591553
    8. ' city' → logprob: -6.657674312591553
    9. '#' → logprob: -8.282674789428711
    10. '<|end|>' → logprob: -10.032674789428711

Token 508: ' must' (ID: 2804)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42345452308654785
    2. 'to' → logprob: -1.4234545230865479
    3. 'are' → logprob: -3.923454523086548
    4. ' must' → logprob: -4.173454284667969
    5. ' are' → logprob: -4.298454284667969
    6. '   ' → logprob: -4.423454284667969
    7. '1' → logprob: -4.548454284667969
    8. 'must' → logprob: -5.298454284667969
    9. ' remain' → logprob: -5.423454284667969
    10. 'remain' → logprob: -5.423454284667969

Token 509: ' not' (ID: 625)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2963840961456299
    2. 'remain' → logprob: -2.04638409614563
    3. 'not' → logprob: -2.54638409614563
    4. ' be' → logprob: -3.67138409614563
    5. ' not' → logprob: -4.671383857727051
    6. ' remain' → logprob: -5.296383857727051
    7. 'match' → logprob: -5.796383857727051
    8. 'equal' → logprob: -5.796383857727051
    9. 'also' → logprob: -6.921383857727051
    10. 'all' → logprob: -7.921383857727051

Token 510: ' change' (ID: 3343)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.6727026700973511
    2. 'ex' → logprob: -0.9227026700973511
    3. 'change' → logprob: -2.6727027893066406
    4. 'be' → logprob: -4.297702789306641
    5. 'de' → logprob: -5.422702789306641
    6. ' increase' → logprob: -6.547702789306641
    7. ' exceed' → logprob: -6.922702789306641
    8. ' change' → logprob: -7.172702789306641
    9. 'vi' → logprob: -7.547702789306641
    10. ' be' → logprob: -7.672702789306641

Token 511: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11165116727352142
    2. '
' → logprob: -2.9866511821746826
    3. '#' → logprob: -3.4866511821746826
    4. ',' → logprob: -4.9866509437561035
    5. '        
' → logprob: -5.3616509437561035
    6. ',
' → logprob: -5.4866509437561035
    7. 'parent' → logprob: -6.4866509437561035
    8. 'import' → logprob: -6.7366509437561035
    9. 'mst' → logprob: -7.1116509437561035
    10. 'short' → logprob: -7.6116509437561035

Token 512: ' only' (ID: 1606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21227550506591797
    2. 'use' → logprob: -3.087275505065918
    3. 'we' → logprob: -3.587275505065918
    4. 'sort' → logprob: -3.962275505065918
    5. 'select' → logprob: -4.337275505065918
    6. ' use' → logprob: -4.462275505065918
    7. '
' → logprob: -4.462275505065918
    8. 'Use' → logprob: -4.837275505065918
    9. ' #' → logprob: -4.837275505065918
    10. 'the' → logprob: -5.087275505065918

Token 513: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5107256174087524
    2. 'use' → logprob: -2.135725498199463
    3. 'select' → logprob: -2.510725498199463
    4. 'consider' → logprob: -2.510725498199463
    5. 'choose' → logprob: -2.885725498199463
    6. 'include' → logprob: -3.635725498199463
    7. 'keep' → logprob: -4.260725498199463
    8. 'using' → logprob: -4.510725498199463
    9. ' edges' → logprob: -5.635725498199463
    10. 'short' → logprob: -6.135725498199463

Token 514: ' in' (ID: 306)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6267112493515015
    2. 'from' → logprob: -1.5017112493515015
    3. ' in' → logprob: -2.751711368560791
    4. ' from' → logprob: -2.876711368560791
    5. 'that' → logprob: -3.126711368560791
    6. ' used' → logprob: -4.001711368560791
    7. ' on' → logprob: -4.126711368560791
    8. 'in' → logprob: -4.251711368560791
    9. ' with' → logprob: -5.126711368560791
    10. '   ' → logprob: -5.501711368560791

Token 515: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.013295638374984264
    2. ' shortest' → logprob: -4.388295650482178
    3. 'the' → logprob: -7.263295650482178
    4. '```' → logprob: -10.51329517364502
    5. ' the' → logprob: -10.76329517364502
    6. ' short' → logprob: -11.13829517364502
    7. '`' → logprob: -11.88829517364502
    8. '(short' → logprob: -12.51329517364502
    9. '
' → logprob: -13.13829517364502
    10. 'Shortest' → logprob: -13.38829517364502

Token 516: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.5577775128767826e-06
    2. 'path' → logprob: -13.125005722045898
    3. '_paths' → logprob: -13.500005722045898
    4. '_' → logprob: -14.500005722045898
    5. '```' → logprob: -15.000005722045898
    6. '\' → logprob: -15.250005722045898
    7. '
' → logprob: -15.375005722045898
    8. '_short' → logprob: -15.500005722045898
    9. '   ' → logprob: -16.2500057220459
    10. ' path' → logprob: -16.7500057220459

Token 517: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0057903737761080265
    2. '_path' → logprob: -6.1307902336120605
    3. '_paths' → logprob: -6.6307902336120605
    4. '_' → logprob: -6.8807902336120605
    5. '```' → logprob: -7.6307902336120605
    6. '_short' → logprob: -8.005790710449219
    7. 's' → logprob: -8.505790710449219
    8. '\' → logprob: -9.630790710449219
    9. '_edge' → logprob: -10.880790710449219
    10. '_cost' → logprob: -11.005790710449219

Token 518: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520136773586273
    2. '
' → logprob: -1.3520137071609497
    3. '        
' → logprob: -3.60201358795166
    4. '<|end|>' → logprob: -6.10201358795166
    5. 'edges' → logprob: -6.35201358795166
    6. ',' → logprob: -6.72701358795166
    7. '

' → logprob: -7.35201358795166
    8. '   ' → logprob: -7.47701358795166
    9. ',
' → logprob: -7.47701358795166
    10. '#' → logprob: -7.60201358795166

Token 519: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.008770800195634365
    2. ' be' → logprob: -4.758770942687988
    3. 'appear' → logprob: -9.883770942687988
    4. '
' → logprob: -9.883770942687988
    5. 'remain' → logprob: -10.758770942687988
    6. '	be' → logprob: -11.508770942687988
    7. 'used' → logprob: -12.383770942687988
    8. '```' → logprob: -12.633770942687988
    9. '_be' → logprob: -13.383770942687988
    10. '   ' → logprob: -13.633770942687988

Token 520: ' chosen' (ID: 16180)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.028566967695951462
    2. 'included' → logprob: -4.653566837310791
    3. 'chosen' → logprob: -4.778566837310791
    4. ' used' → logprob: -5.278566837310791
    5. 'selected' → logprob: -5.403566837310791
    6. 'consider' → logprob: -8.02856731414795
    7. ' chosen' → logprob: -9.65356731414795
    8. ' selected' → logprob: -9.90356731414795
    9. 'added' → logprob: -9.90356731414795
    10. '_used' → logprob: -9.90356731414795

Token 521: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09794005751609802
    2. '
' → logprob: -2.847939968109131
    3. '        
' → logprob: -3.472939968109131
    4. ',' → logprob: -6.847939968109131
    5. '#' → logprob: -7.097939968109131
    6. '<|end|>' → logprob: -7.722939968109131
    7. 'edges' → logprob: -7.972939968109131
    8. ',
' → logprob: -8.472940444946289
    9. '    
' → logprob: -8.597940444946289
    10. 'import' → logprob: -8.597940444946289

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07445809245109558
    2. 'mst' → logprob: -2.699458122253418
    3. 'import' → logprob: -6.824458122253418
    4. 'sp' → logprob: -7.199458122253418
    5. '        
' → logprob: -7.574458122253418
    6. 'selected' → logprob: -7.699458122253418
    7. '```' → logprob: -8.199458122253418
    8. '   ' → logprob: -8.199458122253418
    9. '
' → logprob: -8.324458122253418
    10. 'parent' → logprob: -8.824458122253418

Token 523: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25934073328971863
    2. 'parent' → logprob: -2.509340763092041
    3. 'import' → logprob: -3.384340763092041
    4. '#' (adapté à ' #') → logprob: -3.384340763092041
    5. 'mst' → logprob: -3.634340763092041
    6. 'uf' → logprob: -4.134340763092041
    7. '
' → logprob: -4.884340763092041
    8. 'selected' → logprob: -5.259340763092041
    9. 'visited' → logprob: -5.759340763092041
    10. '        
' → logprob: -5.759340763092041

Token 524: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6962760090827942
    2. 'short' → logprob: -1.4462759494781494
    3. 'parent' → logprob: -1.5712759494781494
    4. '       ' → logprob: -3.9462759494781494
    5. 'selected' → logprob: -4.4462761878967285
    6. 'uf' → logprob: -4.6962761878967285
    7. '   ' → logprob: -4.6962761878967285
    8. 'import' → logprob: -6.4462761878967285
    9. 'parents' → logprob: -6.5712761878967285
    10. 'union' → logprob: -6.8212761878967285

Token 525: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6809039115905762
    2. '#' → logprob: -1.5559039115905762
    3. 'need' → logprob: -1.8059039115905762
    4. ' want' → logprob: -3.180903911590576
    5. ' now' → logprob: -3.680903911590576
    6. ' will' → logprob: -3.930903911590576
    7. 'want' → logprob: -5.305903911590576
    8. ' #' → logprob: -5.430903911590576
    9. ' should' → logprob: -5.805903911590576
    10. 'import' → logprob: -5.930903911590576

Token 526: ' a' (ID: 261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1281587779521942
    2. 'to' → logprob: -2.1281588077545166
    3. '   ' → logprob: -6.8781585693359375
    4. ' a' → logprob: -10.128158569335938
    5. 'a' → logprob: -10.253158569335938
    6. '  ' → logprob: -10.878158569335938
    7. ' the' → logprob: -11.003158569335938
    8. '    ' → logprob: -11.003158569335938
    9. ' minimal' → logprob: -11.128158569335938
    10. 'the' → logprob: -11.503158569335938

Token 527: ' minimal' (ID: 19957)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5289279818534851
    2. ' spanning' → logprob: -1.5289280414581299
    3. 'minimum' → logprob: -2.27892804145813
    4. ' minimal' → logprob: -2.65392804145813
    5. ' MST' → logprob: -5.028927803039551
    6. 'sp' → logprob: -5.653927803039551
    7. ' mst' → logprob: -5.778927803039551
    8. 'minimal' → logprob: -5.778927803039551
    9. 'mst' → logprob: -6.653927803039551
    10. 'min' → logprob: -6.778927803039551

Token 528: ' cost' (ID: 3097)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.5305241346359253
    2. 'cost' → logprob: -1.1555241346359253
    3. ' cost' → logprob: -2.905524253845215
    4. 'sp' → logprob: -3.280524253845215
    5. ' total' → logprob: -5.905524253845215
    6. 'total' → logprob: -7.405524253845215
    7. '   ' → logprob: -7.780524253845215
    8. ' ' → logprob: -8.655524253845215
    9. 'span' → logprob: -9.280524253845215
    10. '
' → logprob: -9.530524253845215

Token 529: ' subset' (ID: 58845)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.02425815723836422
    2. 'sp' → logprob: -4.024258136749268
    3. '   ' → logprob: -6.649258136749268
    4. ' plan' → logprob: -6.774258136749268
    5. '_sp' → logprob: -6.899258136749268
    6. ' to' → logprob: -7.649258136749268
    7. 'plan' → logprob: -7.774258136749268
    8. ' sp' → logprob: -8.274258613586426
    9. ' ' → logprob: -8.274258613586426
    10. ',' → logprob: -8.649258613586426

Token 530: ' that' (ID: 484)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8581463694572449
    2. ',' → logprob: -1.3581464290618896
    3. '       ' → logprob: -2.2331464290618896
    4. '_' → logprob: -2.7331464290618896
    5. ' to' → logprob: -3.8581464290618896
    6. ' that' → logprob: -3.8581464290618896
    7. '   ' → logprob: -3.8581464290618896
    8. '<|end|>' → logprob: -3.9831464290618896
    9. ' ,' → logprob: -4.2331461906433105
    10. ' ' → logprob: -4.6081461906433105

Token 531: ' still' (ID: 2928)
  Prédit: ' connects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connects' → logprob: -0.2433711290359497
    2. 'connect' → logprob: -1.6183711290359497
    3. ' spans' → logprob: -4.74337100982666
    4. ' connect' → logprob: -5.24337100982666
    5. 'sp' → logprob: -6.74337100982666
    6. ' includes' → logprob: -6.86837100982666
    7. '   ' → logprob: -7.61837100982666
    8. ' forms' → logprob: -7.99337100982666
    9. '	connect' → logprob: -8.74337100982666
    10. '_connect' → logprob: -9.11837100982666

Token 532: ' connects' (ID: 47599)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.07979890704154968
    2. ' connects' → logprob: -2.579798936843872
    3. 'sp' → logprob: -7.579798698425293
    4. '   ' → logprob: -8.704798698425293
    5. ' spans' → logprob: -9.079798698425293
    6. ' connect' → logprob: -9.454798698425293
    7. '_connect' → logprob: -10.829798698425293
    8. '	connect' → logprob: -11.579798698425293
    9. ' ' → logprob: -13.204798698425293
    10. '.connect' → logprob: -13.579798698425293

Token 533: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04859861359000206
    2. ' all' → logprob: -3.048598527908325
    3. '	all' → logprob: -11.798598289489746
    4. '(all' → logprob: -13.423598289489746
    5. '_all' → logprob: -14.423598289489746
    6. 'them' → logprob: -14.798598289489746
    7. '```' → logprob: -15.548598289489746
    8. 'the' → logprob: -15.673598289489746
    9. 'every' → logprob: -15.798598289489746
    10. 'everything' → logprob: -15.923598289489746

Token 534: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.2661994397640228
    2. ' cities' → logprob: -1.5161994695663452
    3. 'nodes' → logprob: -4.891199588775635
    4. ' nodes' → logprob: -5.391199588775635
    5. ' the' → logprob: -6.891199588775635
    6. 'the' → logprob: -8.016199111938477
    7. '   ' → logprob: -8.266199111938477
    8. '       ' → logprob: -8.641199111938477
    9. 'vertices' → logprob: -8.891199111938477
    10. ',' → logprob: -10.016199111938477

Token 535: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10048314183950424
    2. ',' → logprob: -2.7254831790924072
    3. '.' → logprob: -3.8504831790924072
    4. ',
' → logprob: -5.350482940673828
    5. '        
' → logprob: -7.225482940673828
    6. ' and' → logprob: -7.600482940673828
    7. ' (' → logprob: -7.600482940673828
    8. '
' → logprob: -7.725482940673828
    9. '.
' → logprob: -8.100482940673828
    10. ' to' → logprob: -8.475482940673828

Token 536: 'sp' (ID: 1148)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2219653129577637
    2. ')' → logprob: -1.8469653129577637
    3. ')
' → logprob: -1.9719653129577637
    4. 'i' → logprob: -3.2219653129577637
    5. 'using' → logprob: -3.2219653129577637
    6. '       ' → logprob: -3.3469653129577637
    7. ' forming' → logprob: -3.3469653129577637
    8. 'forming' → logprob: -3.3469653129577637
    9. 'a' → logprob: -3.9719653129577637
    10. 'edges' → logprob: -4.096965312957764

Token 537: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.127304345369339
    2. 'an' → logprob: -2.1273043155670166
    3. 'anned' → logprob: -8.377304077148438
    4. '   ' → logprob: -9.877304077148438
    5. 'anner' → logprob: -10.627304077148438
    6. '```' → logprob: -10.752304077148438
    7. 'ann' → logprob: -11.627304077148438
    8. 'ans' → logprob: -12.252304077148438
    9. 'aning' → logprob: -12.377304077148438
    10. 'anst' → logprob: -12.877304077148438

Token 538: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.3887173533439636
    2. 'tree' → logprob: -1.1387174129486084
    3. '_tree' → logprob: -6.513717174530029
    4. '
' → logprob: -8.263717651367188
    5. ' trees' → logprob: -10.513717651367188
    6. '	tree' → logprob: -11.013717651367188
    7. 'trees' → logprob: -11.138717651367188
    8. ' forest' → logprob: -11.263717651367188
    9. '(tree' → logprob: -12.138717651367188
    10. 'forest' → logprob: -12.263717651367188

Token 539: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014964265748858452
    2. ').' → logprob: -4.2649641036987305
    3. '),' → logprob: -7.8899641036987305
    4. ')
' → logprob: -9.01496410369873
    5. ',' → logprob: -9.26496410369873
    6. ' )' → logprob: -10.01496410369873
    7. ' with' → logprob: -10.13996410369873
    8. ' edges' → logprob: -10.13996410369873
    9. ').
' → logprob: -10.76496410369873
    10. ' that' → logprob: -11.26496410369873

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019935468211770058
    2. '
' → logprob: -4.269935607910156
    3. '        
' → logprob: -5.394935607910156
    4. ',' → logprob: -7.269935607910156
    5. '   ' → logprob: -8.769935607910156
    6. '    
' → logprob: -9.144935607910156
    7. ',
' → logprob: -9.394935607910156
    8. '<|end|>' → logprob: -10.519935607910156
    9. '  
' → logprob: -11.144935607910156
    10. 'import' → logprob: -11.144935607910156

Token 541: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08606492727994919
    2. 'short' → logprob: -3.2110648155212402
    3. '   ' → logprob: -4.21106481552124
    4. '        
' → logprob: -4.83606481552124
    5. '#' (adapté à ' #') → logprob: -5.58606481552124
    6. 'parent' → logprob: -5.58606481552124
    7. 'edges' → logprob: -6.21106481552124
    8. '
' → logprob: -6.33606481552124
    9. 'mst' → logprob: -6.33606481552124
    10. 'sp' → logprob: -6.71106481552124

Token 542: ' and' (ID: 326)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.04993266612291336
    2. '       ' → logprob: -3.5499327182769775
    3. 'parent' → logprob: -4.674932479858398
    4. 'mst' → logprob: -5.924932479858398
    5. 'import' → logprob: -6.424932479858398
    6. 'selected' → logprob: -6.674932479858398
    7. '   ' → logprob: -6.799932479858398
    8. '        
' → logprob: -7.299932479858398
    9. '#' → logprob: -7.299932479858398
    10. 'uf' → logprob: -7.549932479858398

Token 543: ' keeps' (ID: 18295)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3416275680065155
    2. 'short' → logprob: -2.091627597808838
    3. ' shortest' → logprob: -2.091627597808838
    4. '
' → logprob: -4.091627597808838
    5. ' can' → logprob: -5.466627597808838
    6. ' is' → logprob: -5.966627597808838
    7. 'import' → logprob: -6.091627597808838
    8. 'u' → logprob: -6.091627597808838
    9. ' #' → logprob: -6.466627597808838
    10. 'can' → logprob: -6.966627597808838

Token 544: ' distances' (ID: 48294)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5528520345687866
    2. ' distances' → logprob: -1.6778520345687866
    3. 'the' → logprob: -1.8028520345687866
    4. 'dist' → logprob: -2.802852153778076
    5. ' dist' → logprob: -4.927852153778076
    6. ' shortest' → logprob: -5.677852153778076
    7. 'distance' → logprob: -7.427852153778076
    8. 'import' → logprob: -8.177851676940918
    9. ' distance' → logprob: -8.677851676940918
    10. ' all' → logprob: -8.677851676940918

Token 545: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04412355273962021
    2. '
' → logprob: -4.044123649597168
    3. '#' → logprob: -4.169123649597168
    4. '        
' → logprob: -6.169123649597168
    5. ',' → logprob: -6.669123649597168
    6. 'short' → logprob: -6.794123649597168
    7. ' shortest' → logprob: -7.044123649597168
    8. ' #' → logprob: -7.169123649597168
    9. '.
' → logprob: -7.544123649597168
    10. '   ' → logprob: -7.919123649597168

Token 546: ' capital' (ID: 9029)
  Prédit: 'capital'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capital' → logprob: -0.6262755393981934
    2. 'the' → logprob: -1.0012755393981934
    3. '1' → logprob: -2.8762755393981934
    4. 'city' → logprob: -4.001275539398193
    5. ' capital' → logprob: -4.376275539398193
    6. ' the' → logprob: -4.626275539398193
    7. ' ' → logprob: -7.751275539398193
    8. ' city' → logprob: -8.126276016235352
    9. '```' → logprob: -9.001276016235352
    10. '#' → logprob: -10.251276016235352

Token 547: ' unchanged' (ID: 73928)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15116901695728302
    2. '.' → logprob: -2.9011690616607666
    3. ',' → logprob: -3.1511690616607666
    4. '#' → logprob: -5.0261688232421875
    5. '=' → logprob: -5.1511688232421875
    6. '
' → logprob: -5.2761688232421875
    7. '        
' → logprob: -5.6511688232421875
    8. '   ' → logprob: -5.9011688232421875
    9. ' =' → logprob: -5.9011688232421875
    10. ' to' → logprob: -6.1511688232421875

Token 548: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04293673112988472
    2. '
' → logprob: -4.0429368019104
    3. '        
' → logprob: -4.5429368019104
    4. ',' → logprob: -4.7929368019104
    5. '.' → logprob: -6.6679368019104
    6. '   ' → logprob: -7.2929368019104
    7. 'short' → logprob: -7.2929368019104
    8. '
' → logprob: -7.5429368019104
    9. '#' → logprob: -7.5429368019104
    10. ',
' → logprob: -7.6679368019104

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029161445796489716
    2. '
' → logprob: -4.40416145324707
    3. '        
' → logprob: -5.40416145324707
    4. '   ' → logprob: -5.52916145324707
    5. 'mst' → logprob: -5.52916145324707
    6. '```' → logprob: -6.40416145324707
    7. 'sp' → logprob: -7.65416145324707
    8. '    
' → logprob: -7.90416145324707
    9. 'parent' → logprob: -8.02916145324707
    10. 'import' → logprob: -8.15416145324707

Token 550: ' #' (ID: 1069)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.04245983436703682
    2. 'parent' → logprob: -3.542459726333618
    3. '#' (adapté à ' #') → logprob: -5.167459964752197
    4. '   ' → logprob: -6.292459964752197
    5. ' shortest' → logprob: -6.292459964752197
    6. 'selected' → logprob: -7.042459964752197
    7. '       ' → logprob: -7.292459964752197
    8. 'mst' → logprob: -7.542459964752197
    9. ' parent' → logprob: -8.292459487915039
    10. '
' → logprob: -9.042459487915039

Token 551: ' The' (ID: 623)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.10619888454675674
    2. '#' → logprob: -3.106198787689209
    3. 'parent' → logprob: -3.106198787689209
    4. 'selected' → logprob: -5.231198787689209
    5. '   ' → logprob: -6.356198787689209
    6. 'uf' → logprob: -6.731198787689209
    7. 'mst' → logprob: -7.356198787689209
    8. ' shortest' → logprob: -7.981198787689209
    9. '       ' → logprob: -8.231199264526367
    10. 'parents' → logprob: -8.356199264526367

Token 552: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7342444062232971
    2. 'short' → logprob: -0.7342444062232971
    3. 'parent' → logprob: -4.109244346618652
    4. ' shortest' → logprob: -4.859244346618652
    5. 'import' → logprob: -5.109244346618652
    6. ' #' → logprob: -5.859244346618652
    7. '
' → logprob: -6.234244346618652
    8. 'selected' → logprob: -6.609244346618652
    9. 'uf' → logprob: -7.359244346618652
    10. ' parent' → logprob: -7.859244346618652

Token 553: ' reduces' (ID: 38566)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6859844923019409
    2. '#' → logprob: -1.685984492301941
    3. 'is' → logprob: -2.1859846115112305
    4. ':' → logprob: -2.5609846115112305
    5. ' now' → logprob: -2.5609846115112305
    6. ' continues' → logprob: -4.5609846115112305
    7. 'now' → logprob: -5.3109846115112305
    8. ' requires' → logprob: -5.3109846115112305
    9. 'requires' → logprob: -5.6859846115112305
    10. ' here' → logprob: -5.6859846115112305

Token 554: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22587816417217255
    2. ' to' → logprob: -1.600878119468689
    3. '       ' → logprob: -7.7258782386779785
    4. '#' → logprob: -11.72587776184082
    5. '_to' → logprob: -12.22587776184082
    6. '        ' → logprob: -12.72587776184082
    7. '	to' → logprob: -12.97587776184082
    8. ',' → logprob: -13.22587776184082
    9. '        
' → logprob: -14.22587776184082
    10. 'import' → logprob: -14.60087776184082

Token 555: ' finding' (ID: 12129)
  Prédit: 'finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finding' → logprob: -0.05902177840471268
    2. 'cho' → logprob: -3.6840217113494873
    3. 'building' → logprob: -4.059021949768066
    4. 'select' → logprob: -4.684021949768066
    5. 'import' → logprob: -6.184021949768066
    6. 'K' → logprob: -6.559021949768066
    7. 'construct' → logprob: -7.184021949768066
    8. '#' → logprob: -7.684021949768066
    9. 'implement' → logprob: -8.684021949768066
    10. 'using' → logprob: -8.684021949768066

Token 556: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01587211713194847
    2. ' a' → logprob: -4.890872001647949
    3. 'the' → logprob: -4.890872001647949
    4. 'minimum' → logprob: -7.515872001647949
    5. ' the' → logprob: -9.26587200164795
    6. 'Minimum' → logprob: -10.76587200164795
    7. 'an' → logprob: -10.76587200164795
    8. 'minimal' → logprob: -11.39087200164795
    9. 'import' → logprob: -12.01587200164795
    10. ' minimum' → logprob: -12.26587200164795

Token 557: ' Minimum' (ID: 47219)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.014416756108403206
    2. 'minimal' → logprob: -4.889416694641113
    3. 'sp' → logprob: -5.764416694641113
    4. 'Minimum' → logprob: -6.139416694641113
    5. ' spanning' → logprob: -7.514416694641113
    6. 'mst' → logprob: -7.639416694641113
    7. ' minimum' → logprob: -8.139416694641113
    8. 'min' → logprob: -9.639416694641113
    9. 'Minimal' → logprob: -10.889416694641113
    10. ' Minimum' → logprob: -11.014416694641113

Token 558: ' Sp' (ID: 2856)
  Prédit: 'Sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sp' → logprob: -0.015322026796638966
    2. ' Sp' → logprob: -4.390322208404541
    3. ' spanning' → logprob: -6.390322208404541
    4. 'sp' → logprob: -6.890322208404541
    5. '   ' → logprob: -9.890321731567383
    6. 'Span' → logprob: -10.390321731567383
    7. '_sp' → logprob: -12.015321731567383
    8. '
' → logprob: -12.140321731567383
    9. '#' → logprob: -12.515321731567383
    10. '```' → logprob: -12.640321731567383

Token 559: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.018733341246843338
    2. 'an' → logprob: -4.018733501434326
    3. '   ' → logprob: -8.768733024597168
    4. '```' → logprob: -8.768733024597168
    5. ' spanning' → logprob: -9.268733024597168
    6. 'r' → logprob: -10.268733024597168
    7. 'rim' → logprob: -10.518733024597168
    8. '{' → logprob: -10.893733024597168
    9. '{
' → logprob: -11.143733024597168
    10. 'aning' → logprob: -11.768733024597168

Token 560: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -8.399378566537052e-05
    2. ' Tree' → logprob: -9.500083923339844
    3. '   ' → logprob: -13.000083923339844
    4. 'tree' → logprob: -13.250083923339844
    5. '_tree' → logprob: -13.375083923339844
    6. '	Tree' → logprob: -14.250083923339844
    7. '       ' → logprob: -14.375083923339844
    8. ' tree' → logprob: -14.500083923339844
    9. 'Forest' → logprob: -14.625083923339844
    10. '```' → logprob: -14.875083923339844

Token 561: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.5480934977531433
    2. '(' → logprob: -1.548093557357788
    3. ' (' → logprob: -2.048093557357788
    4. 'from' → logprob: -3.673093557357788
    5. '<|end|>' → logprob: -4.673093318939209
    6. '.' → logprob: -4.923093318939209
    7. ' using' → logprob: -4.923093318939209
    8. ',' → logprob: -5.048093318939209
    9. ' over' → logprob: -5.173093318939209
    10. ')' → logprob: -5.548093318939209

Token 562: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15489082038402557
    2. '(M' → logprob: -2.154890775680542
    3. ' over' → logprob: -4.904891014099121
    4. ' (' → logprob: -4.904891014099121
    5. ' that' → logprob: -5.779891014099121
    6. 'from' → logprob: -5.779891014099121
    7. ',' → logprob: -6.279891014099121
    8. ' using' → logprob: -6.654891014099121
    9. 'using' → logprob: -7.029891014099121
    10. 'that' → logprob: -7.154891014099121

Token 563: 'ST' (ID: 1117)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43825581669807434
    2. ')' → logprob: -1.813255786895752
    3. 'T' → logprob: -2.438255786895752
    4. '(M' → logprob: -3.563255786895752
    5. '(T' → logprob: -3.938255786895752
    6. ' (' → logprob: -4.063255786895752
    7. 'from' → logprob: -4.938255786895752
    8. ' spanning' → logprob: -6.063255786895752
    9. 'Problem' → logprob: -6.313255786895752
    10. '```' → logprob: -6.438255786895752

Token 564: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015075001865625381
    2. ' over' → logprob: -5.640075206756592
    3. '(' → logprob: -5.765075206756592
    4. ' using' → logprob: -6.015075206756592
    5. ' that' → logprob: -6.390075206756592
    6. ',' → logprob: -6.640075206756592
    7. 'using' → logprob: -7.515075206756592
    8. '.' → logprob: -8.390074729919434
    9. ' (' → logprob: -8.390074729919434
    10. 'that' → logprob: -8.390074729919434

Token 565: ' on' (ID: 402)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9416027069091797
    2. 'using' → logprob: -2.0666027069091797
    3. ' using' → logprob: -2.3166027069091797
    4. 'from' → logprob: -2.5666027069091797
    5. 'import' → logprob: -2.9416027069091797
    6. ' class' → logprob: -2.9416027069091797
    7. ' that' → logprob: -3.5666027069091797
    8. ',' → logprob: -3.5666027069091797
    9. ' with' → logprob: -3.5666027069091797
    10. 'with' → logprob: -3.5666027069091797

Token 566: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8859489560127258
    2. 'short' → logprob: -1.010948896408081
    3. ' shortest' → logprob: -1.885948896408081
    4. ' the' → logprob: -2.635948896408081
    5. 'these' → logprob: -9.51094913482666
    6. ' these' → logprob: -9.63594913482666
    7. '```' → logprob: -9.63594913482666
    8. '(short' → logprob: -10.01094913482666
    9. 'Shortest' → logprob: -10.01094913482666
    10. ' short' → logprob: -10.38594913482666

Token 567: ' graph' (ID: 7465)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.22760631144046783
    2. ' shortest' → logprob: -1.6026062965393066
    3. 'graph' → logprob: -7.477606296539307
    4. ' edges' → logprob: -7.977606296539307
    5. ' short' → logprob: -8.102606773376465
    6. 'edges' → logprob: -8.102606773376465
    7. ' graph' → logprob: -8.102606773376465
    8. 'subset' → logprob: -9.727606773376465
    9. '```' → logprob: -9.977606773376465
    10. 'sorted' → logprob: -9.977606773376465

Token 568: ' formed' (ID: 20680)
  Prédit: ' formed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formed' → logprob: -0.9188008904457092
    2. 'formed' → logprob: -1.2938008308410645
    3. 'constructed' → logprob: -2.9188008308410645
    4. ' composed' → logprob: -3.2938008308410645
    5. ' consisting' → logprob: -3.4188008308410645
    6. ' built' → logprob: -3.4188008308410645
    7. 'with' → logprob: -3.5438008308410645
    8. 'built' → logprob: -3.7938008308410645
    9. '#' → logprob: -4.0438008308410645
    10. ' of' → logprob: -4.1688008308410645

Token 569: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.4753775894641876
    2. ' by' → logprob: -0.9753775596618652
    3. '       ' → logprob: -7.475377559661865
    4. ')' → logprob: -8.350378036499023
    5. ',' → logprob: -9.100378036499023
    6. '   ' → logprob: -9.225378036499023
    7. 'from' → logprob: -9.475378036499023
    8. '.' → logprob: -9.850378036499023
    9. '=' → logprob: -10.350378036499023
    10. ' of' → logprob: -10.850378036499023

Token 570: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.16468313336372375
    2. ' shortest' → logprob: -1.9146831035614014
    3. 'the' → logprob: -5.5396833419799805
    4. ' the' → logprob: -8.66468334197998
    5. 'Shortest' → logprob: -9.66468334197998
    6. 'these' → logprob: -9.78968334197998
    7. '(short' → logprob: -9.91468334197998
    8. ' short' → logprob: -10.41468334197998
    9. '	short' → logprob: -10.78968334197998
    10. ' these' → logprob: -10.78968334197998

Token 571: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. '_short' → logprob: -15.750015258789062
    4. '```' → logprob: -16.875015258789062
    5. '_pat' → logprob: -17.125015258789062
    6. ')' → logprob: -17.250015258789062
    7. 'path' → logprob: -17.625015258789062
    8. '_paths' → logprob: -17.750015258789062
    9. ')_' → logprob: -17.875015258789062
    10. '_p' → logprob: -18.000015258789062

Token 572: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0005713827558793128
    2. '_' → logprob: -7.500571250915527
    3. '```' → logprob: -12.250571250915527
    4. '_ed' → logprob: -12.625571250915527
    5. '_nodes' → logprob: -13.000571250915527
    6. ' _' → logprob: -13.375571250915527
    7. 'edges' → logprob: -14.125571250915527
    8. '_edge' → logprob: -14.125571250915527
    9. '_e' → logprob: -14.125571250915527
    10. '
' → logprob: -14.375571250915527

Token 573: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7834400534629822
    2. '       ' → logprob: -1.033440113067627
    3. '   ' → logprob: -3.283440113067627
    4. '
' → logprob: -3.533440113067627
    5. '.' → logprob: -3.658440113067627
    6. '        
' → logprob: -3.783440113067627
    7. ',
' → logprob: -3.908440113067627
    8. 'class' → logprob: -4.158440113067627
    9. ' with' → logprob: -4.658440113067627
    10. 'with' → logprob: -4.658440113067627

Token 574: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06209933012723923
    2. 'parent' → logprob: -3.0620992183685303
    3. '   ' → logprob: -4.812099456787109
    4. '
' → logprob: -5.562099456787109
    5. '       ' → logprob: -7.687099456787109
    6. '    
' → logprob: -8.06209945678711
    7. '        
' → logprob: -8.56209945678711
    8. 'import' → logprob: -8.81209945678711
    9. '```' → logprob: -9.06209945678711
    10. 'parents' → logprob: -9.18709945678711

Token 575: ' #' (ID: 1069)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.22746510803699493
    2. 'parent' → logprob: -1.7274651527404785
    3. '   ' → logprob: -4.2274651527404785
    4. '       ' → logprob: -4.6024651527404785
    5. 'parents' → logprob: -7.8524651527404785
    6. '        
' → logprob: -8.72746467590332
    7. 'def' → logprob: -8.72746467590332
    8. '
' → logprob: -8.97746467590332
    9. '#' (adapté à ' #') → logprob: -9.10246467590332
    10. '    
' → logprob: -9.72746467590332

Token 576: ' Step' (ID: 22291)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3902343213558197
    2. 'class' → logprob: -1.140234351158142
    3. '   ' → logprob: -7.015234470367432
    4. 'parents' → logprob: -7.015234470367432
    5. '#' → logprob: -7.140234470367432
    6. '       ' → logprob: -7.390234470367432
    7. 'def' → logprob: -9.515233993530273
    8. '
' → logprob: -10.890233993530273
    9. '        
' → logprob: -11.015233993530273
    10. ' parent' → logprob: -11.015233993530273

Token 577: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2120897769927979
    2. ':' → logprob: -1.4620897769927979
    3. ' ' → logprob: -1.9620897769927979
    4. '1' → logprob: -2.462089776992798
    5. '#' → logprob: -2.712089776992798
    6. 'import' → logprob: -3.087089776992798
    7. '4' → logprob: -3.337089776992798
    8. 'def' → logprob: -3.462089776992798
    9. '       ' → logprob: -3.587089776992798
    10. '3' → logprob: -4.462089538574219

Token 578: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0026538937818259
    2. '#' → logprob: -6.252654075622559
    3. 'import' → logprob: -7.877654075622559
    4. 'from' → logprob: -8.502654075622559
    5. 'def' → logprob: -10.252654075622559
    6. '   ' → logprob: -10.502654075622559
    7. '1' → logprob: -10.752654075622559
    8. ':' → logprob: -11.002654075622559
    9. '       ' → logprob: -11.502654075622559
    10. '```' → logprob: -11.502654075622559

Token 579: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17811475694179535
    2. '   ' → logprob: -2.053114652633667
    3. 'class' → logprob: -3.678114652633667
    4. '       ' → logprob: -4.803114891052246
    5. ':
' → logprob: -7.803114891052246
    6. ' class' → logprob: -7.803114891052246
    7. 'import' → logprob: -8.553114891052246
    8. 'def' → logprob: -9.428114891052246
    9. '
' → logprob: -9.928114891052246
    10. ' :' → logprob: -9.928114891052246

Token 580: ' Build' (ID: 10885)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5473699569702148
    2. 'class' → logprob: -0.9223699569702148
    3. '#' → logprob: -4.047369956970215
    4. 'parents' → logprob: -5.797369956970215
    5. 'def' → logprob: -6.922369956970215
    6. 'short' → logprob: -7.047369956970215
    7. ' parent' → logprob: -7.172369956970215
    8. 'Define' → logprob: -8.172369956970215
    9. ' class' → logprob: -8.797369956970215
    10. 'Implement' → logprob: -9.297369956970215

Token 581: ' MST' (ID: 123058)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03503873944282532
    2. 'class' → logprob: -4.160038948059082
    3. ' parent' → logprob: -4.410038948059082
    4. 'a' → logprob: -5.785038948059082
    5. ' a' → logprob: -6.410038948059082
    6. 'parents' → logprob: -6.785038948059082
    7. 'def' → logprob: -8.160038948059082
    8. '   ' → logprob: -8.285038948059082
    9. 'union' → logprob: -9.535038948059082
    10. '       ' → logprob: -10.410038948059082

Token 582: ' from' (ID: 591)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.550894021987915
    2. '       ' → logprob: -2.050894021987915
    3. '
' → logprob: -2.175894021987915
    4. '   ' → logprob: -2.300894021987915
    5. 'class' → logprob: -2.800894021987915
    6. '        
' → logprob: -5.050893783569336
    7. 'parents' → logprob: -5.175893783569336
    8. ' parent' → logprob: -5.675893783569336
    9. '    
' → logprob: -6.425893783569336
    10. 'import' → logprob: -6.800893783569336

Token 583: ' edges' (ID: 22569)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.0027843154966831207
    2. ' shortest' → logprob: -6.752784252166748
    3. '(short' → logprob: -7.127784252166748
    4. 'the' → logprob: -7.252784252166748
    5. ' short' → logprob: -10.627784729003906
    6. 'sorted' → logprob: -11.127784729003906
    7. 'edges' → logprob: -11.502784729003906
    8. ' the' → logprob: -11.627784729003906
    9. '```' → logprob: -12.002784729003906
    10. 'union' → logprob: -12.002784729003906

Token 584: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1602054238319397
    2. '   ' → logprob: -3.660205364227295
    3. 'class' → logprob: -3.660205364227295
    4. '
' → logprob: -4.035205364227295
    5. 'short' → logprob: -4.160205364227295
    6. 'import' → logprob: -4.535205364227295
    7. '#' → logprob: -4.910205364227295
    8. ' edges' → logprob: -4.910205364227295
    9. '        
' → logprob: -5.285205364227295
    10. ',' → logprob: -5.285205364227295

Token 585: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.00010366239439463243
    2. ' shortest' → logprob: -9.250103950500488
    3. '```' → logprob: -13.000103950500488
    4. '       ' → logprob: -13.250103950500488
    5. '`' → logprob: -13.750103950500488
    6. '   ' → logprob: -14.250103950500488
    7. '(short' → logprob: -14.375103950500488
    8. '
' → logprob: -15.000103950500488
    9. ' short' → logprob: -15.125103950500488
    10. 'the' → logprob: -15.125103950500488

Token 586: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -6.704273118884885e-07
    2. 'path' → logprob: -15.250000953674316
    3. 'short' → logprob: -15.750000953674316
    4. '_short' → logprob: -16.25
    5. '```' → logprob: -17.0
    6. '\' → logprob: -18.25
    7. '_' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '_PATH' → logprob: -19.25

Token 587: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.001378329354338348
    2. 'edges' → logprob: -6.626378536224365
    3. 'short' → logprob: -11.126378059387207
    4. '_short' → logprob: -11.251378059387207
    5. '```' → logprob: -11.251378059387207
    6. '_' → logprob: -12.251378059387207
    7. '_edge' → logprob: -13.626378059387207
    8. ' edges' → logprob: -14.001378059387207
    9. 's' → logprob: -14.376378059387207
    10. '_ed' → logprob: -14.501378059387207

Token 588: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5265915393829346
    2. '
' → logprob: -1.7765915393829346
    3. '   ' → logprob: -2.1515915393829346
    4. 'class' → logprob: -2.9015915393829346
    5. 'parent' → logprob: -3.5265915393829346
    6. '        
' → logprob: -3.6515915393829346
    7. '    
' → logprob: -4.6515913009643555
    8. 'parents' → logprob: -7.1515913009643555
    9. '  
' → logprob: -7.4015913009643555
    10. 'import' → logprob: -8.026591300964355

Token 589: ' Kr' (ID: 11317)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.988682210445404
    2. 'union' → logprob: -1.4886822700500488
    3. 'K' → logprob: -1.9886822700500488
    4. 'kr' → logprob: -2.738682270050049
    5. 'def' → logprob: -2.863682270050049
    6. 'sorted' → logprob: -3.113682270050049
    7. 'import' → logprob: -4.238682270050049
    8. 'sys' → logprob: -4.238682270050049
    9. '```' → logprob: -4.613682270050049
    10. 'class' → logprob: -4.613682270050049

Token 590: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.00012976066500414163
    2. 'usk' → logprob: -9.125129699707031
    3. 'uss' → logprob: -11.875129699707031
    4. 'ush' → logprob: -11.875129699707031
    5. 'usz' → logprob: -12.625129699707031
    6. '```' → logprob: -14.000129699707031
    7. 'u' → logprob: -14.750129699707031
    8. 'ус' → logprob: -15.125129699707031
    9. 'ust' → logprob: -15.125129699707031
    10. '

' → logprob: -15.125129699707031

Token 591: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.02884821407496929
    2. 'skal' → logprob: -3.653848171234131
    3. 'sk' → logprob: -6.278848171234131
    4. 'cal' → logprob: -8.153848648071289
    5. 't' → logprob: -8.403848648071289
    6. 'al' → logprob: -9.653848648071289
    7. 'k' → logprob: -10.028848648071289
    8. 'tal' → logprob: -11.403848648071289
    9. 'st' → logprob: -11.653848648071289
    10. 'sky' → logprob: -11.778848648071289

Token 592: ''s' (ID: 885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8738901615142822
    2. '()' → logprob: -1.3738901615142822
    3. ''s' → logprob: -1.8738901615142822
    4. '       ' → logprob: -3.9988901615142822
    5. ',' → logprob: -4.248889923095703
    6. '()
' → logprob: -4.248889923095703
    7. ' (' → logprob: -4.373889923095703
    8. '(' → logprob: -4.373889923095703
    9. 'def' → logprob: -4.498889923095703
    10. ':
' → logprob: -4.498889923095703

Token 593: ' algorithm' (ID: 22184)
  Prédit: 'algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'algorithm' → logprob: -0.023274015635252
    2. ' algorithm' → logprob: -3.7732739448547363
    3. '_algorithm' → logprob: -10.648274421691895
    4. 'Algorithm' → logprob: -12.898274421691895
    5. '   ' → logprob: -13.648274421691895
    6. 'algo' → logprob: -14.648274421691895
    7. 'method' → logprob: -15.648274421691895
    8. '算法' → logprob: -16.023273468017578
    9. ' Algorithm' → logprob: -16.523273468017578
    10. '.algorithm' → logprob: -16.648273468017578

Token 594: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6515973210334778
    2. 'class' → logprob: -1.026597261428833
    3. '   ' → logprob: -2.651597261428833
    4. 'parent' → logprob: -3.276597261428833
    5. '       ' → logprob: -4.776597499847412
    6. '    
' → logprob: -6.151597499847412
    7. '        
' → logprob: -6.901597499847412
    8. 'parents' → logprob: -8.026597023010254
    9. 'import' → logprob: -9.651597023010254
    10. '  
' → logprob: -9.901597023010254

Token 595: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5645708441734314
    2. '   ' → logprob: -1.5645709037780762
    3. '
' → logprob: -2.314570903778076
    4. '       ' → logprob: -2.564570903778076
    5. 'parent' → logprob: -3.564570903778076
    6. '    
' → logprob: -4.564570903778076
    7. '        
' → logprob: -4.939570903778076
    8. ' class' → logprob: -8.314570426940918
    9. ' parent' → logprob: -9.064570426940918
    10. '  
' → logprob: -9.939570426940918

Token 596: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10531400889158249
    2. 'class' → logprob: -2.355314016342163
    3. '   ' → logprob: -5.355313777923584
    4. '       ' → logprob: -8.730314254760742
    5. 'parents' → logprob: -8.980314254760742
    6. ' parent' → logprob: -10.230314254760742
    7. '
' → logprob: -10.480314254760742
    8. '#' (adapté à ' #') → logprob: -12.230314254760742
    9. '    
' → logprob: -12.355314254760742
    10. '        
' → logprob: -12.480314254760742

Token 597: ' Union' (ID: 14746)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.07986670732498169
    2. 'class' → logprob: -2.579866647720337
    3. '   ' → logprob: -7.204866886138916
    4. 'parents' → logprob: -8.829866409301758
    5. '       ' → logprob: -10.329866409301758
    6. ' parent' → logprob: -10.954866409301758
    7. '
' → logprob: -11.204866409301758
    8. '#' → logprob: -11.329866409301758
    9. 'def' → logprob: -12.329866409301758
    10. 'par' → logprob: -12.829866409301758

Token 598: '-F' (ID: 8074)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00016563729150220752
    2. '-F' → logprob: -8.750165939331055
    3. 'find' → logprob: -12.500165939331055
    4. ' Find' → logprob: -12.875165939331055
    5. '_Find' → logprob: -15.000165939331055
    6. '_find' → logprob: -15.625165939331055
    7. '-find' → logprob: -15.750165939331055
    8. 'F' → logprob: -16.000165939331055
    9. ' find' → logprob: -17.000165939331055
    10. '_FIND' → logprob: -17.875165939331055

Token 599: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -4.596781946020201e-05
    2. 'def' → logprob: -10.875045776367188
    3. 'class' → logprob: -11.250045776367188
    4. '```' → logprob: -11.875045776367188
    5. 'find' → logprob: -12.000045776367188
    6. 'nd' → logprob: -15.500045776367188
    7. 'Find' → logprob: -15.625045776367188
    8. 'inder' → logprob: -15.750045776367188
    9. 'import' → logprob: -15.875045776367188
    10. 'ield' → logprob: -16.500045776367188

Token 600: ' data' (ID: 1238)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.021615516394376755
    2. ' class' → logprob: -3.896615505218506
    3. '
' → logprob: -7.521615505218506
    4. '(
' → logprob: -8.021615982055664
    5. '(' → logprob: -9.896615982055664
    6. '(class' → logprob: -9.896615982055664
    7. '-class' → logprob: -10.521615982055664
    8. '()' → logprob: -11.146615982055664
    9. '	class' → logprob: -11.646615982055664
    10. ':' → logprob: -11.771615982055664

Token 601: ' structure' (ID: 8866)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0031714143697172403
    2. ' class' → logprob: -6.378171443939209
    3. '
' → logprob: -6.628171443939209
    4. 'structure' → logprob: -9.62817096710205
    5. '   ' → logprob: -10.50317096710205
    6. '(
' → logprob: -11.87817096710205
    7. ' structure' → logprob: -12.00317096710205
    8. 'struct' → logprob: -12.25317096710205
    9. '	class' → logprob: -12.37817096710205
    10. '[class' → logprob: -12.62817096710205

Token 602: ' (' (ID: 350)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016839146614074707
    2. '
' → logprob: -4.141839027404785
    3. ' class' → logprob: -7.141839027404785
    4. ':' → logprob: -12.641839027404785
    5. ':
' → logprob: -12.766839027404785
    6. '

' → logprob: -12.891839027404785
    7. '	class' → logprob: -13.891839027404785
    8. '    
' → logprob: -14.391839027404785
    9. '(class' → logprob: -14.516839027404785
    10. ' 
' → logprob: -14.641839027404785

Token 603: 'Dis' (ID: 3538)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.117345684382599e-05
    2. ' class' → logprob: -11.250020980834961
    3. ')' → logprob: -11.875020980834961
    4. '
' → logprob: -13.875020980834961
    5. 'parent' → logprob: -17.12502098083496
    6. '   ' → logprob: -17.50002098083496
    7. '"class' → logprob: -18.00002098083496
    8. ')
' → logprob: -18.00002098083496
    9. '	class' → logprob: -18.00002098083496
    10. '    
' → logprob: -18.75002098083496

Token 604: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.00021069261129014194
    2. 'class' → logprob: -9.000210762023926
    3. 'join' → logprob: -10.125210762023926
    4. 't' → logprob: -10.875210762023926
    5. 'j' → logprob: -11.000210762023926
    6. 'Joint' → logprob: -12.250210762023926
    7. 'jo' → logprob: -13.000210762023926
    8. 'f' → logprob: -13.375210762023926
    9. 'jk' → logprob: -13.375210762023926
    10. '```' → logprob: -14.750210762023926

Token 605: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0004485461104195565
    2. 'set' → logprob: -7.875448703765869
    3. '-set' → logprob: -10.375448226928711
    4. 'Sets' → logprob: -11.250448226928711
    5. 'Union' → logprob: -12.000448226928711
    6. '-' → logprob: -12.125448226928711
    7. ' Set' → logprob: -12.250448226928711
    8. ' set' → logprob: -12.750448226928711
    9. '_set' → logprob: -13.125448226928711
    10. '
' → logprob: -14.250448226928711

Token 606: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.0013021418126299977
    2. ' Union' → logprob: -7.251302242279053
    3. ')' → logprob: -7.751302242279053
    4. '
' → logprob: -9.751301765441895
    5. 'union' → logprob: -9.876301765441895
    6. '   ' → logprob: -11.501301765441895
    7. '_union' → logprob: -11.501301765441895
    8. '(' → logprob: -11.751301765441895
    9. 'Un' → logprob: -12.376301765441895
    10. ' union' → logprob: -12.751301765441895

Token 607: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49248364567756653
    2. '):' → logprob: -0.9924836158752441
    3. '):
' → logprob: -4.242483615875244
    4. 'class' → logprob: -6.867483615875244
    5. '(' → logprob: -7.492483615875244
    6. ':' → logprob: -7.867483615875244
    7. '):

' → logprob: -7.992483615875244
    8. ' class' → logprob: -8.242484092712402
    9. '()' → logprob: -8.367484092712402
    10. ' (' → logprob: -8.992484092712402

Token 608: ' DS' (ID: 35363)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.08436111360788345
    2. 'class' → logprob: -3.0843610763549805
    3. 'union' → logprob: -3.5843610763549805
    4. ')' → logprob: -5.4593610763549805
    5. 'Find' → logprob: -6.3343610763549805
    6. ' Union' → logprob: -7.0843610763549805
    7. ' union' → logprob: -8.83436107635498
    8. 'find' → logprob: -9.20936107635498
    9. ' class' → logprob: -9.83436107635498
    10. 'Dis' → logprob: -9.95936107635498

Token 609: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.002383376471698284
    2. 'u' → logprob: -6.627383232116699
    3. 'et' → logprob: -7.002383232116699
    4. 'Union' → logprob: -9.3773832321167
    5. ')' → logprob: -11.0023832321167
    6. '=' → logprob: -11.5023832321167
    7. '   ' → logprob: -12.3773832321167
    8. '```' → logprob: -12.6273832321167
    9. ']' → logprob: -12.7523832321167
    10. '_union' → logprob: -12.8773832321167

Token 610: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6911805868148804
    2. '):' → logprob: -0.8161805868148804
    3. ')' → logprob: -3.44118070602417
    4. 'class' → logprob: -3.94118070602417
    5. '):

' → logprob: -5.69118070602417
    6. ':' → logprob: -6.94118070602417
    7. ':
' → logprob: -7.81618070602417
    8. ' class' → logprob: -7.94118070602417
    9. ')
' → logprob: -8.816180229187012
    10. '():
' → logprob: -9.316180229187012

Token 611: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0019420842872932553
    2. '
' → logprob: -6.251942157745361
    3. ' class' → logprob: -11.251941680908203
    4. '

' → logprob: -15.876941680908203
    5. '    
' → logprob: -16.001941680908203
    6. '```' → logprob: -16.251941680908203
    7. '   ' → logprob: -16.751941680908203
    8. '"class' → logprob: -17.751941680908203
    9. '	class' → logprob: -17.876941680908203
    10. '  
' → logprob: -18.001941680908203

Token 612: ' parent' (ID: 5980)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00022296691895462573
    2. '
' → logprob: -8.500223159790039
    3. ' class' → logprob: -11.000223159790039
    4. '   ' → logprob: -13.125223159790039
    5. '    
' → logprob: -14.750223159790039
    6. '```' → logprob: -15.875223159790039
    7. ' 
' → logprob: -16.25022315979004
    8. '  
' → logprob: -16.62522315979004
    9. 'parent' (adapté à ' parent') → logprob: -16.87522315979004
    10. '        
' → logprob: -17.50022315979004

Token 613: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869307041168213
    2. ' =' → logprob: -1.1369307041168213
    3. '=[]' → logprob: -10.261930465698242
    4. '=[' → logprob: -11.761930465698242
    5. ',' → logprob: -12.636930465698242
    6. ')' → logprob: -12.886930465698242
    7. '	' → logprob: -13.386930465698242
    8. '   ' → logprob: -13.386930465698242
    9. '[' → logprob: -13.386930465698242
    10. ' ' → logprob: -14.011930465698242

Token 614: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.697347104549408
    2. '[list' → logprob: -0.697347104549408
    3. '[' → logprob: -5.697347164154053
    4. '[-' → logprob: -7.197347164154053
    5. '[i' → logprob: -10.197346687316895
    6. ' list' → logprob: -10.447346687316895
    7. '[List' → logprob: -12.197346687316895
    8. '[parent' → logprob: -12.197346687316895
    9. '[node' → logprob: -12.822346687316895
    10. ' [' → logprob: -12.947346687316895

Token 615: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5776860184123507e-06
    2. ' i' → logprob: -13.25000286102295
    3. '-' → logprob: -14.75000286102295
    4. '-i' → logprob: -16.000001907348633
    5. '
' → logprob: -16.375001907348633
    6. '_i' → logprob: -16.375001907348633
    7. '	i' → logprob: -17.250001907348633
    8. '_' → logprob: -17.250001907348633
    9. '(i' → logprob: -17.875001907348633
    10. '[i' → logprob: -18.125001907348633

Token 616: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47426533699035645
    2. 'for' → logprob: -0.9742653369903564
    3. ']' → logprob: -8.724265098571777
    4. '   ' → logprob: -11.599265098571777
    5. '	for' → logprob: -12.099265098571777
    6. ')' → logprob: -12.724265098571777
    7. ' ' → logprob: -12.724265098571777
    8. ',' → logprob: -13.849265098571777
    9. '
' → logprob: -13.849265098571777
    10. ' ]' → logprob: -14.599265098571777

Token 617: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.44957974553108215
    2. ' range' → logprob: -1.4495797157287598
    3. 'i' → logprob: -2.4495797157287598
    4. ' i' → logprob: -3.1995797157287598
    5. 'in' → logprob: -8.449580192565918
    6. ' in' → logprob: -9.449580192565918
    7. ' ' → logprob: -11.824580192565918
    8. '(range' → logprob: -11.824580192565918
    9. '_range' → logprob: -12.074580192565918
    10. '(i' → logprob: -12.449580192565918

Token 618: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03814132884144783
    2. 'in' → logprob: -3.2881412506103516
    3. 'range' → logprob: -9.288141250610352
    4. ' i' → logprob: -13.038141250610352
    5. ' range' → logprob: -13.163141250610352
    6. ' ' → logprob: -13.288141250610352
    7. '(range' → logprob: -14.788141250610352
    8. 'for' → logprob: -15.038141250610352
    9. 'i' → logprob: -15.538141250610352
    10. ',' → logprob: -15.913141250610352

Token 619: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -19.625123977661133
    4. ' ' → logprob: -22.250123977661133
    5. '	range' → logprob: -22.625123977661133
    6. '   ' → logprob: -23.375123977661133
    7. '0' → logprob: -24.125123977661133
    8. '  ' → logprob: -24.250123977661133
    9. '_range' → logprob: -24.625123977661133
    10. 'Range' → logprob: -25.125123977661133

Token 620: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002166491176467389
    2. '(' → logprob: -9.250216484069824
    3. 'N' → logprob: -9.500216484069824
    4. ' (' → logprob: -10.125216484069824
    5. ' N' → logprob: -12.375216484069824
    6. '   ' → logprob: -14.250216484069824
    7. '(n' → logprob: -15.250216484069824
    8. '(len' → logprob: -15.500216484069824
    9. '0' → logprob: -16.37521743774414
    10. '	N' → logprob: -16.50021743774414

Token 621: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859020933508873
    2. ' +' → logprob: -3.0485901832580566
    3. '
' → logprob: -13.673590660095215
    4. '+
' → logprob: -13.923590660095215
    5. '   ' → logprob: -15.798590660095215
    6. '＋' → logprob: -15.923590660095215
    7. '1' → logprob: -16.2985897064209
    8. '(' → logprob: -16.4235897064209
    9. '[' → logprob: -16.4235897064209
    10. ')' → logprob: -16.6735897064209

Token 622: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011188744247192517
    2. ' ' → logprob: -9.25011157989502
    3. '   ' → logprob: -11.37511157989502
    4. '2' → logprob: -13.12511157989502
    5. '(' → logprob: -14.00011157989502
    6. '(N' → logprob: -14.62511157989502
    7. '
' → logprob: -15.50011157989502
    8. '       ' → logprob: -16.125112533569336
    9. '  ' → logprob: -16.500112533569336
    10. '0' → logprob: -16.500112533569336

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '2' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.125005722045898
    5. '
' → logprob: -15.500005722045898
    6. '(' → logprob: -15.750005722045898
    7. '(N' → logprob: -16.2500057220459
    8. 'N' → logprob: -17.0000057220459
    9. '```' → logprob: -17.6250057220459
    10. '{' → logprob: -17.6250057220459

Token 624: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00033879990223795176
    2. ')]
' → logprob: -8.250338554382324
    3. ']' → logprob: -10.000338554382324
    4. ')' → logprob: -10.500338554382324
    5. ')]
' → logprob: -13.000338554382324
    6. ')]

' → logprob: -13.375338554382324
    7. ' ]' → logprob: -16.12533950805664
    8. ')],' → logprob: -16.12533950805664
    9. ' )' → logprob: -16.50033950805664
    10. '   ' → logprob: -16.62533950805664

Token 625: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010336418636143208
    2. '
' → logprob: -7.501033782958984
    3. 'rank' → logprob: -7.876033782958984
    4. '    
' → logprob: -10.126033782958984
    5. ' def' → logprob: -10.876033782958984
    6. '        
' → logprob: -11.126033782958984
    7. '```' → logprob: -11.876033782958984
    8. '	def' → logprob: -12.126033782958984
    9. ' 
' → logprob: -12.376033782958984
    10. '   ' → logprob: -12.751033782958984

Token 626: ' rank' (ID: 10302)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049010615795850754
    2. 'rank' (adapté à ' rank') → logprob: -3.0490105152130127
    3. '
' → logprob: -8.299010276794434
    4. 'size' → logprob: -9.174010276794434
    5. '        
' → logprob: -10.299010276794434
    6. '    
' → logprob: -10.549010276794434
    7. ' def' → logprob: -12.549010276794434
    8. '            
' → logprob: -13.299010276794434
    9. ' 
' → logprob: -13.799010276794434
    10. ' rank' → logprob: -14.174010276794434

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026416752487421036
    2. '=' → logprob: -3.651416778564453
    3. ' ' → logprob: -10.026416778564453
    4. '[' → logprob: -10.026416778564453
    5. '   ' → logprob: -11.151416778564453
    6. 's' → logprob: -12.401416778564453
    7. '	' → logprob: -13.151416778564453
    8. '=[' → logprob: -13.776416778564453
    9. '  ' → logprob: -13.776416778564453
    10. '    ' → logprob: -14.026416778564453

Token 628: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015683072851970792
    2. ' [' → logprob: -6.50156831741333
    3. '[N' → logprob: -9.876567840576172
    4. '[i' → logprob: -11.376567840576172
    5. '0' → logprob: -12.876567840576172
    6. '   ' → logprob: -15.001567840576172
    7. '[len' → logprob: -16.251567840576172
    8. '[n' → logprob: -16.376567840576172
    9. '[I' → logprob: -18.001567840576172
    10. '[size' → logprob: -18.126567840576172

Token 629: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '   ' → logprob: -22.875
    4. '۰' → logprob: -22.875
    5. '０' → logprob: -23.375
    6. '```' → logprob: -24.0
    7. '1' → logprob: -24.125
    8. '
' → logprob: -25.5
    9. 'False' → logprob: -25.75
    10. '    
' → logprob: -25.875

Token 630: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006314820144325495
    2. ' for' → logprob: -5.256314754486084
    3. 'for' → logprob: -7.131314754486084
    4. ']*' → logprob: -8.881315231323242
    5. ' ]' → logprob: -9.881315231323242
    6. '   ' → logprob: -10.006315231323242
    7. ']*(' → logprob: -10.256315231323242
    8. ' ' → logprob: -12.381315231323242
    9. '  ' → logprob: -13.381315231323242
    10. '	for' → logprob: -13.506315231323242

Token 631: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46899810433387756
    2. ' for' → logprob: -1.4689980745315552
    3. 'for' → logprob: -1.9689980745315552
    4. '*' → logprob: -6.468997955322266
    5. ']*' → logprob: -6.468997955322266
    6. '   ' → logprob: -7.843997955322266
    7. ' *' → logprob: -8.218997955322266
    8. ')' → logprob: -8.718997955322266
    9. ']*(' → logprob: -8.843997955322266
    10. '[i' → logprob: -8.968997955322266

Token 632: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.301394023466855e-05
    2. ' (' → logprob: -9.750062942504883
    3. '(' → logprob: -12.500062942504883
    4. '(n' → logprob: -14.375062942504883
    5. '((' → logprob: -15.500062942504883
    6. '   ' → logprob: -16.000062942504883
    7. '(len' → logprob: -18.250062942504883
    8. '(NUM' → logprob: -18.500062942504883
    9. '(int' → logprob: -19.500062942504883
    10. '(Note' → logprob: -19.625062942504883

Token 633: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06224394589662552
    2. 'N' → logprob: -2.812243938446045
    3. ' (' → logprob: -8.437244415283203
    4. '(' → logprob: -10.187244415283203
    5. '   ' → logprob: -11.562244415283203
    6. ' N' → logprob: -11.687244415283203
    7. '	N' → logprob: -14.062244415283203
    8. '[N' → logprob: -14.437244415283203
    9. ' ' → logprob: -14.562244415283203
    10. '{' → logprob: -15.437244415283203

Token 634: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009130131802521646
    2. ' +' → logprob: -7.000913143157959
    3. '+
' → logprob: -13.6259126663208
    4. '
' → logprob: -15.1259126663208
    5. '1' → logprob: -17.500913619995117
    6. '[' → logprob: -18.000913619995117
    7. '＋' → logprob: -18.125913619995117
    8. '   ' → logprob: -18.375913619995117
    9. '```' → logprob: -18.625913619995117
    10. ')' → logprob: -19.125913619995117

Token 635: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '(N' → logprob: -11.750009536743164
    3. '(' → logprob: -13.750009536743164
    4. ' ' → logprob: -14.250009536743164
    5. 'N' → logprob: -16.750009536743164
    6. '2' → logprob: -17.375009536743164
    7. '(M' → logprob: -17.375009536743164
    8. '
' → logprob: -17.375009536743164
    9. '   ' → logprob: -17.500009536743164
    10. '```' → logprob: -18.000009536743164

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001560450647957623
    2. '(N' → logprob: -6.501560688018799
    3. '(' → logprob: -9.87656021118164
    4. '(M' → logprob: -13.00156021118164
    5. ' (' → logprob: -13.75156021118164
    6. 'N' → logprob: -13.87656021118164
    7. ' ' → logprob: -14.50156021118164
    8. '(n' → logprob: -15.00156021118164
    9. '   ' → logprob: -15.25156021118164
    10. '
' → logprob: -15.25156021118164

Token 637: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.433829159708694e-05
    2. ')
' → logprob: -10.25007438659668
    3. ')

' → logprob: -10.75007438659668
    4. '   ' → logprob: -11.50007438659668
    5. 'def' → logprob: -13.00007438659668
    6. '
' → logprob: -13.00007438659668
    7. ' )' → logprob: -14.00007438659668
    8. ']' → logprob: -14.12507438659668
    9. '       ' → logprob: -14.50007438659668
    10. '])' → logprob: -16.25007438659668

Token 638: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035072024911642075
    2. '
' → logprob: -8.000350952148438
    3. ' def' → logprob: -11.875350952148438
    4. '

' → logprob: -12.750350952148438
    5. '        
' → logprob: -13.125350952148438
    6. '    
' → logprob: -13.875350952148438
    7. '```' → logprob: -13.875350952148438
    8. ' 
' → logprob: -14.750350952148438
    9. '  
' → logprob: -15.375350952148438
    10. '
' → logprob: -15.500350952148438

Token 639: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3902033970225602e-05
    2. '
' → logprob: -11.250014305114746
    3. '        
' → logprob: -14.500014305114746
    4. ' def' → logprob: -14.875014305114746
    5. '       ' → logprob: -18.12501335144043
    6. '    
' → logprob: -18.12501335144043
    7. '            
' → logprob: -18.50001335144043
    8. '```' → logprob: -19.25001335144043
    9. '

' → logprob: -19.50001335144043
    10. ' 
' → logprob: -20.00001335144043

Token 640: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.038042180240154266
    2. ' find' → logprob: -3.2880420684814453
    3. '	find' → logprob: -14.413042068481445
    4. '_find' → logprob: -15.788042068481445
    5. 'def' → logprob: -17.038042068481445
    6. '=find' → logprob: -17.663042068481445
    7. 'Find' → logprob: -18.413042068481445
    8. ' ' → logprob: -18.913042068481445
    9. '(find' → logprob: -18.913042068481445
    10. '
' → logprob: -19.163042068481445

Token 641: '(x' (ID: 4061)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.025407664477825165
    2. '(x' → logprob: -4.025407791137695
    3. '(i' → logprob: -5.650407791137695
    4. '(' → logprob: -6.275407791137695
    5. '(parent' → logprob: -6.525407791137695
    6. '(a' → logprob: -8.900407791137695
    7. '_parent' → logprob: -9.025407791137695
    8. 'parent' → logprob: -10.025407791137695
    9. ' (' → logprob: -10.150407791137695
    10. '(p' → logprob: -11.150407791137695

Token 642: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018163053318858147
    2. '):
' → logprob: -4.018163204193115
    3. '):
' → logprob: -12.143162727355957
    4. ')' → logprob: -12.518162727355957
    5. '(x' → logprob: -13.393162727355957
    6. ' ):' → logprob: -14.018162727355957
    7. '):

' → logprob: -14.268162727355957
    8. '   ' → logprob: -14.518162727355957
    9. ':' → logprob: -15.143162727355957
    10. '():' → logprob: -15.768162727355957

Token 643: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4837666153907776
    2. '       ' → logprob: -1.2337665557861328
    3. '           ' → logprob: -2.858766555786133
    4. 'parent' → logprob: -4.983766555786133
    5. ' x' → logprob: -5.108766555786133
    6. ' parent' → logprob: -5.483766555786133
    7. '(parent' → logprob: -5.483766555786133
    8. '(x' → logprob: -6.608766555786133
    9. '
' → logprob: -6.733766555786133
    10. ' return' → logprob: -7.108766555786133

Token 644: ' while' (ID: 2049)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2349405139684677
    2. 'if' → logprob: -1.984940528869629
    3. ' parent' → logprob: -3.234940528869629
    4. 'return' → logprob: -4.609940528869629
    5. ' if' → logprob: -4.859940528869629
    6. 'x' → logprob: -4.984940528869629
    7. 'while' (adapté à ' while') → logprob: -6.484940528869629
    8. ' x' → logprob: -6.484940528869629
    9. '   ' → logprob: -6.609940528869629
    10. '	parent' → logprob: -7.234940528869629

Token 645: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001171056181192398
    2. ' parent' → logprob: -6.751171112060547
    3. 'x' → logprob: -14.001171112060547
    4. '	parent' → logprob: -19.501171112060547
    5. '(parent' → logprob: -20.376171112060547
    6. ' x' → logprob: -20.501171112060547
    7. '_parent' → logprob: -23.501171112060547
    8. 'Parent' → logprob: -24.126171112060547
    9. 'parents' → logprob: -24.126171112060547
    10. 'par' → logprob: -24.751171112060547

Token 646: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.286852345103398e-05
    2. 'x' → logprob: -10.125042915344238
    3. '[parent' → logprob: -13.250042915344238
    4. '[' → logprob: -14.500042915344238
    5. '[
' → logprob: -15.625042915344238
    6. '[u' → logprob: -15.625042915344238
    7. '```' → logprob: -17.125041961669922
    8. '
' → logprob: -17.875041961669922
    9. '   ' → logprob: -17.875041961669922
    10. '[p' → logprob: -18.000041961669922

Token 647: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6649117469787598
    2. '[x' → logprob: -0.9149117469787598
    3. '!=' → logprob: -2.9149117469787598
    4. ']!=' → logprob: -3.5399117469787598
    5. ' !=' → logprob: -6.91491174697876
    6. '[' → logprob: -7.78991174697876
    7. 'x' → logprob: -7.91491174697876
    8. '[
' → logprob: -10.164911270141602
    9. '[u' → logprob: -10.914911270141602
    10. ' ]' → logprob: -11.164911270141602

Token 648: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.000835716025903821
    2. ' !=' → logprob: -7.12583589553833
    3. '[x' → logprob: -11.250835418701172
    4. ']!=' → logprob: -11.375835418701172
    5. ')!=' → logprob: -13.000835418701172
    6. '!==' → logprob: -13.625835418701172
    7. 'x' → logprob: -13.750835418701172
    8. '()!=' → logprob: -14.250835418701172
    9. '!='' → logprob: -14.875835418701172
    10. '```' → logprob: -15.000835418701172

Token 649: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -18.250335693359375
    4. 'parent' → logprob: -19.875335693359375
    5. '   ' → logprob: -22.875335693359375
    6. ')x' → logprob: -23.375335693359375
    7. '
' → logprob: -23.375335693359375
    8. ' parent' → logprob: -24.000335693359375
    9. '{x' → logprob: -24.250335693359375
    10. ' ' → logprob: -24.750335693359375

Token 650: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05500899255275726
    2. ':' → logprob: -2.930008888244629
    3. '           ' → logprob: -10.430008888244629
    4. '):
' → logprob: -10.430008888244629
    5. '               ' → logprob: -10.555008888244629
    6. ',' → logprob: -11.805008888244629
    7. 'and' → logprob: -12.305008888244629
    8. '{
' → logprob: -12.305008888244629
    9. '   ' → logprob: -12.555008888244629
    10. ' and' → logprob: -12.680008888244629

Token 651: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003349178470671177
    2. ':
' → logprob: -6.253349304199219
    3. '           ' → logprob: -7.503349304199219
    4. ':' → logprob: -8.253349304199219
    5. '                   ' → logprob: -8.503349304199219
    6. '{
' → logprob: -9.503349304199219
    7. '   ' → logprob: -9.628349304199219
    8. '       ' → logprob: -9.753349304199219
    9. 'x' → logprob: -10.128349304199219
    10. 'parent' → logprob: -10.378349304199219

Token 652: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.004523161798715591
    2. 'x' → logprob: -5.504523277282715
    3. ' parent' → logprob: -7.754523277282715
    4. '           ' → logprob: -12.004523277282715
    5. '	parent' → logprob: -12.004523277282715
    6. '               ' → logprob: -13.129523277282715
    7. '   ' → logprob: -14.129523277282715
    8. ' x' → logprob: -14.629523277282715
    9. '.parent' → logprob: -15.379523277282715
    10. '_parent' → logprob: -16.3795223236084

Token 653: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005538671393878758
    2. 'x' → logprob: -7.500554084777832
    3. '[' → logprob: -14.625554084777832
    4. '[parent' → logprob: -15.625554084777832
    5. '[
' → logprob: -16.250553131103516
    6. '=' → logprob: -16.500553131103516
    7. '
' → logprob: -18.250553131103516
    8. '```' → logprob: -18.375553131103516
    9. ',x' → logprob: -18.625553131103516
    10. '[u' → logprob: -18.875553131103516

Token 654: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012565218843519688
    2. ']' → logprob: -4.7625651359558105
    3. ' =' → logprob: -5.7625651359558105
    4. ']=' → logprob: -7.1375651359558105
    5. '[' → logprob: -12.762565612792969
    6. '[x' → logprob: -13.637565612792969
    7. 'x' → logprob: -14.262565612792969
    8. '=
' → logprob: -16.38756561279297
    9. '[
' → logprob: -16.51256561279297
    10. ')' → logprob: -17.01256561279297

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. '＝' → logprob: -20.50007438659668
    4. ']=' → logprob: -20.62507438659668
    5. 'parent' → logprob: -21.00007438659668
    6. '.=' → logprob: -21.00007438659668
    7. '=
' → logprob: -21.25007438659668
    8. '=x' → logprob: -22.00007438659668
    9. ')=' → logprob: -22.50007438659668
    10. '[' → logprob: -23.00007438659668

Token 656: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0005530327325686812
    2. ' parent' → logprob: -7.500553131103516
    3. '	parent' → logprob: -18.750553131103516
    4. '[parent' → logprob: -20.125553131103516
    5. '(parent' → logprob: -20.250553131103516
    6. '   ' → logprob: -21.125553131103516
    7. '.parent' → logprob: -21.750553131103516
    8. '           ' → logprob: -22.375553131103516
    9. ',parent' → logprob: -22.500553131103516
    10. 'paren' → logprob: -22.625553131103516

Token 657: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.2113979209971149e-05
    2. 'parent' → logprob: -12.125012397766113
    3. '[x' → logprob: -12.375012397766113
    4. '[' → logprob: -13.000012397766113
    5. '[
' → logprob: -16.125011444091797
    6. '(parent' → logprob: -18.125011444091797
    7. '	parent' → logprob: -18.625011444091797
    8. '[p' → logprob: -19.000011444091797
    9. ',parent' → logprob: -19.000011444091797
    10. '
' → logprob: -19.125011444091797

Token 658: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.20153555274009705
    2. 'x' → logprob: -1.7015355825424194
    3. '[parent' → logprob: -9.07653522491455
    4. '{x' → logprob: -13.20153522491455
    5. ' x' → logprob: -13.32653522491455
    6. 'parent' → logprob: -13.70153522491455
    7. '	x' → logprob: -14.20153522491455
    8. '```' → logprob: -14.45153522491455
    9. ']' → logprob: -14.57653522491455
    10. '(x' → logprob: -14.95153522491455

Token 659: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002004410926019773
    2. '[x' → logprob: -9.375200271606445
    3. ']]' → logprob: -9.875200271606445
    4. 'x' → logprob: -9.875200271606445
    5. ']
' → logprob: -11.375200271606445
    6. ' ]' → logprob: -13.875200271606445
    7. ']]
' → logprob: -17.000200271606445
    8. '])' → logprob: -17.000200271606445
    9. '(x' → logprob: -17.250200271606445
    10. ']]]' → logprob: -17.375200271606445

Token 660: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0650341585278511
    2. '           ' → logprob: -3.0650341510772705
    3. 'x' → logprob: -4.56503438949585
    4. ' x' → logprob: -5.19003438949585
    5. '                   ' → logprob: -8.940033912658691
    6. '
' → logprob: -9.315033912658691
    7. '   ' → logprob: -9.940033912658691
    8. '       ' → logprob: -10.440033912658691
    9. ',' → logprob: -11.565033912658691
    10. '	           ' → logprob: -12.815033912658691

Token 661: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '               ' → logprob: -17.875261306762695
    4. '           ' → logprob: -18.000261306762695
    5. '	x' → logprob: -19.125261306762695
    6. '                   ' → logprob: -20.875261306762695
    7. ')x' → logprob: -21.750261306762695
    8. '   ' → logprob: -21.875261306762695
    9. '```' → logprob: -22.500261306762695
    10. 'return' → logprob: -22.750261306762695

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ' ' → logprob: -19.01104736328125
    4. '=
' → logprob: -19.76104736328125
    5. '＝' → logprob: -20.38604736328125
    6. '+=' → logprob: -20.76104736328125
    7. '   ' → logprob: -20.88604736328125
    8. '	' → logprob: -20.88604736328125
    9. '.=' → logprob: -21.01104736328125
    10. ',' → logprob: -21.13604736328125

Token 663: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -4.5491004129871726e-05
    2. ' parent' → logprob: -10.000045776367188
    3. '	parent' → logprob: -20.750045776367188
    4. '(parent' → logprob: -20.875045776367188
    5. '[parent' → logprob: -22.125045776367188
    6. '   ' → logprob: -22.875045776367188
    7. '.parent' → logprob: -23.250045776367188
    8. '           ' → logprob: -23.500045776367188
    9. '_parent' → logprob: -24.000045776367188
    10. ',parent' → logprob: -24.500045776367188

Token 664: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001287140417844057
    2. '[parent' → logprob: -7.12628698348999
    3. '[' → logprob: -7.87628698348999
    4. '[
' → logprob: -9.626287460327148
    5. 'x' → logprob: -10.626287460327148
    6. 'parent' → logprob: -11.876287460327148
    7. '```' → logprob: -12.501287460327148
    8. ']' → logprob: -14.251287460327148
    9. '(x' → logprob: -14.751287460327148
    10. '{x' → logprob: -15.376287460327148

Token 665: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023393364972434938
    2. ']
' → logprob: -8.75023365020752
    3. ' ]' → logprob: -10.75023365020752
    4. '           ' → logprob: -10.75023365020752
    5. 'parent' → logprob: -11.87523365020752
    6. '[parent' → logprob: -12.37523365020752
    7. ']+' → logprob: -12.50023365020752
    8. '               ' → logprob: -12.75023365020752
    9. '       ' → logprob: -12.87523365020752
    10. ')' → logprob: -13.12523365020752

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014784404775127769
    2. 'return' → logprob: -6.751478672027588
    3. '       ' → logprob: -9.25147819519043
    4. '               ' → logprob: -9.25147819519043
    5. ' return' → logprob: -9.62647819519043
    6. '   ' → logprob: -10.62647819519043
    7. '            
' → logprob: -11.87647819519043
    8. ',' → logprob: -12.25147819519043
    9. '
' → logprob: -13.12647819519043
    10. '		' → logprob: -13.37647819519043

Token 667: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21686294674873352
    2. 'return' (adapté à ' return') → logprob: -1.7168629169464111
    3. '       ' → logprob: -4.84186315536499
    4. '   ' → logprob: -5.59186315536499
    5. ' return' → logprob: -5.84186315536499
    6. '	return' → logprob: -7.34186315536499
    7. '		' → logprob: -9.466862678527832
    8. '               ' → logprob: -11.091862678527832
    9. '
' → logprob: -11.216862678527832
    10. '	' → logprob: -11.466862678527832

Token 668: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01817300356924534
    2. ' x' → logprob: -4.0181732177734375
    3. 'parent' → logprob: -10.768173217773438
    4. ' parent' → logprob: -13.143173217773438
    5. '	x' → logprob: -19.143173217773438
    6. '(x' → logprob: -19.268173217773438
    7. '(parent' → logprob: -21.893173217773438
    8. ' ' → logprob: -22.143173217773438
    9. ' ' → logprob: -22.393173217773438
    10. '_x' → logprob: -22.518173217773438

Token 669: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11866381019353867
    2. '<|end|>' → logprob: -2.993663787841797
    3. '       ' → logprob: -4.118663787841797
    4. '    
' → logprob: -4.618663787841797
    5. ' 
' → logprob: -4.993663787841797
    6. '  
' → logprob: -4.993663787841797
    7. '```' → logprob: -5.118663787841797
    8. '        
' → logprob: -5.368663787841797
    9. 'def' → logprob: -5.993663787841797
    10. '   ' → logprob: -6.243663787841797

Token 670: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7072941064834595
    2. 'def' → logprob: -1.5822941064834595
    3. '       ' → logprob: -1.9572941064834595
    4. '```' → logprob: -2.08229398727417
    5. '        
' → logprob: -4.45729398727417
    6. '    
' → logprob: -4.95729398727417
    7. '<|end|>' → logprob: -5.33229398727417
    8. '  
' → logprob: -5.58229398727417
    9. ' 
' → logprob: -5.58229398727417
    10. '   ' → logprob: -5.83229398727417

Token 671: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007734165410511196
    2. '
' → logprob: -7.2507734298706055
    3. '       ' → logprob: -10.125773429870605
    4. '        
' → logprob: -10.875773429870605
    5. ' def' → logprob: -13.375773429870605
    6. '```' → logprob: -13.750773429870605
    7. '    
' → logprob: -14.125773429870605
    8. '            
' → logprob: -14.625773429870605
    9. '	def' → logprob: -14.750773429870605
    10. '   ' → logprob: -15.500773429870605

Token 672: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.00020389800192788243
    2. ' union' → logprob: -8.500204086303711
    3. '_union' → logprob: -15.000204086303711
    4. 'merge' → logprob: -17.62520408630371
    5. 'un' → logprob: -18.00020408630371
    6. '	union' → logprob: -19.25020408630371
    7. '.union' → logprob: -19.87520408630371
    8. 'Union' → logprob: -20.37520408630371
    9. ' unite' → logprob: -21.00020408630371
    10. ' Union' → logprob: -21.87520408630371

Token 673: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2539465129375458
    2. '(x' → logprob: -1.5039465427398682
    3. ' (' → logprob: -6.503946304321289
    4. '(u' → logprob: -8.003946304321289
    5. '(parent' → logprob: -9.128946304321289
    6. '(a' → logprob: -9.628946304321289
    7. '(
' → logprob: -12.878946304321289
    8. '(i' → logprob: -13.128946304321289
    9. '<|end|>' → logprob: -14.378946304321289
    10. '(user' → logprob: -14.628946304321289

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003051917883567512
    2. ' ,' → logprob: -8.50030517578125
    3. ',b' → logprob: -9.25030517578125
    4. ',a' → logprob: -12.50030517578125
    5. ',x' → logprob: -13.62530517578125
    6. '_,' → logprob: -15.50030517578125
    7. '<|end|>' → logprob: -16.00030517578125
    8. ',
' → logprob: -16.37530517578125
    9. 'b' → logprob: -16.62530517578125
    10. 'a' → logprob: -16.87530517578125

Token 675: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. '	b' → logprob: -19.000123977661133
    4. ')b' → logprob: -20.625123977661133
    5. '   ' → logprob: -21.500123977661133
    6. '       ' → logprob: -22.500123977661133
    7. '>b' → logprob: -23.250123977661133
    8. ',b' → logprob: -23.375123977661133
    9. '    ' → logprob: -23.500123977661133
    10. ' б' → logprob: -24.000123977661133

Token 676: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10037898272275925
    2. '):
' → logprob: -2.35037899017334
    3. ')' → logprob: -8.97537899017334
    4. '):
' → logprob: -10.72537899017334
    5. '   ' → logprob: -11.60037899017334
    6. ',' → logprob: -12.10037899017334
    7. ':' → logprob: -12.35037899017334
    8. '       ' → logprob: -12.72537899017334
    9. '):

' → logprob: -13.60037899017334
    10. ' ):' → logprob: -16.225378036499023

Token 677: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7416001558303833
    2. '(' → logprob: -1.7416001558303833
    3. '(a' → logprob: -1.7416001558303833
    4. ' (' → logprob: -2.4916000366210938
    5. '   ' → logprob: -3.2416000366210938
    6. '           ' → logprob: -3.9916000366210938
    7. ')' → logprob: -5.241600036621094
    8. '(
' → logprob: -5.616600036621094
    9. '(parent' → logprob: -5.616600036621094
    10. ',' → logprob: -5.991600036621094

Token 678: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6181547045707703
    2. 'pa' → logprob: -1.368154764175415
    3. ' if' → logprob: -2.118154764175415
    4. 'root' → logprob: -3.243154764175415
    5. 'a' (adapté à ' a') → logprob: -3.743154764175415
    6. ' root' → logprob: -4.743154525756836
    7. '   ' → logprob: -5.368154525756836
    8. '           ' → logprob: -5.493154525756836
    9. 'parent' → logprob: -5.993154525756836
    10. ' pa' → logprob: -6.868154525756836

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37979787588119507
    2. ' =' → logprob: -1.5047979354858398
    3. ',' → logprob: -2.62979793548584
    4. ' ,' → logprob: -3.87979793548584
    5. ')' → logprob: -8.12979793548584
    6. '_parent' → logprob: -8.25479793548584
    7. ',parent' → logprob: -8.75479793548584
    8. ' ' → logprob: -9.50479793548584
    9. '_root' → logprob: -9.87979793548584
    10. ',
' → logprob: -10.00479793548584

Token 680: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0007099286303855479
    2. ' find' → logprob: -7.2507100105285645
    3. '=find' → logprob: -19.125709533691406
    4. '	find' → logprob: -19.375709533691406
    5. '(find' → logprob: -21.375709533691406
    6. '.find' → logprob: -23.750709533691406
    7. ')find' → logprob: -23.875709533691406
    8. '_find' → logprob: -24.500709533691406
    9. '
' → logprob: -24.625709533691406
    10. 'a' → logprob: -25.250709533691406

Token 681: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0445127372804563e-05
    2. 'a' → logprob: -12.12501049041748
    3. '(b' → logprob: -12.25001049041748
    4. 'parent' → logprob: -16.500009536743164
    5. '(parent' → logprob: -16.625009536743164
    6. '(' → logprob: -17.250009536743164
    7. 'b' → logprob: -18.875009536743164
    8. '(
' → logprob: -19.750009536743164
    9. '(u' → logprob: -19.875009536743164
    10. ')' → logprob: -20.125009536743164

Token 682: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10188078880310059
    2. ')
' → logprob: -2.3518807888031006
    3. 'a' → logprob: -7.22688102722168
    4. ')b' → logprob: -7.60188102722168
    5. ')a' → logprob: -8.10188102722168
    6. 'b' → logprob: -9.85188102722168
    7. '),' → logprob: -10.47688102722168
    8. '(a' → logprob: -10.72688102722168
    9. '           ' → logprob: -11.47688102722168
    10. ',' → logprob: -11.60188102722168

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062202394008636475
    2. 'a' → logprob: -3.1872024536132812
    3. ' if' → logprob: -5.687202453613281
    4. 'b' → logprob: -5.812202453613281
    5. '       ' → logprob: -5.812202453613281
    6. ')' → logprob: -6.312202453613281
    7. ',' → logprob: -6.312202453613281
    8. '(a' → logprob: -6.812202453613281
    9. ' a' → logprob: -6.937202453613281
    10. '
' → logprob: -7.187202453613281

Token 684: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -7.941850526549388e-06
    2. ' b' → logprob: -11.750007629394531
    3. 'a' → logprob: -16.75000762939453
    4. '(b' → logprob: -18.25000762939453
    5. ')b' → logprob: -18.75000762939453
    6. '	b' → logprob: -19.50000762939453
    7. ',b' → logprob: -19.62500762939453
    8. '[b' → logprob: -20.87500762939453
    9. '           ' → logprob: -21.00000762939453
    10. '>b' → logprob: -21.50000762939453

Token 685: ' =' (ID: 314)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.004475816152989864
    2. '=' → logprob: -6.3794755935668945
    3. 'b' → logprob: -7.3794755935668945
    4. ')' → logprob: -7.3794755935668945
    5. '(a' → logprob: -7.7544755935668945
    6. '=b' → logprob: -7.7544755935668945
    7. '           ' → logprob: -7.8794755935668945
    8. ' =' → logprob: -9.004475593566895
    9. ' (' → logprob: -10.379475593566895
    10. 'a' → logprob: -10.879475593566895

Token 686: ' find' (ID: 1646)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029974710196256638
    2. 'find' → logprob: -3.5299746990203857
    3. ' find' → logprob: -8.529974937438965
    4. ' b' → logprob: -10.529974937438965
    5. '=find' → logprob: -18.65497398376465
    6. '(find' → logprob: -18.90497398376465
    7. '           ' → logprob: -19.27997398376465
    8. '	find' → logprob: -20.02997398376465
    9. ')b' → logprob: -20.90497398376465
    10. '	b' → logprob: -20.90497398376465

Token 687: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0788925439119339
    2. 'b' → logprob: -2.578892469406128
    3. '(a' → logprob: -13.328892707824707
    4. ' b' → logprob: -14.078892707824707
    5. 'a' → logprob: -15.203892707824707
    6. '(' → logprob: -15.828892707824707
    7. '	b' → logprob: -17.20389175415039
    8. '[b' → logprob: -17.20389175415039
    9. '(
' → logprob: -18.45389175415039
    10. ' (' → logprob: -18.82889175415039

Token 688: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018233880400657654
    2. ')
' → logprob: -4.018233776092529
    3. '           ' → logprob: -9.768234252929688
    4. ' )' → logprob: -12.143234252929688
    5. '       ' → logprob: -12.393234252929688
    6. ')a' → logprob: -12.518234252929688
    7. '<|end|>' → logprob: -12.768234252929688
    8. 'if' → logprob: -13.143234252929688
    9. 'a' → logprob: -13.143234252929688
    10. 'def' → logprob: -14.268234252929688

Token 689: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06185317039489746
    2. '       ' → logprob: -2.9368531703948975
    3. '
' → logprob: -6.061853408813477
    4. ' if' → logprob: -6.186853408813477
    5. ' 
' → logprob: -7.436853408813477
    6. '   ' → logprob: -7.686853408813477
    7. '               ' → logprob: -8.436853408813477
    8. '            
' → logprob: -8.686853408813477
    9. '<|end|>' → logprob: -8.811853408813477
    10. '        
' → logprob: -9.061853408813477

Token 690: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004809585225302726
    2. ' if' → logprob: -7.750481128692627
    3. '           ' → logprob: -10.000480651855469
    4. '       ' → logprob: -13.125480651855469
    5. '   ' → logprob: -13.875480651855469
    6. '
' → logprob: -13.875480651855469
    7. '	if' → logprob: -14.000480651855469
    8. 'return' → logprob: -16.87548065185547
    9. '            
' → logprob: -17.50048065185547
    10. 'If' → logprob: -17.62548065185547

Token 691: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889000326395035
    2. ' a' → logprob: -2.578890085220337
    3. '	a' → logprob: -15.453889846801758
    4. '   ' → logprob: -16.953889846801758
    5. '(a' → logprob: -17.703889846801758
    6. ' ' → logprob: -17.953889846801758
    7. '           ' → logprob: -18.203889846801758
    8. '_a' → logprob: -19.453889846801758
    9. ')a' → logprob: -19.453889846801758
    10. '  ' → logprob: -19.828889846801758

Token 692: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03535466268658638
    2. ' !=' → logprob: -3.4103546142578125
    3. '==' → logprob: -6.4103546142578125
    4. ' ==' → logprob: -10.160354614257812
    5. '=' → logprob: -11.285354614257812
    6. ')!=' → logprob: -12.535354614257812
    7. ']!=' → logprob: -12.785354614257812
    8. '!==' → logprob: -13.410354614257812
    9. '()!=' → logprob: -13.910354614257812
    10. '!' → logprob: -14.035354614257812

Token 693: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.4121114822482923e-06
    2. ' b' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '	b' → logprob: -20.125003814697266
    5. '```' → logprob: -21.000003814697266
    6. '>b' → logprob: -21.375003814697266
    7. ')b' → logprob: -21.500003814697266
    8. ' ' → logprob: -22.000003814697266
    9. '=b' → logprob: -22.500003814697266
    10. '    ' → logprob: -22.500003814697266

Token 694: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02696114219725132
    2. ':
' → logprob: -3.776961088180542
    3. '               ' → logprob: -6.276961326599121
    4. ':return' → logprob: -6.526961326599121
    5. '           ' → logprob: -8.026961326599121
    6. 'return' → logprob: -11.526961326599121
    7. '       ' → logprob: -11.526961326599121
    8. '   ' → logprob: -12.026961326599121
    9. ')' → logprob: -12.401961326599121
    10. ' return' → logprob: -13.651961326599121

Token 695: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021535921841859818
    2. '           ' → logprob: -7.127153396606445
    3. ' return' → logprob: -7.252153396606445
    4. 'return' → logprob: -7.502153396606445
    5. 'False' → logprob: -9.877153396606445
    6. '   ' → logprob: -11.252153396606445
    7. '
' → logprob: -11.752153396606445
    8. ' False' → logprob: -12.127153396606445
    9. '       ' → logprob: -13.252153396606445
    10. '	return' → logprob: -13.502153396606445

Token 696: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6076956391334534
    2. 'return' (adapté à ' return') → logprob: -1.6076955795288086
    3. 'False' → logprob: -2.1076955795288086
    4. '               ' → logprob: -2.6076955795288086
    5. ' return' → logprob: -2.9826955795288086
    6. ' False' → logprob: -4.857695579528809
    7. '   ' → logprob: -6.982695579528809
    8. '	return' → logprob: -8.607695579528809
    9. '       ' → logprob: -9.107695579528809
    10. '
' → logprob: -9.107695579528809

Token 697: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '(False' → logprob: -19.87502670288086
    4. 'True' → logprob: -20.87502670288086
    5. '=False' → logprob: -22.37502670288086
    6. 'false' → logprob: -23.12502670288086
    7. '0' → logprob: -23.75002670288086
    8. '   ' → logprob: -24.00002670288086
    9. '_false' → logprob: -24.25002670288086
    10. '
' → logprob: -24.50002670288086

Token 698: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05459483340382576
    2. '           ' → logprob: -3.5545947551727295
    3. '       ' → logprob: -4.304594993591309
    4. '<|end|>' → logprob: -5.679594993591309
    5. '    
' → logprob: -5.929594993591309
    6. '  
' → logprob: -6.554594993591309
    7. '        
' → logprob: -7.179594993591309
    8. ' 
' → logprob: -7.179594993591309
    9. '
' → logprob: -7.304594993591309
    10. '            
' → logprob: -7.804594993591309

Token 699: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10505668818950653
    2. '           ' → logprob: -2.8550567626953125
    3. '       ' → logprob: -3.8550567626953125
    4. '    
' → logprob: -4.9800567626953125
    5. '  
' → logprob: -5.3550567626953125
    6. ' 
' → logprob: -5.6050567626953125
    7. '        
' → logprob: -5.9800567626953125
    8. '            
' → logprob: -6.6050567626953125
    9. '   ' → logprob: -7.7300567626953125
    10. '<|end|>' → logprob: -7.8550567626953125

Token 700: ' if' (ID: 538)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.618600606918335
    2. 'parent' → logprob: -1.493600606918335
    3. '           ' → logprob: -2.243600606918335
    4. ' if' → logprob: -2.618600606918335
    5. '       ' → logprob: -3.493600606918335
    6. '   ' → logprob: -4.743600845336914
    7. '
' → logprob: -5.618600845336914
    8. 'if' (adapté à ' if') → logprob: -5.618600845336914
    9. '	parent' → logprob: -5.993600845336914
    10. '    
' → logprob: -6.118600845336914

Token 701: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0067154900170862675
    2. ' rank' → logprob: -5.006715297698975
    3. '(rank' → logprob: -15.881715774536133
    4. '
' → logprob: -19.881715774536133
    5. '   ' → logprob: -20.131715774536133
    6. '.rank' → logprob: -20.506715774536133
    7. '_rank' → logprob: -20.631715774536133
    8. ' ' → logprob: -21.506715774536133
    9. 'r' → logprob: -22.381715774536133
    10. '  ' → logprob: -23.381715774536133

Token 702: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0015030752401798964
    2. 'a' → logprob: -6.501502990722656
    3. '[u' → logprob: -15.001502990722656
    4. ' a' → logprob: -15.501502990722656
    5. '	a' → logprob: -16.501502990722656
    6. '(a' → logprob: -16.751502990722656
    7. '>a' → logprob: -17.501502990722656
    8. '[' → logprob: -17.876502990722656
    9. '   ' → logprob: -18.001502990722656
    10. '_a' → logprob: -19.751502990722656

Token 703: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6476810574531555
    2. ' <' → logprob: -1.1476809978485107
    3. '<' → logprob: -1.8976809978485107
    4. '<a' → logprob: -5.14768123626709
    5. '[' → logprob: -6.02268123626709
    6. ']' → logprob: -7.52268123626709
    7. ']<' → logprob: -7.64768123626709
    8. 'a' → logprob: -9.02268123626709
    9. '[b' → logprob: -10.52268123626709
    10. '<b' → logprob: -10.89768123626709

Token 704: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08109850436449051
    2. ' <' → logprob: -2.8310985565185547
    3. '[a' → logprob: -4.456098556518555
    4. '<a' → logprob: -5.206098556518555
    5. '[' → logprob: -6.331098556518555
    6. 'a' → logprob: -10.081098556518555
    7. '<b' → logprob: -11.206098556518555
    8. '<span' → logprob: -12.331098556518555
    9. '<u' → logprob: -12.331098556518555
    10. '<int' → logprob: -13.331098556518555

Token 705: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0019464874640107155
    2. ' rank' → logprob: -6.251946449279785
    3. 'b' → logprob: -11.376946449279785
    4. '   ' → logprob: -13.001946449279785
    5. '(rank' → logprob: -13.001946449279785
    6. 'a' → logprob: -13.501946449279785
    7. ' ' → logprob: -15.751946449279785
    8. '.rank' → logprob: -15.876946449279785
    9. '
' → logprob: -16.0019474029541
    10. '    ' → logprob: -16.2519474029541

Token 706: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7627898454666138
    2. '[b' → logprob: -0.7627898454666138
    3. 'a' → logprob: -3.012789726257324
    4. '[a' → logprob: -4.012789726257324
    5. ' b' → logprob: -10.762789726257324
    6. '(b' → logprob: -12.137789726257324
    7. '	b' → logprob: -12.387789726257324
    8. ' a' → logprob: -13.387789726257324
    9. '(a' → logprob: -13.887789726257324
    10. '[' → logprob: -14.387789726257324

Token 707: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48120003938674927
    2. ':' → logprob: -0.9812000393867493
    3. ']:
' → logprob: -5.481200218200684
    4. ']:' → logprob: -6.356200218200684
    5. '):
' → logprob: -6.981200218200684
    6. '):' → logprob: -9.481200218200684
    7. '<|end|>' → logprob: -9.481200218200684
    8. '           ' → logprob: -10.731200218200684
    9. '       ' → logprob: -10.981200218200684
    10. '   ' → logprob: -11.356200218200684

Token 708: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.030016714707016945
    2. ':' → logprob: -4.405016899108887
    3. '           ' → logprob: -4.905016899108887
    4. '               ' → logprob: -5.155016899108887
    5. 'a' → logprob: -5.905016899108887
    6. '[a' → logprob: -7.280016899108887
    7. '):
' → logprob: -8.280016899108887
    8. '   ' → logprob: -8.530016899108887
    9. '       ' → logprob: -9.405016899108887
    10. '[' → logprob: -9.655016899108887

Token 709: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.13402001559734344
    2. 'a' → logprob: -2.1340200901031494
    3. ' parent' → logprob: -5.13401985168457
    4. ' a' → logprob: -7.63401985168457
    5. '               ' → logprob: -8.00901985168457
    6. '[parent' → logprob: -8.63401985168457
    7. '           ' → logprob: -9.25901985168457
    8. '(parent' → logprob: -10.25901985168457
    9. '.parent' → logprob: -11.25901985168457
    10. '[a' → logprob: -11.38401985168457

Token 710: '[a' (ID: 32035)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.5760471224784851
    2. '[a' → logprob: -0.8260471224784851
    3. '[' → logprob: -9.95104694366455
    4. 'a' → logprob: -10.20104694366455
    5. 'b' → logprob: -11.07604694366455
    6. '```' → logprob: -13.07604694366455
    7. ' [' → logprob: -13.32604694366455
    8. '[u' → logprob: -13.70104694366455
    9. ' a' → logprob: -14.82604694366455
    10. '(a' → logprob: -14.95104694366455

Token 711: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0017562180291861296
    2. '[b' → logprob: -6.501756191253662
    3. 'a' → logprob: -8.50175666809082
    4. ']' → logprob: -10.00175666809082
    5. '[' → logprob: -12.87675666809082
    6. ']=' → logprob: -13.12675666809082
    7. 'b' → logprob: -15.25175666809082
    8. '(a' → logprob: -15.25175666809082
    9. ' a' → logprob: -16.12675666809082
    10. '[u' → logprob: -16.50175666809082

Token 712: ' =' (ID: 314)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.12059500813484192
    2. '=' → logprob: -2.3705949783325195
    3. ' =' → logprob: -4.1205949783325195
    4. '[b' → logprob: -5.8705949783325195
    5. '=a' → logprob: -7.2455949783325195
    6. 'a' → logprob: -8.37059497833252
    7. '[' → logprob: -9.12059497833252
    8. '=b' → logprob: -10.12059497833252
    9. ']' → logprob: -11.24559497833252
    10. ']=' → logprob: -12.12059497833252

Token 713: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.896309739408025e-07
    2. ' b' → logprob: -14.125000953674316
    3. '	b' → logprob: -19.75
    4. ')b' → logprob: -21.625
    5. '   ' → logprob: -21.875
    6. '[b' → logprob: -22.25
    7. '>b' → logprob: -23.25
    8. '\b' → logprob: -23.375
    9. '_b' → logprob: -24.375
    10. '
' → logprob: -24.375

Token 714: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013465603813529015
    2. '               ' → logprob: -4.513465404510498
    3. 'else' → logprob: -6.263465404510498
    4. ' else' → logprob: -8.263465881347656
    5. '
' → logprob: -8.388465881347656
    6. '       ' → logprob: -12.013465881347656
    7. '            
' → logprob: -12.138465881347656
    8. '                
' → logprob: -13.138465881347656
    9. '```' → logprob: -13.388465881347656
    10. '<|end|>' → logprob: -13.513465881347656

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5763483047485352
    2. '               ' → logprob: -0.8263483047485352
    3. '
' → logprob: -8.701348304748535
    4. 'else' → logprob: -8.701348304748535
    5. ' else' → logprob: -10.201348304748535
    6. '       ' → logprob: -10.826348304748535
    7. '   ' → logprob: -12.451348304748535
    8. '```' → logprob: -12.451348304748535
    9. '	       ' → logprob: -12.951348304748535
    10. '                   ' → logprob: -13.826348304748535

Token 716: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2547716796398163
    2. 'else' (adapté à ' else') → logprob: -1.5047717094421387
    3. ' else' → logprob: -6.004771709442139
    4. '       ' → logprob: -8.87977123260498
    5. '```' → logprob: -9.12977123260498
    6. '		' → logprob: -10.25477123260498
    7. '               ' → logprob: -10.37977123260498
    8. '   ' → logprob: -10.75477123260498
    9. '	else' → logprob: -11.37977123260498
    10. 'elif' → logprob: -11.50477123260498

Token 717: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12785282731056213
    2. ':' → logprob: -2.5028529167175293
    3. '           ' → logprob: -3.6278529167175293
    4. '               ' → logprob: -4.752852916717529
    5. '{
' → logprob: -6.752852916717529
    6. ' if' → logprob: -7.002852916717529
    7. '            ' → logprob: -8.877852439880371
    8. '{' → logprob: -9.252852439880371
    9. '   ' → logprob: -9.252852439880371
    10. '                   ' → logprob: -9.502852439880371

Token 718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010604370618239045
    2. '           ' → logprob: -7.001060485839844
    3. '{
' → logprob: -9.626060485839844
    4. ':
' → logprob: -11.001060485839844
    5. '   ' → logprob: -11.376060485839844
    6. ':' → logprob: -11.376060485839844
    7. '              ' → logprob: -11.751060485839844
    8. '```' → logprob: -11.876060485839844
    9. '                   ' → logprob: -12.001060485839844
    10. '	           ' → logprob: -12.126060485839844

Token 719: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.13312958180904388
    2. '               ' → logprob: -2.133129596710205
    3. '           ' → logprob: -5.383129596710205
    4. ' parent' → logprob: -7.258129596710205
    5. '[parent' → logprob: -7.633129596710205
    6. '{
' → logprob: -9.258129119873047
    7. '_parent' → logprob: -9.633129119873047
    8. '	parent' → logprob: -9.758129119873047
    9. '(parent' → logprob: -10.383129119873047
    10. ':' → logprob: -10.633129119873047

Token 720: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00010437761375214905
    2. 'a' → logprob: -9.500103950500488
    3. '[parent' → logprob: -11.000103950500488
    4. '           ' → logprob: -11.625103950500488
    5. '               ' → logprob: -13.250103950500488
    6. '```' → logprob: -14.875103950500488
    7. '                   ' → logprob: -15.250103950500488
    8. ' a' → logprob: -15.250103950500488
    9. '[b' → logprob: -15.500103950500488
    10. 'parent' → logprob: -15.500103950500488

Token 721: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7131726145744324
    2. ' =' → logprob: -0.9631726145744324
    3. ']' → logprob: -2.088172674179077
    4. ']=' → logprob: -5.463172435760498
    5. '[' → logprob: -10.338172912597656
    6. ')' → logprob: -11.088172912597656
    7. ' ]' → logprob: -11.338172912597656
    8. 'a' → logprob: -13.088172912597656
    9. '[parent' → logprob: -13.088172912597656
    10. 's' → logprob: -13.588172912597656

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975141443312168
    2. ' =' → logprob: -3.5297513008117676
    3. '=
' → logprob: -15.404751777648926
    4. ']=' → logprob: -15.654751777648926
    5. '[' → logprob: -16.52975082397461
    6. 'parent' → logprob: -16.65475082397461
    7. '=a' → logprob: -16.90475082397461
    8. '=os' → logprob: -16.90475082397461
    9. '[parent' → logprob: -17.02975082397461
    10. ']' → logprob: -17.52975082397461

Token 723: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002614550176076591
    2. ' a' → logprob: -8.250261306762695
    3. '	a' → logprob: -16.125261306762695
    4. '   ' → logprob: -20.500261306762695
    5. ')a' → logprob: -20.875261306762695
    6. '[a' → logprob: -21.500261306762695
    7. '>a' → logprob: -21.750261306762695
    8. ',a' → logprob: -22.125261306762695
    9. 'а' → logprob: -22.250261306762695
    10. '#a' → logprob: -22.375261306762695

Token 724: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002224364085122943
    2. '           ' → logprob: -6.752224445343018
    3. '                   ' → logprob: -6.877224445343018
    4. '```' → logprob: -11.62722396850586
    5. ' if' → logprob: -12.50222396850586
    6. 'if' → logprob: -12.75222396850586
    7. '              ' → logprob: -13.75222396850586
    8. '       ' → logprob: -13.87722396850586
    9. '	           ' → logprob: -13.87722396850586
    10. '		       ' → logprob: -14.25222396850586

Token 725: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34965142607688904
    2. '               ' → logprob: -1.2246514558792114
    3. '                   ' → logprob: -7.224651336669922
    4. '       ' → logprob: -8.599651336669922
    5. '```' → logprob: -9.099651336669922
    6. '   ' → logprob: -9.474651336669922
    7. 'if' → logprob: -10.599651336669922
    8. ' if' → logprob: -10.849651336669922
    9. '		' → logprob: -11.349651336669922
    10. '	           ' → logprob: -11.599651336669922

Token 726: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0024638830218464136
    2. '               ' → logprob: -6.2524638175964355
    3. ' if' → logprob: -7.7524638175964355
    4. '                   ' → logprob: -9.377464294433594
    5. '```' → logprob: -11.252464294433594
    6. '
' → logprob: -12.627464294433594
    7. '           ' → logprob: -12.877464294433594
    8. '                
' → logprob: -15.127464294433594
    9. ';if' → logprob: -15.127464294433594
    10. 'If' → logprob: -15.502464294433594

Token 727: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -1.0325924449716695e-05
    2. ' rank' → logprob: -11.50001049041748
    3. '(rank' → logprob: -16.250009536743164
    4. '
' → logprob: -18.375009536743164
    5. '_rank' → logprob: -20.500009536743164
    6. 'r' → logprob: -20.500009536743164
    7. '.rank' → logprob: -21.500009536743164
    8. 'ranking' → logprob: -21.875009536743164
    9. 'Rank' → logprob: -22.000009536743164
    10. '   ' → logprob: -22.125009536743164

Token 728: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.500000953674316
    3. '[parent' → logprob: -16.375
    4. '[' → logprob: -17.0
    5. '[A' → logprob: -19.75
    6. '   ' → logprob: -20.0
    7. '(a' → logprob: -20.75
    8. ' [' → logprob: -21.5
    9. '[u' → logprob: -21.625
    10. '[b' → logprob: -21.75

Token 729: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.319370302458992e-06
    2. 'a' → logprob: -12.750005722045898
    3. '[' → logprob: -13.875005722045898
    4. '==' → logprob: -14.250005722045898
    5. '[
' → logprob: -14.750005722045898
    6. '[b' → logprob: -16.1250057220459
    7. '[u' → logprob: -16.1250057220459
    8. ']==' → logprob: -16.6250057220459
    9. '[x' → logprob: -17.1250057220459
    10. '```' → logprob: -17.5000057220459

Token 730: ' ==' (ID: 951)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00017314712749794126
    2. '[' → logprob: -9.125173568725586
    3. '==' → logprob: -9.875173568725586
    4. '[b' → logprob: -11.875173568725586
    5. 'a' → logprob: -12.500173568725586
    6. '[u' → logprob: -14.125173568725586
    7. ' ==' → logprob: -15.000173568725586
    8. '[
' → logprob: -15.125173568725586
    9. '[parent' → logprob: -15.250173568725586
    10. '[s' → logprob: -15.375173568725586

Token 731: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -9.73446003627032e-05
    2. ' rank' → logprob: -9.250097274780273
    3. '(rank' → logprob: -13.750097274780273
    4. '_rank' → logprob: -17.250097274780273
    5. 'a' → logprob: -18.375097274780273
    6. '.rank' → logprob: -19.000097274780273
    7. 'Rank' → logprob: -20.125097274780273
    8. 'b' → logprob: -22.500097274780273
    9. 'ranking' → logprob: -23.125097274780273
    10. 'r' → logprob: -23.250097274780273

Token 732: '[b' (ID: 40800)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3138001263141632
    2. 'a' → logprob: -1.3138000965118408
    3. '[b' → logprob: -7.68880033493042
    4. 'b' → logprob: -9.813799858093262
    5. '(a' → logprob: -11.313799858093262
    6. '[' → logprob: -11.563799858093262
    7. ' a' → logprob: -13.313799858093262
    8. '[
' → logprob: -14.563799858093262
    9. '```' → logprob: -14.563799858093262
    10. '	a' → logprob: -14.688799858093262

Token 733: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06427361816167831
    2. ':' → logprob: -3.0642735958099365
    3. ']:
' → logprob: -4.439273834228516
    4. '                   ' → logprob: -6.439273834228516
    5. '   ' → logprob: -7.064273834228516
    6. '               ' → logprob: -7.939273834228516
    7. '           ' → logprob: -8.439273834228516
    8. '):
' → logprob: -8.689273834228516
    9. ' :
' → logprob: -8.939273834228516
    10. '():
' → logprob: -8.939273834228516

Token 734: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000695515947882086
    2. ' rank' → logprob: -8.50069522857666
    3. '   ' → logprob: -8.62569522857666
    4. 'rank' → logprob: -9.25069522857666
    5. '               ' → logprob: -9.37569522857666
    6. '           ' → logprob: -10.62569522857666
    7. '                       ' → logprob: -10.87569522857666
    8. '		           ' → logprob: -10.87569522857666
    9. '```' → logprob: -10.87569522857666
    10. '(rank' → logprob: -11.00069522857666

Token 735: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.005247395019978285
    2. ' rank' → logprob: -5.255247592926025
    3. '                   ' → logprob: -11.380247116088867
    4. '(rank' → logprob: -13.630247116088867
    5. '   ' → logprob: -14.255247116088867
    6. '               ' → logprob: -15.380247116088867
    7. '_rank' → logprob: -16.505247116088867
    8. '.rank' → logprob: -16.630247116088867
    9. '                       ' → logprob: -18.505247116088867
    10. '           ' → logprob: -19.130247116088867

Token 736: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.180258191714529e-06
    2. 'a' → logprob: -11.750008583068848
    3. '[' → logprob: -15.625008583068848
    4. ' a' → logprob: -17.62500762939453
    5. '[
' → logprob: -17.87500762939453
    6. '```' → logprob: -18.12500762939453
    7. '[u' → logprob: -18.50000762939453
    8. '[x' → logprob: -18.62500762939453
    9. '[A' → logprob: -18.62500762939453
    10. '   ' → logprob: -18.62500762939453

Token 737: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1472419600977446e-06
    2. 'a' → logprob: -14.000000953674316
    3. '[
' → logprob: -16.250001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[u' → logprob: -17.625001907348633
    6. '[A' → logprob: -17.875001907348633
    7. ' [' → logprob: -18.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '[i' → logprob: -19.375001907348633

Token 738: ' +=' (ID: 2757)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.012040164321660995
    2. '[' → logprob: -5.012040138244629
    3. '+=' → logprob: -5.262040138244629
    4. '[i' → logprob: -9.887040138244629
    5. 'a' → logprob: -10.637040138244629
    6. ' +=' → logprob: -11.012040138244629
    7. '[u' → logprob: -11.012040138244629
    8. ']+=' → logprob: -12.012040138244629
    9. '```' → logprob: -12.762040138244629
    10. '[
' → logprob: -12.887040138244629

Token 739: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -21.25
    5. '
' → logprob: -21.625
    6. '       ' → logprob: -24.25
    7. '[' → logprob: -24.25
    8. '-' → logprob: -24.5
    9. '+' → logprob: -24.625
    10. '0' → logprob: -24.625

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -21.75
    5. '
' → logprob: -21.875
    6. '0' → logprob: -23.875
    7. '3' → logprob: -24.0
    8. '１' → logprob: -24.25
    9. '-' → logprob: -24.375
    10. ' ' → logprob: -24.5

Token 741: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0001435279846191
    2. '       ' → logprob: -1.6251435279846191
    3. '           ' → logprob: -1.6251435279846191
    4. 'return' → logprob: -2.125143527984619
    5. ' return' → logprob: -3.250143527984619
    6. '<|end|>' → logprob: -3.375143527984619
    7. '	return' → logprob: -3.500143527984619
    8. '   ' → logprob: -4.875143527984619
    9. '               ' → logprob: -6.500143527984619
    10. '    
' → logprob: -7.125143527984619

Token 742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5543114542961121
    2. '	return' → logprob: -1.5543115139007568
    3. '       ' → logprob: -1.8043115139007568
    4. '   ' → logprob: -3.804311513900757
    5. 'return' → logprob: -4.554311275482178
    6. ' return' → logprob: -4.929311275482178
    7. '                   ' → logprob: -5.429311275482178
    8. '		' → logprob: -6.179311275482178
    9. '               ' → logprob: -6.554311275482178
    10. '	' → logprob: -7.679311275482178

Token 743: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9216055274009705
    2. ' return' → logprob: -1.4216055870056152
    3. '   ' → logprob: -1.6716055870056152
    4. '           ' → logprob: -1.9216055870056152
    5. '	return' → logprob: -4.046605587005615
    6. '       ' → logprob: -4.921605587005615
    7. '               ' → logprob: -7.171605587005615
    8. '		' → logprob: -7.421605587005615
    9. 'True' → logprob: -9.296605110168457
    10. '                   ' → logprob: -9.921605110168457

Token 744: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -19.501502990722656
    4. '=True' → logprob: -22.001502990722656
    5. 'False' → logprob: -22.126502990722656
    6. 'true' → logprob: -23.251502990722656
    7. '_true' → logprob: -24.001502990722656
    8. ' ' → logprob: -24.626502990722656
    9. '   ' → logprob: -24.626502990722656
    10. 'Tr' → logprob: -25.001502990722656

Token 745: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1792907416820526
    2. '       ' → logprob: -2.679290771484375
    3. '<|end|>' → logprob: -2.929290771484375
    4. 'short' → logprob: -4.054290771484375
    5. '

' → logprob: -4.554290771484375
    6. '        
' → logprob: -5.054290771484375
    7. '    
' → logprob: -6.179290771484375
    8. '   ' → logprob: -6.804290771484375
    9. '
' → logprob: -7.429290771484375
    10. ' shortest' → logprob: -7.554290771484375

Token 746: '       ' (ID: 309)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.00326172704808414
    2. '       ' → logprob: -6.503261566162109
    3. 'total' → logprob: -6.628261566162109
    4. 'result' → logprob: -8.87826156616211
    5. 'answer' → logprob: -9.12826156616211
    6. '   ' → logprob: -9.25326156616211
    7. ' shortest' → logprob: -10.62826156616211
    8. '        
' → logprob: -10.87826156616211
    9. 'sorted' → logprob: -10.87826156616211
    10. 'ans' → logprob: -11.12826156616211

Token 747: ' #' (ID: 1069)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -3.953082341467962e-05
    2. ' shortest' → logprob: -10.875039100646973
    3. 'result' → logprob: -12.125039100646973
    4. 'total' → logprob: -12.125039100646973
    5. '       ' → logprob: -12.250039100646973
    6. 'answer' → logprob: -13.250039100646973
    7. 'sorted' → logprob: -13.625039100646973
    8. '```' → logprob: -14.250039100646973
    9. '   ' → logprob: -15.125039100646973
    10. '        
' → logprob: -15.375039100646973

Token 748: ' Sort' (ID: 25945)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -7.183501293184236e-05
    2. ' shortest' → logprob: -9.75007152557373
    3. '#' → logprob: -12.37507152557373
    4. 'sorted' → logprob: -12.50007152557373
    5. 'total' → logprob: -13.50007152557373
    6. '
' → logprob: -13.87507152557373
    7. '       ' → logprob: -14.25007152557373
    8. 'result' → logprob: -14.62507152557373
    9. '   ' → logprob: -14.75007152557373
    10. '```' → logprob: -14.87507152557373

Token 749: ' edges' (ID: 22569)
  Prédit: '(short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(short' → logprob: -0.005387549754232168
    2. 'short' → logprob: -5.255387783050537
    3. ' shortest' → logprob: -9.255387306213379
    4. '(' → logprob: -9.880387306213379
    5. '(sorted' → logprob: -12.880387306213379
    6. '(
' → logprob: -13.380387306213379
    7. 'Shortest' → logprob: -13.630387306213379
    8. '_short' → logprob: -13.755387306213379
    9. ' (' → logprob: -14.755387306213379
    10. ' short' → logprob: -16.005388259887695

Token 750: ' by' (ID: 656)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.7075520157814026
    2. '(short' → logprob: -0.7075520157814026
    3. ' shortest' → logprob: -5.082551956176758
    4. '=' → logprob: -5.207551956176758
    5. '(
' → logprob: -7.582551956176758
    6. ' =' → logprob: -7.832551956176758
    7. '       ' → logprob: -8.082551956176758
    8. '(' → logprob: -8.207551956176758
    9. '(sorted' → logprob: -8.207551956176758
    10. '_short' → logprob: -8.332551956176758

Token 751: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10230541229248047
    2. ' cost' → logprob: -2.9773054122924805
    3. 'lambda' → logprob: -3.7273054122924805
    4. 'c' → logprob: -3.8523054122924805
    5. ' lambda' → logprob: -7.2273054122924805
    6. 'key' → logprob: -8.85230541229248
    7. ' c' → logprob: -9.35230541229248
    8. '_cost' → logprob: -10.85230541229248
    9. '=lambda' → logprob: -10.97730541229248
    10. ' key' → logprob: -11.22730541229248

Token 752: '
' (ID: 198)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.042722929269075394
    2. ' shortest' → logprob: -3.2927229404449463
    3. '(short' → logprob: -5.667722702026367
    4. 'sorted' → logprob: -8.042722702026367
    5. '.sort' → logprob: -8.667722702026367
    6. '       ' → logprob: -8.667722702026367
    7. 'Shortest' → logprob: -8.792722702026367
    8. ',' → logprob: -9.292722702026367
    9. '=' → logprob: -9.417722702026367
    10. ' =' → logprob: -10.042722702026367

Token 753: '       ' (ID: 309)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.017575230449438095
    2. '.sort' → logprob: -4.642575263977051
    3. ' shortest' → logprob: -5.767575263977051
    4. '       ' → logprob: -6.142575263977051
    5. 'sorted' → logprob: -6.517575263977051
    6. ',' → logprob: -8.01757526397705
    7. '.short' → logprob: -8.26757526397705
    8. '```' → logprob: -9.01757526397705
    9. 'sort' → logprob: -9.26757526397705
    10. 'Shortest' → logprob: -10.01757526397705

Token 754: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.0031913816928863525
    2. ' shortest' → logprob: -5.7531914710998535
    3. 'sorted' → logprob: -11.753190994262695
    4. '       ' → logprob: -12.753190994262695
    5. ' short' → logprob: -13.628190994262695
    6. 'Shortest' → logprob: -14.503190994262695
    7. '```' → logprob: -14.628190994262695
    8. 'sort' → logprob: -15.503190994262695
    9. '
' → logprob: -15.753190994262695
    10. '        
' → logprob: -15.878190994262695

Token 755: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.125005722045898
    3. '_pat' → logprob: -15.875005722045898
    4. '_short' → logprob: -16.3750057220459
    5. '```' → logprob: -16.8750057220459
    6. '_p' → logprob: -16.8750057220459
    7. '_PATH' → logprob: -17.2500057220459
    8. ' _' → logprob: -17.6250057220459
    9. '_Path' → logprob: -18.0000057220459
    10. ')_' → logprob: -18.6250057220459

Token 756: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. '_edge' → logprob: -16.5
    4. 'edges' → logprob: -16.5
    5. '_ed' → logprob: -16.75
    6. ' _' → logprob: -17.0
    7. '```' → logprob: -17.625
    8. '
' → logprob: -18.875
    9. '_e' → logprob: -19.375
    10. '\' → logprob: -19.375

Token 757: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -10.875020027160645
    3. '.s' → logprob: -15.125020027160645
    4. ' .' → logprob: -15.250020027160645
    5. '=' → logprob: -16.125019073486328
    6. '.sorted' → logprob: -17.250019073486328
    7. '	sort' → logprob: -17.750019073486328
    8. 'sort' → logprob: -17.875019073486328
    9. '.Sort' → logprob: -18.500019073486328
    10. ' =' → logprob: -18.750019073486328

Token 758: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -7.147740689106286e-05
    2. '()' → logprob: -9.62507152557373
    3. 'key' → logprob: -12.87507152557373
    4. '(reverse' → logprob: -13.37507152557373
    5. '()
' → logprob: -13.75007152557373
    6. '(' → logprob: -15.62507152557373
    7. '(
' → logprob: -17.000070571899414
    8. ',key' → logprob: -17.250070571899414
    9. ' key' → logprob: -18.875070571899414
    10. '	key' → logprob: -19.000070571899414

Token 759: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00863631535321474
    2. '=' → logprob: -4.758636474609375
    3. 'lambda' → logprob: -10.758636474609375
    4. '(lambda' → logprob: -15.133636474609375
    5. '=
' → logprob: -15.383636474609375
    6. ' =' → logprob: -17.508636474609375
    7. ' lambda' → logprob: -18.508636474609375
    8. '=l' → logprob: -19.008636474609375
    9. '```' → logprob: -19.258636474609375
    10. '=item' → logprob: -19.383636474609375

Token 760: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2708783447742462
    2. ' lambda' → logprob: -1.5208783149719238
    3. 'x' → logprob: -4.020878314971924
    4. ' x' → logprob: -7.645878314971924
    5. '=lambda' → logprob: -8.145878791809082
    6. '(lambda' → logprob: -10.645878791809082
    7. ':' → logprob: -10.895878791809082
    8. 'e' → logprob: -11.645878791809082
    9. '_lambda' → logprob: -12.645878791809082
    10. 'ambda' → logprob: -12.770878791809082

Token 761: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013369438238441944
    2. ':x' → logprob: -9.500133514404297
    3. 'lambda' → logprob: -10.125133514404297
    4. ' :' → logprob: -11.500133514404297
    5. '=lambda' → logprob: -12.375133514404297
    6. '[' → logprob: -13.250133514404297
    7. 'x' → logprob: -13.625133514404297
    8. ':
' → logprob: -14.500133514404297
    9. '(lambda' → logprob: -15.250133514404297
    10. ' lambda' → logprob: -15.625133514404297

Token 762: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02975604310631752
    2. ' x' → logprob: -3.5297560691833496
    3. 'lambda' → logprob: -12.154755592346191
    4. ' lambda' → logprob: -15.404755592346191
    5. '	x' → logprob: -17.904756546020508
    6. '_' → logprob: -19.404756546020508
    7. ' ' → logprob: -19.904756546020508
    8. '   ' → logprob: -19.904756546020508
    9. '(x' → logprob: -20.404756546020508
    10. '_x' → logprob: -21.404756546020508

Token 763: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035432863514870405
    2. '2' → logprob: -6.003543376922607
    3. ':' → logprob: -6.878543376922607
    4. ' [' → logprob: -10.62854290008545
    5. ' ' → logprob: -12.00354290008545
    6. '3' → logprob: -12.87854290008545
    7. 'x' → logprob: -14.37854290008545
    8. '[-' → logprob: -14.37854290008545
    9. ' :' → logprob: -14.62854290008545
    10. ',' → logprob: -14.75354290008545

Token 764: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013417120499070734
    2. '[' → logprob: -9.000134468078613
    3. '-' → logprob: -12.000134468078613
    4. '```' → logprob: -13.375134468078613
    5. '=' → logprob: -13.875134468078613
    6. 'c' → logprob: -15.000134468078613
    7. '(' → logprob: -15.000134468078613
    8. ' ' → logprob: -15.250134468078613
    9. ':' → logprob: -15.437634468078613
    10. '
' → logprob: -16.000133514404297

Token 765: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.625006675720215
    3. ')
' → logprob: -13.250006675720215
    4. ',' → logprob: -13.750006675720215
    5. '))' → logprob: -15.875006675720215
    6. ')#' → logprob: -15.875006675720215
    7. '),' → logprob: -16.37500762939453
    8. '   ' → logprob: -17.12500762939453
    9. ')`' → logprob: -17.25000762939453
    10. ')

' → logprob: -17.37500762939453

Token 766: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2051435112953186
    2. 'mst' → logprob: -2.705143451690674
    3. '       ' → logprob: -2.955143451690674
    4. 'result' → logprob: -3.205143451690674
    5. 'cost' → logprob: -3.955143451690674
    6. '```' → logprob: -5.455143451690674
    7. 'selected' → logprob: -7.330143451690674
    8. ' total' → logprob: -7.580143451690674
    9. 'res' → logprob: -7.705143451690674
    10. 'ans' → logprob: -8.205143928527832

Token 767: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' (adapté à ' mst') → logprob: -0.09236501902341843
    2. 'total' → logprob: -2.592365026473999
    3. 'result' → logprob: -4.84236478805542
    4. 'cost' → logprob: -5.34236478805542
    5. 'ans' → logprob: -8.342365264892578
    6. ' mst' → logprob: -8.467365264892578
    7. 'res' → logprob: -8.842365264892578
    8. 'answer' → logprob: -9.592365264892578
    9. '        
' → logprob: -11.217365264892578
    10. 'selected' → logprob: -11.592365264892578

Token 768: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.010983919724822044
    2. '_weight' → logprob: -5.260983943939209
    3. '_edges' → logprob: -5.760983943939209
    4. '_' → logprob: -6.260983943939209
    5. ' =' → logprob: -7.760983943939209
    6. '_total' → logprob: -8.88598346710205
    7. '_sum' → logprob: -9.38598346710205
    8. '_size' → logprob: -11.51098346710205
    9. 'cost' → logprob: -12.26098346710205
    10. '_edge' → logprob: -12.76098346710205

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752103611826897
    2. '=' → logprob: -3.529752016067505
    3. ' +=' → logprob: -13.529751777648926
    4. ',' → logprob: -15.529751777648926
    5. '+=' → logprob: -17.529752731323242
    6. ' =
' → logprob: -17.654752731323242
    7. ')' → logprob: -17.904752731323242
    8. ' ' → logprob: -18.529752731323242
    9. ' =)' → logprob: -18.779752731323242
    10. '   ' → logprob: -19.529752731323242

Token 770: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.75000762939453
    4. ' ' → logprob: -20.75000762939453
    5. '۰' → logprob: -21.50000762939453
    6. '```' → logprob: -21.56250762939453
    7. '=' → logprob: -22.00000762939453
    8. 'sum' → logprob: -22.06250762939453
    9. '`' → logprob: -22.50000762939453
    10. '０' → logprob: -22.56250762939453

Token 771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. 'sum' → logprob: -20.75
    4. '   ' → logprob: -21.375
    5. '۰' → logprob: -22.875
    6. '00' → logprob: -22.875
    7. '000' → logprob: -23.25
    8. '```' → logprob: -23.25
    9. 'float' → logprob: -23.375
    10. ' ' → logprob: -23.5

Token 772: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5172640681266785
    2. 'for' → logprob: -1.1422641277313232
    3. ' for' → logprob: -2.7672641277313232
    4. 'edges' → logprob: -4.142263889312744
    5. 'count' → logprob: -5.642263889312744
    6. ' edges' → logprob: -6.517263889312744
    7. 'selected' → logprob: -7.892263889312744
    8. ',' → logprob: -9.267264366149902
    9. '_edges' → logprob: -9.517264366149902
    10. 'connected' → logprob: -9.767264366149902

Token 773: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5649722814559937
    2. ' for' → logprob: -1.3149722814559937
    3. '       ' → logprob: -1.8149722814559937
    4. 'edges' → logprob: -8.814971923828125
    5. '
' → logprob: -10.189971923828125
    6. 'count' → logprob: -10.314971923828125
    7. ' edges' → logprob: -10.689971923828125
    8. 'selected' → logprob: -11.189971923828125
    9. '        
' → logprob: -11.814971923828125
    10. '   ' → logprob: -11.814971923828125

Token 774: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.23545251786708832
    2. 'count' → logprob: -1.7354525327682495
    3. 'for' → logprob: -3.98545241355896
    4. 'mst' → logprob: -4.735452651977539
    5. 'edge' → logprob: -5.235452651977539
    6. 'cnt' → logprob: -7.985452651977539
    7. 'selected' → logprob: -8.610452651977539
    8. 'num' → logprob: -9.360452651977539
    9. ' edges' → logprob: -9.735452651977539
    10. 'added' → logprob: -10.485452651977539

Token 775: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.055605124682188034
    2. '_selected' → logprob: -3.430605173110962
    3. '_count' → logprob: -4.680604934692383
    4. '_added' → logprob: -4.680604934692383
    5. '_taken' → logprob: -6.555604934692383
    6. '_in' → logprob: -7.305604934692383
    7. '_connected' → logprob: -7.805604934692383
    8. '_found' → logprob: -9.180604934692383
    9. 'used' → logprob: -9.180604934692383
    10. '_ch' → logprob: -9.305604934692383

Token 776: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193363428115845
    2. ' =' → logprob: -1.5019335746765137
    3. '+=' → logprob: -14.001934051513672
    4. ' +=' → logprob: -14.001934051513672
    5. '_count' → logprob: -14.001934051513672
    6. ',' → logprob: -14.126934051513672
    7. '_' → logprob: -14.751934051513672
    8. '=[]' → logprob: -15.876934051513672
    9. '   ' → logprob: -16.001934051513672
    10. '```' → logprob: -16.126934051513672

Token 777: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '[]' → logprob: -18.62502670288086
    4. '<|end|>' → logprob: -19.12502670288086
    5. '00' → logprob: -20.50002670288086
    6. '۰' → logprob: -20.62502670288086
    7. '000' → logprob: -21.25002670288086
    8. '=' → logprob: -21.75002670288086
    9. 'set' → logprob: -21.75002670288086
    10. '```' → logprob: -21.87502670288086

Token 778: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'set' → logprob: -16.500001907348633
    4. '[]' → logprob: -16.750001907348633
    5. '=' → logprob: -19.000001907348633
    6. '```' → logprob: -19.250001907348633
    7. '1' → logprob: -19.875001907348633
    8. '000' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.000001907348633
    10. '[' → logprob: -20.000001907348633

Token 779: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16542935371398926
    2. ' for' → logprob: -2.4154293537139893
    3. '       ' → logprob: -3.5404293537139893
    4. '
' → logprob: -3.5404293537139893
    5. '        
' → logprob: -6.16542911529541
    6. '    
' → logprob: -7.16542911529541
    7. '   ' → logprob: -7.16542911529541
    8. '<|end|>' → logprob: -7.79042911529541
    9. '  
' → logprob: -8.04042911529541
    10. '\n' → logprob: -8.29042911529541

Token 780: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1922575980424881
    2. ' for' → logprob: -2.5672576427459717
    3. '       ' → logprob: -2.8172576427459717
    4. '
' → logprob: -3.3172576427459717
    5. '        
' → logprob: -7.192257404327393
    6. '   ' → logprob: -7.692257404327393
    7. '<|end|>' → logprob: -8.06725788116455
    8. '    
' → logprob: -8.44225788116455
    9. '```' → logprob: -8.69225788116455
    10. '  
' → logprob: -9.69225788116455

Token 781: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.320199877838604e-07
    2. ' for' → logprob: -15.25
    3. '       ' → logprob: -16.0
    4. '	for' → logprob: -19.375
    5. '   ' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.75
    8. '        
' → logprob: -22.375
    9. '_for' → logprob: -23.25
    10. 'For' → logprob: -23.75

Token 782: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10032970458269119
    2. ' u' → logprob: -2.350329637527466
    3. '(u' → logprob: -9.350329399108887
    4. '_,' → logprob: -11.100329399108887
    5. '   ' → logprob: -12.100329399108887
    6. '	u' → logprob: -12.225329399108887
    7. '_u' → logprob: -12.350329399108887
    8. ',u' → logprob: -13.225329399108887
    9. ' (' → logprob: -13.350329399108887
    10. ',' → logprob: -13.725329399108887

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016480287013109773
    2. ',v' → logprob: -8.875164985656738
    3. ' ,' → logprob: -10.750164985656738
    4. ',u' → logprob: -13.000164985656738
    5. 'v' → logprob: -15.250164985656738
    6. '‌,' → logprob: -15.875164985656738
    7. ',user' → logprob: -15.875164985656738
    8. '<|end|>' → logprob: -16.000164031982422
    9. 'u' → logprob: -16.250164031982422
    10. ',
' → logprob: -16.625164031982422

Token 784: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.505351095460355e-05
    2. ' v' → logprob: -9.500075340270996
    3. ',v' → logprob: -15.500075340270996
    4. ',' → logprob: -18.25007438659668
    5. '	v' → logprob: -20.12507438659668
    6. '<|end|>' → logprob: -20.50007438659668
    7. '_v' → logprob: -20.87507438659668
    8. ')v' → logprob: -22.75007438659668
    9. '<v' → logprob: -23.75007438659668
    10. '
' → logprob: -24.00007438659668

Token 785: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',v' → logprob: -15.000009536743164
    4. ',c' → logprob: -15.125009536743164
    5. ',u' → logprob: -15.750009536743164
    6. '<|end|>' → logprob: -16.875009536743164
    7. '_,' → logprob: -17.125009536743164
    8. ' in' → logprob: -17.250009536743164
    9. ',
' → logprob: -17.875009536743164
    10. '‌,' → logprob: -18.125009536743164

Token 786: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010402000043541193
    2. ' c' → logprob: -9.375103950500488
    3. 'cost' → logprob: -10.875103950500488
    4. '	c' → logprob: -16.250104904174805
    5. ' cost' → logprob: -18.500104904174805
    6. ')c' → logprob: -19.000104904174805
    7. '   ' → logprob: -19.250104904174805
    8. 'w' → logprob: -19.750104904174805
    9. ' ' → logprob: -20.125104904174805
    10. '```' → logprob: -20.375104904174805

Token 787: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005074840970337391
    2. 'in' → logprob: -5.505074977874756
    3. ',' → logprob: -7.005074977874756
    4. ':' → logprob: -9.630074501037598
    5. '<|end|>' → logprob: -11.755074501037598
    6. '   ' → logprob: -13.005074501037598
    7. ')' → logprob: -13.130074501037598
    8. '.' → logprob: -13.130074501037598
    9. ' ,' → logprob: -13.255074501037598
    10. ':
' → logprob: -13.505074501037598

Token 788: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -7.107425062713446e-06
    2. ' shortest' → logprob: -12.000006675720215
    3. '(short' → logprob: -14.000006675720215
    4. '_short' → logprob: -16.87500762939453
    5. 'Shortest' → logprob: -17.37500762939453
    6. ' short' → logprob: -17.87500762939453
    7. 'shortcut' → logprob: -18.00000762939453
    8. '.short' → logprob: -18.50000762939453
    9. '	short' → logprob: -19.12500762939453
    10. 's' → logprob: -20.50000762939453

Token 789: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.975612187583465e-05
    2. '_' → logprob: -10.875029563903809
    3. 'path' → logprob: -11.500029563903809
    4. '_p' → logprob: -15.000029563903809
    5. '_pat' → logprob: -16.500030517578125
    6. '_paths' → logprob: -16.875030517578125
    7. 'Path' → logprob: -17.500030517578125
    8. '_PATH' → logprob: -17.875030517578125
    9. '_cost' → logprob: -18.000030517578125
    10. ' path' → logprob: -18.500030517578125

Token 790: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00029601677670143545
    2. ':' → logprob: -9.250295639038086
    3. ':
' → logprob: -10.000295639038086
    4. '```' → logprob: -10.375295639038086
    5. '_' → logprob: -10.625295639038086
    6. 'edges' → logprob: -10.750295639038086
    7. '_cost' → logprob: -11.250295639038086
    8. '   ' → logprob: -11.750295639038086
    9. '_used' → logprob: -11.875295639038086
    10. '):
' → logprob: -12.000295639038086

Token 791: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020336557179689407
    2. ':
' → logprob: -4.020336627960205
    3. ',' → logprob: -6.520336627960205
    4. '<|end|>' → logprob: -8.520336151123047
    5. '   ' → logprob: -8.645336151123047
    6. '):' → logprob: -9.020336151123047
    7. '):
' → logprob: -9.270336151123047
    8. '       ' → logprob: -10.395336151123047
    9. '<|end|>' → logprob: -10.520336151123047
    10. ')' → logprob: -11.395336151123047

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012378728948533535
    2. '   ' → logprob: -4.887378692626953
    3. ' if' → logprob: -5.762378692626953
    4. '<|end|>' → logprob: -7.262378692626953
    5. '       ' → logprob: -8.012378692626953
    6. '	       ' → logprob: -8.137378692626953
    7. '<|end|>' → logprob: -10.012378692626953
    8. 'if' → logprob: -10.262378692626953
    9. '```' → logprob: -10.262378692626953
    10. ' ' → logprob: -10.387378692626953

Token 793: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42941614985466003
    2. ' if' → logprob: -1.1794161796569824
    3. '           ' → logprob: -3.1794161796569824
    4. '   ' → logprob: -10.304415702819824
    5. '	if' → logprob: -12.429415702819824
    6. '       ' → logprob: -13.054415702819824
    7. '```' → logprob: -13.054415702819824
    8. ' ' → logprob: -15.554415702819824
    9. 'If' → logprob: -15.554415702819824
    10. '          ' → logprob: -15.554415702819824

Token 794: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.1269284337759018
    2. 'union' → logprob: -2.1269283294677734
    3. '	union' → logprob: -15.501928329467773
    4. '.union' → logprob: -16.751928329467773
    5. '_union' → logprob: -17.501928329467773
    6. '   ' → logprob: -18.001928329467773
    7. 'Union' → logprob: -18.376928329467773
    8. 'un' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.876928329467773

Token 795: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.25
    4. 'u' → logprob: -16.875
    5. '[u' → logprob: -17.75
    6. '(
' → logprob: -19.125
    7. '(a' → logprob: -19.25
    8. ' u' → logprob: -19.5
    9. '(user' → logprob: -20.875
    10. ',u' → logprob: -21.25

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011510594777064398
    2. ',v' → logprob: -9.125115394592285
    3. ' ,' → logprob: -12.375115394592285
    4. 'v' → logprob: -13.625115394592285
    5. ',
' → logprob: -14.250115394592285
    6. '(v' → logprob: -18.12511444091797
    7. ',u' → logprob: -18.62511444091797
    8. '(' → logprob: -19.25011444091797
    9. 'u' → logprob: -19.62511444091797
    10. '(),' → logprob: -19.75011444091797

Token 797: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.306760805164231e-05
    2. ' v' → logprob: -11.25001335144043
    3. ')v' → logprob: -19.62501335144043
    4. '	v' → logprob: -20.87501335144043
    5. 'vq' → logprob: -22.00001335144043
    6. '(v' → logprob: -23.00001335144043
    7. '[v' → logprob: -23.12501335144043
    8. '<|end|>' → logprob: -23.50001335144043
    9. '_v' → logprob: -23.62501335144043
    10. ',v' → logprob: -23.75001335144043

Token 798: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001506409258581698
    2. '):
' → logprob: -6.501506328582764
    3. ')' → logprob: -12.751506805419922
    4. '):
' → logprob: -14.876506805419922
    5. '):

' → logprob: -15.251506805419922
    6. ':' → logprob: -15.251506805419922
    7. ' ):' → logprob: -16.001506805419922
    8. '}:' → logprob: -16.751506805419922
    9. ''):' → logprob: -17.251506805419922
    10. ']:' → logprob: -17.376506805419922

Token 799: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006528972648084164
    2. '           ' → logprob: -5.256528854370117
    3. 'mst' → logprob: -6.881528854370117
    4. ' mst' → logprob: -9.006528854370117
    5. '```' → logprob: -9.756528854370117
    6. '   ' → logprob: -10.631528854370117
    7. '       ' → logprob: -10.881528854370117
    8. '                   ' → logprob: -11.631528854370117
    9. '<|end|>' → logprob: -11.756528854370117
    10. '	           ' → logprob: -12.381528854370117

Token 800: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' (adapté à ' mst') → logprob: -0.030094094574451447
    2. ' mst' → logprob: -3.6550941467285156
    3. '           ' → logprob: -5.655094146728516
    4. '               ' → logprob: -8.280094146728516
    5. 'm' → logprob: -11.280094146728516
    6. '   ' → logprob: -11.405094146728516
    7. '       ' → logprob: -12.655094146728516
    8. 'ms' → logprob: -13.155094146728516
    9. 'mt' → logprob: -13.905094146728516
    10. '```' → logprob: -14.030094146728516

Token 801: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.127333340875339e-06
    2. 'cost' → logprob: -12.875003814697266
    3. '_' → logprob: -14.375003814697266
    4. '_used' → logprob: -15.500003814697266
    5. '_code' → logprob: -15.875003814697266
    6. '_COST' → logprob: -15.875003814697266
    7. 'Cost' → logprob: -16.000003814697266
    8. '_c' → logprob: -16.250003814697266
    9. '_cos' → logprob: -16.250003814697266
    10. '_edges' → logprob: -16.250003814697266

Token 802: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20144928991794586
    2. ' +=' → logprob: -1.7014492750167847
    3. '+' → logprob: -10.326449394226074
    4. ']+=' → logprob: -13.201449394226074
    5. '   ' → logprob: -14.451449394226074
    6. '```' → logprob: -15.076449394226074
    7. '+=(' → logprob: -16.326448440551758
    8. '+="' → logprob: -16.326448440551758
    9. '=' → logprob: -16.576448440551758
    10. '    ' → logprob: -16.576448440551758

Token 803: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804149478673935
    2. ' c' → logprob: -3.288041591644287
    3. '	c' → logprob: -16.913042068481445
    4. ' ' → logprob: -19.913042068481445
    5. ')c' → logprob: -20.413042068481445
    6. '_c' → logprob: -20.663042068481445
    7. '   ' → logprob: -21.163042068481445
    8. '$c' → logprob: -21.288042068481445
    9. ' ' → logprob: -21.413042068481445
    10. '(c' → logprob: -22.038042068481445

Token 804: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006230351980775595
    2. '           ' → logprob: -5.131230354309082
    3. '   ' → logprob: -8.631230354309082
    4. '       ' → logprob: -9.506230354309082
    5. ' edges' → logprob: -10.631230354309082
    6. 'edges' → logprob: -11.631230354309082
    7. '
' → logprob: -11.756230354309082
    8. '                   ' → logprob: -12.006230354309082
    9. '```' → logprob: -14.256230354309082
    10. '              ' → logprob: -15.006230354309082

Token 805: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004390134708955884
    2. '           ' → logprob: -8.125438690185547
    3. 'edges' → logprob: -9.625438690185547
    4. ' edges' → logprob: -9.750438690185547
    5. '       ' → logprob: -11.500438690185547
    6. '   ' → logprob: -12.000438690185547
    7. '                   ' → logprob: -13.500438690185547
    8. '
' → logprob: -14.500438690185547
    9. '(edges' → logprob: -15.875438690185547
    10. '              ' → logprob: -16.000438690185547

Token 806: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.09954581409692764
    2. '               ' → logprob: -2.84954571723938
    3. ' edges' → logprob: -3.34954571723938
    4. '           ' → logprob: -6.349545955657959
    5. '   ' → logprob: -10.4745454788208
    6. '       ' → logprob: -12.9745454788208
    7. '                   ' → logprob: -13.3495454788208
    8. '              ' → logprob: -15.2245454788208
    9. '.edges' → logprob: -15.8495454788208
    10. '             ' → logprob: -16.099546432495117

Token 807: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.512236498361744e-07
    2. '_use' → logprob: -15.625000953674316
    3. '_USED' → logprob: -15.625000953674316
    4. 'Used' → logprob: -17.125
    5. '_user' → logprob: -17.25
    6. 'used' → logprob: -17.375
    7. '_' → logprob: -17.375
    8. '_added' → logprob: -17.75
    9. '_needed' → logprob: -17.875
    10. '_using' → logprob: -18.0

Token 808: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10020817816257477
    2. ' +=' → logprob: -2.350208282470703
    3. '+' → logprob: -13.725208282470703
    4. ']+=' → logprob: -15.225208282470703
    5. '+="' → logprob: -16.725208282470703
    6. '+='' → logprob: -16.850208282470703
    7. '<|end|>' → logprob: -17.600208282470703
    8. '=' → logprob: -17.725208282470703
    9. '```' → logprob: -18.725208282470703
    10. '+=(' → logprob: -19.225208282470703

Token 809: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -18.50002670288086
    4. '   ' → logprob: -18.62502670288086
    5. '<|end|>' → logprob: -19.87502670288086
    6. '۱' → logprob: -20.37502670288086
    7. '１' → logprob: -20.93752670288086
    8. ' ' → logprob: -21.18752670288086
    9. '  ' → logprob: -21.75002670288086
    10. '১' → logprob: -21.93752670288086

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.5
    5. '<|end|>' → logprob: -21.0
    6. '۱' → logprob: -22.5
    7. '১' → logprob: -23.375
    8. '१' → logprob: -23.5
    9. '１' → logprob: -23.5625
    10. '  ' → logprob: -24.3125

Token 811: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17099052667617798
    2. '       ' → logprob: -2.420990467071533
    3. '           ' → logprob: -2.920990467071533
    4. '               ' → logprob: -4.295990467071533
    5. '        
' → logprob: -8.295990943908691
    6. '<|end|>' → logprob: -8.545990943908691
    7. '   ' → logprob: -8.670990943908691
    8. '
' → logprob: -9.420990943908691
    9. ' 
' → logprob: -10.545990943908691
    10. ' if' → logprob: -10.795990943908691

Token 812: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24598264694213867
    2. '       ' → logprob: -1.6209826469421387
    3. '
' → logprob: -4.245982646942139
    4. '               ' → logprob: -5.370982646942139
    5. '   ' → logprob: -7.495982646942139
    6. '```' → logprob: -7.870982646942139
    7. '<|end|>' → logprob: -8.870983123779297
    8. ' if' → logprob: -9.745983123779297
    9. '
' → logprob: -9.995983123779297
    10. '	       ' → logprob: -9.995983123779297

Token 813: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5471609830856323
    2. ' if' → logprob: -1.5471609830856323
    3. '               ' → logprob: -2.047161102294922
    4. '           ' → logprob: -2.547161102294922
    5. '
' → logprob: -7.047161102294922
    6. '       ' → logprob: -8.547161102294922
    7. '	if' → logprob: -10.672161102294922
    8. '```' → logprob: -11.172161102294922
    9. '   ' → logprob: -11.297161102294922
    10. '                   ' → logprob: -11.547161102294922

Token 814: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.011047935113310814
    2. ' edges' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.63604736328125
    4. '(edges' → logprob: -16.88604736328125
    5. '.edges' → logprob: -19.01104736328125
    6. 'edge' → logprob: -19.01104736328125
    7. '_edges' → logprob: -20.26104736328125
    8. 'Edges' → logprob: -21.13604736328125
    9. '```' → logprob: -21.13604736328125
    10. 'errors' → logprob: -21.26104736328125

Token 815: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.5577775128767826e-06
    2. 'used' → logprob: -13.000005722045898
    3. '_user' → logprob: -13.625005722045898
    4. '_us' → logprob: -14.625005722045898
    5. '_USED' → logprob: -14.750005722045898
    6. '_use' → logprob: -15.125005722045898
    7. '_edges' → logprob: -15.375005722045898
    8. '_users' → logprob: -15.750005722045898
    9. 's' → logprob: -16.2500057220459
    10. 'Used' → logprob: -16.5000057220459

Token 816: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003630242543295026
    2. ' ==' → logprob: -5.6286301612854
    3. '==
' → logprob: -10.628630638122559
    4. '=' → logprob: -12.378630638122559
    5. '===' → logprob: -14.503630638122559
    6. '>=' → logprob: -14.628630638122559
    7. ']==' → logprob: -15.003630638122559
    8. '==(' → logprob: -15.503630638122559
    9. '	' → logprob: -16.128629684448242
    10. '()==' → logprob: -16.378629684448242

Token 817: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.627176768844947e-05
    2. ' N' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.75009536743164
    4. '	N' → logprob: -20.75009536743164
    5. '
' → logprob: -21.50009536743164
    6. ' ' → logprob: -22.12509536743164
    7. 'n' → logprob: -22.62509536743164
    8. '(N' → logprob: -22.75009536743164
    9. '>N' → logprob: -22.75009536743164
    10. '=N' → logprob: -22.75009536743164

Token 818: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04858975484967232
    2. '-' → logprob: -3.0485897064208984
    3. ' ' → logprob: -13.673589706420898
    4. '<|end|>' → logprob: -14.423589706420898
    5. ' ' → logprob: -14.923589706420898
    6. '   ' → logprob: -15.423589706420898
    7. '	' → logprob: -17.2985897064209
    8. '       ' → logprob: -17.4235897064209
    9. '  ' → logprob: -18.0485897064209
    10. '<|end|>' → logprob: -18.2985897064209

Token 819: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.375015258789062
    4. '<|end|>' → logprob: -19.875015258789062
    5. '```' → logprob: -20.125015258789062
    6. '  ' → logprob: -20.625015258789062
    7. '۱' → logprob: -22.000015258789062
    8. '2' → logprob: -22.250015258789062
    9. '0' → logprob: -22.375015258789062
    10. '১' → logprob: -22.562515258789062

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.75
    4. '<|end|>' → logprob: -18.875
    5. '2' → logprob: -19.25
    6. '0' → logprob: -20.0
    7. '   ' → logprob: -21.0
    8. '۱' → logprob: -21.375
    9. '১' → logprob: -21.8125
    10. 'import' → logprob: -21.875

Token 821: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3251955509185791
    2. ':
' → logprob: -1.450195550918579
    3. '                   ' → logprob: -3.450195550918579
    4. '               ' → logprob: -4.5751953125
    5. '           ' → logprob: -6.9501953125
    6. '                       ' → logprob: -10.9501953125
    7. '       ' → logprob: -10.9501953125
    8. '   ' → logprob: -11.2001953125
    9. ':
' → logprob: -11.9501953125
    10. ':return' → logprob: -12.0751953125

Token 822: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.217072993516922
    2. '               ' → logprob: -1.7170729637145996
    3. '           ' → logprob: -4.2170729637146
    4. 'break' → logprob: -7.7170729637146
    5. '       ' → logprob: -8.967073440551758
    6. '				' → logprob: -9.842073440551758
    7. '	break' → logprob: -9.967073440551758
    8. '   ' → logprob: -10.092073440551758
    9. ' break' → logprob: -11.092073440551758
    10. '		' → logprob: -11.467073440551758

Token 823: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06830942630767822
    2. 'break' (adapté à ' break') → logprob: -3.3183093070983887
    3. '               ' → logprob: -3.9433093070983887
    4. '           ' → logprob: -4.693309307098389
    5. '	break' → logprob: -7.568309307098389
    6. ' break' → logprob: -8.068309783935547
    7. '   ' → logprob: -8.318309783935547
    8. '				' → logprob: -9.693309783935547
    9. '       ' → logprob: -10.068309783935547
    10. '                       ' → logprob: -10.068309783935547

Token 824: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6486796140670776
    2. '
' → logprob: -0.7736796140670776
    3. '   ' → logprob: -4.773679733276367
    4. '        
' → logprob: -5.523679733276367
    5. '    
' → logprob: -6.398679733276367
    6. 'print' → logprob: -6.773679733276367
    7. '<|end|>' → logprob: -7.898679733276367
    8. '```' → logprob: -8.773679733276367
    9. '  
' → logprob: -9.148679733276367
    10. '
' → logprob: -10.523679733276367

Token 825: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15325447916984558
    2. '
' → logprob: -2.653254508972168
    3. '       ' → logprob: -3.278254508972168
    4. '   ' → logprob: -3.653254508972168
    5. '```' → logprob: -4.903254508972168
    6. '    
' → logprob: -8.153254508972168
    7. '        
' → logprob: -8.403254508972168
    8. '``' → logprob: -9.778254508972168
    9. '  
' → logprob: -10.528254508972168
    10. ' print' → logprob: -10.778254508972168

Token 826: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012826144229620695
    2. '   ' → logprob: -7.251282691955566
    3. '       ' → logprob: -7.501282691955566
    4. '```' → logprob: -11.251282691955566
    5. ' print' → logprob: -12.376282691955566
    6. '
' → logprob: -13.001282691955566
    7. '        
' → logprob: -15.126282691955566
    8. '    
' → logprob: -15.501282691955566
    9. '	print' → logprob: -16.62628173828125
    10. '``' → logprob: -16.87628173828125

Token 827: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007151735480874777
    2. '       ' → logprob: -7.250715255737305
    3. ' print' → logprob: -12.750715255737305
    4. '   ' → logprob: -13.000715255737305
    5. '```' → logprob: -17.625715255737305
    6. '
' → logprob: -20.000715255737305
    7. '	print' → logprob: -20.250715255737305
    8. 'printf' → logprob: -20.500715255737305
    9. 'pr' → logprob: -20.750715255737305
    10. ' ' → logprob: -20.875715255737305

Token 828: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07946865260601044
    2. '       ' → logprob: -2.5794687271118164
    3. ' print' → logprob: -7.704468727111816
    4. '   ' → logprob: -9.329468727111816
    5. '```' → logprob: -10.329468727111816
    6. '(print' → logprob: -12.954468727111816
    7. '(' → logprob: -13.079468727111816
    8. '	print' → logprob: -14.204468727111816
    9. '
' → logprob: -14.704468727111816
    10. '``' → logprob: -15.454468727111816

Token 829: ' total' (ID: 3609)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.01620117388665676
    2. 'print' → logprob: -4.141201019287109
    3. ' mst' → logprob: -9.26620101928711
    4. '
' → logprob: -10.26620101928711
    5. '   ' → logprob: -11.64120101928711
    6. 'm' → logprob: -11.76620101928711
    7. ' print' → logprob: -12.39120101928711
    8. 'mnt' → logprob: -12.51620101928711
    9. 'ms' → logprob: -12.76620101928711
    10. 'result' → logprob: -13.39120101928711

Token 830: ' MST' (ID: 123058)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.12052948027849197
    2. 'print' → logprob: -2.6205294132232666
    3. 'cost' → logprob: -3.3705294132232666
    4. ' mst' → logprob: -5.745529651641846
    5. ' cost' → logprob: -6.870529651641846
    6. '   ' → logprob: -6.995529651641846
    7. ' print' → logprob: -7.495529651641846
    8. '(' → logprob: -7.995529651641846
    9. '(m' → logprob: -9.245529174804688
    10. 'm' → logprob: -9.495529174804688

Token 831: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00016110755677800626
    2. 'cost' → logprob: -8.875161170959473
    3. '_' → logprob: -12.000161170959473
    4. ' cost' → logprob: -12.125161170959473
    5. '   ' → logprob: -13.000161170959473
    6. '_COST' → logprob: -13.250161170959473
    7. 'Cost' → logprob: -14.125161170959473
    8. '_m' → logprob: -14.250161170959473
    9. ' _' → logprob: -14.375161170959473
    10. '```' → logprob: -14.375161170959473

Token 832: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011548420414328575
    2. 'print' → logprob: -4.5115485191345215
    3. '   ' → logprob: -7.6365485191345215
    4. '```' → logprob: -11.761548042297363
    5. '
' → logprob: -11.886548042297363
    6. ' print' → logprob: -13.011548042297363
    7. '        
' → logprob: -14.011548042297363
    8. '    
' → logprob: -15.636548042297363
    9. '	print' → logprob: -16.76154899597168
    10. '``' → logprob: -17.38654899597168

Token 833: ' satisfies' (ID: 126205)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.9735877513885498
    2. ' preserves' → logprob: -1.3485877513885498
    3. 'pres' → logprob: -2.34858775138855
    4. ' maintains' → logprob: -2.59858775138855
    5. 'connect' → logprob: -2.59858775138855
    6. ' keeps' → logprob: -3.34858775138855
    7. ' ensures' → logprob: -3.72358775138855
    8. 'ke' → logprob: -3.84858775138855
    9. '#' → logprob: -4.473587989807129
    10. ' covers' → logprob: -5.098587989807129

Token 834: ' constraints' (ID: 31060)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20376986265182495
    2. 'print' → logprob: -1.8287699222564697
    3. 'dist' → logprob: -4.453769683837891
    4. '   ' → logprob: -5.328769683837891
    5. '       ' → logprob: -5.828769683837891
    6. ' the' → logprob: -5.828769683837891
    7. '```' → logprob: -7.578769683837891
    8. 'distance' → logprob: -8.07876968383789
    9. 'mst' → logprob: -8.32876968383789
    10. 'constraints' → logprob: -9.45376968383789

Token 835: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005425611976534128
    2. 'print' → logprob: -5.255425453186035
    3. '   ' → logprob: -8.630425453186035
    4. '```' → logprob: -11.880425453186035
    5. '        
' → logprob: -12.505425453186035
    6. '
' → logprob: -13.380425453186035
    7. ' print' → logprob: -14.505425453186035
    8. '    
' → logprob: -15.505425453186035
    9. '           ' → logprob: -15.755425453186035
    10. '``' → logprob: -16.75542640686035

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007263593375682831
    2. 'print' → logprob: -5.007263660430908
    3. '   ' → logprob: -7.632263660430908
    4. '
' → logprob: -10.25726318359375
    5. '```' → logprob: -10.75726318359375
    6. '        
' → logprob: -12.50726318359375
    7. ' print' → logprob: -13.00726318359375
    8. '    
' → logprob: -14.50726318359375
    9. '           ' → logprob: -16.00726318359375
    10. '  
' → logprob: -16.13226318359375

Token 837: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.160971628967673e-05
    2. '       ' → logprob: -9.500082015991211
    3. ' print' → logprob: -12.500082015991211
    4. '   ' → logprob: -12.750082015991211
    5. '```' → logprob: -16.75008201599121
    6. '	print' → logprob: -19.12508201599121
    7. '
' → logprob: -19.75008201599121
    8. '`' → logprob: -21.50008201599121
    9. '``' → logprob: -21.50008201599121
    10. 'printf' → logprob: -21.75008201599121

Token 838: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '(ms' → logprob: -15.750021934509277
    4. '(f' → logprob: -17.25002098083496
    5. '('' → logprob: -18.75002098083496
    6. '("("' → logprob: -19.12502098083496
    7. '(M' → logprob: -20.25002098083496
    8. ' (' → logprob: -20.50002098083496
    9. '((' → logprob: -20.50002098083496
    10. '(mt' → logprob: -20.50002098083496

Token 839: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -15.875
    3. '(st' → logprob: -17.875
    4. ' st' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. '_st' → logprob: -19.125
    7. '[' → logprob: -20.25
    8. '\' → logprob: -20.5
    9. 'ST' → logprob: -20.5
    10. '	st' → logprob: -20.625

Token 840: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. '_COST' → logprob: -17.5
    4. 'cost' → logprob: -18.5
    5. '_cos' → logprob: -19.375
    6. 'Cost' → logprob: -19.5
    7. ')' → logprob: -19.625
    8. '_c' → logprob: -19.75
    9. ')_' → logprob: -19.75
    10. '__' → logprob: -20.375

Token 841: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. ')
' → logprob: -10.12505054473877
    3. '())' → logprob: -12.25005054473877
    4. '()' → logprob: -12.87505054473877
    5. ' )' → logprob: -12.87505054473877
    6. ')`' → logprob: -16.375049591064453
    7. '```' → logprob: -16.500049591064453
    8. '   ' → logprob: -16.875049591064453
    9. '}' → logprob: -17.125049591064453
    10. ')

' → logprob: -17.125049591064453

Token 842: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.577836275100708
    2. ' __' → logprob: -0.827836275100708
    3. '_' → logprob: -6.327836036682129
    4. '___' → logprob: -9.702836036682129
    5. ''' → logprob: -11.327836036682129
    6. '_name' → logprob: -11.452836036682129
    7. '"' → logprob: -12.077836036682129
    8. ' _' → logprob: -12.077836036682129
    9. 'if' → logprob: -12.702836036682129
    10. '____' → logprob: -12.952836036682129

Token 844: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013733251951634884
    2. '==' → logprob: -4.388733386993408
    3. ' ==' → logprob: -6.888733386993408
    4. '=="' → logprob: -9.51373291015625
    5. '_' → logprob: -10.01373291015625
    6. ' __' → logprob: -10.38873291015625
    7. '=='' → logprob: -10.88873291015625
    8. '__.__' → logprob: -12.01373291015625
    9. '___' → logprob: -12.76373291015625
    10. '__
' → logprob: -12.76373291015625

Token 845: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.60414821645827e-06
    2. '__.__' → logprob: -12.875004768371582
    3. '__
' → logprob: -13.625004768371582
    4. '==' → logprob: -15.250004768371582
    5. '____' → logprob: -15.500004768371582
    6. '___' → logprob: -15.750004768371582
    7. '_' → logprob: -16.250003814697266
    8. '__.' → logprob: -16.750003814697266
    9. '```' → logprob: -17.500003814697266
    10. '__('' → logprob: -18.250003814697266

Token 846: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05912809446454048
    2. '==' → logprob: -3.0591280460357666
    3. ' ==' → logprob: -4.684128284454346
    4. '=="' → logprob: -7.059128284454346
    5. '__.__' → logprob: -8.434127807617188
    6. '_' → logprob: -9.684127807617188
    7. '=='' → logprob: -9.809127807617188
    8. '.__' → logprob: -11.059127807617188
    9. '=' → logprob: -11.809127807617188
    10. '__["' → logprob: -12.184127807617188

Token 847: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694427371025085
    2. ''' → logprob: -2.1269443035125732
    3. ' "__' → logprob: -11.376944541931152
    4. '__' → logprob: -12.501944541931152
    5. ' '__' → logprob: -14.751944541931152
    6. '"user' → logprob: -15.251944541931152
    7. '"name' → logprob: -16.626943588256836
    8. '("__' → logprob: -17.501943588256836
    9. '"class' → logprob: -17.751943588256836
    10. '   ' → logprob: -18.126943588256836

Token 848: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. 'name' → logprob: -14.250000953674316
    3. '__' → logprob: -14.500000953674316
    4. '_main' → logprob: -16.625001907348633
    5. ' main' → logprob: -17.375001907348633
    6. '"' → logprob: -17.875001907348633
    7. ''' → logprob: -20.375001907348633
    8. '	main' → logprob: -20.625001907348633
    9. 'ma' → logprob: -21.000001907348633
    10. '-main' → logprob: -21.125001907348633

Token 849: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3177764117717743
    2. '__' → logprob: -1.3177764415740967
    3. '__':
' → logprob: -5.567776203155518
    4. '__.' → logprob: -8.567776679992676
    5. '__["' → logprob: -8.942776679992676
    6. '__.__' → logprob: -9.442776679992676
    7. '__:' → logprob: -9.692776679992676
    8. '():
' → logprob: -9.817776679992676
    9. '__
' → logprob: -9.942776679992676
    10. '.__' → logprob: -10.442776679992676

Token 850: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009958774782717228
    2. ' main' → logprob: -4.884958744049072
    3. '   ' → logprob: -6.759958744049072
    4. '	main' → logprob: -6.759958744049072
    5. '_main' → logprob: -11.00995922088623
    6. '(main' → logprob: -11.38495922088623
    7. '    
' → logprob: -13.63495922088623
    8. '.main' → logprob: -14.13495922088623
    9. '```' → logprob: -15.00995922088623
    10. 'Main' → logprob: -15.13495922088623

Token 851: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -19.25
    4. '   ' → logprob: -21.625
    5. '_main' → logprob: -24.375
    6. '(main' → logprob: -24.625
    7. '.main' → logprob: -25.125
    8. 'Main' → logprob: -25.5
    9. '```' → logprob: -26.375
    10. '
' → logprob: -27.0

Token 852: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 850
Tokens correctement prédits (1ère position, stricte): 304
Tokens correctement prédits (1ère position, avec adaptation): 334
Tokens correctement prédits (top 10): 685
Précision stricte (1ère position): 35.76%
Précision adaptée (1ère position): 39.29%
Précision (top 10): 80.59%
================================================================================
