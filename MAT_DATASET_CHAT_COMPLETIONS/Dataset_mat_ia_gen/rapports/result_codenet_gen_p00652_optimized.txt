================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input=sys.stdin.readline

while True:
    n,m,w,h,S=map(int,input().split())
    if n==0 and m==0 and w==0 and h==0 and S==0:
        break
    l=[0]*m
    r=[0]*m
    for i in range(m):
        li,ri=map(int,input().split())
        l[i]=li
        r[i]=ri
    almonds_y=[]
    almonds_x=[]
    for _ in range(n):
        x,y= map(float,input().split())
        almonds_x.append(x)
        almonds_y.append(y)
    prefix_almonds_num=[0]*(m+1)
    areas=[0]*m
    for i in range(m):
        h_strip = l[i]- (l[i-1] if i>0 else 0)
        areas[i]= h_strip * w
    prefix_areas=[0]*(m+1)
    for i in range(m):
        prefix_areas[i+1]=prefix_areas[i]+areas[i]
    almonds_in_strip=[0]*m
    # assign almonds to strips
    # each strip is between l[i-1] and l[i]
    # as l is sorted, use bisect_right on l with almond_y to find strip
    for y in almonds_y:
        idx=bisect.bisect_right(l,y)-1
        if 0<=idx<m:
            almonds_in_strip[idx]+=1
    prefix_almonds_num=[0]*(m+1)
    for i in range(m):
        prefix_almonds_num[i+1]=prefix_almonds_num[i]+almonds_in_strip[i]
    res=n+1
    j=0
    # two pointers on prefix_areas to find minimal almonds in subinterval with area>=S
    for i in range(m):
        while j<m and prefix_areas[j+1]-prefix_areas[i]<S:
            j+=1
        if j>=m:
            break
        res=min(res,prefix_almonds_num[j+1]-prefix_almonds_num[i])
    if S==0:
        res=0
    print(res if res<=n else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5048530030981055e-06
    2. 'ec' → logprob: -14.250001907348633
    3. 't' → logprob: -15.125001907348633
    4. 'e' → logprob: -15.375001907348633
    5. 'ected' → logprob: -15.625001907348633
    6. 'ection' → logprob: -16.250001907348633
    7. 'ectl' → logprob: -17.500001907348633
    8. 'ex' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. 'truct' → logprob: -18.250001907348633

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24904568493366241
    2. '<|end|>' → logprob: -2.9990456104278564
    3. '
' → logprob: -3.3740456104278564
    4. '\n' → logprob: -3.4990456104278564
    5. '\' → logprob: -3.7490456104278564
    6. '' → logprob: -3.8740456104278564
    7. '

' → logprob: -3.9990456104278564
    8. 'import' → logprob: -4.1240458488464355
    9. 'newline' → logprob: -4.8740458488464355
    10. '```' → logprob: -5.3740458488464355

Token 7: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.676052987575531
    2. 'import' → logprob: -2.301053047180176
    3. '

' → logprob: -2.426053047180176
    4. '\' → logprob: -2.801053047180176
    5. '
' → logprob: -3.051053047180176
    6. '```' → logprob: -3.051053047180176
    7. '.' → logprob: -3.426053047180176
    8. 'from' → logprob: -3.676053047180176
    9. '\n' → logprob: -3.801053047180176
    10. '#' → logprob: -4.301053047180176

Token 8: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005070687271654606
    2. '.' → logprob: -5.755070686340332
    3. '=' → logprob: -7.380070686340332
    4. '()' → logprob: -7.880070686340332
    5. ')' → logprob: -8.380070686340332
    6. '```' → logprob: -8.505070686340332
    7. '_' → logprob: -9.130070686340332
    8. '<|end|>' → logprob: -9.880070686340332
    9. '(
' → logprob: -10.005070686340332
    10. '(

' → logprob: -10.380070686340332

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00043949027894996107
    2. '.readline' → logprob: -8.000439643859863
    3. ' .' → logprob: -10.375439643859863
    4. '[' → logprob: -11.000439643859863
    5. '.stdin' → logprob: -11.375439643859863
    6. '.setdefault' → logprob: -12.000439643859863
    7. ''.' → logprob: -12.125439643859863
    8. '.
' → logprob: -12.250439643859863
    9. '.get' → logprob: -12.625439643859863
    10. '```' → logprob: -12.750439643859863

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0063222856260836124
    2. '.read' → logprob: -5.131322383880615
    3. '.' → logprob: -7.881322383880615
    4. '.readlines' → logprob: -11.631321907043457
    5. 'read' → logprob: -12.506321907043457
    6. '.Read' → logprob: -13.381321907043457
    7. ' readline' → logprob: -14.006321907043457
    8. '_read' → logprob: -15.256321907043457
    9. '.buffer' → logprob: -15.506321907043457
    10. '.re' → logprob: -15.881321907043457

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24066568911075592
    2. '(' → logprob: -1.6156656742095947
    3. '(
' → logprob: -4.990665912628174
    4. '
' → logprob: -5.240665912628174
    5. '()
' → logprob: -6.365665912628174
    6. ')' → logprob: -8.615665435791016
    7. '(

' → logprob: -8.615665435791016
    8. '()

' → logprob: -8.615665435791016
    9. '<|end|>' → logprob: -8.615665435791016
    10. '()\' → logprob: -8.990665435791016

Token 12: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3352464437484741
    2. '(' → logprob: -1.3352464437484741
    3. 'def' → logprob: -4.085246562957764
    4. 's' → logprob: -6.710246562957764
    5. '(n' → logprob: -7.085246562957764
    6. ')' → logprob: -7.210246562957764
    7. 'data' → logprob: -7.710246562957764
    8. 'a' → logprob: -8.210246086120605
    9. 'n' → logprob: -8.585246086120605
    10. '()
' → logprob: -8.585246086120605

Token 13: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.11406823247671127
    2. ' ' → logprob: -2.2390682697296143
    3. ' not' → logprob: -7.489068031311035
    4. 'True' → logprob: -8.239068031311035
    5. '  ' → logprob: -8.614068031311035
    6. ' )' → logprob: -9.114068031311035
    7. '(True' → logprob: -10.239068031311035
    8. ' (' → logprob: -10.364068031311035
    9. '    ' → logprob: -11.864068031311035
    10. ' ' → logprob: -12.114068031311035

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008304747752845287
    2. '():' → logprob: -7.25083065032959
    3. ' :' → logprob: -9.25083065032959
    4. ':**' → logprob: -11.00083065032959
    5. ':
' → logprob: -13.12583065032959
    6. '):' → logprob: -13.62583065032959
    7. '(:' → logprob: -13.87583065032959
    8. ' ():' → logprob: -14.50083065032959
    9. ':return' → logprob: -14.62583065032959
    10. '   ' → logprob: -14.75083065032959

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005834118463099003
    2. '    
' → logprob: -5.255834102630615
    3. '    ' → logprob: -8.755834579467773
    4. ':' → logprob: -9.380834579467773
    5. ' ' → logprob: -9.380834579467773
    6. ' 
' → logprob: -9.880834579467773
    7. '  
' → logprob: -10.380834579467773
    8. '    
    
' → logprob: -10.505834579467773
    9. '     
' → logprob: -11.130834579467773
    10. '<|end|>' → logprob: -11.380834579467773

Token 16: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9006009697914124
    2. ' line' → logprob: -1.0256009101867676
    3. 'n' (adapté à ' n') → logprob: -1.9006009101867676
    4. 'data' → logprob: -3.1506009101867676
    5. ' n' → logprob: -4.525600910186768
    6. ' data' → logprob: -5.400600910186768
    7. '   ' → logprob: -5.400600910186768
    8. 'num' → logprob: -5.775600910186768
    9. 'x' → logprob: -6.025600910186768
    10. 'try' → logprob: -6.025600910186768

Token 17: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5698181390762329
    2. '=' → logprob: -1.069818139076233
    3. ' ==' → logprob: -2.4448180198669434
    4. '==' → logprob: -5.819818019866943
    5. ' ' → logprob: -7.319818019866943
    6. ' >' → logprob: -7.819818019866943
    7. '=int' → logprob: -8.569818496704102
    8. '>' → logprob: -9.194818496704102
    9. ' <=' → logprob: -9.944818496704102
    10. ' <' → logprob: -10.069818496704102

Token 18: ',w' (ID: 49598)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760994553565979
    2. '=' → logprob: -0.8260994553565979
    3. ',' → logprob: -9.451099395751953
    4. ' >' → logprob: -10.701099395751953
    5. '>' → logprob: -10.951099395751953
    6. ' ' → logprob: -11.326099395751953
    7. ' ,' → logprob: -11.951099395751953
    8. '=input' → logprob: -12.076099395751953
    9. '=int' → logprob: -12.201099395751953
    10. ')' → logprob: -12.451099395751953

Token 19: ',h' (ID: 42751)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002403243212029338
    2. ' =' → logprob: -6.127403259277344
    3. '=input' → logprob: -8.502403259277344
    4. '=int' → logprob: -11.752403259277344
    5. '=line' → logprob: -13.002403259277344
    6. '=list' → logprob: -13.252403259277344
    7. '=

' → logprob: -13.252403259277344
    8. '=sys' → logprob: -15.002403259277344
    9. '=n' → logprob: -15.502403259277344
    10. '=`' → logprob: -15.752403259277344

Token 20: ',S' (ID: 42097)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014444597065448761
    2. ' =' → logprob: -4.264444828033447
    3. '=input' → logprob: -8.264444351196289
    4. ',' → logprob: -11.389444351196289
    5. '=line' → logprob: -12.639444351196289
    6. ' ' → logprob: -13.139444351196289
    7. '=list' → logprob: -13.514444351196289
    8. '=int' → logprob: -13.889444351196289
    9. '=sys' → logprob: -13.889444351196289
    10. '=

' → logprob: -14.389444351196289

Token 21: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020848317071795464
    2. ' =' → logprob: -6.502084732055664
    3. '=input' → logprob: -7.502084732055664
    4. ',' → logprob: -10.627084732055664
    5. '=

' → logprob: -13.377084732055664
    6. '=int' → logprob: -13.752084732055664
    7. '=line' → logprob: -13.752084732055664
    8. ' ' → logprob: -14.502084732055664
    9. '=sys' → logprob: -14.627084732055664
    10. '=list' → logprob: -14.627084732055664

Token 22: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00826702918857336
    2. ' map' → logprob: -5.133266925811768
    3. 'input' → logprob: -6.383266925811768
    4. 'list' → logprob: -7.383266925811768
    5. '[' → logprob: -12.258267402648926
    6. ' input' → logprob: -12.383267402648926
    7. '(map' → logprob: -12.383267402648926
    8. 'm' → logprob: -12.758267402648926
    9. 'sys' → logprob: -12.883267402648926
    10. '	map' → logprob: -13.133267402648926

Token 23: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0575970895588398
    2. '(int' → logprob: -3.0575971603393555
    3. '(lambda' → logprob: -5.5575971603393555
    4. '<|end|>' → logprob: -5.9325971603393555
    5. '(str' → logprob: -6.8075971603393555
    6. '(input' → logprob: -7.5575971603393555
    7. '()' → logprob: -8.807597160339355
    8. '(
' → logprob: -8.932597160339355
    9. '<|end|>' → logprob: -10.057597160339355
    10. '(eval' → logprob: -10.182597160339355

Token 24: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.038265250623226166
    2. ',' → logprob: -3.2882652282714844
    3. 'input' → logprob: -9.038265228271484
    4. '(input' → logprob: -9.538265228271484
    5. ')' → logprob: -11.538265228271484
    6. '(sys' → logprob: -11.663265228271484
    7. 'sys' → logprob: -12.538265228271484
    8. '(' → logprob: -13.163265228271484
    9. ' input' → logprob: -13.413265228271484
    10. ' ,' → logprob: -13.538265228271484

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010499580530449748
    2. '())' → logprob: -7.501049995422363
    3. '()' → logprob: -7.626049995422363
    4. ')' → logprob: -12.001049995422363
    5. '()))' → logprob: -13.626049995422363
    6. ' ().' → logprob: -14.501049995422363
    7. '();)' → logprob: -15.126049995422363
    8. '(' → logprob: -15.501049995422363
    9. ' ())' → logprob: -15.626049995422363
    10. '()
' → logprob: -16.126049041748047

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005665206350386143
    2. 'strip' → logprob: -5.255665302276611
    3. 'rstrip' → logprob: -7.755665302276611
    4. ' split' → logprob: -13.130664825439453
    5. '().' → logprob: -14.630664825439453
    6. '(split' → logprob: -15.380664825439453
    7. ')' → logprob: -15.755664825439453
    8. '.split' → logprob: -16.505664825439453
    9. ' strip' → logprob: -16.880664825439453
    10. 's' → logprob: -17.005664825439453

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014133312506601214
    2. '())' → logprob: -6.876413345336914
    3. '))' → logprob: -8.376413345336914
    4. '()' → logprob: -9.001413345336914
    5. ')
' → logprob: -11.751413345336914
    6. '),' → logprob: -12.251413345336914
    7. ' )' → logprob: -13.001413345336914
    8. '(' → logprob: -13.251413345336914
    9. '):' → logprob: -13.376413345336914
    10. '`)' → logprob: -13.501413345336914

Token 28: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8235065340995789
    2. ' if' → logprob: -0.8235065340995789
    3. ' ' → logprob: -2.6985065937042236
    4. '    ' → logprob: -4.4485063552856445
    5. 'if' (adapté à ' if') → logprob: -4.4485063552856445
    6. ':' → logprob: -4.5735063552856445
    7. '<|end|>' → logprob: -4.5735063552856445
    8. '  ' → logprob: -6.0735063552856445
    9. ')' → logprob: -6.3235063552856445
    10. ':
' → logprob: -6.4485063552856445

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029093489050865173
    2. 'n' → logprob: -3.9040935039520264
    3. ' not' → logprob: -4.779093265533447
    4. 'not' → logprob: -9.404093742370605
    5. ' ' → logprob: -10.654093742370605
    6. '(n' → logprob: -13.404093742370605
    7. ' (' → logprob: -13.904093742370605
    8. '	n' → logprob: -14.029093742370605
    9. ' ' → logprob: -14.529093742370605
    10. '   ' → logprob: -15.029093742370605

Token 31: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22701595723628998
    2. ' ==' → logprob: -1.6020159721374512
    3. '<' → logprob: -7.352015972137451
    4. '<=' → logprob: -7.977015972137451
    5. '=' → logprob: -8.352015495300293
    6. ' <' → logprob: -8.977015495300293
    7. '==-' → logprob: -9.602015495300293
    8. ' <=' → logprob: -9.727015495300293
    9. ')' → logprob: -9.977015495300293
    10. ')==' → logprob: -10.227015495300293

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025773211382329464
    2. ' ' → logprob: -6.002577304840088
    3. 'm' → logprob: -9.377577781677246
    4. '   ' → logprob: -12.377577781677246
    5. '-' → logprob: -12.877577781677246
    6. '  ' → logprob: -13.065077781677246
    7. '```' → logprob: -13.565077781677246
    8. 'w' → logprob: -13.627577781677246
    9. ' m' → logprob: -13.877577781677246
    10. 's' → logprob: -14.315077781677246

Token 33: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25450316071510315
    2. 'and' → logprob: -1.5045031309127808
    3. ':' → logprob: -6.00450325012207
    4. ' ' → logprob: -9.75450325012207
    5. '	and' → logprob: -10.25450325012207
    6. ' or' → logprob: -12.62950325012207
    7. ' a' → logprob: -12.87950325012207
    8. '<|end|>' → logprob: -13.75450325012207
    9. ' :' → logprob: -14.62950325012207
    10. '  ' → logprob: -14.75450325012207

Token 34: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1002078503370285
    2. ' m' → logprob: -2.350207805633545
    3. '   ' → logprob: -13.850208282470703
    4. '	m' → logprob: -16.100208282470703
    5. ' ' → logprob: -16.225208282470703
    6. '    ' → logprob: -16.850208282470703
    7. ',m' → logprob: -17.475208282470703
    8. ' ' → logprob: -18.100208282470703
    9. '  ' → logprob: -18.475208282470703
    10. 'n' → logprob: -19.475208282470703

Token 35: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.2166411478538066e-05
    2. ' ==' → logprob: -9.875052452087402
    3. '===' → logprob: -15.500052452087402
    4. '==
' → logprob: -15.750052452087402
    5. '()==' → logprob: -16.125051498413086
    6. ')==' → logprob: -16.750051498413086
    7. ']==' → logprob: -16.750051498413086
    8. '=' → logprob: -17.000051498413086
    9. '==-' → logprob: -17.375051498413086
    10. '```' → logprob: -17.875051498413086

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '۰' → logprob: -16.437835693359375
    4. '  ' → logprob: -17.187835693359375
    5. '   ' → logprob: -17.187835693359375
    6. 'and' → logprob: -17.437835693359375
    7. '<|end|>' → logprob: -17.500335693359375
    8. '```' → logprob: -17.625335693359375
    9. '<|end|>' → logprob: -17.750335693359375
    10. 'o' → logprob: -18.250335693359375

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02640027366578579
    2. 'and' → logprob: -3.651400327682495
    3. ' ' → logprob: -10.526400566101074
    4. '   ' → logprob: -10.526400566101074
    5. '	and' → logprob: -10.651400566101074
    6. ':' → logprob: -12.026400566101074
    7. '<|end|>' → logprob: -12.151400566101074
    8. '    ' → logprob: -12.776400566101074
    9. '0' → logprob: -12.901400566101074
    10. '<|end|>' → logprob: -13.276400566101074

Token 38: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01607320085167885
    2. ' w' → logprob: -4.141073226928711
    3. '0' → logprob: -10.266073226928711
    4. 'h' → logprob: -13.766073226928711
    5. ' ' → logprob: -14.016073226928711
    6. '	w' → logprob: -14.141073226928711
    7. '   ' → logprob: -15.391073226928711
    8. '<w' → logprob: -15.516073226928711
    9. 'W' → logprob: -16.01607322692871
    10. '  ' → logprob: -16.01607322692871

Token 39: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.5776860184123507e-06
    2. ' ==' → logprob: -13.12500286102295
    3. '==
' → logprob: -15.87500286102295
    4. '===' → logprob: -16.375001907348633
    5. '==-' → logprob: -16.500001907348633
    6. '=' → logprob: -16.625001907348633
    7. '()==' → logprob: -17.000001907348633
    8. ']==' → logprob: -17.125001907348633
    9. '```' → logprob: -17.375001907348633
    10. '==(' → logprob: -17.375001907348633

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005550591740757227
    2. ' ' → logprob: -7.500555038452148
    3. 'h' → logprob: -13.375555038452148
    4. ' h' → logprob: -16.18805503845215
    5. '  ' → logprob: -16.18805503845215
    6. '   ' → logprob: -16.31305503845215
    7. '```' → logprob: -16.68805503845215
    8. '۰' → logprob: -17.06305503845215
    9. '=' → logprob: -17.62555503845215
    10. 's' → logprob: -18.68805503845215

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005297673400491476
    2. 'and' → logprob: -5.255297660827637
    3. ' ' → logprob: -9.755297660827637
    4. '0' → logprob: -12.755297660827637
    5. '<|end|>' → logprob: -13.880297660827637
    6. '	and' → logprob: -14.380297660827637
    7. ' ' → logprob: -15.505297660827637
    8. '```' → logprob: -15.505297660827637
    9. '   ' → logprob: -15.630297660827637
    10. '  ' → logprob: -15.755297660827637

Token 42: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25424256920814514
    2. 'h' → logprob: -1.5042425394058228
    3. '0' → logprob: -6.629242420196533
    4. ' ' → logprob: -7.004242420196533
    5. '	h' → logprob: -10.129242897033691
    6. '<|end|>' → logprob: -11.754242897033691
    7. '```' → logprob: -12.129242897033691
    8. '  ' → logprob: -12.254242897033691
    9. ' and' → logprob: -12.254242897033691
    10. ' S' → logprob: -12.504242897033691

Token 43: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -8.537868779967539e-06
    2. ' ==' → logprob: -11.750008583068848
    3. '0' → logprob: -15.625008583068848
    4. ']==' → logprob: -16.12500762939453
    5. '=' → logprob: -16.37500762939453
    6. '()==' → logprob: -16.50000762939453
    7. '==
' → logprob: -16.62500762939453
    8. ')==' → logprob: -16.62500762939453
    9. '```' → logprob: -16.87500762939453
    10. '==(' → logprob: -17.37500762939453

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. ' and' → logprob: -16.875015258789062
    4. '   ' → logprob: -17.375015258789062
    5. '۰' → logprob: -17.375015258789062
    6. '<|end|>' → logprob: -18.000015258789062
    7. 'and' → logprob: -18.500015258789062
    8. '  ' → logprob: -18.500015258789062
    9. '<|end|>' → logprob: -18.687515258789062
    10. '০' → logprob: -18.750015258789062

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04119173809885979
    2. ':' → logprob: -3.291191816329956
    3. 'and' → logprob: -6.041191577911377
    4. '   ' → logprob: -7.416191577911377
    5. ':return' → logprob: -10.041192054748535
    6. ' :' → logprob: -10.166192054748535
    7. ' ' → logprob: -10.291192054748535
    8. ':
' → logprob: -10.416192054748535
    9. '	and' → logprob: -11.666192054748535
    10. '<|end|>' → logprob: -13.041192054748535

Token 46: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.20921678841114044
    2. '0' → logprob: -2.209216833114624
    3. ' S' → logprob: -2.584216833114624
    4. ' ' → logprob: -5.709216594696045
    5. '   ' → logprob: -8.834217071533203
    6. '  ' → logprob: -9.709217071533203
    7. 's' → logprob: -11.834217071533203
    8. '    ' → logprob: -12.584217071533203
    9. ' and' → logprob: -13.334217071533203
    10. '	S' → logprob: -13.334217071533203

Token 47: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001512004528194666
    2. ' ==' → logprob: -6.501512050628662
    3. '=' → logprob: -12.751511573791504
    4. ')==' → logprob: -13.001511573791504
    5. '()==' → logprob: -13.501511573791504
    6. '==-' → logprob: -13.501511573791504
    7. ']==' → logprob: -14.126511573791504
    8. '==(' → logprob: -14.751511573791504
    9. '==
' → logprob: -15.251511573791504
    10. '=='' → logprob: -15.626511573791504

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.375036239624023
    4. '  ' → logprob: -18.000036239624023
    5. '۰' → logprob: -19.000036239624023
    6. '1' → logprob: -19.750036239624023
    7. '    ' → logprob: -19.875036239624023
    8. ')' → logprob: -19.875036239624023
    9. '-' → logprob: -19.875036239624023
    10. '```' → logprob: -20.750036239624023

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047940885997377336
    2. '   ' → logprob: -8.250479698181152
    3. ':
' → logprob: -8.500479698181152
    4. ' :' → logprob: -12.125479698181152
    5. ':return' → logprob: -12.250479698181152
    6. '       ' → logprob: -12.750479698181152
    7. '):' → logprob: -14.750479698181152
    8. '	break' → logprob: -15.375479698181152
    9. ' break' → logprob: -15.500479698181152
    10. '.' → logprob: -15.625479698181152

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02060413360595703
    2. '   ' → logprob: -3.895604133605957
    3. '	break' → logprob: -10.395604133605957
    4. ' break' → logprob: -11.270604133605957
    5. '     ' → logprob: -12.645604133605957
    6. '    ' → logprob: -12.895604133605957
    7. 'break' → logprob: -13.145604133605957
    8. '      ' → logprob: -13.520604133605957
    9. '	' → logprob: -13.520604133605957
    10. '   ' → logprob: -13.645604133605957

Token 51: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5793696641921997
    2. ' break' → logprob: -0.8293696641921997
    3. '       ' → logprob: -5.82936954498291
    4. '   ' → logprob: -7.95436954498291
    5. '	break' → logprob: -8.95436954498291
    6. '```' → logprob: -13.45436954498291
    7. '           ' → logprob: -13.95436954498291
    8. '_break' → logprob: -14.57936954498291
    9. '-break' → logprob: -14.82936954498291
    10. 'b' → logprob: -15.07936954498291

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3928564488887787
    2. '
' → logprob: -1.517856478691101
    3. '    
' → logprob: -2.8928563594818115
    4. '[' → logprob: -4.767856597900391
    5. 'n' → logprob: -4.892856597900391
    6. '' → logprob: -5.017856597900391
    7. ' 
' → logprob: -5.767856597900391
    8. '   
' → logprob: -6.267856597900391
    9. '    ' → logprob: -6.267856597900391
    10. ' ' → logprob: -6.392856597900391

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10352907329797745
    2. '    
' → logprob: -3.4785289764404297
    3. '
' → logprob: -4.22852897644043
    4. 'x' → logprob: -4.60352897644043
    5. 'a' → logprob: -5.47852897644043
    6. '[' → logprob: -5.72852897644043
    7. 'data' → logprob: -5.97852897644043
    8. '```' → logprob: -6.22852897644043
    9. 'positions' → logprob: -6.35352897644043
    10. 'tokens' → logprob: -6.72852897644043

Token 54: ' l' (ID: 305)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.937696099281311
    2. '   ' → logprob: -2.0626959800720215
    3. 'x' → logprob: -2.1876959800720215
    4. 'a' → logprob: -2.4376959800720215
    5. 'dp' → logprob: -2.9376959800720215
    6. 'positions' → logprob: -2.9376959800720215
    7. 'points' → logprob: -3.1876959800720215
    8. 'l' (adapté à ' l') → logprob: -3.8126959800720215
    9. 'data' → logprob: -4.1876959800720215
    10. ' positions' → logprob: -4.1876959800720215

Token 55: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0919137001037598
    2. '=[]' → logprob: -1.3419137001037598
    3. 'ist' → logprob: -2.5919137001037598
    4. 'eft' → logprob: -2.7169137001037598
    5. 'ine' → logprob: -2.8419137001037598
    6. '=[' → logprob: -3.7169137001037598
    7. '=[]
' → logprob: -3.8419137001037598
    8. ' =' → logprob: -3.8419137001037598
    9. 'e' → logprob: -3.9669137001037598
    10. 'is' → logprob: -4.21691370010376

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9152306914329529
    2. 'int' → logprob: -1.5402307510375977
    3. ']' → logprob: -1.6652307510375977
    4. 'list' → logprob: -2.1652307510375977
    5. 'tuple' → logprob: -3.2902307510375977
    6. ']*' → logprob: -3.9152307510375977
    7. ']int' → logprob: -4.915230751037598
    8. '[]' → logprob: -5.290230751037598
    9. '(int' → logprob: -6.290230751037598
    10. '*' → logprob: -6.540230751037598

Token 57: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027124613523483276
    2. ']*' → logprob: -4.277124404907227
    3. ']*(' → logprob: -4.402124404907227
    4. ']+' → logprob: -8.277124404907227
    5. ',' → logprob: -8.652124404907227
    6. ' ]' → logprob: -9.902124404907227
    7. '])' → logprob: -10.277124404907227
    8. ' for' → logprob: -10.777124404907227
    9. 'for' → logprob: -10.902124404907227
    10. ']int' → logprob: -10.902124404907227

Token 58: 'm' (ID: 76)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7499418258666992
    2. '(' → logprob: -1.9999418258666992
    3. 'n' → logprob: -1.9999418258666992
    4. '(m' → logprob: -2.374941825866699
    5. 'm' → logprob: -3.374941825866699
    6. '100' → logprob: -3.374941825866699
    7. '101' → logprob: -3.874941825866699
    8. '(S' → logprob: -4.749941825866699
    9. '10' → logprob: -4.999941825866699
    10. '(w' → logprob: -5.124941825866699

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18451164662837982
    2. '<|end|>' → logprob: -2.059511661529541
    3. '   ' → logprob: -5.059511661529541
    4. 'for' → logprob: -5.434511661529541
    5. '<|end|>' → logprob: -5.434511661529541
    6. ' ' → logprob: -5.559511661529541
    7. '    
' → logprob: -5.559511661529541
    8. ' 
' → logprob: -5.684511661529541
    9. 'n' → logprob: -6.559511661529541
    10. '\n' → logprob: -6.934511661529541

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9933708906173706
    2. 'for' → logprob: -1.1183708906173706
    3. 'pos' → logprob: -3.24337100982666
    4. 's' → logprob: -3.49337100982666
    5. 'r' (adapté à ' r') → logprob: -3.61837100982666
    6. 'a' → logprob: -3.99337100982666
    7. 'bis' → logprob: -3.99337100982666
    8. 'idx' → logprob: -4.36837100982666
    9. 'positions' → logprob: -4.49337100982666
    10. 'x' → logprob: -4.49337100982666

Token 62: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.016000697389245033
    2. ' =' → logprob: -4.766000747680664
    3. '=' → logprob: -5.641000747680664
    4. ' =[' → logprob: -5.641000747680664
    5. '=[]' → logprob: -8.766000747680664
    6. '[' → logprob: -9.516000747680664
    7. '=[]
' → logprob: -12.016000747680664
    8. '=int' → logprob: -12.766000747680664
    9. '=['' → logprob: -12.891000747680664
    10. '=list' → logprob: -13.266000747680664

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22779521346092224
    2. 'm' → logprob: -1.6027952432632446
    3. 'w' → logprob: -7.477795124053955
    4. '1' → logprob: -7.477795124053955
    5. '100' → logprob: -7.977795124053955
    6. 'n' → logprob: -8.602795600891113
    7. ' ' → logprob: -8.602795600891113
    8. '10' → logprob: -8.977795600891113
    9. ' m' → logprob: -9.102795600891113
    10. '-' → logprob: -9.852795600891113

Token 64: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.11539776623249054
    2. '*m' → logprob: -2.2403976917266846
    3. ']' → logprob: -5.990397930145264
    4. ' ]' → logprob: -10.865397453308105
    5. '*' → logprob: -11.240397453308105
    6. '   ' → logprob: -11.365397453308105
    7. ']*(' → logprob: -11.740397453308105
    8. 'm' → logprob: -12.365397453308105
    9. ')*' → logprob: -12.365397453308105
    10. ']+' → logprob: -13.240397453308105

Token 65: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011772842844948173
    2. 'n' → logprob: -9.625117301940918
    3. ' m' → logprob: -10.875117301940918
    4. '(m' → logprob: -11.375117301940918
    5. '   ' → logprob: -12.500117301940918
    6. 'w' → logprob: -12.625117301940918
    7. ' ' → logprob: -12.875117301940918
    8. '(' → logprob: -13.500117301940918
    9. 'h' → logprob: -13.562617301940918
    10. '	m' → logprob: -14.250117301940918

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01918906345963478
    2. ' for' → logprob: -4.01918888092041
    3. '   ' → logprob: -8.14418888092041
    4. 'i' → logprob: -8.26918888092041
    5. 's' → logprob: -9.01918888092041
    6. '	for' → logprob: -9.39418888092041
    7. 'l' → logprob: -9.76918888092041
    8. 't' → logprob: -10.26918888092041
    9. 'f' → logprob: -10.26918888092041
    10. 'n' → logprob: -10.89418888092041

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0031418318394571543
    2. 'i' → logprob: -5.8781418800354
    3. ' _' → logprob: -8.628141403198242
    4. ' ' → logprob: -9.253141403198242
    5. '_' → logprob: -9.878141403198242
    6. ' j' → logprob: -12.003141403198242
    7. '_i' → logprob: -13.253141403198242
    8. '	i' → logprob: -13.378141403198242
    9. '  ' → logprob: -14.878141403198242
    10. ' I' → logprob: -15.003141403198242

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043692998588085175
    2. 'in' → logprob: -3.1686930656433105
    3. ' ' → logprob: -7.6686930656433105
    4. 'range' → logprob: -8.918692588806152
    5. ' range' → logprob: -9.668692588806152
    6. '  ' → logprob: -11.668692588806152
    7. '	in' → logprob: -12.668692588806152
    8. '   ' → logprob: -12.918692588806152
    9. '<|end|>' → logprob: -12.918692588806152
    10. ' i' → logprob: -13.168692588806152

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326544284820557
    2. 'range' → logprob: -1.3132654428482056
    3. ' ' → logprob: -13.188265800476074
    4. '	range' → logprob: -13.438265800476074
    5. ' xrange' → logprob: -16.188264846801758
    6. '  ' → logprob: -16.313264846801758
    7. '(range' → logprob: -16.563264846801758
    8. '   ' → logprob: -18.063264846801758
    9. '_range' → logprob: -18.313264846801758
    10. 'rang' → logprob: -18.563264846801758

Token 72: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007280402351170778
    2. '(' → logprob: -7.375728130340576
    3. ' (' → logprob: -9.250727653503418
    4. ' m' → logprob: -12.625727653503418
    5. '	m' → logprob: -14.625727653503418
    6. '(i' → logprob: -14.625727653503418
    7. '(n' → logprob: -15.250727653503418
    8. 'm' → logprob: -15.250727653503418
    9. '(s' → logprob: -15.750727653503418
    10. ' ' → logprob: -15.875727653503418

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026393309235572815
    2. '):
' → logprob: -3.651393413543701
    3. ')' → logprob: -10.651392936706543
    4. '+' → logprob: -10.776392936706543
    5. '   ' → logprob: -10.901392936706543
    6. ' ):' → logprob: -11.776392936706543
    7. ':' → logprob: -12.276392936706543
    8. '):
' → logprob: -12.401392936706543
    9. '**' → logprob: -12.901392936706543
    10. '-' → logprob: -13.151392936706543

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1662636548280716
    2. ':' → logprob: -3.0412635803222656
    3. '       ' → logprob: -3.4162635803222656
    4. ' ' → logprob: -3.6662635803222656
    5. ' l' → logprob: -4.166263580322266
    6. '<|end|>' → logprob: -4.416263580322266
    7. '    ' → logprob: -4.666263580322266
    8. ' :' → logprob: -6.416263580322266
    9. ':
' → logprob: -7.166263580322266
    10. ',' → logprob: -7.166263580322266

Token 75: ' li' (ID: 3476)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.014057140797376633
    2. ' s' → logprob: -5.014057159423828
    3. 'l' → logprob: -5.639057159423828
    4. ' r' → logprob: -5.889057159423828
    5. '   ' → logprob: -8.389057159423828
    6. 's' → logprob: -8.639057159423828
    7. 'r' → logprob: -9.264057159423828
    8. '    ' → logprob: -9.389057159423828
    9. '	l' → logprob: -9.639057159423828
    10. ' x' → logprob: -9.764057159423828

Token 76: ',' (ID: 11)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.05548897385597229
    2. 'n' → logprob: -3.6804890632629395
    3. ',' → logprob: -4.5554890632629395
    4. ',n' → logprob: -5.1804890632629395
    5. 'st' → logprob: -5.3054890632629395
    6. ',r' → logprob: -6.4304890632629395
    7. ',input' → logprob: -6.6804890632629395
    8. '=' → logprob: -6.9304890632629395
    9. ',l' → logprob: -7.0554890632629395
    10. '­ne' → logprob: -7.6804890632629395

Token 77: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.008199763484299183
    2. ' ri' → logprob: -5.258199691772461
    3. 'ui' → logprob: -6.633199691772461
    4. 'ti' → logprob: -7.633199691772461
    5. 'wi' → logprob: -8.258199691772461
    6. 'di' → logprob: -8.633199691772461
    7. 'pi' → logprob: -8.758199691772461
    8. 're' → logprob: -8.883199691772461
    9. 'hi' → logprob: -9.008199691772461
    10. 'si' → logprob: -10.133199691772461

Token 78: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004361048340797424
    2. '=input' → logprob: -6.004361152648926
    3. ' =' → logprob: -6.379361152648926
    4. '=list' → logprob: -10.004361152648926
    5. '=line' → logprob: -10.004361152648926
    6. '=int' → logprob: -11.004361152648926
    7. '=i' → logprob: -11.004361152648926
    8. '=s' → logprob: -11.129361152648926
    9. '=sys' → logprob: -11.629361152648926
    10. '=

' → logprob: -12.379361152648926

Token 79: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.007626745849847794
    2. ' map' → logprob: -4.882626533508301
    3. '	map' → logprob: -11.2576265335083
    4. 'm' → logprob: -13.1326265335083
    5. 'input' → logprob: -13.1326265335083
    6. 'list' → logprob: -13.2576265335083
    7. '[' → logprob: -14.7576265335083
    8. '(map' → logprob: -15.1326265335083
    9. '   ' → logprob: -15.1326265335083
    10. ' ' → logprob: -15.2576265335083

Token 80: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002028251619776711
    2. '(' → logprob: -8.750203132629395
    3. '<int' → logprob: -10.625203132629395
    4. '[int' → logprob: -11.875203132629395
    5. '<|end|>' → logprob: -12.125203132629395
    6. '=int' → logprob: -13.125203132629395
    7. ',int' → logprob: -13.125203132629395
    8. '(lambda' → logprob: -13.500203132629395
    9. ']int' → logprob: -14.375203132629395
    10. 'int' → logprob: -14.750203132629395

Token 81: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0017359900521114469
    2. ',' → logprob: -6.376736164093018
    3. '(input' → logprob: -10.75173568725586
    4. ',int' → logprob: -11.75173568725586
    5. '(' → logprob: -13.00173568725586
    6. ' ,' → logprob: -14.12673568725586
    7. '(),' → logprob: -14.75173568725586
    8. 'input' → logprob: -15.50173568725586
    9. '```' → logprob: -16.00173568725586
    10. '=input' → logprob: -16.12673568725586

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.625003814697266
    3. '().__' → logprob: -14.875003814697266
    4. ')' → logprob: -16.375003814697266
    5. '())' → logprob: -17.250003814697266
    6. ' ().' → logprob: -17.875003814697266
    7. '.' → logprob: -18.000003814697266
    8. '(' → logprob: -18.000003814697266
    9. '.split' → logprob: -18.250003814697266
    10. '().'' → logprob: -18.250003814697266

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.375000953674316
    3. 'strip' → logprob: -16.0
    4. 'spl' → logprob: -16.625
    5. 'rstrip' → logprob: -17.0
    6. '(split' → logprob: -17.75
    7. '.split' → logprob: -19.375
    8. ')' → logprob: -19.375
    9. 's' → logprob: -20.25
    10. 'plit' → logprob: -21.125

Token 84: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03566748648881912
    2. ')' → logprob: -3.7856674194335938
    3. '()' → logprob: -4.410667419433594
    4. '())
' → logprob: -9.035667419433594
    5. '(' → logprob: -9.910667419433594
    6. '())

' → logprob: -12.160667419433594
    7. ' ())' → logprob: -12.160667419433594
    8. '()
' → logprob: -12.660667419433594
    9. '());' → logprob: -12.785667419433594
    10. '()))' → logprob: -12.910667419433594

Token 85: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5928426384925842
    2. 'r' → logprob: -1.8428425788879395
    3. '   ' → logprob: -2.0928425788879395
    4. 'l' (adapté à ' l') → logprob: -2.7178425788879395
    5. '	l' → logprob: -3.5928425788879395
    6. '       ' → logprob: -3.9678425788879395
    7. ' ' → logprob: -4.2178425788879395
    8. ' r' → logprob: -4.3428425788879395
    9. '<|end|>' → logprob: -4.9678425788879395
    10. '
' → logprob: -5.4678425788879395

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.269565634895116e-05
    2. '[' → logprob: -9.375092506408691
    3. '[l' → logprob: -13.250092506408691
    4. '[I' → logprob: -13.375092506408691
    5. '[m' → logprob: -13.625092506408691
    6. '\[' → logprob: -14.625092506408691
    7. '[n' → logprob: -14.750092506408691
    8. '```' → logprob: -14.875092506408691
    9. '[j' → logprob: -15.125092506408691
    10. 'i' → logprob: -15.125092506408691

Token 88: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21676276624202728
    2. ')=' → logprob: -2.4667627811431885
    3. ' =' → logprob: -2.8417627811431885
    4. ']=' → logprob: -3.7167627811431885
    5. ',' → logprob: -4.216762542724609
    6. ')' → logprob: -4.591762542724609
    7. ']' → logprob: -6.341762542724609
    8. '=i' → logprob: -8.71676254272461
    9. ' )' → logprob: -9.59176254272461
    10. '=int' → logprob: -9.71676254272461

Token 89: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -5.478889215737581e-05
    2. ' li' → logprob: -10.375054359436035
    3. 'ri' → logprob: -10.875054359436035
    4. 'l' → logprob: -13.625054359436035
    5. 'bi' → logprob: -14.000054359436035
    6. '<li' → logprob: -14.125054359436035
    7. 'int' → logprob: -14.125054359436035
    8. '(li' → logprob: -15.250054359436035
    9. ' ' → logprob: -15.500054359436035
    10. 'ni' → logprob: -16.62505531311035

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5244042873382568
    2. 'r' → logprob: -1.5244042873382568
    3. '<|end|>' → logprob: -2.024404287338257
    4. ' r' → logprob: -4.274404525756836
    5. '       ' → logprob: -4.524404525756836
    6. '   ' → logprob: -4.899404525756836
    7. '<|end|>' → logprob: -5.024404525756836
    8. ' ' → logprob: -5.274404525756836
    9. '  
' → logprob: -5.649404525756836
    10. ' 
' → logprob: -5.649404525756836

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' r' (ID: 428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.910643762443215e-05
    2. '[' → logprob: -9.500079154968262
    3. '<|end|>' → logprob: -12.750079154968262
    4. '[I' → logprob: -15.000079154968262
    5. 'i' → logprob: -15.750079154968262
    6. '[int' → logprob: -15.875079154968262
    7. '[
' → logprob: -16.500078201293945
    8. '[idx' → logprob: -16.625078201293945
    9. ' [' → logprob: -16.625078201293945
    10. '```' → logprob: -17.000078201293945

Token 94: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01642083004117012
    2. ']=' → logprob: -4.266420841217041
    3. ']' → logprob: -7.391420841217041
    4. '=i' → logprob: -7.641420841217041
    5. ')=' → logprob: -7.891420841217041
    6. '<|end|>' → logprob: -8.016420364379883
    7. '=r' → logprob: -8.266420364379883
    8. '=int' → logprob: -9.766420364379883
    9. ' =' → logprob: -10.391420364379883
    10. ')' → logprob: -10.766420364379883

Token 95: 'ri' (ID: 872)
  Prédit: 'ri'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -1.4021237802808173e-05
    2. ' ri' → logprob: -11.500014305114746
    3. 'hi' → logprob: -12.875014305114746
    4. 'r' → logprob: -13.875014305114746
    5. ' ' → logprob: -16.50001335144043
    6. '   ' → logprob: -17.37501335144043
    7. 'bi' → logprob: -17.87501335144043
    8. '  ' → logprob: -18.00001335144043
    9. '(' → logprob: -18.00001335144043
    10. 'ti' → logprob: -18.25001335144043

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6081202030181885
    2. '
' → logprob: -1.4831202030181885
    3. '<|end|>' → logprob: -1.6081202030181885
    4. '    
' → logprob: -5.358119964599609
    5. '       ' → logprob: -5.358119964599609
    6. '<|end|>' → logprob: -5.733119964599609
    7. '```' → logprob: -5.983119964599609
    8. '  ' → logprob: -6.733119964599609
    9. '[' → logprob: -6.858119964599609
    10. '  
' → logprob: -7.108119964599609

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4958345592021942
    2. '<|end|>' → logprob: -0.9958345890045166
    3. '
' → logprob: -4.4958343505859375
    4. '    
' → logprob: -6.4958343505859375
    5. '[' → logprob: -6.7458343505859375
    6. '<|end|>' → logprob: -6.9958343505859375
    7. '```' → logprob: -7.3708343505859375
    8. '       ' → logprob: -7.4958343505859375
    9. 's' → logprob: -7.4958343505859375
    10. '  ' → logprob: -7.4958343505859375

Token 98: ' almonds' (ID: 136086)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5568919777870178
    2. '   ' → logprob: -1.556891918182373
    3. 'l' → logprob: -2.806891918182373
    4. 'pos' → logprob: -3.056891918182373
    5. 'positions' → logprob: -3.806891918182373
    6. 's' → logprob: -4.806891918182373
    7. 'for' → logprob: -5.056891918182373
    8. 'p' → logprob: -5.181891918182373
    9. 'possible' → logprob: -5.806891918182373
    10. 'res' → logprob: -5.806891918182373

Token 99: '_y' (ID: 9410)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11866125464439392
    2. '=[]' → logprob: -2.4936611652374268
    3. ' =' → logprob: -4.618661403656006
    4. '_positions' → logprob: -4.993661403656006
    5. '=[' → logprob: -5.118661403656006
    6. '_sorted' → logprob: -6.743661403656006
    7. '_count' → logprob: -6.993661403656006
    8. '=set' → logprob: -7.368661403656006
    9. '_pos' → logprob: -7.618661403656006
    10. '=list' → logprob: -8.243660926818848

Token 100: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3042413294315338
    2. ' =' → logprob: -1.6792412996292114
    3. '=[]' → logprob: -2.804241418838501
    4. ',' → logprob: -5.679241180419922
    5. '=[' → logprob: -5.679241180419922
    6. '[' → logprob: -6.304241180419922
    7. '_' → logprob: -7.304241180419922
    8. '=list' → logprob: -7.679241180419922
    9. '<|end|>' → logprob: -8.054241180419922
    10. '=[]
' → logprob: -8.179241180419922

Token 101: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03148137405514717
    2. '   ' → logprob: -4.0314812660217285
    3. ' for' → logprob: -4.5314812660217285
    4. '[' → logprob: -6.9064812660217285
    5. '[]' → logprob: -7.6564812660217285
    6. '=' → logprob: -7.9064812660217285
    7. 'while' → logprob: -8.531481742858887
    8. '	for' → logprob: -9.156481742858887
    9. '<|end|>' → logprob: -9.781481742858887
    10. ' =' → logprob: -9.906481742858887

Token 102: ' almonds' (ID: 136086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005437116138637066
    2. '_' → logprob: -6.505436897277832
    3. 'while' → logprob: -7.255436897277832
    4. 'y' → logprob: -7.380436897277832
    5. '[' → logprob: -7.505436897277832
    6. '[]' → logprob: -7.880436897277832
    7. '0' → logprob: -8.380436897277832
    8. 's' → logprob: -8.380436897277832
    9. '   ' → logprob: -8.630436897277832
    10. 'x' → logprob: -8.880436897277832

Token 103: '_x' (ID: 7054)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.616949737071991
    2. '_x' → logprob: -0.866949737071991
    3. '=' → logprob: -3.9919497966766357
    4. '=[]' → logprob: -4.741949558258057
    5. '_' → logprob: -4.991949558258057
    6. '_=' → logprob: -6.491949558258057
    7. 'x' → logprob: -6.741949558258057
    8. '=[' → logprob: -7.116949558258057
    9. ' =' → logprob: -7.241949558258057
    10. 'y' → logprob: -7.866949558258057

Token 104: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.42971670627593994
    2. '=' → logprob: -1.05471670627594
    3. ' =' → logprob: -7.17971658706665
    4. '=[]
' → logprob: -8.804717063903809
    5. '=[' → logprob: -10.054717063903809
    6. '={}' → logprob: -11.304717063903809
    7. '=[],' → logprob: -11.429717063903809
    8. '[]' → logprob: -11.804717063903809
    9. '=[]
' → logprob: -11.804717063903809
    10. '.append' → logprob: -12.054717063903809

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4383399486541748
    2. 'for' → logprob: -1.1883399486541748
    3. ' for' → logprob: -3.063339948654175
    4. '<|end|>' → logprob: -6.188340187072754
    5. 'while' → logprob: -7.313340187072754
    6. '[' → logprob: -8.188340187072754
    7. ' while' → logprob: -9.438340187072754
    8. '	for' → logprob: -9.438340187072754
    9. '    ' → logprob: -9.813340187072754
    10. '    
' → logprob: -10.063340187072754

Token 106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007996014319360256
    2. '   ' → logprob: -5.632996082305908
    3. ' for' → logprob: -6.007996082305908
    4. '[]' → logprob: -6.757996082305908
    5. '[' → logprob: -7.382996082305908
    6. 'while' → logprob: -9.38299560546875
    7. '[i' → logprob: -12.00799560546875
    8. '0' → logprob: -12.25799560546875
    9. '[
' → logprob: -12.25799560546875
    10. 'y' → logprob: -12.38299560546875

Token 107: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21778984367847443
    2. '_' → logprob: -2.467789888381958
    3. ' _' → logprob: -2.467789888381958
    4. 'i' → logprob: -3.717789888381958
    5. '_i' → logprob: -6.592789649963379
    6. ' range' → logprob: -8.717789649963379
    7. ' in' → logprob: -8.967789649963379
    8. ' j' → logprob: -9.592789649963379
    9. ' ' → logprob: -9.717789649963379
    10. 'range' → logprob: -10.717789649963379

Token 108: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05503619834780693
    2. ' in' → logprob: -2.9300363063812256
    3. 'i' → logprob: -9.305036544799805
    4. 'range' → logprob: -10.180036544799805
    5. ' ' → logprob: -11.555036544799805
    6. 'x' → logprob: -12.430036544799805
    7. 'y' → logprob: -12.555036544799805
    8. 'import' → logprob: -13.305036544799805
    9. '```' → logprob: -13.680036544799805
    10. 'index' → logprob: -14.430036544799805

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0028410146478563547
    2. ' range' → logprob: -5.877840995788574
    3. 'r' → logprob: -11.877840995788574
    4. 'ran' → logprob: -12.127840995788574
    5. 'rang' → logprob: -12.252840995788574
    6. '(range' → logprob: -12.377840995788574
    7. 'ange' → logprob: -13.252840995788574
    8. 'm' → logprob: -13.690340995788574
    9. '	range' → logprob: -13.752840995788574
    10. 's' → logprob: -14.065340995788574

Token 110: '(n' (ID: 2406)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0571293979883194
    2. '(n' → logprob: -3.432129383087158
    3. '(m' → logprob: -4.682129383087158
    4. 'S' → logprob: -4.807129383087158
    5. '(w' → logprob: -5.807129383087158
    6. '(' → logprob: -6.432129383087158
    7. 'n' → logprob: -7.932129383087158
    8. 'm' → logprob: -8.807129859924316
    9. 'w' → logprob: -8.807129859924316
    10. '(s' → logprob: -9.057129859924316

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5293880105018616
    2. '):
' → logprob: -0.9043880105018616
    3. ':' → logprob: -5.779387950897217
    4. '   ' → logprob: -6.154387950897217
    5. ')' → logprob: -7.404387950897217
    6. ':
' → logprob: -9.279388427734375
    7. '):
' → logprob: -9.404388427734375
    8. '       ' → logprob: -9.904388427734375
    9. ',' → logprob: -10.029388427734375
    10. '():
' → logprob: -10.529388427734375

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0318564735352993
    2. 'x' → logprob: -3.5318565368652344
    3. '<|end|>' → logprob: -6.531856536865234
    4. '   ' → logprob: -8.531856536865234
    5. ' x' → logprob: -9.406856536865234
    6. '
' → logprob: -10.281856536865234
    7. 'a' → logprob: -10.281856536865234
    8. 's' → logprob: -10.406856536865234
    9. '        
' → logprob: -10.406856536865234
    10. ',' → logprob: -10.656856536865234

Token 113: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03122224099934101
    2. 'ax' → logprob: -4.156222343444824
    3. 'a' → logprob: -4.406222343444824
    4. 'xi' → logprob: -7.031222343444824
    5. 'y' → logprob: -7.406222343444824
    6. '   ' → logprob: -8.031222343444824
    7. ' x' → logprob: -8.906222343444824
    8. 'xy' → logprob: -9.156222343444824
    9. 'ai' → logprob: -9.156222343444824
    10. 'ay' → logprob: -9.281222343444824

Token 114: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.016610195860266685
    2. ',' → logprob: -4.141610145568848
    3. ' ,' → logprob: -8.141610145568848
    4. 'y' → logprob: -8.391610145568848
    5. '_,' → logprob: -10.266610145568848
    6. ' y' → logprob: -11.016610145568848
    7. '_y' → logprob: -13.391610145568848
    8. ',a' → logprob: -14.016610145568848
    9. ',Y' → logprob: -14.141610145568848
    10. ',s' → logprob: -14.641610145568848

Token 115: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001485939254052937
    2. ' =' → logprob: -6.626485824584961
    3. '=input' → logprob: -9.501485824584961
    4. '=int' → logprob: -9.626485824584961
    5. ',' → logprob: -12.376485824584961
    6. '=line' → logprob: -12.501485824584961
    7. '=list' → logprob: -12.626485824584961
    8. '=user' → logprob: -14.126485824584961
    9. '=`' → logprob: -14.126485824584961
    10. '=sys' → logprob: -14.251485824584961

Token 116: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011051236651837826
    2. ' map' → logprob: -4.511051177978516
    3. '	map' → logprob: -12.636051177978516
    4. '   ' → logprob: -16.261051177978516
    5. '    ' → logprob: -17.386051177978516
    6. ' ' → logprob: -18.761051177978516
    7. 'm' → logprob: -19.136051177978516
    8. '  ' → logprob: -19.261051177978516
    9. '(map' → logprob: -19.261051177978516
    10. '
' → logprob: -19.261051177978516

Token 117: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -13.125006675720215
    3. '<int' → logprob: -13.625006675720215
    4. '=int' → logprob: -13.875006675720215
    5. 'int' → logprob: -14.000006675720215
    6. ',int' → logprob: -14.000006675720215
    7. '[int' → logprob: -15.000006675720215
    8. ']int' → logprob: -16.5000057220459
    9. ' (' → logprob: -16.6250057220459
    10. ':int' → logprob: -17.5000057220459

Token 118: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.019841622561216354
    2. ',' → logprob: -4.64484167098999
    3. '(input' → logprob: -5.01984167098999
    4. '(),' → logprob: -5.76984167098999
    5. '(' → logprob: -8.394841194152832
    6. '<|end|>' → logprob: -10.269841194152832
    7. ',int' → logprob: -11.519841194152832
    8. ',x' → logprob: -11.644841194152832
    9. '()' → logprob: -11.894841194152832
    10. ')' → logprob: -12.269841194152832

Token 119: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -11.875006675720215
    3. '())' → logprob: -16.00000762939453
    4. '()).' → logprob: -17.50000762939453
    5. '().__' → logprob: -17.75000762939453
    6. ')' → logprob: -17.87500762939453
    7. '.readline' → logprob: -18.50000762939453
    8. '.split' → logprob: -18.87500762939453
    9. ' ().' → logprob: -19.25000762939453
    10. '().'' → logprob: -19.37500762939453

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1756367712223437e-05
    2. 'strip' → logprob: -11.875011444091797
    3. 'read' → logprob: -13.500011444091797
    4. 'rstrip' → logprob: -13.500011444091797
    5. ')' → logprob: -13.750011444091797
    6. ' split' → logprob: -14.375011444091797
    7. '_split' → logprob: -16.375011444091797
    8. 'plit' → logprob: -16.750011444091797
    9. '(split' → logprob: -16.750011444091797
    10. 'spl' → logprob: -16.750011444091797

Token 121: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004660572856664658
    2. '()' → logprob: -5.504660606384277
    3. ')' → logprob: -7.629660606384277
    4. '())
' → logprob: -9.754660606384277
    5. '(),' → logprob: -10.879660606384277
    6. '(' → logprob: -12.379660606384277
    7. ' ())' → logprob: -12.504660606384277
    8. '();)' → logprob: -12.754660606384277
    9. '());' → logprob: -13.254660606384277
    10. '())

' → logprob: -13.379660606384277

Token 122: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' almonds' (ID: 136086)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.22088292241096497
    2. ' almonds' → logprob: -2.4708828926086426
    3. 'if' → logprob: -3.0958828926086426
    4. ' if' → logprob: -3.4708828926086426
    5. '   ' → logprob: -3.8458828926086426
    6. 'x' → logprob: -4.845882892608643
    7. '<|end|>' → logprob: -5.470882892608643
    8. 'al' → logprob: -7.095882892608643
    9. 'alf' → logprob: -7.720882892608643
    10. ' x' → logprob: -8.2208833694458

Token 124: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.03364765644073486
    2. '_y' → logprob: -3.4086475372314453
    3. '_' → logprob: -13.658647537231445
    4. '._' → logprob: -15.908647537231445
    5. 'x' → logprob: -16.033647537231445
    6. ' _' → logprob: -16.658647537231445
    7. '<|end|>' → logprob: -16.658647537231445
    8. '_s' → logprob: -16.908647537231445
    9. '```' → logprob: -16.908647537231445
    10. ')_' → logprob: -17.033647537231445

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02977374941110611
    2. '.' → logprob: -3.529773712158203
    3. '.ap' → logprob: -11.779773712158203
    4. ' .' → logprob: -12.779773712158203
    5. '.extend' → logprob: -12.779773712158203
    6. '.app' → logprob: -12.904773712158203
    7. '.add' → logprob: -13.154773712158203
    8. 'append' → logprob: -13.404773712158203
    9. '.push' → logprob: -13.779773712158203
    10. '.setdefault' → logprob: -13.779773712158203

Token 126: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006615649326704443
    2. '(' → logprob: -7.750661373138428
    3. 'x' → logprob: -8.625661849975586
    4. '(float' → logprob: -10.250661849975586
    5. '(round' → logprob: -11.750661849975586
    6. '(y' → logprob: -12.375661849975586
    7. '(int' → logprob: -13.375661849975586
    8. '(
' → logprob: -13.875661849975586
    9. ' (' → logprob: -14.000661849975586
    10. '((' → logprob: -15.125661849975586

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044223200529813766
    2. ' )' → logprob: -7.750442028045654
    3. ')
' → logprob: -11.500442504882812
    4. '.' → logprob: -15.125442504882812
    5. ',' → logprob: -15.625442504882812
    6. ')y' → logprob: -15.750442504882812
    7. '),' → logprob: -16.250442504882812
    8. '   ' → logprob: -16.500442504882812
    9. ' )
' → logprob: -16.875442504882812
    10. '<|end|>' → logprob: -17.000442504882812

Token 128: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7101452350616455
    2. ' almonds' → logprob: -1.5851452350616455
    3. 'alm' → logprob: -1.9601452350616455
    4. '       ' → logprob: -2.7101452350616455
    5. '<|end|>' → logprob: -2.8351452350616455
    6. '    
' → logprob: -4.085144996643066
    7. '<|end|>' → logprob: -5.585144996643066
    8. ',' → logprob: -5.710144996643066
    9. '  
' → logprob: -5.960144996643066
    10. ' 
' → logprob: -6.335144996643066

Token 129: ' almonds' (ID: 136086)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.429235577583313
    2. 'alm' → logprob: -1.054235577583313
    3. ' y' → logprob: -8.179235458374023
    4. ' almonds' → logprob: -8.804235458374023
    5. 'alf' → logprob: -10.304235458374023
    6. 'al' → logprob: -11.554235458374023
    7. 'yam' → logprob: -12.054235458374023
    8. 'alom' → logprob: -12.304235458374023
    9. 'ald' → logprob: -12.679235458374023
    10. 'alam' → logprob: -12.804235458374023

Token 130: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00011808603449026123
    2. '_x' → logprob: -9.125118255615234
    3. '_' → logprob: -11.750118255615234
    4. 'y' → logprob: -13.750118255615234
    5. ' _' → logprob: -17.125118255615234
    6. '.' → logprob: -17.375118255615234
    7. '[' → logprob: -18.000118255615234
    8. ')_' → logprob: -18.250118255615234
    9. '_z' → logprob: -18.375118255615234
    10. '._' → logprob: -18.375118255615234

Token 131: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.061987072229385376
    2. '.' → logprob: -2.8119871616363525
    3. '.extend' → logprob: -12.436986923217773
    4. '.add' → logprob: -12.686986923217773
    5. ').' → logprob: -12.811986923217773
    6. '.setdefault' → logprob: -12.811986923217773
    7. '.push' → logprob: -13.436986923217773
    8. '<|end|>' → logprob: -13.561986923217773
    9. '.Append' → logprob: -13.936986923217773
    10. ' .' → logprob: -14.061986923217773

Token 132: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.625009536743164
    3. 'y' → logprob: -14.250009536743164
    4. '(
' → logprob: -16.750009536743164
    5. ' (' → logprob: -18.375009536743164
    6. '(float' → logprob: -18.500009536743164
    7. '(x' → logprob: -19.000009536743164
    8. '(Y' → logprob: -20.000009536743164
    9. '(round' → logprob: -20.375009536743164
    10. ' y' → logprob: -21.250009536743164

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. ')
' → logprob: -10.875022888183594
    3. ' )' → logprob: -13.125022888183594
    4. '<|end|>' → logprob: -14.500022888183594
    5. '   ' → logprob: -15.125022888183594
    6. ')

' → logprob: -16.125022888183594
    7. ')return' → logprob: -16.375022888183594
    8. '))' → logprob: -16.625022888183594
    9. '
' → logprob: -16.625022888183594
    10. '       ' → logprob: -16.750022888183594

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5265396237373352
    2. '
' → logprob: -2.4015395641326904
    3. 'l' → logprob: -3.0265395641326904
    4. 'w' → logprob: -3.5265395641326904
    5. 'for' → logprob: -3.6515395641326904
    6. 'x' → logprob: -3.9015395641326904
    7. '#' → logprob: -4.1515398025512695
    8. 'b' → logprob: -4.2765398025512695
    9. 'positions' → logprob: -4.2765398025512695
    10. '    
' → logprob: -4.2765398025512695

Token 135: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9853383898735046
    2. 'idx' → logprob: -1.8603384494781494
    3. 'pos' → logprob: -2.6103384494781494
    4. 'ans' → logprob: -2.8603384494781494
    5. 'positions' → logprob: -3.1103384494781494
    6. 'count' → logprob: -3.3603384494781494
    7. 'i' → logprob: -3.8603384494781494
    8. 'x' → logprob: -3.9853384494781494
    9. 'dp' → logprob: -4.11033821105957
    10. 'result' → logprob: -4.23533821105957

Token 136: '_' (ID: 62)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5524649620056152
    2. '_x' → logprob: -1.9274649620056152
    3. '_' → logprob: -2.4274649620056152
    4. '_s' → logprob: -2.6774649620056152
    5. '_l' → logprob: -3.0524649620056152
    6. '_r' → logprob: -3.4274649620056152
    7. '=' → logprob: -4.552464962005615
    8. 'sum' → logprob: -5.177464962005615
    9. '=[]' → logprob: -5.427464962005615
    10. '_w' → logprob: -5.677464962005615

Token 137: 'alm' (ID: 13850)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16562169790267944
    2. 'x' → logprob: -2.540621757507324
    3. 'l' → logprob: -3.415621757507324
    4. 'r' → logprob: -3.790621757507324
    5. 'count' → logprob: -4.790621757507324
    6. 'w' → logprob: -5.415621757507324
    7. 's' → logprob: -6.165621757507324
    8. 'm' → logprob: -7.040621757507324
    9. 'y' → logprob: -7.165621757507324
    10. 'alm' → logprob: -8.290621757507324

Token 138: 'onds' (ID: 20754)
  Prédit: 'ums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ums' → logprob: -1.1383662223815918
    2. '_x' → logprob: -1.3883662223815918
    3. 'uts' → logprob: -2.138366222381592
    4. 'ids' → logprob: -2.638366222381592
    5. '_sum' → logprob: -2.763366222381592
    6. 'ass' → logprob: -3.638366222381592
    7. '=[]' → logprob: -3.888366222381592
    8. 'sum' → logprob: -4.013366222381592
    9. 'umbs' → logprob: -4.263366222381592
    10. 'as' → logprob: -4.638366222381592

Token 139: '_num' (ID: 9834)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5517319440841675
    2. '_x' → logprob: -1.5517319440841675
    3. '=[]' → logprob: -2.176732063293457
    4. '=[' → logprob: -3.426732063293457
    5. '_counts' → logprob: -4.051732063293457
    6. '_count' → logprob: -4.051732063293457
    7. ' =' → logprob: -4.051732063293457
    8. '=_' → logprob: -6.051732063293457
    9. '=sum' → logprob: -6.301732063293457
    10. '_' → logprob: -6.301732063293457

Token 140: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1014450788497925
    2. ' =' → logprob: -1.3514450788497925
    3. '=[' → logprob: -1.6014450788497925
    4. 's' → logprob: -1.8514450788497925
    5. '=[]' → logprob: -3.351445198059082
    6. '_x' → logprob: -4.351445198059082
    7. '=s' → logprob: -7.976445198059082
    8. '_' → logprob: -8.226445198059082
    9. '[' → logprob: -8.476445198059082
    10. ' =[' → logprob: -8.476445198059082

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004897649050690234
    2. '[' → logprob: -7.625489711761475
    3. '[m' → logprob: -14.375490188598633
    4. '1' → logprob: -15.625490188598633
    5. '[n' → logprob: -15.625490188598633
    6. ']' → logprob: -15.750490188598633
    7. 'len' → logprob: -16.250490188598633
    8. '(' → logprob: -16.250490188598633
    9. ' [' → logprob: -16.250490188598633
    10. ' ' → logprob: -16.500490188598633

Token 142: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002551527228206396
    2. ']*' → logprob: -6.502551555633545
    3. ']*(' → logprob: -7.127551555633545
    4. ' ]' → logprob: -9.002551078796387
    5. ']
' → logprob: -9.752551078796387
    6. ']+' → logprob: -10.627551078796387
    7. '](' → logprob: -11.752551078796387
    8. ')' → logprob: -11.877551078796387
    9. '0' → logprob: -12.252551078796387
    10. 'for' → logprob: -12.502551078796387

Token 143: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.060617998242378235
    2. '100' → logprob: -3.9356179237365723
    3. 'n' → logprob: -4.060617923736572
    4. '(m' → logprob: -5.060617923736572
    5. '101' → logprob: -5.185617923736572
    6. 'len' → logprob: -6.185617923736572
    7. 'w' → logprob: -6.685617923736572
    8. '(n' → logprob: -6.810617923736572
    9. '501' → logprob: -6.810617923736572
    10. '400' → logprob: -7.310617923736572

Token 144: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.282920129597187e-05
    2. ' +' → logprob: -12.000012397766113
    3. ')' → logprob: -12.500012397766113
    4. '+)' → logprob: -13.625012397766113
    5. '+
' → logprob: -13.750012397766113
    6. '1' → logprob: -15.750012397766113
    7. ')+' → logprob: -16.37501335144043
    8. '[' → logprob: -16.37501335144043
    9. '*' → logprob: -16.50001335144043
    10. '+m' → logprob: -16.50001335144043

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. '2' → logprob: -11.500019073486328
    3. ' ' → logprob: -11.750019073486328
    4. '7' → logprob: -15.625019073486328
    5. '3' → logprob: -15.812519073486328
    6. '10' → logprob: -16.125019073486328
    7. '5' → logprob: -16.375019073486328
    8. '4' → logprob: -16.500019073486328
    9. '１' → logprob: -16.562519073486328
    10. '   ' → logprob: -16.625019073486328

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')
' → logprob: -11.000018119812012
    3. '+' → logprob: -14.125018119812012
    4. ')

' → logprob: -15.000018119812012
    5. ' )' → logprob: -15.125018119812012
    6. '```' → logprob: -16.000019073486328
    7. ')
' → logprob: -16.500019073486328
    8. '))' → logprob: -17.500019073486328
    9. '*' → logprob: -17.500019073486328
    10. ')`' → logprob: -17.625019073486328

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2697634696960449
    2. ' for' → logprob: -2.519763469696045
    3. '\n' → logprob: -2.519763469696045
    4. 'for' → logprob: -3.394763469696045
    5. '   ' → logprob: -3.894763469696045
    6. '<|end|>' → logprob: -4.769763469696045
    7. '    
' → logprob: -6.144763469696045
    8. ' 
' → logprob: -6.269763469696045
    9. '  
' → logprob: -6.394763469696045
    10. '[' → logprob: -6.769763469696045

Token 148: ' areas' (ID: 6723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004141210578382015
    2. ' for' → logprob: -5.504141330718994
    3. '   ' → logprob: -10.504140853881836
    4. 'i' → logprob: -10.754140853881836
    5. '	for' → logprob: -12.129140853881836
    6. 'prefix' → logprob: -13.129140853881836
    7. 'idx' → logprob: -13.379140853881836
    8. ']' → logprob: -13.879140853881836
    9. '```' → logprob: -14.254140853881836
    10. ')' → logprob: -14.629140853881836

Token 149: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.7066440582275391
    2. '=' → logprob: -1.206644058227539
    3. '=[]' → logprob: -1.706644058227539
    4. ' =' → logprob: -4.456644058227539
    5. '_' → logprob: -4.831644058227539
    6. '[' → logprob: -6.081644058227539
    7. '_num' → logprob: -6.706644058227539
    8. '_area' → logprob: -6.831644058227539
    9. '=[[' → logprob: -8.456644058227539
    10. '_size' → logprob: -8.706644058227539

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06059926748275757
    2. 'w' → logprob: -3.5605993270874023
    3. ']' → logprob: -4.060599327087402
    4. '(' → logprob: -4.935599327087402
    5. '(w' → logprob: -5.810599327087402
    6. ' ' → logprob: -7.435599327087402
    7. ' (' → logprob: -7.685599327087402
    8. '[]' → logprob: -7.810599327087402
    9. ' w' → logprob: -8.560599327087402
    10. '[w' → logprob: -8.560599327087402

Token 151: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.2526452839374542
    2. ']' → logprob: -1.5026452541351318
    3. ']*' → logprob: -7.752645492553711
    4. '](' → logprob: -8.252645492553711
    5. '*(' → logprob: -11.877645492553711
    6. ']+' → logprob: -12.002645492553711
    7. '(m' → logprob: -12.627645492553711
    8. '   ' → logprob: -12.877645492553711
    9. ' ]' → logprob: -13.127645492553711
    10. ')*(' → logprob: -13.502645492553711

Token 152: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6361151933670044
    2. 'm' → logprob: -0.7611151933670044
    3. '(' → logprob: -5.761115074157715
    4. ' (' → logprob: -8.886115074157715
    5. ' m' → logprob: -9.761115074157715
    6. '100' → logprob: -10.511115074157715
    7. '(n' → logprob: -11.136115074157715
    8. '   ' → logprob: -11.261115074157715
    9. '(w' → logprob: -12.261115074157715
    10. 'n' → logprob: -12.323615074157715

Token 153: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2709173560142517
    2. '   ' → logprob: -1.8959174156188965
    3. ' for' → logprob: -2.6459174156188965
    4. '<|end|>' → logprob: -5.0209174156188965
    5. '
' → logprob: -5.5209174156188965
    6. 'prefix' → logprob: -6.8959174156188965
    7. '```' → logprob: -7.1459174156188965
    8. '[' → logprob: -7.2709174156188965
    9. '    
' → logprob: -7.6459174156188965
    10. 'while' → logprob: -8.020916938781738

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5596129894256592
    2. 'for' → logprob: -1.1846129894256592
    3. ' for' → logprob: -2.184612989425659
    4. '<|end|>' → logprob: -4.934613227844238
    5. '	for' → logprob: -7.309613227844238
    6. ' ' → logprob: -7.934613227844238
    7. '    ' → logprob: -8.059613227844238
    8. '    
' → logprob: -8.059613227844238
    9. '
' → logprob: -8.184613227844238
    10. ')' → logprob: -8.559613227844238

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010230669751763344
    2. ' for' → logprob: -4.885230541229248
    3. '   ' → logprob: -6.010230541229248
    4. 'i' → logprob: -10.135231018066406
    5. 'prefix' → logprob: -10.635231018066406
    6. 'area' → logprob: -10.760231018066406
    7. 'idx' → logprob: -11.760231018066406
    8. 'x' → logprob: -11.760231018066406
    9. '```' → logprob: -11.760231018066406
    10. 'y' → logprob: -12.010231018066406

Token 156: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28135910630226135
    2. 'i' → logprob: -1.406359076499939
    3. 'j' → logprob: -10.03135871887207
    4. ' j' → logprob: -10.15635871887207
    5. '_i' → logprob: -10.40635871887207
    6. ' ' → logprob: -11.15635871887207
    7. 'k' → logprob: -11.40635871887207
    8. '	i' → logprob: -11.53135871887207
    9. '_' → logprob: -12.09385871887207
    10. 'x' → logprob: -12.34385871887207

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002080312930047512
    2. 'in' → logprob: -6.25208044052124
    3. 'range' → logprob: -9.627079963684082
    4. ' ' → logprob: -9.752079963684082
    5. ' range' → logprob: -11.502079963684082
    6. 'n' → logprob: -12.502079963684082
    7. '  ' → logprob: -12.627079963684082
    8. '   ' → logprob: -12.877079963684082
    9. 's' → logprob: -13.377079963684082
    10. '```' → logprob: -13.752079963684082

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018153805285692215
    2. ' range' → logprob: -4.018153667449951
    3. '(range' → logprob: -12.64315414428711
    4. ' ' → logprob: -15.39315414428711
    5. '	range' → logprob: -15.39315414428711
    6. 'ange' → logprob: -15.89315414428711
    7. ' xrange' → logprob: -17.26815414428711
    8. '   ' → logprob: -17.39315414428711
    9. '  ' → logprob: -17.51815414428711
    10. '```' → logprob: -17.89315414428711

Token 159: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008854820393025875
    2. '(' → logprob: -4.758854866027832
    3. 'm' → logprob: -8.383854866027832
    4. ' m' → logprob: -12.383854866027832
    5. ' (' → logprob: -12.883854866027832
    6. '1' → logprob: -13.008854866027832
    7. 'range' → logprob: -14.008854866027832
    8. '(
' → logprob: -14.383854866027832
    9. ' range' → logprob: -15.008854866027832
    10. ')' → logprob: -15.758854866027832

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08214268088340759
    2. '):
' → logprob: -2.5821425914764404
    3. '+' → logprob: -5.9571428298950195
    4. '-' → logprob: -8.20714282989502
    5. '   ' → logprob: -8.95714282989502
    6. ')' → logprob: -9.08214282989502
    7. ' ):' → logprob: -9.70714282989502
    8. ':' → logprob: -10.20714282989502
    9. ']:' → logprob: -11.33214282989502
    10. '):
' → logprob: -11.70714282989502

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1340695321559906
    2. '   ' → logprob: -2.3840694427490234
    3. ':' → logprob: -4.259069442749023
    4. ':
' → logprob: -4.634069442749023
    5. 'areas' → logprob: -5.384069442749023
    6. ' areas' → logprob: -6.009069442749023
    7. '):
' → logprob: -7.009069442749023
    8. '):' → logprob: -8.009069442749023
    9. '.' → logprob: -9.009069442749023
    10. ',' → logprob: -9.009069442749023

Token 162: ' h' (ID: 312)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.0593273900449276
    2. '   ' → logprob: -3.4343273639678955
    3. 'if' → logprob: -5.309327602386475
    4. 'prefix' → logprob: -5.434327602386475
    5. ' areas' → logprob: -5.559327602386475
    6. 'area' → logprob: -5.559327602386475
    7. 'width' → logprob: -6.184327602386475
    8. 'length' → logprob: -6.184327602386475
    9. 'left' → logprob: -7.434327602386475
    10. 'w' → logprob: -7.809327602386475

Token 163: '_strip' (ID: 191376)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16040122509002686
    2. ' =' → logprob: -2.9104013442993164
    3. '*w' → logprob: -3.0354013442993164
    4. '*' → logprob: -4.285401344299316
    5. '*=' → logprob: -4.660401344299316
    6. '=w' → logprob: -5.035401344299316
    7. '=h' → logprob: -5.785401344299316
    8. '   ' → logprob: -5.785401344299316
    9. '=int' → logprob: -5.910401344299316
    10. '*h' → logprob: -6.285401344299316

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.508165180683136
    2. '=h' → logprob: -1.5081651210784912
    3. ' =' → logprob: -2.508165121078491
    4. '=i' → logprob: -3.008165121078491
    5. '=int' → logprob: -3.758165121078491
    6. '=w' → logprob: -4.25816535949707
    7. '=(' → logprob: -6.00816535949707
    8. '=len' → logprob: -7.00816535949707
    9. '*h' → logprob: -7.38316535949707
    10. '*i' → logprob: -7.38316535949707

Token 165: ' l' (ID: 305)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.27445074915885925
    2. 'r' → logprob: -1.5244507789611816
    3. ' h' → logprob: -5.024450778961182
    4. 'S' → logprob: -5.399450778961182
    5. 'w' → logprob: -6.149450778961182
    6. '(h' → logprob: -6.274450778961182
    7. ' r' → logprob: -6.524450778961182
    8. '   ' → logprob: -6.649450778961182
    9. '(r' → logprob: -6.774450778961182
    10. 'abs' → logprob: -7.024450778961182

Token 166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015157493180595338
    2. '[' → logprob: -9.375151634216309
    3. '[h' → logprob: -9.875151634216309
    4. '[w' → logprob: -12.500151634216309
    5. 'i' → logprob: -12.750151634216309
    6. 'w' → logprob: -13.125151634216309
    7. ' [' → logprob: -13.625151634216309
    8. 'h' → logprob: -14.250151634216309
    9. '[m' → logprob: -14.250151634216309
    10. '+' → logprob: -14.500151634216309

Token 167: ']-' (ID: 27107)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5983350276947021
    2. ']+' → logprob: -1.5983350276947021
    3. '+h' → logprob: -2.223335027694702
    4. '[i' → logprob: -3.098335027694702
    5. ' +' → logprob: -3.473335027694702
    6. ']' → logprob: -3.473335027694702
    7. '-' → logprob: -4.723335266113281
    8. ')+' → logprob: -5.723335266113281
    9. '[' → logprob: -5.723335266113281
    10. '+i' → logprob: -5.848335266113281

Token 168: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5915836095809937
    2. 'w' → logprob: -0.9665836095809937
    3. '0' → logprob: -3.341583728790283
    4. 'S' → logprob: -4.341583728790283
    5. 'r' → logprob: -5.466583728790283
    6. '(' → logprob: -5.716583728790283
    7. '1' → logprob: -6.091583728790283
    8. '(h' → logprob: -6.466583728790283
    9. 'l' → logprob: -6.591583728790283
    10. '(S' → logprob: -7.091583728790283

Token 169: 'l' (ID: 75)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9387606978416443
    2. 'h' → logprob: -1.188760757446289
    3. '0' → logprob: -1.813760757446289
    4. '(' → logprob: -2.938760757446289
    5. 'r' → logprob: -3.063760757446289
    6. '(w' → logprob: -4.313760757446289
    7. '(h' → logprob: -5.688760757446289
    8. 'l' → logprob: -5.688760757446289
    9. ' (' → logprob: -5.813760757446289
    10. 'S' → logprob: -5.813760757446289

Token 170: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03513623774051666
    2. 'i' → logprob: -4.0351362228393555
    3. '[' → logprob: -5.0351362228393555
    4. 'h' → logprob: -5.7851362228393555
    5. 'w' → logprob: -6.7851362228393555
    6. '[h' → logprob: -6.7851362228393555
    7. '0' → logprob: -7.2851362228393555
    8. '][' → logprob: -7.2851362228393555
    9. '-' → logprob: -7.2851362228393555
    10. 'max' → logprob: -8.035136222839355

Token 171: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0027648175600916147
    2. ' -' → logprob: -6.377764701843262
    3. ']' → logprob: -7.377764701843262
    4. ']-' → logprob: -9.002764701843262
    5. '+' → logprob: -9.377764701843262
    6. '1' → logprob: -9.752764701843262
    7. 'w' → logprob: -10.127764701843262
    8. '])' → logprob: -10.377764701843262
    9. '0' → logprob: -10.752764701843262
    10. ']+' → logprob: -11.627764701843262

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014644917973782867
    2. '-' → logprob: -9.125146865844727
    3. ' ' → logprob: -10.500146865844727
    4. ']' → logprob: -12.625146865844727
    5. '0' → logprob: -12.875146865844727
    6. '```' → logprob: -13.750146865844727
    7. '   ' → logprob: -14.000146865844727
    8. 'm' → logprob: -14.625146865844727
    9. '(' → logprob: -14.875146865844727
    10. 'i' → logprob: -15.375146865844727

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0056418548338115215
    2. 'if' → logprob: -5.255641937255859
    3. ' if' → logprob: -8.38064193725586
    4. '])' → logprob: -9.13064193725586
    5. ')' → logprob: -10.25564193725586
    6. ']+' → logprob: -11.38064193725586
    7. '1' → logprob: -11.88064193725586
    8. ' ]' → logprob: -12.00564193725586
    9. '0' → logprob: -12.75564193725586
    10. '   ' → logprob: -12.88064193725586

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07909445464611053
    2. ' if' → logprob: -2.579094409942627
    3. ')' → logprob: -8.579094886779785
    4. ']' → logprob: -11.454094886779785
    5. ' ' → logprob: -13.204094886779785
    6. '   ' → logprob: -13.704094886779785
    7. '	if' → logprob: -13.954094886779785
    8. '```' → logprob: -14.329094886779785
    9. '+' → logprob: -14.704094886779785
    10. '0' → logprob: -15.454094886779785

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031786637846380472
    2. ' i' → logprob: -5.753178596496582
    3. '0' → logprob: -14.628178596496582
    4. '   ' → logprob: -15.253178596496582
    5. '(i' → logprob: -15.753178596496582
    6. ' ' → logprob: -16.8781795501709
    7. '  ' → logprob: -17.3781795501709
    8. '	i' → logprob: -17.5031795501709
    9. '
' → logprob: -18.2531795501709
    10. '    ' → logprob: -18.5031795501709

Token 176: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6660608053207397
    2. '>=' → logprob: -0.7910608053207397
    3. 'else' → logprob: -3.7910609245300293
    4. '-' → logprob: -5.541060924530029
    5. '>-' → logprob: -5.791060924530029
    6. ' >=' → logprob: -7.166060924530029
    7. '0' → logprob: -7.166060924530029
    8. ' else' → logprob: -7.166060924530029
    9. '!=' → logprob: -8.166060447692871
    10. '==' → logprob: -8.416060447692871

Token 177: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038134094211272895
    2. ' ' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.750381469726562
    4. '=' → logprob: -15.125381469726562
    5. '-' → logprob: -16.250381469726562
    6. '```' → logprob: -16.250381469726562
    7. 'i' → logprob: -16.625381469726562
    8. ' -' → logprob: -16.750381469726562
    9. '           ' → logprob: -17.000381469726562
    10. '
' → logprob: -17.125381469726562

Token 178: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0786922425031662
    2. 'else' → logprob: -3.0786921977996826
    3. ' else' → logprob: -3.5786921977996826
    4. ' )' → logprob: -6.578692436218262
    5. ']' → logprob: -9.453692436218262
    6. '])' → logprob: -9.828692436218262
    7. ')
' → logprob: -9.953692436218262
    8. ' ' → logprob: -10.078692436218262
    9. '0' → logprob: -10.953692436218262
    10. ',' → logprob: -11.203692436218262

Token 179: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8350969552993774
    2. '0' → logprob: -1.3350969552993774
    3. 'h' → logprob: -1.3350969552993774
    4. 'w' → logprob: -3.710096836090088
    5. ' r' → logprob: -5.460096836090088
    6. 'l' → logprob: -5.585096836090088
    7. ' h' → logprob: -5.585096836090088
    8. ' ' → logprob: -5.960096836090088
    9. ' w' → logprob: -7.960096836090088
    10. '   ' → logprob: -8.335097312927246

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19554919004440308
    2. 'h' → logprob: -2.195549249649048
    3. 'w' → logprob: -2.820549249649048
    4. 'r' → logprob: -5.820549011230469
    5. ' ' → logprob: -6.195549011230469
    6. ' h' → logprob: -7.445549011230469
    7. 'S' → logprob: -8.070549011230469
    8. ' w' → logprob: -8.070549011230469
    9. '   ' → logprob: -9.445549011230469
    10. 'n' → logprob: -9.445549011230469

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025327110663056374
    2. ')
' → logprob: -4.150327205657959
    3. '<|end|>' → logprob: -5.775327205657959
    4. ')*' → logprob: -6.275327205657959
    5. ' )' → logprob: -6.400327205657959
    6. '   ' → logprob: -6.650327205657959
    7. ')+' → logprob: -8.0253267288208
    8. ' )
' → logprob: -9.0253267288208
    9. '       ' → logprob: -9.2753267288208
    10. '*w' → logprob: -9.4003267288208

Token 182: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3759692311286926
    2. '
' → logprob: -1.3759691715240479
    3. '<|end|>' → logprob: -3.250969171524048
    4. '  
' → logprob: -4.625969409942627
    5. '    
' → logprob: -5.750969409942627
    6. '```' → logprob: -6.375969409942627
    7. '   
' → logprob: -6.875969409942627
    8. ' 
' → logprob: -7.125969409942627
    9. ' ' → logprob: -7.250969409942627
    10. '<|end|>' → logprob: -7.500969409942627

Token 183: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' (adapté à ' areas') → logprob: -0.4017558693885803
    2. '   ' → logprob: -1.7767558097839355
    3. 'w' → logprob: -2.2767558097839355
    4. ' areas' → logprob: -3.7767558097839355
    5. 'area' → logprob: -4.2767558097839355
    6. 'r' → logprob: -4.6517558097839355
    7. 'if' → logprob: -5.7767558097839355
    8. 'for' → logprob: -6.0267558097839355
    9. 'h' → logprob: -6.6517558097839355
    10. ' w' → logprob: -7.1517558097839355

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0035097955260425806
    2. '[' → logprob: -5.878509998321533
    3. '=' → logprob: -7.378509998321533
    4. '=[' → logprob: -10.503509521484375
    5. ' [' → logprob: -10.503509521484375
    6. '*=' → logprob: -12.128509521484375
    7. '\[' → logprob: -12.503509521484375
    8. '[I' → logprob: -12.878509521484375
    9. '```' → logprob: -13.003509521484375
    10. ' =' → logprob: -13.128509521484375

Token 185: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576326847076416
    2. ' =' → logprob: -0.826326847076416
    3. '=h' → logprob: -9.076326370239258
    4. '=w' → logprob: -9.701326370239258
    5. '*=' → logprob: -9.951326370239258
    6. ' *=' → logprob: -10.076326370239258
    7. ' +=' → logprob: -10.326326370239258
    8. '+=' → logprob: -10.951326370239258
    9. ')' → logprob: -11.451326370239258
    10. ' =(' → logprob: -11.826326370239258

Token 186: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08684241026639938
    2. 'w' → logprob: -2.8368422985076904
    3. '(h' → logprob: -4.5868425369262695
    4. '(w' → logprob: -5.0868425369262695
    5. ' h' → logprob: -5.5868425369262695
    6. 'm' → logprob: -6.7118425369262695
    7. '(m' → logprob: -7.3368425369262695
    8. ' (' → logprob: -7.4618425369262695
    9. '   ' → logprob: -7.8368425369262695
    10. '(S' → logprob: -7.8368425369262695

Token 187: '_strip' (ID: 191376)
  Prédit: '_strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strip' → logprob: -5.764977686339989e-05
    2. 'strip' → logprob: -10.500057220458984
    3. '*' → logprob: -10.625057220458984
    4. '[i' → logprob: -13.250057220458984
    5. '_' → logprob: -13.375057220458984
    6. '*w' → logprob: -14.500057220458984
    7. '_str' → logprob: -14.875057220458984
    8. ' *' → logprob: -15.125057220458984
    9. '-strip' → logprob: -15.625057220458984
    10. '*i' → logprob: -16.125057220458984

Token 188: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.252081960439682
    2. ' *' → logprob: -1.8770819902420044
    3. '*w' → logprob: -3.252081871032715
    4. '*m' → logprob: -3.877081871032715
    5. '*(' → logprob: -4.627081871032715
    6. '*h' → logprob: -8.252081871032715
    7. '*r' → logprob: -9.252081871032715
    8. ' *(' → logprob: -9.877081871032715
    9. '*n' → logprob: -10.627081871032715
    10. '*((' → logprob: -10.877081871032715

Token 189: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11291175335645676
    2. 'S' → logprob: -2.6129117012023926
    3. '(S' → logprob: -4.612911701202393
    4. '(w' → logprob: -4.612911701202393
    5. 'm' → logprob: -5.112911701202393
    6. '(m' → logprob: -6.362911701202393
    7. ' w' → logprob: -6.487911701202393
    8. 'W' → logprob: -6.612911701202393
    9. '(' → logprob: -7.112911701202393
    10. ' (' → logprob: -7.612911701202393

Token 190: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0744471400976181
    2. 'prefix' → logprob: -3.1994471549987793
    3. 'total' → logprob: -4.699447154998779
    4. 'for' → logprob: -4.824447154998779
    5. '<|end|>' → logprob: -5.699447154998779
    6. 'sum' → logprob: -5.824447154998779
    7. ' for' → logprob: -6.074447154998779
    8. 'area' → logprob: -7.324447154998779
    9. ' prefix' → logprob: -7.574447154998779
    10. 's' → logprob: -7.824447154998779

Token 192: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46388185024261475
    2. '   ' → logprob: -1.4638818502426147
    3. 'prefix' (adapté à ' prefix') → logprob: -2.4638819694519043
    4. ' for' → logprob: -3.5888819694519043
    5. 'sum' → logprob: -4.588881969451904
    6. 'total' → logprob: -4.838881969451904
    7. 'count' → logprob: -6.588881969451904
    8. 'area' → logprob: -6.588881969451904
    9. ' prefix' → logprob: -7.338881969451904
    10. 's' → logprob: -7.463881969451904

Token 193: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.082895273109898e-05
    2. '_num' → logprob: -11.375030517578125
    3. '_prefix' → logprob: -11.500030517578125
    4. '_sum' → logprob: -12.000030517578125
    5. '<|end|>' → logprob: -14.250030517578125
    6. '_al' → logprob: -14.500030517578125
    7. '_area' → logprob: -15.000030517578125
    8. '_s' → logprob: -15.750030517578125
    9. '_nums' → logprob: -16.000030517578125
    10. '_number' → logprob: -16.250030517578125

Token 194: 'areas' (ID: 69250)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.0015547400107607245
    2. 'areas' → logprob: -7.6265549659729
    3. 'alc' → logprob: -8.376554489135742
    4. 'area' → logprob: -8.501554489135742
    5. 'sum' → logprob: -9.126554489135742
    6. 'alam' → logprob: -9.501554489135742
    7. '_' → logprob: -9.501554489135742
    8. 'alf' → logprob: -9.626554489135742
    9. 'al' → logprob: -10.626554489135742
    10. 'alma' → logprob: -11.189054489135742

Token 195: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.39079537987709045
    2. '=' → logprob: -1.140795350074768
    3. ' =' → logprob: -5.6407952308654785
    4. '[' → logprob: -8.015795707702637
    5. ' =[' → logprob: -10.640795707702637
    6. '=[]' → logprob: -11.515795707702637
    7. '=[[' → logprob: -14.140795707702637
    8. '=zeros' → logprob: -14.515795707702637
    9. '=[
' → logprob: -15.265795707702637
    10. '=[]
' → logprob: -15.765795707702637

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.093505099765025e-05
    2. 'areas' → logprob: -10.875020980834961
    3. '(' → logprob: -14.250020980834961
    4. ' ' → logprob: -14.500020980834961
    5. '
' → logprob: -15.875020980834961
    6. 'area' → logprob: -15.875020980834961
    7. '[' → logprob: -16.25002098083496
    8. ' areas' → logprob: -16.25002098083496
    9. '

' → logprob: -17.00002098083496
    10. ']' → logprob: -17.68752098083496

Token 197: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34710457921028137
    2. ']*(' → logprob: -1.347104549407959
    3. ']*' → logprob: -4.097104549407959
    4. ']
' → logprob: -4.472104549407959
    5. '0' → logprob: -5.972104549407959
    6. ']+' → logprob: -6.097104549407959
    7. ']
' → logprob: -8.097105026245117
    8. '(' → logprob: -10.347105026245117
    9. '*(' → logprob: -10.472105026245117
    10. '](' → logprob: -11.347105026245117

Token 198: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00017755765293259174
    2. ' m' → logprob: -8.875177383422852
    3. 'len' → logprob: -10.875177383422852
    4. '(m' → logprob: -11.000177383422852
    5. '   ' → logprob: -13.875177383422852
    6. ' ' → logprob: -14.750177383422852
    7. ' (' → logprob: -15.750177383422852
    8. '
' → logprob: -16.25017738342285
    9. '[m' → logprob: -17.00017738342285
    10. '  ' → logprob: -17.12517738342285

Token 199: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.531315314830863e-06
    2. ' +' → logprob: -12.875003814697266
    3. '+
' → logprob: -14.125003814697266
    4. '```' → logprob: -16.875003814697266
    5. '1' → logprob: -17.000003814697266
    6. ')+' → logprob: -17.375003814697266
    7. '+)' → logprob: -18.375003814697266
    8. ']+' → logprob: -18.625003814697266
    9. '+m' → logprob: -18.625003814697266
    10. '+[' → logprob: -18.625003814697266

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. '2' → logprob: -11.000021934509277
    3. ' ' → logprob: -12.250021934509277
    4. '+' → logprob: -15.500021934509277
    5. '```' → logprob: -15.750021934509277
    6. '   ' → logprob: -16.250022888183594
    7. 'm' → logprob: -16.375022888183594
    8. '
' → logprob: -16.875022888183594
    9. '6' → logprob: -18.125022888183594
    10. '`' → logprob: -18.437522888183594

Token 201: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03811940923333168
    2. ')' → logprob: -3.288119316101074
    3. ')
' → logprob: -9.538119316101074
    4. ' )
' → logprob: -12.663119316101074
    5. ')

' → logprob: -13.038119316101074
    6. ']
' → logprob: -16.03812026977539
    7. '
' → logprob: -16.16312026977539
    8. ')`
' → logprob: -16.16312026977539
    9. ' )' → logprob: -16.41312026977539
    10. '+' → logprob: -17.03812026977539

Token 202: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.755678961984813e-05
    2. ' for' → logprob: -9.500077247619629
    3. 'prefix' → logprob: -13.000077247619629
    4. '
' → logprob: -15.375077247619629
    5. '   ' → logprob: -16.375078201293945
    6. '<|end|>' → logprob: -17.000078201293945
    7. '```' → logprob: -17.750078201293945
    8. '[' → logprob: -18.375078201293945
    9. ')' → logprob: -18.375078201293945
    10. '	for' → logprob: -19.250078201293945

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.961759259458631e-06
    2. 'prefix' → logprob: -12.875004768371582
    3. ' for' → logprob: -13.000004768371582
    4. '   ' → logprob: -16.8750057220459
    5. '
' → logprob: -18.2500057220459
    6. '```' → logprob: -18.7500057220459
    7. '	for' → logprob: -21.5000057220459
    8. '0' → logprob: -21.5000057220459
    9. '`' → logprob: -21.7500057220459
    10. '[' → logprob: -21.7500057220459

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164102263748646
    2. ' i' → logprob: -4.264163970947266
    3. '_i' → logprob: -15.389163970947266
    4. '_' → logprob: -16.389163970947266
    5. ' ' → logprob: -16.514163970947266
    6. '	i' → logprob: -17.514163970947266
    7. '`' → logprob: -17.514163970947266
    8. '   ' → logprob: -17.764163970947266
    9. ' _' → logprob: -18.514163970947266
    10. ' in' → logprob: -18.514163970947266

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254982441663742
    2. 'in' → logprob: -1.6004981994628906
    3. '+' → logprob: -9.85049819946289
    4. ' ' → logprob: -11.47549819946289
    5. 'import' → logprob: -12.10049819946289
    6. '	in' → logprob: -12.10049819946289
    7. '1' → logprob: -13.10049819946289
    8. 'In' → logprob: -13.35049819946289
    9. '```' → logprob: -13.72549819946289
    10. 'i' → logprob: -13.97549819946289

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889099419116974
    2. ' range' → logprob: -2.5788910388946533
    3. '(range' → logprob: -13.703890800476074
    4. ' ' → logprob: -16.32889175415039
    5. '	range' → logprob: -17.20389175415039
    6. '  ' → logprob: -18.32889175415039
    7. '   ' → logprob: -18.45389175415039
    8. '
' → logprob: -19.07889175415039
    9. '```' → logprob: -19.20389175415039
    10. '1' → logprob: -19.32889175415039

Token 207: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.476808100938797
    2. '(' → logprob: -0.9768080711364746
    3. 'm' → logprob: -5.976808071136475
    4. '1' → logprob: -8.601808547973633
    5. ' (' → logprob: -12.976808547973633
    6. 'range' → logprob: -13.101808547973633
    7. ' m' → logprob: -14.476808547973633
    8. '(len' → logprob: -14.726808547973633
    9. '   ' → logprob: -15.101808547973633
    10. ',m' → logprob: -15.476808547973633

Token 208: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7883502840995789
    2. '):' → logprob: -1.0383503437042236
    3. '+' → logprob: -1.6633503437042236
    4. '1' → logprob: -6.5383501052856445
    5. '   ' → logprob: -8.288350105285645
    6. ' +' → logprob: -10.163350105285645
    7. ')' → logprob: -10.413350105285645
    8. ' ):' → logprob: -10.663350105285645
    9. '):
' → logprob: -11.413350105285645
    10. '-' → logprob: -11.538350105285645

Token 209: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013009272515773773
    2. '       ' → logprob: -4.388009071350098
    3. ' prefix' → logprob: -8.138009071350098
    4. 'prefix' → logprob: -8.513009071350098
    5. '(prefix' → logprob: -12.138009071350098
    6. '_prefix' → logprob: -14.763009071350098
    7. '```' → logprob: -14.763009071350098
    8. '-prefix' → logprob: -16.263010025024414
    9. '.prefix' → logprob: -16.513010025024414
    10. '   ' → logprob: -17.138010025024414

Token 210: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0021319445222616196
    2. ' prefix' → logprob: -6.252131938934326
    3. '   ' → logprob: -8.502132415771484
    4. '       ' → logprob: -15.627132415771484
    5. '(prefix' → logprob: -16.377132415771484
    6. ' ' → logprob: -17.377132415771484
    7. '.prefix' → logprob: -17.877132415771484
    8. '_prefix' → logprob: -18.627132415771484
    9. 'refix' → logprob: -18.877132415771484
    10. '  ' → logprob: -19.127132415771484

Token 211: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '_area' → logprob: -16.0
    3. '\' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. 'areas' → logprob: -19.125
    6. '_spaces' → logprob: -20.0
    7. 'Areas' → logprob: -20.75
    8. '_are' → logprob: -20.75
    9. '_lengths' → logprob: -21.125
    10. '_angles' → logprob: -21.125

Token 212: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.625001907348633
    3. ' areas' → logprob: -15.375001907348633
    4. 'area' → logprob: -17.250001907348633
    5. 'ares' → logprob: -18.000001907348633
    6. 'ages' → logprob: -18.750001907348633
    7. 'Areas' → logprob: -19.000001907348633
    8. 'a' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.750001907348633
    10. 'are' → logprob: -19.875001907348633

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010794777423143387
    2. '=' → logprob: -5.135794639587402
    3. '[' → logprob: -5.760794639587402
    4. '+=' → logprob: -6.510794639587402
    5. '=i' → logprob: -9.885794639587402
    6. ']+=' → logprob: -9.885794639587402
    7. ']=' → logprob: -10.760794639587402
    8. '[m' → logprob: -11.260794639587402
    9. ' =' → logprob: -11.385794639587402
    10. ' [' → logprob: -11.510794639587402

Token 214: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011212585377506912
    2. ' +' → logprob: -9.375112533569336
    3. '+=' → logprob: -11.250112533569336
    4. '1' → logprob: -12.125112533569336
    5. '=' → logprob: -12.500112533569336
    6. '+
' → logprob: -13.125112533569336
    7. ']' → logprob: -14.250112533569336
    8. ']+=' → logprob: -14.250112533569336
    9. '
' → logprob: -14.500112533569336
    10. '+]' → logprob: -14.625112533569336

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.750015258789062
    3. ']' → logprob: -12.875015258789062
    4. '=' → logprob: -13.875015258789062
    5. '   ' → logprob: -14.000015258789062
    6. '```' → logprob: -14.375015258789062
    7. '
' → logprob: -14.500015258789062
    8. ']=' → logprob: -14.750015258789062
    9. ')' → logprob: -14.812515258789062
    10. '0' → logprob: -15.437515258789062

Token 216: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34111249446868896
    2. ']=' → logprob: -1.341112494468689
    3. ']' → logprob: -3.7161126136779785
    4. ']+=' → logprob: -6.3411126136779785
    5. ' =' → logprob: -6.7161126136779785
    6. '+=' → logprob: -9.46611213684082
    7. '=p' → logprob: -10.21611213684082
    8. ')=' → logprob: -10.59111213684082
    9. ' ]' → logprob: -11.71611213684082
    10. '=len' → logprob: -12.96611213684082

Token 217: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0005533903022296727
    2. ' prefix' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.000553131103516
    4. '(prefix' → logprob: -17.000553131103516
    5. '       ' → logprob: -18.125553131103516
    6. ' ' → logprob: -19.000553131103516
    7. '  ' → logprob: -19.375553131103516
    8. 'pref' → logprob: -19.750553131103516
    9. '
' → logprob: -20.000553131103516
    10. '           ' → logprob: -20.625553131103516

Token 218: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3856492842023727e-06
    2. 'areas' → logprob: -13.625000953674316
    3. 'prefix' → logprob: -16.750001907348633
    4. '_area' → logprob: -18.750001907348633
    5. 'Areas' → logprob: -19.000001907348633
    6. 'area' → logprob: -19.875001907348633
    7. '\' → logprob: -21.125001907348633
    8. '[' → logprob: -21.375001907348633
    9. '_prefix' → logprob: -21.375001907348633
    10. '```' → logprob: -21.500001907348633

Token 219: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.750001907348633
    3. ' areas' → logprob: -13.875001907348633
    4. 'Areas' → logprob: -15.500001907348633
    5. 'area' → logprob: -16.750001907348633
    6. 'ares' → logprob: -18.250001907348633
    7. 'ages' → logprob: -19.375001907348633
    8. '   ' → logprob: -20.750001907348633
    9. 'aries' → logprob: -20.875001907348633
    10. '[' → logprob: -21.250001907348633

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.500000953674316
    4. '```' → logprob: -15.875000953674316
    5. '[m' → logprob: -16.375001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '[I' → logprob: -19.125001907348633
    8. '[index' → logprob: -19.250001907348633
    9. '[
' → logprob: -19.375001907348633
    10. '
' → logprob: -19.375001907348633

Token 221: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014307942241430283
    2. ' +' → logprob: -4.264307975769043
    3. ']+' → logprob: -8.889307975769043
    4. ')+' → logprob: -12.264307975769043
    5. '+
' → logprob: -14.264307975769043
    6. ']' → logprob: -14.389307975769043
    7. '}+' → logprob: -15.264307975769043
    8. '()+' → logprob: -16.389307022094727
    9. ' plus' → logprob: -16.389307022094727
    10. '
' → logprob: -16.764307022094727

Token 222: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.0001234428636962548
    2. ' areas' → logprob: -9.000123023986816
    3. 'area' → logprob: -18.250123977661133
    4. 'Areas' → logprob: -21.125123977661133
    5. 'ares' → logprob: -22.000123977661133
    6. '   ' → logprob: -22.250123977661133
    7. 'angles' → logprob: -22.375123977661133
    8. 'ages' → logprob: -23.375123977661133
    9. 'aren' → logprob: -23.375123977661133
    10. ' áreas' → logprob: -23.625123977661133

Token 223: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. ' [' → logprob: -19.25
    4. '```' → logprob: -19.75
    5. '[I' → logprob: -20.0
    6. '[m' → logprob: -20.375
    7. '[
' → logprob: -21.0
    8. 'i' → logprob: -21.25
    9. '
' → logprob: -21.75
    10. '\[' → logprob: -22.0

Token 224: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005830573500134051
    2. ']' → logprob: -7.750583171844482
    3. ')
' → logprob: -9.500582695007324
    4. '<|end|>' → logprob: -10.125582695007324
    5. ' )' → logprob: -11.250582695007324
    6. '   ' → logprob: -11.625582695007324
    7. '```' → logprob: -12.750582695007324
    8. ')]' → logprob: -13.125582695007324
    9. '
' → logprob: -13.125582695007324
    10. '<|end|>' → logprob: -13.250582695007324

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13439473509788513
    2. '<|end|>' → logprob: -3.384394645690918
    3. '
' → logprob: -3.634394645690918
    4. ' for' → logprob: -3.884394645690918
    5. '    
' → logprob: -4.634394645690918
    6. ' 
' → logprob: -4.759394645690918
    7. '  
' → logprob: -5.009394645690918
    8. ' ' → logprob: -5.384394645690918
    9. 'prefix' → logprob: -5.509394645690918
    10. 'for' → logprob: -5.509394645690918

Token 226: ' almonds' (ID: 136086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1135905981063843
    2. 'count' → logprob: -2.238590717315674
    3. 'result' → logprob: -2.488590717315674
    4. 'positions' → logprob: -2.488590717315674
    5. 'prefix' → logprob: -2.738590717315674
    6. 'pos' → logprob: -2.863590717315674
    7. 'answer' → logprob: -2.863590717315674
    8. '   ' → logprob: -3.363590717315674
    9. 'idx' → logprob: -3.863590717315674
    10. 'ans' → logprob: -3.863590717315674

Token 227: '_in' (ID: 2267)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.348755419254303
    2. '_count' → logprob: -2.348755359649658
    3. '_y' → logprob: -2.473755359649658
    4. '_x' → logprob: -3.723755359649658
    5. '_pos' → logprob: -3.723755359649658
    6. '_counts' → logprob: -3.723755359649658
    7. '_positions' → logprob: -3.848755359649658
    8. '_in' → logprob: -4.723755359649658
    9. '_prefix' → logprob: -5.348755359649658
    10. '_sorted' → logprob: -6.348755359649658

Token 228: '_strip' (ID: 191376)
  Prédit: '_strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strip' → logprob: -0.3834104835987091
    2. '=' → logprob: -1.5084104537963867
    3. 'strip' → logprob: -3.0084104537963867
    4. '=[' → logprob: -3.6334104537963867
    5. '=[]' → logprob: -4.633410453796387
    6. '_area' → logprob: -6.383410453796387
    7. ' =' → logprob: -7.008410453796387
    8. '_' → logprob: -7.008410453796387
    9. 'range' → logprob: -7.133410453796387
    10. '=[]
' → logprob: -7.258410453796387

Token 229: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.28749164938926697
    2. '=' → logprob: -1.5374916791915894
    3. ' =' → logprob: -3.4124915599823
    4. ' =[' → logprob: -6.537491798400879
    5. '=[]' → logprob: -7.662491798400879
    6. '=[[' → logprob: -11.412491798400879
    7. '[' → logprob: -11.662491798400879
    8. '=[]
' → logprob: -12.162491798400879
    9. '=zeros' → logprob: -12.162491798400879
    10. ' ' → logprob: -12.287491798400879

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.350386295001954e-05
    2. '[' → logprob: -9.875073432922363
    3. ' ' → logprob: -11.125073432922363
    4. '[]' → logprob: -12.500073432922363
    5. ']' → logprob: -13.125073432922363
    6. ' [' → logprob: -13.750073432922363
    7. '   ' → logprob: -15.875073432922363
    8. 'False' → logprob: -16.37507438659668
    9. '[]
' → logprob: -16.75007438659668
    10. '][' → logprob: -17.62507438659668

Token 231: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3159167468547821
    2. ']*(' → logprob: -1.3159167766571045
    3. ']' → logprob: -5.940916538238525
    4. 'm' → logprob: -11.940917015075684
    5. '(m' → logprob: -12.190917015075684
    6. '*m' → logprob: -12.690917015075684
    7. '*(' → logprob: -13.190917015075684
    8. '](' → logprob: -13.440917015075684
    9. ']+' → logprob: -14.065917015075684
    10. ')*(' → logprob: -14.440917015075684

Token 232: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01609349437057972
    2. '(m' → logprob: -4.141093730926514
    3. '(' → logprob: -10.516093254089355
    4. ' (' → logprob: -10.891093254089355
    5. ' m' → logprob: -11.391093254089355
    6. '   ' → logprob: -14.891093254089355
    7. '```' → logprob: -15.516093254089355
    8. '(n' → logprob: -15.578593254089355
    9. ',m' → logprob: -15.953593254089355
    10. '(len' → logprob: -15.953593254089355

Token 233: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3581398725509644
    2. '   ' → logprob: -1.3581398725509644
    3. '<|end|>' → logprob: -1.4831398725509644
    4. 'for' → logprob: -1.7331398725509644
    5. ' for' → logprob: -2.608139991760254
    6. '    
' → logprob: -5.483139991760254
    7. '<|end|>' → logprob: -6.608139991760254
    8. '  
' → logprob: -6.733139991760254
    9. ')' → logprob: -7.733139991760254
    10. '  ' → logprob: -8.358139991760254

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10398497432470322
    2. 'for' → logprob: -2.478985071182251
    3. ' for' → logprob: -4.353984832763672
    4. '    
' → logprob: -6.478984832763672
    5. '
' → logprob: -8.103984832763672
    6. '<|end|>' → logprob: -8.853984832763672
    7. '	for' → logprob: -10.728984832763672
    8. ')' → logprob: -10.978984832763672
    9. '  
' → logprob: -11.478984832763672
    10. '    ' → logprob: -11.603984832763672

Token 235: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8828707804204896e-05
    2. ' for' → logprob: -10.125048637390137
    3. '   ' → logprob: -11.875048637390137
    4. ')' → logprob: -14.125048637390137
    5. 'i' → logprob: -15.250048637390137
    6. 'idx' → logprob: -16.000049591064453
    7. '```' → logprob: -16.125049591064453
    8. '	for' → logprob: -16.375049591064453
    9. 'x' → logprob: -17.000049591064453
    10. 'index' → logprob: -17.000049591064453

Token 236: ' assign' (ID: 14975)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00032879042555578053
    2. ' for' → logprob: -8.25032901763916
    3. 'i' → logprob: -9.75032901763916
    4. '   ' → logprob: -12.25032901763916
    5. 'alm' → logprob: -14.12532901763916
    6. 'idx' → logprob: -14.62532901763916
    7. 'range' → logprob: -14.87532901763916
    8. 'x' → logprob: -14.87532901763916
    9. 'import' → logprob: -15.00032901763916
    10. 'j' → logprob: -15.00032901763916

Token 237: ' almonds' (ID: 136086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2734690010547638
    2. ' for' → logprob: -1.7734689712524414
    3. 'alm' → logprob: -3.3984689712524414
    4. 's' → logprob: -4.523468971252441
    5. '   ' → logprob: -5.148468971252441
    6. '<|end|>' → logprob: -5.148468971252441
    7. ' almonds' → logprob: -5.273468971252441
    8. 'indices' → logprob: -6.023468971252441
    9. ')' → logprob: -7.023468971252441
    10. 'x' → logprob: -7.148468971252441

Token 238: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' strips' (ID: 52023)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.4707609713077545
    2. 'str' → logprob: -2.0957610607147217
    3. 'range' → logprob: -2.7207610607147217
    4. 'strip' → logprob: -2.8457610607147217
    5. 'alm' → logprob: -3.0957610607147217
    6. ' range' → logprob: -3.5957610607147217
    7. ' bis' → logprob: -4.470760822296143
    8. ' strips' → logprob: -5.095760822296143
    9. ' almonds' → logprob: -5.345760822296143
    10. '0' → logprob: -5.720760822296143

Token 240: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13194935023784637
    2. '   ' → logprob: -2.5069494247436523
    3. ' for' → logprob: -3.6319494247436523
    4. '
' → logprob: -4.256949424743652
    5. '    
' → logprob: -7.006949424743652
    6. '  
' → logprob: -8.506949424743652
    7. ')' → logprob: -9.381949424743652
    8. '	for' → logprob: -10.006949424743652
    9. ',' → logprob: -10.631949424743652
    10. '   
' → logprob: -10.756949424743652

Token 241: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06161075457930565
    2. ' for' → logprob: -2.936610698699951
    3. '
' → logprob: -5.686610698699951
    4. ':' → logprob: -7.436610698699951
    5. '   ' → logprob: -7.686610698699951
    6. ':
' → logprob: -7.686610698699951
    7. '<|end|>' → logprob: -7.936610698699951
    8. '  
' → logprob: -8.56161117553711
    9. '\n' → logprob: -8.56161117553711
    10. ',' → logprob: -8.56161117553711

Token 242: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000476786372018978
    2. '   ' → logprob: -7.875476837158203
    3. ' for' → logprob: -9.250476837158203
    4. 'y' → logprob: -15.000476837158203
    5. 'idx' → logprob: -16.500476837158203
    6. '	for' → logprob: -16.625476837158203
    7. '    
' → logprob: -17.000476837158203
    8. 'i' → logprob: -17.750476837158203
    9. '```' → logprob: -17.875476837158203
    10. 'x' → logprob: -18.375476837158203

Token 243: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00043138445471413434
    2. '   ' → logprob: -7.875431537628174
    3. ' for' → logprob: -10.875431060791016
    4. 'idx' → logprob: -11.000431060791016
    5. 'y' → logprob: -12.000431060791016
    6. 'i' → logprob: -13.000431060791016
    7. 'indices' → logprob: -13.750431060791016
    8. 'x' → logprob: -13.875431060791016
    9. 'j' → logprob: -14.000431060791016
    10. 'index' → logprob: -14.375431060791016

Token 244: ' strip' (ID: 22967)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2845211029052734
    2. 'y' → logprob: -1.5345211029052734
    3. ' y' → logprob: -1.7845211029052734
    4. 'for' → logprob: -2.4095211029052734
    5. ' for' → logprob: -2.5345211029052734
    6. ' x' → logprob: -2.9095211029052734
    7. '_y' → logprob: -3.6595211029052734
    8. ' almond' → logprob: -3.6595211029052734
    9. 'alm' → logprob: -3.7845211029052734
    10. '_x' → logprob: -4.159521102905273

Token 245: ' is' (ID: 382)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.2749749422073364
    2. ':' → logprob: -2.024974822998047
    3. '_x' → logprob: -2.024974822998047
    4. 'y' → logprob: -2.399974822998047
    5. ''s' → logprob: -2.899974822998047
    6. ' has' → logprob: -3.024974822998047
    7. '   ' → logprob: -3.024974822998047
    8. 's' → logprob: -3.774974822998047
    9. '_start' → logprob: -3.774974822998047
    10. ' is' → logprob: -3.899974822998047

Token 246: ' between' (ID: 2870)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2696533203125
    2. 'r' → logprob: -1.7696533203125
    3. 'defined' → logprob: -2.2696533203125
    4. 'between' → logprob: -2.7696533203125
    5. 'bis' → logprob: -3.1446533203125
    6. '   ' → logprob: -3.1446533203125
    7. ' bis' → logprob: -3.3946533203125
    8. ' defined' → logprob: -3.8946533203125
    9. 'w' → logprob: -4.0196533203125
    10. ' r' → logprob: -4.2696533203125

Token 247: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0551769882440567
    2. 'r' → logprob: -3.6801769733428955
    3. ' l' → logprob: -4.430177211761475
    4. '(l' → logprob: -4.930177211761475
    5. '0' → logprob: -5.680177211761475
    6. 'prefix' → logprob: -6.305177211761475
    7. 'h' → logprob: -6.930177211761475
    8. ' (' → logprob: -7.055177211761475
    9. '(' → logprob: -7.430177211761475
    10. ' r' → logprob: -8.180176734924316

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00199251645244658
    2. '[' → logprob: -6.751992702484131
    3. '[l' → logprob: -7.751992702484131
    4. ' and' → logprob: -9.001992225646973
    5. '[j' → logprob: -9.126992225646973
    6. 'i' → logprob: -10.126992225646973
    7. '[m' → logprob: -10.126992225646973
    8. '[r' → logprob: -11.376992225646973
    9. ' [' → logprob: -11.626992225646973
    10. ' i' → logprob: -11.751992225646973

Token 249: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05257874354720116
    2. '-' → logprob: -3.0525786876678467
    3. ' ]' → logprob: -6.677578926086426
    4. '],' → logprob: -7.177578926086426
    5. ' and' → logprob: -7.677578926086426
    6. '[i' → logprob: -7.927578926086426
    7. ' -' → logprob: -7.927578926086426
    8. 'and' → logprob: -7.927578926086426
    9. 's' → logprob: -10.052578926086426
    10. '+' → logprob: -10.177578926086426

Token 250: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23664192855358124
    2. '1' → logprob: -1.7366418838500977
    3. 'i' → logprob: -4.736641883850098
    4. 'l' → logprob: -4.986641883850098
    5. ' r' → logprob: -4.986641883850098
    6. ' (' → logprob: -6.111641883850098
    7. '0' → logprob: -6.111641883850098
    8. ' ' → logprob: -6.236641883850098
    9. '(i' → logprob: -6.236641883850098
    10. '(' → logprob: -6.611641883850098

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008653334341943264
    2. ']+' → logprob: -5.133653163909912
    3. 'and' → logprob: -6.633653163909912
    4. '],' → logprob: -7.383653163909912
    5. ' and' → logprob: -7.758653163909912
    6. ' ]' → logprob: -8.63365364074707
    7. '+' → logprob: -10.00865364074707
    8. ']
' → logprob: -10.63365364074707
    9. ')' → logprob: -11.00865364074707
    10. ']<' → logprob: -11.25865364074707

Token 252: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16716483235359192
    2. 'and' → logprob: -1.9171648025512695
    3. ']' → logprob: -5.5421648025512695
    4. ',' → logprob: -6.5421648025512695
    5. ' ' → logprob: -7.7921648025512695
    6. '+' → logprob: -7.9171648025512695
    7. ' ,' → logprob: -8.41716480255127
    8. ' if' → logprob: -9.16716480255127
    9. ' ]' → logprob: -9.66716480255127
    10. 's' → logprob: -9.79216480255127

Token 253: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.019313475117087364
    2. ' l' → logprob: -4.394313335418701
    3. 'r' → logprob: -5.019313335418701
    4. ' r' → logprob: -8.89431381225586
    5. '   ' → logprob: -11.39431381225586
    6. 'li' → logprob: -11.76931381225586
    7. ' ' → logprob: -12.39431381225586
    8. '	l' → logprob: -12.89431381225586
    9. 'h' → logprob: -13.64431381225586
    10. '  ' → logprob: -13.83181381225586

Token 254: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. 'i' → logprob: -12.500005722045898
    3. '```' → logprob: -14.750005722045898
    4. ' [' → logprob: -15.000005722045898
    5. '[' → logprob: -15.000005722045898
    6. '_i' → logprob: -15.875005722045898
    7. '[
' → logprob: -15.875005722045898
    8. '[m' → logprob: -16.3750057220459
    9. '[j' → logprob: -16.5000057220459
    10. ' i' → logprob: -16.6250057220459

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007661632727831602
    2. '],' → logprob: -6.007661819458008
    3. ' ]' → logprob: -6.132661819458008
    4. '+' → logprob: -6.507661819458008
    5. ']
' → logprob: -7.632661819458008
    6. '   ' → logprob: -8.007661819458008
    7. ']:' → logprob: -8.757661819458008
    8. ')' → logprob: -8.882661819458008
    9. '].' → logprob: -10.132661819458008
    10. ',' → logprob: -10.132661819458008

Token 256: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7256503701210022
    2. ' for' → logprob: -1.1006503105163574
    3. '   ' → logprob: -1.8506503105163574
    4. ':' → logprob: -5.225650310516357
    5. '\n' → logprob: -5.600650310516357
    6. '.' → logprob: -6.100650310516357
    7. '<|end|>' → logprob: -6.100650310516357
    8. ',' → logprob: -6.225650310516357
    9. '```' → logprob: -6.475650310516357
    10. '  
' → logprob: -6.600650310516357

Token 257: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32954245805740356
    2. 'for' → logprob: -1.7045423984527588
    3. ' for' → logprob: -2.454542398452759
    4. '<|end|>' → logprob: -5.829542636871338
    5. ' ' → logprob: -6.329542636871338
    6. '  ' → logprob: -6.579542636871338
    7. '\t' → logprob: -6.704542636871338
    8. '    ' → logprob: -7.079542636871338
    9. 'i' → logprob: -7.579542636871338
    10. '  
' → logprob: -7.579542636871338

Token 258: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010521204239921644
    2. '   ' → logprob: -9.875104904174805
    3. ' for' → logprob: -10.250104904174805
    4. 'i' → logprob: -11.000104904174805
    5. 'j' → logprob: -15.250104904174805
    6. 'idx' → logprob: -15.250104904174805
    7. '	for' → logprob: -15.875104904174805
    8. 'import' → logprob: -16.250104904174805
    9. 'fo' → logprob: -16.250104904174805
    10. ' ' → logprob: -16.250104904174805

Token 259: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6413862705230713
    2. ' for' → logprob: -0.7663862705230713
    3. 'import' → logprob: -6.516386032104492
    4. 'idx' → logprob: -6.891386032104492
    5. '   ' → logprob: -7.016386032104492
    6. 'x' → logprob: -7.141386032104492
    7. 'sert' → logprob: -7.766386032104492
    8. 's' → logprob: -7.891386032104492
    9. 'y' → logprob: -8.391386032104492
    10. 'index' → logprob: -8.516386032104492

Token 260: ' is' (ID: 382)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04977104812860489
    2. '[' → logprob: -3.4247710704803467
    3. '=' → logprob: -5.424770832061768
    4. ']' → logprob: -6.424770832061768
    5. ' =' → logprob: -6.674770832061768
    6. '>' → logprob: -7.174770832061768
    7. 'i' → logprob: -7.174770832061768
    8. '_i' → logprob: -7.299770832061768
    9. ' is' → logprob: -7.424770832061768
    10. ')' → logprob: -7.674770832061768

Token 261: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.01638905517756939
    2. ' sorted' → logprob: -4.141388893127441
    3. 'strict' → logprob: -8.641388893127441
    4. 'ascending' → logprob: -10.266388893127441
    5. '0' → logprob: -10.641388893127441
    6. '   ' → logprob: -10.891388893127441
    7. 'already' → logprob: -11.016388893127441
    8. 'mon' → logprob: -11.266388893127441
    9. '_sorted' → logprob: -11.266388893127441
    10. ' strictly' → logprob: -11.516388893127441

Token 262: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12020713090896606
    2. ' for' → logprob: -2.8702070713043213
    3. 'for' → logprob: -3.2452070713043213
    4. ':' → logprob: -4.6202073097229
    5. '<|end|>' → logprob: -5.6202073097229
    6. ' ' → logprob: -7.3702073097229
    7. '  ' → logprob: -7.4952073097229
    8. ')' → logprob: -7.7452073097229
    9. '    
' → logprob: -7.8702073097229
    10. ',' → logprob: -7.8702073097229

Token 263: ' use' (ID: 1199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027641814202070236
    2. '   ' → logprob: -3.777641773223877
    3. ' for' → logprob: -5.527641773223877
    4. 'idx' → logprob: -8.402642250061035
    5. 'import' → logprob: -9.777642250061035
    6. 'index' → logprob: -10.527642250061035
    7. '```' → logprob: -11.027642250061035
    8. 'pos' → logprob: -11.152642250061035
    9. '    
' → logprob: -11.277642250061035
    10. '
' → logprob: -11.777642250061035

Token 264: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.00013715129171032459
    2. ' bis' → logprob: -9.875137329101562
    3. 'for' → logprob: -10.500137329101562
    4. 'b' → logprob: -10.500137329101562
    5. '   ' → logprob: -11.000137329101562
    6. 'import' → logprob: -11.625137329101562
    7. '```' → logprob: -13.500137329101562
    8. 'bi' → logprob: -14.375137329101562
    9. '       ' → logprob: -14.375137329101562
    10. 'bs' → logprob: -14.375137329101562

Token 265: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.574251918005757e-05
    2. '_left' → logprob: -11.375055313110352
    3. 'e' → logprob: -11.625055313110352
    4. 'ects' → logprob: -11.750055313110352
    5. '.b' → logprob: -12.250055313110352
    6. '```' → logprob: -12.625055313110352
    7. 'left' → logprob: -13.000055313110352
    8. 'ection' → logprob: -13.000055313110352
    9. 'sect' → logprob: -13.125055313110352
    10. 'eft' → logprob: -13.500055313110352

Token 266: '_right' (ID: 24402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8908424377441406
    2. '   ' → logprob: -1.8908424377441406
    3. 'idx' → logprob: -2.2658424377441406
    4. 'y' → logprob: -2.6408424377441406
    5. 'import' → logprob: -3.1408424377441406
    6. 'x' → logprob: -3.1408424377441406
    7. '_y' → logprob: -3.2658424377441406
    8. 'index' → logprob: -4.140842437744141
    9. '_idx' → logprob: -4.140842437744141
    10. '.b' → logprob: -4.140842437744141

Token 267: ' on' (ID: 402)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.1166090965270996
    2. '(' → logprob: -2.2416090965270996
    3. 'for' → logprob: -2.2416090965270996
    4. '   ' → logprob: -2.2416090965270996
    5. 'idx' → logprob: -2.3666090965270996
    6. '_y' → logprob: -2.3666090965270996
    7. 'x' → logprob: -2.6166090965270996
    8. 'pos' → logprob: -2.9916090965270996
    9. 'y' → logprob: -3.1166090965270996
    10. '_idx' → logprob: -3.2416090965270996

Token 268: ' l' (ID: 305)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.06027485057711601
    2. 'l' → logprob: -3.435274839401245
    3. 'r' → logprob: -3.810274839401245
    4. ' almonds' → logprob: -6.310275077819824
    5. ' r' → logprob: -7.872775077819824
    6. ' l' → logprob: -8.310275077819824
    7. 'alam' → logprob: -8.560275077819824
    8. 'alf' → logprob: -8.560275077819824
    9. 'h' → logprob: -9.247775077819824
    10. 'lam' → logprob: -9.560275077819824

Token 269: ' with' (ID: 483)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2814878225326538
    2. 'for' → logprob: -1.2814878225326538
    3. '_y' → logprob: -1.9064878225326538
    4. ' for' → logprob: -2.7814879417419434
    5. 'x' → logprob: -3.1564879417419434
    6. 'idx' → logprob: -3.5314879417419434
    7. 'alm' → logprob: -3.5314879417419434
    8. '   ' → logprob: -3.6564879417419434
    9. '_x' → logprob: -3.7814879417419434
    10. '(' → logprob: -4.406487941741943

Token 270: ' almond' (ID: 67266)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.3902073800563812
    2. 'y' → logprob: -2.140207290649414
    3. 'S' → logprob: -2.515207290649414
    4. 'h' → logprob: -3.015207290649414
    5. 'w' → logprob: -3.765207290649414
    6. ' almonds' → logprob: -4.515207290649414
    7. ' S' → logprob: -5.202707290649414
    8. ' y' → logprob: -5.202707290649414
    9. 'alph' → logprob: -5.640207290649414
    10. 'alam' → logprob: -5.827707290649414

Token 271: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0441153459250927
    2. 'y' → logprob: -4.0441155433654785
    3. '_x' → logprob: -4.0441155433654785
    4. 's' → logprob: -5.2941155433654785
    5. 'x' → logprob: -5.7941155433654785
    6. ''s' → logprob: -12.16911506652832
    7. ' y' → logprob: -12.29411506652832
    8. '```' → logprob: -12.41911506652832
    9. '[' → logprob: -12.66911506652832
    10. 'Y' → logprob: -12.79411506652832

Token 272: ' to' (ID: 316)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.2699202299118042
    2. ')' → logprob: -1.7699202299118042
    3. '_i' → logprob: -2.2699203491210938
    4. '   ' → logprob: -2.2699203491210938
    5. 'for' → logprob: -2.6449203491210938
    6. '_idx' → logprob: -3.0199203491210938
    7. '_' → logprob: -3.1449203491210938
    8. ']' → logprob: -3.5199203491210938
    9. '[i' → logprob: -3.7699203491210938
    10. '_index' → logprob: -3.7699203491210938

Token 273: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1284976601600647
    2. ' find' → logprob: -2.37849760055542
    3. 'assign' → logprob: -4.12849760055542
    4. 'det' → logprob: -5.25349760055542
    5. 'get' → logprob: -5.87849760055542
    6. 'i' → logprob: -7.37849760055542
    7. 'import' → logprob: -7.62849760055542
    8. 'y' → logprob: -8.003498077392578
    9. ' get' → logprob: -8.378498077392578
    10. ' assign' → logprob: -8.378498077392578

Token 274: ' strip' (ID: 22967)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7102818489074707
    2. 'index' → logprob: -1.4602818489074707
    3. 'idx' → logprob: -1.9602818489074707
    4. 'i' → logprob: -2.8352818489074707
    5. 'strip' → logprob: -3.2102818489074707
    6. ' index' → logprob: -4.585281848907471
    7. ' idx' → logprob: -4.585281848907471
    8. 'position' → logprob: -5.710281848907471
    9. ' strip' → logprob: -5.960281848907471
    10. 'the' → logprob: -6.460281848907471

Token 275: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2609371244907379
    2. 'for' → logprob: -2.010937213897705
    3. ' for' → logprob: -3.385937213897705
    4. '_' → logprob: -4.635937213897705
    5. ')' → logprob: -4.760937213897705
    6. ':' → logprob: -5.010937213897705
    7. '_y' → logprob: -5.260937213897705
    8. ']' → logprob: -5.510937213897705
    9. 'y' → logprob: -5.760937213897705
    10. '=' → logprob: -6.010937213897705

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02504022605717182
    2. ' for' → logprob: -4.650040149688721
    3. 'for' → logprob: -4.900040149688721
    4. ' ' → logprob: -6.525040149688721
    5. '    ' → logprob: -6.775040149688721
    6. ')' → logprob: -7.025040149688721
    7. '_' → logprob: -7.650040149688721
    8. '       ' → logprob: -7.650040149688721
    9. '  ' → logprob: -7.775040149688721
    10. ':' → logprob: -7.775040149688721

Token 277: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5886555314064026
    2. 'for' (adapté à ' for') → logprob: -0.9636555314064026
    3. ' for' → logprob: -2.838655471801758
    4. ' ' → logprob: -6.838655471801758
    5. '    
' → logprob: -6.963655471801758
    6. '  ' → logprob: -7.088655471801758
    7. '       ' → logprob: -7.838655471801758
    8. '  
' → logprob: -8.213655471801758
    9. '   
' → logprob: -8.338655471801758
    10. '
' → logprob: -8.588655471801758

Token 278: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18640024960041046
    2. ' y' → logprob: -1.936400294303894
    3. 'alm' → logprob: -4.061400413513184
    4. ' almond' → logprob: -5.186400413513184
    5. 'a' → logprob: -7.311400413513184
    6. 'ay' → logprob: -7.811400413513184
    7. 'iy' → logprob: -7.936400413513184
    8. 'i' → logprob: -8.061400413513184
    9. 'j' → logprob: -8.561400413513184
    10. 'amy' → logprob: -8.686400413513184

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16045787930488586
    2. 'in' → logprob: -1.9104578495025635
    3. ')' → logprob: -8.910457611083984
    4. '_in' → logprob: -10.660457611083984
    5. '   ' → logprob: -10.785457611083984
    6. ' ' → logprob: -11.160457611083984
    7. '  ' → logprob: -11.285457611083984
    8. '	in' → logprob: -12.160457611083984
    9. 'y' → logprob: -12.535457611083984
    10. 's' → logprob: -12.660457611083984

Token 280: ' almonds' (ID: 136086)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.1013813316822052
    2. ' almonds' → logprob: -2.601381301879883
    3. ' range' → logprob: -4.351381301879883
    4. 'range' → logprob: -4.851381301879883
    5. 'al' → logprob: -8.101381301879883
    6. 'alam' → logprob: -8.351381301879883
    7. 'enumer' → logprob: -8.351381301879883
    8. ' ' → logprob: -8.976381301879883
    9. 'am' → logprob: -9.226381301879883
    10. 'ams' → logprob: -9.851381301879883

Token 281: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.015391293913125992
    2. '_' → logprob: -4.6403913497924805
    3. '_x' → logprob: -5.8903913497924805
    4. '):' → logprob: -6.3903913497924805
    5. ')' → logprob: -7.6403913497924805
    6. ')_' → logprob: -8.01539134979248
    7. ':' → logprob: -8.76539134979248
    8. '_)' → logprob: -9.64039134979248
    9. '_:' → logprob: -10.39039134979248
    10. '_i' → logprob: -10.64039134979248

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031405702233314514
    2. '):' → logprob: -3.6564056873321533
    3. ':
' → logprob: -5.406405925750732
    4. '):
' → logprob: -7.781405925750732
    5. ' :' → logprob: -9.281405448913574
    6. ' in' → logprob: -10.156405448913574
    7. 'in' → logprob: -11.031405448913574
    8. ']:' → logprob: -11.781405448913574
    9. '=' → logprob: -11.906405448913574
    10. ',' → logprob: -12.031405448913574

Token 283: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4798031747341156
    2. '       ' → logprob: -1.979803204536438
    3. ' strip' → logprob: -1.979803204536438
    4. ' i' → logprob: -2.8548030853271484
    5. 'strip' → logprob: -4.604803085327148
    6. ' s' → logprob: -4.979803085327148
    7. ' idx' → logprob: -5.104803085327148
    8. 'i' → logprob: -5.479803085327148
    9. '    ' → logprob: -5.604803085327148
    10. ' p' → logprob: -6.104803085327148

Token 284: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.21746717393398285
    2. 'pos' → logprob: -1.717467188835144
    3. 'index' → logprob: -4.717467308044434
    4. 'strip' → logprob: -5.842467308044434
    5. ' idx' → logprob: -6.092467308044434
    6. 'j' → logprob: -7.717467308044434
    7. 'k' → logprob: -8.092467308044434
    8. 'i' → logprob: -8.092467308044434
    9. 'ind' → logprob: -8.467467308044434
    10. 'p' → logprob: -8.592467308044434

Token 285: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018155328929424286
    2. ' =' → logprob: -4.018155097961426
    3. '=b' → logprob: -12.143155097961426
    4. '=
' → logprob: -17.268156051635742
    5. '   ' → logprob: -18.643156051635742
    6. '＝' → logprob: -18.768156051635742
    7. '=

' → logprob: -19.143156051635742
    8. ' =
' → logprob: -19.643156051635742
    9. ' bis' → logprob: -19.768156051635742
    10. ' ' → logprob: -19.893156051635742

Token 286: 'bis' (ID: 38042)
  Prédit: 'bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -6.392202976712724e-06
    2. ' bis' → logprob: -12.000006675720215
    3. 'b' → logprob: -16.1250057220459
    4. 'bs' → logprob: -17.8750057220459
    5. 'import' → logprob: -19.2500057220459
    6. 'bi' → logprob: -19.3750057220459
    7. '   ' → logprob: -21.1250057220459
    8. 'Bis' → logprob: -21.6250057220459
    9. 'bus' → logprob: -22.1250057220459
    10. '-b' → logprob: -22.5000057220459

Token 287: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.005415061488747597
    2. 'sect' → logprob: -5.255414962768555
    3. 'ct' → logprob: -8.755414962768555
    4. 'lect' → logprob: -11.755414962768555
    5. 'ce' → logprob: -12.380414962768555
    6. 'e' → logprob: -12.755414962768555
    7. '```' → logprob: -13.255414962768555
    8. 'ects' → logprob: -13.630414962768555
    9. 'ectl' → logprob: -13.755414962768555
    10. 's' → logprob: -14.005414962768555

Token 288: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.001625429606065154
    2. '_right' → logprob: -7.0016255378723145
    3. '.' → logprob: -7.5016255378723145
    4. '.right' → logprob: -9.376625061035156
    5. '._' → logprob: -9.751625061035156
    6. ' .' → logprob: -11.626625061035156
    7. '.Right' → logprob: -12.376625061035156
    8. '.ins' → logprob: -13.626625061035156
    9. 'Right' → logprob: -13.751625061035156
    10. '```' → logprob: -14.251625061035156

Token 289: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0012471356894820929
    2. 's' → logprob: -7.251246929168701
    3. 'sect' → logprob: -8.37624740600586
    4. 'right' → logprob: -9.25124740600586
    5. 'ist' → logprob: -9.37624740600586
    6. 'import' → logprob: -10.87624740600586
    7. 'ect' → logprob: -10.87624740600586
    8. '```' → logprob: -11.00124740600586
    9. 'ins' → logprob: -11.37624740600586
    10. 'l' → logprob: -12.12624740600586

Token 290: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.20146948099136353
    2. 'ect' → logprob: -1.7014694213867188
    3. 'sect' → logprob: -9.951469421386719
    4. '```' → logprob: -13.326469421386719
    5. 'n' → logprob: -13.576469421386719
    6. 't' → logprob: -13.701469421386719
    7. 's' → logprob: -14.201469421386719
    8. 'с' → logprob: -14.451469421386719
    9. '   ' → logprob: -14.951469421386719
    10. 'st' → logprob: -15.076469421386719

Token 291: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.13242562115192413
    2. 'right' → logprob: -2.132425546646118
    3. 'r' → logprob: -5.257425785064697
    4. 'l' → logprob: -8.257425308227539
    5. '_left' → logprob: -12.382425308227539
    6. 'Right' → logprob: -12.507425308227539
    7. '(l' → logprob: -13.257425308227539
    8. 'rights' → logprob: -13.257425308227539
    9. 'b' → logprob: -14.507425308227539
    10. ' right' → logprob: -15.132425308227539

Token 292: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. 'l' → logprob: -14.875015258789062
    4. ' (' → logprob: -16.375015258789062
    5. ',l' → logprob: -16.750015258789062
    6. '(L' → logprob: -17.125015258789062
    7. '(
' → logprob: -17.375015258789062
    8. ' l' → logprob: -18.000015258789062
    9. '(r' → logprob: -18.125015258789062
    10. '	l' → logprob: -19.000015258789062

Token 293: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.006785946898162365
    2. ',' → logprob: -5.006785869598389
    3. '(y' → logprob: -9.756786346435547
    4. ' ,' → logprob: -11.381786346435547
    5. ',(' → logprob: -14.131786346435547
    6. '(' → logprob: -15.506786346435547
    7. 'y' → logprob: -16.131786346435547
    8. ',user' → logprob: -16.381786346435547
    9. ',w' → logprob: -17.131786346435547
    10. ',Y' → logprob: -17.131786346435547

Token 294: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019599171355366707
    2. ')
' → logprob: -6.251959800720215
    3. ' )' → logprob: -10.876959800720215
    4. ')-' → logprob: -11.501959800720215
    5. '   ' → logprob: -15.001959800720215
    6. ')`' → logprob: -15.001959800720215
    7. ')

' → logprob: -15.376959800720215
    8. ')
' → logprob: -15.376959800720215
    9. '       ' → logprob: -15.501959800720215
    10. ')#' → logprob: -15.626959800720215

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -16.125003814697266
    4. '0' → logprob: -16.875003814697266
    5. '```' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '
' → logprob: -19.250003814697266
    8. '`' → logprob: -20.250003814697266
    9. 'import' → logprob: -20.750003814697266
    10. '=' → logprob: -20.750003814697266

Token 296: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38066646456718445
    2. '<|end|>' → logprob: -1.5056664943695068
    3. '   ' → logprob: -2.630666494369507
    4. '       ' → logprob: -4.255666255950928
    5. ')' → logprob: -5.380666255950928
    6. ' if' → logprob: -6.630666255950928
    7. '    
' → logprob: -7.130666255950928
    8. ' 
' → logprob: -8.130666732788086
    9. '<|end|>' → logprob: -8.130666732788086
    10. '    ' → logprob: -8.505666732788086

Token 297: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9914464950561523
    2. '<|end|>' → logprob: -1.4914464950561523
    3. ' if' → logprob: -1.8664464950561523
    4. '
' → logprob: -2.3664464950561523
    5. ' 
' → logprob: -2.9914464950561523
    6. 'if' → logprob: -3.7414464950561523
    7. '    
' → logprob: -4.241446495056152
    8. '       ' → logprob: -4.366446495056152
    9. ' almonds' → logprob: -4.741446495056152
    10. '    ' → logprob: -4.741446495056152

Token 298: ' if' (ID: 538)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.5863983631134033
    2. 'if' (adapté à ' if') → logprob: -0.8363983631134033
    3. ' if' → logprob: -4.586398124694824
    4. '   ' → logprob: -9.711398124694824
    5. ' almonds' → logprob: -10.211398124694824
    6. ' ' → logprob: -10.961398124694824
    7. 'alam' → logprob: -10.961398124694824
    8. 'alc' → logprob: -11.211398124694824
    9. '1' → logprob: -11.461398124694824
    10. 'al' → logprob: -11.836398124694824

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22321024537086487
    2. ' ' → logprob: -2.598210334777832
    3. ' idx' → logprob: -2.598210334777832
    4. 'idx' → logprob: -2.973210334777832
    5. '(idx' → logprob: -10.223210334777832
    6. '   ' → logprob: -10.348210334777832
    7. '	idx' → logprob: -10.848210334777832
    8. '  ' → logprob: -12.098210334777832
    9. '[idx' → logprob: -13.223210334777832
    10. '_idx' → logprob: -14.035710334777832

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049933441914618015
    2. 'idx' → logprob: -5.379993438720703
    3. ' ' → logprob: -8.004993438720703
    4. ' idx' → logprob: -10.254993438720703
    5. '(idx' → logprob: -13.004993438720703
    6. '-' → logprob: -14.504993438720703
    7. '	idx' → logprob: -14.879993438720703
    8. '   ' → logprob: -15.254993438720703
    9. '[idx' → logprob: -16.192493438720703
    10. '  ' → logprob: -16.192493438720703

Token 301: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.40066567063331604
    2. ' <=' → logprob: -1.1506656408309937
    3. '>=' → logprob: -4.525665760040283
    4. ' >=' → logprob: -6.025665760040283
    5. '=' → logprob: -7.900665760040283
    6. '>' → logprob: -10.150665283203125
    7. '<|end|>' → logprob: -11.775665283203125
    8. '<' → logprob: -12.025665283203125
    9. ' <' → logprob: -12.150665283203125
    10. ' ' → logprob: -12.275665283203125

Token 302: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.7610454708337784e-05
    2. ' idx' → logprob: -10.500027656555176
    3. '	idx' → logprob: -19.12502670288086
    4. 'index' → logprob: -20.00002670288086
    5. '[idx' → logprob: -20.25002670288086
    6. '(idx' → logprob: -20.62502670288086
    7. ' ' → logprob: -21.00002670288086
    8. '=' → logprob: -21.75002670288086
    9. '```' → logprob: -22.50002670288086
    10. 'id' → logprob: -22.50002670288086

Token 303: '<m' (ID: 36686)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1719478964805603
    2. ' <' → logprob: -2.546947956085205
    3. ' and' → logprob: -3.046947956085205
    4. '<m' → logprob: -4.421947956085205
    5. 'and' → logprob: -4.796947956085205
    6. '<n' → logprob: -5.671947956085205
    7. '<len' → logprob: -5.671947956085205
    8. ':' → logprob: -6.421947956085205
    9. '<size' → logprob: -6.671947956085205
    10. ':<' → logprob: -7.921947956085205

Token 304: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11607063561677933
    2. ':' → logprob: -2.3660707473754883
    3. '       ' → logprob: -4.616070747375488
    4. '):
' → logprob: -5.616070747375488
    5. '   ' → logprob: -6.866070747375488
    6. ' almonds' → logprob: -7.866070747375488
    7. '           ' → logprob: -8.366070747375488
    8. 'alm' → logprob: -8.866070747375488
    9. ']:
' → logprob: -8.991070747375488
    10. ' and' → logprob: -9.241070747375488

Token 305: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5832335352897644
    2. 'alm' → logprob: -1.0832335948944092
    3. '           ' → logprob: -2.333233594894409
    4. ' almonds' → logprob: -5.58323335647583
    5. '   ' → logprob: -6.20823335647583
    6. 'al' → logprob: -8.458233833312988
    7. '```' → logprob: -8.708233833312988
    8. 'am' → logprob: -9.083233833312988
    9. '        
' → logprob: -10.833233833312988
    10. '            
' → logprob: -10.958233833312988

Token 306: ' almonds' (ID: 136086)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.00013655527436640114
    2. '   ' → logprob: -9.000136375427246
    3. '           ' → logprob: -12.500136375427246
    4. '       ' → logprob: -12.875136375427246
    5. 'alf' → logprob: -12.875136375427246
    6. 'alam' → logprob: -13.500136375427246
    7. ' almonds' → logprob: -14.125136375427246
    8. '```' → logprob: -14.375136375427246
    9. 'alc' → logprob: -14.500136375427246
    10. 'alk' → logprob: -15.000136375427246

Token 307: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.491498531133402e-06
    2. 'in' → logprob: -12.000009536743164
    3. 'In' → logprob: -12.875009536743164
    4. 's' → logprob: -15.500009536743164
    5. '
' → logprob: -16.250009536743164
    6. '_' → logprob: -16.500009536743164
    7. '_int' → logprob: -17.000009536743164
    8. '_i' → logprob: -17.250009536743164
    9. '_to' → logprob: -17.500009536743164
    10. '```' → logprob: -17.500009536743164

Token 308: '_strip' (ID: 191376)
  Prédit: '_strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strip' → logprob: -0.005932236090302467
    2. 'strip' → logprob: -5.130932331085205
    3. ' strip' → logprob: -13.255931854248047
    4. '(strip' → logprob: -13.880931854248047
    5. '-strip' → logprob: -15.755931854248047
    6. 'Strip' → logprob: -16.130931854248047
    7. '_str' → logprob: -16.255931854248047
    8. '_' → logprob: -16.255931854248047
    9. '```' → logprob: -16.255931854248047
    10. 's' → logprob: -16.630931854248047

Token 309: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.2200749754119897e-06
    2. '+=' → logprob: -13.625001907348633
    3. '```' → logprob: -15.000001907348633
    4. 'idx' → logprob: -15.125001907348633
    5. '[' → logprob: -15.375001907348633
    6. '   ' → logprob: -16.875001907348633
    7. ']+=' → logprob: -17.000001907348633
    8. ' +=' → logprob: -17.250001907348633
    9. '[i' → logprob: -17.500001907348633
    10. '	idx' → logprob: -17.875001907348633

Token 310: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.361478716135025
    2. '+=' → logprob: -1.3614786863327026
    3. ']' → logprob: -3.111478805541992
    4. ' +=' → logprob: -5.986478805541992
    5. ' ]' → logprob: -11.861478805541992
    6. ')' → logprob: -11.986478805541992
    7. '```' → logprob: -12.361478805541992
    8. '   ' → logprob: -12.611478805541992
    9. '+' → logprob: -13.361478805541992
    10. ']+' → logprob: -13.486478805541992

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -19.0
    4. 'w' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. '2' → logprob: -20.25
    7. '+' → logprob: -20.375
    8. '   ' → logprob: -20.4375
    9. '１' → logprob: -20.4375
    10. 'a' → logprob: -20.625

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9613293409347534
    2. 'for' → logprob: -1.3363293409347534
    3. 'total' → logprob: -1.9613293409347534
    4. 'print' → logprob: -2.086329460144043
    5. '<|end|>' → logprob: -3.461329460144043
    6. 'prefix' → logprob: -3.961329460144043
    7. ' for' → logprob: -4.586329460144043
    8. 'sum' → logprob: -5.211329460144043
    9. '    
' → logprob: -5.711329460144043
    10. 'next' → logprob: -5.836329460144043

Token 313: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4785117208957672
    2. 'total' → logprob: -1.3535116910934448
    3. 'sum' → logprob: -3.1035118103027344
    4. 'for' → logprob: -3.6035118103027344
    5. '   ' → logprob: -4.353511810302734
    6. 'max' → logprob: -4.728511810302734
    7. '<|end|>' → logprob: -5.353511810302734
    8. '#' → logprob: -6.103511810302734
    9. 'print' → logprob: -6.228511810302734
    10. '```' → logprob: -6.478511810302734

Token 314: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.14142972230911255
    2. 'total' → logprob: -3.0164296627044678
    3. 'dp' → logprob: -3.5164296627044678
    4. 'for' → logprob: -4.266429901123047
    5. 'sum' → logprob: -4.266429901123047
    6. 'max' → logprob: -4.891429901123047
    7. '   ' → logprob: -6.141429901123047
    8. '#' → logprob: -6.141429901123047
    9. 'import' → logprob: -6.641429901123047
    10. 'print' → logprob: -7.016429901123047

Token 315: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001717166742309928
    2. '_prefix' → logprob: -9.500171661376953
    3. '_sum' → logprob: -9.750171661376953
    4. '_num' → logprob: -10.625171661376953
    5. '_al' → logprob: -11.750171661376953
    6. 'alm' → logprob: -14.000171661376953
    7. '_s' → logprob: -14.000171661376953
    8. '_c' → logprob: -14.500171661376953
    9. '_count' → logprob: -15.000171661376953
    10. 'prefix' → logprob: -15.000171661376953

Token 316: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -4.763666947837919e-05
    2. 'alam' → logprob: -11.12504768371582
    3. 'alc' → logprob: -12.00004768371582
    4. 'alf' → logprob: -12.50004768371582
    5. 'in' → logprob: -12.87504768371582
    6. '```' → logprob: -13.81254768371582
    7. 'al' → logprob: -13.87504768371582
    8. 'num' → logprob: -13.93754768371582
    9. ' almonds' → logprob: -13.93754768371582
    10. 's' → logprob: -14.00004768371582

Token 317: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -2.3676733690081164e-05
    2. 'nds' → logprob: -12.37502384185791
    3. 'ands' → logprob: -12.62502384185791
    4. 'om' → logprob: -12.87502384185791
    5. 'ond' → logprob: -13.00002384185791
    6. 'inds' → logprob: -13.25002384185791
    7. 'o' → logprob: -13.37502384185791
    8. 'ds' → logprob: -13.62502384185791
    9. 'onts' → logprob: -13.87502384185791
    10. 'ONDS' → logprob: -13.87502384185791

Token 318: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00021927160560153425
    2. 'num' → logprob: -9.000219345092773
    3. '_' → logprob: -9.500219345092773
    4. '[' → logprob: -11.625219345092773
    5. '_nums' → logprob: -12.875219345092773
    6. '=' → logprob: -13.000219345092773
    7. '_sum' → logprob: -13.625219345092773
    8. '=[' → logprob: -13.875219345092773
    9. '[num' → logprob: -14.375219345092773
    10. ' =' → logprob: -14.625219345092773

Token 319: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0541609562933445
    2. '=[' → logprob: -3.3041610717773438
    3. '=' → logprob: -4.179161071777344
    4. ' =' → logprob: -7.804161071777344
    5. ' =[' → logprob: -8.929161071777344
    6. ' [' → logprob: -9.679161071777344
    7. '[i' → logprob: -11.429161071777344
    8. '0' → logprob: -11.679161071777344
    9. 's' → logprob: -11.929161071777344
    10. '

' → logprob: -12.179161071777344

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.289473822107539e-05
    2. '[' → logprob: -9.750062942504883
    3. ' ' → logprob: -12.750062942504883
    4. 'alm' → logprob: -14.000062942504883
    5. ' [' → logprob: -15.250062942504883
    6. 'prefix' → logprob: -15.500062942504883
    7. '   ' → logprob: -16.125062942504883
    8. '1' → logprob: -17.000062942504883
    9. '{' → logprob: -17.187562942504883
    10. '(' → logprob: -17.187562942504883

Token 321: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.028352970257401466
    2. ']' → logprob: -3.653352975845337
    3. ']
' → logprob: -6.903352737426758
    4. ']*' → logprob: -7.028352737426758
    5. ']+' → logprob: -9.903352737426758
    6. 'for' → logprob: -10.028352737426758
    7. '
' → logprob: -10.778352737426758
    8. '](' → logprob: -11.403352737426758
    9. '0' → logprob: -11.653352737426758
    10. ']
' → logprob: -11.903352737426758

Token 322: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.65707261255011e-06
    2. '(m' → logprob: -12.750008583068848
    3. ' m' → logprob: -12.750008583068848
    4. 'len' → logprob: -13.000008583068848
    5. '   ' → logprob: -14.750008583068848
    6. '
' → logprob: -17.000009536743164
    7. '1' → logprob: -17.250009536743164
    8. '[m' → logprob: -17.625009536743164
    9. '(' → logprob: -17.875009536743164
    10. ' ' → logprob: -18.000009536743164

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1472419600977446e-06
    2. ' +' → logprob: -14.750000953674316
    3. '+
' → logprob: -15.250000953674316
    4. '1' → logprob: -15.625000953674316
    5. '+)' → logprob: -16.000001907348633
    6. ')+' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. '+m' → logprob: -18.125001907348633
    10. '+[' → logprob: -18.875001907348633

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.0
    4. '```' → logprob: -16.25
    5. '
' → logprob: -16.75
    6. ' ' → logprob: -17.5
    7. '+' → logprob: -18.25
    8. '

' → logprob: -18.75
    9. '       ' → logprob: -18.875
    10. '``' → logprob: -19.5

Token 325: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16025693714618683
    2. ')' → logprob: -1.9102569818496704
    3. ')
' → logprob: -10.535257339477539
    4. ')

' → logprob: -12.160257339477539
    5. '   ' → logprob: -14.285257339477539
    6. '+' → logprob: -16.41025733947754
    7. 'for' → logprob: -16.41025733947754
    8. ' )
' → logprob: -16.66025733947754
    9. ')`
' → logprob: -17.16025733947754
    10. '```' → logprob: -17.41025733947754

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7014164924621582
    2. 'for' → logprob: -0.7014164924621582
    3. ' for' → logprob: -4.826416492462158
    4. '	for' → logprob: -8.951416015625
    5. '
' → logprob: -10.076416015625
    6. '<|end|>' → logprob: -10.326416015625
    7. '```' → logprob: -11.701416015625
    8. '    
' → logprob: -12.326416015625
    9. '  
' → logprob: -14.326416015625
    10. ' ' → logprob: -14.451416015625

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.250017166137695
    3. ' for' → logprob: -12.625017166137695
    4. 'prefix' → logprob: -14.500017166137695
    5. '```' → logprob: -15.250017166137695
    6. '
' → logprob: -15.375017166137695
    7. '	for' → logprob: -16.875017166137695
    8. '    
' → logprob: -17.000017166137695
    9. 'current' → logprob: -17.500017166137695
    10. '[' → logprob: -18.875017166137695

Token 328: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029751529917120934
    2. ' i' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.529751777648926
    4. '	i' → logprob: -15.029751777648926
    5. ' ' → logprob: -15.654751777648926
    6. '_i' → logprob: -16.02975082397461
    7. '  ' → logprob: -17.65475082397461
    8. '```' → logprob: -18.52975082397461
    9. '[i' → logprob: -18.65475082397461
    10. ' in' → logprob: -18.65475082397461

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005950841121375561
    2. 'in' → logprob: -5.130950927734375
    3. '   ' → logprob: -11.130950927734375
    4. ' ' → logprob: -12.505950927734375
    5. '+' → logprob: -13.130950927734375
    6. '  ' → logprob: -14.880950927734375
    7. '	in' → logprob: -14.880950927734375
    8. 'range' → logprob: -15.380950927734375
    9. '```' → logprob: -15.380950927734375
    10. '1' → logprob: -15.880950927734375

Token 330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061968132853507996
    2. ' range' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.311967849731445
    4. '(range' → logprob: -15.811967849731445
    5. '   ' → logprob: -16.936967849731445
    6. ' in' → logprob: -17.186967849731445
    7. 'in' → logprob: -17.686967849731445
    8. '  ' → logprob: -17.686967849731445
    9. '
' → logprob: -18.811967849731445
    10. 'm' → logprob: -19.061967849731445

Token 331: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5848191976547241
    2. 'm' → logprob: -0.8348191976547241
    3. '(' → logprob: -4.834819316864014
    4. '1' → logprob: -7.334819316864014
    5. 'range' → logprob: -8.459818840026855
    6. ' m' → logprob: -10.959818840026855
    7. ' (' → logprob: -12.709818840026855
    8. '   ' → logprob: -13.209818840026855
    9. ' range' → logprob: -13.209818840026855
    10. ' ' → logprob: -13.709818840026855

Token 332: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4831070005893707
    2. '+' → logprob: -1.4831069707870483
    3. '):' → logprob: -1.8581069707870483
    4. '   ' → logprob: -8.73310661315918
    5. '):
' → logprob: -9.98310661315918
    6. '-' → logprob: -11.85810661315918
    7. ' +' → logprob: -12.23310661315918
    8. ':' → logprob: -12.85810661315918
    9. '1' → logprob: -13.10810661315918
    10. '
' → logprob: -13.10810661315918

Token 333: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006664811633527279
    2. '       ' → logprob: -5.631664752960205
    3. 'prefix' → logprob: -6.256664752960205
    4. ' prefix' → logprob: -7.006664752960205
    5. '```' → logprob: -8.881665229797363
    6. '(prefix' → logprob: -9.881665229797363
    7. '
' → logprob: -10.131665229797363
    8. '_prefix' → logprob: -13.131665229797363
    9. '-prefix' → logprob: -14.506665229797363
    10. '[' → logprob: -14.631665229797363

Token 334: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0006933739641681314
    2. ' prefix' → logprob: -7.750693321228027
    3. '   ' → logprob: -8.250693321228027
    4. '       ' → logprob: -13.375693321228027
    5. '```' → logprob: -17.500694274902344
    6. '
' → logprob: -18.125694274902344
    7. '(prefix' → logprob: -18.125694274902344
    8. '_prefix' → logprob: -18.375694274902344
    9. '.prefix' → logprob: -18.375694274902344
    10. ' ' → logprob: -20.000694274902344

Token 335: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'alm' → logprob: -16.5
    3. '_prefix' → logprob: -18.375
    4. '_al' → logprob: -18.625
    5. 'prefix' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. ' _' → logprob: -19.25
    8. '‌' → logprob: -19.375
    9. ' almonds' → logprob: -19.375
    10. '\' → logprob: -19.5

Token 336: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. 'alam' → logprob: -17.625
    4. 'alf' → logprob: -18.125
    5. 'alc' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. '```' → logprob: -20.0
    8. 'alk' → logprob: -20.0
    9. '	' → logprob: -20.125
    10. '
' → logprob: -20.25

Token 337: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.00013595925702247769
    2. 'ands' → logprob: -9.375136375427246
    3. 'nds' → logprob: -11.000136375427246
    4. 'ds' → logprob: -11.125136375427246
    5. 'on' → logprob: -11.875136375427246
    6. 'ords' → logprob: -12.875136375427246
    7. 'onts' → logprob: -13.375136375427246
    8. '_' → logprob: -13.375136375427246
    9. '_on' → logprob: -13.625136375427246
    10. 'ONDS' → logprob: -13.625136375427246

Token 338: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0793779268860817
    2. '_' → logprob: -2.5793778896331787
    3. 'num' → logprob: -8.079378128051758
    4. '_nums' → logprob: -9.454378128051758
    5. 'um' → logprob: -9.954378128051758
    6. 'm' → logprob: -11.204378128051758
    7. 'alm' → logprob: -11.829378128051758
    8. 's' → logprob: -12.204378128051758
    9. 'ums' → logprob: -12.204378128051758
    10. '[' → logprob: -12.329378128051758

Token 339: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '=' → logprob: -13.750003814697266
    3. '   ' → logprob: -14.000003814697266
    4. '[' → logprob: -14.250003814697266
    5. ' [' → logprob: -14.500003814697266
    6. '[I' → logprob: -15.375003814697266
    7. '```' → logprob: -15.500003814697266
    8. '\[' → logprob: -15.750003814697266
    9. '
' → logprob: -16.000003814697266
    10. 'i' → logprob: -16.625003814697266

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.0100624169572257e-05
    2. '1' → logprob: -12.125020027160645
    3. ']+=' → logprob: -12.625020027160645
    4. '=' → logprob: -12.875020027160645
    5. '+=' → logprob: -12.875020027160645
    6. ']' → logprob: -13.250020027160645
    7. ']+' → logprob: -13.375020027160645
    8. ' +' → logprob: -13.625020027160645
    9. ']=' → logprob: -13.875020027160645
    10. '+]' → logprob: -14.875020027160645

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. '+' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.250014305114746
    4. '   ' → logprob: -14.250014305114746
    5. '```' → logprob: -17.000015258789062
    6. '
' → logprob: -17.125015258789062
    7. ']+' → logprob: -18.125015258789062
    8. ']' → logprob: -18.375015258789062
    9. 'i' → logprob: -18.437515258789062
    10. ' +' → logprob: -18.875015258789062

Token 342: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0012405868619680405
    2. ']' → logprob: -7.0012407302856445
    3. '=' → logprob: -8.501240730285645
    4. ']+=' → logprob: -9.001240730285645
    5. ')=' → logprob: -13.126240730285645
    6. '=p' → logprob: -15.501240730285645
    7. '']=' → logprob: -16.501239776611328
    8. 'prefix' → logprob: -16.876239776611328
    9. ']=(' → logprob: -17.001239776611328
    10. '"]=' → logprob: -17.501239776611328

Token 343: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.0325924449716695e-05
    2. ' prefix' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. '(prefix' → logprob: -17.125009536743164
    5. 'pref' → logprob: -19.000009536743164
    6. ' ' → logprob: -20.250009536743164
    7. '       ' → logprob: -21.250009536743164
    8. '  ' → logprob: -21.250009536743164
    9. 'refix' → logprob: -21.500009536743164
    10. '```' → logprob: -21.750009536743164

Token 344: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'prefix' → logprob: -17.25
    3. 'alm' → logprob: -17.5
    4. 's' → logprob: -20.875
    5. '_prefix' → logprob: -20.875
    6. '+' → logprob: -21.125
    7. '\' → logprob: -21.25
    8. 'al' → logprob: -21.75
    9. 'e' → logprob: -22.25
    10. '[' → logprob: -22.375

Token 345: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.125001907348633
    3. 'alam' → logprob: -14.750001907348633
    4. 'alf' → logprob: -15.625001907348633
    5. 'alc' → logprob: -16.125001907348633
    6. 'alk' → logprob: -16.625001907348633
    7. '[' → logprob: -17.000001907348633
    8. 's' → logprob: -17.625001907348633
    9. 'alg' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.875001907348633

Token 346: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.0004142264660913497
    2. 'ands' → logprob: -8.12541389465332
    3. 'ds' → logprob: -9.87541389465332
    4. 'nds' → logprob: -11.12541389465332
    5. 'o' → logprob: -11.25041389465332
    6. '_' → logprob: -11.75041389465332
    7. 'on' → logprob: -12.37541389465332
    8. 'ONDS' → logprob: -12.50041389465332
    9. 'inds' → logprob: -12.62541389465332
    10. 'ods' → logprob: -12.75041389465332

Token 347: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0003918271977454424
    2. 'num' → logprob: -7.875391960144043
    3. '_' → logprob: -11.875391960144043
    4. 'alm' → logprob: -12.750391960144043
    5. 'um' → logprob: -14.625391960144043
    6. 'al' → logprob: -15.000391960144043
    7. 'inum' → logprob: -15.500391960144043
    8. 'in' → logprob: -16.000391006469727
    9. '	num' → logprob: -16.125391006469727
    10. '```' → logprob: -16.250391006469727

Token 348: '[i' (ID: 1768)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.3884795606136322
    2. '[i' → logprob: -1.1384795904159546
    3. 'num' → logprob: -6.513479709625244
    4. '+' → logprob: -10.138479232788086
    5. '[' → logprob: -10.138479232788086
    6. 'Num' → logprob: -11.513479232788086
    7. '_' → logprob: -11.638479232788086
    8. '[num' → logprob: -11.888479232788086
    9. '+i' → logprob: -12.388479232788086
    10. 'prefix' → logprob: -13.013479232788086

Token 349: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10140330344438553
    2. ']+' → logprob: -2.35140323638916
    3. ' +' → logprob: -7.22640323638916
    4. ']' → logprob: -7.85140323638916
    5. ')+' → logprob: -9.60140323638916
    6. '   ' → logprob: -12.10140323638916
    7. '}+' → logprob: -12.35140323638916
    8. '+]' → logprob: -13.97640323638916
    9. '()+' → logprob: -15.47640323638916
    10. ']+=' → logprob: -15.60140323638916

Token 350: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.018224865198135376
    2. ' almonds' → logprob: -4.018224716186523
    3. 'alam' → logprob: -10.643224716186523
    4. ' almond' → logprob: -11.018224716186523
    5. 'alf' → logprob: -12.143224716186523
    6. 'alc' → logprob: -12.643224716186523
    7. ' ' → logprob: -12.768224716186523
    8. 'ald' → logprob: -13.018224716186523
    9. '   ' → logprob: -13.018224716186523
    10. ' alm' → logprob: -13.268224716186523

Token 351: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.0014715301804244518
    2. 'ands' → logprob: -6.626471519470215
    3. 'nds' → logprob: -9.626471519470215
    4. 'unds' → logprob: -10.001471519470215
    5. 'inds' → logprob: -11.501471519470215
    6. 'ONDS' → logprob: -12.376471519470215
    7. 'ds' → logprob: -12.501471519470215
    8. 's' → logprob: -12.876471519470215
    9. 'ods' → logprob: -13.001471519470215
    10. 'on' → logprob: -13.126471519470215

Token 352: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.4849443838757e-06
    2. 's' → logprob: -13.125004768371582
    3. 'in' → logprob: -13.375004768371582
    4. 'In' → logprob: -15.375004768371582
    5. '_' → logprob: -15.500004768371582
    6. '_s' → logprob: -16.250003814697266
    7. '_i' → logprob: -16.250003814697266
    8. '[in' → logprob: -16.750003814697266
    9. ' _' → logprob: -16.750003814697266
    10. 'n' → logprob: -17.000003814697266

Token 353: '_strip' (ID: 191376)
  Prédit: '_strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strip' → logprob: -0.0031804447062313557
    2. 'strip' → logprob: -5.753180503845215
    3. '_str' → logprob: -14.378180503845215
    4. '_slice' → logprob: -14.753180503845215
    5. 'g' → logprob: -14.878180503845215
    6. '-strip' → logprob: -15.378180503845215
    7. 'str' → logprob: -15.378180503845215
    8. '(strip' → logprob: -15.753180503845215
    9. 's' → logprob: -16.1281795501709
    10. 'Strip' → logprob: -16.2531795501709

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010628487507347018
    2. '[' → logprob: -9.500105857849121
    3. '```' → logprob: -10.750105857849121
    4. '
' → logprob: -12.875105857849121
    5. '[
' → logprob: -13.625105857849121
    6. '   ' → logprob: -14.125105857849121
    7. '  
' → logprob: -14.125105857849121
    8. '<|end|>' → logprob: -14.500105857849121
    9. ' [' → logprob: -14.625105857849121
    10. '\[' → logprob: -14.625105857849121

Token 355: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002314303710591048
    2. '<|end|>' → logprob: -8.625231742858887
    3. ']' → logprob: -10.250231742858887
    4. ')
' → logprob: -12.500231742858887
    5. '```' → logprob: -12.500231742858887
    6. '   ' → logprob: -13.250231742858887
    7. '<|end|>' → logprob: -13.500231742858887
    8. ' )' → logprob: -13.625231742858887
    9. ')return' → logprob: -14.000231742858887
    10. '}' → logprob: -14.125231742858887

Token 356: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3094885051250458
    2. '   ' → logprob: -1.4344885349273682
    3. '```' → logprob: -4.809488296508789
    4. ' for' → logprob: -5.559488296508789
    5. 'total' → logprob: -5.559488296508789
    6. 'sum' → logprob: -5.934488296508789
    7. 'max' → logprob: -6.184488296508789
    8. '<|end|>' → logprob: -6.684488296508789
    9. 'left' → logprob: -6.934488296508789
    10. 'result' → logprob: -7.309488296508789

Token 357: ' res' (ID: 694)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42334437370300293
    2. 'for' → logprob: -2.298344373703003
    3. 'dp' → logprob: -2.298344373703003
    4. 'ans' → logprob: -3.173344373703003
    5. 'left' → logprob: -3.548344373703003
    6. 'best' → logprob: -3.923344373703003
    7. 'answer' → logprob: -4.048344612121582
    8. 'result' → logprob: -4.298344612121582
    9. 'res' (adapté à ' res') → logprob: -4.673344612121582
    10. '#' → logprob: -5.673344612121582

Token 358: '=n' (ID: 47985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43998241424560547
    2. ' =' → logprob: -1.3149824142456055
    3. '=[]' → logprob: -2.8149824142456055
    4. '=[' → logprob: -3.6899824142456055
    5. '={}' → logprob: -7.4399824142456055
    6. ' =[' → logprob: -7.4399824142456055
    7. '=-' → logprob: -7.5649824142456055
    8. '=max' → logprob: -7.6899824142456055
    9. '=[]
' → logprob: -9.689982414245605
    10. '=None' → logprob: -9.814982414245605

Token 359: '+' (ID: 10)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45158520340919495
    2. '   ' → logprob: -1.4515851736068726
    3. ' for' → logprob: -2.826585292816162
    4. '+' → logprob: -3.201585292816162
    5. '-' → logprob: -4.576585292816162
    6. '
' → logprob: -5.326585292816162
    7. '=' → logprob: -6.451585292816162
    8. '*' → logprob: -6.451585292816162
    9. 'if' → logprob: -6.576585292816162
    10. 'while' → logprob: -6.576585292816162

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021565590053796768
    2. 'm' → logprob: -5.0215654373168945
    3. '0' → logprob: -5.5215654373168945
    4. 'S' → logprob: -5.8965654373168945
    5. '100' → logprob: -6.5215654373168945
    6. '(' → logprob: -6.7715654373168945
    7. '10' → logprob: -7.2715654373168945
    8. 'w' → logprob: -7.2715654373168945
    9. 'prefix' → logprob: -7.3965654373168945
    10. '(S' → logprob: -7.6465654373168945

Token 361: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39233914017677307
    2. '
' → logprob: -1.5173391103744507
    3. ' for' → logprob: -2.2673392295837402
    4. '   ' → logprob: -7.01733922958374
    5. '    
' → logprob: -8.642338752746582
    6. '<|end|>' → logprob: -8.892338752746582
    7. '\n' → logprob: -9.642338752746582
    8. '  
' → logprob: -9.642338752746582
    9. '	for' → logprob: -9.767338752746582
    10. ' 
' → logprob: -10.267338752746582

Token 362: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019264941802248359
    2. ' for' → logprob: -6.501926422119141
    3. '   ' → logprob: -8.75192642211914
    4. 'left' → logprob: -9.12692642211914
    5. '```' → logprob: -9.12692642211914
    6. 'low' → logprob: -11.12692642211914
    7. 'l' → logprob: -11.62692642211914
    8. '
' → logprob: -11.75192642211914
    9. 'start' → logprob: -12.37692642211914
    10. 'ans' → logprob: -13.00192642211914

Token 363: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009813584387302399
    2. 'left' → logprob: -4.8848137855529785
    3. 'l' → logprob: -7.1348137855529785
    4. 'start' → logprob: -7.5098137855529785
    5. 'low' → logprob: -8.38481330871582
    6. 'ans' → logprob: -8.88481330871582
    7. 'res' → logprob: -9.38481330871582
    8. '```' → logprob: -9.50981330871582
    9. 'i' → logprob: -9.63481330871582
    10. 'j' (adapté à ' j') → logprob: -9.88481330871582

Token 364: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029769234359264374
    2. ' =' → logprob: -3.5297691822052
    3. '=j' → logprob: -11.779768943786621
    4. '=int' → logprob: -12.779768943786621
    5. '=len' → logprob: -13.154768943786621
    6. '=index' → logprob: -13.779768943786621
    7. '=i' → logprob: -13.904768943786621
    8. ',' → logprob: -14.779768943786621
    9. '=start' → logprob: -14.904768943786621
    10. '```' → logprob: -15.029768943786621

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.875008583068848
    4. 'm' → logprob: -15.125008583068848
    5. '-' → logprob: -17.250009536743164
    6. '```' → logprob: -17.375009536743164
    7. '<|end|>' → logprob: -18.750009536743164
    8. '   ' → logprob: -18.750009536743164
    9. '=' → logprob: -19.562509536743164
    10. '2' → logprob: -19.750009536743164

Token 366: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6700876951217651
    2. 'for' → logprob: -0.9200876951217651
    3. ' for' → logprob: -2.4200878143310547
    4. '   ' → logprob: -7.295087814331055
    5. ' 
' → logprob: -9.170087814331055
    6. '  
' → logprob: -9.795087814331055
    7. '    
' → logprob: -10.170087814331055
    8. '<|end|>' → logprob: -10.545087814331055
    9. '```' → logprob: -11.545087814331055
    10. '   
' → logprob: -11.920087814331055

Token 367: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16356657445430756
    2. ' for' → logprob: -1.9135665893554688
    3. '
' → logprob: -6.288566589355469
    4. '<|end|>' → logprob: -7.413566589355469
    5. '```' → logprob: -7.538566589355469
    6. ' 
' → logprob: -8.913566589355469
    7. '   ' → logprob: -9.038566589355469
    8. '  
' → logprob: -10.163566589355469
    9. '    
' → logprob: -10.538566589355469
    10. '	for' → logprob: -12.163566589355469

Token 368: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008182733319699764
    2. ' for' → logprob: -4.883182525634766
    3. '<|end|>' → logprob: -7.508182525634766
    4. '0' → logprob: -11.258182525634766
    5. '```' → logprob: -11.633182525634766
    6. '
' → logprob: -12.883182525634766
    7. '   ' → logprob: -13.883182525634766
    8. '<|end|>' → logprob: -14.633182525634766
    9. '	for' → logprob: -15.258182525634766
    10. '>' → logprob: -15.633182525634766

Token 369: ' two' (ID: 1920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. 'import' → logprob: -16.25
    3. 'from' → logprob: -18.0
    4. ' for' → logprob: -18.25
    5. '
' → logprob: -20.875
    6. '   ' → logprob: -21.125
    7. 'res' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. '0' → logprob: -23.125
    10. 'ans' → logprob: -23.625

Token 370: ' pointers' (ID: 58762)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2504739761352539
    2. 'pointer' → logprob: -1.625473976135254
    3. 'p' → logprob: -4.250473976135254
    4. '
' → logprob: -5.375473976135254
    5. '-pointer' → logprob: -6.000473976135254
    6. ' pointers' → logprob: -6.500473976135254
    7. 'while' → logprob: -7.000473976135254
    8. '-p' → logprob: -8.250473976135254
    9. 'ptr' → logprob: -8.750473976135254
    10. '   ' → logprob: -8.750473976135254

Token 371: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20810580253601074
    2. ' for' → logprob: -1.7081058025360107
    3. '<|end|>' → logprob: -5.45810604095459
    4. '
' → logprob: -7.08310604095459
    5. '   ' → logprob: -7.33310604095459
    6. '```' → logprob: -8.08310604095459
    7. '  
' → logprob: -8.83310604095459
    8. '<|end|>' → logprob: -9.08310604095459
    9. ':' → logprob: -9.45810604095459
    10. ' 
' → logprob: -9.70810604095459

Token 372: ' prefix' (ID: 18633)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4341815114021301
    2. 'l' → logprob: -1.3091814517974854
    3. 'prefix' → logprob: -3.4341814517974854
    4. 'j' → logprob: -3.6841814517974854
    5. 'm' → logprob: -4.5591816902160645
    6. 'r' → logprob: -5.0591816902160645
    7. ' range' → logprob: -5.1841816902160645
    8. 'i' → logprob: -7.3091816902160645
    9. 'for' → logprob: -7.6841816902160645
    10. ' prefix' → logprob: -7.8091816902160645

Token 373: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021070786751806736
    2. 'sum' → logprob: -7.3771071434021
    3. 'alm' → logprob: -7.8771071434021
    4. '   ' → logprob: -8.252106666564941
    5. 'num' → logprob: -8.502106666564941
    6. '_sum' → logprob: -8.752106666564941
    7. '_num' → logprob: -9.127106666564941
    8. '_s' → logprob: -9.752106666564941
    9. 's' → logprob: -9.752106666564941
    10. 'prefix' → logprob: -10.002106666564941

Token 374: 'areas' (ID: 69250)
  Prédit: 'alm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -0.055494390428066254
    2. 'areas' → logprob: -2.9304943084716797
    3. '_' → logprob: -7.80549430847168
    4. '```' → logprob: -9.80549430847168
    5. 'alf' → logprob: -10.18049430847168
    6. 'alam' → logprob: -10.68049430847168
    7. 'alc' → logprob: -11.18049430847168
    8. 'alk' → logprob: -11.43049430847168
    9. 'prefix' → logprob: -11.55549430847168
    10. '``' → logprob: -12.55549430847168

Token 375: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13861209154129028
    2. ' for' → logprob: -2.1386120319366455
    3. '<|end|>' → logprob: -5.138612270355225
    4. '
' → logprob: -5.513612270355225
    5. '   ' → logprob: -6.638612270355225
    6. '<|end|>' → logprob: -8.888611793518066
    7. ':' → logprob: -9.138611793518066
    8. '    
' → logprob: -10.763611793518066
    9. '  
' → logprob: -10.888611793518066
    10. 'and' → logprob: -11.013611793518066

Token 376: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08825422823429108
    2. 'find' → logprob: -2.58825421333313
    3. 'range' → logprob: -5.713254451751709
    4. 'min' → logprob: -6.463254451751709
    5. 'expand' → logprob: -6.963254451751709
    6. ' for' → logprob: -7.338254451751709
    7. 'enumer' → logprob: -7.463254451751709
    8. '
' → logprob: -7.588254451751709
    9. '```' → logprob: -7.588254451751709
    10. 'while' → logprob: -7.963254451751709

Token 377: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8895998597145081
    2. 'while' → logprob: -0.8895998597145081
    3. 'j' → logprob: -2.0145998001098633
    4. 'i' → logprob: -4.139599800109863
    5. '```' → logprob: -4.764599800109863
    6. 'res' → logprob: -5.139599800109863
    7. ' for' → logprob: -5.389599800109863
    8. '
' → logprob: -6.139599800109863
    9. ' while' → logprob: -6.389599800109863
    10. 'prefix' → logprob: -6.514599800109863

Token 378: ' almonds' (ID: 136086)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6171829700469971
    2. 'while' → logprob: -1.492182970046997
    3. 'for' → logprob: -1.742182970046997
    4. ' for' → logprob: -3.867182970046997
    5. ' while' → logprob: -4.617182731628418
    6. ' i' → logprob: -4.992182731628418
    7. 'j' → logprob: -5.117182731628418
    8. 'k' → logprob: -5.367182731628418
    9. '   ' → logprob: -5.867182731628418
    10. '```' → logprob: -5.867182731628418

Token 379: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09802749007940292
    2. ' for' → logprob: -2.598027467727661
    3. '<|end|>' → logprob: -4.09802770614624
    4. '   ' → logprob: -6.59802770614624
    5. 'while' → logprob: -8.848027229309082
    6. 'i' → logprob: -9.098027229309082
    7. '```' → logprob: -9.098027229309082
    8. '<|end|>' → logprob: -9.098027229309082
    9. ' ' → logprob: -9.723027229309082
    10. '	for' → logprob: -9.723027229309082

Token 380: ' sub' (ID: 1543)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022362811490893364
    2. '```' → logprob: -4.77236270904541
    3. 'prefix' → logprob: -5.02236270904541
    4. 'for' → logprob: -5.39736270904541
    5. ' range' → logprob: -6.77236270904541
    6. 'while' → logprob: -7.64736270904541
    7. 'area' → logprob: -8.89736270904541
    8. '
' → logprob: -9.02236270904541
    9. 'j' → logprob: -9.02236270904541
    10. 'the' → logprob: -9.14736270904541

Token 381: 'interval' (ID: 37558)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.5925090909004211
    2. 'arrays' → logprob: -1.4675090312957764
    3. '   ' → logprob: -1.8425090312957764
    4. 'ranges' → logprob: -4.7175092697143555
    5. 'areas' → logprob: -4.8425092697143555
    6. 'range' → logprob: -4.8425092697143555
    7. 'for' → logprob: -4.9675092697143555
    8. 'segments' → logprob: -5.5925092697143555
    9. 'list' → logprob: -5.8425092697143555
    10. 'length' → logprob: -5.9675092697143555

Token 382: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01870807260274887
    2. ' for' → logprob: -4.018708229064941
    3. '<|end|>' → logprob: -8.518708229064941
    4. '   ' → logprob: -8.768708229064941
    5. '
' → logprob: -8.768708229064941
    6. '```' → logprob: -10.518708229064941
    7. '	for' → logprob: -12.393708229064941
    8. '  
' → logprob: -12.768708229064941
    9. '<|end|>' → logprob: -12.893708229064941
    10. ' 
' → logprob: -13.018708229064941

Token 383: ' area' (ID: 3624)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.26847028732299805
    2. 'areas' → logprob: -2.393470287322998
    3. 'area' → logprob: -3.143470287322998
    4. ' prefix' → logprob: -3.268470287322998
    5. 'total' → logprob: -4.018470287322998
    6. 'while' → logprob: -4.018470287322998
    7. 'res' → logprob: -5.518470287322998
    8. ' area' → logprob: -5.518470287322998
    9. 'length' → logprob: -6.268470287322998
    10. 'sum' → logprob: -6.268470287322998

Token 384: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.479203224182129
    2. '+' → logprob: -1.729203224182129
    3. '   ' → logprob: -1.729203224182129
    4. '[' → logprob: -2.229203224182129
    5. ' <=' → logprob: -2.604203224182129
    6. '[j' → logprob: -3.604203224182129
    7. 's' → logprob: -3.729203224182129
    8. '[i' → logprob: -3.854203224182129
    9. '[]' → logprob: -3.979203224182129
    10. '=' → logprob: -3.979203224182129

Token 385: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0018059646245092154
    2. ' S' → logprob: -6.501805782318115
    3. 'h' → logprob: -8.251806259155273
    4. 'w' → logprob: -10.501806259155273
    5. '   ' → logprob: -12.001806259155273
    6. ' ' → logprob: -12.751806259155273
    7. '```' → logprob: -13.876806259155273
    8. ' h' → logprob: -14.376806259155273
    9. 's' → logprob: -14.501806259155273
    10. ' ' → logprob: -14.626806259155273

Token 386: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001669942052103579
    2. ' for' → logprob: -6.501669883728027
    3. '
' → logprob: -9.001669883728027
    4. '```' → logprob: -10.501669883728027
    5. '   ' → logprob: -11.251669883728027
    6. '    
' → logprob: -13.751669883728027
    7. '<|end|>' → logprob: -14.001669883728027
    8. 'import' → logprob: -14.501669883728027
    9. 'n' → logprob: -14.501669883728027
    10. '	for' → logprob: -15.251669883728027

Token 387: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0039936271496117115
    2. ' for' → logprob: -5.753993511199951
    3. '
' → logprob: -7.128993511199951
    4. '   ' → logprob: -11.62899398803711
    5. '```' → logprob: -12.75399398803711
    6. 'while' → logprob: -13.75399398803711
    7. ' 
' → logprob: -15.00399398803711
    8. 'i' → logprob: -15.00399398803711
    9. '    
' → logprob: -15.75399398803711
    10. '	for' → logprob: -16.12899398803711

Token 388: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.749814019713085e-06
    2. ' for' → logprob: -12.000006675720215
    3. 'import' → logprob: -15.125006675720215
    4. '   ' → logprob: -16.50000762939453
    5. '```' → logprob: -16.50000762939453
    6. '
' → logprob: -17.12500762939453
    7. 'from' → logprob: -17.75000762939453
    8. '	for' → logprob: -20.00000762939453
    9. '    
' → logprob: -20.12500762939453
    10. 'area' → logprob: -21.25000762939453

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005358502268791199
    2. ' i' → logprob: -5.255358695983887
    3. 'j' → logprob: -9.005358695983887
    4. ' j' → logprob: -14.130358695983887
    5. 'in' → logprob: -14.630358695983887
    6. ' in' → logprob: -14.880358695983887
    7. '`' → logprob: -16.13035774230957
    8. ' ' → logprob: -16.25535774230957
    9. '_i' → logprob: -16.50535774230957
    10. 'range' → logprob: -16.63035774230957

Token 390: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03808062523603439
    2. 'in' → logprob: -3.2880806922912598
    3. '	in' → logprob: -10.288080215454102
    4. ' ' → logprob: -13.538080215454102
    5. '   ' → logprob: -13.663080215454102
    6. ',' → logprob: -13.788080215454102
    7. 'import' → logprob: -15.288080215454102
    8. 'In' → logprob: -15.288080215454102
    9. '_in' → logprob: -15.413080215454102
    10. '  ' → logprob: -15.413080215454102

Token 391: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975245751440525
    2. ' range' → logprob: -3.529752492904663
    3. '0' → logprob: -13.404752731323242
    4. 'in' → logprob: -14.904752731323242
    5. ' ' → logprob: -16.029752731323242
    6. ' in' → logprob: -16.779752731323242
    7. '(range' → logprob: -18.279752731323242
    8. '	range' → logprob: -18.904752731323242
    9. '   ' → logprob: -19.029752731323242
    10. 'ran' → logprob: -20.154752731323242

Token 392: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00010890735575230792
    2. '(m' → logprob: -9.87510871887207
    3. ' m' → logprob: -9.87510871887207
    4. '0' → logprob: -12.75010871887207
    5. 'range' → logprob: -13.37510871887207
    6. '   ' → logprob: -14.50010871887207
    7. ')' → logprob: -15.37510871887207
    8. ' ' → logprob: -15.62510871887207
    9. 'j' → logprob: -15.75010871887207
    10. ' (' → logprob: -15.87510871887207

Token 393: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3901054263114929
    2. '):' → logprob: -1.1401054859161377
    3. '+' → logprob: -5.890105247497559
    4. '   ' → logprob: -8.390105247497559
    5. '):
' → logprob: -9.265105247497559
    6. ' ):
' → logprob: -10.140105247497559
    7. ' ):' → logprob: -10.890105247497559
    8. ':' → logprob: -11.015105247497559
    9. '=' → logprob: -11.140105247497559
    10. '):

' → logprob: -11.140105247497559

Token 394: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8180253505706787
    2. '   ' → logprob: -1.5680253505706787
    3. '       ' → logprob: -1.6930253505706787
    4. 'while' → logprob: -2.4430253505706787
    5. '```' → logprob: -3.1930253505706787
    6. '	while' → logprob: -3.4430253505706787
    7. '<|end|>' → logprob: -5.443025588989258
    8. '    
' → logprob: -7.693025588989258
    9. '
' → logprob: -7.818025588989258
    10. '        
' → logprob: -7.818025588989258

Token 395: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0011921331752091646
    2. ' while' → logprob: -6.876192092895508
    3. '   ' → logprob: -9.251192092895508
    4. '       ' → logprob: -10.001192092895508
    5. '	while' → logprob: -11.001192092895508
    6. 'While' → logprob: -14.126192092895508
    7. '```' → logprob: -14.751192092895508
    8. 'import' → logprob: -16.001192092895508
    9. '<|end|>' → logprob: -17.001192092895508
    10. '        
' → logprob: -17.501192092895508

Token 396: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006838271860033274
    2. ' j' → logprob: -5.381838321685791
    3. 'prefix' → logprob: -6.131838321685791
    4. ' prefix' → logprob: -10.256837844848633
    5. '(j' → logprob: -12.881837844848633
    6. '   ' → logprob: -13.256837844848633
    7. '(prefix' → logprob: -13.631837844848633
    8. '	j' → logprob: -13.881837844848633
    9. ' ' → logprob: -14.506837844848633
    10. 'res' → logprob: -16.006837844848633

Token 397: '<m' (ID: 36686)
  Prédit: '<m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<m' → logprob: -0.0021195695735514164
    2. ' <' → logprob: -6.252119541168213
    3. '<' → logprob: -9.252120018005371
    4. '<=' → logprob: -9.377120018005371
    5. '<n' → logprob: -12.002120018005371
    6. '<len' → logprob: -12.502120018005371
    7. ' <=' → logprob: -15.377120018005371
    8. 'm' → logprob: -16.002119064331055
    9. '<i' → logprob: -16.752119064331055
    10. '<size' → logprob: -17.127119064331055

Token 398: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25193455815315247
    2. ' and' → logprob: -1.50193452835083
    3. ' ' → logprob: -12.376935005187988
    4. '   ' → logprob: -14.001935005187988
    5. '	and' → logprob: -16.126934051513672
    6. '```' → logprob: -16.876934051513672
    7. '  ' → logprob: -17.001934051513672
    8. '<' → logprob: -17.376934051513672
    9. '    ' → logprob: -17.376934051513672
    10. '0' → logprob: -17.501934051513672

Token 399: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.00043353010551072657
    2. ' prefix' → logprob: -8.000433921813965
    3. '(prefix' → logprob: -9.250433921813965
    4. '   ' → logprob: -13.125433921813965
    5. ' ' → logprob: -18.12543296813965
    6. '       ' → logprob: -18.62543296813965
    7. ' (' → logprob: -18.87543296813965
    8. '  ' → logprob: -19.12543296813965
    9. '    ' → logprob: -20.12543296813965
    10. '(' → logprob: -20.37543296813965

Token 400: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.226628895296017e-06
    2. '_area' → logprob: -12.500007629394531
    3. 'areas' → logprob: -13.750007629394531
    4. '\' → logprob: -14.125007629394531
    5. '```' → logprob: -14.250007629394531
    6. ' _' → logprob: -15.000007629394531
    7. 'area' → logprob: -16.37500762939453
    8. 'Areas' → logprob: -16.50000762939453
    9. '[_' → logprob: -17.12500762939453
    10. '[' → logprob: -17.12500762939453

Token 401: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.00016039233014453202
    2. '_' → logprob: -8.750160217285156
    3. ' areas' → logprob: -13.375160217285156
    4. 'area' → logprob: -15.750160217285156
    5. 'ares' → logprob: -16.750160217285156
    6. '```' → logprob: -17.375160217285156
    7. 'Areas' → logprob: -17.500160217285156
    8. '
' → logprob: -17.875160217285156
    9. '   ' → logprob: -19.125160217285156
    10. '...' → logprob: -20.125160217285156

Token 402: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.281485836254433e-05
    2. '[i' → logprob: -10.000092506408691
    3. '[' → logprob: -10.500092506408691
    4. 'j' → logprob: -11.250092506408691
    5. ' [' → logprob: -12.750092506408691
    6. '[
' → logprob: -14.000092506408691
    7. '
' → logprob: -14.125092506408691
    8. '][' → logprob: -14.125092506408691
    9. '```' → logprob: -15.125092506408691
    10. ' j' → logprob: -15.625092506408691

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014703992754220963
    2. ']' → logprob: -5.01470422744751
    3. ' +' → logprob: -5.38970422744751
    4. '+j' → logprob: -7.26470422744751
    5. '[i' → logprob: -7.63970422744751
    6. '[j' → logprob: -7.76470422744751
    7. '[' → logprob: -7.76470422744751
    8. ']<' → logprob: -8.139703750610352
    9. '1' → logprob: -8.264703750610352
    10. '+i' → logprob: -8.514703750610352

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. 'i' → logprob: -11.625032424926758
    3. ' ' → logprob: -11.750032424926758
    4. ']' → logprob: -11.875032424926758
    5. '+' → logprob: -12.000032424926758
    6. '```' → logprob: -14.375032424926758
    7. '   ' → logprob: -14.750032424926758
    8. '0' → logprob: -15.500032424926758
    9. ']-' → logprob: -15.750032424926758
    10. '
' → logprob: -16.000032424926758

Token 405: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -1.3190739154815674
    2. ' -' → logprob: -1.4440739154815674
    3. ']<' → logprob: -1.6940739154815674
    4. '-prefix' → logprob: -2.1940739154815674
    5. '-' → logprob: -2.3190739154815674
    6. '<' → logprob: -2.6940739154815674
    7. '<p' → logprob: -3.9440739154815674
    8. ']' → logprob: -4.819073677062988
    9. ' <' → logprob: -5.944073677062988
    10. ']-' → logprob: -5.944073677062988

Token 406: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0015078396536409855
    2. ' prefix' → logprob: -6.501507759094238
    3. '(prefix' → logprob: -12.126507759094238
    4. '_prefix' → logprob: -16.501508712768555
    5. '   ' → logprob: -17.751508712768555
    6. '.prefix' → logprob: -18.126508712768555
    7. 'Prefix' → logprob: -18.251508712768555
    8. '
' → logprob: -18.251508712768555
    9. 'PREFIX' → logprob: -18.876508712768555
    10. 'refix' → logprob: -19.001508712768555

Token 407: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. '_area' → logprob: -14.500000953674316
    3. 'areas' → logprob: -15.625000953674316
    4. 'Areas' → logprob: -16.25
    5. '[' → logprob: -19.125
    6. '.Areas' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. '_spaces' → logprob: -19.375
    9. '_are' → logprob: -19.5
    10. '\' → logprob: -19.5

Token 408: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -0.0009328982559964061
    2. '_' → logprob: -7.000932693481445
    3. ' areas' → logprob: -11.125932693481445
    4. 'Areas' → logprob: -12.375932693481445
    5. 'area' → logprob: -14.000932693481445
    6. 'i' → logprob: -14.125932693481445
    7. 'ares' → logprob: -15.625932693481445
    8. '   ' → logprob: -16.375932693481445
    9. '```' → logprob: -16.750932693481445
    10. '.Areas' → logprob: -16.750932693481445

Token 409: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.750001907348633
    3. '[j' → logprob: -14.000001907348633
    4. '```' → logprob: -16.000001907348633
    5. '[' → logprob: -16.125001907348633
    6. '[
' → logprob: -17.375001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '
' → logprob: -18.125001907348633
    9. '{i' → logprob: -18.375001907348633
    10. '   ' → logprob: -19.250001907348633

Token 410: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.1118181124329567
    2. '<' → logprob: -2.4868180751800537
    3. ']' → logprob: -4.361818313598633
    4. ' <' → logprob: -5.111818313598633
    5. '<S' → logprob: -6.486818313598633
    6. '<w' → logprob: -6.986818313598633
    7. '[' → logprob: -7.861818313598633
    8. '<s' → logprob: -8.111818313598633
    9. ' ]' → logprob: -9.236818313598633
    10. '<size' → logprob: -9.361818313598633

Token 411: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001170225441455841
    2. ' S' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.501171112060547
    4. '>S' → logprob: -18.751171112060547
    5. '	S' → logprob: -19.251171112060547
    6. ' ' → logprob: -19.626171112060547
    7. '=S' → logprob: -19.626171112060547
    8. '    ' → logprob: -20.876171112060547
    9. '  ' → logprob: -21.001171112060547
    10. '_S' → logprob: -21.626171112060547

Token 412: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16469255089759827
    2. ':
' → logprob: -1.9146925210952759
    3. '       ' → logprob: -6.039692401885986
    4. ':j' → logprob: -7.664692401885986
    5. '           ' → logprob: -7.789692401885986
    6. 'j' → logprob: -7.914692401885986
    7. '):
' → logprob: -7.914692401885986
    8. '   ' → logprob: -8.539692878723145
    9. '):' → logprob: -9.164692878723145
    10. '```' → logprob: -9.789692878723145

Token 413: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5350745320320129
    2. '           ' → logprob: -0.9100745320320129
    3. '	       ' → logprob: -5.035074710845947
    4. 'j' → logprob: -5.535074710845947
    5. '```' → logprob: -7.160074710845947
    6. '   ' → logprob: -8.535074234008789
    7. '	   ' → logprob: -8.910074234008789
    8. ' j' → logprob: -8.910074234008789
    9. '               ' → logprob: -9.660074234008789
    10. '		   ' → logprob: -11.160074234008789

Token 414: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.004073651507496834
    2. '           ' → logprob: -6.004073619842529
    3. '   ' → logprob: -6.879073619842529
    4. '       ' → logprob: -7.629073619842529
    5. ' j' → logprob: -10.254074096679688
    6. '	j' → logprob: -10.379074096679688
    7. '```' → logprob: -11.879074096679688
    8. '               ' → logprob: -12.254074096679688
    9. '	   ' → logprob: -14.379074096679688
    10. ':j' → logprob: -14.629074096679688

Token 415: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001239196863025427
    2. ' +=' → logprob: -9.250123977661133
    3. '+' → logprob: -10.500123977661133
    4. ']+=' → logprob: -15.375123977661133
    5. '+='' → logprob: -17.125123977661133
    6. '+="' → logprob: -17.750123977661133
    7. '```' → logprob: -17.875123977661133
    8. '++' → logprob: -18.375123977661133
    9. '=' → logprob: -19.375123977661133
    10. '+=(' → logprob: -20.125123977661133

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -20.5
    5. '۱' → logprob: -21.25
    6. '１' → logprob: -21.625
    7. '0' → logprob: -22.5
    8. '१' → logprob: -22.5625
    9. '<|end|>' → logprob: -22.75
    10. '১' → logprob: -22.875

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3140079379081726
    2. '<|end|>' → logprob: -1.5640079975128174
    3. '   ' → logprob: -3.4390079975128174
    4. '
' → logprob: -3.6890079975128174
    5. ' if' → logprob: -7.189007759094238
    6. ')' → logprob: -7.189007759094238
    7. '<|end|>' → logprob: -8.064007759094238
    8. '```' → logprob: -8.189007759094238
    9. '  
' → logprob: -8.314007759094238
    10. '        
' → logprob: -8.564007759094238

Token 418: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5686522126197815
    2. '       ' → logprob: -1.1936521530151367
    3. 'if' → logprob: -2.5686521530151367
    4. ' if' → logprob: -3.4436521530151367
    5. '<|end|>' → logprob: -3.9436521530151367
    6. '```' → logprob: -6.818652153015137
    7. ')' → logprob: -7.193652153015137
    8. '	if' → logprob: -8.568652153015137
    9. '...' → logprob: -8.568652153015137
    10. '
' → logprob: -9.443652153015137

Token 419: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017465773271396756
    2. '   ' → logprob: -6.751746654510498
    3. ' if' → logprob: -7.626746654510498
    4. '       ' → logprob: -9.37674617767334
    5. '```' → logprob: -12.87674617767334
    6. '           ' → logprob: -15.12674617767334
    7. 'ans' → logprob: -15.50174617767334
    8. '	if' → logprob: -15.62674617767334
    9. 'num' → logprob: -16.001747131347656
    10. 'res' → logprob: -16.126747131347656

Token 420: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804987296462059
    2. ' j' → logprob: -3.2880499362945557
    3. '   ' → logprob: -11.913049697875977
    4. 'prefix' → logprob: -14.163049697875977
    5. ' ' → logprob: -14.663049697875977
    6. ' prefix' → logprob: -15.913049697875977
    7. '    ' → logprob: -16.038049697875977
    8. '	j' → logprob: -16.663049697875977
    9. '       ' → logprob: -16.788049697875977
    10. ' ' → logprob: -16.913049697875977

Token 421: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4908570349216461
    2. '<m' → logprob: -0.9908570051193237
    3. ' >=' → logprob: -4.990857124328613
    4. '<' → logprob: -5.740857124328613
    5. ' <' → logprob: -6.490857124328613
    6. 'm' → logprob: -6.990857124328613
    7. ')>=' → logprob: -7.115857124328613
    8. '<n' → logprob: -7.240857124328613
    9. '=' → logprob: -7.365857124328613
    10. '+' → logprob: -7.490857124328613

Token 422: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.896309739408025e-07
    2. ' m' → logprob: -14.125000953674316
    3. 'len' → logprob: -18.625
    4. '	m' → logprob: -19.625
    5. 'м' → logprob: -20.75
    6. '   ' → logprob: -21.75
    7. 'n' → logprob: -21.875
    8. '0' → logprob: -21.875
    9. '<m' → logprob: -21.875
    10. 'ｍ' → logprob: -22.25

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.280697762966156
    2. ':
' → logprob: -1.5306978225708008
    3. '       ' → logprob: -4.155697822570801
    4. '           ' → logprob: -4.530697822570801
    5. ':return' → logprob: -6.780697822570801
    6. ' or' → logprob: -7.530697822570801
    7. '   ' → logprob: -8.7806978225708
    8. '               ' → logprob: -11.2806978225708
    9. ':
' → logprob: -11.5306978225708
    10. ' and' → logprob: -11.5306978225708

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09254761040210724
    2. '       ' → logprob: -2.467547655105591
    3. 'break' → logprob: -6.217547416687012
    4. ' break' → logprob: -6.717547416687012
    5. '```' → logprob: -8.592547416687012
    6. '   ' → logprob: -9.342547416687012
    7. '               ' → logprob: -10.092547416687012
    8. '	break' → logprob: -10.342547416687012
    9. 'continue' → logprob: -11.092547416687012
    10. '	       ' → logprob: -11.967547416687012

Token 425: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0019680082332342863
    2. '           ' → logprob: -6.751967906951904
    3. ' break' → logprob: -7.251967906951904
    4. '       ' → logprob: -9.501968383789062
    5. '	break' → logprob: -11.501968383789062
    6. '   ' → logprob: -13.251968383789062
    7. '```' → logprob: -13.501968383789062
    8. '               ' → logprob: -14.126968383789062
    9. '_break' → logprob: -16.876968383789062
    10. '
' → logprob: -18.501968383789062

Token 426: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018559236079454422
    2. '       ' → logprob: -4.018559455871582
    3. '
' → logprob: -8.393559455871582
    4. '    
' → logprob: -9.768559455871582
    5. '```' → logprob: -9.768559455871582
    6. 'res' → logprob: -10.268559455871582
    7. '        
' → logprob: -11.643559455871582
    8. ' res' → logprob: -12.018559455871582
    9. 'if' → logprob: -12.518559455871582
    10. '<|end|>' → logprob: -12.768559455871582

Token 427: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004628888331353664
    2. '       ' → logprob: -5.879628658294678
    3. '<|end|>' → logprob: -7.004628658294678
    4. '    
' → logprob: -8.504629135131836
    5. '
' → logprob: -8.629629135131836
    6. '```' → logprob: -8.879629135131836
    7. 'res' → logprob: -9.379629135131836
    8. ' if' → logprob: -9.629629135131836
    9. 'tokens' → logprob: -9.879629135131836
    10. ' res' → logprob: -10.504629135131836

Token 428: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5717087388038635
    2. 'current' → logprob: -2.5717086791992188
    3. 'alm' → logprob: -2.6967086791992188
    4. 'total' → logprob: -2.6967086791992188
    5. 'count' → logprob: -2.9467086791992188
    6. 'curr' → logprob: -3.0717086791992188
    7. 'cand' → logprob: -3.5717086791992188
    8. 'num' → logprob: -3.6967086791992188
    9. 'cur' → logprob: -4.071708679199219
    10. 'ans' → logprob: -4.321708679199219

Token 429: '=min' (ID: 149377)
  Prédit: '=min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=min' → logprob: -0.0344088114798069
    2. '=' → logprob: -3.7844088077545166
    3. ' =' → logprob: -4.534409046173096
    4. '=max' → logprob: -7.909409046173096
    5. '   ' → logprob: -15.784408569335938
    6. 'min' → logprob: -16.159408569335938
    7. '=Math' → logprob: -16.284408569335938
    8. '=int' → logprob: -17.409408569335938
    9. '=num' → logprob: -17.409408569335938
    10. '=float' → logprob: -17.659408569335938

Token 430: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. 'res' → logprob: -15.000004768371582
    4. ' (' → logprob: -19.0000057220459
    5. ',res' → logprob: -19.3750057220459
    6. ' res' → logprob: -19.3750057220459
    7. '(
' → logprob: -19.5000057220459
    8. '	res' → logprob: -19.5000057220459
    9. '=res' → logprob: -20.0000057220459
    10. '(re' → logprob: -20.2500057220459

Token 431: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21687732636928558
    2. ',res' → logprob: -1.7168773412704468
    3. ',p' → logprob: -4.216877460479736
    4. ',n' → logprob: -7.966877460479736
    5. ' ,' → logprob: -8.716876983642578
    6. ',j' → logprob: -10.591876983642578
    7. 'prefix' → logprob: -11.716876983642578
    8. ',min' → logprob: -11.841876983642578
    9. ',len' → logprob: -11.841876983642578
    10. 'res' → logprob: -12.091876983642578

Token 432: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -6.704273118884885e-07
    2. 'REFIX' → logprob: -14.625000953674316
    3. 'ref' → logprob: -16.125
    4. 'r' → logprob: -17.25
    5. 'prefix' → logprob: -17.5
    6. '[' → logprob: -18.25
    7. 'ef' → logprob: -20.25
    8. 'fix' → logprob: -20.375
    9. '
' → logprob: -20.5
    10. '(prefix' → logprob: -21.125

Token 433: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.5491004129871726e-05
    2. 'alm' → logprob: -10.000045776367188
    3. 'alam' → logprob: -19.625045776367188
    4. '\' → logprob: -20.250045776367188
    5. ' almonds' → logprob: -20.375045776367188
    6. '   ' → logprob: -20.875045776367188
    7. '```' → logprob: -21.125045776367188
    8. '.' → logprob: -21.500045776367188
    9. '`' → logprob: -21.750045776367188
    10. '	' → logprob: -21.875045776367188

Token 434: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. 'alam' → logprob: -18.5
    4. 'alf' → logprob: -19.125
    5. 'alc' → logprob: -20.25
    6. 'alk' → logprob: -20.25
    7. '
' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. 'a' → logprob: -20.75
    10. ' alm' → logprob: -20.875

Token 435: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.0001305950863752514
    2. 'nds' → logprob: -10.000130653381348
    3. 'ds' → logprob: -10.375130653381348
    4. 'ands' → logprob: -10.500130653381348
    5. 'inds' → logprob: -11.750130653381348
    6. 'ods' → logprob: -12.375130653381348
    7. 'olds' → logprob: -12.750130653381348
    8. '_' → logprob: -13.375130653381348
    9. 'ords' → logprob: -13.500130653381348
    10. 'ONDS' → logprob: -13.875130653381348

Token 436: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.8444881536415778e-05
    2. 'num' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.125028610229492
    4. '_' → logprob: -16.125028610229492
    5. '_NUM' → logprob: -16.625028610229492
    6. 'Num' → logprob: -16.625028610229492
    7. '```' → logprob: -16.625028610229492
    8. '[i' → logprob: -17.250028610229492
    9. '[j' → logprob: -17.500028610229492
    10. ')' → logprob: -17.500028610229492

Token 437: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6286106983898208e-05
    2. 'j' → logprob: -11.125016212463379
    3. '[' → logprob: -13.750016212463379
    4. '```' → logprob: -16.000017166137695
    5. '
' → logprob: -16.375017166137695
    6. '\[' → logprob: -16.500017166137695
    7. ' [' → logprob: -16.875017166137695
    8. '[
' → logprob: -17.250017166137695
    9. '[i' → logprob: -17.625017166137695
    10. ',j' → logprob: -17.875017166137695

Token 438: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00031580092036165297
    2. ' +' → logprob: -8.37531566619873
    3. ']' → logprob: -9.87531566619873
    4. ']+' → logprob: -11.37531566619873
    5. '[' → logprob: -11.50031566619873
    6. '+]' → logprob: -12.62531566619873
    7. '   ' → logprob: -13.12531566619873
    8. ''+' → logprob: -13.50031566619873
    9. '```' → logprob: -13.87531566619873
    10. '1' → logprob: -13.87531566619873

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '+' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.87501335144043
    4. '```' → logprob: -14.75001335144043
    5. '   ' → logprob: -15.62501335144043
    6. ']' → logprob: -15.62501335144043
    7. '][' → logprob: -16.62501335144043
    8. '0' → logprob: -16.87501335144043
    9. '[' → logprob: -17.25001335144043
    10. '-' → logprob: -17.43751335144043

Token 440: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.0790754035115242
    2. '-' → logprob: -3.454075336456299
    3. ']' → logprob: -3.579075336456299
    4. ' -' → logprob: -4.329075336456299
    5. '-p' → logprob: -6.204075336456299
    6. '[i' → logprob: -7.954075336456299
    7. '[p' → logprob: -8.079075813293457
    8. ')-' → logprob: -8.454075813293457
    9. '[-' → logprob: -8.579075813293457
    10. '-prefix' → logprob: -9.329075813293457

Token 441: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -3.4121114822482923e-06
    2. ' prefix' → logprob: -12.625003814697266
    3. '(prefix' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '
' → logprob: -19.375003814697266
    6. 'refix' → logprob: -20.500003814697266
    7. '_prefix' → logprob: -20.625003814697266
    8. '.prefix' → logprob: -21.125003814697266
    9. '       ' → logprob: -21.500003814697266
    10. '```' → logprob: -21.625003814697266

Token 442: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011068218387663364
    2. 'alm' → logprob: -4.511068344116211
    3. 'prefix' → logprob: -11.511068344116211
    4. 'alam' → logprob: -12.636068344116211
    5. 'alk' → logprob: -14.136068344116211
    6. 'alp' → logprob: -14.136068344116211
    7. '```' → logprob: -14.636068344116211
    8. 'al' → logprob: -14.636068344116211
    9. '_prefix' → logprob: -14.761068344116211
    10. 'alf' → logprob: -14.886068344116211

Token 443: 'alm' (ID: 13850)
  Prédit: 'alm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alm' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.25000286102295
    3. 'alk' → logprob: -15.50000286102295
    4. 'alam' → logprob: -15.62500286102295
    5. 'alf' → logprob: -15.62500286102295
    6. '
' → logprob: -16.000003814697266
    7. 'alc' → logprob: -16.000003814697266
    8. 'alp' → logprob: -16.250003814697266
    9. 'alb' → logprob: -16.375003814697266
    10. ' alm' → logprob: -16.750003814697266

Token 444: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.0002900565741583705
    2. 'ds' → logprob: -8.875289916992188
    3. 'ands' → logprob: -9.375289916992188
    4. 'nds' → logprob: -11.250289916992188
    5. 'ONDS' → logprob: -11.500289916992188
    6. '[' → logprob: -12.000289916992188
    7. '_' → logprob: -12.125289916992188
    8. 'inds' → logprob: -12.625289916992188
    9. '{' → logprob: -12.875289916992188
    10. 'on' → logprob: -13.250289916992188

Token 445: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0028580129146575928
    2. 'num' → logprob: -6.0028581619262695
    3. 'um' → logprob: -8.62785816192627
    4. '_' → logprob: -9.25285816192627
    5. 'm' → logprob: -9.62785816192627
    6. 'Num' → logprob: -12.12785816192627
    7. '[num' → logprob: -12.50285816192627
    8. 'inum' → logprob: -12.62785816192627
    9. '```' → logprob: -13.00285816192627
    10. '[' → logprob: -13.25285816192627

Token 446: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5941604690160602e-05
    2. 'i' → logprob: -10.625025749206543
    3. '(i' → logprob: -13.875025749206543
    4. '[' → logprob: -14.500025749206543
    5. '{i' → logprob: -16.12502670288086
    6. '[
' → logprob: -18.50002670288086
    7. '[j' → logprob: -18.87502670288086
    8. '```' → logprob: -19.37502670288086
    9. '[int' → logprob: -19.50002670288086
    10. ' i' → logprob: -19.75002670288086

Token 447: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.706686690449715e-05
    2. ')
' → logprob: -10.500066757202148
    3. ' )' → logprob: -11.375066757202148
    4. '))' → logprob: -11.375066757202148
    5. '])' → logprob: -12.250066757202148
    6. '})' → logprob: -12.500066757202148
    7. '`)' → logprob: -12.625066757202148
    8. '   ' → logprob: -12.875066757202148
    9. ')return' → logprob: -15.000066757202148
    10. '>)' → logprob: -15.250066757202148

Token 448: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5779600143432617
    2. 'print' → logprob: -0.8279600143432617
    3. '   ' → logprob: -6.952960014343262
    4. ' print' → logprob: -8.077960014343262
    5. '```' → logprob: -8.077960014343262
    6. '<|end|>' → logprob: -8.952960014343262
    7. '\n' → logprob: -9.077960014343262
    8. '    
' → logprob: -9.202960014343262
    9. ' 
' → logprob: -10.577960014343262
    10. '  
' → logprob: -10.827960014343262

Token 449: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07208099961280823
    2. '
' → logprob: -2.8220810890197754
    3. '   ' → logprob: -4.822081089019775
    4. '    
' → logprob: -6.822081089019775
    5. '```' → logprob: -7.322081089019775
    6. ' print' → logprob: -9.197080612182617
    7. '  
' → logprob: -9.822080612182617
    8. ' 
' → logprob: -10.697080612182617
    9. '
' → logprob: -10.947080612182617
    10. '<|end|>' → logprob: -11.072080612182617

Token 450: ' S' (ID: 336)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -5.943783253314905e-05
    2. 'res' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.875059127807617
    4. ' n' → logprob: -15.250059127807617
    5. ' __' → logprob: -15.625059127807617
    6. ' ' → logprob: -15.750059127807617
    7. '(res' → logprob: -17.625059127807617
    8. 'n' → logprob: -17.750059127807617
    9. '	res' → logprob: -17.875059127807617
    10. '__' → logprob: -18.000059127807617

Token 451: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21400177478790283
    2. '<=' → logprob: -1.8390017747879028
    3. '==' → logprob: -3.8390016555786133
    4. ' >' → logprob: -4.964001655578613
    5. ' <=' → logprob: -6.089001655578613
    6. '>=' → logprob: -6.464001655578613
    7. '<' → logprob: -7.464001655578613
    8. ' ==' → logprob: -7.839001655578613
    9. '!=' → logprob: -8.589001655578613
    10. '```' → logprob: -9.839001655578613

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003054301778320223
    2. ' ' → logprob: -8.87530517578125
    3. '1' → logprob: -9.12530517578125
    4. 'w' → logprob: -10.25030517578125
    5. 'area' → logprob: -12.12530517578125
    6. '100' → logprob: -12.25030517578125
    7. 'h' → logprob: -12.62530517578125
    8. '   ' → logprob: -13.12530517578125
    9. 'areas' → logprob: -13.87530517578125
    10. '  ' → logprob: -14.43780517578125

Token 453: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3870072066783905
    2. ':' → logprob: -1.137007236480713
    3. ' or' → logprob: -9.762006759643555
    4. '   ' → logprob: -10.387006759643555
    5. ' and' → logprob: -10.512006759643555
    6. ' :
' → logprob: -12.012006759643555
    7. 'and' → logprob: -12.387006759643555
    8. '==' → logprob: -13.012006759643555
    9. ':

' → logprob: -13.262006759643555
    10. ' :' → logprob: -13.387006759643555

Token 454: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7841020226478577
    2. '       ' → logprob: -1.284101963043213
    3. '   ' → logprob: -1.909101963043213
    4. 'print' → logprob: -2.409101963043213
    5. 'res' → logprob: -4.784101963043213
    6. ':' → logprob: -5.034101963043213
    7. '
' → logprob: -5.159101963043213
    8. '    
' → logprob: -6.034101963043213
    9. '        
' → logprob: -6.159101963043213
    10. ' print' → logprob: -6.534101963043213

Token 455: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030047254636883736
    2. 'res' (adapté à ' res') → logprob: -3.5300471782684326
    3. '   ' → logprob: -8.155047416687012
    4. ' print' → logprob: -12.155047416687012
    5. '
' → logprob: -13.280047416687012
    6. ' res' → logprob: -13.780047416687012
    7. '```' → logprob: -14.030047416687012
    8. '    
' → logprob: -15.405047416687012
    9. '``' → logprob: -15.905047416687012
    10. '       ' → logprob: -15.905047416687012

Token 456: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.982165698194876e-05
    2. '=min' → logprob: -9.875080108642578
    3. ' =' → logprob: -10.500080108642578
    4. '=max' → logprob: -14.750080108642578
    5. '=
' → logprob: -15.750080108642578
    6. '=int' → logprob: -16.125080108642578
    7. '=n' → logprob: -17.375080108642578
    8. '=len' → logprob: -17.500080108642578
    9. '=

' → logprob: -17.500080108642578
    10. '＝' → logprob: -17.750080108642578

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6047699318733066e-05
    2. 'n' → logprob: -11.500016212463379
    3. ' ' → logprob: -12.500016212463379
    4. '   ' → logprob: -13.875016212463379
    5. '1' → logprob: -14.500016212463379
    6. 'min' → logprob: -14.875016212463379
    7. 'res' → logprob: -16.875015258789062
    8. '000' → logprob: -17.125015258789062
    9. '```' → logprob: -17.187515258789062
    10. '`' → logprob: -17.625015258789062

Token 458: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2525584399700165
    2. '   ' → logprob: -1.5025584697723389
    3. '
' → logprob: -7.50255823135376
    4. ' print' → logprob: -10.002558708190918
    5. '    
' → logprob: -10.752558708190918
    6. '```' → logprob: -11.627558708190918
    7. '  
' → logprob: -14.252558708190918
    8. '	print' → logprob: -14.627558708190918
    9. '
' → logprob: -15.127558708190918
    10. '``' → logprob: -16.1275577545166

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018613530322909355
    2. 'print' → logprob: -4.018613338470459
    3. '    
' → logprob: -8.268613815307617
    4. '
' → logprob: -8.643613815307617
    5. '```' → logprob: -10.768613815307617
    6. ' print' → logprob: -12.518613815307617
    7. '  
' → logprob: -12.768613815307617
    8. '<|end|>' → logprob: -14.143613815307617
    9. '	print' → logprob: -14.393613815307617
    10. '``' → logprob: -14.393613815307617

Token 460: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001970981014892459
    2. '   ' → logprob: -6.2519707679748535
    3. '
' → logprob: -10.376971244812012
    4. ' print' → logprob: -11.876971244812012
    5. '```' → logprob: -13.126971244812012
    6. '    
' → logprob: -13.376971244812012
    7. '	print' → logprob: -14.626971244812012
    8. '``' → logprob: -16.626970291137695
    9. '  
' → logprob: -16.626970291137695
    10. '   
' → logprob: -17.876970291137695

Token 461: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -15.25015926361084
    4. 'res' → logprob: -15.75015926361084
    5. '('' → logprob: -19.125158309936523
    6. '(f' → logprob: -19.125158309936523
    7. '()' → logprob: -19.250158309936523
    8. ' res' → logprob: -19.500158309936523
    9. '(result' → logprob: -20.125158309936523
    10. ',res' → logprob: -20.125158309936523

Token 462: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -16.875
    4. ')`' → logprob: -17.0
    5. '`)' → logprob: -18.125
    6. '))' → logprob: -18.25
    7. '())' → logprob: -18.5
    8. '')' → logprob: -19.5
    9. ')#' → logprob: -19.875
    10. ')}' → logprob: -20.0

Token 463: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.20141363143920898
    2. 'res' → logprob: -1.701413631439209
    3. '	res' → logprob: -15.826414108276367
    4. '(res' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.951414108276367
    6. ' ' → logprob: -17.576414108276367
    7. '$res' → logprob: -17.951414108276367
    8. ',res' → logprob: -18.076414108276367
    9. '=res' → logprob: -18.076414108276367
    10. '<' → logprob: -18.201414108276367

Token 464: '<=' (ID: 16672)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004783730488270521
    2. '<=' → logprob: -5.879783630371094
    3. ' !=' → logprob: -6.629783630371094
    4. '!=-' → logprob: -7.629783630371094
    5. '<' → logprob: -9.254783630371094
    6. '!=(' → logprob: -10.379783630371094
    7. '<len' → logprob: -10.754783630371094
    8. '<n' → logprob: -11.629783630371094
    9. '!==' → logprob: -12.504783630371094
    10. 'else' → logprob: -12.879783630371094

Token 465: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1756367712223437e-05
    2. ' n' → logprob: -11.625011444091797
    3. 'S' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.500011444091797
    5. 'm' → logprob: -14.625011444091797
    6. ' ' → logprob: -15.375011444091797
    7. 'w' → logprob: -15.500011444091797
    8. '0' → logprob: -15.500011444091797
    9. '
' → logprob: -15.750011444091797
    10. '```' → logprob: -16.250011444091797

Token 466: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1602245420217514
    2. ' else' → logprob: -1.9102245569229126
    3. '```' → logprob: -15.660224914550781
    4. '
' → logprob: -16.66022491455078
    5. '	else' → logprob: -16.91022491455078
    6. '   ' → logprob: -16.91022491455078
    7. 'and' → logprob: -17.53522491455078
    8. '_else' → logprob: -18.16022491455078
    9. 'els' → logprob: -18.66022491455078
    10. 'el' → logprob: -19.03522491455078

Token 467: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2985539436340332
    2. 'n' → logprob: -1.9235539436340332
    3. '"' → logprob: -2.548553943634033
    4. ''n' → logprob: -4.048553943634033
    5. ''' → logprob: -4.548553943634033
    6. '0' → logprob: -6.173553943634033
    7. '"No' → logprob: -6.548553943634033
    8. '"N' → logprob: -7.048553943634033
    9. ''N' → logprob: -7.423553943634033
    10. '-n' → logprob: -8.548553466796875

Token 468: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39317750930786133
    2. '"' → logprob: -1.5181775093078613
    3. 'n' → logprob: -2.8931775093078613
    4. ''n' → logprob: -3.5181775093078613
    5. ''' → logprob: -4.518177509307861
    6. '0' → logprob: -5.768177509307861
    7. '"No' → logprob: -6.018177509307861
    8. '"N' → logprob: -6.143177509307861
    9. ''N' → logprob: -7.143177509307861
    10. '"S' → logprob: -8.643177032470703

Token 469: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -17.75
    4. '))' → logprob: -17.875
    5. '())' → logprob: -17.875
    6. ')
' → logprob: -17.875
    7. ')}' → logprob: -19.25
    8. '})' → logprob: -19.5
    9. ')**' → logprob: -19.75
    10. '`)' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 467
Tokens correctement prédits (1ère position, stricte): 227
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 393
Précision stricte (1ère position): 48.61%
Précision adaptée (1ère position): 52.68%
Précision (top 10): 84.15%
================================================================================
