================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Iterable


class Macronutrient:
    PROTEIN = 'protein'
    FAT = 'fat'
    CARBOHYDRATE = 'carbohydrate'

    _calorie_map = {
        PROTEIN: 4,
        FAT: 9,
        CARBOHYDRATE: 4
    }

    @classmethod
    def calorie_per_gram(cls, nutrient: str) -> int:
        return cls._calorie_map[nutrient]


class NutrientProfile:
    def __init__(self, protein: int, fat: int, carbohydrate: int):
        self._amounts = {
            Macronutrient.PROTEIN: protein,
            Macronutrient.FAT: fat,
            Macronutrient.CARBOHYDRATE: carbohydrate,
        }

    def amount(self, nutrient: str) -> int:
        return self._amounts[nutrient]

    def calories(self) -> int:
        return sum(
            self._amounts[nutrient] * Macronutrient.calorie_per_gram(nutrient)
            for nutrient in self._amounts
        )

    def exceeds(self, other: 'NutrientProfile') -> bool:
        return any(
            self._amounts[nutrient] > other._amounts[nutrient]
            for nutrient in self._amounts
        )


class Snack:
    def __init__(self, id_: int, nutrient_profile: NutrientProfile):
        self.id = id_
        self.nutrient_profile = nutrient_profile
        self.calories = nutrient_profile.calories()

    def is_within_limits(self, nutrient_limit: NutrientProfile, calorie_limit: int) -> bool:
        if self.nutrient_profile.exceeds(nutrient_limit):
            return False
        if self.calories > calorie_limit:
            return False
        return True


class NutrientLimits(NutrientProfile):
    # Inherits from NutrientProfile to use same interface
    pass


class SnackCollection:
    def __init__(self, snacks: List[Snack]):
        self.snacks = snacks

    def filter_allowed(self, limits: NutrientLimits, calorie_limit: int) -> List[int]:
        allowed = []
        for snack in self.snacks:
            if snack.is_within_limits(limits, calorie_limit):
                allowed.append(snack.id)
        return allowed


class InputParser:
    def __init__(self, input_lines: Iterable[str]):
        self.lines = iter(input_lines)

    def parse_dataset(self) -> Tuple[SnackCollection, NutrientLimits, int]:
        try:
            n_line = next(self.lines).strip()
        except StopIteration:
            return None  # No more datasets

        if n_line == '0':
            return None  # End of all datasets

        n = int(n_line)
        snacks = []
        for _ in range(n):
            line = next(self.lines).strip()
            s, p, q, r = map(int, line.split())
            nutrient_profile = NutrientProfile(p, q, r)
            snack = Snack(s, nutrient_profile)
            snacks.append(snack)
        limit_line = next(self.lines).strip()
        P, Q, R, C = map(int, limit_line.split())
        nutrient_limits = NutrientLimits(P, Q, R)
        calorie_limit = C
        return SnackCollection(snacks), nutrient_limits, calorie_limit

    def datasets(self) -> Iterable[Tuple[SnackCollection, NutrientLimits, int]]:
        while True:
            parsed = self.parse_dataset()
            if parsed is None:
                break
            yield parsed


class OutputFormatter:
    @staticmethod
    def format_allowed(allowed_ids: List[int]) -> str:
        if not allowed_ids:
            return "NA"
        return '\n'.join(str(id_) for id_ in allowed_ids)


def main():
    import sys
    parser = InputParser(sys.stdin)
    for snack_collection, nutrient_limits, calorie_limit in parser.datasets():
        allowed = snack_collection.filter_allowed(nutrient_limits, calorie_limit)
        print(OutputFormatter.format_allowed(allowed))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.015827767550945282
    2. ' Any' → logprob: -4.515827655792236
    3. 'List' → logprob: -5.890827655792236
    4. ' Optional' → logprob: -6.640827655792236
    5. 'Any' → logprob: -8.140828132629395
    6. ' Union' → logprob: -8.140828132629395
    7. ' Generator' → logprob: -9.890828132629395
    8. ' Iterable' → logprob: -11.015828132629395
    9. 'Optional' → logprob: -11.140828132629395
    10. ' Tuple' → logprob: -11.890828132629395

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0205401182174683
    2. 'def' → logprob: -1.5205401182174683
    3. '[' → logprob: -2.145540237426758
    4. ',' → logprob: -2.270540237426758
    5. '\n' → logprob: -3.020540237426758
    6. 'import' → logprob: -3.270540237426758
    7. '\' → logprob: -3.895540237426758
    8. ':' → logprob: -3.895540237426758
    9. '
' → logprob: -4.145540237426758
    10. '

' → logprob: -4.395540237426758

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7062650322914124
    2. 'Optional' → logprob: -0.7062650322914124
    3. 'Dict' → logprob: -5.331264972686768
    4. 'Tuple' → logprob: -5.581264972686768
    5. ' Dict' → logprob: -6.081264972686768
    6. ' Union' → logprob: -7.081264972686768
    7. ' Tuple' → logprob: -7.456264972686768
    8. 'Union' → logprob: -7.956264972686768
    9. 'Any' → logprob: -8.956265449523926
    10. 'Iterable' → logprob: -9.331265449523926

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17181816697120667
    2. '```' → logprob: -2.546818256378174
    3. ',' → logprob: -3.796818256378174
    4. ':' → logprob: -4.296818256378174
    5. 'import' → logprob: -4.671818256378174
    6. '`' → logprob: -5.046818256378174
    7. '\' → logprob: -5.296818256378174
    8. '(' → logprob: -5.421818256378174
    9. '[' → logprob: -5.671818256378174
    10. '\n' → logprob: -5.796818256378174

Token 7: ' Iterable' (ID: 71228)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.16882570087909698
    2. 'Dict' → logprob: -2.043825626373291
    3. ' Union' → logprob: -4.793825626373291
    4. ' Optional' → logprob: -4.793825626373291
    5. 'Optional' → logprob: -5.668825626373291
    6. 'Union' → logprob: -6.668825626373291
    7. 'Iterable' → logprob: -6.918825626373291
    8. 'Set' → logprob: -7.293825626373291
    9. ' Callable' → logprob: -7.293825626373291
    10. 'dict' → logprob: -7.793825626373291

Token 8: '


' (ID: 2499)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8427940011024475
    2. 'def' → logprob: -1.4677939414978027
    3. '```' → logprob: -1.7177939414978027
    4. ':' → logprob: -2.2177939414978027
    5. '(' → logprob: -3.9677939414978027
    6. ',' → logprob: -4.092793941497803
    7. '.' → logprob: -5.717793941497803
    8. '\[' → logprob: -5.842793941497803
    9. '[int' → logprob: -5.967793941497803
    10. '`' → logprob: -6.342793941497803

Token 9: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056139469146728516
    2. 'd' → logprob: -2.9311394691467285
    3. 'de' → logprob: -7.1811394691467285
    4. 'D' → logprob: -8.18113899230957
    5. '```' → logprob: -9.18113899230957
    6. 'class' → logprob: -10.05613899230957
    7. '`' → logprob: -10.80613899230957
    8. '[' → logprob: -11.93113899230957
    9. ':' → logprob: -12.05613899230957
    10. '.' → logprob: -12.18113899230957

Token 10: ' Macron' (ID: 84149)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.4358537793159485
    2. ' Data' → logprob: -2.0608537197113037
    3. ' Vector' → logprob: -2.8108537197113037
    4. ' Solution' → logprob: -3.1858537197113037
    5. ' Parser' → logprob: -3.5608537197113037
    6. ' Iterable' → logprob: -4.060853958129883
    7. ' ' → logprob: -4.310853958129883
    8. ' Sample' → logprob: -4.310853958129883
    9. ' Stack' → logprob: -4.935853958129883
    10. ' Token' → logprob: -5.560853958129883

Token 11: 'utr' (ID: 64165)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0042876917868852615
    2. 's' → logprob: -6.0042877197265625
    3. 'e' → logprob: -6.8792877197265625
    4. '():' → logprob: -7.8792877197265625
    5. ''s' → logprob: -9.129287719726562
    6. '```' → logprob: -9.379287719726562
    7. '):' → logprob: -10.004287719726562
    8. '`:' → logprob: -10.504287719726562
    9. ':**' → logprob: -10.629287719726562
    10. '':' → logprob: -10.879287719726562

Token 12: 'ient' (ID: 773)
  Prédit: 'ients'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ients' → logprob: -0.8128190040588379
    2. 'ient' → logprob: -1.062819004058838
    3. 'e' → logprob: -1.687819004058838
    4. 'ion' → logprob: -4.812819004058838
    5. 'ent' → logprob: -5.312819004058838
    6. 'ents' → logprob: -5.937819004058838
    7. '```' → logprob: -6.062819004058838
    8. 'iens' → logprob: -6.187819004058838
    9. 'ition' → logprob: -6.562819004058838
    10. 'es' → logprob: -7.062819004058838

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001452375203371048
    2. '(' → logprob: -7.126452445983887
    3. 's' → logprob: -7.751452445983887
    4. '):' → logprob: -10.126452445983887
    5. ':**' → logprob: -10.251452445983887
    6. ':
' → logprob: -10.751452445983887
    7. 'Composition' → logprob: -11.001452445983887
    8. '():' → logprob: -11.126452445983887
    9. 'Type' → logprob: -12.251452445983887
    10. 'Content' → logprob: -12.251452445983887

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06273332983255386
    2. ':' → logprob: -2.8127334117889404
    3. '(' → logprob: -7.687733173370361
    4. 'def' → logprob: -8.93773365020752
    5. ':
' → logprob: -10.31273365020752
    6. '```' → logprob: -10.43773365020752
    7. '    
' → logprob: -10.81273365020752
    8. ' def' → logprob: -11.06273365020752
    9. '():' → logprob: -11.31273365020752
    10. '   ' → logprob: -11.68773365020752

Token 15: ' PRO' (ID: 8369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14051125943660736
    2. 'def' → logprob: -2.2655112743377686
    3. ' def' → logprob: -3.6405112743377686
    4. '```' → logprob: -7.0155110359191895
    5. ':' → logprob: -9.390511512756348
    6. '    ' → logprob: -10.640511512756348
    7. ')' → logprob: -11.140511512756348
    8. '"""' → logprob: -12.140511512756348
    9. '  ' → logprob: -12.515511512756348
    10. '(' → logprob: -12.640511512756348

Token 16: 'TE' (ID: 5075)
  Prédit: 'TE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TE' → logprob: -0.018861688673496246
    2. 'PERTIES' → logprob: -4.768861770629883
    3. 'T' → logprob: -5.143861770629883
    4. 'PORT' → logprob: -6.893861770629883
    5. 'PERTY' → logprob: -7.268861770629883
    6. 'FILE' → logprob: -7.768861770629883
    7. 'VID' → logprob: -7.893861770629883
    8. 'F' → logprob: -8.018861770629883
    9. 'GRAM' → logprob: -8.018861770629883
    10. 'FILES' → logprob: -8.393861770629883

Token 17: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.0052354102954268456
    2. 'INS' → logprob: -5.255235195159912
    3. 'I' → logprob: -13.63023567199707
    4. ' IN' → logprob: -15.13023567199707
    5. '   ' → logprob: -16.50523567199707
    6. 'INES' → logprob: -18.38023567199707
    7. '_IN' → logprob: -18.63023567199707
    8. '	IN' → logprob: -18.88023567199707
    9. '  ' → logprob: -19.63023567199707
    10. ''' → logprob: -19.88023567199707

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050686292350292206
    2. '=' → logprob: -3.4256863594055176
    3. 'S' → logprob: -4.800686359405518
    4. ':' → logprob: -5.675686359405518
    5. '_' → logprob: -5.800686359405518
    6. '   ' → logprob: -6.925686359405518
    7. '  ' → logprob: -8.17568588256836
    8. ',' → logprob: -8.30068588256836
    9. ' ' → logprob: -8.80068588256836
    10. 's' → logprob: -8.92568588256836

Token 19: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03541656583547592
    2. '"' → logprob: -3.535416603088379
    3. ' '' → logprob: -5.285416603088379
    4. ' ' → logprob: -9.160416603088379
    5. ' "' → logprob: -9.285416603088379
    6. '1' → logprob: -9.535416603088379
    7. '   ' → logprob: -9.535416603088379
    8. '100' → logprob: -9.535416603088379
    9. ''b' → logprob: -9.910416603088379
    10. ''s' → logprob: -10.660416603088379

Token 20: 'protein' (ID: 161877)
  Prédit: 'protein'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protein' → logprob: -0.004839145578444004
    2. 'Protein' → logprob: -5.504838943481445
    3. 'PRO' → logprob: -7.379838943481445
    4. ' protein' → logprob: -9.129838943481445
    5. 'prote' → logprob: -10.879838943481445
    6. ''' → logprob: -12.629838943481445
    7. ' Protein' → logprob: -13.504838943481445
    8. 'P' → logprob: -14.004838943481445
    9. '蛋' → logprob: -14.004838943481445
    10. '"' → logprob: -14.379838943481445

Token 21: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00013047587708570063
    2. ''
' → logprob: -9.000130653381348
    3. ''
' → logprob: -12.750130653381348
    4. ' '' → logprob: -13.375130653381348
    5. '"' → logprob: -13.375130653381348
    6. ''s' → logprob: -14.500130653381348
    7. ''

' → logprob: -15.625130653381348
    8. ''value' → logprob: -16.12512969970703
    9. '',' → logprob: -16.62512969970703
    10. '```' → logprob: -17.62512969970703

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011040517129004002
    2. ' ' → logprob: -5.136040687561035
    3. 'CAR' → logprob: -6.136040687561035
    4. '  ' → logprob: -7.386040687561035
    5. 'F' → logprob: -7.511040687561035
    6. ' FAT' → logprob: -7.511040687561035
    7. ',' → logprob: -8.511040687561035
    8. 'S' → logprob: -8.636040687561035
    9. ' CAR' → logprob: -8.886040687561035
    10. 'fat' → logprob: -9.261040687561035

Token 23: ' FAT' (ID: 119103)
  Prédit: 'CAR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CAR' → logprob: -1.1580978631973267
    2. 'F' → logprob: -1.4080978631973267
    3. ' FAT' → logprob: -1.5330978631973267
    4. ' CAR' → logprob: -2.033097743988037
    5. '   ' → logprob: -2.408097743988037
    6. ' F' → logprob: -6.533097743988037
    7. ' ' → logprob: -6.658097743988037
    8. ',' → logprob: -7.658097743988037
    9. 'car' → logprob: -7.908097743988037
    10. 'fat' → logprob: -9.033098220825195

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0381246842443943
    2. '=' → logprob: -3.2881247997283936
    3. ' ' → logprob: -10.038125038146973
    4. '   ' → logprob: -10.413125038146973
    5. '  ' → logprob: -12.913125038146973
    6. ''' → logprob: -13.038125038146973
    7. 's' → logprob: -13.413125038146973
    8. ' ='' → logprob: -13.663125038146973
    9. '='' → logprob: -14.038125038146973
    10. '_' → logprob: -14.538125038146973

Token 25: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2519509494304657
    2. ' '' → logprob: -1.501950979232788
    3. ''f' → logprob: -11.501951217651367
    4. ' ' → logprob: -11.751951217651367
    5. ''s' → logprob: -13.626951217651367
    6. '"' → logprob: -14.751951217651367
    7. ' ' → logprob: -14.751951217651367
    8. ' fat' → logprob: -15.501951217651367
    9. '  ' → logprob: -15.501951217651367
    10. ''use' → logprob: -15.626951217651367

Token 26: 'fat' (ID: 49468)
  Prédit: 'fat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fat' → logprob: -0.001240348443388939
    2. ' fat' → logprob: -6.751240253448486
    3. ''' → logprob: -9.751240730285645
    4. 'f' → logprob: -12.876240730285645
    5. 'Fat' → logprob: -13.126240730285645
    6. '-fat' → logprob: -13.126240730285645
    7. 'protein' → logprob: -14.376240730285645
    8. ''f' → logprob: -14.376240730285645
    9. ' ' → logprob: -14.501240730285645
    10. '脂' → logprob: -14.501240730285645

Token 27: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.3873074948787689
    2. ''' → logprob: -1.1373075246810913
    3. ''
' → logprob: -7.762307643890381
    4. ''

' → logprob: -13.262307167053223
    5. ''''' → logprob: -13.512307167053223
    6. ''\' → logprob: -13.762307167053223
    7. '   ' → logprob: -14.012307167053223
    8. '\n' → logprob: -14.137307167053223
    9. '''
' → logprob: -14.137307167053223
    10. ''''
' → logprob: -14.262307167053223

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021080286242067814
    2. 'CAR' → logprob: -6.502108097076416
    3. '```' → logprob: -8.502107620239258
    4. ' ' → logprob: -9.127107620239258
    5. 'S' → logprob: -9.752107620239258
    6. '  ' → logprob: -9.877107620239258
    7. '    
' → logprob: -10.127107620239258
    8. ' CAR' → logprob: -10.252107620239258
    9. '
' → logprob: -10.502107620239258
    10. '    ' → logprob: -11.127107620239258

Token 29: ' CAR' (ID: 39783)
  Prédit: 'CAR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CAR' (adapté à ' CAR') → logprob: -0.05439998582005501
    2. '   ' → logprob: -3.3043999671936035
    3. ' CAR' → logprob: -4.1793999671936035
    4. ' ' → logprob: -8.429400444030762
    5. 'car' → logprob: -8.804400444030762
    6. 'CHO' → logprob: -8.804400444030762
    7. 'F' → logprob: -8.929400444030762
    8. 'Car' → logprob: -9.804400444030762
    9. ' carbohydrate' → logprob: -9.929400444030762
    10. ' carbohydrates' → logprob: -10.554400444030762

Token 30: 'BO' (ID: 8025)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0037851084489375353
    2. 'BO' → logprob: -5.628785133361816
    3. 'BON' → logprob: -9.503785133361816
    4. 'BOSE' → logprob: -10.253785133361816
    5. 'BS' → logprob: -10.378785133361816
    6. '   ' → logprob: -11.128785133361816
    7. ' B' → logprob: -12.378785133361816
    8. '_B' → logprob: -12.628785133361816
    9. 'BH' → logprob: -12.753785133361816
    10. '

' → logprob: -12.878785133361816

Token 31: 'HY' (ID: 91048)
  Prédit: 'HY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HY' → logprob: -0.0008627458591945469
    2. 'hydrate' → logprob: -7.6258625984191895
    3. 'XY' → logprob: -9.375863075256348
    4. 'hydrates' → logprob: -9.625863075256348
    5. 'H' → logprob: -9.750863075256348
    6. 'BO' → logprob: -10.000863075256348
    7. 'Y' → logprob: -10.500863075256348
    8. 'N' → logprob: -11.500863075256348
    9. 'HO' → logprob: -11.500863075256348
    10. ' hydrate' → logprob: -11.500863075256348

Token 32: 'DR' (ID: 10361)
  Prédit: 'DR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DR' → logprob: -0.0007497096667066216
    2. 'D' → logprob: -7.250749588012695
    3. 'DAR' → logprob: -10.875749588012695
    4. 'DATE' → logprob: -11.625749588012695
    5. '_DR' → logprob: -12.000749588012695
    6. 'ATE' → logprob: -13.375749588012695
    7. 'S' → logprob: -13.750749588012695
    8. 'RATE' → logprob: -14.250749588012695
    9. 'DA' → logprob: -15.000749588012695
    10. 'N' → logprob: -15.500749588012695

Token 33: 'ATE' (ID: 4197)
  Prédit: 'ATE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATE' → logprob: -6.384836888173595e-05
    2. 'Y' → logprob: -10.1250638961792
    3. 'ATES' → logprob: -11.8750638961792
    4. 'A' → logprob: -12.0000638961792
    5. 'RATE' → logprob: -12.2500638961792
    6. 'YTE' → logprob: -13.1250638961792
    7. 'AY' → logprob: -13.5000638961792
    8. 'DR' → logprob: -14.2500638961792
    9. 'AT' → logprob: -14.5000638961792
    10. 'TE' → logprob: -14.8750638961792

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137052059173584
    2. '=' → logprob: -1.3137052059173584
    3. 's' → logprob: -7.8137054443359375
    4. 'S' → logprob: -10.313705444335938
    5. ' ' → logprob: -13.063705444335938
    6. ' ='' → logprob: -13.563705444335938
    7. '='' → logprob: -13.688705444335938
    8. ''s' → logprob: -14.313705444335938
    9. '_' → logprob: -15.688705444335938
    10. ''' → logprob: -15.688705444335938

Token 35: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.1428009271621704
    2. ''' → logprob: -2.017800807952881
    3. ''s' → logprob: -9.267801284790039
    4. ' ' → logprob: -10.642801284790039
    5. '"' → logprob: -13.767801284790039
    6. ''a' → logprob: -14.892801284790039
    7. ''value' → logprob: -14.892801284790039
    8. ''d' → logprob: -15.267801284790039
    9. ''m' → logprob: -15.267801284790039
    10. ''S' → logprob: -15.392801284790039

Token 36: 'car' (ID: 6830)
  Prédit: 'car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0004108924185857177
    2. ' carbohydrate' → logprob: -8.375411033630371
    3. ''' → logprob: -8.625411033630371
    4. 'carbon' → logprob: -15.000411033630371
    5. 'carbonate' → logprob: -15.875411033630371
    6. ''s' → logprob: -16.125410079956055
    7. '-car' → logprob: -16.500410079956055
    8. '"' → logprob: -17.125410079956055
    9. ''
' → logprob: -17.375410079956055
    10. 'Car' → logprob: -17.500410079956055

Token 37: 'bo' (ID: 1692)
  Prédit: 'hydrate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hydrate' → logprob: -0.003367350436747074
    2. 'oh' → logprob: -5.8783674240112305
    3. 'hydrates' → logprob: -8.25336742401123
    4. 'bo' → logprob: -9.12836742401123
    5. 'ho' → logprob: -9.37836742401123
    6. 'hy' → logprob: -9.50336742401123
    7. ' hydrate' → logprob: -11.37836742401123
    8. 'hyd' → logprob: -11.87836742401123
    9. 'hydr' → logprob: -12.25336742401123
    10. 'hyde' → logprob: -12.62836742401123

Token 38: 'hydrate' (ID: 70928)
  Prédit: 'hydrate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hydrate' → logprob: -0.0003706126008182764
    2. 'hy' → logprob: -8.500370979309082
    3. 'hydrates' → logprob: -9.375370979309082
    4. 'hyde' → logprob: -10.625370979309082
    5. 'h' → logprob: -10.750370979309082
    6. 'hyr' → logprob: -11.375370979309082
    7. 'yd' → logprob: -11.750370979309082
    8. 'hyd' → logprob: -11.750370979309082
    9. ' hydrate' → logprob: -12.625370979309082
    10. 'hydr' → logprob: -12.750370979309082

Token 39: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.064297824399546e-05
    2. ''
' → logprob: -9.625070571899414
    3. ''s' → logprob: -13.625070571899414
    4. ''''' → logprob: -13.750070571899414
    5. '"' → logprob: -13.875070571899414
    6. 's' → logprob: -15.250070571899414
    7. ' '' → logprob: -15.375070571899414
    8. ''
' → logprob: -15.500070571899414
    9. '```' → logprob: -15.625070571899414
    10. ''

' → logprob: -15.750070571899414

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3042559325695038
    2. 'class' → logprob: -2.054255962371826
    3. ':' → logprob: -2.929255962371826
    4. '```' → logprob: -3.679255962371826
    5. '

' → logprob: -3.804255962371826
    6. 's' → logprob: -4.054255962371826
    7. '   ' → logprob: -5.804255962371826
    8. '<|end|>' → logprob: -6.179255962371826
    9. ',' → logprob: -6.429255962371826
    10. '_' → logprob: -6.804255962371826

Token 41: ' _' (ID: 1175)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16572624444961548
    2. ':' → logprob: -2.9157261848449707
    3. '   ' → logprob: -2.9157261848449707
    4. '
' → logprob: -4.165726184844971
    5. '```' → logprob: -4.415726184844971
    6. ' def' → logprob: -4.665726184844971
    7. '@' → logprob: -6.040726184844971
    8. '    
' → logprob: -7.040726184844971
    9. ' ' → logprob: -7.040726184844971
    10. ',' → logprob: -8.040726661682129

Token 42: 'cal' (ID: 5842)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.14541040360927582
    2. 'VALUES' → logprob: -2.5204102993011475
    3. '_values' → logprob: -4.145410537719727
    4. 'VALID' → logprob: -5.145410537719727
    5. 'N' → logprob: -5.270410537719727
    6. 'types' → logprob: -5.770410537719727
    7. 'options' → logprob: -5.770410537719727
    8. 'ALL' → logprob: -5.895410537719727
    9. 'T' → logprob: -5.895410537719727
    10. 'value' → logprob: -6.145410537719727

Token 43: 'orie' (ID: 22416)
  Prédit: 'ories'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.08432002365589142
    2. '_per' → logprob: -2.834320068359375
    3. 'orie' → logprob: -4.084320068359375
    4. 'or' → logprob: -6.584320068359375
    5. 'ORIES' → logprob: -6.584320068359375
    6. 'oric' → logprob: -6.834320068359375
    7. 's' → logprob: -7.334320068359375
    8. 'per' → logprob: -7.959320068359375
    9. '```' → logprob: -8.834320068359375
    10. 'o' → logprob: -9.459320068359375

Token 44: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021302755922079086
    2. '_s' → logprob: -6.877130508422852
    3. '_per' → logprob: -6.877130508422852
    4. '_' → logprob: -10.252130508422852
    5. '_content' → logprob: -11.877130508422852
    6. '_values' → logprob: -12.252130508422852
    7. '_value' → logprob: -12.377130508422852
    8. '_map' → logprob: -12.502130508422852
    9. '_mapping' → logprob: -13.002130508422852
    10. '_ratio' → logprob: -13.127130508422852

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021634676959365606
    2. ':' → logprob: -6.877163410186768
    3. '=' → logprob: -6.877163410186768
    4. ' ' → logprob: -10.252163887023926
    5. ' :' → logprob: -10.377163887023926
    6. 's' → logprob: -11.752163887023926
    7. '   ' → logprob: -11.877163887023926
    8. '<|end|>' → logprob: -11.877163887023926
    9. '  ' → logprob: -12.127163887023926
    10. ' =
' → logprob: -13.627163887023926

Token 46: ' {
' (ID: 405)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03825492411851883
    2. ' {' → logprob: -3.288254976272583
    3. '{'' → logprob: -9.038254737854004
    4. '{
' → logprob: -9.538254737854004
    5. '   ' → logprob: -11.538254737854004
    6. ' {'' → logprob: -12.038254737854004
    7. ' {
' → logprob: -13.038254737854004
    8. ' ' → logprob: -13.538254737854004
    9. '{}' → logprob: -13.913254737854004
    10. '  ' → logprob: -14.413254737854004

Token 47: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.585253894329071
    2. '       ' → logprob: -1.0852539539337158
    3. 'Mac' → logprob: -2.335253953933716
    4. ''' → logprob: -5.210253715515137
    5. ' Macron' → logprob: -6.085253715515137
    6. 'MAC' → logprob: -8.085253715515137
    7. '_mac' → logprob: -9.335253715515137
    8. '   ' → logprob: -9.585253715515137
    9. 'mac' → logprob: -10.210253715515137
    10. 'Macros' → logprob: -10.710253715515137

Token 48: ' PRO' (ID: 8369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7045208215713501
    2. 'PRO' (adapté à ' PRO') → logprob: -0.7045208215713501
    3. ''' → logprob: -4.7045207023620605
    4. '       ' → logprob: -7.5795207023620605
    5. 'Mac' → logprob: -7.7045207023620605
    6. 'Protein' → logprob: -7.8295207023620605
    7. 'MAC' → logprob: -7.9545207023620605
    8. '_pro' → logprob: -9.204521179199219
    9. ' PRO' → logprob: -9.204521179199219
    10. '_PRO' → logprob: -9.329521179199219

Token 49: 'TE' (ID: 5075)
  Prédit: 'TE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TE' → logprob: -2.3438327843905427e-05
    2. 'E' → logprob: -11.75002384185791
    3. 'IN' → logprob: -12.00002384185791
    4. 'tein' → logprob: -12.00002384185791
    5. 'TIN' → logprob: -13.87502384185791
    6. 'OTE' → logprob: -14.62502384185791
    7. '_TE' → logprob: -14.75002384185791
    8. '```' → logprob: -15.00002384185791
    9. 'PRO' → logprob: -15.87502384185791
    10. 'TAIN' → logprob: -16.125022888183594

Token 50: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -0.00026538874953985214
    2. 'N' → logprob: -8.250265121459961
    3. 'I' → logprob: -13.125265121459961
    4. ' IN' → logprob: -14.750265121459961
    5. 'in' → logprob: -14.875265121459961
    6. '```' → logprob: -15.375265121459961
    7. '   ' → logprob: -15.625265121459961
    8. 'UN' → logprob: -15.625265121459961
    9. 'In' → logprob: -16.00026512145996
    10. '_IN' → logprob: -16.25026512145996

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9743012671824545e-05
    2. ' :' → logprob: -10.875020027160645
    3. ',' → logprob: -15.375020027160645
    4. ':return' → logprob: -16.625019073486328
    5. ':int' → logprob: -16.875019073486328
    6. '   ' → logprob: -17.125019073486328
    7. ':value' → logprob: -17.375019073486328
    8. '```' → logprob: -17.625019073486328
    9. '':' → logprob: -17.750019073486328
    10. ':s' → logprob: -18.000019073486328

Token 52: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.14325018227100372
    2. ' ' → logprob: -2.0182502269744873
    3. '9' → logprob: -7.768249988555908
    4. '   ' → logprob: -8.893250465393066
    5. '       ' → logprob: -12.893250465393066
    6. '```' → logprob: -13.143250465393066
    7. '<|end|>' → logprob: -13.518250465393066
    8. '}' → logprob: -13.768250465393066
    9. '  ' → logprob: -13.893250465393066
    10. '    ' → logprob: -13.955750465393066

Token 53: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000822495436295867
    2. '9' → logprob: -7.1258225440979
    3. ' ' → logprob: -11.000822067260742
    4. '   ' → logprob: -14.000822067260742
    5. '```' → logprob: -15.375822067260742
    6. ''' → logprob: -16.000822067260742
    7. '       ' → logprob: -16.750822067260742
    8. '{' → logprob: -18.125822067260742
    9. '  ' → logprob: -18.250822067260742
    10. 'cal' → logprob: -18.563322067260742

Token 54: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. ',
' → logprob: -9.75006103515625
    3. ' ,' → logprob: -13.12506103515625
    4. ',
' → logprob: -15.25006103515625
    5. ',

' → logprob: -15.25006103515625
    6. '}' → logprob: -15.87506103515625
    7. '   ' → logprob: -16.12506103515625
    8. ')' → logprob: -18.75006103515625
    9. '       ' → logprob: -18.75006103515625
    10. ',...' → logprob: -19.12506103515625

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028196632862091064
    2. 'F' → logprob: -4.028196811676025
    3. '   ' → logprob: -4.778196811676025
    4. '        ' → logprob: -7.528196811676025
    5. '           ' → logprob: -7.778196811676025
    6. ' F' → logprob: -8.528196334838867
    7. '    ' → logprob: -9.403196334838867
    8. '	F' → logprob: -9.653196334838867
    9. ' ' → logprob: -10.153196334838867
    10. ' fat' → logprob: -10.528196334838867

Token 56: ' FAT' (ID: 119103)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.022930139675736427
    2. ' FAT' → logprob: -3.897930145263672
    3. ' F' → logprob: -6.772930145263672
    4. 'Fat' → logprob: -7.397930145263672
    5. '   ' → logprob: -8.522930145263672
    6. '       ' → logprob: -9.272930145263672
    7. ' fat' → logprob: -9.272930145263672
    8. '	F' → logprob: -9.397930145263672
    9. 'fat' → logprob: -9.397930145263672
    10. 'MAC' → logprob: -10.897930145263672

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.051066520740278e-05
    2. ' :' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.250060081481934
    4. ',' → logprob: -15.500060081481934
    5. '4' → logprob: -16.37506103515625
    6. ' ' → logprob: -17.37506103515625
    7. '       ' → logprob: -17.37506103515625
    8. '<|end|>' → logprob: -18.00006103515625
    9. '6' → logprob: -18.12506103515625
    10. '2' → logprob: -18.37506103515625

Token 58: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.12693797051906586
    2. ' ' → logprob: -2.1269378662109375
    3. '   ' → logprob: -11.751937866210938
    4. '       ' → logprob: -14.876937866210938
    5. '```' → logprob: -14.876937866210938
    6. '	' → logprob: -15.251937866210938
    7. '8' → logprob: -15.501937866210938
    8. '    ' → logprob: -15.626937866210938
    9. '        ' → logprob: -16.001937866210938
    10. '7' → logprob: -16.501937866210938

Token 59: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.125123977661133
    4. '```' → logprob: -18.250123977661133
    5. '	' → logprob: -19.500123977661133
    6. '  ' → logprob: -19.500123977661133
    7. '۹' → logprob: -19.500123977661133
    8. '９' → logprob: -19.625123977661133
    9. '09' → logprob: -20.125123977661133
    10. '90' → logprob: -20.375123977661133

Token 60: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024945642799139023
    2. ',
' → logprob: -6.0024943351745605
    3. '   ' → logprob: -11.877494812011719
    4. '       ' → logprob: -12.377494812011719
    5. '}' → logprob: -12.502494812011719
    6. ' ,' → logprob: -13.127494812011719
    7. ',
' → logprob: -13.627494812011719
    8. ',

' → logprob: -14.877494812011719
    9. '},' → logprob: -16.12749481201172
    10. ')' → logprob: -16.37749481201172

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003700165543705225
    2. 'CAR' → logprob: -8.250370025634766
    3. '   ' → logprob: -9.875370025634766
    4. ' CAR' → logprob: -11.000370025634766
    5. '        ' → logprob: -11.250370025634766
    6. ' carbohydrate' → logprob: -11.625370025634766
    7. '      ' → logprob: -12.250370025634766
    8. ' ' → logprob: -12.375370025634766
    9. 'car' → logprob: -12.500370025634766
    10. 'Car' → logprob: -13.250370025634766

Token 62: ' CAR' (ID: 39783)
  Prédit: 'CAR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CAR' (adapté à ' CAR') → logprob: -0.07881663739681244
    2. ' CAR' → logprob: -2.7038166522979736
    3. '       ' → logprob: -4.9538164138793945
    4. '   ' → logprob: -6.4538164138793945
    5. 'Car' → logprob: -9.578816413879395
    6. 'car' → logprob: -9.828816413879395
    7. ' carbohydrate' → logprob: -9.828816413879395
    8. ' ' → logprob: -10.828816413879395
    9. ' carbohydrates' → logprob: -12.453816413879395
    10. ' carbo' → logprob: -13.078816413879395

Token 63: 'BO' (ID: 8025)
  Prédit: 'BO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BO' → logprob: -0.00012475410767365247
    2. 'B' → logprob: -9.50012493133545
    3. 'O' → logprob: -10.87512493133545
    4. '
' → logprob: -11.87512493133545
    5. 'OH' → logprob: -12.37512493133545
    6. 'БО' → logprob: -12.62512493133545
    7. '_BO' → logprob: -13.12512493133545
    8. '   ' → logprob: -13.25012493133545
    9. ' BO' → logprob: -13.25012493133545
    10. '

' → logprob: -13.37512493133545

Token 64: 'HY' (ID: 91048)
  Prédit: 'HY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HY' → logprob: -0.0007526897243224084
    2. 'Y' → logprob: -7.500752925872803
    3. 'DR' → logprob: -8.625752449035645
    4. '
' → logprob: -11.875752449035645
    5. 'hydrate' → logprob: -12.500752449035645
    6. 'YD' → logprob: -12.625752449035645
    7. 'H' → logprob: -13.875752449035645
    8. 'HD' → logprob: -13.875752449035645
    9. 'XY' → logprob: -14.000752449035645
    10. '_H' → logprob: -14.125752449035645

Token 65: 'DR' (ID: 10361)
  Prédit: 'DR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DR' → logprob: -0.0006056951242499053
    2. 'Y' → logprob: -7.625605583190918
    3. 'HY' → logprob: -9.500605583190918
    4. 'D' → logprob: -10.875605583190918
    5. '_DR' → logprob: -11.875605583190918
    6. 'YD' → logprob: -12.250605583190918
    7. 'DATE' → logprob: -12.500605583190918
    8. 'RATE' → logprob: -13.625605583190918
    9. 'O' → logprob: -13.750605583190918
    10. 'OD' → logprob: -13.750605583190918

Token 66: 'ATE' (ID: 4197)
  Prédit: 'ATE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATE' → logprob: -0.002977464348077774
    2. 'DR' → logprob: -6.00297737121582
    3. 'IDE' → logprob: -9.00297737121582
    4. 'RATE' → logprob: -9.12797737121582
    5. 'YTE' → logprob: -9.62797737121582
    6. 'DATE' → logprob: -9.75297737121582
    7. 'TE' → logprob: -9.87797737121582
    8. 'Y' → logprob: -11.00297737121582
    9. 'UTE' → logprob: -11.12797737121582
    10. 'DE' → logprob: -11.37797737121582

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.060365608893335e-05
    2. ' :' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. '4' → logprob: -16.62504005432129
    5. ' ' → logprob: -17.37504005432129
    6. ',' → logprob: -17.75004005432129
    7. '```' → logprob: -18.12504005432129
    8. ':
' → logprob: -18.62504005432129
    9. '):' → logprob: -18.62504005432129
    10. ')' → logprob: -18.75004005432129

Token 68: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.17975309491157532
    2. ' ' → logprob: -1.804753065109253
    3. '   ' → logprob: -12.304753303527832
    4. '7' → logprob: -14.179753303527832
    5. '5' → logprob: -14.554753303527832
    6. '	' → logprob: -14.554753303527832
    7. '  ' → logprob: -14.804753303527832
    8. '```' → logprob: -14.929753303527832
    9. '       ' → logprob: -15.054753303527832
    10. '3' → logprob: -15.117253303527832

Token 69: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125139236450195
    4. '```' → logprob: -17.000139236450195
    5. '}' → logprob: -17.375139236450195
    6. '       ' → logprob: -18.250139236450195
    7. '  ' → logprob: -18.625139236450195
    8. '	' → logprob: -18.750139236450195
    9. '۴' → logprob: -19.250139236450195
    10. '４' → logprob: -19.687639236450195

Token 70: '
' (ID: 198)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07892779260873795
    2. '   ' → logprob: -2.578927755355835
    3. ',' → logprob: -10.578927993774414
    4. ' }' → logprob: -11.703927993774414
    5. '}
' → logprob: -12.828927993774414
    6. ',
' → logprob: -14.078927993774414
    7. '}

' → logprob: -15.703927993774414
    8. '},' → logprob: -16.078927993774414
    9. '   ' → logprob: -16.078927993774414
    10. '
' → logprob: -16.203927993774414

Token 71: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03809806704521179
    2. '   ' → logprob: -3.288098096847534
    3. ' }' → logprob: -10.038098335266113
    4. ',' → logprob: -12.038098335266113
    5. '}
' → logprob: -12.163098335266113
    6. '}

' → logprob: -14.288098335266113
    7. ',
' → logprob: -14.663098335266113
    8. ' ' → logprob: -15.538098335266113
    9. '   ' → logprob: -16.038097381591797
    10. '```' → logprob: -16.413097381591797

Token 72: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -8.180258191714529e-06
    2. '}
' → logprob: -12.250008583068848
    3. ' }' → logprob: -13.125008583068848
    4. '   ' → logprob: -13.625008583068848
    5. '}

' (adapté à ' }

') → logprob: -15.875008583068848
    6. ',' → logprob: -18.25000762939453
    7. '```' → logprob: -18.62500762939453
    8. '}`' → logprob: -19.00000762939453
    9. ' ' → logprob: -19.12500762939453
    10. '},' → logprob: -19.75000762939453

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4230782985687256
    2. 'def' → logprob: -1.2980782985687256
    3. '
' → logprob: -4.048078536987305
    4. ' def' → logprob: -4.048078536987305
    5. '    
' → logprob: -4.048078536987305
    6. '@' → logprob: -4.798078536987305
    7. ' ' → logprob: -5.923078536987305
    8. '```' → logprob: -6.173078536987305
    9. ' 
' → logprob: -6.923078536987305
    10. ' 

' → logprob: -7.298078536987305

Token 74: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.2525674104690552
    2. 'def' → logprob: -1.5025674104690552
    3. ' def' → logprob: -7.877567291259766
    4. ' @' → logprob: -8.877567291259766
    5. '   ' → logprob: -9.377567291259766
    6. '@property' → logprob: -10.502567291259766
    7. '```' → logprob: -13.127567291259766
    8. '@param' → logprob: -13.752567291259766
    9. ')' → logprob: -13.877567291259766
    10. '@
' → logprob: -14.377567291259766

Token 75: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.5768586993217468
    2. 'property' → logprob: -1.0768587589263916
    3. 'staticmethod' → logprob: -2.3268587589263916
    4. 'class' → logprob: -9.951858520507812
    5. 'pro' → logprob: -11.951858520507812
    6. 'dat' → logprob: -12.076858520507812
    7. 'p' → logprob: -12.951858520507812
    8. 'proper' → logprob: -12.951858520507812
    9. 'static' → logprob: -13.076858520507812
    10. 'cal' → logprob: -13.201858520507812

Token 76: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12775295972824097
    2. ' def' → logprob: -2.3777530193328857
    3. '
' → logprob: -4.002752780914307
    4. '    
' → logprob: -6.127752780914307
    5. ' 
' → logprob: -6.377752780914307
    6. '(' → logprob: -6.627752780914307
    7. '   ' → logprob: -6.627752780914307
    8. ' ' → logprob: -7.002752780914307
    9. '  
' → logprob: -8.252753257751465
    10. '<|end|>' → logprob: -8.752753257751465

Token 77: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027602965012192726
    2. ' def' → logprob: -3.6526029109954834
    3. '
' → logprob: -6.7776031494140625
    4. ' ' → logprob: -10.527603149414062
    5. '\' → logprob: -10.652603149414062
    6. '    
' → logprob: -11.152603149414062
    7. '   ' → logprob: -11.402603149414062
    8. ' 
' → logprob: -11.402603149414062
    9. '(' → logprob: -11.527603149414062
    10. '  
' → logprob: -11.527603149414062

Token 78: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.029068242758512497
    2. '
' → logprob: -3.6540682315826416
    3. ' def' → logprob: -5.904068470001221
    4. '  
' → logprob: -11.404067993164062
    5. 'calculate' → logprob: -11.654067993164062
    6. '
' → logprob: -12.529067993164062
    7. ' ' → logprob: -12.529067993164062
    8. ' 
' → logprob: -12.904067993164062
    9. 'cal' → logprob: -13.654067993164062
    10. 'get' → logprob: -13.779067993164062

Token 79: ' calorie' (ID: 66006)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6311579942703247
    2. ' calorie' → logprob: -1.2561579942703247
    3. '_cal' → logprob: -2.506157875061035
    4. ' calculate' → logprob: -3.006157875061035
    5. ' calories' → logprob: -3.006157875061035
    6. '_get' → logprob: -7.256157875061035
    7. ' calor' → logprob: -7.881157875061035
    8. ' def' → logprob: -8.131157875061035
    9. ' _' → logprob: -8.131157875061035
    10. 'get' → logprob: -8.256157875061035

Token 80: '_per' (ID: 10938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067484090104699135
    2. '_per' → logprob: -5.131748199462891
    3. '_value' → logprob: -7.756748199462891
    4. '_' → logprob: -8.63174819946289
    5. '_s' → logprob: -8.75674819946289
    6. '_for' → logprob: -11.13174819946289
    7. '_factor' → logprob: -11.88174819946289
    8. '_multiplier' → logprob: -11.88174819946289
    9. '_content' → logprob: -12.25674819946289
    10. '_amount' → logprob: -12.38174819946289

Token 81: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000538497231900692
    2. 'gram' → logprob: -8.50053882598877
    3. '_g' → logprob: -9.12553882598877
    4. 'Gram' → logprob: -10.12553882598877
    5. '_gr' → logprob: -10.25053882598877
    6. '_unit' → logprob: -10.50053882598877
    7. ' gram' → logprob: -11.00053882598877
    8. 'g' → logprob: -11.25053882598877
    9. '100' → logprob: -11.37553882598877
    10. ' грам' → logprob: -11.50053882598877

Token 82: 'gram' (ID: 1695)
  Prédit: 'gram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gram' → logprob: -0.04383014515042305
    2. 'unit' → logprob: -3.168830156326294
    3. 'g' → logprob: -7.793829917907715
    4. ' gram' → logprob: -9.418829917907715
    5. 'cal' → logprob: -9.918829917907715
    6. '100' → logprob: -10.543829917907715
    7. 'token' → logprob: -10.668829917907715
    8. 'amount' → logprob: -10.668829917907715
    9. 'serv' → logprob: -10.793829917907715
    10. 'Gram' → logprob: -10.918829917907715

Token 83: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.06256280094385147
    2. '(' → logprob: -2.8125627040863037
    3. '(
' → logprob: -7.437562942504883
    4. 'cls' → logprob: -12.562562942504883
    5. '(

' → logprob: -13.812562942504883
    6. '(clazz' → logprob: -14.812562942504883
    7. '(
' → logprob: -15.187562942504883
    8. '   ' → logprob: -15.437562942504883
    9. '(cl' → logprob: -15.562562942504883
    10. ' (' → logprob: -15.812562942504883

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009895270690321922
    2. ')' → logprob: -4.634895324707031
    3. ' ,' → logprob: -9.259895324707031
    4. '   ' → logprob: -11.259895324707031
    5. '):' → logprob: -11.759895324707031
    6. ',
' → logprob: -11.884895324707031
    7. '(cls' → logprob: -12.509895324707031
    8. ',)' → logprob: -12.509895324707031
    9. ' )' → logprob: -12.884895324707031
    10. ' ' → logprob: -13.384895324707031

Token 85: ' nutrient' (ID: 72324)
  Prédit: ' mac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mac' → logprob: -0.8739819526672363
    2. 'mac' → logprob: -1.6239819526672363
    3. 'nut' → logprob: -1.6239819526672363
    4. ' nutrient' → logprob: -2.6239819526672363
    5. 'macro' → logprob: -2.7489819526672363
    6. ' macro' → logprob: -3.4989819526672363
    7. 'cls' → logprob: -4.623981952667236
    8. ' cls' → logprob: -4.873981952667236
    9. 'm' → logprob: -6.748981952667236
    10. ')' → logprob: -7.373981952667236

Token 86: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5797475576400757
    2. ':' → logprob: -0.8297475576400757
    3. ')' → logprob: -5.704747676849365
    4. '):
' → logprob: -8.204747200012207
    5. '_type' → logprob: -9.579747200012207
    6. ':str' → logprob: -9.954747200012207
    7. ' ):' → logprob: -10.079747200012207
    8. ':type' → logprob: -11.454747200012207
    9. ' :' → logprob: -11.954747200012207
    10. 'type' → logprob: -12.954747200012207

Token 87: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.10132143646478653
    2. 'str' → logprob: -2.3513214588165283
    3. ')' → logprob: -7.351321220397949
    4. ' ' → logprob: -8.60132122039795
    5. ' )' → logprob: -9.10132122039795
    6. 's' → logprob: -9.85132122039795
    7. '[str' → logprob: -9.85132122039795
    8. '	str' → logprob: -10.60132122039795
    9. 'st' → logprob: -11.22632122039795
    10. ' s' → logprob: -11.85132122039795

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001205893131555058
    2. '):' → logprob: -9.125120162963867
    3. '   ' → logprob: -12.250120162963867
    4. ' )' → logprob: -12.625120162963867
    5. ')->' → logprob: -13.500120162963867
    6. ':' → logprob: -13.625120162963867
    7. '`)' → logprob: -14.500120162963867
    8. '')' → logprob: -15.625120162963867
    9. '):
' → logprob: -15.750120162963867
    10. ' ' → logprob: -17.375120162963867

Token 89: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1379958689212799
    2. ':' → logprob: -2.637995958328247
    3. '->' → logprob: -3.137995958328247
    4. ')->' → logprob: -4.887995719909668
    5. ' ->' → logprob: -5.637995719909668
    6. '):' → logprob: -5.887995719909668
    7. '   ' → logprob: -9.637995719909668
    8. '>' → logprob: -9.762995719909668
    9. '-' → logprob: -11.637995719909668
    10. ' )->' → logprob: -12.262995719909668

Token 90: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20141403377056122
    2. 'int' → logprob: -1.7014139890670776
    3. ':int' → logprob: -15.201414108276367
    4. '[int' → logprob: -15.826414108276367
    5. '   ' → logprob: -16.201414108276367
    6. '	int' → logprob: -16.326414108276367
    7. ' ' → logprob: -16.826414108276367
    8. ' ' → logprob: -17.201414108276367
    9. ' in' → logprob: -17.451414108276367
    10. '=int' → logprob: -17.701414108276367

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001872094871941954
    2. '):' → logprob: -8.625186920166016
    3. ':return' → logprob: -12.875186920166016
    4. ':
' → logprob: -13.000186920166016
    5. ':**' → logprob: -13.500186920166016
    6. '():' → logprob: -15.375186920166016
    7. ':def' → logprob: -15.375186920166016
    8. ' :' → logprob: -15.625186920166016
    9. '>:' → logprob: -15.750186920166016
    10. '<|end|>' → logprob: -16.000186920166016

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.609735369682312
    2. '   ' → logprob: -0.984735369682312
    3. ' return' → logprob: -3.8597354888916016
    4. ':return' → logprob: -3.8597354888916016
    5. ':' → logprob: -3.9847354888916016
    6. 'return' → logprob: -4.609735488891602
    7. ')' → logprob: -4.984735488891602
    8. ' ' → logprob: -6.734735488891602
    9. '    ' → logprob: -6.984735488891602
    10. '
' → logprob: -7.109735488891602

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09493110328912735
    2. '       ' → logprob: -3.094931125640869
    3. ' return' → logprob: -3.094931125640869
    4. '   ' → logprob: -12.469930648803711
    5. '	return' → logprob: -13.719930648803711
    6. ':return' → logprob: -13.844930648803711
    7. '{return' → logprob: -14.094930648803711
    8. '
' → logprob: -15.719930648803711
    9. ' ' → logprob: -15.719930648803711
    10. 'eturn' → logprob: -15.844930648803711

Token 94: ' cls' (ID: 26133)
  Prédit: ' cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.20141343772411346
    2. 'cls' → logprob: -1.7014133930206299
    3. '(cls' → logprob: -15.82641315460205
    4. ' ' → logprob: -18.201414108276367
    5. 'cl' → logprob: -18.701414108276367
    6. '_cls' → logprob: -18.826414108276367
    7. '.cls' → logprob: -19.451414108276367
    8. 'classmethod' → logprob: -19.951414108276367
    9. 'class' → logprob: -21.201414108276367
    10. '   ' → logprob: -21.826414108276367

Token 95: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.704065213445574e-05
    2. ')._' → logprob: -10.375046730041504
    3. '.' → logprob: -11.625046730041504
    4. ']._' → logprob: -13.250046730041504
    5. '_cal' → logprob: -13.375046730041504
    6. '   ' → logprob: -14.125046730041504
    7. '_' → logprob: -14.125046730041504
    8. ' .' → logprob: -14.250046730041504
    9. ' ' → logprob: -14.875046730041504
    10. '."_' → logprob: -15.125046730041504

Token 96: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0003392767102923244
    2. '_cal' → logprob: -8.00033950805664
    3. 'c' → logprob: -13.25033950805664
    4. 'ca' → logprob: -13.75033950805664
    5. 'callee' → logprob: -15.25033950805664
    6. ' calorie' → logprob: -15.87533950805664
    7. 'cale' → logprob: -16.25033950805664
    8. '-cal' → logprob: -16.25033950805664
    9. '	cal' → logprob: -16.37533950805664
    10. ' cal' → logprob: -17.00033950805664

Token 97: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -0.00033153212280012667
    2. 'ory' → logprob: -9.37533187866211
    3. 'or' → logprob: -9.62533187866211
    4. '_or' → logprob: -9.75033187866211
    5. '_' → logprob: -10.37533187866211
    6. 'o' → logprob: -10.62533187866211
    7. ' or' → logprob: -11.75033187866211
    8. 'oire' → logprob: -11.87533187866211
    9. '```' → logprob: -12.00033187866211
    10. '_cal' → logprob: -12.62533187866211

Token 98: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.500001907348633
    3. 'map' → logprob: -14.500001907348633
    4. '_MAP' → logprob: -16.250001907348633
    5. '_per' → logprob: -16.500001907348633
    6. 'ermap' → logprob: -16.500001907348633
    7. 'cal' → logprob: -16.750001907348633
    8. '_m' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '_cal' → logprob: -17.125001907348633

Token 99: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.392490029335022
    2. '.get' → logprob: -1.142490029335022
    3. '[' → logprob: -5.267489910125732
    4. '.' → logprob: -8.64249038696289
    5. '[g' → logprob: -8.64249038696289
    6. '[m' → logprob: -10.26749038696289
    7. '[get' → logprob: -10.39249038696289
    8. '[token' → logprob: -12.14249038696289
    9. 'get' → logprob: -12.39249038696289
    10. '[
' → logprob: -12.64249038696289

Token 100: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.00029947367147542536
    2. 'ut' → logprob: -8.125299453735352
    3. 'utrients' → logprob: -13.750299453735352
    4. 'nut' → logprob: -13.875299453735352
    5. 'e' → logprob: -14.875299453735352
    6. 'u' → logprob: -15.750299453735352
    7. '```' → logprob: -15.875299453735352
    8. 'utron' → logprob: -16.12529945373535
    9. 'ute' → logprob: -16.12529945373535
    10. 't' → logprob: -16.12529945373535

Token 101: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.6668878197669983
    2. 'ent' → logprob: -0.7918878197669983
    3. 't' → logprob: -3.4168877601623535
    4. 'et' → logprob: -8.666888236999512
    5. '
' → logprob: -8.916888236999512
    6. 'ien' → logprob: -9.041888236999512
    7. 'ant' → logprob: -9.666888236999512
    8. 'ie' → logprob: -9.916888236999512
    9. '```' → logprob: -10.166888236999512
    10. 'e' → logprob: -10.291888236999512

Token 102: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2471589798224159e-05
    2. ' ]' → logprob: -11.750012397766113
    3. ']
' → logprob: -12.375012397766113
    4. '']' → logprob: -16.00001335144043
    5. ')' → logprob: -16.87501335144043
    6. '`]' → logprob: -17.00001335144043
    7. ']

' → logprob: -17.12501335144043
    8. '}' → logprob: -17.25001335144043
    9. '   ' → logprob: -17.50001335144043
    10. ')]' → logprob: -17.62501335144043

Token 103: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6278422474861145
    2. 'class' → logprob: -0.8778422474861145
    3. '

' → logprob: -3.0028421878814697
    4. 'def' → logprob: -8.00284194946289
    5. '


' → logprob: -8.12784194946289
    6. ' class' → logprob: -8.87784194946289
    7. '
' → logprob: -10.62784194946289
    8. '  
' → logprob: -10.75284194946289
    9. '
    
' → logprob: -11.12784194946289
    10. '```' → logprob: -11.12784194946289

Token 104: ' Nutr' (ID: 122420)
  Prédit: ' Macron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Macron' → logprob: -0.15295559167861938
    2. ' Meal' → logprob: -2.7779555320739746
    3. ' Diet' → logprob: -3.1529555320739746
    4. ' Food' → logprob: -4.652955532073975
    5. ' ' → logprob: -4.902955532073975
    6. ' Nutrition' → logprob: -5.152955532073975
    7. ' Daily' → logprob: -5.777955532073975
    8. ' Recipe' → logprob: -6.027955532073975
    9. ' ' → logprob: -6.152955532073975
    10. ' Mac' → logprob: -6.277955532073975

Token 105: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.05042358860373497
    2. 'ition' → logprob: -3.4254236221313477
    3. 'itional' → logprob: -4.425423622131348
    4. 'ients' → logprob: -5.550423622131348
    5. 'rition' → logprob: -8.925423622131348
    6. 'it' → logprob: -9.050423622131348
    7. 'itioner' → logprob: -9.175423622131348
    8. 'ent' → logprob: -9.675423622131348
    9. ' ' → logprob: -9.800423622131348
    10. 'tion' → logprob: -9.925423622131348

Token 106: 'Profile' (ID: 9120)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.850568950176239
    2. 'Amount' → logprob: -1.3505690097808838
    3. ':
' → logprob: -1.9755690097808838
    4. 'Int' → logprob: -3.100569009780884
    5. 'Info' → logprob: -3.350569009780884
    6. 's' → logprob: -3.725569009780884
    7. 'Distribution' → logprob: -4.350568771362305
    8. 'Gram' → logprob: -4.725568771362305
    9. 'Requirement' → logprob: -4.975568771362305
    10. 'Break' → logprob: -5.100568771362305

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004806753247976303
    2. ':
' → logprob: -5.5048065185546875
    3. '(' → logprob: -7.3798065185546875
    4. '(List' → logprob: -9.754806518554688
    5. ' :' → logprob: -11.629806518554688
    6. '):' → logprob: -11.879806518554688
    7. '   ' → logprob: -12.129806518554688
    8. '(
' → logprob: -12.254806518554688
    9. ':

' → logprob: -12.379806518554688
    10. '<|end|>' → logprob: -12.879806518554688

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012239166535437107
    2. '    
' → logprob: -7.376224040985107
    3. 'def' → logprob: -8.00122356414795
    4. ' def' → logprob: -8.37622356414795
    5. '
' → logprob: -11.75122356414795
    6. '```' → logprob: -11.75122356414795
    7. ':' → logprob: -13.12622356414795
    8. '  ' → logprob: -13.12622356414795
    9. '    ' → logprob: -13.50122356414795
    10. ' 
' → logprob: -13.50122356414795

Token 109: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7511616349220276
    2. 'def' (adapté à ' def') → logprob: -0.7511616349220276
    3. '   ' → logprob: -2.876161575317383
    4. ' ' → logprob: -12.376161575317383
    5. '    ' → logprob: -12.501161575317383
    6. '    
' → logprob: -13.501161575317383
    7. '  ' → logprob: -14.001161575317383
    8. 'de' → logprob: -14.126161575317383
    9. ' __' → logprob: -14.251161575317383
    10. '	def' → logprob: -14.751161575317383

Token 110: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011470520868897438
    2. ' _' → logprob: -4.886470317840576
    3. '__' → logprob: -6.636470317840576
    4. '_' → logprob: -7.011470317840576
    5. ' init' → logprob: -7.636470317840576
    6. '_init' → logprob: -7.761470317840576
    7. ' ' → logprob: -7.886470317840576
    8. ' def' → logprob: -8.261470794677734
    9. ' ' → logprob: -10.761470794677734
    10. ' calculate' → logprob: -11.011470794677734

Token 111: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1160349458805285e-05
    2. 'ini' → logprob: -11.500011444091797
    3. 'in' → logprob: -14.250011444091797
    4. 'i' → logprob: -16.000011444091797
    5. 'inite' → logprob: -16.500011444091797
    6. 'innit' → logprob: -17.625011444091797
    7. 'inti' → logprob: -18.125011444091797
    8. 'initi' → logprob: -18.625011444091797
    9. 'int' → logprob: -18.750011444091797
    10. '	init' → logprob: -20.000011444091797

Token 112: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002268254989758134
    2. '__' → logprob: -6.252268314361572
    3. '__(
' → logprob: -8.002267837524414
    4. '(self' → logprob: -12.877267837524414
    5. '__('' → logprob: -14.252267837524414
    6. '__((' → logprob: -14.502267837524414
    7. '_(' → logprob: -14.627267837524414
    8. '(' → logprob: -15.002267837524414
    9. '___' → logprob: -15.877267837524414
    10. '__(*' → logprob: -16.252267837524414

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005881795077584684
    2. ' self' → logprob: -7.625588417053223
    3. '
' → logprob: -9.250588417053223
    4. ')' → logprob: -14.125588417053223
    5. ',' → logprob: -14.125588417053223
    6. '   ' → logprob: -14.375588417053223
    7. 'protein' → logprob: -14.625588417053223
    8. ' ' → logprob: -14.750588417053223
    9. '_self' → logprob: -14.750588417053223
    10. 's' → logprob: -16.375587463378906

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041518008220009506
    2. 'self' → logprob: -8.375414848327637
    3. ' ,' → logprob: -9.000414848327637
    4. ',
' → logprob: -10.125414848327637
    5. ')' → logprob: -12.125414848327637
    6. '<|end|>' → logprob: -12.375414848327637
    7. ',self' → logprob: -12.500414848327637
    8. ' self' → logprob: -12.625414848327637
    9. ' ' → logprob: -13.625414848327637
    10. '<|end|>' → logprob: -14.250414848327637

Token 115: ' protein' (ID: 16737)
  Prédit: 'protein'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protein' → logprob: -0.22827684879302979
    2. 'self' → logprob: -2.2282767295837402
    3. ' protein' → logprob: -2.4782767295837402
    4. ' self' → logprob: -4.85327672958374
    5. 'prote' → logprob: -5.85327672958374
    6. '   ' → logprob: -7.47827672958374
    7. ' proteins' → logprob: -8.228277206420898
    8. '       ' → logprob: -8.978277206420898
    9. 'mac' → logprob: -9.103277206420898
    10. ' grams' → logprob: -9.603277206420898

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020820973441004753
    2. '_' → logprob: -6.252081871032715
    3. ':int' → logprob: -9.877081871032715
    4. '_g' → logprob: -10.127081871032715
    5. 'g' → logprob: -10.877081871032715
    6. '=' → logprob: -11.502081871032715
    7. ' :' → logprob: -11.627081871032715
    8. '_:' → logprob: -11.627081871032715
    9. '_in' → logprob: -12.752081871032715
    10. '_amount' → logprob: -13.002081871032715

Token 117: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.18892738223075867
    2. 'float' → logprob: -1.813927412033081
    3. ' int' → logprob: -5.063927173614502
    4. 'int' → logprob: -5.938927173614502
    5. ' ' → logprob: -9.06392765045166
    6. '	float' → logprob: -10.06392765045166
    7. '=float' → logprob: -11.68892765045166
    8. 'flo' → logprob: -12.31392765045166
    9. '(float' → logprob: -12.93892765045166
    10. ':' → logprob: -13.06392765045166

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002727013546973467
    2. ' ,' → logprob: -6.502727031707764
    3. '=' → logprob: -6.752727031707764
    4. ':' → logprob: -10.627726554870605
    5. ' =' → logprob: -10.627726554870605
    6. ' grams' → logprob: -12.752726554870605
    7. ',
' → logprob: -13.502726554870605
    8. 'g' → logprob: -14.252726554870605
    9. '   ' → logprob: -14.502726554870605
    10. ' ' → logprob: -14.627726554870605

Token 119: ' fat' (ID: 9089)
  Prédit: ' fat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fat' → logprob: -0.009932922199368477
    2. 'fat' → logprob: -4.634932994842529
    3. ' ' → logprob: -9.634932518005371
    4. 'f' → logprob: -10.259932518005371
    5. ' carbohydrate' → logprob: -10.509932518005371
    6. ' f' → logprob: -11.009932518005371
    7. ' fats' → logprob: -11.384932518005371
    8. ' ' → logprob: -12.009932518005371
    9. '    ' → logprob: -12.509932518005371
    10. 'Fat' → logprob: -13.134932518005371

Token 120: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.943783253314905e-05
    2. ':int' → logprob: -9.750059127807617
    3. ' :' → logprob: -14.500059127807617
    4. '<|end|>' → logprob: -15.000059127807617
    5. ',' → logprob: -15.750059127807617
    6. '<|end|>' → logprob: -16.250059127807617
    7. 'int' → logprob: -16.875059127807617
    8. '```' → logprob: -17.875059127807617
    9. ')' → logprob: -18.000059127807617
    10. '):' → logprob: -18.375059127807617

Token 121: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31332844495773315
    2. 'int' → logprob: -1.313328504562378
    3. ':int' → logprob: -11.063328742980957
    4. ' ' → logprob: -11.188328742980957
    5. '[int' → logprob: -11.313328742980957
    6. '	int' → logprob: -11.438328742980957
    7. '=int' → logprob: -11.938328742980957
    8. '<|end|>' → logprob: -12.688328742980957
    9. '<int' → logprob: -13.563328742980957
    10. '(int' → logprob: -13.688328742980957

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.881560041918419e-05
    2. ' ,' → logprob: -10.375039100646973
    3. ',
' → logprob: -12.750039100646973
    4. '):' → logprob: -13.500039100646973
    5. ')' → logprob: -13.750039100646973
    6. '<|end|>' → logprob: -14.125039100646973
    7. ',int' → logprob: -14.875039100646973
    8. '   ' → logprob: -15.000039100646973
    9. '):
' → logprob: -15.625039100646973
    10. ':' → logprob: -15.750039100646973

Token 123: ' carbohydrate' (ID: 121585)
  Prédit: ' carbohydrate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carbohydrate' → logprob: -0.008511265739798546
    2. 'car' → logprob: -5.008511066436768
    3. ' carbohydrates' → logprob: -6.633511066436768
    4. ' ' → logprob: -8.383511543273926
    5. ' carbo' → logprob: -8.633511543273926
    6. ' carb' → logprob: -10.383511543273926
    7. ' car' → logprob: -11.383511543273926
    8. ' ' → logprob: -12.133511543273926
    9. ' carbs' → logprob: -12.258511543273926
    10. '	car' → logprob: -12.321011543273926

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.167648876318708e-05
    2. ':int' → logprob: -10.250041961669922
    3. ')' → logprob: -13.375041961669922
    4. '):' → logprob: -13.375041961669922
    5. 'int' → logprob: -14.000041961669922
    6. ' :' → logprob: -14.000041961669922
    7. 's' → logprob: -14.250041961669922
    8. '):
' → logprob: -14.875041961669922
    9. '<|end|>' → logprob: -15.750041961669922
    10. '<|end|>' → logprob: -15.750041961669922

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269940435886383
    2. ' int' → logprob: -2.1269941329956055
    3. ':int' → logprob: -10.251994132995605
    4. ')' → logprob: -11.251994132995605
    5. ':' → logprob: -11.626994132995605
    6. ' ' → logprob: -12.751994132995605
    7. '):
' → logprob: -13.501994132995605
    8. '	int' → logprob: -13.876994132995605
    9. '=int' → logprob: -14.126994132995605
    10. '   ' → logprob: -14.376994132995605

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10263744741678238
    2. ')' → logprob: -2.852637529373169
    3. '):
' → logprob: -3.227637529373169
    4. ',' → logprob: -8.85263729095459
    5. ':' → logprob: -10.35263729095459
    6. '   ' → logprob: -11.10263729095459
    7. '):
' → logprob: -12.22763729095459
    8. ' ):' → logprob: -12.85263729095459
    9. ')->' → logprob: -13.85263729095459
    10. '
' → logprob: -13.97763729095459

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008436953066848218
    2. '   ' → logprob: -7.875843524932861
    3. ')' → logprob: -8.62584400177002
    4. ':' → logprob: -9.37584400177002
    5. ',' → logprob: -10.00084400177002
    6. '):' → logprob: -10.37584400177002
    7. '        
' → logprob: -10.50084400177002
    8. '      ' → logprob: -11.00084400177002
    9. '):
' → logprob: -11.25084400177002
    10. ' ' → logprob: -11.37584400177002

Token 128: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02507057413458824
    2. ' self' → logprob: -4.275070667266846
    3. 'self' (adapté à ' self') → logprob: -4.525070667266846
    4. '   ' → logprob: -11.650070190429688
    5. '	self' → logprob: -13.025070190429688
    6. ' ' → logprob: -14.025070190429688
    7. ' ' → logprob: -14.150070190429688
    8. '      ' → logprob: -14.400070190429688
    9. '     ' → logprob: -15.275070190429688
    10. '    ' → logprob: -15.650070190429688

Token 129: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31552553176879883
    2. '.pro' → logprob: -1.3155255317687988
    3. 'protein' → logprob: -6.690525531768799
    4. '_pro' → logprob: -7.815525531768799
    5. '	pro' → logprob: -8.94052505493164
    6. ' ' → logprob: -9.06552505493164
    7. 'pro' → logprob: -9.44052505493164
    8. ' .' → logprob: -9.56552505493164
    9. ' protein' → logprob: -10.19052505493164
    10. ':' → logprob: -10.81552505493164

Token 130: 'amount' (ID: 10703)
  Prédit: 'protein'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protein' → logprob: -3.9650025428272784e-05
    2. 'amount' → logprob: -11.375040054321289
    3. 'values' → logprob: -11.625040054321289
    4. 'grams' → logprob: -11.625040054321289
    5. 'prote' → logprob: -12.875040054321289
    6. 'gram' → logprob: -13.625040054321289
    7. ' protein' → logprob: -13.750040054321289
    8. '_pro' → logprob: -14.375040054321289
    9. 'profile' → logprob: -14.500040054321289
    10. 'nut' → logprob: -14.875040054321289

Token 131: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010827097576111555
    2. '_pro' → logprob: -6.876082897186279
    3. '_' → logprob: -10.251082420349121
    4. '_s' → logprob: -11.751082420349121
    5. 'protein' → logprob: -13.626082420349121
    6. '_in' → logprob: -13.876082420349121
    7. ' =' → logprob: -14.001082420349121
    8. 'g' → logprob: -14.251082420349121
    9. '_g' → logprob: -14.251082420349121
    10. '=' → logprob: -14.501082420349121

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006489765364676714
    2. '=' → logprob: -5.1314897537231445
    3. ' ' → logprob: -7.8814897537231445
    4. '[' → logprob: -9.256489753723145
    5. ':' → logprob: -9.756489753723145
    6. '['' → logprob: -11.006489753723145
    7. '  ' → logprob: -13.381489753723145
    8. '_' → logprob: -13.506489753723145
    9. '["' → logprob: -13.506489753723145
    10. 's' → logprob: -13.631489753723145

Token 133: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.33005252480506897
    2. '{' → logprob: -1.3300524950027466
    3. ' {
' → logprob: -5.205052375793457
    4. '{'' → logprob: -5.205052375793457
    5. ' {' → logprob: -5.455052375793457
    6. '{"' → logprob: -7.205052375793457
    7. ' {'' → logprob: -7.830052375793457
    8. '   ' → logprob: -8.580052375793457
    9. '       ' → logprob: -9.830052375793457
    10. ' ' → logprob: -12.830052375793457

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07774362713098526
    2. 'Mac' → logprob: -3.0777435302734375
    3. ' Macron' → logprob: -3.5777435302734375
    4. ''' → logprob: -7.7027435302734375
    5. 'Mic' → logprob: -9.077743530273438
    6. '_mac' → logprob: -9.952743530273438
    7. '   ' → logprob: -10.077743530273438
    8. ' Mac' → logprob: -10.577743530273438
    9. 'Micro' → logprob: -10.952743530273438
    10. '       ' → logprob: -11.077743530273438

Token 135: ' Macron' (ID: 84149)
  Prédit: 'Mac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mac' → logprob: -0.638195276260376
    2. '               ' → logprob: -1.388195276260376
    3. ' Macron' → logprob: -1.513195276260376
    4. ''' → logprob: -7.388195037841797
    5. 'mac' → logprob: -8.263195037841797
    6. 'Macros' → logprob: -8.513195037841797
    7. '   ' → logprob: -8.638195037841797
    8. '           ' → logprob: -8.638195037841797
    9. 'Mic' → logprob: -8.763195037841797
    10. '_mac' → logprob: -8.763195037841797

Token 136: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -3.7146746763028204e-05
    2. 'ut' → logprob: -10.37503719329834
    3. 'utrients' → logprob: -12.12503719329834
    4. 'nut' → logprob: -14.75003719329834
    5. 'e' → logprob: -17.000036239624023
    6. 'r' → logprob: -17.875036239624023
    7. 't' → logprob: -18.500036239624023
    8. 'tr' → logprob: -18.875036239624023
    9. '
' → logprob: -19.000036239624023
    10. '

' → logprob: -19.250036239624023

Token 137: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.6145321726799011
    2. 'utr' → logprob: -1.114532232284546
    3. 'ent' → logprob: -2.114532232284546
    4. 'ut' → logprob: -5.364531993865967
    5. 't' → logprob: -5.614531993865967
    6. 'e' → logprob: -7.239531993865967
    7. 'it' → logprob: -7.614531993865967
    8. 'in' → logprob: -8.614532470703125
    9. 'et' → logprob: -9.364532470703125
    10. 'int' → logprob: -9.364532470703125

Token 138: '.PRO' (ID: 54097)
  Prédit: '.PRO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.PRO' → logprob: -6.051066520740278e-05
    2. 'PRO' → logprob: -10.000060081481934
    3. '.' → logprob: -11.375060081481934
    4. ' .' → logprob: -12.750060081481934
    5. '   ' → logprob: -15.625060081481934
    6. '.pro' → logprob: -16.00006103515625
    7. 'protein' → logprob: -16.12506103515625
    8. '_PRO' → logprob: -16.50006103515625
    9. '```' → logprob: -16.50006103515625
    10. '

' → logprob: -17.12506103515625

Token 139: 'TE' (ID: 5075)
  Prédit: 'TE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TE' → logprob: -4.961759259458631e-06
    2. 'PRO' → logprob: -13.625004768371582
    3. '```' → logprob: -14.125004768371582
    4. 'E' → logprob: -14.250004768371582
    5. 'T' → logprob: -14.750004768371582
    6. '
' → logprob: -15.125004768371582
    7. 'tein' → logprob: -15.125004768371582
    8. '

' → logprob: -15.375004768371582
    9. 'OTE' → logprob: -15.875004768371582
    10. '_TE' → logprob: -16.3750057220459

Token 140: 'IN' (ID: 965)
  Prédit: 'IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IN' → logprob: -7.896309739408025e-07
    2. 'I' → logprob: -15.625000953674316
    3. 'TE' → logprob: -16.0
    4. 'TIN' → logprob: -16.25
    5. 'in' → logprob: -16.375
    6. 'T' → logprob: -16.875
    7. '
' → logprob: -17.375
    8. '	IN' → logprob: -17.375
    9. '   ' → logprob: -17.625
    10. 'protein' → logprob: -17.625

Token 141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.107425062713446e-06
    2. ' :' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '```' → logprob: -17.62500762939453
    5. '       ' → logprob: -18.50000762939453
    6. ']:' → logprob: -18.87500762939453
    7. 'protein' → logprob: -19.00000762939453
    8. ']' → logprob: -19.50000762939453
    9. '    ' → logprob: -19.50000762939453
    10. '1' → logprob: -19.50000762939453

Token 142: ' protein' (ID: 16737)
  Prédit: 'protein'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'protein' → logprob: -0.4740847945213318
    2. ' protein' → logprob: -0.9740847945213318
    3. 'prote' → logprob: -12.599084854125977
    4. 'prot' → logprob: -13.599084854125977
    5. 'pro' → logprob: -13.849084854125977
    6. '	pro' → logprob: -13.974084854125977
    7. '           ' → logprob: -14.349084854125977
    8. 'python' → logprob: -15.974084854125977
    9. 'Protein' → logprob: -16.224084854125977
    10. ' ' → logprob: -16.724084854125977

Token 143: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04875382035970688
    2. ',
' → logprob: -3.0487537384033203
    3. '           ' → logprob: -9.04875373840332
    4. ' ,' → logprob: -10.67375373840332
    5. '       ' → logprob: -10.79875373840332
    6. ' ,
' → logprob: -13.04875373840332
    7. ',
' → logprob: -14.04875373840332
    8. '   ' → logprob: -14.17375373840332
    9. ',

' → logprob: -14.17375373840332
    10. ',\
' → logprob: -14.29875373840332

Token 144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05632732808589935
    2. ' Macron' → logprob: -3.0563273429870605
    3. 'Mac' → logprob: -4.9313273429870605
    4. '       ' → logprob: -8.806326866149902
    5. '            ' → logprob: -8.931326866149902
    6. ' Mac' → logprob: -9.681326866149902
    7. '               ' → logprob: -9.931326866149902
    8. '   ' → logprob: -10.056326866149902
    9. '          ' → logprob: -10.181326866149902
    10. '        ' → logprob: -11.806326866149902

Token 145: ' Macron' (ID: 84149)
  Prédit: ' Macron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Macron' → logprob: -0.5805968642234802
    2. 'Mac' → logprob: -0.8305968642234802
    3. ' Mac' → logprob: -5.830596923828125
    4. '           ' → logprob: -6.580596923828125
    5. '               ' → logprob: -8.455596923828125
    6. '       ' → logprob: -9.955596923828125
    7. '   ' → logprob: -10.330596923828125
    8. ' ' → logprob: -11.830596923828125
    9. 'Macros' → logprob: -12.205596923828125
    10. 'Mic' → logprob: -12.455596923828125

Token 146: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -8.375538163818419e-05
    2. 'utrients' → logprob: -9.500083923339844
    3. 'ut' → logprob: -11.750083923339844
    4. 'nut' → logprob: -14.250083923339844
    5. '
' → logprob: -16.375083923339844
    6. '

' → logprob: -17.000083923339844
    7. ' nutr' → logprob: -18.125083923339844
    8. 'e' → logprob: -18.250083923339844
    9. 'N' → logprob: -18.625083923339844
    10. ' utr' → logprob: -19.000083923339844

Token 147: 'ient' (ID: 773)
  Prédit: 'utr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.03420446440577507
    2. 'ient' → logprob: -3.6592044830322266
    3. 'ut' → logprob: -5.409204483032227
    4. 'ent' → logprob: -5.784204483032227
    5. 'e' → logprob: -8.784204483032227
    6. 't' → logprob: -9.534204483032227
    7. '
' → logprob: -10.034204483032227
    8. 'tr' → logprob: -11.659204483032227
    9. 'et' → logprob: -12.034204483032227
    10. 'utrients' → logprob: -12.409204483032227

Token 148: '.F' (ID: 1737)
  Prédit: '.F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -0.0033284954261034727
    2. '.' → logprob: -5.753328323364258
    3. ' .' → logprob: -9.128328323364258
    4. '   ' → logprob: -10.878328323364258
    5. ' ' → logprob: -11.503328323364258
    6. '.FE' → logprob: -13.003328323364258
    7. '.PRO' → logprob: -13.378328323364258
    8. 'F' → logprob: -13.628328323364258
    9. '.f' → logprob: -13.753328323364258
    10. '
' → logprob: -14.128328323364258

Token 149: 'AT' (ID: 1228)
  Prédit: 'AT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AT' → logprob: -0.0009342094417661428
    2. 'A' → logprob: -7.00093412399292
    3. '
' → logprob: -12.250934600830078
    4. 'at' → logprob: -12.250934600830078
    5. 'ATP' → logprob: -13.250934600830078
    6. 'ATT' → logprob: -13.375934600830078
    7. '"AT' → logprob: -13.625934600830078
    8. 'At' → logprob: -13.750934600830078
    9. '_AT' → logprob: -13.750934600830078
    10. 'АТ' → logprob: -13.875934600830078

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003606104583013803
    2. ' :' → logprob: -8.000360488891602
    3. ':f' → logprob: -10.750360488891602
    4. '           ' → logprob: -14.625360488891602
    5. ')' → logprob: -14.875360488891602
    6. '<|end|>' → logprob: -14.875360488891602
    7. ']' → logprob: -15.125360488891602
    8. ':return' → logprob: -15.375360488891602
    9. ':
' → logprob: -15.500360488891602
    10. '       ' → logprob: -15.750360488891602

Token 151: ' fat' (ID: 9089)
  Prédit: ' fat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fat' → logprob: -0.16024738550186157
    2. 'fat' → logprob: -1.9102473258972168
    3. 'f' → logprob: -10.910247802734375
    4. ' ' → logprob: -13.785247802734375
    5. ' ' → logprob: -14.410247802734375
    6. ' f' → logprob: -14.410247802734375
    7. 'Fat' → logprob: -14.660247802734375
    8. '    ' → logprob: -15.035247802734375
    9. 'fatt' → logprob: -15.285247802734375
    10. ' fa' → logprob: -15.410247802734375

Token 152: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02063216269016266
    2. ',
' → logprob: -3.895632266998291
    3. '           ' → logprob: -9.645631790161133
    4. '       ' → logprob: -11.020631790161133
    5. ' ,' → logprob: -12.395631790161133
    6. ',

' → logprob: -13.395631790161133
    7. '   ' → logprob: -13.645631790161133
    8. ',
' → logprob: -14.020631790161133
    9. ' ,
' → logprob: -14.145631790161133
    10. '<|end|>' → logprob: -14.895631790161133

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004728091415017843
    2. 'Mac' → logprob: -6.004728317260742
    3. ' Macron' → logprob: -6.129728317260742
    4. '       ' → logprob: -10.254728317260742
    5. '          ' → logprob: -11.379728317260742
    6. '   ' → logprob: -11.629728317260742
    7. '               ' → logprob: -11.629728317260742
    8. ' Mac' → logprob: -12.379728317260742
    9. '            ' → logprob: -13.754728317260742
    10. 'Mic' → logprob: -14.129728317260742

Token 154: ' Macron' (ID: 84149)
  Prédit: ' Macron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Macron' → logprob: -0.06354471296072006
    2. 'Mac' → logprob: -2.813544750213623
    3. ' Mac' → logprob: -6.563544750213623
    4. '               ' → logprob: -9.438544273376465
    5. '           ' → logprob: -9.563544273376465
    6. 'Mic' → logprob: -12.438544273376465
    7. 'Car' → logprob: -13.188544273376465
    8. '_mac' → logprob: -13.438544273376465
    9. '   ' → logprob: -13.688544273376465
    10. '            ' → logprob: -13.688544273376465

Token 155: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.0008457217481918633
    2. 'ut' → logprob: -7.125845909118652
    3. 'utrients' → logprob: -10.125845909118652
    4. 'nut' → logprob: -14.125845909118652
    5. 'UT' → logprob: -16.250844955444336
    6. '
' → logprob: -16.625844955444336
    7. 'inut' → logprob: -16.875844955444336
    8. '=' → logprob: -17.000844955444336
    9. '

' → logprob: -17.000844955444336
    10. 'U' → logprob: -17.375844955444336

Token 156: 'ient' (ID: 773)
  Prédit: 'utr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.4636049270629883
    2. 'ent' → logprob: -1.8386049270629883
    3. 'ient' → logprob: -1.8386049270629883
    4. 'ENT' → logprob: -3.7136049270629883
    5. 'ut' → logprob: -3.7136049270629883
    6. 'UT' → logprob: -6.713604927062988
    7. 'O' → logprob: -6.838604927062988
    8. 'IENT' → logprob: -7.463604927062988
    9. 'e' → logprob: -8.713604927062988
    10. 'N' → logprob: -8.963604927062988

Token 157: '.C' (ID: 2010)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003566767554730177
    2. '.C' → logprob: -8.625356674194336
    3. '.M' → logprob: -9.750356674194336
    4. '.Car' → logprob: -9.750356674194336
    5. '.CO' → logprob: -11.500356674194336
    6. ' :' → logprob: -11.500356674194336
    7. 'CAR' → logprob: -12.250356674194336
    8. '.PRO' → logprob: -12.375356674194336
    9. '.' → logprob: -12.625356674194336
    10. '           ' → logprob: -12.750356674194336

Token 158: 'AR' (ID: 1312)
  Prédit: 'AR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AR' → logprob: -0.006730526220053434
    2. 'ARB' → logprob: -5.006730556488037
    3. 'A' → logprob: -11.881730079650879
    4. ' AR' → logprob: -12.756730079650879
    5. 'ARO' → logprob: -13.631730079650879
    6. 'CAR' → logprob: -13.756730079650879
    7. '
' → logprob: -14.256730079650879
    8. 'ar' → logprob: -14.381730079650879
    9. 'АР' → logprob: -14.631730079650879
    10. '_AR' → logprob: -15.381730079650879

Token 159: 'BO' (ID: 8025)
  Prédit: 'BO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BO' → logprob: -4.5252596464706585e-05
    2. 'B' → logprob: -10.125044822692871
    3. 'OH' → logprob: -13.625044822692871
    4. 'O' → logprob: -14.000044822692871
    5. 'BODY' → logprob: -14.125044822692871
    6. 'OB' → logprob: -14.250044822692871
    7. '
' → logprob: -14.500044822692871
    8. 'BON' → logprob: -14.625044822692871
    9. 'BOSE' → logprob: -15.375044822692871
    10. ' BO' → logprob: -16.250045776367188

Token 160: 'HY' (ID: 91048)
  Prédit: 'HY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HY' → logprob: -0.05574832484126091
    2. 'Y' → logprob: -3.305748224258423
    3. 'DR' → logprob: -4.055748462677002
    4. '
' → logprob: -8.805747985839844
    5. 'YD' → logprob: -11.305747985839844
    6. '

' → logprob: -11.430747985839844
    7. 'XY' → logprob: -11.430747985839844
    8. 'hydrate' → logprob: -11.430747985839844
    9. 'H' → logprob: -11.555747985839844
    10. '\' → logprob: -12.930747985839844

Token 161: 'DR' (ID: 10361)
  Prédit: 'DR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DR' → logprob: -2.4987974029500037e-05
    2. 'Y' → logprob: -11.625024795532227
    3. 'HY' → logprob: -11.750024795532227
    4. '_DR' → logprob: -12.125024795532227
    5. 'D' → logprob: -14.250024795532227
    6. '
' → logprob: -14.250024795532227
    7. ' DR' → logprob: -15.000024795532227
    8. 'ATE' → logprob: -15.625024795532227
    9. 'DATE' → logprob: -15.875024795532227
    10. '

' → logprob: -16.000024795532227

Token 162: 'ATE' (ID: 4197)
  Prédit: 'ATE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ATE' → logprob: -0.006546978373080492
    2. 'DR' → logprob: -5.256546974182129
    3. 'YTE' → logprob: -7.631546974182129
    4. 'Y' → logprob: -8.006546974182129
    5. 'HY' → logprob: -8.256546974182129
    6. 'ID' → logprob: -9.756546974182129
    7. 'RATE' → logprob: -10.131546974182129
    8. 'O' → logprob: -10.381546974182129
    9. 'IDE' → logprob: -10.506546974182129
    10. 'DATE' → logprob: -10.881546974182129

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003273600013926625
    2. ']:' → logprob: -8.750327110290527
    3. ' :' → logprob: -9.500327110290527
    4. ']' → logprob: -9.500327110290527
    5. '}:' → logprob: -11.875327110290527
    6. '       ' → logprob: -12.125327110290527
    7. '):' → logprob: -13.000327110290527
    8. '   ' → logprob: -13.125327110290527
    9. '           ' → logprob: -13.875327110290527
    10. ':]' → logprob: -14.375327110290527

Token 164: ' carbohydrate' (ID: 121585)
  Prédit: ' carbohydrate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carbohydrate' → logprob: -0.31335580348968506
    2. 'car' → logprob: -1.313355803489685
    3. '           ' → logprob: -10.438355445861816
    4. ' carbohydrates' → logprob: -11.563355445861816
    5. ' carbo' → logprob: -11.813355445861816
    6. '       ' → logprob: -12.063355445861816
    7. ' ' → logprob: -12.438355445861816
    8. ' ' → logprob: -12.563355445861816
    9. '        ' → logprob: -12.563355445861816
    10. 'carbonate' → logprob: -12.688355445861816

Token 165: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3911486864089966
    2. '}' → logprob: -1.1411486864089966
    3. '   ' → logprob: -5.516148567199707
    4. ' }' → logprob: -8.641148567199707
    5. '}
' → logprob: -10.141148567199707
    6. ')' → logprob: -10.641148567199707
    7. '
' → logprob: -13.141148567199707
    8. '<|end|>' → logprob: -13.516148567199707
    9. ',' → logprob: -13.766148567199707
    10. '	' → logprob: -14.016148567199707

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05706498771905899
    2. '}' → logprob: -2.932065010070801
    3. '   ' → logprob: -6.432065010070801
    4. ' }' → logprob: -7.557065010070801
    5. '}
' → logprob: -10.5570650100708
    6. '<|end|>' → logprob: -11.6820650100708
    7. '      ' → logprob: -12.4320650100708
    8. '<|end|>' → logprob: -13.0570650100708
    9. ' ' → logprob: -13.6820650100708
    10. '	' → logprob: -13.8070650100708

Token 167: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0628780797123909
    2. '       ' → logprob: -3.187878131866455
    3. '   ' → logprob: -3.937878131866455
    4. ' }' → logprob: -8.937877655029297
    5. '}
' → logprob: -9.812877655029297
    6. '}

' (adapté à ' }

') → logprob: -12.562877655029297
    7. '    ' → logprob: -14.687877655029297
    8. '	' → logprob: -14.687877655029297
    9. '      ' → logprob: -14.687877655029297
    10. 'def' → logprob: -15.062877655029297

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09652353078126907
    2. '    
' → logprob: -3.4715235233306885
    3. '
' → logprob: -3.7215235233306885
    4. 'def' → logprob: -4.096523761749268
    5. ' 
' → logprob: -4.721523761749268
    6. ' def' → logprob: -5.471523761749268
    7. ' ' → logprob: -6.221523761749268
    8. '<|end|>' → logprob: -6.221523761749268
    9. '  
' → logprob: -6.721523761749268
    10. '        
' → logprob: -6.971523761749268

Token 169: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001206423039548099
    2. '@property' → logprob: -6.751206398010254
    3. ' def' → logprob: -10.251206398010254
    4. '   ' → logprob: -14.001206398010254
    5. '@' → logprob: -17.12620735168457
    6. 'de' → logprob: -19.50120735168457
    7. ' ' → logprob: -20.12620735168457
    8. 'property' → logprob: -20.50120735168457
    9. '	def' → logprob: -20.62620735168457
    10. ' @' → logprob: -21.00120735168457

Token 170: ' amount' (ID: 4527)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7954491376876831
    2. ' get' → logprob: -0.9204491376876831
    3. '_total' → logprob: -2.9204492568969727
    4. 'total' → logprob: -3.5454492568969727
    5. ' def' → logprob: -3.6704492568969727
    6. '_cal' → logprob: -4.545449256896973
    7. 'get' → logprob: -5.045449256896973
    8. ' grams' → logprob: -5.295449256896973
    9. ' calories' → logprob: -5.420449256896973
    10. ' amount' → logprob: -5.795449256896973

Token 171: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007873606868088245
    2. '(' → logprob: -5.25787353515625
    3. 's' → logprob: -6.00787353515625
    4. 'self' → logprob: -9.63287353515625
    5. '_of' → logprob: -10.38287353515625
    6. '   ' → logprob: -11.00787353515625
    7. ' (' → logprob: -11.25787353515625
    8. '(
' → logprob: -11.38287353515625
    9. '(s' → logprob: -11.88287353515625
    10. '_per' → logprob: -12.25787353515625

Token 172: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4790501594543457
    2. '(self' → logprob: -1.6040501594543457
    3. ')' → logprob: -2.2290501594543457
    4. ',' → logprob: -2.9790501594543457
    5. 's' → logprob: -4.354050159454346
    6. ')(' → logprob: -5.979050159454346
    7. '   ' → logprob: -6.479050159454346
    8. ' self' → logprob: -6.604050159454346
    9. '       ' → logprob: -7.104050159454346
    10. '(' → logprob: -7.604050159454346

Token 173: ' nutrient' (ID: 72324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6944437026977539
    2. ' self' → logprob: -1.444443702697754
    3. 'nut' → logprob: -1.694443702697754
    4. ' nutrient' → logprob: -2.569443702697754
    5. 'mac' → logprob: -6.444443702697754
    6. ' mac' → logprob: -6.819443702697754
    7. '   ' → logprob: -7.569443702697754
    8. ' ' → logprob: -7.569443702697754
    9. ')' → logprob: -7.944443702697754
    10. 'macro' → logprob: -9.444443702697754

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014564678072929382
    2. '):' → logprob: -4.514564514160156
    3. ' :' → logprob: -6.014564514160156
    4. ')' → logprob: -7.389564514160156
    5. ':str' → logprob: -7.889564514160156
    6. ' ):' → logprob: -9.764564514160156
    7. '):
' → logprob: -12.264564514160156
    8. ' )' → logprob: -12.389564514160156
    9. ' ' → logprob: -12.389564514160156
    10. '   ' → logprob: -13.139564514160156

Token 175: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.048626311123371124
    2. 'str' → logprob: -3.04862642288208
    3. ')' → logprob: -10.548625946044922
    4. ' ' → logprob: -12.048625946044922
    5. '   ' → logprob: -12.798625946044922
    6. 's' → logprob: -13.673625946044922
    7. ' s' → logprob: -14.048625946044922
    8. '    ' → logprob: -14.798625946044922
    9. ' )' → logprob: -14.798625946044922
    10. '  ' → logprob: -14.923625946044922

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.815280696377158e-05
    2. '):' → logprob: -9.875078201293945
    3. ' )' → logprob: -10.625078201293945
    4. ')->' → logprob: -13.750078201293945
    5. '):
' → logprob: -14.625078201293945
    6. '   ' → logprob: -14.750078201293945
    7. '`)' → logprob: -16.250078201293945
    8. '')' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.500078201293945
    10. ':' → logprob: -17.125078201293945

Token 177: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2193683236837387
    2. '->' → logprob: -1.7193683385849
    3. ' ->' → logprob: -4.0943684577941895
    4. '       ' → logprob: -7.7193684577941895
    5. ')->' → logprob: -7.7193684577941895
    6. '   ' → logprob: -8.594367980957031
    7. ':' → logprob: -10.344367980957031
    8. '(self' → logprob: -11.969367980957031
    9. ' )' → logprob: -12.469367980957031
    10. 'self' → logprob: -12.469367980957031

Token 178: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931474208831787
    2. ' int' → logprob: -0.6931474208831787
    3. '	int' → logprob: -16.318147659301758
    4. ':int' → logprob: -16.443147659301758
    5. '   ' → logprob: -16.568147659301758
    6. '[int' → logprob: -17.568147659301758
    7. ' ' → logprob: -18.068147659301758
    8. ' ' → logprob: -18.443147659301758
    9. ' return' → logprob: -18.693147659301758
    10. 'return' → logprob: -19.068147659301758

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028016867116093636
    2. ':
' → logprob: -3.6530168056488037
    3. '       ' → logprob: -6.778017044067383
    4. '):
' → logprob: -8.153017044067383
    5. '):' → logprob: -8.528017044067383
    6. ':return' → logprob: -10.278017044067383
    7. ':
' → logprob: -10.778017044067383
    8. ')' → logprob: -11.153017044067383
    9. '   ' → logprob: -11.403017044067383
    10. ' :' → logprob: -12.778017044067383

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013499356806278229
    2. ' return' → logprob: -4.5134992599487305
    3. 'return' → logprob: -6.0134992599487305
    4. '	return' → logprob: -13.88849925994873
    5. '   ' → logprob: -14.26349925994873
    6. '
' → logprob: -14.26349925994873
    7. '	' → logprob: -15.76349925994873
    8. '      ' → logprob: -16.513500213623047
    9. ' 
' → logprob: -16.513500213623047
    10. '           ' → logprob: -16.763500213623047

Token 181: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.047373294830322266
    2. ' return' → logprob: -3.5473732948303223
    3. '       ' → logprob: -4.047373294830322
    4. '   ' → logprob: -15.672372817993164
    5. '	return' → logprob: -16.547372817993164
    6. ' ' → logprob: -17.797372817993164
    7. '      ' → logprob: -19.797372817993164
    8. '     ' → logprob: -19.797372817993164
    9. ' ' → logprob: -20.422372817993164
    10. '```' → logprob: -20.797372817993164

Token 182: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12692862749099731
    2. 'self' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.001928329467773
    4. '	self' → logprob: -15.876928329467773
    5. '       ' → logprob: -16.751928329467773
    6. '(self' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.126928329467773
    8. '   ' → logprob: -20.001928329467773
    9. '
' → logprob: -20.251928329467773
    10. '_self' → logprob: -20.751928329467773

Token 183: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -12.87500286102295
    3. ')._' → logprob: -15.12500286102295
    4. ' .' → logprob: -15.75000286102295
    5. 'self' → logprob: -17.000003814697266
    6. ']._' → logprob: -17.375003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '.amount' → logprob: -19.125003814697266
    9. '.__' → logprob: -19.375003814697266
    10. '._
' → logprob: -20.250003814697266

Token 184: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.00012356207298580557
    2. '_amount' → logprob: -9.000123977661133
    3. 'am' → logprob: -16.500123977661133
    4. ' amounts' → logprob: -18.250123977661133
    5. ' amount' → logprob: -18.375123977661133
    6. 'a' → logprob: -19.875123977661133
    7. '.amount' → logprob: -19.875123977661133
    8. '   ' → logprob: -20.250123977661133
    9. '_' → logprob: -20.375123977661133
    10. '```' → logprob: -21.000123977661133

Token 185: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. '[s' → logprob: -15.250000953674316
    3. 'ount' → logprob: -15.375000953674316
    4. ' s' → logprob: -15.375000953674316
    5. 'ts' → logprob: -15.750000953674316
    6. '_amount' → logprob: -16.125001907348633
    7. '_s' → logprob: -16.875001907348633
    8. '[' → logprob: -16.875001907348633
    9. 'unts' → logprob: -17.250001907348633
    10. '

' → logprob: -17.625001907348633

Token 186: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.004100958351045847
    2. '.get' → logprob: -5.504100799560547
    3. '[' → logprob: -10.879100799560547
    4. '[m' → logprob: -13.379100799560547
    5. '.' → logprob: -14.379100799560547
    6. ' [' → logprob: -14.879100799560547
    7. '   ' → logprob: -15.754100799560547
    8. '[get' → logprob: -15.754100799560547
    9. '[token' → logprob: -15.754100799560547
    10. ' .' → logprob: -16.254100799560547

Token 187: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -2.546478935983032e-05
    2. 'ut' → logprob: -10.625025749206543
    3. 'nut' → logprob: -14.125025749206543
    4. 'utrients' → logprob: -15.625025749206543
    5. 't' → logprob: -17.000024795532227
    6. 'it' → logprob: -17.625024795532227
    7. 'e' → logprob: -17.625024795532227
    8. 'utra' → logprob: -17.875024795532227
    9. 'ute' → logprob: -18.000024795532227
    10. '   ' → logprob: -18.375024795532227

Token 188: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.10306926816701889
    2. 'ent' → logprob: -2.478069305419922
    3. 't' → logprob: -4.353069305419922
    4. 'ant' → logprob: -7.228069305419922
    5. 'et' → logprob: -8.228069305419922
    6. 'ut' → logprob: -9.603069305419922
    7. 'it' → logprob: -10.603069305419922
    8. 'itent' → logprob: -11.353069305419922
    9. 'utr' → logprob: -11.353069305419922
    10. 'gent' → logprob: -11.603069305419922

Token 189: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000241085872403346
    2. ')' → logprob: -8.50024127960205
    3. ' ]' → logprob: -10.75024127960205
    4. ']
' → logprob: -11.87524127960205
    5. '}' → logprob: -12.00024127960205
    6. '<|end|>' → logprob: -13.50024127960205
    7. '   ' → logprob: -14.12524127960205
    8. '']' → logprob: -15.25024127960205
    9. ')]' → logprob: -15.50024127960205
    10. '       ' → logprob: -15.62524127960205

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009489375166594982
    2. 'def' → logprob: -5.6344895362854
    3. '
' → logprob: -5.8844895362854
    4. '    
' → logprob: -6.6344895362854
    5. ' ' → logprob: -7.3844895362854
    6. ' def' → logprob: -8.009489059448242
    7. '<|end|>' → logprob: -8.009489059448242
    8. ' 
' → logprob: -8.259489059448242
    9. '  ' → logprob: -9.884489059448242
    10. '@property' → logprob: -10.009489059448242

Token 191: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002524649491533637
    2. '   ' → logprob: -6.8775248527526855
    3. ' def' → logprob: -7.1275248527526855
    4. '
' → logprob: -7.8775248527526855
    5. '@property' → logprob: -8.377524375915527
    6. '    
' → logprob: -10.127524375915527
    7. ' ' → logprob: -11.377524375915527
    8. '

' → logprob: -11.377524375915527
    9. ' 
' → logprob: -12.252524375915527
    10. '@' → logprob: -12.752524375915527

Token 192: ' calories' (ID: 30509)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6137545108795166
    2. ' total' → logprob: -0.8637545108795166
    3. 'total' → logprob: -4.3637542724609375
    4. ' calories' → logprob: -4.3637542724609375
    5. 'def' → logprob: -4.9887542724609375
    6. ' calorie' → logprob: -6.8637542724609375
    7. '_total' → logprob: -6.9887542724609375
    8. 'cal' → logprob: -7.2387542724609375
    9. ' ' → logprob: -7.2387542724609375
    10. ' grams' → logprob: -7.6137542724609375

Token 193: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001825642102630809
    2. '(' → logprob: -8.875182151794434
    3. '_per' → logprob: -11.250182151794434
    4. 'self' → logprob: -11.750182151794434
    5. '_total' → logprob: -11.875182151794434
    6. ' (' → logprob: -12.000182151794434
    7. 's' → logprob: -13.250182151794434
    8. '   ' → logprob: -13.375182151794434
    9. '(s' → logprob: -13.625182151794434
    10. '_' → logprob: -13.625182151794434

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006552543956786394
    2. '):' → logprob: -5.506552696228027
    3. 'self' → logprob: -6.756552696228027
    4. ')->' → logprob: -7.506552696228027
    5. '):
' → logprob: -7.506552696228027
    6. '(self' → logprob: -9.256552696228027
    7. ' )' → logprob: -10.131552696228027
    8. '   ' → logprob: -10.631552696228027
    9. '()' → logprob: -11.131552696228027
    10. '       ' → logprob: -11.631552696228027

Token 195: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030342184007167816
    2. '->' → logprob: -4.530342102050781
    3. ' ->' → logprob: -5.280342102050781
    4. ':' → logprob: -5.530342102050781
    5. '   ' → logprob: -5.905342102050781
    6. '(' → logprob: -6.030342102050781
    7. 'self' → logprob: -6.155342102050781
    8. '       ' → logprob: -6.530342102050781
    9. ')' → logprob: -7.155342102050781
    10. ' self' → logprob: -8.530342102050781

Token 196: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25389066338539124
    2. 'int' → logprob: -1.5038906335830688
    3. ' sum' → logprob: -6.378890514373779
    4. 'sum' → logprob: -8.878890991210938
    5. '   ' → logprob: -9.503890991210938
    6. ' return' → logprob: -10.753890991210938
    7. ' ' → logprob: -11.378890991210938
    8. '       ' → logprob: -12.378890991210938
    9. '    ' → logprob: -12.503890991210938
    10. 'return' → logprob: -12.503890991210938

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010370950913056731
    2. '():' → logprob: -7.376037120819092
    3. ':
' → logprob: -8.376036643981934
    4. '):' → logprob: -9.251036643981934
    5. '(self' → logprob: -10.251036643981934
    6. '(' → logprob: -11.251036643981934
    7. '       ' → logprob: -11.376036643981934
    8. '   ' → logprob: -12.001036643981934
    9. ' :' → logprob: -12.126036643981934
    10. '=' → logprob: -13.251036643981934

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01802046410739422
    2. 'return' → logprob: -4.2680206298828125
    3. 'total' → logprob: -6.0180206298828125
    4. ' return' → logprob: -6.8930206298828125
    5. ' total' → logprob: -8.268020629882812
    6. 'sum' → logprob: -9.018020629882812
    7. 'result' → logprob: -11.268020629882812
    8. ' sum' → logprob: -12.018020629882812
    9. 'cal' → logprob: -13.393020629882812
    10. ' result' → logprob: -14.643020629882812

Token 199: ' return' (ID: 622)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5580021739006042
    2. 'return' (adapté à ' return') → logprob: -1.558002233505249
    3. 'total' → logprob: -1.558002233505249
    4. '       ' → logprob: -5.30800199508667
    5. 'cal' → logprob: -7.30800199508667
    6. ' sum' → logprob: -7.68300199508667
    7. 'result' → logprob: -8.558002471923828
    8. ' return' → logprob: -8.808002471923828
    9. ' total' → logprob: -9.183002471923828
    10. 'c' → logprob: -12.933002471923828

Token 200: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5760780572891235
    2. 'sum' → logprob: -0.8260780572891235
    3. 'self' → logprob: -9.701078414916992
    4. ' self' → logprob: -9.951078414916992
    5. '   ' → logprob: -10.576078414916992
    6. '(sum' → logprob: -12.826078414916992
    7. '       ' → logprob: -14.826078414916992
    8. '	sum' → logprob: -14.951078414916992
    9. '(
' → logprob: -15.201078414916992
    10. ' ' → logprob: -15.576078414916992

Token 201: '(
' (ID: 1607)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32096394896507263
    2. '(
' → logprob: -1.570963978767395
    3. '(' → logprob: -2.9459638595581055
    4. '(M' → logprob: -4.3209638595581055
    5. 'self' → logprob: -7.3209638595581055
    6. '(

' → logprob: -8.945963859558105
    7. '((' → logprob: -10.570963859558105
    8. '([' → logprob: -11.320963859558105
    9. '(
' → logprob: -11.570963859558105
    10. '(cls' → logprob: -11.820963859558105

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42899906635284424
    2. 'Mac' → logprob: -1.1789990663528442
    3. 'self' → logprob: -3.3039989471435547
    4. ' Macron' → logprob: -6.303998947143555
    5. '   ' → logprob: -6.803998947143555
    6. ' Mac' → logprob: -7.803998947143555
    7. 'Mic' → logprob: -8.303998947143555
    8. '               ' → logprob: -8.303998947143555
    9. ' self' → logprob: -9.053998947143555
    10. 'cls' → logprob: -9.053998947143555

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4002205729484558
    2. 'Mac' → logprob: -1.2752206325531006
    3. '           ' → logprob: -3.2752206325531006
    4. '               ' → logprob: -5.0252203941345215
    5. ' Macron' → logprob: -5.9002203941345215
    6. ' self' → logprob: -7.0252203941345215
    7. '   ' → logprob: -7.0252203941345215
    8. 'amount' → logprob: -7.7752203941345215
    9. 'mac' → logprob: -8.40022087097168
    10. ' Mac' → logprob: -8.40022087097168

Token 204: '._' (ID: 2697)
  Prédit: '.amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.amount' → logprob: -0.5237058997154236
    2. '._' → logprob: -0.8987058997154236
    3. '.' → logprob: -8.52370548248291
    4. '   ' → logprob: -9.14870548248291
    5. '_amount' → logprob: -9.39870548248291
    6. 'amount' → logprob: -9.39870548248291
    7. '.am' → logprob: -10.39870548248291
    8. ' .' → logprob: -10.77370548248291
    9. '.cal' → logprob: -11.02370548248291
    10. '_.' → logprob: -11.52370548248291

Token 205: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.00565217062830925
    2. 'cal' → logprob: -5.255651950836182
    3. '_amount' → logprob: -8.38065242767334
    4. '_cal' → logprob: -8.63065242767334
    5. 'am' → logprob: -12.63065242767334
    6. '_' → logprob: -13.25565242767334
    7. ' amount' → logprob: -13.50565242767334
    8. '.amount' → logprob: -14.25565242767334
    9. '(amount' → logprob: -14.88065242767334
    10. 'Cal' → logprob: -15.13065242767334

Token 206: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9361264946837764e-07
    2. '[s' → logprob: -16.5
    3. '[' → logprob: -17.75
    4. 'ments' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. 'amount' → logprob: -19.125
    7. 'nts' → logprob: -19.125
    8. '   ' → logprob: -19.5
    9. ')' → logprob: -19.5
    10. '           ' → logprob: -19.625

Token 207: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0003538158780429512
    2. '[m' → logprob: -8.000353813171387
    3. '[k' → logprob: -12.000353813171387
    4. '[' → logprob: -12.375353813171387
    5. '[
' → logprob: -12.375353813171387
    6. '[key' → logprob: -13.125353813171387
    7. '```' → logprob: -14.625353813171387
    8. '[_' → logprob: -15.500353813171387
    9. '[name' → logprob: -15.750353813171387
    10. '[i' → logprob: -15.875353813171387

Token 208: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.013148345984518528
    2. 'ut' → logprob: -4.513148307800293
    3. 'nut' → logprob: -7.138148307800293
    4. 'key' → logprob: -8.388148307800293
    5. 'it' → logprob: -8.638148307800293
    6. '```' → logprob: -8.638148307800293
    7. '   ' → logprob: -9.388148307800293
    8. 't' → logprob: -9.763148307800293
    9. ')' → logprob: -9.888148307800293
    10. '}' → logprob: -9.950648307800293

Token 209: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.03623339906334877
    2. 'ent' → logprob: -3.911233425140381
    3. 't' → logprob: -4.286233425140381
    4. 'et' → logprob: -6.911233425140381
    5. 'e' → logprob: -8.536232948303223
    6. 'ant' → logprob: -9.161232948303223
    7. 'eat' → logprob: -9.161232948303223
    8. 'it' → logprob: -9.786232948303223
    9. 'ot' → logprob: -9.911232948303223
    10. 'ate' → logprob: -10.036232948303223

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3676733690081164e-05
    2. ']*' → logprob: -11.00002384185791
    3. ' *' → logprob: -12.87502384185791
    4. '*' → logprob: -13.00002384185791
    5. ' ]' → logprob: -14.00002384185791
    6. '           ' → logprob: -14.25002384185791
    7. ')' → logprob: -15.50002384185791
    8. '   ' → logprob: -16.125022888183594
    9. ']
' → logprob: -16.250022888183594
    10. '       ' → logprob: -16.750022888183594

Token 211: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016053372994065285
    2. '*' → logprob: -4.141053199768066
    3. '           ' → logprob: -11.266053199768066
    4. '   ' → logprob: -13.141053199768066
    5. ' ' → logprob: -13.391053199768066
    6. '               ' → logprob: -13.641053199768066
    7. '            ' → logprob: -14.766053199768066
    8. '                   ' → logprob: -15.516053199768066
    9. '       ' → logprob: -15.516053199768066
    10. '*
' → logprob: -15.641053199768066

Token 212: ' Macron' (ID: 84149)
  Prédit: 'Mac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mac' → logprob: -0.008757567033171654
    2. ' Macron' → logprob: -4.758757591247559
    3. '           ' → logprob: -9.258757591247559
    4. ' Mac' → logprob: -10.133757591247559
    5. 'Macros' → logprob: -13.133757591247559
    6. '   ' → logprob: -13.508757591247559
    7. '_mac' → logprob: -13.508757591247559
    8. '
' → logprob: -13.758757591247559
    9. 'Mic' → logprob: -13.883757591247559
    10. '       ' → logprob: -14.883757591247559

Token 213: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -3.583550642360933e-05
    2. 'ut' → logprob: -10.375036239624023
    3. 'utrients' → logprob: -12.500036239624023
    4. 'nut' → logprob: -14.625036239624023
    5. 'inut' → logprob: -16.375036239624023
    6. ' utr' → logprob: -16.625036239624023
    7. '   ' → logprob: -17.000036239624023
    8. '
' → logprob: -17.625036239624023
    9. 'e' → logprob: -18.125036239624023
    10. '       ' → logprob: -18.250036239624023

Token 214: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.09367401152849197
    2. 'utr' → logprob: -2.4686739444732666
    3. 'it' → logprob: -6.343674182891846
    4. 't' → logprob: -6.718674182891846
    5. 'ent' → logprob: -6.843674182891846
    6. 'ut' → logprob: -7.968674182891846
    7. 'tr' → logprob: -8.718673706054688
    8. 'itent' → logprob: -9.968673706054688
    9. 'r' → logprob: -10.343673706054688
    10. 'inent' → logprob: -10.718673706054688

Token 215: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.002174170222133398
    2. '._' → logprob: -6.377174377441406
    3. ' .' → logprob: -8.127174377441406
    4. '.' → logprob: -8.877174377441406
    5. '	cal' → logprob: -11.627174377441406
    6. '.Cal' → logprob: -11.627174377441406
    7. '   ' → logprob: -12.127174377441406
    8. '.c' → logprob: -13.002174377441406
    9. '.car' → logprob: -13.127174377441406
    10. '.calc' → logprob: -13.752174377441406

Token 216: 'orie' (ID: 22416)
  Prédit: 'orie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orie' → logprob: -9.491498531133402e-06
    2. 'ory' → logprob: -11.875009536743164
    3. 'or' → logprob: -13.875009536743164
    4. 'ories' → logprob: -14.875009536743164
    5. 'o' → logprob: -15.000009536743164
    6. '
' → logprob: -15.875009536743164
    7. 'erie' → logprob: -16.000009536743164
    8. 'arie' → logprob: -16.625009536743164
    9. 'oire' → logprob: -16.875009536743164
    10. '_or' → logprob: -16.875009536743164

Token 217: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.750000953674316
    3. 'per' → logprob: -14.875000953674316
    4. '_map' → logprob: -17.0
    5. ' _' → logprob: -17.625
    6. '_p' → logprob: -17.75
    7. '_
' → logprob: -18.875
    8. '
' → logprob: -19.375
    9. 's' → logprob: -19.75
    10. '_PER' → logprob: -19.875

Token 218: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'gram' → logprob: -16.25
    3. ' _' → logprob: -17.125
    4. '_
' → logprob: -17.25
    5. '_g' → logprob: -17.75
    6. '_per' → logprob: -18.625
    7. ' gram' → logprob: -18.75
    8. '_gr' → logprob: -19.0
    9. '_

' → logprob: -19.25
    10. '_
' → logprob: -19.375

Token 219: 'gram' (ID: 1695)
  Prédit: 'gram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gram' → logprob: -6.194110756041482e-05
    2. ' gram' → logprob: -10.000061988830566
    3. 'g' → logprob: -12.000061988830566
    4. 'Gram' → logprob: -13.375061988830566
    5. 'gra' → logprob: -13.625061988830566
    6. '_' → logprob: -13.625061988830566
    7. ' ' → logprob: -13.625061988830566
    8. '
' → logprob: -14.000061988830566
    9. '-' → logprob: -14.250061988830566
    10. 'grain' → logprob: -14.625061988830566

Token 220: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.310693111619912e-05
    2. '(' → logprob: -10.250042915344238
    3. ' (' → logprob: -12.375042915344238
    4. ')' → logprob: -12.875042915344238
    5. '(
' → logprob: -15.000042915344238
    6. ')(' → logprob: -15.125042915344238
    7. 'nut' → logprob: -16.375043869018555
    8. '(noun' → logprob: -16.750043869018555
    9. ' nutrient' → logprob: -17.125043869018555
    10. 'n' → logprob: -17.625043869018555

Token 221: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.0002870801545213908
    2. 'ut' → logprob: -8.250287055969238
    3. 'nut' → logprob: -10.875287055969238
    4. 'utrients' → logprob: -12.500287055969238
    5. ' nutrient' → logprob: -14.250287055969238
    6. 'it' → logprob: -14.500287055969238
    7. 't' → logprob: -15.125287055969238
    8. '
' → logprob: -15.625287055969238
    9. 'u' → logprob: -15.875287055969238
    10. ')' → logprob: -16.000288009643555

Token 222: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.026656830683350563
    2. 'ent' → logprob: -3.6516568660736084
    3. '
' → logprob: -8.901657104492188
    4. 't' → logprob: -9.026657104492188
    5. 'it' → logprob: -11.276657104492188
    6. 'ien' → logprob: -11.276657104492188
    7. '#' → logprob: -11.651657104492188
    8. 'iet' → logprob: -12.026657104492188
    9. '

' → logprob: -12.526657104492188
    10. '__' → logprob: -12.776657104492188

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003786300541833043
    2. ')
' → logprob: -5.628786087036133
    3. '   ' → logprob: -9.878786087036133
    4. ' for' → logprob: -10.753786087036133
    5. ' )' → logprob: -10.753786087036133
    6. 'n' → logprob: -11.003786087036133
    7. '       ' → logprob: -11.253786087036133
    8. 'for' → logprob: -11.253786087036133
    9. '(n' → logprob: -11.503786087036133
    10. ')

' → logprob: -11.628786087036133

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5723990201950073
    2. ' for' → logprob: -0.9473990201950073
    3. 'for' → logprob: -3.072399139404297
    4. '       ' → logprob: -7.322399139404297
    5. '            ' → logprob: -7.572399139404297
    6. '        ' → logprob: -7.947399139404297
    7. '               ' → logprob: -8.947399139404297
    8. '          ' → logprob: -9.697399139404297
    9. '         ' → logprob: -11.322399139404297
    10. '
' → logprob: -11.697399139404297

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7179879546165466
    2. 'for' (adapté à ' for') → logprob: -0.7179879546165466
    3. '           ' → logprob: -3.7179880142211914
    4. '            ' → logprob: -8.342988014221191
    5. '               ' → logprob: -11.717988014221191
    6. ')' → logprob: -13.717988014221191
    7. '          ' → logprob: -14.092988014221191
    8. '
' → logprob: -14.092988014221191
    9. '             ' → logprob: -14.467988014221191
    10. '        ' → logprob: -14.717988014221191

Token 226: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.08896291255950928
    2. ' nutrient' → logprob: -2.463963031768799
    3. 'n' → logprob: -11.33896255493164
    4. '
' → logprob: -12.58896255493164
    5. ' nut' → logprob: -13.33896255493164
    6. 'nit' → logprob: -13.58896255493164
    7. ' nutr' → logprob: -14.08896255493164
    8. ' ' → logprob: -14.33896255493164
    9. 'nu' → logprob: -14.33896255493164
    10. 'N' → logprob: -14.58896255493164

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020548781380057335
    2. 'in' → logprob: -3.8955488204956055
    3. '<|end|>' → logprob: -12.520548820495605
    4. ' ' → logprob: -13.770548820495605
    5. 's' → logprob: -14.520548820495605
    6. '	in' → logprob: -14.645548820495605
    7. ')' → logprob: -15.020548820495605
    8. 'import' → logprob: -15.895548820495605
    9. 'inthe' → logprob: -16.02054786682129
    10. '<|end|>' → logprob: -16.14554786682129

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2066778838634491
    2. ' self' → logprob: -2.2066779136657715
    3. '[' → logprob: -3.4566779136657715
    4. '[self' → logprob: -3.8316779136657715
    5. '[
' → logprob: -4.7066779136657715
    6. ' [' → logprob: -4.9566779136657715
    7. 'Mac' → logprob: -5.2066779136657715
    8. ' Macron' → logprob: -7.0816779136657715
    9. '(self' → logprob: -7.8316779136657715
    10. ' [
' → logprob: -8.331677436828613

Token 229: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -13.000004768371582
    3. '_pro' → logprob: -13.875004768371582
    4. '.PRO' → logprob: -14.000004768371582
    5. ' .' → logprob: -15.250004768371582
    6. '.F' → logprob: -16.125003814697266
    7. '
' → logprob: -16.250003814697266
    8. '_f' → logprob: -16.625003814697266
    9. '._
' → logprob: -17.000003814697266
    10. ' ' → logprob: -17.375003814697266

Token 230: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -5.438573680294212e-06
    2. '_amount' → logprob: -12.125005722045898
    3. 'cal' → logprob: -18.3750057220459
    4. '_' → logprob: -18.7500057220459
    5. '.amount' → logprob: -19.1250057220459
    6. ' amounts' → logprob: -19.7500057220459
    7. '(amount' → logprob: -19.8750057220459
    8. ' amount' → logprob: -20.8750057220459
    9. 'am' → logprob: -20.8750057220459
    10. '_cal' → logprob: -22.6250057220459

Token 231: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.2729995988775045e-06
    2. 'amount' → logprob: -12.750006675720215
    3. ' amounts' → logprob: -13.250006675720215
    4. ' s' → logprob: -14.125006675720215
    5. '_amount' → logprob: -15.375006675720215
    6. 'Amounts' → logprob: -16.6250057220459
    7. 'ss' → logprob: -16.8750057220459
    8. 'nts' → logprob: -17.0000057220459
    9. '
' → logprob: -17.1250057220459
    10. '   ' → logprob: -17.6250057220459

Token 232: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007557853823527694
    2. '       ' → logprob: -7.500755786895752
    3. '
' → logprob: -9.125755310058594
    4. '   ' → logprob: -9.875755310058594
    5. ')
' → logprob: -10.625755310058594
    6. ' )' → logprob: -11.500755310058594
    7. '           ' → logprob: -13.125755310058594
    8. '}' → logprob: -13.750755310058594
    9. ' ' → logprob: -14.000755310058594
    10. '))' → logprob: -14.375755310058594

Token 233: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869988024234772
    2. '       ' → logprob: -1.1369987726211548
    3. '   ' → logprob: -9.511999130249023
    4. ' )' → logprob: -10.511999130249023
    5. ')
' → logprob: -11.261999130249023
    6. '
' → logprob: -11.511999130249023
    7. '           ' → logprob: -13.386999130249023
    8. '}' → logprob: -14.636999130249023
    9. '      ' → logprob: -15.261999130249023
    10. '())' → logprob: -15.511999130249023

Token 234: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014504714636132121
    2. '       ' → logprob: -6.626450538635254
    3. '   ' → logprob: -9.626450538635254
    4. ' )' → logprob: -10.001450538635254
    5. ')
' → logprob: -11.376450538635254
    6. '}' → logprob: -14.001450538635254
    7. ')}' → logprob: -15.501450538635254
    8. '	' → logprob: -16.126449584960938
    9. ')return' → logprob: -16.251449584960938
    10. '))' → logprob: -16.376449584960938

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07773303985595703
    2. '<|end|>' → logprob: -2.827733039855957
    3. 'class' → logprob: -4.702733039855957
    4. '   ' → logprob: -5.202733039855957
    5. '

' → logprob: -8.202733039855957
    6. '<|end|>' → logprob: -8.327733039855957
    7. 'def' → logprob: -8.827733039855957
    8. '    
' → logprob: -8.952733039855957
    9. '```' → logprob: -9.077733039855957
    10. ')' → logprob: -10.202733039855957

Token 236: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016053172294050455
    2. 'class' → logprob: -6.87660551071167
    3. '   ' → logprob: -7.62660551071167
    4. ' def' → logprob: -9.751605033874512
    5. ')' → logprob: -11.626605033874512
    6. '
' → logprob: -12.126605033874512
    7. 'from' → logprob: -12.501605033874512
    8. '@' → logprob: -13.001605033874512
    9. '	def' → logprob: -13.251605033874512
    10. '#' → logprob: -13.876605033874512

Token 237: ' exceeds' (ID: 63152)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5923537015914917
    2. ' def' → logprob: -1.2173537015914917
    3. ' __' → logprob: -2.4673538208007812
    4. '__' → logprob: -3.7173538208007812
    5. ' total' → logprob: -4.342353820800781
    6. 'add' → logprob: -4.967353820800781
    7. ' scale' → logprob: -5.342353820800781
    8. 'def' → logprob: -5.467353820800781
    9. ' ' → logprob: -6.092353820800781
    10. ' scaled' → logprob: -6.342353820800781

Token 238: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31562674045562744
    2. '_' → logprob: -1.8156267404556274
    3. '(self' → logprob: -2.315626621246338
    4. '(
' → logprob: -5.815626621246338
    5. '_(' → logprob: -5.940626621246338
    6. 'self' → logprob: -5.940626621246338
    7. ' (' → logprob: -7.940626621246338
    8. '_threshold' → logprob: -8.190627098083496
    9. '_amount' → logprob: -9.690627098083496
    10. '_limit' → logprob: -9.940627098083496

Token 239: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39475366473197937
    2. 'self' → logprob: -1.8947536945343018
    3. '(self' → logprob: -2.0197536945343018
    4. '(' → logprob: -4.394753456115723
    5. ')' → logprob: -4.769753456115723
    6. ' (' → logprob: -5.269753456115723
    7. ' self' → logprob: -5.394753456115723
    8. '_(' → logprob: -5.644753456115723
    9. ',' → logprob: -5.769753456115723
    10. ')_' → logprob: -6.144753456115723

Token 240: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20335185527801514
    2. ' other' → logprob: -1.7033518552780151
    3. 'self' → logprob: -6.453351974487305
    4. 'limit' → logprob: -9.078351974487305
    5. 'threshold' → logprob: -9.453351974487305
    6. 'max' → logprob: -9.703351974487305
    7. ' self' → logprob: -10.078351974487305
    8. 'nut' → logprob: -11.578351974487305
    9. ' limit' → logprob: -11.828351974487305
    10. ' nutrient' → logprob: -12.078351974487305

Token 241: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1250532567501068
    2. ')' → logprob: -2.3750531673431396
    3. '):' → logprob: -3.7500531673431396
    4. ',' → logprob: -7.750053405761719
    5. ' :' → logprob: -8.250053405761719
    6. ' )' → logprob: -8.375053405761719
    7. ' ):' → logprob: -9.875053405761719
    8. ' ,' → logprob: -11.375053405761719
    9. '_:' → logprob: -11.875053405761719
    10. '):
' → logprob: -12.250053405761719

Token 242: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7290980815887451
    2. ' ' → logprob: -1.3540980815887451
    3. ' '' → logprob: -1.9790980815887451
    4. ' )' → logprob: -3.229098081588745
    5. ':' → logprob: -3.729098081588745
    6. ' Nutr' → logprob: -3.729098081588745
    7. '):
' → logprob: -5.229098320007324
    8. ''' → logprob: -5.604098320007324
    9. '):' → logprob: -5.729098320007324
    10. ' ')' → logprob: -5.854098320007324

Token 243: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011096631176769733
    2. ' Nutr' → logprob: -4.511096477508545
    3. ' ' → logprob: -11.136096954345703
    4. '   ' → logprob: -11.261096954345703
    5. ' nutrient' → logprob: -12.261096954345703
    6. 'Nutrition' → logprob: -12.511096954345703
    7. ' N' → logprob: -12.636096954345703
    8. '	N' → logprob: -12.761096954345703
    9. '  ' → logprob: -13.386096954345703
    10. '
' → logprob: -14.136096954345703

Token 244: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -9.372294698550832e-06
    2. 'ut' → logprob: -12.500009536743164
    3. 'N' → logprob: -12.875009536743164
    4. 'utrients' → logprob: -13.125009536743164
    5. 'nut' → logprob: -15.125009536743164
    6. '
' → logprob: -15.750009536743164
    7. 'tr' → logprob: -15.875009536743164
    8. 't' → logprob: -17.000009536743164
    9. '**' → logprob: -17.125009536743164
    10. 'e' → logprob: -17.125009536743164

Token 245: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0003357006062287837
    2. 'ent' → logprob: -8.000335693359375
    3. 't' → logprob: -17.000335693359375
    4. '#' → logprob: -17.750335693359375
    5. '
' → logprob: -17.750335693359375
    6. 'iet' → logprob: -18.125335693359375
    7. '   ' → logprob: -18.250335693359375
    8. '```' → logprob: -18.250335693359375
    9. 'ien' → logprob: -18.500335693359375
    10. 'iend' → logprob: -18.625335693359375

Token 246: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -1.9361264946837764e-07
    2. ' Profile' → logprob: -16.375
    3. 'Pro' → logprob: -16.75
    4. 'profile' → logprob: -17.5
    5. 'Profiles' → logprob: -17.75
    6. 'Profil' → logprob: -17.75
    7. '_profile' → logprob: -18.875
    8. 'Prof' → logprob: -19.0
    9. '   ' → logprob: -19.125
    10. '(Profile' → logprob: -20.0

Token 247: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.015320503152906895
    2. '',' → logprob: -4.765320301055908
    3. ')' → logprob: -5.015320301055908
    4. ',' → logprob: -10.515320777893066
    5. ' ')' → logprob: -12.390320777893066
    6. ''' → logprob: -12.515320777893066
    7. 'self' → logprob: -12.765320777893066
    8. '")' → logprob: -13.015320777893066
    9. ''):' → logprob: -13.140320777893066
    10. '   ' → logprob: -13.265320777893066

Token 248: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6860353946685791
    2. ')' → logprob: -1.061035394668579
    3. '->' → logprob: -2.186035394668579
    4. '(self' → logprob: -3.561035394668579
    5. ':' → logprob: -5.31103515625
    6. '       ' → logprob: -6.31103515625
    7. 'self' → logprob: -6.81103515625
    8. ')->' → logprob: -7.06103515625
    9. '   ' → logprob: -7.93603515625
    10. ' self' → logprob: -8.68603515625

Token 249: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4741755723953247
    2. 'bool' → logprob: -0.9741755723953247
    3. ' ' → logprob: -9.724175453186035
    4. ' ' → logprob: -10.974175453186035
    5. '	bool' → logprob: -11.724175453186035
    6. '  ' → logprob: -12.224175453186035
    7. '   ' → logprob: -12.724175453186035
    8. '<bool' → logprob: -12.974175453186035
    9. 'Bool' → logprob: -14.974175453186035
    10. '
' → logprob: -14.974175453186035

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0053664445877075195
    2. ':
' → logprob: -5.255366325378418
    3. '       ' → logprob: -9.505366325378418
    4. '):' → logprob: -10.255366325378418
    5. '   ' → logprob: -12.005366325378418
    6. '():' → logprob: -12.755366325378418
    7. ',' → logprob: -12.880366325378418
    8. '):
' → logprob: -13.130366325378418
    9. '<|end|>' → logprob: -13.130366325378418
    10. ')' → logprob: -13.255366325378418

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006304710987024009
    2. '
' → logprob: -8.000630378723145
    3. ' for' → logprob: -8.625630378723145
    4. ' return' → logprob: -9.250630378723145
    5. 'return' → logprob: -11.875630378723145
    6. '   ' → logprob: -12.000630378723145
    7. 'for' → logprob: -12.375630378723145
    8. '	' → logprob: -15.000630378723145
    9. '    ' → logprob: -15.000630378723145
    10. '      ' → logprob: -15.000630378723145

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45594701170921326
    2. '       ' → logprob: -1.2059470415115356
    3. 'for' → logprob: -3.205946922302246
    4. ' return' → logprob: -3.705946922302246
    5. ' for' → logprob: -6.455946922302246
    6. '   ' → logprob: -9.830946922302246
    7. '
' → logprob: -10.830946922302246
    8. '	return' → logprob: -14.455946922302246
    9. '```' → logprob: -14.830946922302246
    10. 'def' → logprob: -14.955946922302246

Token 253: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.47767043113708496
    2. ' any' → logprob: -0.977670431137085
    3. 'all' → logprob: -5.977670669555664
    4. ' all' → logprob: -6.977670669555664
    5. '   ' → logprob: -9.352670669555664
    6. 'self' → logprob: -11.102670669555664
    7. ' self' → logprob: -12.227670669555664
    8. '       ' → logprob: -12.477670669555664
    9. '    ' → logprob: -12.977670669555664
    10. '(any' → logprob: -13.352670669555664

Token 254: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.016901619732379913
    2. '(self' → logprob: -4.51690149307251
    3. '(' → logprob: -5.26690149307251
    4. 'self' → logprob: -7.39190149307251
    5. '           ' → logprob: -10.391901969909668
    6. '(

' → logprob: -10.891901969909668
    7. '(
' → logprob: -11.641901969909668
    8. ' self' → logprob: -12.891901969909668
    9. '(`
' → logprob: -16.39190101623535
    10. '               ' → logprob: -16.51690101623535

Token 255: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004176817834377289
    2. '           ' → logprob: -5.504176616668701
    3. ' self' → logprob: -9.37917709350586
    4. '               ' → logprob: -11.87917709350586
    5. '   ' → logprob: -12.37917709350586
    6. '(self' → logprob: -13.75417709350586
    7. '	self' → logprob: -14.25417709350586
    8. '       ' → logprob: -15.00417709350586
    9. ' ' → logprob: -15.37917709350586
    10. 'this' → logprob: -15.75417709350586

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.3663626305060461e-05
    2. '           ' → logprob: -11.25001335144043
    3. ' self' → logprob: -14.75001335144043
    4. 'this' → logprob: -15.75001335144043
    5. '               ' → logprob: -16.87501335144043
    6. '(self' → logprob: -17.25001335144043
    7. '	self' → logprob: -19.75001335144043
    8. '[self' → logprob: -19.75001335144043
    9. '$self' → logprob: -20.62501335144043
    10. 'Self' → logprob: -20.62501335144043

Token 257: '._' (ID: 2697)
  Prédit: '.amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.amount' → logprob: -0.12710238993167877
    2. '._' → logprob: -2.1271023750305176
    3. '_amount' → logprob: -9.002102851867676
    4. '.' → logprob: -10.877102851867676
    5. 'amount' → logprob: -11.252102851867676
    6. ' .' → logprob: -11.502102851867676
    7. '.Amount' → logprob: -12.377102851867676
    8. '   ' → logprob: -13.627102851867676
    9. '.am' → logprob: -13.752102851867676
    10. '_.' → logprob: -14.627102851867676

Token 258: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.0325924449716695e-05
    2. '_amount' → logprob: -11.50001049041748
    3. 'am' → logprob: -15.87501049041748
    4. ' amount' → logprob: -17.375009536743164
    5. ' amounts' → logprob: -17.375009536743164
    6. '.amount' → logprob: -18.500009536743164
    7. '(amount' → logprob: -19.375009536743164
    8. 'amt' → logprob: -20.500009536743164
    9. 'cal' → logprob: -20.750009536743164
    10. 'ount' → logprob: -20.750009536743164

Token 259: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.6457742175552994e-05
    2. 'amount' → logprob: -10.375056266784668
    3. '[n' → logprob: -11.500056266784668
    4. '[s' → logprob: -12.250056266784668
    5. '[' → logprob: -13.250056266784668
    6. 'nut' → logprob: -13.500056266784668
    7. ' amounts' → logprob: -13.625056266784668
    8. 'sn' → logprob: -14.375056266784668
    9. '
' → logprob: -14.625056266784668
    10. 'ount' → logprob: -14.625056266784668

Token 260: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.250008583068848
    3. '[key' → logprob: -13.625008583068848
    4. '[m' → logprob: -13.625008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '[k' → logprob: -15.375008583068848
    7. '       ' → logprob: -15.625008583068848
    8. 'nut' → logprob: -16.000009536743164
    9. '[
' → logprob: -16.125009536743164
    10. '```' → logprob: -16.750009536743164

Token 261: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.0003291480534244329
    2. '[' → logprob: -9.12532901763916
    3. 'nut' → logprob: -9.37532901763916
    4. 'ut' → logprob: -9.75032901763916
    5. '[n' → logprob: -10.37532901763916
    6. 'utrients' → logprob: -11.37532901763916
    7. '[i' → logprob: -12.37532901763916
    8. '[u' → logprob: -12.50032901763916
    9. '```' → logprob: -12.87532901763916
    10. '[e' → logprob: -12.87532901763916

Token 262: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.048885636031627655
    2. 'ent' → logprob: -3.0488855838775635
    3. 'eat' → logprob: -9.423885345458984
    4. 'utr' → logprob: -9.548885345458984
    5. 'et' → logprob: -10.048885345458984
    6. 'e' → logprob: -11.298885345458984
    7. 'ant' → logprob: -11.548885345458984
    8. 'ed' → logprob: -11.673885345458984
    9. 'ut' → logprob: -11.673885345458984
    10. 't' → logprob: -11.673885345458984

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06716208904981613
    2. '>' → logprob: -2.817162036895752
    3. ' >' → logprob: -5.442162036895752
    4. ']>' → logprob: -7.567162036895752
    5. '           ' → logprob: -8.81716251373291
    6. ' ]' → logprob: -8.94216251373291
    7. '            ' → logprob: -10.06716251373291
    8. '               ' → logprob: -12.06716251373291
    9. ')' → logprob: -13.31716251373291
    10. '        ' → logprob: -13.69216251373291

Token 264: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3133956491947174
    2. '>' → logprob: -1.313395619392395
    3. '           ' → logprob: -9.063395500183105
    4. '            ' → logprob: -11.688395500183105
    5. '               ' → logprob: -12.688395500183105
    6. ' >
' → logprob: -13.063395500183105
    7. '>
' → logprob: -13.938395500183105
    8. ' ' → logprob: -14.313395500183105
    9. '        ' → logprob: -14.813395500183105
    10. ')' → logprob: -15.063395500183105

Token 265: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.04858816787600517
    2. 'other' → logprob: -3.048588275909424
    3. '           ' → logprob: -15.173587799072266
    4. '(other' → logprob: -15.173587799072266
    5. '.other' → logprob: -16.673587799072266
    6. '_other' → logprob: -17.048587799072266
    7. 'Other' → logprob: -17.048587799072266
    8. '
' → logprob: -17.423587799072266
    9. ' oth' → logprob: -17.548587799072266
    10. '       ' → logprob: -18.048587799072266

Token 266: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0010625827126204967
    2. '.amount' → logprob: -6.876062393188477
    3. '_amount' → logprob: -11.251062393188477
    4. '   ' → logprob: -11.876062393188477
    5. '.' → logprob: -12.876062393188477
    6. ')._' → logprob: -13.001062393188477
    7. ' .' → logprob: -13.126062393188477
    8. ']._' → logprob: -13.251062393188477
    9. 'amount' → logprob: -15.001062393188477
    10. '           ' → logprob: -15.001062393188477

Token 267: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.061972279101610184
    2. '_amount' → logprob: -2.8119723796844482
    3. '.amount' → logprob: -13.686972618103027
    4. ' amount' → logprob: -14.061972618103027
    5. '(amount' → logprob: -14.436972618103027
    6. '```' → logprob: -14.436972618103027
    7. 'am' → logprob: -14.811972618103027
    8. '_' → logprob: -15.436972618103027
    9. '._' → logprob: -15.561972618103027
    10. 'Amounts' → logprob: -15.811972618103027

Token 268: 's' (ID: 82)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.38156387209892273
    2. 's' → logprob: -1.3815639019012451
    3. 'unts' → logprob: -3.256563901901245
    4. 'ts' → logprob: -4.381563663482666
    5. 'onts' → logprob: -4.506563663482666
    6. 'amount' → logprob: -6.381563663482666
    7. 'nts' → logprob: -6.756563663482666
    8. '   ' → logprob: -8.381564140319824
    9. 'Amounts' → logprob: -8.881564140319824
    10. 'ounds' → logprob: -8.881564140319824

Token 269: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.941161776310764e-05
    2. '           ' → logprob: -10.875039100646973
    3. '       ' → logprob: -11.625039100646973
    4. '[' → logprob: -12.500039100646973
    5. 'nut' → logprob: -12.625039100646973
    6. ' [' → logprob: -13.500039100646973
    7. '   ' → logprob: -14.375039100646973
    8. '               ' → logprob: -14.500039100646973
    9. '[
' → logprob: -14.625039100646973
    10. '][' → logprob: -15.250039100646973

Token 270: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.00039623770862817764
    2. 'nut' → logprob: -8.000395774841309
    3. 'ut' → logprob: -10.250395774841309
    4. '[' → logprob: -12.000395774841309
    5. 'utrients' → logprob: -12.125395774841309
    6. '   ' → logprob: -13.125395774841309
    7. 'eur' → logprob: -13.375395774841309
    8. 't' → logprob: -13.750395774841309
    9. '[n' → logprob: -14.000395774841309
    10. '       ' → logprob: -14.125395774841309

Token 271: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.1309112310409546
    2. 'ent' → logprob: -2.130911350250244
    3. 'ant' → logprob: -6.880911350250244
    4. 'eat' → logprob: -7.005911350250244
    5. 'ed' → logprob: -7.255911350250244
    6. 'et' → logprob: -7.380911350250244
    7. 'ut' → logprob: -8.755910873413086
    8. 'at' → logprob: -9.005910873413086
    9. 't' → logprob: -9.505910873413086
    10. 'in' → logprob: -9.755910873413086

Token 272: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4751821458339691
    2. ' for' → logprob: -1.3501821756362915
    3. 'for' → logprob: -3.100182056427002
    4. ')' → logprob: -3.600182056427002
    5. '       ' → logprob: -3.600182056427002
    6. ']' → logprob: -4.100182056427002
    7. '               ' → logprob: -6.725182056427002
    8. ']
' → logprob: -7.475182056427002
    9. ')
' → logprob: -7.600182056427002
    10. '            ' → logprob: -9.47518253326416

Token 273: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6754383444786072
    2. '           ' → logprob: -0.9254383444786072
    3. 'for' → logprob: -2.675438404083252
    4. '       ' → logprob: -3.675438404083252
    5. ')' → logprob: -8.050437927246094
    6. '               ' → logprob: -8.925437927246094
    7. '	for' → logprob: -11.675437927246094
    8. '          ' → logprob: -11.925437927246094
    9. '   ' → logprob: -12.425437927246094
    10. '        ' → logprob: -12.800437927246094

Token 274: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5133263468742371
    2. ' for' → logprob: -1.1383264064788818
    3. 'for' (adapté à ' for') → logprob: -2.513326406478882
    4. '            ' → logprob: -9.138326644897461
    5. '       ' → logprob: -11.138326644897461
    6. '          ' → logprob: -12.013326644897461
    7. '        ' → logprob: -12.263326644897461
    8. '               ' → logprob: -12.388326644897461
    9. ')' → logprob: -12.888326644897461
    10. '            
' → logprob: -13.638326644897461

Token 275: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.22544105350971222
    2. ' nutrient' → logprob: -1.6004410982131958
    3. 'n' → logprob: -11.225440979003906
    4. '   ' → logprob: -12.850440979003906
    5. ' nutr' → logprob: -13.225440979003906
    6. '```' → logprob: -13.350440979003906
    7. 'nu' → logprob: -13.475440979003906
    8. ' nut' → logprob: -13.725440979003906
    9. 'nit' → logprob: -13.975440979003906
    10. '       ' → logprob: -14.100440979003906

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016063109040260315
    2. 'in' → logprob: -4.141063213348389
    3. '           ' → logprob: -10.89106273651123
    4. '       ' → logprob: -12.64106273651123
    5. '            ' → logprob: -13.26606273651123
    6. '        ' → logprob: -13.26606273651123
    7. 'n' → logprob: -13.51606273651123
    8. ')' → logprob: -14.39106273651123
    9. 'import' → logprob: -15.14106273651123
    10. '               ' → logprob: -15.51606273651123

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05552472546696663
    2. ' self' → logprob: -2.9305248260498047
    3. 'Mac' → logprob: -7.430524826049805
    4. ' Macron' → logprob: -10.555524826049805
    5. ' Mac' → logprob: -10.930524826049805
    6. '[self' → logprob: -13.805524826049805
    7. '(self' → logprob: -13.805524826049805
    8. ' ' → logprob: -14.430524826049805
    9. '	self' → logprob: -14.555524826049805
    10. 'other' → logprob: -14.555524826049805

Token 278: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -13.250006675720215
    3. ' .' → logprob: -13.500006675720215
    4. '
' → logprob: -14.500006675720215
    5. '_amount' → logprob: -14.750006675720215
    6. '   ' → logprob: -14.750006675720215
    7. '.amount' → logprob: -15.125006675720215
    8. ')' → logprob: -15.625006675720215
    9. '_ex' → logprob: -15.625006675720215
    10. '

' → logprob: -15.875006675720215

Token 279: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -6.694766489090398e-05
    2. '_amount' → logprob: -9.625066757202148
    3. 'am' → logprob: -14.875066757202148
    4. '.amount' → logprob: -15.750066757202148
    5. 'cal' → logprob: -16.12506675720215
    6. '_' → logprob: -16.50006675720215
    7. '(amount' → logprob: -17.12506675720215
    8. '_cal' → logprob: -17.37506675720215
    9. ' amounts' → logprob: -17.87506675720215
    10. ' amount' → logprob: -18.25006675720215

Token 280: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.47626737493556e-05
    2. 'ts' → logprob: -10.37503433227539
    3. 'ount' → logprob: -13.75003433227539
    4. 'nts' → logprob: -14.50003433227539
    5. 'unts' → logprob: -14.62503433227539
    6. 'onts' → logprob: -14.75003433227539
    7. 'ots' → logprob: -15.12503433227539
    8. 'ounds' → logprob: -15.50003433227539
    9. '   ' → logprob: -16.25003433227539
    10. 'oints' → logprob: -16.25003433227539

Token 281: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20159031450748444
    2. '       ' → logprob: -1.7015902996063232
    3. ')
' → logprob: -9.326590538024902
    4. '   ' → logprob: -9.826590538024902
    5. '<|end|>' → logprob: -11.201590538024902
    6. ' )' → logprob: -11.951590538024902
    7. '
' → logprob: -12.576590538024902
    8. '}' → logprob: -12.951590538024902
    9. '           ' → logprob: -13.451590538024902
    10. ' ' → logprob: -13.576590538024902

Token 282: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931912899017334
    2. '       ' → logprob: -0.6931912899017334
    3. ')
' → logprob: -10.443191528320312
    4. '   ' → logprob: -11.443191528320312
    5. '<|end|>' → logprob: -13.818191528320312
    6. '}' → logprob: -14.068191528320312
    7. ' )' → logprob: -14.193191528320312
    8. ')return' → logprob: -15.068191528320312
    9. '),' → logprob: -15.318191528320312
    10. '))' → logprob: -15.693191528320312

Token 283: ' )


' (ID: 69576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007311395602300763
    2. '       ' → logprob: -7.250730991363525
    3. ')
' → logprob: -11.125731468200684
    4. ')return' → logprob: -12.875731468200684
    5. ' )' → logprob: -13.125731468200684
    6. '   ' → logprob: -13.750731468200684
    7. '<|end|>' → logprob: -14.750731468200684
    8. '}' → logprob: -15.875731468200684
    9. ' ' → logprob: -16.625730514526367
    10. '),' → logprob: -17.250730514526367

Token 284: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0029738990124315023
    2. 'def' → logprob: -5.877974033355713
    3. '   ' → logprob: -9.127973556518555
    4. 'from' → logprob: -10.002973556518555
    5. ' class' → logprob: -11.752973556518555
    6. '
' → logprob: -13.002973556518555
    7. '<|end|>' → logprob: -13.502973556518555
    8. ' ' → logprob: -14.002973556518555
    9. '@dat' → logprob: -14.252973556518555
    10. '```' → logprob: -14.377973556518555

Token 285: ' Snack' (ID: 117545)
  Prédit: ' Meal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Meal' → logprob: -1.7167168855667114
    2. 'Diet' → logprob: -1.7167168855667114
    3. 'Meal' → logprob: -1.8417168855667114
    4. 'Food' → logprob: -2.591716766357422
    5. ' Nutr' → logprob: -2.841716766357422
    6. ' Food' → logprob: -3.091716766357422
    7. ' Macron' → logprob: -3.091716766357422
    8. ' Diet' → logprob: -3.216716766357422
    9. ' Daily' → logprob: -3.216716766357422
    10. ' Dietary' → logprob: -3.341716766357422

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008398807840421796
    2. ':
' → logprob: -7.500839710235596
    3. '(N' → logprob: -8.375840187072754
    4. '(' → logprob: -10.625840187072754
    5. '():' → logprob: -11.125840187072754
    6. '):' → logprob: -11.750840187072754
    7. ' :' → logprob: -13.250840187072754
    8. 'Type' → logprob: -13.625840187072754
    9. 'N' → logprob: -14.125840187072754
    10. ':

' → logprob: -14.250840187072754

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020783171930816025
    2. 'def' → logprob: -9.000207901000977
    3. ':' → logprob: -9.500207901000977
    4. ':
' → logprob: -12.500207901000977
    5. ' def' → logprob: -12.875207901000977
    6. '):
' → logprob: -13.250207901000977
    7. '):' → logprob: -14.625207901000977
    8. '   ' → logprob: -14.750207901000977
    9. 'class' → logprob: -15.375207901000977
    10. ')' → logprob: -15.875207901000977

Token 288: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03840865194797516
    2. ' def' → logprob: -3.2884087562561035
    3. '   ' → logprob: -7.9134087562561035
    4. ' ' → logprob: -14.663408279418945
    5. 'de' → logprob: -15.163408279418945
    6. 'class' → logprob: -15.163408279418945
    7. '	def' → logprob: -16.038408279418945
    8. '_def' → logprob: -16.788408279418945
    9. '__' → logprob: -16.913408279418945
    10. ':def' → logprob: -16.913408279418945

Token 289: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007691104896366596
    2. '__' → logprob: -4.882690906524658
    3. 'def' → logprob: -10.507691383361816
    4. ' def' → logprob: -10.507691383361816
    5. 'init' → logprob: -10.882691383361816
    6. '_init' → logprob: -12.257691383361816
    7. ' init' → logprob: -13.382691383361816
    8. ' ' → logprob: -13.882691383361816
    9. 'name' → logprob: -14.132691383361816
    10. '___' → logprob: -14.257691383361816

Token 290: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'name' → logprob: -17.5
    3. 'inite' → logprob: -18.0
    4. '_init' → logprob: -18.75
    5. ' init' → logprob: -19.125
    6. 'ini' → logprob: -19.5
    7. 'def' → logprob: -19.875
    8. '	init' → logprob: -20.75
    9. '(init' → logprob: -21.0
    10. 'class' → logprob: -21.5

Token 291: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007548353751190007
    2. '__' → logprob: -7.6257548332214355
    3. '__(
' → logprob: -8.875755310058594
    4. '(self' → logprob: -9.000755310058594
    5. '_(' → logprob: -13.625755310058594
    6. '(' → logprob: -13.750755310058594
    7. 'self' → logprob: -14.625755310058594
    8. '__('' → logprob: -14.875755310058594
    9. '__((' → logprob: -15.750755310058594
    10. '_' → logprob: -15.875755310058594

Token 292: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4153549020411447e-05
    2. ' self' → logprob: -10.87502384185791
    3. 'name' → logprob: -13.00002384185791
    4. '
' → logprob: -13.75002384185791
    5. ',' → logprob: -13.87502384185791
    6. '(self' → logprob: -15.37502384185791
    7. '_self' → logprob: -15.37502384185791
    8. '   ' → logprob: -16.125024795532227
    9. 'protein' → logprob: -16.250024795532227
    10. ',self' → logprob: -16.500024795532227

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003436872211750597
    2. 'self' → logprob: -8.000343322753906
    3. ' ,' → logprob: -12.500343322753906
    4. '(self' → logprob: -13.625343322753906
    5. ',self' → logprob: -13.875343322753906
    6. '   ' → logprob: -14.250343322753906
    7. '       ' → logprob: -14.500343322753906
    8. ',
' → logprob: -14.625343322753906
    9. ' self' → logprob: -14.750343322753906
    10. '‌,' → logprob: -16.375343322753906

Token 294: ' id' (ID: 1211)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.003976292908191681
    2. ' name' → logprob: -5.628976345062256
    3. 'nut' → logprob: -8.128975868225098
    4. 'protein' → logprob: -10.753975868225098
    5. '   ' → logprob: -10.878975868225098
    6. 'id' → logprob: -11.128975868225098
    7. 'nutrition' → logprob: -11.878975868225098
    8. 'self' → logprob: -12.378975868225098
    9. 'profile' → logprob: -12.628975868225098
    10. ' ' → logprob: -13.378975868225098

Token 295: '_:' (ID: 52270)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12701104581356049
    2. '_:' → logprob: -2.1270110607147217
    3. ',' → logprob: -10.1270112991333
    4. '_,' → logprob: -10.8770112991333
    5. '__:' → logprob: -10.8770112991333
    6. ' :' → logprob: -12.7520112991333
    7. ':,' → logprob: -13.8770112991333
    8. ':int' → logprob: -14.1270112991333
    9. '_code' → logprob: -15.2520112991333
    10. '=' → logprob: -16.752010345458984

Token 296: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3177427649497986
    2. 'int' → logprob: -1.3177428245544434
    3. ' str' → logprob: -5.692742824554443
    4. 'str' → logprob: -6.817742824554443
    5. ' ' → logprob: -12.692742347717285
    6. ':int' → logprob: -12.817742347717285
    7. '[int' → logprob: -15.567742347717285
    8. '	int' → logprob: -16.0677433013916
    9. '<int' → logprob: -16.3177433013916
    10. ':' → logprob: -16.4427433013916

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ')' → logprob: -15.250012397766113
    4. '‌,' → logprob: -16.000011444091797
    5. ',
' → logprob: -16.625011444091797
    6. '   ' → logprob: -17.750011444091797
    7. '<|end|>' → logprob: -17.875011444091797
    8. '       ' → logprob: -19.250011444091797
    9. '‍,' → logprob: -19.250011444091797
    10. ',name' → logprob: -19.500011444091797

Token 298: ' nutrient' (ID: 72324)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.015714185312390327
    2. ' name' → logprob: -4.890714168548584
    3. 'nut' → logprob: -5.015714168548584
    4. 'profile' → logprob: -6.890714168548584
    5. ' nutrient' → logprob: -9.140714645385742
    6. 'nutrition' → logprob: -9.140714645385742
    7. 'protein' → logprob: -9.640714645385742
    8. ' nutrients' → logprob: -10.265714645385742
    9. ' profile' → logprob: -10.515714645385742
    10. '   ' → logprob: -10.765714645385742

Token 299: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.15478596091270447
    2. 's' → logprob: -2.0297858715057373
    3. 'profile' → logprob: -4.654786109924316
    4. ':' → logprob: -6.404786109924316
    5. 'Profile' → logprob: -7.654786109924316
    6. '_profiles' → logprob: -7.904786109924316
    7. ' profile' → logprob: -11.654786109924316
    8. 'profiles' → logprob: -12.279786109924316
    9. '_pro' → logprob: -13.529786109924316
    10. 'prof' → logprob: -13.654786109924316

Token 300: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.988221684878226e-06
    2. '):' → logprob: -12.250006675720215
    3. ')' → logprob: -13.500006675720215
    4. ',' → logprob: -15.375006675720215
    5. ' :' → logprob: -15.375006675720215
    6. '_:' → logprob: -16.62500762939453
    7. '):
' → logprob: -17.75000762939453
    8. '':' → logprob: -18.00000762939453
    9. '```' → logprob: -18.87500762939453
    10. '__:' → logprob: -19.00000762939453

Token 301: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0233409833163023
    2. ' Nutr' → logprob: -3.773340940475464
    3. ' N' → logprob: -9.398341178894043
    4. ''N' → logprob: -12.398341178894043
    5. ' ' → logprob: -12.648341178894043
    6. '	N' → logprob: -13.273341178894043
    7. '   ' → logprob: -13.648341178894043
    8. ':N' → logprob: -14.523341178894043
    9. 'Nutrition' → logprob: -14.648341178894043
    10. ')' → logprob: -14.773341178894043

Token 302: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00012487331696320325
    2. 'r' → logprob: -9.50012493133545
    3. 'ent' → logprob: -10.00012493133545
    4. 't' → logprob: -13.00012493133545
    5. 'er' → logprob: -14.62512493133545
    6. 'it' → logprob: -14.75012493133545
    7. 'ien' → logprob: -15.50012493133545
    8. '```' → logprob: -15.62512493133545
    9. 'int' → logprob: -15.87512493133545
    10. '
' → logprob: -16.000123977661133

Token 303: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -5.5577775128767826e-06
    2. 'profile' → logprob: -12.875005722045898
    3. '_profile' → logprob: -13.750005722045898
    4. 'ro' → logprob: -14.125005722045898
    5. 'Pro' → logprob: -15.125005722045898
    6. ' Profile' → logprob: -15.500005722045898
    7. 'Profil' → logprob: -15.625005722045898
    8. '_Profile' → logprob: -16.5000057220459
    9. '   ' → logprob: -17.0000057220459
    10. 'o' → logprob: -17.2500057220459

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5029557943344116
    2. '):' → logprob: -1.0029557943344116
    3. ')' → logprob: -3.627955913543701
    4. ',' → logprob: -6.377955913543701
    5. '):
' → logprob: -8.627955436706543
    6. '   ' → logprob: -11.752955436706543
    7. '):

' → logprob: -13.002955436706543
    8. ':' → logprob: -13.127955436706543
    9. ' ):
' → logprob: -13.377955436706543
    10. ' ):' → logprob: -14.127955436706543

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011486753646750003
    2. 'self' → logprob: -9.375114440917969
    3. ' self' → logprob: -11.125114440917969
    4. '   ' → logprob: -12.250114440917969
    5. ',' → logprob: -12.875114440917969
    6. '	' → logprob: -12.875114440917969
    7. '<|end|>' → logprob: -14.125114440917969
    8. '	self' → logprob: -14.250114440917969
    9. ' ' → logprob: -14.750114440917969
    10. '
' → logprob: -14.875114440917969

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001342254807241261
    2. '       ' → logprob: -7.001342296600342
    3. ' self' → logprob: -7.751342296600342
    4. '	self' → logprob: -14.751341819763184
    5. '   ' → logprob: -16.1263427734375
    6. ' ' → logprob: -18.0013427734375
    7. '	' → logprob: -18.1263427734375
    8. ' ' → logprob: -20.3763427734375
    9. 'super' → logprob: -20.5013427734375
    10. '(self' → logprob: -20.6263427734375

Token 307: '.id' (ID: 2858)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.645472526550293
    2. '.id' → logprob: -0.895472526550293
    3. '._' → logprob: -2.770472526550293
    4. '_id' → logprob: -6.270472526550293
    5. '   ' → logprob: -6.770472526550293
    6. ' .' → logprob: -7.395472526550293
    7. ' ' → logprob: -8.395472526550293
    8. '.__' → logprob: -8.520472526550293
    9. 'id' → logprob: -8.770472526550293
    10. '       ' → logprob: -9.145472526550293

Token 308: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.4868770196917467e-05
    2. '_
' → logprob: -11.250024795532227
    3. '_=' → logprob: -11.500024795532227
    4. '_

' → logprob: -14.625024795532227
    5. '_,' → logprob: -14.750024795532227
    6. '_:' → logprob: -15.000024795532227
    7. '_
' → logprob: -15.375024795532227
    8. '_)' → logprob: -15.750024795532227
    9. '_]' → logprob: -17.500024795532227
    10. ' _' → logprob: -18.125024795532227

Token 309: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.3868865668773651
    2. 'id' → logprob: -1.1368865966796875
    3. '_' → logprob: -11.261886596679688
    4. ' ' → logprob: -13.511886596679688
    5. ' ' → logprob: -14.511886596679688
    6. '_id' → logprob: -14.761886596679688
    7. '	id' → logprob: -15.261886596679688
    8. '(id' → logprob: -16.511886596679688
    9. '=id' → logprob: -17.136886596679688
    10. ' _' → logprob: -17.511886596679688

Token 310: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10024819523096085
    2. '_
' → logprob: -2.350248098373413
    3. '_
' → logprob: -10.350248336791992
    4. '_

' → logprob: -11.975248336791992
    5. '_,
' → logprob: -13.100248336791992
    6. '_,' → logprob: -13.600248336791992
    7. '_)
' → logprob: -20.225248336791992
    8. '_=' → logprob: -20.350248336791992
    9. '_;
' → logprob: -20.475248336791992
    10. '_\' → logprob: -20.975248336791992

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026881329249590635
    2. 'self' → logprob: -6.002687931060791
    3. ' self' → logprob: -8.50268840789795
    4. '	self' → logprob: -12.75268840789795
    5. '
' → logprob: -13.37768840789795
    6. '        
' → logprob: -13.37768840789795
    7. '	' → logprob: -13.87768840789795
    8. '   ' → logprob: -14.00268840789795
    9. ',' → logprob: -15.00268840789795
    10. '<|end|>' → logprob: -15.25268840789795

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.180879816180095e-05
    2. '       ' → logprob: -10.000051498413086
    3. ' self' → logprob: -12.000051498413086
    4. '   ' → logprob: -16.125051498413086
    5. '
' → logprob: -17.750051498413086
    6. '	self' → logprob: -18.125051498413086
    7. '        
' → logprob: -19.625051498413086
    8. 's' → logprob: -19.750051498413086
    9. 'this' → logprob: -20.125051498413086
    10. '     ' → logprob: -20.250051498413086

Token 313: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3143874704837799
    2. '.n' → logprob: -1.3143874406814575
    3. '._' → logprob: -6.939387321472168
    4. ' .' → logprob: -9.189387321472168
    5. '.sn' → logprob: -11.814387321472168
    6. 'nut' → logprob: -12.064387321472168
    7. '.
' → logprob: -12.189387321472168
    8. 'n' → logprob: -12.439387321472168
    9. '.value' → logprob: -12.939387321472168
    10. '
' → logprob: -12.939387321472168

Token 314: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.00021319588995538652
    2. 'ut' → logprob: -8.500213623046875
    3. '_' → logprob: -13.000213623046875
    4. 'utrients' → logprob: -13.000213623046875
    5. '   ' → logprob: -13.250213623046875
    6. 'nut' → logprob: -13.625213623046875
    7. 't' → logprob: -15.000213623046875
    8. '__' → logprob: -15.125213623046875
    9. 'utra' → logprob: -15.625213623046875
    10. '._' → logprob: -15.750213623046875

Token 315: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00046022076276130974
    2. 'ent' → logprob: -7.875460147857666
    3. 't' → logprob: -10.000460624694824
    4. 'it' → logprob: -11.500460624694824
    5. 'ite' → logprob: -12.500460624694824
    6. 'o' → logprob: -12.500460624694824
    7. '```' → logprob: -13.000460624694824
    8. 'itent' → logprob: -13.125460624694824
    9. 'e' → logprob: -13.500460624694824
    10. 'er' → logprob: -13.625460624694824

Token 316: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -5.200166469876422e-06
    2. '_pro' → logprob: -12.500004768371582
    3. '_prof' → logprob: -14.375004768371582
    4. 'profile' → logprob: -14.625004768371582
    5. '_' → logprob: -15.375004768371582
    6. '_profiles' → logprob: -16.0000057220459
    7. 's' → logprob: -18.6250057220459
    8. '"profile' → logprob: -18.7500057220459
    9. ' _' → logprob: -19.1250057220459
    10. '
' → logprob: -19.1250057220459

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740847051143646
    2. '=' → logprob: -0.974084734916687
    3. '=n' → logprob: -12.349084854125977
    4. ' ' → logprob: -13.224084854125977
    5. '   ' → logprob: -13.849084854125977
    6. '    ' → logprob: -15.099084854125977
    7. ' =
' → logprob: -16.099084854125977
    8. '=
' → logprob: -16.599084854125977
    9. ')' → logprob: -17.224084854125977
    10. 's' → logprob: -17.724084854125977

Token 318: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.0046210684813559055
    2. ' nutrient' → logprob: -5.3796210289001465
    3. '   ' → logprob: -15.004621505737305
    4. ' ' → logprob: -16.379621505737305
    5. 'nutrition' → logprob: -17.379621505737305
    6. '```' → logprob: -17.379621505737305
    7. 'nu' → logprob: -17.754621505737305
    8. 'nit' → logprob: -18.004621505737305
    9. ' nut' → logprob: -18.004621505737305
    10. ' ' → logprob: -18.004621505737305

Token 319: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.00012821101699955761
    2. 'profile' → logprob: -9.000127792358398
    3. '_pro' → logprob: -12.625127792358398
    4. 'Profile' → logprob: -14.375127792358398
    5. '_prof' → logprob: -15.500127792358398
    6. '"profile' → logprob: -16.1251277923584
    7. 'e' → logprob: -16.5001277923584
    8. 'r' → logprob: -16.6251277923584
    9. 'o' → logprob: -16.6251277923584
    10. 'al' → logprob: -16.8751277923584

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030741659924387932
    2. '<|end|>' → logprob: -3.6557416915893555
    3. '

' → logprob: -5.5307416915893555
    4. '<|end|>' → logprob: -8.030741691589355
    5. 'def' → logprob: -9.905741691589355
    6. '   ' → logprob: -10.280741691589355
    7. 'class' → logprob: -10.405741691589355
    8. '


' → logprob: -11.030741691589355
    9. '```' → logprob: -12.405741691589355
    10. '
' → logprob: -13.030741691589355

Token 321: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02035372518002987
    2. '<|end|>' → logprob: -4.5203537940979
    3. 'class' → logprob: -5.0203537940979
    4. '

' → logprob: -6.1453537940979
    5. 'def' → logprob: -8.270353317260742
    6. '   ' → logprob: -9.145353317260742
    7. '<|end|>' → logprob: -9.520353317260742
    8. '


' → logprob: -10.020353317260742
    9. '
' → logprob: -11.395353317260742
    10. ' ' → logprob: -12.145353317260742

Token 322: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05955665186047554
    2. '
' → logprob: -3.059556722640991
    3. '   ' → logprob: -4.809556484222412
    4. '<|end|>' → logprob: -6.559556484222412
    5. 'class' → logprob: -7.434556484222412
    6. ' def' → logprob: -7.559556484222412
    7. '

' → logprob: -9.05955696105957
    8. '	def' → logprob: -10.30955696105957
    9. '<|end|>' → logprob: -10.43455696105957
    10. '```' → logprob: -11.55955696105957

Token 323: '.cal' (ID: 40302)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1237635612487793
    2. '._' → logprob: -3.3737635612487793
    3. '.cal' → logprob: -3.3737635612487793
    4. '.available' → logprob: -4.623763561248779
    5. '.price' → logprob: -5.373763561248779
    6. '.is' → logprob: -5.498763561248779
    7. '_cal' → logprob: -5.748763561248779
    8. '.cost' → logprob: -5.873763561248779
    9. 'cal' → logprob: -5.998763561248779
    10. '.selected' → logprob: -6.248763561248779

Token 324: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.06263592094182968
    2. 'orie' → logprob: -2.812635898590088
    3. 'ory' → logprob: -8.437636375427246
    4. 'or' → logprob: -8.687636375427246
    5. 'o' → logprob: -9.062636375427246
    6. ' or' → logprob: -9.312636375427246
    7. '   ' → logprob: -10.437636375427246
    8. 's' → logprob: -11.437636375427246
    9. 'oric' → logprob: -12.187636375427246
    10. 'ORIES' → logprob: -12.562636375427246

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693192720413208
    2. ' =' → logprob: -0.693192720413208
    3. ' ' → logprob: -11.318192481994629
    4. '   ' → logprob: -11.443192481994629
    5. '=None' → logprob: -11.943192481994629
    6. ' =
' → logprob: -12.068192481994629
    7. '_' → logprob: -13.193192481994629
    8. ':' → logprob: -13.318192481994629
    9. '    ' → logprob: -13.818192481994629
    10. '=int' → logprob: -13.818192481994629

Token 326: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.00768056558445096
    2. 'self' → logprob: -5.132680416107178
    3. ' nutrient' → logprob: -6.382680416107178
    4. ' self' → logprob: -10.632680892944336
    5. '   ' → logprob: -10.757680892944336
    6. '       ' → logprob: -11.507680892944336
    7. 'n' → logprob: -14.507680892944336
    8. '     ' → logprob: -14.757680892944336
    9. '           ' → logprob: -15.007680892944336
    10. 'sn' → logprob: -15.132680892944336

Token 327: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.0029408519621938467
    2. 't' → logprob: -5.877940654754639
    3. 'profile' → logprob: -9.752941131591797
    4. 'r' → logprob: -10.877941131591797
    5. 'ro' → logprob: -11.252941131591797
    6. '_pro' → logprob: -11.252941131591797
    7. 'ent' → logprob: -11.752941131591797
    8. 'rof' → logprob: -11.877941131591797
    9. 'e' → logprob: -12.252941131591797
    10. 'nut' → logprob: -13.752941131591797

Token 328: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -9.610702363715973e-06
    2. ' .' → logprob: -11.750009536743164
    3. '.' → logprob: -13.750009536743164
    4. 'cal' → logprob: -15.250009536743164
    5. '	cal' → logprob: -15.500009536743164
    6. '.Cal' → logprob: -16.250009536743164
    7. '   ' → logprob: -17.375009536743164
    8. '.amount' → logprob: -17.875009536743164
    9. '.car' → logprob: -17.875009536743164
    10. '.calc' → logprob: -18.375009536743164

Token 329: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -4.4849443838757e-06
    2. 'orie' → logprob: -13.375004768371582
    3. 'or' → logprob: -14.500004768371582
    4. '```' → logprob: -14.500004768371582
    5. 'o' → logprob: -14.875004768371582
    6. 'uries' → logprob: -15.125004768371582
    7. '_' → logprob: -15.500004768371582
    8. '``' → logprob: -16.125003814697266
    9. '_cal' → logprob: -16.125003814697266
    10. 'aries' → logprob: -16.500003814697266

Token 330: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10606788098812103
    2. 'class' → logprob: -3.2310678958892822
    3. '<|end|>' → logprob: -3.4810678958892822
    4. 'def' → logprob: -3.7310678958892822
    5. '   ' → logprob: -5.231067657470703
    6. '<|end|>' → logprob: -7.981067657470703
    7. ' ' → logprob: -8.356067657470703
    8. '

' → logprob: -8.606067657470703
    9. ' def' → logprob: -9.981067657470703
    10. ')' → logprob: -10.231067657470703

Token 332: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001391900354065001
    2. '@' → logprob: -7.126391887664795
    3. 'class' → logprob: -8.001392364501953
    4. '```' → logprob: -9.251392364501953
    5. '@property' → logprob: -9.501392364501953
    6. ' def' → logprob: -10.376392364501953
    7. 'from' → logprob: -11.376392364501953
    8. '   ' → logprob: -11.876392364501953
    9. '@dat' → logprob: -12.126392364501953
    10. ')' → logprob: -12.376392364501953

Token 333: ' is' (ID: 382)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.42409318685531616
    2. ' __' → logprob: -1.549093246459961
    3. ' def' → logprob: -2.674093246459961
    4. 'def' → logprob: -2.799093246459961
    5. '_' → logprob: -6.424093246459961
    6. '_repr' → logprob: -7.674093246459961
    7. '___' → logprob: -8.174093246459961
    8. ' ' → logprob: -8.549093246459961
    9. 'repr' → logprob: -9.299093246459961
    10. '_cal' → logprob: -9.424093246459961

Token 334: '_with' (ID: 14161)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4343727231025696
    2. '_high' → logprob: -1.4343726634979248
    3. '_health' → logprob: -2.809372663497925
    4. '_s' → logprob: -4.684372901916504
    5. '_sn' → logprob: -5.184372901916504
    6. '_h' → logprob: -5.434372901916504
    7. '_available' → logprob: -5.559372901916504
    8. '_with' → logprob: -5.809372901916504
    9. '_he' → logprob: -5.809372901916504
    10. '_vi' → logprob: -5.809372901916504

Token 335: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -7.44574936106801e-05
    2. 'n' → logprob: -10.50007438659668
    3. '_cal' → logprob: -11.25007438659668
    4. 'out' → logprob: -12.00007438659668
    5. 'i' → logprob: -12.25007438659668
    6. 'cal' → logprob: -12.50007438659668
    7. 'def' → logprob: -12.62507438659668
    8. 'int' → logprob: -12.75007438659668
    9. '```' → logprob: -12.87507438659668
    10. 'hin' → logprob: -13.25007438659668

Token 336: '_limits' (ID: 80205)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0020769787952303886
    2. 'self' → logprob: -7.002077102661133
    3. '(' → logprob: -7.877077102661133
    4. '_limit' → logprob: -8.252077102661133
    5. '_cal' → logprob: -8.377077102661133
    6. 'cal' → logprob: -9.252077102661133
    7. '_limits' → logprob: -10.502077102661133
    8. '<|end|>' → logprob: -10.502077102661133
    9. '_budget' → logprob: -10.502077102661133
    10. '_capacity' → logprob: -10.752077102661133

Token 337: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.125123977661133
    3. 'self' → logprob: -12.000123977661133
    4. ' (' → logprob: -12.000123977661133
    5. '(
' → logprob: -13.000123977661133
    6. '   ' → logprob: -14.750123977661133
    7. '(s' → logprob: -16.250123977661133
    8. ' self' → logprob: -17.000123977661133
    9. 'def' → logprob: -17.500123977661133
    10. '(

' → logprob: -17.625123977661133

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001786682871170342
    2. ' ,' → logprob: -6.876786708831787
    3. 'self' → logprob: -7.501786708831787
    4. '(self' → logprob: -8.751786231994629
    5. ',
' → logprob: -10.751786231994629
    6. ',self' → logprob: -12.251786231994629
    7. '   ' → logprob: -12.376786231994629
    8. '_,' → logprob: -12.876786231994629
    9. '
' → logprob: -13.251786231994629
    10. 'def' → logprob: -13.626786231994629

Token 339: ' nutrient' (ID: 72324)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7445161938667297
    2. ' self' → logprob: -1.494516134262085
    3. ' limits' → logprob: -1.869516134262085
    4. 'limits' → logprob: -3.119516134262085
    5. 'max' → logprob: -3.244516134262085
    6. ' max' → logprob: -3.369516134262085
    7. ' nutrient' → logprob: -3.869516134262085
    8. ' protein' → logprob: -5.994516372680664
    9. 'limit' → logprob: -6.619516372680664
    10. 'protein' → logprob: -6.619516372680664

Token 340: '_limit' (ID: 34361)
  Prédit: '_profile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.6759308576583862
    2. '_limits' → logprob: -0.8009308576583862
    3. ':' → logprob: -4.175930976867676
    4. '_limit' → logprob: -4.300930976867676
    5. 's' → logprob: -4.550930976867676
    6. 'limits' → logprob: -7.300930976867676
    7. 'profile' → logprob: -7.550930976867676
    8. '_constraints' → logprob: -7.925930976867676
    9. '_threshold' → logprob: -8.175930976867676
    10. '_profiles' → logprob: -8.550930976867676

Token 341: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06219342723488808
    2. ':' → logprob: -2.8121933937072754
    3. 'profile' → logprob: -9.062193870544434
    4. '_profile' → logprob: -10.437193870544434
    5. ' s' → logprob: -10.562193870544434
    6. ' :' → logprob: -11.437193870544434
    7. ')' → logprob: -11.562193870544434
    8. '_:' → logprob: -11.687193870544434
    9. '):' → logprob: -12.312193870544434
    10. '   ' → logprob: -12.312193870544434

Token 342: ' Nutr' (ID: 122420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8652569055557251
    2. 'N' → logprob: -1.240256905555725
    3. ' Nutr' → logprob: -1.990256905555725
    4. ':' → logprob: -2.1152567863464355
    5. 'Profile' → logprob: -3.8652567863464355
    6. ')' → logprob: -5.7402567863464355
    7. ' ' → logprob: -6.6152567863464355
    8. ' nutrient' → logprob: -6.8652567863464355
    9. ' N' → logprob: -7.1152567863464355
    10. '  ' → logprob: -7.3652567863464355

Token 343: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0011696293950080872
    2. 'ent' → logprob: -6.876169681549072
    3. 't' → logprob: -9.376169204711914
    4. 'it' → logprob: -10.501169204711914
    5. 'ite' → logprob: -11.876169204711914
    6. 'e' → logprob: -12.251169204711914
    7. 'ot' → logprob: -13.001169204711914
    8. 'r' → logprob: -13.001169204711914
    9. 'al' → logprob: -13.751169204711914
    10. 'i' → logprob: -13.876169204711914

Token 344: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -2.4272752852994017e-05
    2. 'profile' → logprob: -12.12502384185791
    3. '   ' → logprob: -12.75002384185791
    4. '[str' → logprob: -13.25002384185791
    5. 'ure' → logprob: -13.50002384185791
    6. 's' → logprob: -13.62502384185791
    7. 'str' → logprob: -13.75002384185791
    8. '_profile' → logprob: -13.75002384185791
    9. 'ro' → logprob: -14.12502384185791
    10. ' Profile' → logprob: -14.12502384185791

Token 345: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16054366528987885
    2. ',' → logprob: -1.91054368019104
    3. ' )' → logprob: -8.410543441772461
    4. ' ,' → logprob: -9.785543441772461
    5. '   ' → logprob: -11.035543441772461
    6. '):' → logprob: -11.035543441772461
    7. ':' → logprob: -12.160543441772461
    8. ',)' → logprob: -13.535543441772461
    9. '):
' → logprob: -14.285543441772461
    10. '       ' → logprob: -15.535543441772461

Token 346: ' calorie' (ID: 66006)
  Prédit: ' calorie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calorie' → logprob: -0.09297145158052444
    2. ')' → logprob: -3.0929715633392334
    3. 'cal' → logprob: -4.717971324920654
    4. ' max' → logprob: -4.967971324920654
    5. ' calor' → logprob: -4.967971324920654
    6. 'max' → logprob: -4.967971324920654
    7. ' snack' → logprob: -5.467971324920654
    8. '   ' → logprob: -5.842971324920654
    9. ' nutrient' → logprob: -7.092971324920654
    10. ' )' → logprob: -7.217971324920654

Token 347: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00687521044164896
    2. 's' → logprob: -5.381875038146973
    3. 'limit' → logprob: -6.131875038146973
    4. ':' → logprob: -10.006875038146973
    5. ' limit' → logprob: -11.881875038146973
    6. '_budget' → logprob: -11.881875038146973
    7. ' s' → logprob: -12.631875038146973
    8. 'Limit' → logprob: -12.631875038146973
    9. '_max' → logprob: -12.631875038146973
    10. ')' → logprob: -12.881875038146973

Token 348: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002844460541382432
    2. ')' → logprob: -5.877844333648682
    3. '=None' → logprob: -10.87784481048584
    4. ':int' → logprob: -12.12784481048584
    5. '):' → logprob: -12.25284481048584
    6. '=' → logprob: -12.25284481048584
    7. ' )' → logprob: -13.12784481048584
    8. ' :' → logprob: -13.62784481048584
    9. 's' → logprob: -14.12784481048584
    10. '   ' → logprob: -14.37784481048584

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002815455198287964
    2. ' int' → logprob: -5.877815246582031
    3. ':int' → logprob: -12.127815246582031
    4. '   ' → logprob: -13.127815246582031
    5. '[int' → logprob: -14.002815246582031
    6. ')' → logprob: -14.252815246582031
    7. '	int' → logprob: -14.752815246582031
    8. ':' → logprob: -14.877815246582031
    9. ' ' → logprob: -15.002815246582031
    10. 'float' → logprob: -15.502815246582031

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. '   ' → logprob: -10.750032424926758
    3. ' )' → logprob: -11.625032424926758
    4. '):' → logprob: -14.875032424926758
    5. ':' → logprob: -15.500032424926758
    6. '`)' → logprob: -15.500032424926758
    7. ',' → logprob: -15.625032424926758
    8. '):
' → logprob: -16.000032424926758
    9. '       ' → logprob: -16.000032424926758
    10. '')' → logprob: -16.250032424926758

Token 351: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5748769044876099
    2. '->' → logprob: -1.0748769044876099
    3. ')' → logprob: -2.4498767852783203
    4. ':' → logprob: -4.94987678527832
    5. ')->' → logprob: -6.32487678527832
    6. '   ' → logprob: -7.69987678527832
    7. '       ' → logprob: -8.69987678527832
    8. ',' → logprob: -11.57487678527832
    9. ' )->' → logprob: -11.57487678527832
    10. '()->' → logprob: -11.69987678527832

Token 352: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.5761317610740662
    2. 'bool' → logprob: -0.8261317610740662
    3. '   ' → logprob: -8.951131820678711
    4. ')' → logprob: -10.826131820678711
    5. '    ' → logprob: -11.451131820678711
    6. 'True' → logprob: -11.826131820678711
    7. ' True' → logprob: -12.451131820678711
    8. ' ' → logprob: -12.951131820678711
    9. '	bool' → logprob: -12.951131820678711
    10. ' ' → logprob: -12.951131820678711

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029983850196003914
    2. ':
' → logprob: -3.5299837589263916
    3. '       ' → logprob: -8.654983520507812
    4. '   ' → logprob: -11.154983520507812
    5. '):
' → logprob: -11.529983520507812
    6. ':return' → logprob: -11.529983520507812
    7. '):' → logprob: -11.904983520507812
    8. ')' → logprob: -12.154983520507812
    9. ':

' → logprob: -12.654983520507812
    10. ',' → logprob: -13.029983520507812

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.670925358776003e-05
    2. ' return' → logprob: -9.625066757202148
    3. 'return' → logprob: -14.750066757202148
    4. ' for' → logprob: -16.87506675720215
    5. '   ' → logprob: -16.87506675720215
    6. '        
' → logprob: -17.62506675720215
    7. '      ' → logprob: -18.12506675720215
    8. '           ' → logprob: -18.62506675720215
    9. '    ' → logprob: -18.75006675720215
    10. '
' → logprob: -19.12506675720215

Token 355: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0518793910741806
    2. '       ' → logprob: -3.051879405975342
    3. 'not' → logprob: -5.801879405975342
    4. ' return' → logprob: -8.801878929138184
    5. 'all' → logprob: -9.676878929138184
    6. 'self' → logprob: -10.426878929138184
    7. '   ' → logprob: -11.926878929138184
    8. '
' → logprob: -12.051878929138184
    9. 'if' (adapté à ' if') → logprob: -12.426878929138184
    10. 'for' → logprob: -13.676878929138184

Token 356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.305539608001709
    2. 'not' → logprob: -2.055539608001709
    3. ' not' → logprob: -2.680539608001709
    4. ' self' → logprob: -2.805539608001709
    5. '   ' → logprob: -5.180539608001709
    6. 'cal' → logprob: -8.805540084838867
    7. '       ' → logprob: -8.930540084838867
    8. '(self' → logprob: -9.430540084838867
    9. '(not' → logprob: -9.555540084838867
    10. ' ' → logprob: -10.430540084838867

Token 357: '.n' (ID: 1835)
  Prédit: '.cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.029797237366437912
    2. '.n' → logprob: -3.529797315597534
    3. '.' → logprob: -10.404797554016113
    4. ' .' → logprob: -12.529797554016113
    5. 'cal' → logprob: -12.779797554016113
    6. '.is' → logprob: -13.654797554016113
    7. '.c' → logprob: -13.904797554016113
    8. '._' → logprob: -14.279797554016113
    9. '	cal' → logprob: -14.279797554016113
    10. '.car' → logprob: -14.404797554016113

Token 358: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.001201062579639256
    2. 'ut' → logprob: -7.626201152801514
    3. 'utrients' → logprob: -7.876201152801514
    4. 'nut' → logprob: -8.251200675964355
    5. 'cal' → logprob: -10.376200675964355
    6. '_cal' → logprob: -12.001200675964355
    7. '.cal' → logprob: -12.626200675964355
    8. 'urt' → logprob: -12.813700675964355
    9. 'tr' → logprob: -13.126200675964355
    10. '   ' → logprob: -13.251200675964355

Token 359: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.09346242249011993
    2. 't' → logprob: -3.0934624671936035
    3. 'ent' → logprob: -3.2184624671936035
    4. 'tr' → logprob: -5.9684624671936035
    5. 'it' → logprob: -7.2184624671936035
    6. 'er' → logprob: -9.468461990356445
    7. 'tent' → logprob: -9.593461990356445
    8. '
' → logprob: -9.843461990356445
    9. 'r' → logprob: -10.093461990356445
    10. '_t' → logprob: -10.343461990356445

Token 360: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -1.4140441635390744e-05
    2. 'profile' → logprob: -11.250014305114746
    3. '_pro' → logprob: -14.375014305114746
    4. 's' → logprob: -15.875014305114746
    5. '_' → logprob: -16.50001335144043
    6. '_prof' → logprob: -16.87501335144043
    7. '_profiles' → logprob: -17.37501335144043
    8. '   ' → logprob: -17.37501335144043
    9. ' profile' → logprob: -17.50001335144043
    10. '
' → logprob: -17.50001335144043

Token 361: '.ex' (ID: 3482)
  Prédit: '.ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ex' → logprob: -0.00037836082628928125
    2. '.' → logprob: -8.000378608703613
    3. '.cal' → logprob: -10.250378608703613
    4. 'ex' → logprob: -12.625378608703613
    5. ' .' → logprob: -13.000378608703613
    6. '   ' → logprob: -14.125378608703613
    7. '>.' → logprob: -14.750378608703613
    8. '>' → logprob: -15.875378608703613
    9. '.exc' → logprob: -15.875378608703613
    10. '.is' → logprob: -16.375377655029297

Token 362: 'ceeds' (ID: 28245)
  Prédit: 'ceeds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceeds' → logprob: -0.0006780040566809475
    2. 'e' → logprob: -7.625678062438965
    3. 'ce' → logprob: -9.375678062438965
    4. 'ceed' → logprob: -9.750678062438965
    5. 'cedes' → logprob: -10.375678062438965
    6. '>' → logprob: -12.375678062438965
    7. '(' → logprob: -12.875678062438965
    8. '```' → logprob: -13.375678062438965
    9. 'eds' → logprob: -13.625678062438965
    10. '
' → logprob: -13.625678062438965

Token 363: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -15.37500286102295
    4. 'nut' → logprob: -15.75000286102295
    5. ' (' → logprob: -16.125003814697266
    6. '(noun' → logprob: -16.625003814697266
    7. '```' → logprob: -16.750003814697266
    8. '
' → logprob: -19.250003814697266
    9. ' nutrient' → logprob: -19.500003814697266
    10. '(self' → logprob: -19.875003814697266

Token 364: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -6.511406809295295e-06
    2. 'ut' → logprob: -12.000006675720215
    3. 'utrients' → logprob: -16.1250057220459
    4. 'nut' → logprob: -17.1250057220459
    5. 'um' → logprob: -17.7500057220459
    6. 'it' → logprob: -17.7500057220459
    7. 'utm' → logprob: -18.1250057220459
    8. 'u' → logprob: -18.8750057220459
    9. ' nutrient' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.2500057220459

Token 365: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.033175770193338394
    2. 'ent' → logprob: -3.5331757068634033
    3. 't' → logprob: -6.283175945281982
    4. 'it' → logprob: -6.658175945281982
    5. 'ut' → logprob: -9.408175468444824
    6. 'ot' → logprob: -10.408175468444824
    7. 'utr' → logprob: -10.408175468444824
    8. 'e' → logprob: -11.283175468444824
    9. 'et' → logprob: -11.283175468444824
    10. 'er' → logprob: -11.283175468444824

Token 366: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.7133641196996905e-05
    2. 'limit' → logprob: -10.87502670288086
    3. '_limits' → logprob: -11.87502670288086
    4. '_profile' → logprob: -13.75002670288086
    5. 'Limit' → logprob: -16.75002670288086
    6. '_' → logprob: -17.37502670288086
    7. '
' → logprob: -18.37502670288086
    8. ' limit' → logprob: -18.75002670288086
    9. '_LIMIT' → logprob: -18.75002670288086
    10. '```' → logprob: -18.75002670288086

Token 367: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00877517368644476
    2. '):' → logprob: -5.008775234222412
    3. '):
' → logprob: -6.883775234222412
    4. ' )' → logprob: -7.008775234222412
    5. ' or' → logprob: -9.633774757385254
    6. ' ):' → logprob: -10.133774757385254
    7. ' ):
' → logprob: -12.258774757385254
    8. '   ' → logprob: -12.383774757385254
    9. '):
' → logprob: -12.383774757385254
    10. '    ' → logprob: -12.633774757385254

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007804646156728268
    2. ' or' → logprob: -5.007804870605469
    3. '       ' → logprob: -6.882804870605469
    4. 'return' → logprob: -10.632804870605469
    5. ' return' → logprob: -10.882804870605469
    6. 'or' → logprob: -11.382804870605469
    7. ':' → logprob: -12.882804870605469
    8. '```' → logprob: -13.757804870605469
    9. '          ' → logprob: -13.882804870605469
    10. '   ' → logprob: -14.007804870605469

Token 369: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029196305200457573
    2. '           ' → logprob: -4.029196262359619
    3. ' return' → logprob: -4.529196262359619
    4. '       ' → logprob: -8.779196739196777
    5. '	return' → logprob: -10.779196739196777
    6. '   ' → logprob: -11.904196739196777
    7. '
' → logprob: -12.404196739196777
    8. 'False' → logprob: -12.404196739196777
    9. '               ' → logprob: -12.529196739196777
    10. 'false' → logprob: -13.529196739196777

Token 370: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. '(False' → logprob: -18.12747573852539
    4. '=False' → logprob: -19.50247573852539
    5. 'false' → logprob: -20.62747573852539
    6. '
' → logprob: -21.12747573852539
    7. '_false' → logprob: -21.12747573852539
    8. 'True' → logprob: -21.50247573852539
    9. '   ' → logprob: -22.12747573852539
    10. 'F' → logprob: -22.25247573852539

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002622894535306841
    2. '
' → logprob: -8.375262260437012
    3. '        
' → logprob: -10.875262260437012
    4. '<|end|>' → logprob: -11.875262260437012
    5. 'return' → logprob: -13.875262260437012
    6. '      ' → logprob: -14.000262260437012
    7. ',' → logprob: -14.375262260437012
    8. '	' → logprob: -14.500262260437012
    9. '           ' → logprob: -14.875262260437012
    10. '.' → logprob: -14.875262260437012

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020886708050966263
    2. '
' → logprob: -3.8958866596221924
    3. '        
' → logprob: -9.145886421203613
    4. '\n' → logprob: -9.520886421203613
    5. ' return' → logprob: -9.770886421203613
    6. ' if' → logprob: -10.645886421203613
    7. ' 
' → logprob: -10.770886421203613
    8. '	' → logprob: -11.395886421203613
    9. 'return' → logprob: -11.395886421203613
    10. '   ' → logprob: -12.020886421203613

Token 373: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002356145065277815
    2. '
' → logprob: -6.252356052398682
    3. '        
' → logprob: -8.37735652923584
    4. 'return' → logprob: -9.12735652923584
    5. ' return' → logprob: -10.25235652923584
    6. ' if' → logprob: -10.25235652923584
    7. 'if' (adapté à ' if') → logprob: -11.37735652923584
    8. '   ' → logprob: -13.37735652923584
    9. '	' → logprob: -14.25235652923584
    10. '      ' → logprob: -14.37735652923584

Token 374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06200096756219864
    2. ' self' → logprob: -2.8120009899139404
    3. 'cal' → logprob: -10.68700122833252
    4. '   ' → logprob: -11.93700122833252
    5. '           ' → logprob: -13.56200122833252
    6. '       ' → logprob: -13.56200122833252
    7. '
' → logprob: -14.18700122833252
    8. ' calorie' → logprob: -15.56200122833252
    9. '	self' → logprob: -15.68700122833252
    10. '```' → logprob: -16.437000274658203

Token 375: '.cal' (ID: 40302)
  Prédit: '.cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cal' → logprob: -0.0006472678505815566
    2. '.' → logprob: -7.375647068023682
    3. ' .' → logprob: -11.00064754486084
    4. '	cal' → logprob: -13.12564754486084
    5. 'cal' → logprob: -13.75064754486084
    6. '_cal' → logprob: -15.62564754486084
    7. '.Cal' → logprob: -15.87564754486084
    8. '   ' → logprob: -16.375646591186523
    9. 's' → logprob: -16.375646591186523
    10. ').' → logprob: -17.125646591186523

Token 376: 'ories' (ID: 3279)
  Prédit: 'ories'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ories' → logprob: -0.00011045700375689194
    2. 'orie' → logprob: -9.125110626220703
    3. 'or' → logprob: -14.375110626220703
    4. 'ory' → logprob: -14.875110626220703
    5. 'eries' → logprob: -15.500110626220703
    6. 'aries' → logprob: -15.500110626220703
    7. 'o' → logprob: -16.375110626220703
    8. ' or' → logprob: -16.625110626220703
    9. 'ries' → logprob: -16.750110626220703
    10. 'uries' → logprob: -18.125110626220703

Token 377: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25216442346572876
    2. ' >' → logprob: -1.502164363861084
    3. '()>' → logprob: -8.377164840698242
    4. '()' → logprob: -12.627164840698242
    5. '>=' → logprob: -14.752164840698242
    6. ' ' → logprob: -15.752164840698242
    7. '>
' → logprob: -15.877164840698242
    8. '">' → logprob: -15.877164840698242
    9. '>end' → logprob: -16.002164840698242
    10. ')>' → logprob: -16.127164840698242

Token 378: ' calorie' (ID: 66006)
  Prédit: ' calorie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calorie' → logprob: -0.4740847945213318
    2. 'cal' → logprob: -0.9740847945213318
    3. ' cal' → logprob: -12.474084854125977
    4. ' calor' → logprob: -13.349084854125977
    5. '_cal' → logprob: -13.849084854125977
    6. '	cal' → logprob: -14.849084854125977
    7. ' calories' → logprob: -14.974084854125977
    8. '(cal' → logprob: -15.599084854125977
    9. 'c' → logprob: -15.974084854125977
    10. '
' → logprob: -16.474084854125977

Token 379: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -5.5577775128767826e-06
    2. 'limit' → logprob: -12.375005722045898
    3. '_' → logprob: -13.875005722045898
    4. '_lim' → logprob: -15.625005722045898
    5. '_l' → logprob: -16.5000057220459
    6. '_LIMIT' → logprob: -17.3750057220459
    7. '_limits' → logprob: -17.3750057220459
    8. ' _' → logprob: -18.0000057220459
    9. '_li' → logprob: -18.1250057220459
    10. 'Limit' → logprob: -18.7500057220459

Token 380: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42172494530677795
    2. ':
' → logprob: -1.1717249155044556
    3. ':return' → logprob: -3.546725034713745
    4. '       ' → logprob: -5.296724796295166
    5. 'return' → logprob: -8.921725273132324
    6. '   ' → logprob: -9.171725273132324
    7. '<|end|>' → logprob: -9.296725273132324
    8. '
' → logprob: -10.921725273132324
    9. '           ' → logprob: -11.296725273132324
    10. ',' → logprob: -11.421725273132324

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3252272605895996
    2. '       ' → logprob: -1.3252272605895996
    3. 'return' → logprob: -4.9502272605896
    4. 'False' → logprob: -6.0752272605896
    5. ' return' → logprob: -6.7002272605896
    6. '
' → logprob: -6.8252272605896
    7. ' False' → logprob: -9.450227737426758
    8. 'True' → logprob: -9.825227737426758
    9. '   ' → logprob: -11.200227737426758
    10. '               ' → logprob: -11.450227737426758

Token 382: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0071918657049536705
    2. ' False' → logprob: -5.0071916580200195
    3. 'True' → logprob: -8.00719165802002
    4. 'return' (adapté à ' return') → logprob: -9.13219165802002
    5. '           ' → logprob: -11.00719165802002
    6. ' True' → logprob: -11.75719165802002
    7. ' return' → logprob: -12.38219165802002
    8. '0' → logprob: -12.38219165802002
    9. '       ' → logprob: -13.25719165802002
    10. '
' → logprob: -14.63219165802002

Token 383: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.176947600673884e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -15.250021934509277
    4. 'false' → logprob: -23.25002098083496
    5. 'F' → logprob: -23.50002098083496
    6. '_false' → logprob: -24.00002098083496
    7. '=False' → logprob: -24.00002098083496
    8. '(False' → logprob: -24.75002098083496
    9. ' True' → logprob: -25.50002098083496
    10. 'Fal' → logprob: -25.62502098083496

Token 384: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004809483885765076
    2. '
' → logprob: -5.754809379577637
    3. 'return' → logprob: -7.254809379577637
    4. '   ' → logprob: -7.754809379577637
    5. '	' → logprob: -7.879809379577637
    6. '	return' → logprob: -9.879809379577637
    7. ' return' → logprob: -10.379809379577637
    8. '        
' → logprob: -11.629809379577637
    9. '    
' → logprob: -12.504809379577637
    10. '	   ' → logprob: -12.504809379577637

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006593275349587202
    2. '
' → logprob: -5.256593227386475
    3. 'return' → logprob: -7.381593227386475
    4. '	' → logprob: -7.756593227386475
    5. '   ' → logprob: -8.256593704223633
    6. '	return' → logprob: -11.006593704223633
    7. ' return' → logprob: -11.131593704223633
    8. '        
' → logprob: -11.881593704223633
    9. '    
' → logprob: -12.756593704223633
    10. '
' → logprob: -13.256593704223633

Token 386: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18551211059093475
    2. '   ' → logprob: -2.310512065887451
    3. 'return' (adapté à ' return') → logprob: -2.810512065887451
    4. '
' → logprob: -5.185512065887451
    5. ' return' → logprob: -5.685512065887451
    6. '	return' → logprob: -7.185512065887451
    7. '        
' → logprob: -9.56051254272461
    8. '	' → logprob: -10.06051254272461
    9. '    
' → logprob: -10.06051254272461
    10. '  
' → logprob: -11.93551254272461

Token 387: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. ' Tru' → logprob: -18.15475082397461
    4. 'true' → logprob: -19.02975082397461
    5. 'Tr' → logprob: -19.02975082397461
    6. ' ' → logprob: -19.40475082397461
    7. '   ' → logprob: -19.40475082397461
    8. '(True' → logprob: -20.40475082397461
    9. 'tru' → logprob: -21.15475082397461
    10. 'False' → logprob: -21.52975082397461

Token 388: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14536568522453308
    2. '<|end|>' → logprob: -2.0203657150268555
    3. '   ' → logprob: -7.0203657150268555
    4. 'def' → logprob: -7.3953657150268555
    5. '

' → logprob: -7.6453657150268555
    6. 'class' → logprob: -7.8953657150268555
    7. '<|end|>' → logprob: -8.270365715026855
    8. '    
' → logprob: -10.020365715026855
    9. 'from' → logprob: -11.895365715026855
    10. '```' → logprob: -12.145365715026855

Token 389: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004373509436845779
    2. 'def' → logprob: -5.504373550415039
    3. 'from' → logprob: -8.129373550415039
    4. ' class' → logprob: -16.50437355041504
    5. '```' → logprob: -16.50437355041504
    6. '
' → logprob: -16.62937355041504
    7. '<class' → logprob: -17.25437355041504
    8. '@dat' → logprob: -18.12937355041504
    9. 'import' → logprob: -18.50437355041504
    10. '"class' → logprob: -19.25437355041504

Token 390: ' Nutr' (ID: 122420)
  Prédit: ' Snack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Snack' → logprob: -0.3554152846336365
    2. 'Snack' → logprob: -1.9804153442382812
    3. ' Meal' → logprob: -2.3554153442382812
    4. 'Meal' → logprob: -2.9804153442382812
    5. 'Diet' → logprob: -5.230415344238281
    6. ' Diet' → logprob: -5.980415344238281
    7. ' Daily' → logprob: -7.105415344238281
    8. ' Food' → logprob: -7.105415344238281
    9. 'Food' → logprob: -7.230415344238281
    10. 'Daily' → logprob: -7.355415344238281

Token 391: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -8.435139898210764e-05
    2. 'itional' → logprob: -10.000083923339844
    3. 'ition' → logprob: -11.375083923339844
    4. 'ients' → logprob: -11.750083923339844
    5. 'ent' → logprob: -12.250083923339844
    6. 'iment' → logprob: -12.875083923339844
    7. 'it' → logprob: -13.125083923339844
    8. 'i' → logprob: -13.875083923339844
    9. 'ite' → logprob: -14.000083923339844
    10. '```' → logprob: -14.125083923339844

Token 392: 'Limits' (ID: 87018)
  Prédit: 'Limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limit' → logprob: -0.05983750522136688
    2. 'Profile' → logprob: -3.309837579727173
    3. 'Limits' → logprob: -4.559837341308594
    4. 'Constraint' → logprob: -5.309837341308594
    5. 'Goal' → logprob: -5.934837341308594
    6. 'Limiter' → logprob: -6.809837341308594
    7. 'Plan' → logprob: -7.559837341308594
    8. 'Requirement' → logprob: -7.934837341308594
    9. 'Filter' → logprob: -8.059837341308594
    10. 'Constraints' → logprob: -8.559837341308594

Token 393: '(N' (ID: 10564)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38823047280311584
    2. ':
' → logprob: -1.1382304430007935
    3. '(N' → logprob: -6.638230323791504
    4. ':N' → logprob: -10.638230323791504
    5. '   ' → logprob: -12.013230323791504
    6. '(object' → logprob: -12.138230323791504
    7. '(' → logprob: -12.763230323791504
    8. ':
' → logprob: -12.763230323791504
    9. ':

' → logprob: -12.888230323791504
    10. '(
' → logprob: -13.513230323791504

Token 394: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.00016468366084154695
    2. 'ut' → logprob: -8.750164985656738
    3. 'utrients' → logprob: -13.000164985656738
    4. 't' → logprob: -14.500164985656738
    5. 'e' → logprob: -14.625164985656738
    6. 'urt' → logprob: -14.875164985656738
    7. '__' → logprob: -14.875164985656738
    8. 'N' → logprob: -15.000164985656738
    9. 'nut' → logprob: -15.125164985656738
    10. 'tuple' → logprob: -15.250164985656738

Token 395: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.01645507663488388
    2. 'utr' → logprob: -4.141455173492432
    3. 'ent' → logprob: -8.516454696655273
    4. 'r' → logprob: -9.266454696655273
    5. 'it' → logprob: -9.391454696655273
    6. 'er' → logprob: -11.266454696655273
    7. 'tr' → logprob: -11.391454696655273
    8. 'itent' → logprob: -12.766454696655273
    9. 'ite' → logprob: -12.891454696655273
    10. 'ut' → logprob: -12.891454696655273

Token 396: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -8.895480277715251e-06
    2. 'profile' → logprob: -11.750008583068848
    3. ' Profile' → logprob: -15.375008583068848
    4. 'Profiles' → logprob: -15.375008583068848
    5. 'Pro' → logprob: -15.875008583068848
    6. 'Profil' → logprob: -16.000009536743164
    7. '_profile' → logprob: -16.375009536743164
    8. 'ro' → logprob: -16.375009536743164
    9. 'PROFILE' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.750009536743164

Token 397: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28125813603401184
    2. '):
' → logprob: -1.4062581062316895
    3. ',' → logprob: -10.156258583068848
    4. '):
' → logprob: -10.531258583068848
    5. ')' → logprob: -11.031258583068848
    6. '):

' → logprob: -11.156258583068848
    7. ':' → logprob: -11.906258583068848
    8. '   ' → logprob: -13.406258583068848
    9. ']:' → logprob: -14.281258583068848
    10. ':
' → logprob: -14.406258583068848

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027276931330561638
    2. 'def' → logprob: -3.7772769927978516
    3. ' def' → logprob: -6.277276992797852
    4. '<|end|>' → logprob: -6.777276992797852
    5. ')' → logprob: -7.652276992797852
    6. '):
' → logprob: -8.902276992797852
    7. ' pass' → logprob: -9.027276992797852
    8. ':' → logprob: -9.402276992797852
    9. '
' → logprob: -10.152276992797852
    10. '):' → logprob: -10.277276992797852

Token 399: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16326771676540375
    2. 'pass' → logprob: -1.913267731666565
    3. '   ' → logprob: -5.913267612457275
    4. ' pass' → logprob: -8.538268089294434
    5. ' def' → logprob: -8.913268089294434
    6. '	pass' → logprob: -13.413268089294434
    7. '...' → logprob: -13.788268089294434
    8. '@' → logprob: -14.288268089294434
    9. '"""' → logprob: -14.413268089294434
    10. '__' → logprob: -14.413268089294434

Token 400: ' In' (ID: 730)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.025006629526615143
    2. 'def' → logprob: -4.2750067710876465
    3. '"""' → logprob: -4.9000067710876465
    4. ' pass' → logprob: -6.0250067710876465
    5. '   ' → logprob: -7.9000067710876465
    6. '"""
' → logprob: -8.400006294250488
    7. '#' → logprob: -8.900006294250488
    8. '...' → logprob: -10.025006294250488
    9. ' def' → logprob: -10.525006294250488
    10. '	pass' → logprob: -10.525006294250488

Token 401: 'herits' (ID: 88989)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.45412763953208923
    2. 't' → logprob: -1.8291276693344116
    3. 'herits' → logprob: -2.329127550125122
    4. 'put' → logprob: -3.079127550125122
    5. 'itial' → logprob: -4.079127788543701
    6. 'itialize' → logprob: -4.204127788543701
    7. 'def' → logprob: -4.954127788543701
    8. ' def' → logprob: -5.329127788543701
    9. 'puts' → logprob: -5.704127788543701
    10. 'herit' → logprob: -5.704127788543701

Token 402: ' from' (ID: 591)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.14739929139614105
    2. '   ' → logprob: -2.6473991870880127
    3. ' pass' → logprob: -3.6473991870880127
    4. 'from' → logprob: -3.8973991870880127
    5. '#' → logprob: -4.397399425506592
    6. 'the' → logprob: -6.522399425506592
    7. '...' → logprob: -6.772399425506592
    8. 'def' → logprob: -6.772399425506592
    9. '"""' → logprob: -6.897399425506592
    10. ' the' → logprob: -6.897399425506592

Token 403: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00525984913110733
    2. ' Nutr' → logprob: -5.255259990692139
    3. '   ' → logprob: -10.63025951385498
    4. ' N' → logprob: -14.25525951385498
    5. '	N' → logprob: -14.38025951385498
    6. 'Nut' → logprob: -15.50525951385498
    7. 'Nutrition' → logprob: -15.50525951385498
    8. ' nutrient' → logprob: -16.380260467529297
    9. '`' → logprob: -16.630260467529297
    10. 'class' → logprob: -17.255260467529297

Token 404: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.04574348405003548
    2. 'utr' → logprob: -3.295743465423584
    3. 'ent' → logprob: -4.920743465423584
    4. 'ut' → logprob: -8.170743942260742
    5. 't' → logprob: -10.295743942260742
    6. 'it' → logprob: -10.420743942260742
    7. 'tr' → logprob: -10.670743942260742
    8. 'uent' → logprob: -12.545743942260742
    9. 'er' → logprob: -12.920743942260742
    10. 'r' → logprob: -14.295743942260742

Token 405: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -6.034592388459714e-06
    2. ' Profile' → logprob: -12.500005722045898
    3. 'profile' → logprob: -13.875005722045898
    4. 'Limits' → logprob: -15.375005722045898
    5. 'Pro' → logprob: -15.500005722045898
    6. '_profile' → logprob: -15.625005722045898
    7. 'Profiles' → logprob: -15.625005722045898
    8. ' profile' → logprob: -16.3750057220459
    9. '(Profile' → logprob: -16.5000057220459
    10. 'Profil' → logprob: -17.1250057220459

Token 406: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' use' (ID: 1199)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.545671284198761
    2. ' represent' → logprob: -1.4206712245941162
    3. 'add' → logprob: -2.295671224594116
    4. 'allow' → logprob: -3.045671224594116
    5. ' add' → logprob: -4.295671463012695
    6. 'provide' → logprob: -5.420671463012695
    7. 'extend' → logprob: -6.295671463012695
    8. 'use' → logprob: -6.545671463012695
    9. 'inherit' → logprob: -6.920671463012695
    10. 'initialize' → logprob: -7.295671463012695

Token 408: ' same' (ID: 2684)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.810158908367157
    2. ' the' → logprob: -0.935158908367157
    3. 'the' → logprob: -2.9351589679718018
    4. '__' → logprob: -3.3101589679718018
    5. '   ' → logprob: -3.6851589679718018
    6. 'its' → logprob: -4.185158729553223
    7. 'def' → logprob: -4.560158729553223
    8. '#' → logprob: -5.185158729553223
    9. 'pass' → logprob: -6.060158729553223
    10. ' def' → logprob: -6.185158729553223

Token 409: ' interface' (ID: 6225)
  Prédit: 'constructor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constructor' → logprob: -1.0222537517547607
    2. 'initializer' → logprob: -1.2722537517547607
    3. 'interface' → logprob: -1.6472537517547607
    4. ' constructor' → logprob: -2.8972537517547607
    5. ' interface' → logprob: -3.1472537517547607
    6. ' initializer' → logprob: -4.02225399017334
    7. ' initialization' → logprob: -4.39725399017334
    8. 'initial' → logprob: -5.02225399017334
    9. '__' → logprob: -5.14725399017334
    10. 'init' → logprob: -5.27225399017334

Token 410: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6099517345428467
    2. '<|end|>' → logprob: -1.2349517345428467
    3. ' pass' → logprob: -1.9849517345428467
    4. 'pass' → logprob: -4.109951972961426
    5. '
' → logprob: -4.859951972961426
    6. '	pass' → logprob: -5.859951972961426
    7. '<|end|>' → logprob: -7.359951972961426
    8. ')' → logprob: -9.109951972961426
    9. '    
' → logprob: -9.359951972961426
    10. 'def' → logprob: -9.484951972961426

Token 412: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.4878501892089844
    2. '   ' → logprob: -0.9878501892089844
    3. ' pass' → logprob: -4.487850189208984
    4. 'def' → logprob: -6.487850189208984
    5. '	pass' → logprob: -7.112850189208984
    6. '...' → logprob: -9.362850189208984
    7. ' def' → logprob: -12.862850189208984
    8. '<|end|>' → logprob: -13.487850189208984
    9. '    
' → logprob: -13.737850189208984
    10. '       ' → logprob: -13.737850189208984

Token 413: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03236326202750206
    2. '<|end|>' → logprob: -4.157363414764404
    3. '

' → logprob: -4.532363414764404
    4. 'class' → logprob: -5.532363414764404
    5. 'def' → logprob: -6.782363414764404
    6. '<|end|>' → logprob: -8.157362937927246
    7. '


' → logprob: -10.032362937927246
    8. '   ' → logprob: -12.157362937927246
    9. '
' → logprob: -12.782362937927246
    10. '    
' → logprob: -13.032362937927246

Token 414: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2526451051235199
    2. 'def' → logprob: -1.5026451349258423
    3. 'from' → logprob: -7.252645015716553
    4. '
' → logprob: -12.002645492553711
    5. ' class' → logprob: -14.127645492553711
    6. '  
' → logprob: -15.877645492553711
    7. 'import' → logprob: -16.00264549255371
    8. '```' → logprob: -16.25264549255371
    9. '    
' → logprob: -16.87764549255371
    10. '<class' → logprob: -16.87764549255371

Token 415: ' Snack' (ID: 117545)
  Prédit: ' Snack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Snack' → logprob: -0.685126006603241
    2. 'Snack' → logprob: -0.810126006603241
    3. 'Meal' → logprob: -4.060125827789307
    4. ' Meal' → logprob: -4.310125827789307
    5. 'Diet' → logprob: -4.435125827789307
    6. ' Diet' → logprob: -6.310125827789307
    7. 'Daily' → logprob: -6.560125827789307
    8. 'Sn' → logprob: -7.060125827789307
    9. 'Food' → logprob: -7.185125827789307
    10. 'User' → logprob: -7.560125827789307

Token 416: 'Collection' (ID: 4160)
  Prédit: 'Selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -0.9608722925186157
    2. 'Collection' → logprob: -1.7108722925186157
    3. 'Selection' → logprob: -1.9608722925186157
    4. 'Planner' → logprob: -1.9608722925186157
    5. 'Pack' → logprob: -3.585872173309326
    6. 'Manager' → logprob: -3.960872173309326
    7. 'Basket' → logprob: -3.960872173309326
    8. 'Plan' → logprob: -4.460872173309326
    9. 'Repository' → logprob: -4.710872173309326
    10. 'Box' → logprob: -4.710872173309326

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040064091444946826
    2. ':
' → logprob: -7.875400543212891
    3. '(' → logprob: -12.00040054321289
    4. '(object' → logprob: -12.75040054321289
    5. '():' → logprob: -12.87540054321289
    6. ' :' → logprob: -13.25040054321289
    7. '(List' → logprob: -13.50040054321289
    8. ':def' → logprob: -13.87540054321289
    9. '(S' → logprob: -14.00040054321289
    10. ':

' → logprob: -14.12540054321289

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.159660890465602e-05
    2. 'def' → logprob: -10.00007152557373
    3. ' def' → logprob: -10.62507152557373
    4. '
' → logprob: -13.87507152557373
    5. '    
' → logprob: -14.75007152557373
    6. '	def' → logprob: -16.000072479248047
    7. ' ' → logprob: -16.375072479248047
    8. ':' → logprob: -16.875072479248047
    9. 'class' → logprob: -17.250072479248047
    10. '   ' → logprob: -17.375072479248047

Token 419: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16670934855937958
    2. ' def' → logprob: -1.916709303855896
    3. '   ' → logprob: -5.0417094230651855
    4. 'class' → logprob: -14.291708946228027
    5. ' ' → logprob: -14.916708946228027
    6. '	def' → logprob: -15.166708946228027
    7. '
' → logprob: -16.416709899902344
    8. '```' → logprob: -16.541709899902344
    9. '  ' → logprob: -16.791709899902344
    10. ':def' → logprob: -16.916709899902344

Token 420: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002342707710340619
    2. ' def' → logprob: -6.252342700958252
    3. 'def' → logprob: -8.37734317779541
    4. '__' → logprob: -8.62734317779541
    5. '_init' → logprob: -13.25234317779541
    6. ' ' → logprob: -14.00234317779541
    7. ' ___' → logprob: -14.87734317779541
    8. '```' → logprob: -15.00234317779541
    9. 'init' → logprob: -15.25234317779541
    10. ' __(' → logprob: -15.25234317779541

Token 421: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.021762153133749962
    2. 'it' → logprob: -3.8967621326446533
    3. 'nit' → logprob: -6.896762371063232
    4. 'def' → logprob: -8.771761894226074
    5. 'iter' → logprob: -11.396761894226074
    6. 't' → logprob: -12.271761894226074
    7. 'its' → logprob: -12.396761894226074
    8. '`' → logprob: -12.521761894226074
    9. '```' → logprob: -12.646761894226074
    10. '{' → logprob: -12.771761894226074

Token 422: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01128630992025137
    2. '(self' → logprob: -4.51128625869751
    3. '_(' → logprob: -9.136286735534668
    4. '__(
' → logprob: -9.261286735534668
    5. 'self' → logprob: -10.886286735534668
    6. ' (' → logprob: -12.011286735534668
    7. '(' → logprob: -12.261286735534668
    8. '__' → logprob: -13.011286735534668
    9. '```' → logprob: -13.886286735534668
    10. '   ' → logprob: -14.136286735534668

Token 423: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.2987729102605954e-05
    2. ' self' → logprob: -10.250042915344238
    3. '       ' → logprob: -12.375042915344238
    4. '
' → logprob: -13.250042915344238
    5. '   ' → logprob: -14.125042915344238
    6. '):
' → logprob: -14.750042915344238
    7. ')' → logprob: -15.875042915344238
    8. '	self' → logprob: -16.750043869018555
    9. '0' → logprob: -17.125043869018555
    10. ',' → logprob: -17.500043869018555

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050664763897657394
    2. 'self' → logprob: -3.0506646633148193
    3. '       ' → logprob: -7.050664901733398
    4. '   ' → logprob: -7.800664901733398
    5. ' self' → logprob: -8.300664901733398
    6. '):
' → logprob: -8.425664901733398
    7. ')' → logprob: -8.550664901733398
    8. '(self' → logprob: -10.425664901733398
    9. ' ,' → logprob: -10.425664901733398
    10. ',self' → logprob: -10.425664901733398

Token 425: ' snacks' (ID: 46837)
  Prédit: ' snacks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' snacks' → logprob: -0.33627188205718994
    2. 'sn' → logprob: -1.33627188205719
    3. 'self' → logprob: -3.8362717628479004
    4. ' self' → logprob: -7.3362717628479
    5. '   ' → logprob: -8.961272239685059
    6. ' ' → logprob: -8.961272239685059
    7. ')' → logprob: -9.336272239685059
    8. ' snack' → logprob: -10.336272239685059
    9. 'max' → logprob: -10.961272239685059
    10. '_sn' → logprob: -11.211272239685059

Token 426: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.320199877838604e-07
    2. '_:' → logprob: -15.375
    3. ' :' → logprob: -16.375
    4. '):' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '__:' → logprob: -20.125
    7. '   ' → logprob: -20.5
    8. '：' → logprob: -20.5
    9. ':list' → logprob: -20.625
    10. ':
' → logprob: -21.0

Token 427: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.39083924889564514
    2. ' List' → logprob: -1.1408392190933228
    3. 'Iterable' → logprob: -5.765839099884033
    4. ' Iterable' → logprob: -7.140839099884033
    5. '   ' → logprob: -10.765839576721191
    6. '	List' → logprob: -12.515839576721191
    7. ' ' → logprob: -12.765839576721191
    8. '[List' → logprob: -13.015839576721191
    9. ' list' → logprob: -13.265839576721191
    10. '       ' → logprob: -13.515839576721191

Token 428: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '[
' → logprob: -13.375001907348633
    3. '['' → logprob: -14.750001907348633
    4. '```' → logprob: -16.875001907348633
    5. ' [' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '
' → logprob: -17.500001907348633
    8. ' ' → logprob: -17.875001907348633
    9. '):
' → logprob: -18.000001907348633
    10. ')' → logprob: -18.250001907348633

Token 429: 'Snack' (ID: 86358)
  Prédit: 'Snack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Snack' → logprob: -4.961759259458631e-06
    2. ' Snack' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.000004768371582
    4. 'Sn' → logprob: -15.625004768371582
    5. ' ' → logprob: -15.750004768371582
    6. 'Snippet' → logprob: -17.5000057220459
    7. '  ' → logprob: -18.6250057220459
    8. 'SN' → logprob: -18.7500057220459
    9. 'Snackbar' → logprob: -18.7500057220459
    10. 'Sne' → logprob: -19.6250057220459

Token 430: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.4830600321292877
    2. ']):' → logprob: -1.2330600023269653
    3. '])' → logprob: -3.108060121536255
    4. ']' → logprob: -3.233060121536255
    5. ')' → logprob: -5.108059883117676
    6. '):' → logprob: -6.858059883117676
    7. '):
' → logprob: -7.858059883117676
    8. ']:' → logprob: -9.983059883117676
    9. '']):
' → logprob: -10.858059883117676
    10. ':' → logprob: -11.483059883117676

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005480298423208296
    2. 'self' → logprob: -7.625547885894775
    3. ' self' → logprob: -10.250548362731934
    4. '   ' → logprob: -11.000548362731934
    5. '
' → logprob: -13.000548362731934
    6. ',' → logprob: -13.625548362731934
    7. ':' → logprob: -14.375548362731934
    8. '[' → logprob: -14.375548362731934
    9. '	self' → logprob: -14.500548362731934
    10. '(self' → logprob: -15.000548362731934

Token 432: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0067310030572116375
    2. ' self' → logprob: -5.256731033325195
    3. '       ' → logprob: -6.506731033325195
    4. '	self' → logprob: -13.506731033325195
    5. '   ' → logprob: -13.756731033325195
    6. '(self' → logprob: -15.881731033325195
    7. ' ' → logprob: -16.381731033325195
    8. '[self' → logprob: -16.881731033325195
    9. 's' → logprob: -18.506731033325195
    10. ',self' → logprob: -19.131731033325195

Token 433: '.sn' (ID: 71683)
  Prédit: '.sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sn' → logprob: -0.20272044837474823
    2. '._' → logprob: -1.7027204036712646
    3. ' .' → logprob: -6.952720642089844
    4. '.' → logprob: -8.452720642089844
    5. '.Sn' → logprob: -9.702720642089844
    6. '   ' → logprob: -10.452720642089844
    7. '_sn' → logprob: -10.827720642089844
    8. '.s' → logprob: -11.327720642089844
    9. '       ' → logprob: -12.327720642089844
    10. '.sk' → logprob: -12.952720642089844

Token 434: 'acks' (ID: 7367)
  Prédit: 'acks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acks' → logprob: -4.787507714354433e-05
    2. 'aks' → logprob: -10.37504768371582
    3. 'cks' → logprob: -12.50004768371582
    4. 's' → logprob: -13.12504768371582
    5. '
' → logprob: -13.12504768371582
    6. 'a' → logprob: -13.62504768371582
    7. '_' → logprob: -13.62504768371582
    8. '[' → logprob: -14.12504768371582
    9. '```' → logprob: -14.12504768371582
    10. 'axs' → logprob: -14.37504768371582

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132743537425995
    2. ' =' → logprob: -1.3132743835449219
    3. ':' → logprob: -11.813274383544922
    4. ' ' → logprob: -12.563274383544922
    5. '_' → logprob: -14.563274383544922
    6. '   ' → logprob: -14.688274383544922
    7. 's' → logprob: -15.313274383544922
    8. '=[]' → logprob: -15.813274383544922
    9. ')' → logprob: -16.563274383544922
    10. '  ' → logprob: -17.063274383544922

Token 436: ' snacks' (ID: 46837)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -6.754368223482743e-05
    2. ' snacks' → logprob: -9.625067710876465
    3. '[]' → logprob: -13.500067710876465
    4. '[]
' → logprob: -16.75006675720215
    5. ' sn' → logprob: -17.37506675720215
    6. '[' → logprob: -17.50006675720215
    7. '(sn' → logprob: -17.50006675720215
    8. 'list' → logprob: -18.12506675720215
    9. 'Sn' → logprob: -19.00006675720215
    10. '_sn' → logprob: -19.00006675720215

Token 437: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03109710104763508
    2. '<|end|>' → logprob: -3.906097173690796
    3. '   ' → logprob: -5.031096935272217
    4. '

' → logprob: -6.031096935272217
    5. '<|end|>' → logprob: -7.031096935272217
    6. '    
' → logprob: -7.531096935272217
    7. 'def' → logprob: -9.281097412109375
    8. '  
' → logprob: -11.281097412109375
    9. '
' → logprob: -12.156097412109375
    10. ' 
' → logprob: -12.406097412109375

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010664576664566994
    2. 'def' → logprob: -4.635664463043213
    3. ' def' → logprob: -7.135664463043213
    4. '
' → logprob: -9.385664939880371
    5. '    
' → logprob: -11.260664939880371
    6. '<|end|>' → logprob: -11.510664939880371
    7. '```' → logprob: -13.385664939880371
    8. '	def' → logprob: -13.885664939880371
    9. '<|end|>' → logprob: -14.010664939880371
    10. ')' → logprob: -15.135664939880371

Token 439: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.3795937522663735e-05
    2. '   ' → logprob: -11.12502384185791
    3. ' def' → logprob: -11.62502384185791
    4. 'from' → logprob: -18.000022888183594
    5. 'class' → logprob: -18.250022888183594
    6. '
' → logprob: -18.375022888183594
    7. '	def' → logprob: -19.250022888183594
    8. '```' → logprob: -19.250022888183594
    9. '@' → logprob: -19.375022888183594
    10. '    
' → logprob: -21.625022888183594

Token 440: ' filter' (ID: 6690)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.6031790971755981
    2. ' filter' → logprob: -1.1031790971755981
    3. '__' → logprob: -3.6031789779663086
    4. ' def' → logprob: -3.6031789779663086
    5. 'def' → logprob: -3.7281789779663086
    6. ' find' → logprob: -4.478178977966309
    7. ' __' → logprob: -4.978178977966309
    8. 'find' → logprob: -5.353178977966309
    9. '_filter' → logprob: -5.353178977966309
    10. ' get' → logprob: -5.978178977966309

Token 441: '_allowed' (ID: 104427)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019460683688521385
    2. '_with' → logprob: -4.144460678100586
    3. '(' → logprob: -6.019460678100586
    4. '_by' → logprob: -7.894460678100586
    5. 'self' → logprob: -8.394460678100586
    6. '_sn' → logprob: -8.894460678100586
    7. '(lambda' → logprob: -9.394460678100586
    8. '(
' → logprob: -9.644460678100586
    9. '_items' → logprob: -10.394460678100586
    10. '_self' → logprob: -10.519460678100586

Token 442: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010534112807363272
    2. '(' → logprob: -7.126053333282471
    3. '_sn' → logprob: -8.376053810119629
    4. '(
' → logprob: -11.626053810119629
    5. '(sn' → logprob: -12.751053810119629
    6. 'self' → logprob: -12.876053810119629
    7. ' (' → logprob: -13.126053810119629
    8. 'sn' → logprob: -14.126053810119629
    9. '_by' → logprob: -15.126053810119629
    10. 's' → logprob: -15.126053810119629

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01503660250455141
    2. 'self' → logprob: -4.265036582946777
    3. '(self' → logprob: -7.265036582946777
    4. ' ,' → logprob: -9.265036582946777
    5. ',self' → logprob: -10.640036582946777
    6. ',
' → logprob: -11.015036582946777
    7. ' self' → logprob: -11.390036582946777
    8. ')' → logprob: -11.515036582946777
    9. '_,' → logprob: -12.640036582946777
    10. 's' → logprob: -13.140036582946777

Token 444: ' limits' (ID: 22406)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.30017444491386414
    2. ' nutrient' → logprob: -1.4251744747161865
    3. 'self' → logprob: -4.175174236297607
    4. '   ' → logprob: -6.175174236297607
    5. ' self' → logprob: -7.800174236297607
    6. '       ' → logprob: -7.800174236297607
    7. '     ' → logprob: -9.675174713134766
    8. 'sn' → logprob: -9.675174713134766
    9. '
' → logprob: -9.800174713134766
    10. 'allowed' → logprob: -9.800174713134766

Token 445: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025328563060611486
    2. 'self' → logprob: -6.627532958984375
    3. ',' → logprob: -7.002532958984375
    4. ')' → logprob: -9.252532958984375
    5. '(self' → logprob: -9.752532958984375
    6. '   ' → logprob: -9.752532958984375
    7. ' :' → logprob: -10.627532958984375
    8. '       ' → logprob: -10.752532958984375
    9. ' self' → logprob: -11.502532958984375
    10. ':self' → logprob: -11.627532958984375

Token 446: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4750313460826874
    2. ' Nutr' → logprob: -0.9750313758850098
    3. ' ' → logprob: -7.97503137588501
    4. '   ' → logprob: -8.850030899047852
    5. ' N' → logprob: -9.100030899047852
    6. 'Snack' → logprob: -9.475030899047852
    7. ''N' → logprob: -9.600030899047852
    8. ' Snack' → logprob: -10.100030899047852
    9. 'Nutrition' → logprob: -10.350030899047852
    10. '  ' → logprob: -10.475030899047852

Token 447: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -2.2961512513575144e-05
    2. 'r' → logprob: -11.500022888183594
    3. 'ir' → logprob: -11.625022888183594
    4. 'utr' → logprob: -13.375022888183594
    5. 'it' → logprob: -14.375022888183594
    6. 'ent' → logprob: -14.375022888183594
    7. 'er' → logprob: -15.000022888183594
    8. 't' → logprob: -15.375022888183594
    9. 'tr' → logprob: -15.875022888183594
    10. 'iend' → logprob: -16.125022888183594

Token 448: 'Limits' (ID: 87018)
  Prédit: 'Limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limits' → logprob: -3.531315314830863e-06
    2. 'limits' → logprob: -12.875003814697266
    3. ' Limits' → logprob: -14.625003814697266
    4. '_limits' → logprob: -15.125003814697266
    5. 'Limit' → logprob: -16.250003814697266
    6. ')' → logprob: -17.250003814697266
    7. ' limits' → logprob: -17.375003814697266
    8. '   ' → logprob: -18.250003814697266
    9. 'imits' → logprob: -19.250003814697266
    10. '```' → logprob: -19.625003814697266

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032879042555578053
    2. ')' → logprob: -8.37532901763916
    3. ' ,' → logprob: -9.25032901763916
    4. '   ' → logprob: -13.75032901763916
    5. ',
' → logprob: -14.87532901763916
    6. ',)' → logprob: -15.62532901763916
    7. '‌,' → logprob: -16.000328063964844
    8. ',List' → logprob: -16.250328063964844
    9. ',int' → logprob: -16.625328063964844
    10. ' )' → logprob: -16.750328063964844

Token 450: ' calorie' (ID: 66006)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.3878862261772156
    2. ' calorie' → logprob: -1.1378862857818604
    3. 'max' → logprob: -7.512886047363281
    4. '   ' → logprob: -8.137886047363281
    5. ' max' → logprob: -9.512886047363281
    6. '       ' → logprob: -10.762886047363281
    7. ' cal' → logprob: -10.887886047363281
    8. ' ' → logprob: -11.137886047363281
    9. ')' → logprob: -11.887886047363281
    10. ' calor' → logprob: -12.012886047363281

Token 451: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.7610454708337784e-05
    2. '_limits' → logprob: -10.875027656555176
    3. 's' → logprob: -12.750027656555176
    4. 'limit' → logprob: -12.875027656555176
    5. '_lim' → logprob: -14.125027656555176
    6. '_max' → logprob: -14.250027656555176
    7. '_l' → logprob: -15.125027656555176
    8. '_' → logprob: -15.125027656555176
    9. '_threshold' → logprob: -15.500027656555176
    10. '_LIMIT' → logprob: -15.625027656555176

Token 452: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.52919222577475e-05
    2. ':int' → logprob: -9.875075340270996
    3. ')' → logprob: -10.750075340270996
    4. '):' → logprob: -13.250075340270996
    5. '):
' → logprob: -15.625075340270996
    6. 'int' → logprob: -15.750075340270996
    7. ' :' → logprob: -16.12507438659668
    8. '_:' → logprob: -16.12507438659668
    9. '=' → logprob: -16.87507438659668
    10. '   ' → logprob: -18.37507438659668

Token 453: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048528365790844
    2. ' int' → logprob: -4.511048316955566
    3. ')' → logprob: -14.761048316955566
    4. ':int' → logprob: -15.261048316955566
    5. '   ' → logprob: -16.761049270629883
    6. '	int' → logprob: -17.011049270629883
    7. '[int' → logprob: -17.136049270629883
    8. ' ' → logprob: -17.761049270629883
    9. '=int' → logprob: -18.761049270629883
    10. ':' → logprob: -18.761049270629883

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.069664333248511e-05
    2. '   ' → logprob: -11.375020980834961
    3. ' )' → logprob: -11.750020980834961
    4. ',)' → logprob: -14.875020980834961
    5. '`)' → logprob: -14.875020980834961
    6. '       ' → logprob: -15.375020980834961
    7. '')' → logprob: -15.500020980834961
    8. ')->' → logprob: -16.62502098083496
    9. ' ' → logprob: -16.75002098083496
    10. '")' → logprob: -17.00002098083496

Token 455: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.7090132832527161
    2. ' ->' → logprob: -0.7090132832527161
    3. ')' → logprob: -4.33401346206665
    4. ')->' → logprob: -6.20901346206665
    5. ':' → logprob: -7.58401346206665
    6. '   ' → logprob: -9.834012985229492
    7. '       ' → logprob: -10.584012985229492
    8. '-' → logprob: -12.209012985229492
    9. '>' → logprob: -12.584012985229492
    10. ' )->' → logprob: -12.584012985229492

Token 456: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0012352262856438756
    2. ' List' → logprob: -6.751235008239746
    3. 'Iterable' → logprob: -10.376235008239746
    4. ''' → logprob: -11.001235008239746
    5. '[List' → logprob: -11.876235008239746
    6. '	List' → logprob: -12.376235008239746
    7. '   ' → logprob: -13.251235008239746
    8. 'list' → logprob: -13.626235008239746
    9. 'Iterator' → logprob: -13.876235008239746
    10. 'Snack' → logprob: -14.876235008239746

Token 457: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[
' → logprob: -14.250000953674316
    3. '[int' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '```' → logprob: -16.500001907348633
    6. '
' → logprob: -16.625001907348633
    7. ' [' → logprob: -17.250001907348633
    8. '       ' → logprob: -18.375001907348633
    9. '<' → logprob: -19.000001907348633
    10. '[S' → logprob: -19.500001907348633

Token 458: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5994676947593689
    2. ')' → logprob: -1.2244677543640137
    3. '):' → logprob: -2.3494677543640137
    4. ']' → logprob: -4.099467754364014
    5. ']:' → logprob: -4.224467754364014
    6. ']:
' → logprob: -4.224467754364014
    7. '   ' → logprob: -4.849467754364014
    8. '):
' → logprob: -5.349467754364014
    9. '       ' → logprob: -6.224467754364014
    10. ':' → logprob: -7.349467754364014

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008489366737194359
    2. 'return' → logprob: -7.250848770141602
    3. 'result' → logprob: -9.875848770141602
    4. ' return' → logprob: -10.375848770141602
    5. '[]' → logprob: -10.500848770141602
    6. '[' → logprob: -11.375848770141602
    7. '```' → logprob: -12.375848770141602
    8. 'results' → logprob: -12.875848770141602
    9. 'tokens' → logprob: -13.000848770141602
    10. 'filtered' → logprob: -13.750848770141602

Token 460: ' allowed' (ID: 9279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.653043806552887
    2. 'allowed' (adapté à ' allowed') → logprob: -0.903043806552887
    3. '       ' → logprob: -2.653043746948242
    4. 'result' → logprob: -5.653043746948242
    5. ' return' → logprob: -8.778043746948242
    6. ' allowed' → logprob: -9.903043746948242
    7. '[' → logprob: -10.778043746948242
    8. 'filtered' → logprob: -11.153043746948242
    9. 'allow' → logprob: -12.028043746948242
    10. 'ids' → logprob: -12.153043746948242

Token 461: ' =' (ID: 314)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.6869610548019409
    2. ' =' → logprob: -0.9369610548019409
    3. '_sn' → logprob: -2.8119611740112305
    4. '=' → logprob: -3.1869611740112305
    5. '_' → logprob: -5.6869611740112305
    6. '   ' → logprob: -8.68696117401123
    7. '=[]' → logprob: -10.31196117401123
    8. '[]' → logprob: -10.31196117401123
    9. 'sn' → logprob: -11.31196117401123
    10. 's' → logprob: -11.68696117401123

Token 462: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08231836557388306
    2. '[]
' → logprob: -2.5823183059692383
    3. '[
' → logprob: -6.082318305969238
    4. '[' → logprob: -6.832318305969238
    5. '[]

' → logprob: -10.457318305969238
    6. '[int' → logprob: -11.457318305969238
    7. ' []' → logprob: -11.957318305969238
    8. '[self' → logprob: -12.457318305969238
    9. '[token' → logprob: -12.832318305969238
    10. '[i' → logprob: -13.082318305969238

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000194361709873192
    2. ' for' → logprob: -8.875194549560547
    3. '	' → logprob: -10.125194549560547
    4. 'for' → logprob: -11.750194549560547
    5. '	for' → logprob: -13.000194549560547
    6. '	   ' → logprob: -13.125194549560547
    7. '   ' → logprob: -13.250194549560547
    8. '
' → logprob: -14.750194549560547
    9. '        
' → logprob: -16.625194549560547
    10. '           ' → logprob: -17.500194549560547

Token 464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007243710570037365
    2. '       ' → logprob: -5.507243633270264
    3. ' for' → logprob: -5.757243633270264
    4. '	for' → logprob: -15.507244110107422
    5. 'cal' → logprob: -16.757244110107422
    6. '   ' → logprob: -17.007244110107422
    7. '
' → logprob: -18.007244110107422
    8. '        
' → logprob: -19.757244110107422
    9. '	' → logprob: -20.257244110107422
    10. ' ' → logprob: -20.382244110107422

Token 465: ' snack' (ID: 39337)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.00010592726175673306
    2. ' snack' → logprob: -9.250105857849121
    3. '   ' → logprob: -11.625105857849121
    4. '       ' → logprob: -14.500105857849121
    5. 's' → logprob: -15.875105857849121
    6. 'snippet' → logprob: -16.625106811523438
    7. ' sn' → logprob: -16.625106811523438
    8. '           ' → logprob: -17.375106811523438
    9. '_sn' → logprob: -17.875106811523438
    10. ' ' → logprob: -18.000106811523438

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00038336371653713286
    2. 'in' → logprob: -7.875383377075195
    3. '	in' → logprob: -13.875383377075195
    4. '_in' → logprob: -14.375383377075195
    5. 's' → logprob: -14.375383377075195
    6. ' ' → logprob: -14.500383377075195
    7. '   ' → logprob: -15.750383377075195
    8. ' ' → logprob: -15.875383377075195
    9. 'sn' → logprob: -15.875383377075195
    10. ' i' → logprob: -16.250383377075195

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048170737922192
    2. ' self' → logprob: -4.511048316955566
    3. '       ' → logprob: -15.136048316955566
    4. '
' → logprob: -17.01104736328125
    5. '(self' → logprob: -17.01104736328125
    6. '	self' → logprob: -17.63604736328125
    7. '   ' → logprob: -18.63604736328125
    8. '[self' → logprob: -18.63604736328125
    9. '           ' → logprob: -20.26104736328125
    10. 's' → logprob: -20.38604736328125

Token 468: '.sn' (ID: 71683)
  Prédit: '.sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sn' → logprob: -2.1008713702030946e-06
    2. '.s' → logprob: -13.750001907348633
    3. 'sn' → logprob: -15.000001907348633
    4. ' .' → logprob: -15.000001907348633
    5. '.Sn' → logprob: -15.750001907348633
    6. '.' → logprob: -16.000001907348633
    7. '_sn' → logprob: -17.750001907348633
    8. '(sn' → logprob: -17.875001907348633
    9. '.sm' → logprob: -18.125001907348633
    10. '.snp' → logprob: -18.625001907348633

Token 469: 'acks' (ID: 7367)
  Prédit: 'acks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acks' → logprob: -4.966313281329349e-05
    2. '
' → logprob: -10.500049591064453
    3. '

' → logprob: -12.625049591064453
    4. 'a' → logprob: -12.750049591064453
    5. 'aks' → logprob: -12.750049591064453
    6. 'cks' → logprob: -13.125049591064453
    7. '```' → logprob: -13.250049591064453
    8. 'ack' → logprob: -13.625049591064453
    9. '``' → logprob: -14.000049591064453
    10. 'icks' → logprob: -14.375049591064453

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42591434717178345
    2. ':
' → logprob: -1.1759142875671387
    3. '       ' → logprob: -3.3009142875671387
    4. '           ' → logprob: -6.925914287567139
    5. ' if' → logprob: -9.175914764404297
    6. '   ' → logprob: -9.425914764404297
    7. ' :
' → logprob: -9.925914764404297
    8. '):
' → logprob: -10.175914764404297
    9. ' :' → logprob: -10.300914764404297
    10. '<|end|>' → logprob: -10.425914764404297

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021855637896806002
    2. ' if' → logprob: -8.750218391418457
    3. 'if' → logprob: -10.500218391418457
    4. '
' → logprob: -11.000218391418457
    5. '            
' → logprob: -12.125218391418457
    6. '       ' → logprob: -12.625218391418457
    7. '            ' → logprob: -13.375218391418457
    8. '<|end|>' → logprob: -13.500218391418457
    9. '	       ' → logprob: -13.625218391418457
    10. '          ' → logprob: -14.125218391418457

Token 472: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.30635979771614075
    2. ' if' → logprob: -1.8063597679138184
    3. '           ' → logprob: -2.3063597679138184
    4. '   ' → logprob: -13.556360244750977
    5. '               ' → logprob: -14.056360244750977
    6. '	if' → logprob: -14.431360244750977
    7. '	       ' → logprob: -14.556360244750977
    8. '       ' → logprob: -15.431360244750977
    9. '		' → logprob: -15.556360244750977
    10. '          ' → logprob: -16.056360244750977

Token 473: ' snack' (ID: 39337)
  Prédit: ' snack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' snack' → logprob: -0.5234700441360474
    2. 'sn' → logprob: -0.8984700441360474
    3. ' sn' → logprob: -8.148469924926758
    4. '           ' → logprob: -11.523469924926758
    5. ' snacks' → logprob: -11.648469924926758
    6. ' snackbar' → logprob: -11.648469924926758
    7. '   ' → logprob: -11.773469924926758
    8. ' snippet' → logprob: -11.898469924926758
    9. '(sn' → logprob: -12.523469924926758
    10. 'snippet' → logprob: -12.898469924926758

Token 474: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -10.125059127807617
    3. ' .' → logprob: -10.875059127807617
    4. 'is' → logprob: -15.875059127807617
    5. '.has' → logprob: -17.750059127807617
    6. '​.' → logprob: -18.000059127807617
    7. ').' → logprob: -18.625059127807617
    8. '
' → logprob: -19.000059127807617
    9. '`.' → logprob: -19.000059127807617
    10. '   ' → logprob: -19.000059127807617

Token 475: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -9.088346359931165e-07
    2. ' _' → logprob: -14.875000953674316
    3. '_' → logprob: -15.375000953674316
    4. '._' → logprob: -16.125
    5. '_WITH' → logprob: -16.875
    6. '_allowed' → logprob: -17.25
    7. '_without' → logprob: -17.625
    8. '_
' → logprob: -17.625
    9. 'within' → logprob: -17.875
    10. '_inside' → logprob: -18.0

Token 476: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6002627611160278
    2. 'ith' → logprob: -0.8502627611160278
    3. 'itin' → logprob: -4.475262641906738
    4. 'ihin' → logprob: -5.100262641906738
    5. 'thin' → logprob: -5.475262641906738
    6. 'hin' → logprob: -7.600262641906738
    7. 'within' → logprob: -7.600262641906738
    8. 'it' → logprob: -7.975262641906738
    9. '```' → logprob: -8.350262641906738
    10. 'ithi' → logprob: -8.850262641906738

Token 477: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.00015920029545668513
    2. 'limits' → logprob: -8.75015926361084
    3. '_limit' → logprob: -15.12515926361084
    4. ' limits' → logprob: -16.000158309936523
    5. '(_' → logprob: -16.500158309936523
    6. 's' → logprob: -16.875158309936523
    7. 'Limits' → logprob: -17.000158309936523
    8. 'imits' → logprob: -17.125158309936523
    9. '```' → logprob: -17.125158309936523
    10. ' _' → logprob: -17.250158309936523

Token 478: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0007475639577023685
    2. '(' → logprob: -7.7507476806640625
    3. '(limit' → logprob: -8.125747680664062
    4. '(n' → logprob: -10.875747680664062
    5. ' (' → logprob: -13.375747680664062
    6. '(
' → logprob: -15.375747680664062
    7. ' limits' → logprob: -15.500747680664062
    8. 'limits' → logprob: -15.750747680664062
    9. '(li' → logprob: -18.125747680664062
    10. '(s' → logprob: -18.375747680664062

Token 479: 'imits' (ID: 58269)
  Prédit: 'imits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imits' → logprob: -0.00013238313840702176
    2. 'imit' → logprob: -9.25013256072998
    3. 'im' → logprob: -10.62513256072998
    4. 'its' → logprob: -11.87513256072998
    5. '(' → logprob: -13.12513256072998
    6. 'limits' → logprob: -13.75013256072998
    7. 'mits' → logprob: -14.75013256072998
    8. 'imited' → logprob: -15.12513256072998
    9. '[' → logprob: -15.62513256072998
    10. ')' → logprob: -16.250131607055664

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001830410328693688
    2. ' ,' → logprob: -8.62518310546875
    3. ',
' → logprob: -12.62518310546875
    4. ',c' → logprob: -17.12518310546875
    5. ',

' → logprob: -17.12518310546875
    6. '‌,' → logprob: -17.87518310546875
    7. '   ' → logprob: -18.12518310546875
    8. '
' → logprob: -18.75018310546875
    9. ',n' → logprob: -18.87518310546875
    10. 'cal' → logprob: -19.00018310546875

Token 481: ' calorie' (ID: 66006)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.5759618878364563
    2. ' calorie' → logprob: -0.8259618878364563
    3. ' cal' → logprob: -11.95096206665039
    4. 'c' → logprob: -12.82596206665039
    5. ' calor' → logprob: -12.82596206665039
    6. ' ' → logprob: -13.07596206665039
    7. '_cal' → logprob: -13.32596206665039
    8. ' calories' → logprob: -13.32596206665039
    9. '	cal' → logprob: -13.32596206665039
    10. ')' → logprob: -14.45096206665039

Token 482: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.546478935983032e-05
    2. 'limit' → logprob: -11.250025749206543
    3. '_' → logprob: -11.375025749206543
    4. 't' → logprob: -15.250025749206543
    5. '_l' → logprob: -15.875025749206543
    6. '_
' → logprob: -16.375024795532227
    7. '_lim' → logprob: -16.375024795532227
    8. 'it' → logprob: -16.875024795532227
    9. '_limits' → logprob: -16.875024795532227
    10. '_LIMIT' → logprob: -17.125024795532227

Token 483: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00900829117745161
    2. '):' → logprob: -4.759008407592773
    3. '           ' → logprob: -8.009008407592773
    4. '               ' → logprob: -11.009008407592773
    5. '):
' → logprob: -11.009008407592773
    6. ':' → logprob: -11.634008407592773
    7. '       ' → logprob: -11.759008407592773
    8. ':
' → logprob: -12.259008407592773
    9. ')' → logprob: -12.384008407592773
    10. ' ):
' → logprob: -13.509008407592773

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.41129949549213e-05
    2. '                
' → logprob: -9.750083923339844
    3. '           ' → logprob: -11.250083923339844
    4. '            
' → logprob: -12.000083923339844
    5. '              ' → logprob: -13.250083923339844
    6. '                   ' → logprob: -14.500083923339844
    7. '
' → logprob: -14.500083923339844
    8. '<|end|>' → logprob: -14.625083923339844
    9. '               
' → logprob: -14.750083923339844
    10. '                ' → logprob: -14.750083923339844

Token 485: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' (adapté à ' allowed') → logprob: -0.5349829792976379
    2. ' allowed' → logprob: -1.4099829196929932
    3. '               ' → logprob: -2.159982919692993
    4. '           ' → logprob: -2.909982919692993
    5. '                   ' → logprob: -9.159982681274414
    6. '
' → logprob: -9.284982681274414
    7. '_allowed' → logprob: -9.659982681274414
    8. 'allow' → logprob: -10.409982681274414
    9. '            
' → logprob: -10.784982681274414
    10. '                
' → logprob: -10.784982681274414

Token 486: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.12500286102295
    3. '.extend' → logprob: -15.62500286102295
    4. '.app' → logprob: -16.250001907348633
    5. '.ap' → logprob: -16.375001907348633
    6. '.add' → logprob: -17.000001907348633
    7. ' .' → logprob: -18.250001907348633
    8. '.insert' → logprob: -18.750001907348633
    9. 'append' → logprob: -19.125001907348633
    10. '.push' → logprob: -19.500001907348633

Token 487: '(sn' (ID: 158742)
  Prédit: '(sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -1.7835754988482222e-05
    2. 'sn' → logprob: -11.000018119812012
    3. '(' → logprob: -14.250018119812012
    4. '(
' → logprob: -14.875018119812012
    5. '(sock' → logprob: -16.750017166137695
    6. '(sk' → logprob: -17.375017166137695
    7. ' snack' → logprob: -17.375017166137695
    8. '/sn' → logprob: -17.750017166137695
    9. '(s' → logprob: -17.875017166137695
    10. 's' → logprob: -19.500017166137695

Token 488: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -1.1279553291387856e-05
    2. 'a' → logprob: -11.750011444091797
    3. '_ack' → logprob: -13.500011444091797
    4. '
' → logprob: -15.000011444091797
    5. 'e' → logprob: -15.000011444091797
    6. ' snack' → logprob: -15.125011444091797
    7. 'ck' → logprob: -15.625011444091797
    8. ' ack' → logprob: -15.875011444091797
    9. 'k' → logprob: -16.250011444091797
    10. 'ak' → logprob: -16.375011444091797

Token 489: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -1.6047699318733066e-05
    2. '.' → logprob: -11.125016212463379
    3. ' .' → logprob: -13.875016212463379
    4. ').' → logprob: -16.500015258789062
    5. '.s' → logprob: -17.000015258789062
    6. '.ids' → logprob: -17.250015258789062
    7. '.i' → logprob: -17.375015258789062
    8. '.code' → logprob: -17.875015258789062
    9. '.Id' → logprob: -18.250015258789062
    10. '
' → logprob: -18.500015258789062

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004942946252413094
    2. ')
' → logprob: -7.625494480133057
    3. ')return' → logprob: -13.000494003295898
    4. '       ' → logprob: -13.250494003295898
    5. ' )' → logprob: -13.500494003295898
    6. '           ' → logprob: -15.500494003295898
    7. ')

' → logprob: -16.0004940032959
    8. '<|end|>' → logprob: -16.0004940032959
    9. ')
' → logprob: -16.6254940032959
    10. '),' → logprob: -16.7504940032959

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.023293538717553e-05
    2. '
' → logprob: -10.875030517578125
    3. 'return' → logprob: -11.500030517578125
    4. '        
' → logprob: -14.375030517578125
    5. ' return' → logprob: -15.500030517578125
    6. '	' → logprob: -16.125030517578125
    7. '   ' → logprob: -16.625030517578125
    8. '```' → logprob: -16.875030517578125
    9. '      ' → logprob: -17.000030517578125
    10. '	return' → logprob: -17.500030517578125

Token 492: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10047774761915207
    2. 'return' (adapté à ' return') → logprob: -2.350477695465088
    3. ' return' → logprob: -8.475478172302246
    4. '   ' → logprob: -10.225478172302246
    5. '	return' → logprob: -11.350478172302246
    6. '
' → logprob: -11.725478172302246
    7. '	' → logprob: -12.100478172302246
    8. '        
' → logprob: -15.725478172302246
    9. '```' → logprob: -15.850478172302246
    10. 'eturn' → logprob: -16.10047721862793

Token 493: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.0015023599844425917
    2. ' allowed' → logprob: -6.501502513885498
    3. 'allow' → logprob: -17.376502990722656
    4. '_allowed' → logprob: -18.251502990722656
    5. '.allowed' → logprob: -18.251502990722656
    6. 'Allowed' → logprob: -21.376502990722656
    7. 'approved' → logprob: -21.751502990722656
    8. ' ' → logprob: -21.876502990722656
    9. '   ' → logprob: -22.251502990722656
    10. 'accepted' → logprob: -22.751502990722656

Token 494: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02954809181392193
    2. '<|end|>' → logprob: -3.779548168182373
    3. '#' → logprob: -5.154548168182373
    4. 'from' → logprob: -8.779547691345215
    5. '```' → logprob: -8.904547691345215
    6. '<|end|>' → logprob: -9.654547691345215
    7. '[' → logprob: -9.779547691345215
    8. 'class' → logprob: -10.029547691345215
    9. ' def' → logprob: -11.029547691345215
    10. '
' → logprob: -11.654547691345215

Token 496: ' Input' (ID: 10090)
  Prédit: 'Meal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Meal' → logprob: -0.8880888223648071
    2. 'Snack' → logprob: -1.0130888223648071
    3. ' Meal' → logprob: -3.0130887031555176
    4. ' Snack' → logprob: -3.2630887031555176
    5. 'Daily' → logprob: -3.3880887031555176
    6. 'Diet' → logprob: -3.3880887031555176
    7. 'User' → logprob: -3.5130887031555176
    8. 'Menu' → logprob: -4.638088703155518
    9. ' Daily' → logprob: -5.638088703155518
    10. 'Nutrition' → logprob: -5.763088703155518

Token 497: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.29366424679756165
    2. 'Reader' → logprob: -2.5436642169952393
    3. 'Handler' → logprob: -2.6686642169952393
    4. 'Processor' → logprob: -2.6686642169952393
    5. 'Data' → logprob: -3.5436642169952393
    6. 'Generator' → logprob: -5.918664455413818
    7. ':' → logprob: -6.043664455413818
    8. 'Provider' → logprob: -6.543664455413818
    9. 'Tokenizer' → logprob: -7.543664455413818
    10. 'Validator' → logprob: -8.66866397857666

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00673005310818553
    2. ':
' → logprob: -5.006730079650879
    3. ' :' → logprob: -11.631730079650879
    4. '):' → logprob: -13.631730079650879
    5. '<|end|>' → logprob: -13.881730079650879
    6. '   ' → logprob: -14.381730079650879
    7. ':

' → logprob: -14.756730079650879
    8. ':def' → logprob: -14.881730079650879
    9. ' :
' → logprob: -15.131730079650879
    10. '(' → logprob: -15.381730079650879

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.372294698550832e-06
    2. ' def' → logprob: -11.875009536743164
    3. 'def' → logprob: -13.250009536743164
    4. ' @' → logprob: -15.625009536743164
    5. 'staticmethod' → logprob: -16.500009536743164
    6. ':' → logprob: -17.000009536743164
    7. '    
' → logprob: -17.000009536743164
    8. ' indentation' → logprob: -17.000009536743164
    9. '   ' → logprob: -17.375009536743164
    10. ')' → logprob: -17.500009536743164

Token 500: ' def' (ID: 1056)
  Prédit: ' @'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' @' → logprob: -1.2212289571762085
    2. '   ' → logprob: -1.4712289571762085
    3. ' def' → logprob: -1.4712289571762085
    4. '@' → logprob: -2.096229076385498
    5. 'def' (adapté à ' def') → logprob: -2.096229076385498
    6. 'staticmethod' → logprob: -12.97122859954834
    7. '@property' → logprob: -13.97122859954834
    8. ' ' → logprob: -14.09622859954834
    9. 'import' → logprob: -14.09622859954834
    10. '	def' → logprob: -14.34622859954834

Token 501: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.01096021942794323
    2. ' def' → logprob: -5.010960102081299
    3. 'def' → logprob: -6.385960102081299
    4. ' static' → logprob: -6.385960102081299
    5. 'classmethod' → logprob: -7.385960102081299
    6. 'static' → logprob: -8.510960578918457
    7. ' __' → logprob: -10.385960578918457
    8. 'Static' → logprob: -12.510960578918457
    9. ' ' → logprob: -13.385960578918457
    10. '...' → logprob: -14.010960578918457

Token 502: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'staticmethod' → logprob: -15.625000953674316
    3. 'new' → logprob: -16.5
    4. ' init' → logprob: -16.75
    5. 'ini' → logprob: -17.25
    6. '   ' → logprob: -17.625
    7. 'name' → logprob: -17.625
    8. '	init' → logprob: -17.875
    9. 'classmethod' → logprob: -17.875
    10. 'def' → logprob: -18.0

Token 503: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015414522029459476
    2. '(' → logprob: -4.515414714813232
    3. '__(' → logprob: -6.265414714813232
    4. ' (' → logprob: -6.640414714813232
    5. 'self' → logprob: -7.390414714813232
    6. '(
' → logprob: -8.765414237976074
    7. '
' → logprob: -9.140414237976074
    8. '   ' → logprob: -9.640414237976074
    9. '__(
' → logprob: -9.640414237976074
    10. ' ' → logprob: -10.515414237976074

Token 504: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014203863975126296
    2. ' self' → logprob: -9.000142097473145
    3. ')' → logprob: -11.875142097473145
    4. '
' → logprob: -12.000142097473145
    5. '):
' → logprob: -12.625142097473145
    6. '   ' → logprob: -13.375142097473145
    7. '       ' → logprob: -15.000142097473145
    8. ')
' → logprob: -16.375141143798828
    9. ',' → logprob: -17.125141143798828
    10. '	self' → logprob: -17.375141143798828

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11376505345106125
    2. '):
' → logprob: -3.113765001296997
    3. '):' → logprob: -3.363765001296997
    4. 'self' → logprob: -3.613765001296997
    5. '   ' → logprob: -7.863765239715576
    6. ' self' → logprob: -8.238764762878418
    7. ')' → logprob: -8.238764762878418
    8. '
' → logprob: -8.363764762878418
    9. '(self' → logprob: -8.613764762878418
    10. ',self' → logprob: -9.613764762878418

Token 506: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.0479832887649536
    2. 'input' → logprob: -1.1729832887649536
    3. 'lines' → logprob: -1.7979832887649536
    4. ' input' → logprob: -1.9229832887649536
    5. 'data' → logprob: -4.672983169555664
    6. ' raw' → logprob: -5.047983169555664
    7. 'raw' → logprob: -5.047983169555664
    8. ' data' → logprob: -6.047983169555664
    9. ')' → logprob: -6.422983169555664
    10. 'text' → logprob: -7.922983169555664

Token 507: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.6410654783248901
    2. '_lines' → logprob: -1.3910654783248901
    3. '_str' → logprob: -1.8910654783248901
    4. '_text' → logprob: -2.8910655975341797
    5. '_string' → logprob: -4.26606559753418
    6. ':' → logprob: -6.01606559753418
    7. '_' → logprob: -7.76606559753418
    8. ')' → logprob: -8.26606559753418
    9. '_stream' → logprob: -8.64106559753418
    10. 'data' → logprob: -8.64106559753418

Token 508: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.320199877838604e-07
    2. '):' → logprob: -15.625
    3. ' :' → logprob: -16.125
    4. ')' → logprob: -17.5
    5. '_:' → logprob: -17.75
    6. '):
' → logprob: -18.875
    7. '```' → logprob: -19.25
    8. '：' → logprob: -19.5
    9. '=' → logprob: -19.875
    10. '   ' → logprob: -20.5

Token 509: ' Iterable' (ID: 71228)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6936216354370117
    2. 'Iterable' → logprob: -0.6936216354370117
    3. ' Iterable' → logprob: -8.068621635437012
    4. ' List' → logprob: -8.943621635437012
    5. 'list' → logprob: -10.818621635437012
    6. 'Iter' → logprob: -11.818621635437012
    7. 'Iterator' → logprob: -13.943621635437012
    8. 'iter' → logprob: -14.568621635437012
    9. '   ' → logprob: -14.818621635437012
    10. ')' → logprob: -14.818621635437012

Token 510: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.375000953674316
    3. 'str' → logprob: -15.500000953674316
    4. '
' → logprob: -16.625
    5. '):' → logprob: -16.75
    6. '[' → logprob: -17.125
    7. '):
' → logprob: -17.375
    8. '=str' → logprob: -18.375
    9. ':str' → logprob: -18.375
    10. ':' → logprob: -18.75

Token 511: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.7937407493591309
    2. ']):' → logprob: -1.5437407493591309
    3. '):' → logprob: -1.6687407493591309
    4. '):
' → logprob: -2.043740749359131
    5. ')' → logprob: -4.543740749359131
    6. ']' → logprob: -5.793740749359131
    7. '])' → logprob: -6.293740749359131
    8. ']:' → logprob: -8.418741226196289
    9. ':' → logprob: -8.918741226196289
    10. '   ' → logprob: -9.168741226196289

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007511401199735701
    2. '   ' → logprob: -8.125751495361328
    3. 'self' → logprob: -8.500751495361328
    4. ':' → logprob: -9.250751495361328
    5. '	' → logprob: -9.375751495361328
    6. ',' → logprob: -10.875751495361328
    7. ' self' → logprob: -11.750751495361328
    8. '      ' → logprob: -11.875751495361328
    9. 'def' → logprob: -11.875751495361328
    10. '	   ' → logprob: -12.250751495361328

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04638460651040077
    2. '       ' → logprob: -3.671384572982788
    3. ' self' → logprob: -3.921384572982788
    4. 'lines' → logprob: -9.796384811401367
    5. '   ' → logprob: -11.796384811401367
    6. ' lines' → logprob: -12.671384811401367
    7. 'input' → logprob: -13.421384811401367
    8. '	self' → logprob: -14.046384811401367
    9. 'def' → logprob: -14.921384811401367
    10. 'line' → logprob: -14.921384811401367

Token 514: '.lines' (ID: 96601)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3592698276042938
    2. '.input' → logprob: -1.3592698574066162
    3. '.lines' → logprob: -3.109269857406616
    4. '_lines' → logprob: -8.734270095825195
    5. '.' → logprob: -9.734270095825195
    6. '_input' → logprob: -10.234270095825195
    7. 'input' → logprob: -10.859270095825195
    8. '.iterator' → logprob: -11.359270095825195
    9. '.line' → logprob: -11.609270095825195
    10. '	lines' → logprob: -12.109270095825195

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328698992729187
    2. ' =' → logprob: -1.3132870197296143
    3. '   ' → logprob: -10.813286781311035
    4. '_iter' → logprob: -13.188286781311035
    5. '       ' → logprob: -13.313286781311035
    6. '_iterator' → logprob: -14.813286781311035
    7. 'iter' → logprob: -14.938286781311035
    8. 'iterator' → logprob: -15.188286781311035
    9. '    ' → logprob: -15.188286781311035
    10. ' ' → logprob: -15.938286781311035

Token 516: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.16225659847259521
    2. 'input' → logprob: -1.9122565984725952
    3. ' iter' → logprob: -6.287256717681885
    4. '(iter' → logprob: -9.537256240844727
    5. 'list' → logprob: -9.912256240844727
    6. ' input' → logprob: -10.537256240844727
    7. 'iterator' → logprob: -11.037256240844727
    8. '(input' → logprob: -12.912256240844727
    9. 'enumer' → logprob: -13.537256240844727
    10. '	iter' → logprob: -13.662256240844727

Token 517: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.263011578586884e-05
    2. 'input' → logprob: -10.125042915344238
    3. '(' → logprob: -13.250042915344238
    4. ',input' → logprob: -14.375042915344238
    5. '=input' → logprob: -16.750041961669922
    6. '(
' → logprob: -17.125041961669922
    7. ' (' → logprob: -17.250041961669922
    8. ' input' → logprob: -17.875041961669922
    9. '	input' → logprob: -18.000041961669922
    10. '[input' → logprob: -18.250041961669922

Token 518: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0011604580795392394
    2. '(lines' → logprob: -7.501160621643066
    3. '_' → logprob: -8.751160621643066
    4. ')' → logprob: -9.501160621643066
    5. '(' → logprob: -9.626160621643066
    6. 'lines' → logprob: -9.751160621643066
    7. '(self' → logprob: -9.751160621643066
    8. '(_' → logprob: -10.126160621643066
    9. '(input' → logprob: -10.876160621643066
    10. '_(' → logprob: -11.001160621643066

Token 519: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038717821007594466
    2. ')
' → logprob: -8.750387191772461
    3. '   ' → logprob: -8.750387191772461
    4. ')

' → logprob: -10.000387191772461
    5. ' ' → logprob: -11.000387191772461
    6. ' )' → logprob: -12.375387191772461
    7. '
' → logprob: -13.625387191772461
    8. 'def' → logprob: -13.625387191772461
    9. '       ' → logprob: -13.875387191772461
    10. '()' → logprob: -16.00038719177246

Token 520: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7984932065010071
    2. '
' → logprob: -1.0484931468963623
    3. ' def' → logprob: -2.2984931468963623
    4. '   ' → logprob: -2.5484931468963623
    5. '<|end|>' → logprob: -4.298493385314941
    6. '<|end|>' → logprob: -6.298493385314941
    7. '    
' → logprob: -6.423493385314941
    8. '	def' → logprob: -6.798493385314941
    9. '

' → logprob: -7.548493385314941
    10. ')' → logprob: -7.923493385314941

Token 521: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007877098978497088
    2. ' def' → logprob: -7.500787734985352
    3. '
' → logprob: -8.750787734985352
    4. '   ' → logprob: -9.500787734985352
    5. '	def' → logprob: -14.250787734985352
    6. '    
' → logprob: -14.250787734985352
    7. '

' → logprob: -16.37578773498535
    8. 'de' → logprob: -16.87578773498535
    9. '        
' → logprob: -17.62578773498535
    10. '  
' → logprob: -17.75078773498535

Token 522: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0869324579834938
    2. '_parse' → logprob: -2.586932420730591
    3. '_next' → logprob: -5.58693265914917
    4. ' parse' → logprob: -6.33693265914917
    5. '__' → logprob: -6.46193265914917
    6. 'next' → logprob: -7.46193265914917
    7. 'read' → logprob: -8.086932182312012
    8. '_read' → logprob: -10.336932182312012
    9. 'def' → logprob: -12.211932182312012
    10. '_parser' → logprob: -12.836932182312012

Token 523: '_dataset' (ID: 40568)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01086988765746355
    2. '_sn' → logprob: -4.760869979858398
    3. '_next' → logprob: -6.885869979858398
    4. '(' → logprob: -7.510869979858398
    5. 'self' → logprob: -8.635869979858398
    6. '()' → logprob: -9.260869979858398
    7. '_id' → logprob: -9.635869979858398
    8. '_' → logprob: -9.635869979858398
    9. '_ids' → logprob: -10.010869979858398
    10. '_input' → logprob: -10.135869979858398

Token 524: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.159660890465602e-05
    2. '(' → logprob: -9.62507152557373
    3. 'self' → logprob: -12.75007152557373
    4. '()' → logprob: -13.50007152557373
    5. '(s' → logprob: -15.00007152557373
    6. '(
' → logprob: -15.25007152557373
    7. ' (' → logprob: -15.25007152557373
    8. 's' → logprob: -15.37507152557373
    9. '(sel' → logprob: -16.625072479248047
    10. '(se' → logprob: -17.000072479248047

Token 525: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019050003960728645
    2. 'self' → logprob: -4.644050121307373
    3. '(self' → logprob: -5.644050121307373
    4. '):
' → logprob: -5.894050121307373
    5. '):' → logprob: -6.269050121307373
    6. ',' → logprob: -6.894050121307373
    7. ' self' → logprob: -11.019049644470215
    8. '   ' → logprob: -11.644049644470215
    9. ')->' → logprob: -11.769049644470215
    10. ' )' → logprob: -13.019049644470215

Token 526: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01902216300368309
    2. '->' → logprob: -4.644021987915039
    3. 'self' → logprob: -5.644021987915039
    4. ' ->' → logprob: -5.769021987915039
    5. '(' → logprob: -6.269021987915039
    6. '()' → logprob: -8.769021987915039
    7. '       ' → logprob: -8.894021987915039
    8. ':' → logprob: -8.894021987915039
    9. '   ' → logprob: -9.019021987915039
    10. 's' → logprob: -10.144021987915039

Token 527: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.03548480197787285
    2. ' Tuple' → logprob: -3.410484790802002
    3. 'List' → logprob: -6.535484790802002
    4. 'Optional' → logprob: -8.16048526763916
    5. 'int' → logprob: -10.41048526763916
    6. 'tuple' → logprob: -10.78548526763916
    7. ' List' → logprob: -10.91048526763916
    8. 'Tu' → logprob: -11.53548526763916
    9. 'Iterable' → logprob: -12.03548526763916
    10. ' Optional' → logprob: -12.16048526763916

Token 528: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.02305433340370655
    2. '[' → logprob: -4.523054122924805
    3. '[
' → logprob: -5.023054122924805
    4. '[List' → logprob: -5.273054122924805
    5. ' [' → logprob: -9.023054122924805
    6. ' (' → logprob: -10.398054122924805
    7. '   ' → logprob: -10.523054122924805
    8. '(int' → logprob: -11.023054122924805
    9. ' [
' → logprob: -11.398054122924805
    10. '[Int' → logprob: -11.898054122924805

Token 529: 'Snack' (ID: 86358)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9035276174545288
    2. 'List' → logprob: -1.1535276174545288
    3. 'int' → logprob: -1.2785276174545288
    4. '[int' → logprob: -7.778527736663818
    5. 'Snack' → logprob: -9.40352725982666
    6. '[List' → logprob: -9.65352725982666
    7. 'Nutrition' → logprob: -9.77852725982666
    8. ' Nutr' → logprob: -9.90352725982666
    9. '[N' → logprob: -10.40352725982666
    10. 'list' → logprob: -10.65352725982666

Token 530: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -0.04526954144239426
    2. ',' → logprob: -3.17026948928833
    3. 's' → logprob: -6.17026948928833
    4. '[],' → logprob: -9.920269966125488
    5. 'List' → logprob: -10.920269966125488
    6. ' ,' → logprob: -11.045269966125488
    7. 'Collections' → logprob: -11.170269966125488
    8. ' Collection' → logprob: -11.295269966125488
    9. 'collection' → logprob: -11.545269966125488
    10. '   ' → logprob: -11.670269966125488

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004474732850212604
    2. ',List' → logprob: -7.7504472732543945
    3. ' ,' → logprob: -11.500447273254395
    4. '   ' → logprob: -12.875447273254395
    5. ',int' → logprob: -13.000447273254395
    6. ',
' → logprob: -13.875447273254395
    7. '[List' → logprob: -16.25044822692871
    8. '[' → logprob: -16.25044822692871
    9. ' ' → logprob: -16.37544822692871
    10. ',float' → logprob: -16.37544822692871

Token 532: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.027469709515571594
    2. ' Nutr' → logprob: -3.6524696350097656
    3. 'int' → logprob: -6.902469635009766
    4. 'Nutrition' → logprob: -10.402469635009766
    5. 'Snack' → logprob: -10.652469635009766
    6. ' N' → logprob: -10.777469635009766
    7. ' int' → logprob: -10.902469635009766
    8. 'List' → logprob: -10.902469635009766
    9. ' ' → logprob: -11.402469635009766
    10. '   ' → logprob: -11.652469635009766

Token 533: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00015586259542033076
    2. 'ent' → logprob: -9.000155448913574
    3. 'it' → logprob: -10.500155448913574
    4. 'utr' → logprob: -13.625155448913574
    5. 't' → logprob: -14.625155448913574
    6. 'ut' → logprob: -14.875155448913574
    7. '
' → logprob: -15.125155448913574
    8. 'er' → logprob: -15.250155448913574
    9. '```' → logprob: -15.250155448913574
    10. 'itent' → logprob: -15.375155448913574

Token 534: 'Limits' (ID: 87018)
  Prédit: 'Limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limits' → logprob: -3.054500666621607e-06
    2. 'limits' → logprob: -13.37500286102295
    3. ' Limits' → logprob: -14.25000286102295
    4. 'Limit' → logprob: -14.62500286102295
    5. '_limits' → logprob: -15.37500286102295
    6. ' limits' → logprob: -17.250003814697266
    7. 'Lim' → logprob: -18.500003814697266
    8. 'Constraints' → logprob: -19.125003814697266
    9. 'L' → logprob: -19.625003814697266
    10. 'LIMIT' → logprob: -19.875003814697266

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003957608714699745
    2. ' ,' → logprob: -8.000395774841309
    3. ',int' → logprob: -9.750395774841309
    4. '‌,' → logprob: -14.250395774841309
    5. '   ' → logprob: -14.500395774841309
    6. ',
' → logprob: -14.875395774841309
    7. ',List' → logprob: -15.625395774841309
    8. ',float' → logprob: -16.125394821166992
    9. 'int' → logprob: -16.625394821166992
    10. '[int' → logprob: -16.875394821166992

Token 536: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.060365608893335e-05
    2. ' int' → logprob: -10.125041007995605
    3. '[int' → logprob: -15.125041007995605
    4. ']int' → logprob: -16.50004005432129
    5. '<int' → logprob: -17.00004005432129
    6. '   ' → logprob: -17.12504005432129
    7. ',int' → logprob: -17.87504005432129
    8. '	int' → logprob: -18.00004005432129
    9. ':int' → logprob: -18.62504005432129
    10. '
' → logprob: -18.62504005432129

Token 537: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3642655909061432
    2. ']:
' → logprob: -1.2392655611038208
    3. ']' → logprob: -4.864265441894531
    4. ',' → logprob: -5.614265441894531
    5. '):
' → logprob: -6.489265441894531
    6. '):' → logprob: -6.489265441894531
    7. ']:
' → logprob: -6.739265441894531
    8. ']:

' → logprob: -10.864265441894531
    9. '   ' → logprob: -10.989265441894531
    10. '):
' → logprob: -11.114265441894531

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.829823102336377e-05
    2. 'n' → logprob: -10.50009822845459
    3. 'next' → logprob: -10.62509822845459
    4. '```' → logprob: -11.75009822845459
    5. ' next' → logprob: -12.37509822845459
    6. '        
' → logprob: -12.50009822845459
    7. 'line' → logprob: -12.50009822845459
    8. 'num' → logprob: -12.50009822845459
    9. '   ' → logprob: -12.87509822845459
    10. '      ' → logprob: -13.25009822845459

Token 539: ' try' (ID: 2075)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1213223934173584
    2. 'num' → logprob: -1.2463223934173584
    3. '       ' → logprob: -2.1213223934173584
    4. 'protein' → logprob: -2.3713223934173584
    5. '#' → logprob: -2.7463223934173584
    6. 'nut' → logprob: -3.1213223934173584
    7. 'limits' → logprob: -4.1213226318359375
    8. 'line' → logprob: -4.4963226318359375
    9. 'counts' → logprob: -4.8713226318359375
    10. 'sn' → logprob: -5.3713226318359375

Token 540: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03709794208407402
    2. ':
' → logprob: -3.662097930908203
    3. '           ' → logprob: -4.537097930908203
    4. '       ' → logprob: -11.162097930908203
    5. ',' → logprob: -11.912097930908203
    6. ' :' → logprob: -12.287097930908203
    7. '):
' → logprob: -13.412097930908203
    8. '        ' → logprob: -13.662097930908203
    9. '):' → logprob: -13.787097930908203
    10. ' =' → logprob: -14.037097930908203

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5451681974809617e-05
    2. ' line' → logprob: -11.625015258789062
    3. 'line' → logprob: -12.625015258789062
    4. 'n' → logprob: -14.500015258789062
    5. '       ' → logprob: -14.500015258789062
    6. '   ' → logprob: -14.625015258789062
    7. 'protein' → logprob: -15.000015258789062
    8. 'input' → logprob: -15.125015258789062
    9. 'quantity' → logprob: -15.625015258789062
    10. '```' → logprob: -15.625015258789062

Token 542: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8276045322418213
    2. 'n' (adapté à ' n') → logprob: -1.8276045322418213
    3. 'num' → logprob: -2.0776045322418213
    4. '           ' → logprob: -2.2026045322418213
    5. 'nut' → logprob: -3.0776045322418213
    6. 'header' → logprob: -3.3276045322418213
    7. 'limits' → logprob: -4.202604293823242
    8. ' line' → logprob: -4.452604293823242
    9. 'protein' → logprob: -4.577604293823242
    10. 'sn' → logprob: -4.702604293823242

Token 543: '_line' (ID: 14418)
  Prédit: '_sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sn' → logprob: -0.7349390983581543
    2. ' =' → logprob: -0.9849390983581543
    3. '=' → logprob: -2.9849390983581543
    4. '_' → logprob: -3.4849390983581543
    5. 'um' → logprob: -3.7349390983581543
    6. '   ' → logprob: -4.484939098358154
    7. '_s' → logprob: -4.734939098358154
    8. '_lines' → logprob: -4.859939098358154
    9. '_line' → logprob: -5.734939098358154
    10. 'ext' → logprob: -6.234939098358154

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020547140389680862
    2. '=' → logprob: -3.8955471515655518
    3. '=line' → logprob: -13.020546913146973
    4. '   ' → logprob: -13.645546913146973
    5. ' ' → logprob: -14.520546913146973
    6. 'line' → logprob: -15.145546913146973
    7. '       ' → logprob: -15.270546913146973
    8. ' =
' → logprob: -15.895546913146973
    9. '           ' → logprob: -15.895546913146973
    10. '    ' → logprob: -16.02054786682129

Token 545: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04858794063329697
    2. ' next' → logprob: -3.0485880374908447
    3. '(next' → logprob: -15.048587799072266
    4. '	next' → logprob: -16.673587799072266
    5. '   ' → logprob: -16.798587799072266
    6. '[next' → logprob: -17.173587799072266
    7. '.next' → logprob: -17.298587799072266
    8. '
' → logprob: -17.548587799072266
    9. 'int' → logprob: -18.423587799072266
    10. ' nex' → logprob: -18.798587799072266

Token 546: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.451116051815916e-05
    2. 'self' → logprob: -10.625024795532227
    3. '(' → logprob: -16.375024795532227
    4. '(
' → logprob: -18.000024795532227
    5. ' self' → logprob: -18.625024795532227
    6. '=self' → logprob: -19.750024795532227
    7. '	self' → logprob: -21.125024795532227
    8. 's' → logprob: -21.250024795532227
    9. '[self' → logprob: -21.250024795532227
    10. 'line' → logprob: -21.375024795532227

Token 547: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -1.4259644558478612e-05
    2. 'lines' → logprob: -11.250014305114746
    3. '	lines' → logprob: -14.500014305114746
    4. '(lines' → logprob: -15.250014305114746
    5. ').' → logprob: -15.625014305114746
    6. '.' → logprob: -15.750014305114746
    7. '.l' → logprob: -17.00001335144043
    8. ' .' → logprob: -17.50001335144043
    9. ' lines' → logprob: -18.50001335144043
    10. '.links' → logprob: -18.87501335144043

Token 548: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4818909466266632
    2. ').' → logprob: -0.9818909168243408
    3. ')
' → logprob: -4.85689115524292
    4. ' )' → logprob: -12.856890678405762
    5. ' ).' → logprob: -13.606890678405762
    6. ')
' → logprob: -13.606890678405762
    7. ')`' → logprob: -13.856890678405762
    8. '       ' → logprob: -14.356890678405762
    9. ')

' → logprob: -14.606890678405762
    10. '   ' → logprob: -15.231890678405762

Token 549: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.5776860184123507e-06
    2. 'rstrip' → logprob: -13.75000286102295
    3. ' strip' → logprob: -13.75000286102295
    4. 'split' → logprob: -14.75000286102295
    5. '.strip' → logprob: -19.625001907348633
    6. '_strip' → logprob: -20.625001907348633
    7. '-strip' → logprob: -21.875001907348633
    8. 'str' → logprob: -21.875001907348633
    9. '(strip' → logprob: -22.125001907348633
    10. 'stripe' → logprob: -22.625001907348633

Token 550: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011717714369297028
    2. '()
' → logprob: -6.751171588897705
    3. '(' → logprob: -14.501172065734863
    4. '()

' → logprob: -14.876172065734863
    5. '()
' → logprob: -15.001172065734863
    6. '()`' → logprob: -15.626172065734863
    7. '().' → logprob: -16.626171112060547
    8. ' ()' → logprob: -16.751171112060547
    9. '())' → logprob: -16.876171112060547
    10. '(
' → logprob: -17.126171112060547

Token 551: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19185304641723633
    2. '       ' → logprob: -2.6918530464172363
    3. '        
' → logprob: -2.6918530464172363
    4. ' 
' → logprob: -4.816853046417236
    5. 'n' → logprob: -5.191853046417236
    6. '            
' → logprob: -5.566853046417236
    7. '        ' → logprob: -5.941853046417236
    8. '<|end|>' → logprob: -6.066853046417236
    9. '           ' → logprob: -6.191853046417236
    10. '  
' → logprob: -6.316853046417236

Token 552: ' except' (ID: 6384)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3755965828895569
    2. '       ' → logprob: -1.250596523284912
    3. '        
' → logprob: -4.375596523284912
    4. ' if' → logprob: -5.375596523284912
    5. ' 
' → logprob: -5.750596523284912
    6. 'if' → logprob: -6.000596523284912
    7. '<|end|>' → logprob: -7.375596523284912
    8. ' ' → logprob: -7.375596523284912
    9. '        ' → logprob: -7.625596523284912
    10. '=' → logprob: -8.00059700012207

Token 553: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.00020461321400944144
    2. ' Stop' → logprob: -8.500205039978027
    3. '_Stop' → logprob: -13.875205039978027
    4. '_stop' → logprob: -17.25020408630371
    5. '.Stop' → logprob: -17.50020408630371
    6. 'Index' → logprob: -17.62520408630371
    7. 'Stopping' → logprob: -18.00020408630371
    8. 'EOF' → logprob: -18.00020408630371
    9. 'STOP' → logprob: -18.12520408630371
    10. '(' → logprob: -18.37520408630371

Token 554: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -4.320199877838604e-07
    2. 'Iterator' → logprob: -15.0
    3. 'Async' → logprob: -16.25
    4. 'Iter' → logprob: -18.125
    5. 'iteration' → logprob: -18.25
    6. ' iteration' → logprob: -18.75
    7. '
' → logprob: -20.5
    8. 'Iterable' → logprob: -21.0
    9. '_iteration' → logprob: -21.0
    10. 'Error' → logprob: -21.25

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07077410072088242
    2. ':
' → logprob: -2.9457740783691406
    3. ':return' → logprob: -4.445774078369141
    4. '<|end|>' → logprob: -6.070774078369141
    5. '
' → logprob: -7.820774078369141
    6. ')' → logprob: -8.07077407836914
    7. 'return' → logprob: -8.32077407836914
    8. '):' → logprob: -8.94577407836914
    9. '       ' → logprob: -8.94577407836914
    10. '           ' → logprob: -9.07077407836914

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010356683051213622
    2. '       ' → logprob: -7.501035690307617
    3. ' return' → logprob: -8.001035690307617
    4. 'return' → logprob: -9.251035690307617
    5. ' raise' → logprob: -11.251035690307617
    6. '   ' → logprob: -12.126035690307617
    7. ' ' → logprob: -12.251035690307617
    8. ' None' → logprob: -12.251035690307617
    9. 'raise' → logprob: -12.376035690307617
    10. '            ' → logprob: -12.376035690307617

Token 557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0037516250740736723
    2. '           ' → logprob: -6.003751754760742
    3. 'raise' → logprob: -6.753751754760742
    4. ' return' → logprob: -9.253751754760742
    5. '
' → logprob: -11.628751754760742
    6. 'None' → logprob: -13.253751754760742
    7. ' raise' → logprob: -13.753751754760742
    8. '	return' → logprob: -14.878751754760742
    9. ':return' → logprob: -15.378751754760742
    10. '{return' → logprob: -16.003751754760742

Token 558: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0003724006237462163
    2. ' None' → logprob: -8.000371932983398
    3. '(None' → logprob: -10.625371932983398
    4. '
' → logprob: -11.875371932983398
    5. '        
' → logprob: -13.125371932983398
    6. '   ' → logprob: -13.125371932983398
    7. ',None' → logprob: -14.250371932983398
    8. '       ' → logprob: -14.625371932983398
    9. '    
' → logprob: -15.625371932983398
    10. '            
' → logprob: -16.1253719329834

Token 559: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2928372919559479
    2. ',' → logprob: -1.5428372621536255
    3. ',None' → logprob: -4.292837142944336
    4. '        
' → logprob: -4.792837142944336
    5. '<|end|>' → logprob: -4.917837142944336
    6. ',
' → logprob: -5.042837142944336
    7. '       ' → logprob: -6.292837142944336
    8. 'None' → logprob: -7.167837142944336
    9. ' None' → logprob: -7.417837142944336
    10. ' ,' → logprob: -7.792837142944336

Token 560: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1978195160627365
    2. ',' → logprob: -2.072819471359253
    3. ',None' → logprob: -3.447819471359253
    4. '        
' → logprob: -4.572819709777832
    5. ',
' → logprob: -5.197819709777832
    6. 'None' → logprob: -5.572819709777832
    7. ' None' → logprob: -7.197819709777832
    8. '       ' → logprob: -7.822819709777832
    9. '    
' → logprob: -8.322819709777832
    10. '

' → logprob: -8.697819709777832

Token 561: ' No' (ID: 3004)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0882204994559288
    2. '       ' → logprob: -2.8382205963134766
    3. 'None' → logprob: -4.338220596313477
    4. '        
' → logprob: -4.463220596313477
    5. ' None' → logprob: -7.088220596313477
    6. '<|end|>' → logprob: -8.088220596313477
    7. '   ' → logprob: -10.713220596313477
    8. '
' → logprob: -10.713220596313477
    9. '```' → logprob: -10.838220596313477
    10. ' 
' → logprob: -11.088220596313477

Token 562: ' more' (ID: 945)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.04945410043001175
    2. 'data' → logprob: -3.7994542121887207
    3. 'dataset' → logprob: -4.299454212188721
    4. '<|end|>' → logprob: -4.799454212188721
    5. ' datasets' → logprob: -5.799454212188721
    6. 'tokens' → logprob: -7.924454212188721
    7. '<|end|>' → logprob: -8.424453735351562
    8. 'token' → logprob: -9.424453735351562
    9. 'input' → logprob: -10.049453735351562
    10. '.datasets' → logprob: -10.174453735351562

Token 564: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005275737959891558
    2. '       ' → logprob: -5.505275726318359
    3. '        
' → logprob: -6.880275726318359
    4. '<|end|>' → logprob: -9.75527572631836
    5. '
' → logprob: -10.00527572631836
    6. '

' → logprob: -10.25527572631836
    7. '    
' → logprob: -11.88027572631836
    8. '  
' → logprob: -12.38027572631836
    9. '\n' → logprob: -13.00527572631836
    10. '
        
' → logprob: -13.00527572631836

Token 565: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0476933978497982
    2. '       ' → logprob: -3.1726934909820557
    3. '        
' → logprob: -5.797693252563477
    4. '\n' → logprob: -8.047693252563477
    5. 'n' → logprob: -8.172693252563477
    6. '

' → logprob: -8.797693252563477
    7. '\
' → logprob: -8.922693252563477
    8. '
' → logprob: -9.047693252563477
    9. '' → logprob: -9.172693252563477
    10. '<|end|>' → logprob: -9.422693252563477

Token 566: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46794113516807556
    2. 'if' (adapté à ' if') → logprob: -1.467941164970398
    3. 'num' → logprob: -1.967941164970398
    4. '       ' → logprob: -6.4679412841796875
    5. ' if' → logprob: -6.5929412841796875
    6. 'try' → logprob: -7.9679412841796875
    7. ' n' → logprob: -8.467941284179688
    8. 'count' → logprob: -10.717941284179688
    9. ' num' → logprob: -10.842941284179688
    10. '#' → logprob: -11.092941284179688

Token 567: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6984924674034119
    2. 'not' → logprob: -0.6984924674034119
    3. 'n' → logprob: -5.323492527008057
    4. ' n' → logprob: -7.698492527008057
    5. 'n't' → logprob: -14.073492050170898
    6. '	not' → logprob: -14.698492050170898
    7. '
' → logprob: -15.698492050170898
    8. '!' → logprob: -15.698492050170898
    9. 'no' → logprob: -16.6984920501709
    10. ' ' → logprob: -16.6984920501709

Token 568: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.347765181795694e-05
    2. '_' → logprob: -9.875053405761719
    3. '_
' → logprob: -14.875053405761719
    4. 'line' → logprob: -15.125053405761719
    5. '_LINE' → logprob: -15.250053405761719
    6. '=' → logprob: -15.875053405761719
    7. '=_' → logprob: -16.00005340576172
    8. '
' → logprob: -16.12505340576172
    9. '_=' → logprob: -16.12505340576172
    10. '   ' → logprob: -16.25005340576172

Token 569: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47436317801475525
    2. ' ==' → logprob: -0.9743632078170776
    3. '=' → logprob: -8.349363327026367
    4. ' =' → logprob: -11.099363327026367
    5. '===' → logprob: -11.224363327026367
    6. '==
' → logprob: -11.599363327026367
    7. '.strip' → logprob: -12.349363327026367
    8. '.is' → logprob: -13.599363327026367
    9. ' ' → logprob: -13.599363327026367
    10. 'is' → logprob: -13.724363327026367

Token 570: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.009455959312617779
    2. ''' → logprob: -4.759456157684326
    3. '""' → logprob: -7.384456157684326
    4. '"":' → logprob: -8.759455680847168
    5. '"' → logprob: -9.759455680847168
    6. '''
' → logprob: -12.884455680847168
    7. ' '':
' → logprob: -13.384455680847168
    8. ''',' → logprob: -14.509455680847168
    9. ' ''' → logprob: -15.384455680847168
    10. '''.' → logprob: -15.884455680847168

Token 571: '0' (ID: 15)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2766566574573517
    2. '':' → logprob: -1.7766566276550293
    3. '\n' → logprob: -3.0266566276550293
    4. ''' → logprob: -3.7766566276550293
    5. '':
' → logprob: -7.401656627655029
    6. ''
' → logprob: -7.901656627655029
    7. ''):
' → logprob: -9.901657104492188
    8. ''\' → logprob: -10.901657104492188
    9. '':

' → logprob: -11.276657104492188
    10. '
' → logprob: -12.401657104492188

Token 572: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.19983886182308197
    2. '':
' → logprob: -2.199838876724243
    3. ''' → logprob: -2.824838876724243
    4. '\n' → logprob: -4.574838638305664
    5. '':
' → logprob: -7.449838638305664
    6. ''
' → logprob: -10.324838638305664
    7. '<|end|>' → logprob: -10.824838638305664
    8. ''):
' → logprob: -11.324838638305664
    9. '<|end|>' → logprob: -11.324838638305664
    10. '":' → logprob: -12.324838638305664

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5815420150756836
    2. ':' → logprob: -1.5815420150756836
    3. '       ' → logprob: -1.5815420150756836
    4. ':
' → logprob: -3.7065420150756836
    5. ':return' → logprob: -5.831542015075684
    6. '
' → logprob: -6.831542015075684
    7. 'return' → logprob: -8.706542015075684
    8. '               ' → logprob: -8.831542015075684
    9. ',' → logprob: -8.831542015075684
    10. ' return' → logprob: -9.206542015075684

Token 574: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019408921943977475
    2. ' return' → logprob: -6.501940727233887
    3. '           ' → logprob: -7.751940727233887
    4. '
' → logprob: -12.751940727233887
    5. '	return' → logprob: -12.751940727233887
    6. 'None' → logprob: -13.001940727233887
    7. '       ' → logprob: -16.001941680908203
    8. '{return' → logprob: -16.126941680908203
    9. ':return' → logprob: -16.376941680908203
    10. '   ' → logprob: -16.626941680908203

Token 575: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000158842682139948
    2. ' None' → logprob: -8.75015926361084
    3. '
' → logprob: -15.62515926361084
    4. 'none' → logprob: -16.500158309936523
    5. '(None' → logprob: -17.125158309936523
    6. '           ' → logprob: -17.750158309936523
    7. '   ' → logprob: -18.375158309936523
    8. ',None' → logprob: -18.375158309936523
    9. '0' → logprob: -18.875158309936523
    10. '         ' → logprob: -19.000158309936523

Token 576: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020446251146495342
    2. '        
' → logprob: -7.252044677734375
    3. '       ' → logprob: -7.877044677734375
    4. '

' → logprob: -7.877044677734375
    5. '<|end|>' → logprob: -7.877044677734375
    6. '
' → logprob: -9.127044677734375
    7. ',' → logprob: -10.377044677734375
    8. '\n' → logprob: -11.877044677734375
    9. '  
' → logprob: -11.877044677734375
    10. '
        
' → logprob: -12.002044677734375

Token 577: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006498866132460535
    2. '

' → logprob: -7.750649929046631
    3. '        
' → logprob: -8.875649452209473
    4. '
        
' → logprob: -10.125649452209473
    5. '
' → logprob: -11.000649452209473
    6. '       ' → logprob: -11.375649452209473
    7. '<|end|>' → logprob: -12.000649452209473
    8. '  
' → logprob: -14.125649452209473
    9. '        

' → logprob: -14.125649452209473
    10. ' 
' → logprob: -14.250649452209473

Token 578: ' End' (ID: 6437)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.7365879416465759
    2. '       ' → logprob: -1.3615880012512207
    3. 'Stop' → logprob: -1.9865880012512207
    4. 'End' → logprob: -2.4865880012512207
    5. 'None' → logprob: -4.361588001251221
    6. 'stop' → logprob: -5.111588001251221
    7. '0' → logprob: -5.236588001251221
    8. '
' → logprob: -5.361588001251221
    9. 'Stopping' → logprob: -5.361588001251221
    10. '#' → logprob: -6.361588001251221

Token 579: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005508019123226404
    2. ' of' → logprob: -6.005507946014404
    3. '

' → logprob: -7.005507946014404
    4. '<|end|>' → logprob: -7.130507946014404
    5. '        
' → logprob: -7.880507946014404
    6. 'of' → logprob: -8.130508422851562
    7. '\n' → logprob: -8.380508422851562
    8. '
' → logprob: -9.630508422851562
    9. '    
' → logprob: -10.005508422851562
    10. '
        
' → logprob: -10.005508422851562

Token 580: ' all' (ID: 722)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020858097821474075
    2. ' input' → logprob: -4.270858287811279
    3. 'datasets' → logprob: -5.020858287811279
    4. 'data' → logprob: -10.020857810974121
    5. ' datasets' → logprob: -11.020857810974121
    6. 'inputs' → logprob: -12.270857810974121
    7. 'processing' → logprob: -12.770857810974121
    8. '_input' → logprob: -13.270857810974121
    9. 'program' → logprob: -14.020857810974121
    10. 'dataset' → logprob: -14.270857810974121

Token 581: ' datasets' (ID: 57711)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4183620512485504
    2. 'datasets' → logprob: -1.418362021446228
    3. ' input' → logprob: -2.4183621406555176
    4. ' datasets' → logprob: -4.668362140655518
    5. 'data' → logprob: -7.293362140655518
    6. 'inputs' → logprob: -8.41836166381836
    7. '<|end|>' → logprob: -9.04336166381836
    8. ' data' → logprob: -9.29336166381836
    9. '_input' → logprob: -9.66836166381836
    10. 'program' → logprob: -9.66836166381836

Token 582: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022163573652505875
    2. '       ' → logprob: -4.022163391113281
    3. '        
' → logprob: -5.772163391113281
    4. '<|end|>' → logprob: -7.772163391113281
    5. '

' → logprob: -8.522163391113281
    6. '    
' → logprob: -9.272163391113281
    7. '  
' → logprob: -10.397163391113281
    8. '		
' → logprob: -10.522163391113281
    9. '
' → logprob: -10.522163391113281
    10. ',' → logprob: -10.897163391113281

Token 583: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32646697759628296
    2. '       ' → logprob: -1.3264670372009277
    3. '        
' → logprob: -4.951467037200928
    4. 'n' → logprob: -5.201467037200928
    5. ' n' → logprob: -8.32646656036377
    6. '
' → logprob: -9.82646656036377
    7. '    
' → logprob: -10.32646656036377
    8. '\
' → logprob: -10.45146656036377
    9. '  
' → logprob: -10.82646656036377
    10. '

' → logprob: -10.82646656036377

Token 584: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.009166832081973553
    2. 'num' → logprob: -4.759166717529297
    3. '       ' → logprob: -7.884166717529297
    4. ' n' → logprob: -8.759166717529297
    5. 'try' → logprob: -11.634166717529297
    6. 'sn' → logprob: -13.009166717529297
    7. 'count' → logprob: -13.134166717529297
    8. 'number' → logprob: -13.384166717529297
    9. ' num' → logprob: -13.384166717529297
    10. '           ' → logprob: -14.509166717529297

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056980881839990616
    2. '=' → logprob: -2.931980848312378
    3. ',' → logprob: -6.931981086730957
    4. '_' → logprob: -7.681981086730957
    5. '=int' → logprob: -8.056981086730957
    6. '_sn' → logprob: -9.181981086730957
    7. '_items' → logprob: -9.931981086730957
    8. '_tokens' → logprob: -10.181981086730957
    9. ' ' → logprob: -10.556981086730957
    10. '    ' → logprob: -10.931981086730957

Token 586: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '
' → logprob: -22.626928329467773
    4. '   ' → logprob: -23.126928329467773
    5. '[int' → logprob: -23.126928329467773
    6. '	int' → logprob: -23.376928329467773
    7. '       ' → logprob: -23.376928329467773
    8. '(int' → logprob: -24.001928329467773
    9. ' ' → logprob: -24.501928329467773
    10. '=int' → logprob: -24.751928329467773

Token 587: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.500003814697266
    3. 'n' → logprob: -15.375003814697266
    4. '(
' → logprob: -18.500003814697266
    5. ' (' → logprob: -21.000003814697266
    6. '	n' → logprob: -22.625003814697266
    7. ' n' → logprob: -22.750003814697266
    8. '```' → logprob: -23.250003814697266
    9. '
' → logprob: -23.375003814697266
    10. '((' → logprob: -23.750003814697266

Token 588: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.511406809295295e-06
    2. 'line' → logprob: -12.750006675720215
    3. '(n' → logprob: -13.000006675720215
    4. '_n' → logprob: -14.375006675720215
    5. 'n' → logprob: -15.250006675720215
    6. ')n' → logprob: -15.750006675720215
    7. ')' → logprob: -16.1250057220459
    8. '_LINE' → logprob: -16.3750057220459
    9. '(line' → logprob: -16.5000057220459
    10. 'Line' → logprob: -16.8750057220459

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.250029563903809
    4. '       ' → logprob: -15.500029563903809
    5. ')return' → logprob: -16.875030517578125
    6. ' ' → logprob: -16.875030517578125
    7. ')`' → logprob: -17.375030517578125
    8. '   ' → logprob: -17.750030517578125
    9. ')

' → logprob: -17.750030517578125
    10. ')n' → logprob: -17.875030517578125

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06322381645441055
    2. 'limits' → logprob: -2.9382238388061523
    3. 'nut' → logprob: -5.438223838806152
    4. ' limits' → logprob: -6.438223838806152
    5. 'limit' → logprob: -6.938223838806152
    6. 'sn' → logprob: -7.938223838806152
    7. '        
' → logprob: -8.188223838806152
    8. 'protein' → logprob: -8.438223838806152
    9. ' nutrient' → logprob: -9.063223838806152
    10. '
' → logprob: -9.563223838806152

Token 591: ' snacks' (ID: 46837)
  Prédit: 'limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limits' → logprob: -0.7673711776733398
    2. 'protein' → logprob: -1.0173711776733398
    3. 'nut' → logprob: -2.14237117767334
    4. 'limit' → logprob: -4.26737117767334
    5. '       ' → logprob: -4.51737117767334
    6. 'sn' → logprob: -4.89237117767334
    7. 'prote' → logprob: -5.01737117767334
    8. 'cal' → logprob: -5.26737117767334
    9. 'allowed' → logprob: -6.14237117767334
    10. 'nuts' → logprob: -6.51737117767334

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25202471017837524
    2. '=' → logprob: -1.5020246505737305
    3. ':' → logprob: -9.37702465057373
    4. '=[]' → logprob: -11.75202465057373
    5. ' ' → logprob: -13.87702465057373
    6. '=[]
' → logprob: -14.00202465057373
    7. ' =
' → logprob: -15.12702465057373
    8. ',' → logprob: -15.25202465057373
    9. '_list' → logprob: -15.62702465057373
    10. ' :' → logprob: -15.62702465057373

Token 593: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.12707477807998657
    2. '[]' → logprob: -2.127074718475342
    3. '[]

' → logprob: -8.8770751953125
    4. '[
' → logprob: -11.8770751953125
    5. '[' → logprob: -16.1270751953125
    6. '[])
' → logprob: -17.6270751953125
    7. ' []
' → logprob: -17.8770751953125
    8. '[],
' → logprob: -18.7520751953125
    9. '[])' → logprob: -19.0020751953125
    10. '[],' → logprob: -19.5020751953125

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02420905791223049
    2. ' for' → logprob: -4.399209022521973
    3. 'for' → logprob: -4.524209022521973
    4. '<|end|>' → logprob: -7.649209022521973
    5. '
' → logprob: -8.899209022521973
    6. '        
' → logprob: -9.149209022521973
    7. '   ' → logprob: -10.649209022521973
    8. '	for' → logprob: -11.274209022521973
    9. '	' → logprob: -12.274209022521973
    10. ',' → logprob: -12.274209022521973

Token 595: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010897249914705753
    2. 'limits' → logprob: -4.885897159576416
    3. ' for' → logprob: -7.010897159576416
    4. 'cal' → logprob: -7.135897159576416
    5. 'limit' → logprob: -7.135897159576416
    6. '       ' → logprob: -7.510897159576416
    7. '
' → logprob: -9.135897636413574
    8. ' limits' → logprob: -9.885897636413574
    9. 'nut' → logprob: -10.260897636413574
    10. '        
' → logprob: -11.385897636413574

Token 596: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3533286154270172
    2. '_i' → logprob: -1.3533285856246948
    3. 'i' → logprob: -3.6033287048339844
    4. ' i' → logprob: -5.103328704833984
    5. ' _' → logprob: -5.478328704833984
    6. '_sn' → logprob: -6.853328704833984
    7. '_id' → logprob: -7.478328704833984
    8. '_index' → logprob: -9.853328704833984
    9. '_idx' → logprob: -9.978328704833984
    10. ' ' → logprob: -10.603328704833984

Token 597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01816960796713829
    2. 'in' → logprob: -4.018169403076172
    3. 'i' → logprob: -11.893169403076172
    4. ' ' → logprob: -12.018169403076172
    5. 'range' → logprob: -12.143169403076172
    6. ' i' → logprob: -14.018169403076172
    7. '	in' → logprob: -15.393169403076172
    8. '  ' → logprob: -16.268169403076172
    9. 'import' → logprob: -16.518169403076172
    10. '
' → logprob: -16.518169403076172

Token 598: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.861651490908116e-05
    2. ' range' → logprob: -9.625068664550781
    3. 'rang' → logprob: -14.625068664550781
    4. '	range' → logprob: -14.875068664550781
    5. 'ange' → logprob: -15.250068664550781
    6. '   ' → logprob: -15.375068664550781
    7. '
' → logprob: -15.500068664550781
    8. 'r' → logprob: -15.625068664550781
    9. '(range' → logprob: -15.875068664550781
    10. ' ' → logprob: -16.25006866455078

Token 599: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31348156929016113
    2. '(n' → logprob: -1.3134815692901611
    3. ' n' → logprob: -8.438481330871582
    4. '(' → logprob: -13.813481330871582
    5. '   ' → logprob: -14.563481330871582
    6. '	n' → logprob: -14.688481330871582
    7. ')n' → logprob: -15.063481330871582
    8. '       ' → logprob: -15.313481330871582
    9. ',' → logprob: -15.563481330871582
    10. '
' → logprob: -15.563481330871582

Token 600: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22574588656425476
    2. '):' → logprob: -1.6007459163665771
    3. '):
' → logprob: -9.100746154785156
    4. ' ):
' → logprob: -9.350746154785156
    5. ')' → logprob: -9.975746154785156
    6. ' ):' → logprob: -10.100746154785156
    7. '       ' → logprob: -10.850746154785156
    8. ':' → logprob: -11.350746154785156
    9. '   ' → logprob: -12.100746154785156
    10. '):

' → logprob: -12.850746154785156

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7120533811976202e-05
    2. '            
' → logprob: -12.000017166137695
    3. 'line' → logprob: -12.500017166137695
    4. '   ' → logprob: -13.375017166137695
    5. ' line' → logprob: -13.750017166137695
    6. '```' → logprob: -13.750017166137695
    7. '
' → logprob: -14.375017166137695
    8. '	       ' → logprob: -14.375017166137695
    9. 'input' → logprob: -15.000017166137695
    10. '#line' → logprob: -15.375017166137695

Token 602: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.16715726256370544
    2. 'parts' → logprob: -2.2921571731567383
    3. '           ' → logprob: -3.4171571731567383
    4. ' line' → logprob: -4.417157173156738
    5. 'id' → logprob: -5.542157173156738
    6. ' parts' → logprob: -6.042157173156738
    7. 'sn' → logprob: -8.167157173156738
    8. 'data' → logprob: -8.292157173156738
    9. 'ids' → logprob: -8.542157173156738
    10. 'protein' → logprob: -8.792157173156738

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325339801609516
    2. '=' → logprob: -3.7732534408569336
    3. '=line' → logprob: -13.148253440856934
    4. '_tokens' → logprob: -13.273253440856934
    5. '           ' → logprob: -13.648253440856934
    6. ' =
' → logprob: -13.648253440856934
    7. '=
' → logprob: -14.398253440856934
    8. 's' → logprob: -14.523253440856934
    9. '       ' → logprob: -15.773253440856934
    10. ' ' → logprob: -15.773253440856934

Token 604: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04858953505754471
    2. ' next' → logprob: -3.0485894680023193
    3. '           ' → logprob: -13.298589706420898
    4. '(next' → logprob: -15.298589706420898
    5. '	next' → logprob: -15.923589706420898
    6. '.next' → logprob: -17.0485897064209
    7. '
' → logprob: -17.2985897064209
    8. '_next' → logprob: -18.1735897064209
    9. '[next' → logprob: -18.2985897064209
    10. '               ' → logprob: -18.9235897064209

Token 605: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.246537173457909e-06
    2. 'self' → logprob: -12.500003814697266
    3. '(' → logprob: -14.875003814697266
    4. ' self' → logprob: -17.375003814697266
    5. '(
' → logprob: -18.500003814697266
    6. ' (' → logprob: -19.000003814697266
    7. '=self' → logprob: -19.250003814697266
    8. '[self' → logprob: -19.500003814697266
    9. 's' → logprob: -19.625003814697266
    10. ',self' → logprob: -20.500003814697266

Token 606: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00018911674851551652
    2. 'lines' → logprob: -9.125188827514648
    3. '(lines' → logprob: -9.875188827514648
    4. 'self' → logprob: -10.875188827514648
    5. '	lines' → logprob: -12.375188827514648
    6. ').' → logprob: -13.375188827514648
    7. '_lines' → logprob: -13.875188827514648
    8. 'Lines' → logprob: -14.500188827514648
    9. '.' → logprob: -14.625188827514648
    10. ' lines' → logprob: -15.000188827514648

Token 607: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00033832306507974863
    2. ' ).' → logprob: -8.875338554382324
    3. '()).' → logprob: -9.125338554382324
    4. ')' → logprob: -9.375338554382324
    5. '().' → logprob: -13.125338554382324
    6. '       ' → logprob: -13.500338554382324
    7. '           ' → logprob: -14.625338554382324
    8. ')
' → logprob: -15.375338554382324
    9. '   ' → logprob: -15.875338554382324
    10. '
' → logprob: -16.000337600708008

Token 608: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.305326966568828e-05
    2. 'split' → logprob: -9.500093460083008
    3. ' strip' → logprob: -11.000093460083008
    4. 'rstrip' → logprob: -13.500093460083008
    5. '.strip' → logprob: -17.625093460083008
    6. ' split' → logprob: -19.125093460083008
    7. '_strip' → logprob: -20.625093460083008
    8. 'stripe' → logprob: -20.625093460083008
    9. '           ' → logprob: -21.250093460083008
    10. '(strip' → logprob: -21.500093460083008

Token 609: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006785946898162365
    2. '()
' → logprob: -5.006785869598389
    3. '().' → logprob: -9.881786346435547
    4. '()

' → logprob: -11.256786346435547
    5. '()`' → logprob: -13.006786346435547
    6. '()
' → logprob: -13.506786346435547
    7. '())' → logprob: -14.631786346435547
    8. '()</' → logprob: -14.756786346435547
    9. '()\' → logprob: -14.756786346435547
    10. '(),' → logprob: -14.881786346435547

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007543585379607975
    2. ' parts' → logprob: -8.375754356384277
    3. 'tokens' → logprob: -8.500754356384277
    4. ' tokens' → logprob: -9.250754356384277
    5. ',' → logprob: -9.250754356384277
    6. '       ' → logprob: -9.875754356384277
    7. '            
' → logprob: -11.000754356384277
    8. '	       ' → logprob: -11.500754356384277
    9. 'parts' → logprob: -11.625754356384277
    10. ' proteins' → logprob: -11.875754356384277

Token 611: ' s' (ID: 265)
  Prédit: 'protein'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'protein' → logprob: -0.24389547109603882
    2. 'parts' → logprob: -1.8688955307006836
    3. 'id' → logprob: -3.1188955307006836
    4. '           ' → logprob: -4.618895530700684
    5. 'values' → logprob: -5.618895530700684
    6. 'amount' → logprob: -6.118895530700684
    7. 'tokens' → logprob: -6.618895530700684
    8. 'ids' → logprob: -8.368895530700684
    9. 'prote' → logprob: -8.618895530700684
    10. ' protein' → logprob: -9.243895530700684

Token 612: ',' (ID: 11)
  Prédit: 'plit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.30227941274642944
    2. 'plits' → logprob: -1.5522794723510742
    3. '_id' → logprob: -3.552279472351074
    4. 'n' → logprob: -5.177279472351074
    5. 'pl' → logprob: -5.302279472351074
    6. '_parts' → logprob: -6.552279472351074
    7. 'plt' → logprob: -6.802279472351074
    8. '_values' → logprob: -7.052279472351074
    9. '_tokens' → logprob: -7.177279472351074
    10. 'id' → logprob: -7.552279472351074

Token 613: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007770717144012451
    2. 'protein' → logprob: -5.007770538330078
    3. 'f' → logprob: -7.757770538330078
    4. ' p' → logprob: -8.632770538330078
    5. 'prot' → logprob: -9.132770538330078
    6. 'pro' → logprob: -10.007770538330078
    7. 'pr' → logprob: -10.132770538330078
    8. 'pf' → logprob: -10.507770538330078
    9. 'a' → logprob: -10.757770538330078
    10. '*p' → logprob: -10.820270538330078

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025636475533246994
    2. 'f' → logprob: -4.275636672973633
    3. ',f' → logprob: -5.150636672973633
    4. ' f' → logprob: -5.650636672973633
    5. ' ,' → logprob: -6.275636672973633
    6. '_f' → logprob: -9.525636672973633
    7. 'r' → logprob: -9.900636672973633
    8. 'a' → logprob: -10.525636672973633
    9. 'fat' → logprob: -11.150636672973633
    10. 'rof' → logprob: -11.775636672973633

Token 615: ' q' (ID: 2335)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0007068329723551869
    2. ' f' → logprob: -7.375706672668457
    3. 'g' → logprob: -10.000706672668457
    4. 'a' → logprob: -10.875706672668457
    5. 't' → logprob: -12.500706672668457
    6. ' ' → logprob: -12.625706672668457
    7. 'fat' → logprob: -13.000706672668457
    8. 'q' → logprob: -13.375706672668457
    9. 'c' → logprob: -13.375706672668457
    10. '	f' → logprob: -14.375706672668457

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031205564737319946
    2. 'f' → logprob: -6.003120422363281
    3. ' ,' → logprob: -8.253120422363281
    4. ',f' → logprob: -8.503120422363281
    5. 'r' → logprob: -9.253120422363281
    6. 'u' → logprob: -10.628120422363281
    7. 't' → logprob: -10.878120422363281
    8. 'w' → logprob: -11.378120422363281
    9. '_f' → logprob: -12.378120422363281
    10. ' f' → logprob: -12.503120422363281

Token 617: ' r' (ID: 428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5439598560333252
    2. 'r' → logprob: -0.9189598560333252
    3. ' f' → logprob: -4.793959617614746
    4. ' r' → logprob: -5.043959617614746
    5. 'c' → logprob: -5.418959617614746
    6. 't' → logprob: -8.043959617614746
    7. 'g' → logprob: -8.293959617614746
    8. ' ' → logprob: -8.293959617614746
    9. ' c' → logprob: -9.293959617614746
    10. '   ' → logprob: -9.543959617614746

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34856438636779785
    2. ' =' → logprob: -1.2235643863677979
    3. ',' → logprob: -9.223564147949219
    4. '<|end|>' → logprob: -11.348564147949219
    5. ')' → logprob: -12.348564147949219
    6. ' ' → logprob: -13.098564147949219
    7. ')=' → logprob: -14.848564147949219
    8. '<|end|>' → logprob: -15.098564147949219
    9. '```' → logprob: -15.223564147949219
    10. 's' → logprob: -15.598564147949219

Token 619: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10102463513612747
    2. 'line' → logprob: -2.351024627685547
    3. ' map' → logprob: -7.226024627685547
    4. ' line' → logprob: -9.851024627685547
    5. '[line' → logprob: -10.851024627685547
    6. '(line' → logprob: -11.351024627685547
    7. '(map' → logprob: -12.351024627685547
    8. '[' → logprob: -13.726024627685547
    9. '=line' → logprob: -15.601024627685547
    10. '.map' → logprob: -15.601024627685547

Token 620: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008615161292254925
    2. 'int' → logprob: -4.758615016937256
    3. '(str' → logprob: -15.008615493774414
    4. '[int' → logprob: -15.883615493774414
    5. ' int' → logprob: -16.258615493774414
    6. '=int' → logprob: -16.883615493774414
    7. 'str' → logprob: -17.383615493774414
    8. '(' → logprob: -17.758615493774414
    9. '```' → logprob: -18.133615493774414
    10. '	int' → logprob: -18.258615493774414

Token 621: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0012003510491922498
    2. ')' → logprob: -7.126200199127197
    3. 'line' → logprob: -8.751200675964355
    4. ',line' → logprob: -9.251200675964355
    5. ' line' → logprob: -9.626200675964355
    6. '(' → logprob: -10.251200675964355
    7. '=line' → logprob: -10.376200675964355
    8. '[line' → logprob: -12.626200675964355
    9. '#line' → logprob: -13.001200675964355
    10. '	line' → logprob: -13.126200675964355

Token 622: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011047935113310814
    2. ' line' → logprob: -4.511047840118408
    3. '(line' → logprob: -15.761048316955566
    4. '	line' → logprob: -18.01104736328125
    5. '[line' → logprob: -18.01104736328125
    6. '=line' → logprob: -18.88604736328125
    7. '#line' → logprob: -19.63604736328125
    8. ',line' → logprob: -20.88604736328125
    9. '_line' → logprob: -22.13604736328125
    10. '           ' → logprob: -22.63604736328125

Token 623: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4774329960346222
    2. '.split' → logprob: -0.9774329662322998
    3. '.strip' → logprob: -5.727433204650879
    4. ' .' → logprob: -9.477433204650879
    5. '.' → logprob: -11.102433204650879
    6. '()' → logprob: -14.227433204650879
    7. ')' → logprob: -14.352433204650879
    8. 'split' → logprob: -14.477433204650879
    9. '.readline' → logprob: -14.602433204650879
    10. '.rstrip' → logprob: -14.852433204650879

Token 624: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06593810766935349
    2. '()' → logprob: -2.9409379959106445
    3. '())
' → logprob: -5.3159379959106445
    4. ')' → logprob: -5.6909379959106445
    5. '('' → logprob: -6.0659379959106445
    6. '(' → logprob: -8.315937995910645
    7. '()
' → logprob: -9.440937995910645
    8. '')' → logprob: -11.065937995910645
    9. '())

' → logprob: -11.815937995910645
    10. ')
' → logprob: -12.065937995910645

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023642287123948336
    2. '
' → logprob: -6.752364158630371
    3. '            
' → logprob: -7.377364158630371
    4. ' 
' → logprob: -8.877364158630371
    5. '       ' → logprob: -9.002364158630371
    6. '<|end|>' → logprob: -9.877364158630371
    7. '    
' → logprob: -10.127364158630371
    8. '        
' → logprob: -10.252364158630371
    9. '   ' → logprob: -10.502364158630371
    10. 's' → logprob: -10.877364158630371

Token 626: ' nutrient' (ID: 72324)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024448730051517487
    2. 'sn' → logprob: -4.024448871612549
    3. 'nut' → logprob: -6.399448871612549
    4. ' snack' → logprob: -6.524448871612549
    5. 's' → logprob: -6.649448871612549
    6. 'n' → logprob: -7.524448871612549
    7. '
' → logprob: -8.02444839477539
    8. ' sn' → logprob: -8.14944839477539
    9. ' snacks' → logprob: -8.89944839477539
    10. ' nutrient' → logprob: -9.14944839477539

Token 627: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.00035918003413826227
    2. 'profile' → logprob: -8.000359535217285
    3. 's' → logprob: -11.000359535217285
    4. '_amount' → logprob: -12.750359535217285
    5. '_pro' → logprob: -13.125359535217285
    6. '_profiles' → logprob: -14.000359535217285
    7. '_' → logprob: -14.875359535217285
    8. '_limits' → logprob: -15.500359535217285
    9. '=' → logprob: -15.625359535217285
    10. '_prof' → logprob: -15.750359535217285

Token 628: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740813970565796
    2. '=' → logprob: -0.9740813970565796
    3. '=
' → logprob: -13.099081039428711
    4. '   ' → logprob: -13.474081039428711
    5. ' =
' → logprob: -15.099081039428711
    6. '=N' → logprob: -15.349081039428711
    7. ' ' → logprob: -16.59908103942871
    8. '           ' → logprob: -16.84908103942871
    9. '=n' → logprob: -17.09908103942871
    10. ')' → logprob: -17.09908103942871

Token 629: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011706985533237457
    2. ' Nutr' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.251171112060547
    4. ' N' → logprob: -16.251171112060547
    5. '	N' → logprob: -16.376171112060547
    6. ' ' → logprob: -17.126171112060547
    7. 'Nutrition' → logprob: -17.876171112060547
    8. '           ' → logprob: -18.751171112060547
    9. '       ' → logprob: -18.876171112060547
    10. '  ' → logprob: -19.501171112060547

Token 630: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.20448532700538635
    2. 'utr' → logprob: -1.704485297203064
    3. 'ut' → logprob: -6.9544854164123535
    4. 'r' → logprob: -7.0794854164123535
    5. 'it' → logprob: -7.2044854164123535
    6. 'ent' → logprob: -7.9544854164123535
    7. 'tr' → logprob: -9.454484939575195
    8. 'ir' → logprob: -10.829484939575195
    9. 'itr' → logprob: -11.329484939575195
    10. 't' → logprob: -11.454484939575195

Token 631: 'Profile' (ID: 9120)
  Prédit: 'Profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Profile' → logprob: -3.7697225252486533e-06
    2. 'profile' → logprob: -13.000003814697266
    3. 'N' → logprob: -14.125003814697266
    4. 'Profil' → logprob: -15.500003814697266
    5. '_profile' → logprob: -16.250003814697266
    6. ' Profile' → logprob: -16.375003814697266
    7. 'Pro' → logprob: -16.375003814697266
    8. 'Profiles' → logprob: -16.875003814697266
    9. 'Protein' → logprob: -17.000003814697266
    10. '_Profile' → logprob: -17.875003814697266

Token 632: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004252912010997534
    2. '(s' → logprob: -5.754252910614014
    3. '(
' → logprob: -7.004252910614014
    4. '(' → logprob: -9.004253387451172
    5. 's' → logprob: -10.379253387451172
    6. '           ' → logprob: -11.879253387451172
    7. 'p' → logprob: -12.379253387451172
    8. '(
' → logprob: -14.004253387451172
    9. '               ' → logprob: -15.129253387451172
    10. '(

' → logprob: -15.879253387451172

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029394289012998343
    2. ',q' → logprob: -5.877939224243164
    3. ' ,' → logprob: -10.002939224243164
    4. 'q' → logprob: -10.377939224243164
    5. ',p' → logprob: -11.002939224243164
    6. ',
' → logprob: -11.127939224243164
    7. 's' → logprob: -12.002939224243164
    8. '=' → logprob: -12.127939224243164
    9. ',r' → logprob: -12.752939224243164
    10. ',f' → logprob: -12.752939224243164

Token 634: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9027791495318525e-05
    2. ' q' → logprob: -10.875019073486328
    3. '	q' → logprob: -16.375019073486328
    4. '
' → logprob: -18.375019073486328
    5. '   ' → logprob: -19.000019073486328
    6. '_q' → logprob: -20.875019073486328
    7. '    ' → logprob: -21.500019073486328
    8. '  ' → logprob: -21.875019073486328
    9. ' ' → logprob: -22.000019073486328
    10. '

' → logprob: -22.000019073486328

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003421375877223909
    2. ',r' → logprob: -8.62534236907959
    3. ' ,' → logprob: -8.75034236907959
    4. 'r' → logprob: -12.87534236907959
    5. ',
' → logprob: -14.00034236907959
    6. '           ' → logprob: -15.00034236907959
    7. ' r' → logprob: -16.000341415405273
    8. '       ' → logprob: -16.375341415405273
    9. '   ' → logprob: -16.500341415405273
    10. ')' → logprob: -17.125341415405273

Token 636: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007099286303855479
    2. ' r' → logprob: -7.2507100105285645
    3. ')' → logprob: -18.875709533691406
    4. '	r' → logprob: -19.000709533691406
    5. ' ' → logprob: -19.750709533691406
    6. '_r' → logprob: -21.125709533691406
    7. '   ' → logprob: -21.250709533691406
    8. ' ' → logprob: -21.500709533691406
    9. '
' → logprob: -21.625709533691406
    10. '       ' → logprob: -22.125709533691406

Token 637: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06243525445461273
    2. ')' → logprob: -2.8124351501464844
    3. '           ' → logprob: -7.687435150146484
    4. ')
' → logprob: -12.437435150146484
    5. '       ' → logprob: -12.687435150146484
    6. ' )
' → logprob: -14.187435150146484
    7. ')

' → logprob: -14.312435150146484
    8. '               ' → logprob: -14.687435150146484
    9. '   ' → logprob: -17.562435150146484
    10. ' )' → logprob: -17.687435150146484

Token 638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003467865171842277
    2. 'sn' → logprob: -8.500347137451172
    3. ' snack' → logprob: -10.375347137451172
    4. '
' → logprob: -10.500347137451172
    5. '       ' → logprob: -10.500347137451172
    6. 's' → logprob: -10.750347137451172
    7. '   ' → logprob: -11.375347137451172
    8. '<|end|>' → logprob: -12.125347137451172
    9. '            
' → logprob: -12.250347137451172
    10. '```' → logprob: -13.000347137451172

Token 639: ' snack' (ID: 39337)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.731837272644043
    2. '           ' → logprob: -1.231837272644043
    3. ' snack' → logprob: -1.606837272644043
    4. ' snacks' → logprob: -3.856837272644043
    5. ' sn' → logprob: -6.481837272644043
    6. '
' → logprob: -6.731837272644043
    7. '       ' → logprob: -6.856837272644043
    8. 's' → logprob: -6.856837272644043
    9. '   ' → logprob: -8.606837272644043
    10. '            
' → logprob: -9.106837272644043

Token 640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3913853168487549
    2. 's' → logprob: -1.5163853168487549
    3. '=' → logprob: -2.266385316848755
    4. '_id' → logprob: -8.141385078430176
    5. '_collection' → logprob: -8.141385078430176
    6. '.' → logprob: -10.141385078430176
    7. '.append' → logprob: -10.516385078430176
    8. 'collection' → logprob: -11.641385078430176
    9. '=
' → logprob: -11.891385078430176
    10. 'id' → logprob: -12.266385078430176

Token 641: ' Snack' (ID: 117545)
  Prédit: 'Snack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Snack' → logprob: -0.003264338243752718
    2. ' Snack' → logprob: -5.753264427185059
    3. 'Sn' → logprob: -9.378264427185059
    4. '   ' → logprob: -13.628264427185059
    5. 'Snackbar' → logprob: -15.378264427185059
    6. ' ' → logprob: -15.753264427185059
    7. ' Sn' → logprob: -16.253263473510742
    8. '       ' → logprob: -16.503263473510742
    9. '  ' → logprob: -16.878263473510742
    10. 'Snippet' → logprob: -17.003263473510742

Token 642: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3643642067909241
    2. '(_,' → logprob: -1.8643641471862793
    3. '(len' → logprob: -2.6143641471862793
    4. 's' → logprob: -3.3643641471862793
    5. '(' → logprob: -3.6143641471862793
    6. '(
' → logprob: -4.614364147186279
    7. '(_' → logprob: -5.614364147186279
    8. '_' → logprob: -6.614364147186279
    9. 'len' → logprob: -8.114364624023438
    10. '((' → logprob: -9.114364624023438

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ',
' → logprob: -10.375066757202148
    3. ',n' → logprob: -11.125066757202148
    4. ' ,' → logprob: -11.625066757202148
    5. '=' → logprob: -12.125066757202148
    6. ')' → logprob: -13.000066757202148
    7. '_,' → logprob: -14.000066757202148
    8. 'sn' → logprob: -14.625066757202148
    9. ',s' → logprob: -14.625066757202148
    10. 's' → logprob: -15.000066757202148

Token 644: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.054898761212825775
    2. ' nutrient' → logprob: -2.929898738861084
    3. '   ' → logprob: -12.804899215698242
    4. '
' → logprob: -13.054899215698242
    5. '```' → logprob: -13.304899215698242
    6. ' ' → logprob: -13.679899215698242
    7. ')' → logprob: -14.179899215698242
    8. '    
' → logprob: -14.429899215698242
    9. ' ' → logprob: -14.429899215698242
    10. 'nutrition' → logprob: -14.679899215698242

Token 645: '_profile' (ID: 30184)
  Prédit: '_profile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_profile' → logprob: -0.00034023032640106976
    2. 'profile' → logprob: -8.000340461730957
    3. '_pro' → logprob: -12.500340461730957
    4. '_' → logprob: -15.000340461730957
    5. '"profile' → logprob: -15.000340461730957
    6. '_profiles' → logprob: -16.25033950805664
    7. 'Profile' → logprob: -16.87533950805664
    8. '_prof' → logprob: -17.25033950805664
    9. '_PROFILE' → logprob: -17.50033950805664
    10. '
' → logprob: -17.75033950805664

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47411108016967773
    2. ')
' → logprob: -0.9741110801696777
    3. '           ' → logprob: -10.974111557006836
    4. ')
' → logprob: -11.224111557006836
    5. '       ' → logprob: -13.474111557006836
    6. ')

' → logprob: -13.724111557006836
    7. ' )
' → logprob: -14.849111557006836
    8. ' )' → logprob: -16.099111557006836
    9. ')`
' → logprob: -16.099111557006836
    10. '               ' → logprob: -16.224111557006836

Token 647: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016837897419463843
    2. 'sn' → logprob: -9.500168800354004
    3. '       ' → logprob: -9.625168800354004
    4. '<|end|>' → logprob: -12.000168800354004
    5. '   ' → logprob: -12.250168800354004
    6. '            
' → logprob: -12.875168800354004
    7. '	       ' → logprob: -13.000168800354004
    8. '
' → logprob: -13.125168800354004
    9. '               ' → logprob: -13.500168800354004
    10. 's' → logprob: -13.500168800354004

Token 648: ' snacks' (ID: 46837)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.014675801619887352
    2. '           ' → logprob: -4.264675617218018
    3. ' snacks' → logprob: -8.264676094055176
    4. '       ' → logprob: -8.764676094055176
    5. '
' → logprob: -10.014676094055176
    6. '   ' → logprob: -10.764676094055176
    7. ' sn' → logprob: -11.014676094055176
    8. 's' → logprob: -12.139676094055176
    9. '_sn' → logprob: -12.889676094055176
    10. '            
' → logprob: -13.014676094055176

Token 649: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003497666330076754
    2. '.' → logprob: -8.000349998474121
    3. '.app' → logprob: -11.500349998474121
    4. 'append' → logprob: -12.875349998474121
    5. '.ap' → logprob: -13.750349998474121
    6. '.Append' → logprob: -15.625349998474121
    7. '.push' → logprob: -15.875349998474121
    8. '.extend' → logprob: -16.125349044799805
    9. '.add' → logprob: -17.125349044799805
    10. ' .' → logprob: -17.375349044799805

Token 650: '(sn' (ID: 158742)
  Prédit: '(sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.750005722045898
    3. 'sn' → logprob: -13.000005722045898
    4. '(
' → logprob: -14.375005722045898
    5. '(sk' → logprob: -15.625005722045898
    6. '(sc' → logprob: -16.7500057220459
    7. '```' → logprob: -18.0000057220459
    8. '(sock' → logprob: -18.1250057220459
    9. '/sn' → logprob: -18.2500057220459
    10. '(s' → logprob: -18.5000057220459

Token 651: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -7.171581091824919e-05
    2. 'a' → logprob: -10.12507152557373
    3. '```' → logprob: -11.62507152557373
    4. 'ak' → logprob: -12.75007152557373
    5. ')' → logprob: -12.75007152557373
    6. 'acks' → logprob: -13.00007152557373
    7. '
' → logprob: -13.37507152557373
    8. 'ACK' → logprob: -13.62507152557373
    9. 'ck' → logprob: -13.75007152557373
    10. 'e' → logprob: -13.87507152557373

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005183627945370972
    2. ')
' → logprob: -7.625518321990967
    3. '       ' → logprob: -10.500518798828125
    4. '
' → logprob: -13.375518798828125
    5. ' )' → logprob: -14.125518798828125
    6. '   ' → logprob: -15.375518798828125
    7. ')

' → logprob: -16.250518798828125
    8. '<|end|>' → logprob: -16.625518798828125
    9. ')
' → logprob: -16.750518798828125
    10. '),' → logprob: -17.250518798828125

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05026658624410629
    2. '
' → logprob: -3.4252665042877197
    3. 'limit' → logprob: -4.550266742706299
    4. '```' → logprob: -6.050266742706299
    5. 'limits' → logprob: -6.550266742706299
    6. '        
' → logprob: -7.050266742706299
    7. ' limit' → logprob: -8.05026626586914
    8. ' limits' → logprob: -8.17526626586914
    9. 'cal' → logprob: -9.17526626586914
    10. 'line' → logprob: -9.30026626586914

Token 654: ' limit' (ID: 5967)
  Prédit: 'limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limits' → logprob: -0.6994093656539917
    2. 'line' → logprob: -1.3244093656539917
    3. 'limit' (adapté à ' limit') → logprob: -1.5744093656539917
    4. '       ' → logprob: -4.324409484863281
    5. 'l' → logprob: -4.949409484863281
    6. 'lim' → logprob: -5.699409484863281
    7. 'cal' → logprob: -6.074409484863281
    8. 'lin' → logprob: -7.324409484863281
    9. ' limits' → logprob: -7.449409484863281
    10. 'lines' → logprob: -7.574409484863281

Token 655: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.313518762588501
    2. 's' → logprob: -1.313518762588501
    3. 'line' → logprob: -8.313518524169922
    4. 'Line' → logprob: -12.438518524169922
    5. '_s' → logprob: -12.813518524169922
    6. '_' → logprob: -13.313518524169922
    7. ' line' → logprob: -13.688518524169922
    8. '_lines' → logprob: -14.063518524169922
    9. ' =' → logprob: -15.313518524169922
    10. '=' → logprob: -15.688518524169922

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994277238845825
    2. '=' → logprob: -2.6949427127838135
    3. '   ' → logprob: -12.819942474365234
    4. 's' → logprob: -13.569942474365234
    5. ' ' → logprob: -14.319942474365234
    6. '       ' → logprob: -14.319942474365234
    7. '           ' → logprob: -15.069942474365234
    8. '    ' → logprob: -15.194942474365234
    9. '=line' → logprob: -15.444942474365234
    10. '=
' → logprob: -15.944942474365234

Token 657: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0067167943343520164
    2. ' next' → logprob: -5.006716728210449
    3. '(next' → logprob: -14.25671672821045
    4. '	next' → logprob: -15.25671672821045
    5. '   ' → logprob: -15.38171672821045
    6. '[next' → logprob: -15.50671672821045
    7. '.next' → logprob: -16.756717681884766
    8. '
' → logprob: -17.006717681884766
    9. '       ' → logprob: -17.506717681884766
    10. '`' → logprob: -18.006717681884766

Token 658: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0488472618162632
    2. 'self' → logprob: -3.048847198486328
    3. '=self' → logprob: -8.798847198486328
    4. 's' → logprob: -10.298847198486328
    5. '_line' → logprob: -10.798847198486328
    6. '   ' → logprob: -11.673847198486328
    7. '[self' → logprob: -11.798847198486328
    8. ' self' → logprob: -11.923847198486328
    9. 'line' → logprob: -12.173847198486328
    10. ' =' → logprob: -12.673847198486328

Token 659: '.lines' (ID: 96601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5833181738853455
    2. '.lines' → logprob: -0.8333181738853455
    3. '(self' → logprob: -5.58331823348999
    4. '.self' → logprob: -6.45831823348999
    5. 'lines' → logprob: -6.70831823348999
    6. ' self' → logprob: -7.70831823348999
    7. '_lines' → logprob: -9.583317756652832
    8. '(lines' → logprob: -9.958317756652832
    9. '   ' → logprob: -10.083317756652832
    10. '	self' → logprob: -10.333317756652832

Token 660: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.06403759866952896
    2. '().' → logprob: -2.814037561416626
    3. '()).' → logprob: -6.564037799835205
    4. '       ' → logprob: -7.939037799835205
    5. ')' → logprob: -9.189037322998047
    6. ' ).' → logprob: -9.939037322998047
    7. '()' → logprob: -10.314037322998047
    8. '').' → logprob: -10.689037322998047
    9. '>().' → logprob: -10.939037322998047
    10. '
' → logprob: -11.064037322998047

Token 661: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.981667537620524e-06
    2. 'split' → logprob: -14.000001907348633
    3. 'rstrip' → logprob: -14.250001907348633
    4. ' strip' → logprob: -15.375001907348633
    5. '.strip' → logprob: -15.875001907348633
    6. '(strip' → logprob: -18.375001907348633
    7. '
' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.500001907348633
    9. 'Strip' → logprob: -18.500001907348633
    10. '_strip' → logprob: -18.875001907348633

Token 662: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.576168954372406
    2. '()' → logprob: -0.826168954372406
    3. '()
' → logprob: -8.45116901397705
    4. '       ' → logprob: -11.57616901397705
    5. '()

' → logprob: -12.20116901397705
    6. '()`' → logprob: -14.70116901397705
    7. '(),' → logprob: -14.82616901397705
    8. '()\' → logprob: -14.95116901397705
    9. '().' → logprob: -16.201168060302734
    10. '()</' → logprob: -16.951168060302734

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5919970870018005
    2. 'p' → logprob: -0.8419970870018005
    3. 'l' → logprob: -5.091997146606445
    4. 'c' → logprob: -5.341997146606445
    5. ' p' → logprob: -6.591997146606445
    6. 'pl' → logprob: -7.341997146606445
    7. 'limit' → logprob: -7.466997146606445
    8. 'protein' → logprob: -7.841997146606445
    9. 'm' → logprob: -8.216997146606445
    10. ',' → logprob: -8.216997146606445

Token 664: ' P' (ID: 398)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.047988299280405045
    2. 'c' → logprob: -4.297988414764404
    3. 'pl' → logprob: -4.547988414764404
    4. 'cal' → logprob: -5.422988414764404
    5. 'a' → logprob: -5.672988414764404
    6. 'protein' → logprob: -5.797988414764404
    7. 'l' → logprob: -6.047988414764404
    8. 'm' → logprob: -6.422988414764404
    9. 'limit' → logprob: -6.422988414764404
    10. 'x' → logprob: -6.672988414764404

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016451918054372072
    2. 'Q' → logprob: -7.001645088195801
    3. ',Q' → logprob: -8.0016450881958
    4. ' ,' → logprob: -9.6266450881958
    5. '_limits' → logprob: -9.6266450881958
    6. 'q' → logprob: -10.0016450881958
    7. 'limits' → logprob: -10.0016450881958
    8. 'limit' → logprob: -10.1266450881958
    9. '_limit' → logprob: -10.1266450881958
    10. 'L' → logprob: -10.3766450881958

Token 666: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2536526918411255
    2. 'F' → logprob: -1.5036526918411255
    3. 'L' → logprob: -6.753652572631836
    4. ' Q' → logprob: -8.503652572631836
    5. 'C' → logprob: -9.378652572631836
    6. 'G' → logprob: -9.503652572631836
    7. 'M' → logprob: -10.378652572631836
    8. 'K' → logprob: -10.378652572631836
    9. ' F' → logprob: -10.503652572631836
    10. 'S' → logprob: -11.253652572631836

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. 'R' → logprob: -11.500025749206543
    3. ',R' → logprob: -11.500025749206543
    4. ' ,' → logprob: -12.250025749206543
    5. ' R' → logprob: -14.750025749206543
    6. '<|end|>' → logprob: -15.500025749206543
    7. ',r' → logprob: -16.00002670288086
    8. ',
' → logprob: -16.62502670288086
    9. ',Q' → logprob: -17.37502670288086
    10. 'r' → logprob: -17.50002670288086

Token 668: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0015061709564179182
    2. ' R' → logprob: -6.501506328582764
    3. 'M' → logprob: -14.626505851745605
    4. 'F' → logprob: -14.626505851745605
    5. 'L' → logprob: -14.751505851745605
    6. ' ' → logprob: -14.876505851745605
    7. 'r' → logprob: -14.876505851745605
    8. '   ' → logprob: -15.001505851745605
    9. 'Rs' → logprob: -15.001505851745605
    10. 'S' → logprob: -15.501505851745605

Token 669: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7440004944801331
    2. ',' → logprob: -1.1190004348754883
    3. '=' → logprob: -1.6190004348754883
    4. ' ,' → logprob: -9.619000434875488
    5. '<|end|>' → logprob: -10.994000434875488
    6. ' ' → logprob: -13.619000434875488
    7. 's' → logprob: -13.869000434875488
    8. ')' → logprob: -15.119000434875488
    9. '=int' → logprob: -15.431500434875488
    10. ',q' → logprob: -15.494000434875488

Token 670: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5932233929634094
    2. 'L' → logprob: -1.4682233333587646
    3. 'cal' → logprob: -2.4682233333587646
    4. 'K' → logprob: -3.2182233333587646
    5. 'M' → logprob: -3.7182233333587646
    6. 'T' → logprob: -4.218223571777344
    7. ' C' → logprob: -4.718223571777344
    8. 'X' → logprob: -4.843223571777344
    9. 'Cal' → logprob: -5.093223571777344
    10. 'S' → logprob: -5.093223571777344

Token 671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740806519985199
    2. '=' → logprob: -0.9740806818008423
    3. ' ' → logprob: -13.474081039428711
    4. ',' → logprob: -13.474081039428711
    5. '	' → logprob: -15.349081039428711
    6. '   ' → logprob: -16.09908103942871
    7. '  ' → logprob: -16.47408103942871
    8. '    ' → logprob: -16.72408103942871
    9. '＝' → logprob: -16.72408103942871
    10. '=line' → logprob: -17.09908103942871

Token 672: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011047935113310814
    2. ' map' → logprob: -4.511047840118408
    3. 'm' → logprob: -17.01104736328125
    4. '	map' → logprob: -17.88604736328125
    5. '(map' → logprob: -18.63604736328125
    6. '_map' → logprob: -20.26104736328125
    7. '   ' → logprob: -20.51104736328125
    8. '
' → logprob: -20.51104736328125
    9. 'tuple' → logprob: -20.51104736328125
    10. 'list' → logprob: -21.01104736328125

Token 673: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00523719098418951
    2. 'int' → logprob: -5.255237102508545
    3. '(' → logprob: -13.130237579345703
    4. '(
' → logprob: -14.630237579345703
    5. ' int' → logprob: -15.005237579345703
    6. '[int' → logprob: -15.005237579345703
    7. '=int' → logprob: -15.380237579345703
    8. '<int' → logprob: -16.380237579345703
    9. '(in' → logprob: -17.505237579345703
    10. ']int' → logprob: -17.880237579345703

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3205054998397827
    2. '(limit' → logprob: -1.3205054998397827
    3. 'limit' → logprob: -4.945505619049072
    4. ' limit' → logprob: -9.820505142211914
    5. '(' → logprob: -11.070505142211914
    6. ')' → logprob: -11.195505142211914
    7. ' ,' → logprob: -11.320505142211914
    8. '.limit' → logprob: -13.195505142211914
    9. 'Limit' → logprob: -13.820505142211914
    10. ',
' → logprob: -14.070505142211914

Token 675: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.547789674485102e-05
    2. ' limit' → logprob: -10.250035285949707
    3. '(limit' → logprob: -18.375036239624023
    4. 'lim' → logprob: -20.875036239624023
    5. 'Limit' → logprob: -23.000036239624023
    6. '_limit' → logprob: -23.375036239624023
    7. '.limit' → logprob: -23.375036239624023
    8. '-limit' → logprob: -24.875036239624023
    9. '
' → logprob: -26.500036239624023
    10. 'limits' → logprob: -26.625036239624023

Token 676: '_line' (ID: 14418)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.039531804621219635
    2. '(limit' → logprob: -3.289531707763672
    3. ' limit' → logprob: -6.789531707763672
    4. '_line' → logprob: -8.039531707763672
    5. '_limit' → logprob: -10.539531707763672
    6. 's' → logprob: -12.289531707763672
    7. ',' → logprob: -12.414531707763672
    8. 'line' → logprob: -13.289531707763672
    9. '.limit' → logprob: -13.289531707763672
    10. 'lim' → logprob: -13.914531707763672

Token 677: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.47902050614356995
    2. '().' → logprob: -0.9790204763412476
    3. ' .' → logprob: -6.229020595550537
    4. '.' → logprob: -6.354020595550537
    5. ')' → logprob: -7.229020595550537
    6. 'split' → logprob: -8.229020118713379
    7. '.strip' → logprob: -8.604020118713379
    8. '()' → logprob: -10.979020118713379
    9. '   ' → logprob: -11.479020118713379
    10. '(split' → logprob: -11.729020118713379

Token 678: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14489693939685822
    2. '())' → logprob: -2.644896984100342
    3. '()' → logprob: -2.769896984100342
    4. '(' → logprob: -7.019896984100342
    5. ')
' → logprob: -8.644896507263184
    6. '())
' → logprob: -9.769896507263184
    7. '('' → logprob: -10.144896507263184
    8. ' )' → logprob: -11.269896507263184
    9. '()
' → logprob: -11.519896507263184
    10. ')`' → logprob: -12.269896507263184

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01683773659169674
    2. '
' → logprob: -4.2668375968933105
    3. '<|end|>' → logprob: -6.5168375968933105
    4. ' limits' → logprob: -7.3918375968933105
    5. '        
' → logprob: -8.266838073730469
    6. 'limits' → logprob: -8.516838073730469
    7. '<|end|>' → logprob: -11.016838073730469
    8. '_limits' → logprob: -11.141838073730469
    9. 'limit' → logprob: -11.641838073730469
    10. '   ' → logprob: -11.766838073730469

Token 680: ' nutrient' (ID: 72324)
  Prédit: 'limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limits' → logprob: -0.22926756739616394
    2. ' limits' → logprob: -2.6042675971984863
    3. 'nut' → logprob: -2.7292675971984863
    4. '       ' → logprob: -2.8542675971984863
    5. ' nutrient' → logprob: -5.229267597198486
    6. 'limit' → logprob: -6.229267597198486
    7. '```' → logprob: -8.229267120361328
    8. 'return' → logprob: -9.354267120361328
    9. '
' → logprob: -9.479267120361328
    10. ' nutrients' → logprob: -9.604267120361328

Token 681: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.0031218640506267548
    2. '_limit' → logprob: -6.003121852874756
    3. 'limits' → logprob: -7.378121852874756
    4. 'limit' → logprob: -11.253122329711914
    5. '_profile' → logprob: -12.503122329711914
    6. 'Limits' → logprob: -12.753122329711914
    7. ' limits' → logprob: -14.378122329711914
    8. '_' → logprob: -15.378122329711914
    9. 'LIMIT' → logprob: -15.878122329711914
    10. 'profile' → logprob: -16.003122329711914

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386884480714798
    2. ' =' → logprob: -1.1368844509124756
    3. '=N' → logprob: -11.261884689331055
    4. '   ' → logprob: -15.261884689331055
    5. ':' → logprob: -16.511884689331055
    6. ' ' → logprob: -16.636884689331055
    7. 'N' → logprob: -16.761884689331055
    8. '=
' → logprob: -16.886884689331055
    9. '```' → logprob: -17.261884689331055
    10. '=n' → logprob: -17.636884689331055

Token 683: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00023476807109545916
    2. ' Nutr' → logprob: -8.375234603881836
    3. '   ' → logprob: -12.500234603881836
    4. 'Nutrition' → logprob: -15.250234603881836
    5. '	N' → logprob: -15.875234603881836
    6. ' N' → logprob: -16.875234603881836
    7. ' ' → logprob: -17.125234603881836
    8. '       ' → logprob: -17.375234603881836
    9. '  ' → logprob: -17.750234603881836
    10. 'Nut' → logprob: -18.375234603881836

Token 684: 'ient' (ID: 773)
  Prédit: 'Limits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limits' → logprob: -0.021873662248253822
    2. 'ient' → logprob: -5.021873474121094
    3. 't' → logprob: -5.396873474121094
    4. 'N' → logprob: -5.521873474121094
    5. 'ut' → logprob: -6.021873474121094
    6. 'ent' → logprob: -6.271873474121094
    7. 'utr' → logprob: -6.521873474121094
    8. 'Limit' → logprob: -8.396873474121094
    9. 'it' → logprob: -9.146873474121094
    10. '_limits' → logprob: -9.771873474121094

Token 685: 'Limits' (ID: 87018)
  Prédit: 'Limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limits' → logprob: -6.988221684878226e-06
    2. 'N' → logprob: -12.500006675720215
    3. 'limits' → logprob: -12.750006675720215
    4. '_limits' → logprob: -15.875006675720215
    5. ' Limits' → logprob: -16.75000762939453
    6. 'Limit' → logprob: -17.00000762939453
    7. 'imits' → logprob: -17.75000762939453
    8. 'L' → logprob: -17.87500762939453
    9. 'Lim' → logprob: -18.12500762939453
    10. ' limits' → logprob: -18.37500762939453

Token 686: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -9.088346359931165e-07
    2. 'P' → logprob: -14.375000953674316
    3. '(Q' → logprob: -15.750000953674316
    4. '(' → logprob: -16.375
    5. '(
' → logprob: -17.125
    6. '(p' → logprob: -18.125
    7. '   ' → logprob: -18.75
    8. ' (' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. '       ' → logprob: -20.125

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015633940347470343
    2. ',Q' → logprob: -9.25015640258789
    3. ' ,' → logprob: -9.87515640258789
    4. 'Q' → logprob: -11.87515640258789
    5. ',
' → logprob: -13.37515640258789
    6. ')' → logprob: -16.12515640258789
    7. '<|end|>' → logprob: -16.37515640258789
    8. ' Q' → logprob: -16.87515640258789
    9. ',q' → logprob: -17.62515640258789
    10. '=' → logprob: -18.25015640258789

Token 688: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.15310683415737e-05
    2. ' Q' → logprob: -10.750021934509277
    3. '	Q' → logprob: -18.00002098083496
    4. '   ' → logprob: -19.12502098083496
    5. '  ' → logprob: -19.50002098083496
    6. ',Q' → logprob: -20.25002098083496
    7. '<Q' → logprob: -20.25002098083496
    8. ' ' → logprob: -21.00002098083496
    9. '(Q' → logprob: -21.25002098083496
    10. '    ' → logprob: -21.37502098083496

Token 689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021390743495430797
    2. ' ,' → logprob: -8.750213623046875
    3. ',R' → logprob: -10.000213623046875
    4. 'R' → logprob: -11.875213623046875
    5. ',
' → logprob: -13.375213623046875
    6. '   ' → logprob: -14.125213623046875
    7. ' R' → logprob: -14.875213623046875
    8. ')' → logprob: -16.125213623046875
    9. '       ' → logprob: -16.750213623046875
    10. '<|end|>' → logprob: -17.125213623046875

Token 690: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0001398929744027555
    2. ' R' → logprob: -8.875140190124512
    3. '
' → logprob: -18.375139236450195
    4. '   ' → logprob: -19.000139236450195
    5. '	R' → logprob: -19.125139236450195
    6. ' ' → logprob: -20.500139236450195
    7. ')' → logprob: -20.625139236450195
    8. '<|end|>' → logprob: -20.750139236450195
    9. '  ' → logprob: -21.000139236450195
    10. 'r' → logprob: -21.125139236450195

Token 691: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.047134305234067e-05
    2. ')' → logprob: -10.625030517578125
    3. ',
' → logprob: -13.000030517578125
    4. ',C' → logprob: -13.250030517578125
    5. ' ,' → logprob: -13.250030517578125
    6. '   ' → logprob: -16.125030517578125
    7. ',)' → logprob: -16.500030517578125
    8. '<|end|>' → logprob: -16.750030517578125
    9. '‌,' → logprob: -17.625030517578125
    10. 'C' → logprob: -18.000030517578125

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007983834482729435
    2. '	' → logprob: -5.632983684539795
    3. 'return' → logprob: -5.882983684539795
    4. '
' → logprob: -7.007983684539795
    5. ' return' → logprob: -7.507983684539795
    6. '	return' → logprob: -9.382984161376953
    7. '        
' → logprob: -10.632984161376953
    8. '<|end|>' → logprob: -11.882984161376953
    9. '   ' → logprob: -12.132984161376953
    10. '
' → logprob: -12.632984161376953

Token 693: ' calorie' (ID: 66006)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01459921058267355
    2. '       ' → logprob: -4.264599323272705
    3. 'cal' → logprob: -8.389598846435547
    4. ' return' → logprob: -8.514598846435547
    5. '
' → logprob: -13.139598846435547
    6. '	return' → logprob: -13.389598846435547
    7. '        
' → logprob: -13.639598846435547
    8. '   ' → logprob: -14.139598846435547
    9. '	' → logprob: -14.389598846435547
    10. '```' → logprob: -14.514598846435547

Token 694: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.8802491215174086e-05
    2. '_limits' → logprob: -10.625028610229492
    3. 'limit' → logprob: -12.625028610229492
    4. '_' → logprob: -14.375028610229492
    5. '_lim' → logprob: -14.875028610229492
    6. '_l' → logprob: -16.500028610229492
    7. '_LIMIT' → logprob: -16.875028610229492
    8. '_
' → logprob: -18.375028610229492
    9. 'Limit' → logprob: -18.750028610229492
    10. '_li' → logprob: -18.875028610229492

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407880425453186
    2. ' =' → logprob: -0.9740787744522095
    3. ' ' → logprob: -13.974079132080078
    4. ',' → logprob: -14.724079132080078
    5. '=
' → logprob: -15.724079132080078
    6. ':' → logprob: -15.974079132080078
    7. ' =
' → logprob: -16.099079132080078
    8. '<|end|>' → logprob: -17.099079132080078
    9. ')' → logprob: -17.349079132080078
    10. 's' → logprob: -17.474079132080078

Token 696: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001170225441455841
    2. ' C' → logprob: -6.7511701583862305
    3. 'c' → logprob: -18.126171112060547
    4. '	C' → logprob: -18.501171112060547
    5. '   ' → logprob: -18.626171112060547
    6. ' ' → logprob: -18.751171112060547
    7. ' ' → logprob: -19.001171112060547
    8. 'int' → logprob: -20.126171112060547
    9. '
' → logprob: -20.251171112060547
    10. '`' → logprob: -21.251171112060547

Token 697: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022026436403393745
    2. '
' → logprob: -4.022026538848877
    3. '<|end|>' → logprob: -6.272026538848877
    4. '	' → logprob: -7.022026538848877
    5. 'return' → logprob: -7.772026538848877
    6. '        
' → logprob: -8.272026062011719
    7. ' return' → logprob: -9.022026062011719
    8. '	return' → logprob: -9.397026062011719
    9. '		
' → logprob: -10.272026062011719
    10. '<|end|>' → logprob: -10.522026062011719

Token 698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020086953882128
    2. 'return' → logprob: -6.50200891494751
    3. '
' → logprob: -7.75200891494751
    4. ' return' → logprob: -10.127008438110352
    5. '<|end|>' → logprob: -11.377008438110352
    6. '	' → logprob: -11.627008438110352
    7. '        
' → logprob: -12.002008438110352
    8. '   ' → logprob: -12.377008438110352
    9. '	return' → logprob: -13.502008438110352
    10. ',' → logprob: -14.127008438110352

Token 699: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06244835630059242
    2. '       ' → logprob: -2.812448263168335
    3. ' return' → logprob: -7.687448501586914
    4. '	return' → logprob: -10.812448501586914
    5. '
' → logprob: -14.187448501586914
    6. '	' → logprob: -14.812448501586914
    7. '{return' → logprob: -15.062448501586914
    8. '   ' → logprob: -15.312448501586914
    9. ':return' → logprob: -16.062448501586914
    10. '        
' → logprob: -16.937448501586914

Token 700: ' Snack' (ID: 117545)
  Prédit: 'Snack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Snack' → logprob: -0.05445123836398125
    2. '(S' → logprob: -3.1794512271881104
    3. 'Sn' → logprob: -4.5544514656066895
    4. 'sn' → logprob: -7.9294514656066895
    5. '(sn' → logprob: -7.9294514656066895
    6. ' Snack' → logprob: -10.179450988769531
    7. 'SN' → logprob: -10.554450988769531
    8. 'Snackbar' → logprob: -11.179450988769531
    9. '   ' → logprob: -11.179450988769531
    10. '(' → logprob: -11.429450988769531

Token 701: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -1.9361264946837764e-07
    2. 'collection' → logprob: -16.625
    3. '_collection' → logprob: -18.25
    4. 'Collections' → logprob: -18.5
    5. '	Collection' → logprob: -19.125
    6. 'Snack' → logprob: -20.125
    7. '_COLLECTION' → logprob: -20.75
    8. ' Collection' → logprob: -20.875
    9. '   ' → logprob: -21.375
    10. '(Collection' → logprob: -21.375

Token 702: '(sn' (ID: 158742)
  Prédit: '(sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -0.0014322625938802958
    2. ',' → logprob: -6.751432418823242
    3. 'sn' → logprob: -9.001432418823242
    4. '(
' → logprob: -9.251432418823242
    5. '(' → logprob: -11.001432418823242
    6. '(sk' → logprob: -11.751432418823242
    7. '(sl' → logprob: -12.251432418823242
    8. '(s' → logprob: -12.376432418823242
    9. '```' → logprob: -13.376432418823242
    10. ',s' → logprob: -14.001432418823242

Token 703: 'acks' (ID: 7367)
  Prédit: 'acks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acks' → logprob: -2.165027217415627e-05
    2. 'cks' → logprob: -11.500021934509277
    3. 'aks' → logprob: -12.000021934509277
    4. '
' → logprob: -13.125021934509277
    5. 'a' → logprob: -13.500021934509277
    6. '```' → logprob: -14.750021934509277
    7. '(' → logprob: -14.875021934509277
    8. 'ack' → logprob: -14.875021934509277
    9. '[' → logprob: -16.25002098083496
    10. '``' → logprob: -16.62502098083496

Token 704: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028159678913652897
    2. ',n' → logprob: -8.50028133392334
    3. ' ,' → logprob: -9.50028133392334
    4. ',
' → logprob: -12.75028133392334
    5. '‌,' → logprob: -15.75028133392334
    6. '),' → logprob: -16.000282287597656
    7. '   ' → logprob: -17.000282287597656
    8. '       ' → logprob: -18.000282287597656
    9. ')' → logprob: -18.000282287597656
    10. ',N' → logprob: -18.125282287597656

Token 705: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.3132699131965637
    2. ' nutrient' → logprob: -1.313269853591919
    3. ' nutrients' → logprob: -12.31326961517334
    4. 'nutrition' → logprob: -14.43826961517334
    5. ' nutrit' → logprob: -14.56326961517334
    6. '   ' → logprob: -14.68826961517334
    7. '```' → logprob: -15.06326961517334
    8. 'nit' → logprob: -15.18826961517334
    9. 'N' → logprob: -15.31326961517334
    10. ' nut' → logprob: -15.56326961517334

Token 706: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -2.7610454708337784e-05
    2. 'limits' → logprob: -10.500027656555176
    3. '_limit' → logprob: -17.87502670288086
    4. ' limits' → logprob: -18.37502670288086
    5. 'Limits' → logprob: -18.75002670288086
    6. '
' → logprob: -19.50002670288086
    7. '```' → logprob: -20.75002670288086
    8. '_' → logprob: -20.87502670288086
    9. '_levels' → logprob: -21.50002670288086
    10. '_lim' → logprob: -22.00002670288086

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ',
' → logprob: -14.000076293945312
    4. 'cal' → logprob: -15.250076293945312
    5. '   ' → logprob: -17.125076293945312
    6. '       ' → logprob: -17.625076293945312
    7. ',c' → logprob: -18.125076293945312
    8. ' calorie' → logprob: -19.375076293945312
    9. ',\
' → logprob: -19.500076293945312
    10. '<|end|>' → logprob: -19.625076293945312

Token 708: ' calorie' (ID: 66006)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.008614926598966122
    2. ' calorie' → logprob: -4.758615016937256
    3. 'Cal' → logprob: -16.008615493774414
    4. '
' → logprob: -16.383615493774414
    5. ' cal' → logprob: -16.633615493774414
    6. '```' → logprob: -17.008615493774414
    7. '	cal' → logprob: -17.008615493774414
    8. '   ' → logprob: -17.258615493774414
    9. '_cal' → logprob: -17.633615493774414
    10. 'c' → logprob: -18.008615493774414

Token 709: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0233865175396204
    2. 'limit' → logprob: -3.7733864784240723
    3. 't' → logprob: -9.02338695526123
    4. 'Limit' → logprob: -11.52338695526123
    5. 'it' → logprob: -12.14838695526123
    6. 'imit' → logprob: -12.52338695526123
    7. '-limit' → logprob: -14.64838695526123
    8. ' limit' → logprob: -14.89838695526123
    9. '_limits' → logprob: -15.52338695526123
    10. 'lim' → logprob: -15.89838695526123

Token 710: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 711: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002666999935172498
    2. '
' → logprob: -8.750267028808594
    3. '   ' → logprob: -9.625267028808594
    4. 'from' → logprob: -11.625267028808594
    5. ' def' → logprob: -11.750267028808594
    6. '<|end|>' → logprob: -11.750267028808594
    7. 'import' → logprob: -11.875267028808594
    8. '```' → logprob: -12.125267028808594
    9. '#' → logprob: -13.250267028808594
    10. '	def' → logprob: -14.125267028808594

Token 712: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012130453251302242
    2. '   ' → logprob: -9.375121116638184
    3. ' def' → logprob: -11.000121116638184
    4. '<|end|>' → logprob: -11.125121116638184
    5. '	def' → logprob: -12.750121116638184
    6. 'from' → logprob: -14.000121116638184
    7. '
' → logprob: -14.750121116638184
    8. '```' → logprob: -14.875121116638184
    9. '#' → logprob: -15.125121116638184
    10. ' ' → logprob: -16.3751220703125

Token 713: ' datasets' (ID: 57711)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.04711506888270378
    2. '__' → logprob: -3.1721150875091553
    3. ' parse' → logprob: -5.922114849090576
    4. 'def' → logprob: -7.047114849090576
    5. ' __' → logprob: -8.047115325927734
    6. 'read' → logprob: -9.547115325927734
    7. 'datasets' → logprob: -9.922115325927734
    8. '_parse' → logprob: -10.047115325927734
    9. 'iter' → logprob: -10.672115325927734
    10. 'iterate' → logprob: -12.047115325927734

Token 714: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.555654105497524e-05
    2. '(' → logprob: -10.12509536743164
    3. 'def' → logprob: -10.62509536743164
    4. 'self' → logprob: -10.75009536743164
    5. '   ' → logprob: -12.50009536743164
    6. '
' → logprob: -12.75009536743164
    7. '(
' → logprob: -13.75009536743164
    8. '_generator' → logprob: -14.37509536743164
    9. 's' → logprob: -15.00009536743164
    10. '():
' → logprob: -15.75009536743164

Token 715: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004014753212686628
    2. 'def' → logprob: -8.500401496887207
    3. '(' → logprob: -9.125401496887207
    4. 'self' → logprob: -9.750401496887207
    5. ')' → logprob: -11.625401496887207
    6. '   ' → logprob: -12.500401496887207
    7. '(
' → logprob: -12.875401496887207
    8. 's' → logprob: -13.125401496887207
    9. '():
' → logprob: -13.250401496887207
    10. '_generator' → logprob: -13.375401496887207

Token 716: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01959032565355301
    2. ':' → logprob: -5.144590377807617
    3. '(' → logprob: -5.394590377807617
    4. 'self' → logprob: -5.769590377807617
    5. '():' → logprob: -6.144590377807617
    6. '():
' → logprob: -6.894590377807617
    7. 'def' → logprob: -7.019590377807617
    8. '   ' → logprob: -7.769590377807617
    9. '(
' → logprob: -8.019590377807617
    10. '()' → logprob: -8.269590377807617

Token 717: ' Iterable' (ID: 71228)
  Prédit: 'Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterable' → logprob: -0.16043442487716675
    2. ' Iterable' → logprob: -1.9104344844818115
    3. 'Iterator' → logprob: -8.78543472290039
    4. ' Iterator' → logprob: -10.16043472290039
    5. 'iter' → logprob: -11.28543472290039
    6. 'Iter' → logprob: -12.78543472290039
    7. 'List' → logprob: -13.28543472290039
    8. '_iter' → logprob: -14.53543472290039
    9. ' iter' → logprob: -14.66043472290039
    10. ' iterable' → logprob: -15.16043472290039

Token 718: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014614248648285866
    2. ':' → logprob: -5.014614105224609
    3. ':
' → logprob: -5.639614105224609
    4. '[
' → logprob: -5.764614105224609
    5. '   ' → logprob: -7.139614105224609
    6. '['' → logprob: -9.26461410522461
    7. '[T' → logprob: -9.26461410522461
    8. ' ' → logprob: -10.13961410522461
    9. '[List' → logprob: -10.51461410522461
    10. '[(' → logprob: -10.51461410522461

Token 719: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.5954712075181305e-05
    2. ' Tuple' → logprob: -10.500036239624023
    3. 'Optional' → logprob: -12.000036239624023
    4. 'None' → logprob: -14.250036239624023
    5. 'tuple' → logprob: -14.750036239624023
    6. ''' → logprob: -14.750036239624023
    7. '   ' → logprob: -15.375036239624023
    8. 'Tu' → logprob: -15.375036239624023
    9. ' ' → logprob: -16.125036239624023
    10. '```' → logprob: -16.875036239624023

Token 720: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.064297824399546e-05
    2. '   ' → logprob: -9.875070571899414
    3. '[
' → logprob: -11.250070571899414
    4. 'Snack' → logprob: -12.750070571899414
    5. '       ' → logprob: -13.750070571899414
    6. '[List' → logprob: -14.875070571899414
    7. 'Sn' → logprob: -15.000070571899414
    8. ' [' → logprob: -15.250070571899414
    9. ']' → logprob: -15.875070571899414
    10. '```' → logprob: -15.875070571899414

Token 721: 'Snack' (ID: 86358)
  Prédit: 'Snack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Snack' → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -12.875003814697266
    3. 'Sn' → logprob: -14.500003814697266
    4. '
' → logprob: -15.750003814697266
    5. ' Snack' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.125003814697266
    7. 'List' → logprob: -16.250003814697266
    8. '[' → logprob: -17.125003814697266
    9. 'SN' → logprob: -17.375003814697266
    10. ']' → logprob: -17.625003814697266

Token 722: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -16.375
    3. 'Snack' → logprob: -16.5
    4. '   ' → logprob: -17.625
    5. 'collection' → logprob: -18.0
    6. '[' → logprob: -18.0
    7. '	Collection' → logprob: -18.125
    8. '_collection' → logprob: -18.625
    9. 'Collections' → logprob: -18.75
    10. '_COLLECTION' → logprob: -19.875

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8126592193730175e-05
    2. ',N' → logprob: -9.8750581741333
    3. ' ,' → logprob: -12.2500581741333
    4. '   ' → logprob: -13.7500581741333
    5. 'N' → logprob: -15.2500581741333
    6. '[N' → logprob: -15.3750581741333
    7. ',List' → logprob: -15.7500581741333
    8. ',
' → logprob: -17.500057220458984
    9. '       ' → logprob: -17.625057220458984
    10. '‌,' → logprob: -17.875057220458984

Token 724: ' Nutr' (ID: 122420)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6329923272132874
    2. ' Nutr' → logprob: -0.7579923272132874
    3. '   ' → logprob: -8.3829927444458
    4. ' ' → logprob: -10.0079927444458
    5. ' nutrient' → logprob: -10.1329927444458
    6. ' N' → logprob: -10.5079927444458
    7. ' Nut' → logprob: -11.3829927444458
    8. '    ' → logprob: -11.8829927444458
    9. '  ' → logprob: -12.0079927444458
    10. 'Nutrition' → logprob: -12.2579927444458

Token 725: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -2.629921436891891e-05
    2. 'ent' → logprob: -11.75002670288086
    3. 'utr' → logprob: -12.75002670288086
    4. 'Limits' → logprob: -12.75002670288086
    5. 'Limit' → logprob: -13.12502670288086
    6. 'ients' → logprob: -13.37502670288086
    7. '_limits' → logprob: -13.75002670288086
    8. 'uent' → logprob: -13.87502670288086
    9. 'it' → logprob: -14.25002670288086
    10. 'int' → logprob: -14.25002670288086

Token 726: 'Limits' (ID: 87018)
  Prédit: 'Limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Limits' → logprob: -2.696889623621246e-06
    2. 'limits' → logprob: -13.25000286102295
    3. ' Limits' → logprob: -14.62500286102295
    4. '_limits' → logprob: -15.37500286102295
    5. 'Limit' → logprob: -16.375001907348633
    6. ' limits' → logprob: -16.875001907348633
    7. 'L' → logprob: -17.375001907348633
    8. 'imits' → logprob: -17.375001907348633
    9. 'Lim' → logprob: -17.625001907348633
    10. ',' → logprob: -17.875001907348633

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ',int' → logprob: -10.625043869018555
    3. ' ,' → logprob: -10.875043869018555
    4. '   ' → logprob: -14.750043869018555
    5. ',
' → logprob: -16.750043869018555
    6. ',List' → logprob: -17.375043869018555
    7. '
' → logprob: -18.250043869018555
    8. ',Integer' → logprob: -18.500043869018555
    9. ',float' → logprob: -19.125043869018555
    10. 'int' → logprob: -19.250043869018555

Token 728: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004884536610916257
    2. ' int' → logprob: -7.62548828125
    3. '   ' → logprob: -15.25048828125
    4. '[int' → logprob: -15.50048828125
    5. ' ' → logprob: -18.00048828125
    6. '(int' → logprob: -18.25048828125
    7. '	int' → logprob: -18.50048828125
    8. '```' → logprob: -18.87548828125
    9. '<int' → logprob: -19.12548828125
    10. '  ' → logprob: -19.37548828125

Token 729: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.21874475479125977
    2. ']:
' → logprob: -1.7187447547912598
    3. ']:' → logprob: -4.34374475479126
    4. ']]' → logprob: -5.59374475479126
    5. ']' → logprob: -8.218744277954102
    6. ']:
' → logprob: -8.843744277954102
    7. ']:

' → logprob: -10.718744277954102
    8. ']):
' → logprob: -10.843744277954102
    9. ']>' → logprob: -12.093744277954102
    10. ']]
' → logprob: -12.843744277954102

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004932218580506742
    2. ':' → logprob: -8.250493049621582
    3. ',' → logprob: -10.000493049621582
    4. '	' → logprob: -10.125493049621582
    5. '   ' → logprob: -10.125493049621582
    6. '```' → logprob: -10.375493049621582
    7. '<|end|>' → logprob: -10.875493049621582
    8. ' while' → logprob: -11.000493049621582
    9. '        
' → logprob: -11.750493049621582
    10. 'while' → logprob: -12.625493049621582

Token 731: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09651724994182587
    2. 'while' (adapté à ' while') → logprob: -2.596517324447632
    3. ' while' → logprob: -4.096517086029053
    4. '   ' → logprob: -7.096517086029053
    5. ' ' → logprob: -11.721517562866211
    6. '    ' → logprob: -13.096517562866211
    7. '	while' → logprob: -13.721517562866211
    8. '           ' → logprob: -13.846517562866211
    9. '      ' → logprob: -14.346517562866211
    10. '  ' → logprob: -14.471517562866211

Token 732: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.012466796673834324
    2. '(True' → logprob: -5.012466907501221
    3. ' True' → logprob: -5.262466907501221
    4. '   ' → logprob: -7.887466907501221
    5. 'dataset' → logprob: -9.387466430664062
    6. 'result' → logprob: -10.637466430664062
    7. '       ' → logprob: -10.762466430664062
    8. 'data' → logprob: -10.762466430664062
    9. '(' → logprob: -11.512466430664062
    10. 'true' → logprob: -11.512466430664062

Token 733: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6297292113304138
    2. ':' → logprob: -1.0047292709350586
    3. ':
' → logprob: -2.3797292709350586
    4. '       ' → logprob: -4.879729270935059
    5. '<|end|>' → logprob: -8.004729270935059
    6. '():
' → logprob: -9.129729270935059
    7. '<|end|>' → logprob: -9.129729270935059
    8. '```' → logprob: -9.504729270935059
    9. '   ' → logprob: -9.879729270935059
    10. '):
' → logprob: -10.504729270935059

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011102091521024704
    2. 'data' → logprob: -7.501110076904297
    3. 'dataset' → logprob: -8.126110076904297
    4. '       ' → logprob: -9.126110076904297
    5. 'try' → logprob: -9.501110076904297
    6. '   ' → logprob: -11.001110076904297
    7. ' data' → logprob: -11.251110076904297
    8. 'line' → logprob: -11.626110076904297
    9. ' dataset' → logprob: -12.001110076904297
    10. ' try' → logprob: -12.126110076904297

Token 735: ' parsed' (ID: 31111)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.12637166678905487
    2. 'result' → logprob: -2.3763716220855713
    3. 'data' → logprob: -4.37637186050415
    4. '           ' → logprob: -4.87637186050415
    5. 'parsed' (adapté à ' parsed') → logprob: -5.62637186050415
    6. ' dataset' → logprob: -6.37637186050415
    7. ' result' → logprob: -8.876371383666992
    8. '               ' → logprob: -9.251371383666992
    9. ' parsed' → logprob: -10.251371383666992
    10. 'd' → logprob: -10.626371383666992

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09748198091983795
    2. '=' → logprob: -2.5974819660186768
    3. '_dataset' → logprob: -4.097482204437256
    4. '_data' → logprob: -6.347482204437256
    5. '_set' → logprob: -10.347481727600098
    6. 'dataset' → logprob: -11.472481727600098
    7. '   ' → logprob: -12.347481727600098
    8. '_result' → logprob: -13.472481727600098
    9. '_' → logprob: -13.847481727600098
    10. 's' → logprob: -14.097481727600098

Token 737: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002024758607149124
    2. ' self' → logprob: -6.2520246505737305
    3. '           ' → logprob: -9.25202465057373
    4. '               ' → logprob: -15.62702465057373
    5. '(self' → logprob: -18.627025604248047
    6. '                   ' → logprob: -19.377025604248047
    7. '	self' → logprob: -20.127025604248047
    8. '   ' → logprob: -20.377025604248047
    9. '       ' → logprob: -21.002025604248047
    10. '          ' → logprob: -21.252025604248047

Token 738: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00027444821898825467
    2. 'parse' → logprob: -8.250274658203125
    3. '.' → logprob: -11.250274658203125
    4. ' parse' → logprob: -16.625274658203125
    5. ' .' → logprob: -17.875274658203125
    6. '=parse' → logprob: -17.875274658203125
    7. '	parse' → logprob: -18.750274658203125
    8. '(parse' → logprob: -19.625274658203125
    9. '.Parse' → logprob: -20.500274658203125
    10. '_parse' → logprob: -21.250274658203125

Token 739: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -1.5048530030981055e-06
    2. 'dataset' → logprob: -13.500001907348633
    3. ' dataset' → logprob: -18.625001907348633
    4. 'ataset' → logprob: -19.000001907348633
    5. 'Dataset' → logprob: -19.125001907348633
    6. '_data' → logprob: -19.625001907348633
    7. '_dat' → logprob: -20.000001907348633
    8. '_' → logprob: -21.125001907348633
    9. '
' → logprob: -21.125001907348633
    10. '_d' → logprob: -21.750001907348633

Token 740: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004592942073941231
    2. '
' → logprob: -6.1295928955078125
    3. '<|end|>' → logprob: -7.1295928955078125
    4. '            
' → logprob: -7.3795928955078125
    5. '<|end|>' → logprob: -7.5045928955078125
    6. ':
' → logprob: -9.754592895507812
    7. '       ' → logprob: -9.879592895507812
    8. ',' → logprob: -10.004592895507812
    9. ':' → logprob: -10.129592895507812
    10. '		' → logprob: -10.379592895507812

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004341221880167723
    2. 'if' → logprob: -6.379341125488281
    3. '       ' → logprob: -6.754341125488281
    4. ' if' → logprob: -7.004341125488281
    5. '<|end|>' → logprob: -8.629341125488281
    6. '
' → logprob: -9.004341125488281
    7. '            
' → logprob: -9.379341125488281
    8. '<|end|>' → logprob: -10.379341125488281
    9. '```' → logprob: -10.629341125488281
    10. '		' → logprob: -10.879341125488281

Token 742: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003974512219429016
    2. '           ' → logprob: -6.003974437713623
    3. ' if' → logprob: -6.503974437713623
    4. '
' → logprob: -16.37897491455078
    5. '            
' → logprob: -16.62897491455078
    6. '	if' → logprob: -17.50397491455078
    7. ';if' → logprob: -17.75397491455078
    8. 'yield' → logprob: -17.87897491455078
    9. 'If' → logprob: -18.25397491455078
    10. '       ' → logprob: -18.62897491455078

Token 743: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.4740805923938751
    2. ' parsed' → logprob: -0.9740805625915527
    3. '(parsed' → logprob: -12.974081039428711
    4. '           ' → logprob: -13.724081039428711
    5. 'parse' → logprob: -17.34908103942871
    6. ' not' → logprob: -17.47408103942871
    7. 'not' → logprob: -18.84908103942871
    8. 'Parsed' → logprob: -19.09908103942871
    9. 'par' → logprob: -19.97408103942871
    10. '               ' → logprob: -20.34908103942871

Token 744: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003611708991229534
    2. 'is' → logprob: -5.6286115646362305
    3. '	is' → logprob: -12.12861156463623
    4. '<|end|>' → logprob: -12.87861156463623
    5. ')is' → logprob: -14.50361156463623
    6. '<|end|>' → logprob: -14.50361156463623
    7. '==' → logprob: -14.62861156463623
    8. ')' → logprob: -14.75361156463623
    9. ' ==' → logprob: -14.75361156463623
    10. ' ' → logprob: -14.87861156463623

Token 745: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '_None' → logprob: -16.875123977661133
    4. '=None' → logprob: -18.500123977661133
    5. '(None' → logprob: -19.125123977661133
    6. '_none' → logprob: -19.625123977661133
    7. '   ' → logprob: -20.625123977661133
    8. 'none' → logprob: -21.000123977661133
    9. ',None' → logprob: -22.000123977661133
    10. '.None' → logprob: -22.500123977661133

Token 746: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.022845983505249
    2. ':
' → logprob: -1.022845983505249
    3. '               ' → logprob: -1.522845983505249
    4. '           ' → logprob: -2.772845983505249
    5. '       ' → logprob: -9.522846221923828
    6. '                   ' → logprob: -10.147846221923828
    7. '):
' → logprob: -10.522846221923828
    8. ':return' → logprob: -10.647846221923828
    9. '():
' → logprob: -11.272846221923828
    10. '   ' → logprob: -11.272846221923828

Token 747: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011439072113716975
    2. '           ' → logprob: -9.625114440917969
    3. ':' → logprob: -10.500114440917969
    4. ':
' → logprob: -11.500114440917969
    5. '                   ' → logprob: -12.375114440917969
    6. 'break' → logprob: -13.750114440917969
    7. '       ' → logprob: -14.250114440917969
    8. '                
' → logprob: -14.250114440917969
    9. '	           ' → logprob: -14.250114440917969
    10. '              ' → logprob: -14.375114440917969

Token 748: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03073101118206978
    2. ' break' → logprob: -4.030731201171875
    3. '               ' → logprob: -4.530731201171875
    4. '                   ' → logprob: -7.030731201171875
    5. 'return' → logprob: -7.280731201171875
    6. '           ' → logprob: -9.405731201171875
    7. '	break' → logprob: -10.030731201171875
    8. '
' → logprob: -10.905731201171875
    9. '_break' → logprob: -12.030731201171875
    10. '   ' → logprob: -13.155731201171875

Token 749: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3549957871437073
    2. ' yield' → logprob: -1.8549957275390625
    3. 'yield' → logprob: -1.9799957275390625
    4. '
' → logprob: -6.1049957275390625
    5. '	yield' → logprob: -6.4799957275390625
    6. 'Yield' → logprob: -8.729995727539062
    7. '            
' → logprob: -8.979995727539062
    8. ' yields' → logprob: -9.479995727539062
    9. '<|end|>' → logprob: -9.604995727539062
    10. '		' → logprob: -10.479995727539062

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019311968237161636
    2. 'yield' → logprob: -4.144311904907227
    3. ' yield' → logprob: -5.769311904907227
    4. '
' → logprob: -9.894311904907227
    5. '	yield' → logprob: -10.394311904907227
    6. '       ' → logprob: -10.519311904907227
    7. '		' → logprob: -10.644311904907227
    8. 'Yield' → logprob: -11.269311904907227
    9. '            
' → logprob: -13.019311904907227
    10. '	       ' → logprob: -14.269311904907227

Token 751: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.0013466615928336978
    2. '           ' → logprob: -7.001346588134766
    3. ' yield' → logprob: -7.751346588134766
    4. '	yield' → logprob: -12.376346588134766
    5. '
' → logprob: -15.001346588134766
    6. 'y' → logprob: -15.751346588134766
    7. 'Yield' → logprob: -15.876346588134766
    8. '       ' → logprob: -17.126346588134766
    9. 'sn' → logprob: -18.001346588134766
    10. '            
' → logprob: -18.251346588134766

Token 752: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.011048642918467522
    2. ' parsed' → logprob: -4.511048793792725
    3. '(parsed' → logprob: -14.261048316955566
    4. '*' → logprob: -16.386049270629883
    5. 'par' → logprob: -16.636049270629883
    6. 'Parsed' → logprob: -17.761049270629883
    7. 'parse' → logprob: -17.886049270629883
    8. 'parser' → logprob: -19.011049270629883
    9. '   ' → logprob: -20.386049270629883
    10. 'pars' → logprob: -20.886049270629883

Token 753: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019797838758677244
    2. 'if' → logprob: -6.251979827880859
    3. 'from' → logprob: -10.75197982788086
    4. 'import' → logprob: -11.37697982788086
    5. '
' → logprob: -11.87697982788086
    6. '```' → logprob: -12.25197982788086
    7. 'class' → logprob: -12.37697982788086
    8. '#' → logprob: -13.37697982788086
    9. ' if' → logprob: -14.87697982788086
    10. '<|end|>' → logprob: -15.50197982788086

Token 754: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03106127306818962
    2. 'if' → logprob: -3.5310611724853516
    3. 'from' → logprob: -7.031061172485352
    4. '```' → logprob: -7.906061172485352
    5. 'import' → logprob: -10.156061172485352
    6. ' if' → logprob: -11.656061172485352
    7. '#' → logprob: -11.906061172485352
    8. '<|end|>' → logprob: -13.656061172485352
    9. 'for' → logprob: -14.156061172485352
    10. '#!/' → logprob: -15.281061172485352

Token 755: ' Output' (ID: 18315)
  Prédit: 'Snack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Snack' → logprob: -0.5358211398124695
    2. 'Solution' → logprob: -1.1608211994171143
    3. 'Output' → logprob: -3.6608211994171143
    4. 'Main' → logprob: -3.7858211994171143
    5. ' Snack' → logprob: -3.7858211994171143
    6. ' Solution' → logprob: -4.785820960998535
    7. 'Result' → logprob: -5.285820960998535
    8. 'Sn' → logprob: -5.535820960998535
    9. 'Solver' → logprob: -5.785820960998535
    10. 'Diet' → logprob: -5.785820960998535

Token 756: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.04047820717096329
    2. 'Handler' → logprob: -3.540478229522705
    3. 'Formatter' → logprob: -5.915478229522705
    4. 'Printer' → logprob: -5.915478229522705
    5. 'Generator' → logprob: -6.040478229522705
    6. 'Builder' → logprob: -6.665478229522705
    7. 'ter' → logprob: -6.790478229522705
    8. 'Manager' → logprob: -8.165477752685547
    9. 'Processor' → logprob: -9.540477752685547
    10. 'Parser' → logprob: -9.790477752685547

Token 757: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017113516805693507
    2. ':
' → logprob: -6.376711368560791
    3. ' :' → logprob: -12.501710891723633
    4. ':def' → logprob: -12.626710891723633
    5. ':

' → logprob: -14.251710891723633
    6. '):' → logprob: -14.376710891723633
    7. '<|end|>' → logprob: -15.876710891723633
    8. ':void' → logprob: -16.001710891723633
    9. ':
' → logprob: -16.126710891723633
    10. '():' → logprob: -16.376710891723633

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.106736039626412e-05
    2. 'class' → logprob: -10.750031471252441
    3. ':' → logprob: -12.125031471252441
    4. 'def' → logprob: -12.875031471252441
    5. ' class' → logprob: -13.875031471252441
    6. ' def' → logprob: -15.750031471252441
    7. '   ' → logprob: -16.500030517578125
    8. '
' → logprob: -16.500030517578125
    9. ':
' → logprob: -16.875030517578125
    10. '[' → logprob: -17.125030517578125

Token 759: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3182971477508545
    2. '@' (adapté à ' @') → logprob: -1.3182971477508545
    3. '   ' → logprob: -5.818297386169434
    4. ' def' → logprob: -6.443297386169434
    5. ' @' → logprob: -7.693297386169434
    6. 'class' → logprob: -13.568297386169434
    7. '```' → logprob: -14.443297386169434
    8. '
' → logprob: -14.568297386169434
    9. ' ' → logprob: -15.193297386169434
    10. 'staticmethod' → logprob: -15.318297386169434

Token 760: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.7729658540920354e-05
    2. 'classmethod' → logprob: -10.500027656555176
    3. 'static' → logprob: -16.625028610229492
    4. 'dat' → logprob: -17.125028610229492
    5. 'property' → logprob: -20.375028610229492
    6. ' static' → logprob: -22.500028610229492
    7. 'Static' → logprob: -23.500028610229492
    8. '
' → logprob: -26.875028610229492
    9. 'stat' → logprob: -27.000028610229492
    10. '@' → logprob: -27.000028610229492

Token 761: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09794232249259949
    2. '
' → logprob: -2.847942352294922
    3. '   ' → logprob: -3.472942352294922
    4. ' def' → logprob: -5.472942352294922
    5. '	def' → logprob: -10.222942352294922
    6. '    
' → logprob: -10.597942352294922
    7. '(' → logprob: -11.597942352294922
    8. '()
' → logprob: -11.847942352294922
    9. '(def' → logprob: -11.847942352294922
    10. '(
' → logprob: -12.722942352294922

Token 762: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004410651978105307
    2. ' def' → logprob: -5.754410743713379
    3. '
' → logprob: -6.879410743713379
    4. '   ' → logprob: -8.504410743713379
    5. '	def' → logprob: -14.254410743713379
    6. '(def' → logprob: -16.504409790039062
    7. '_def' → logprob: -17.254409790039062
    8. '    
' → logprob: -17.754409790039062
    9. ':def' → logprob: -18.004409790039062
    10. '```' → logprob: -18.379409790039062

Token 763: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.1008713702030946e-06
    2. ' def' → logprob: -13.250001907348633
    3. '
' → logprob: -15.000001907348633
    4. '    
' → logprob: -20.625001907348633
    5. '```' → logprob: -21.375001907348633
    6. '	def' → logprob: -21.625001907348633
    7. '   ' → logprob: -21.750001907348633
    8. 'from' → logprob: -22.375001907348633
    9. 'de' → logprob: -22.750001907348633
    10. 'classmethod' → logprob: -23.875001907348633

Token 764: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0003370118502061814
    2. 'print' → logprob: -8.875336647033691
    3. 'allowed' → logprob: -8.875336647033691
    4. ' format' → logprob: -11.125336647033691
    5. 'join' → logprob: -11.250336647033691
    6. 'sn' → logprob: -11.375336647033691
    7. 'list' → logprob: -11.500336647033691
    8. 'prepare' → logprob: -13.875336647033691
    9. 'filter' → logprob: -14.125336647033691
    10. 'formats' → logprob: -14.375336647033691

Token 765: '_allowed' (ID: 104427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9632787704467773
    2. '(results' → logprob: -1.4632787704467773
    3. '(ids' → logprob: -2.8382787704467773
    4. '(List' → logprob: -2.8382787704467773
    5. '_results' → logprob: -2.9632787704467773
    6. '_allowed' → logprob: -3.2132787704467773
    7. '_list' → logprob: -3.5882787704467773
    8. 'allowed' → logprob: -4.088278770446777
    9. '(sn' → logprob: -4.088278770446777
    10. '(list' → logprob: -4.213278770446777

Token 766: '(' (ID: 7)
  Prédit: '(sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sn' → logprob: -0.26904019713401794
    2. '(ids' → logprob: -1.6440402269363403
    3. '_sn' → logprob: -3.519040107727051
    4. '(' → logprob: -4.519040107727051
    5. '_ids' → logprob: -6.269040107727051
    6. 'sn' → logprob: -9.39404010772705
    7. '```' → logprob: -10.39404010772705
    8. '(tokens' → logprob: -10.39404010772705
    9. '(indices' → logprob: -10.76904010772705
    10. '(list' → logprob: -11.64404010772705

Token 767: 'allowed' (ID: 32510)
  Prédit: 'allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.29522451758384705
    2. 'ids' → logprob: -1.7952245473861694
    3. 'sn' → logprob: -2.42022442817688
    4. ' snack' → logprob: -8.1702241897583
    5. ' allowed' → logprob: -8.7952241897583
    6. ' ids' → logprob: -9.4202241897583
    7. 'id' → logprob: -10.1702241897583
    8. 'allow' → logprob: -10.2952241897583
    9. 'indices' → logprob: -11.5452241897583
    10. 'snippet' → logprob: -11.6702241897583

Token 768: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.4139293134212494
    2. ':' → logprob: -1.1639293432235718
    3. '_sn' → logprob: -3.6639292240142822
    4. 'sn' → logprob: -7.413929462432861
    5. '):
' → logprob: -9.038928985595703
    6. 'ids' → logprob: -9.413928985595703
    7. '```' → logprob: -9.788928985595703
    8. ')' → logprob: -9.913928985595703
    9. 's' → logprob: -10.038928985595703
    10. '_list' → logprob: -10.163928985595703

Token 769: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010385256027802825
    2. ')' → logprob: -6.876038551330566
    3. '):' → logprob: -12.876038551330566
    4. '   ' → logprob: -13.876038551330566
    5. '(ids' → logprob: -14.251038551330566
    6. ',' → logprob: -14.501038551330566
    7. '```' → logprob: -14.626038551330566
    8. '):
' → logprob: -15.501038551330566
    9. '_ids' → logprob: -15.876038551330566
    10. '       ' → logprob: -16.75103759765625

Token 770: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.4849443838757e-06
    2. ' List' → logprob: -12.625004768371582
    3. 'list' → logprob: -13.750004768371582
    4. '[List' → logprob: -16.750003814697266
    5. ')' → logprob: -17.500003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '	List' → logprob: -20.625003814697266
    8. ' ' → logprob: -21.125003814697266
    9. '```' → logprob: -21.750003814697266
    10. '(List' → logprob: -21.750003814697266

Token 771: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.451116051815916e-05
    2. 'int' → logprob: -10.625024795532227
    3. '<int' → logprob: -15.625024795532227
    4. ']int' → logprob: -18.000024795532227
    5. '=int' → logprob: -18.625024795532227
    6. ':int' → logprob: -19.000024795532227
    7. '[' → logprob: -19.500024795532227
    8. '[str' → logprob: -19.625024795532227
    9. ' int' → logprob: -19.875024795532227
    10. '
' → logprob: -19.875024795532227

Token 772: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028083212673664093
    2. '])' → logprob: -5.877808094024658
    3. '`)' → logprob: -13.502808570861816
    4. ' )' → logprob: -14.127808570861816
    5. '>)' → logprob: -15.002808570861816
    6. '})' → logprob: -15.252808570861816
    7. '）' → logprob: -15.627808570861816
    8. '   ' → logprob: -15.752808570861816
    9. ''])' → logprob: -16.2528076171875
    10. ',)' → logprob: -16.3778076171875

Token 773: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.009884522296488285
    2. ' ->' → logprob: -4.759884357452393
    3. ')' → logprob: -7.259884357452393
    4. ')->' → logprob: -8.38488483428955
    5. '()->' → logprob: -8.88488483428955
    6. '(' → logprob: -9.50988483428955
    7. '()' → logprob: -10.25988483428955
    8. '->[' → logprob: -11.13488483428955
    9. '   ' → logprob: -11.25988483428955
    10. '→' → logprob: -11.63488483428955

Token 774: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0014218994183465838
    2. ' str' → logprob: -7.126421928405762
    3. ''' → logprob: -7.501421928405762
    4. '"' → logprob: -10.626421928405762
    5. '(str' → logprob: -11.001421928405762
    6. '   ' → logprob: -11.501421928405762
    7. '""' → logprob: -11.626421928405762
    8. '''' → logprob: -13.376421928405762
    9. '
' → logprob: -14.251421928405762
    10. ''\' → logprob: -14.251421928405762

Token 775: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21682773530483246
    2. ':
' → logprob: -1.9668277502059937
    3. '(' → logprob: -3.841827630996704
    4. '():
' → logprob: -4.341827869415283
    5. '(
' → logprob: -5.091827869415283
    6. '():' → logprob: -5.466827869415283
    7. ':return' → logprob: -5.466827869415283
    8. '('' → logprob: -7.466827869415283
    9. '(":' → logprob: -7.466827869415283
    10. '   ' → logprob: -7.966827869415283

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9945602416992188
    2. ' if' → logprob: -1.3695602416992188
    3. 'return' → logprob: -1.8695602416992188
    4. 'if' → logprob: -1.9945602416992188
    5. ' return' → logprob: -2.4945602416992188
    6. ''' → logprob: -5.869560241699219
    7. ',' → logprob: -9.744560241699219
    8. '"' → logprob: -9.869560241699219
    9. '   ' → logprob: -9.869560241699219
    10. '',' → logprob: -10.494560241699219

Token 777: ' if' (ID: 538)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2521515488624573
    2. 'if' (adapté à ' if') → logprob: -1.8771514892578125
    3. 'return' → logprob: -2.7521514892578125
    4. '"' → logprob: -5.3771514892578125
    5. ' if' → logprob: -7.3771514892578125
    6. '',' → logprob: -8.252151489257812
    7. ' return' → logprob: -8.502151489257812
    8. '','.' → logprob: -8.752151489257812
    9. ' '' → logprob: -9.127151489257812
    10. '",' → logprob: -10.752151489257812

Token 778: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.013595787808299065
    2. ' not' → logprob: -4.5135955810546875
    3. 'allowed' → logprob: -6.0135955810546875
    4. 'len' → logprob: -9.388595581054688
    5. ' allowed' → logprob: -11.513595581054688
    6. '   ' → logprob: -12.763595581054688
    7. '	not' → logprob: -13.638595581054688
    8. 'no' → logprob: -14.638595581054688
    9. ' len' → logprob: -14.763595581054688
    10. 'allow' → logprob: -15.388595581054688

Token 779: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.0009114635176956654
    2. ' allowed' → logprob: -7.000911235809326
    3. '.allowed' → logprob: -18.250911712646484
    4. '_allowed' → logprob: -18.375911712646484
    5. 'allow' → logprob: -18.875911712646484
    6. 'approved' → logprob: -19.750911712646484
    7. 'enabled' → logprob: -19.750911712646484
    8. 'Allowed' → logprob: -20.750911712646484
    9. '
' → logprob: -20.875911712646484
    10. 'available' → logprob: -21.375911712646484

Token 780: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.0008494134526699781
    2. '_allowed' → logprob: -7.25084924697876
    3. 'allowed' → logprob: -9.250849723815918
    4. 's' → logprob: -11.000849723815918
    5. ' allowed' → logprob: -11.125849723815918
    6. ' _' → logprob: -12.000849723815918
    7. 'ids' → logprob: -13.125849723815918
    8. '_' → logprob: -14.375849723815918
    9. ' ' → logprob: -14.625849723815918
    10. ' ids' → logprob: -14.625849723815918

Token 781: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47418126463890076
    2. ':' → logprob: -0.9741812944412231
    3. ':return' → logprob: -9.474181175231934
    4. ':
' → logprob: -10.849181175231934
    5. '   ' → logprob: -13.099181175231934
    6. '[' → logprob: -13.224181175231934
    7. 'return' → logprob: -14.099181175231934
    8. ':

' → logprob: -14.099181175231934
    9. '):
' → logprob: -14.099181175231934
    10. ')' → logprob: -14.349181175231934

Token 782: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14326360821723938
    2. 'return' → logprob: -2.268263578414917
    3. ' return' → logprob: -3.768263578414917
    4. ':
' → logprob: -5.518263816833496
    5. '       ' → logprob: -6.268263816833496
    6. ':' → logprob: -7.518263816833496
    7. ':return' → logprob: -9.393263816833496
    8. '   ' → logprob: -9.518263816833496
    9. '"' → logprob: -10.018263816833496
    10. '	   ' → logprob: -10.643263816833496

Token 783: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0156817939132452
    2. '"' → logprob: -4.890681743621826
    3. ''' → logprob: -5.515681743621826
    4. '"-' → logprob: -6.515681743621826
    5. ''-' → logprob: -6.765681743621826
    6. '           ' → logprob: -7.390681743621826
    7. ' return' → logprob: -7.890681743621826
    8. ''\' → logprob: -9.015682220458984
    9. '"\' → logprob: -9.265682220458984
    10. '       ' → logprob: -9.890682220458984

Token 784: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8426600694656372
    2. '"' → logprob: -1.0926600694656372
    3. ''\' → logprob: -2.9676599502563477
    4. '"-' → logprob: -2.9676599502563477
    5. ''-' → logprob: -2.9676599502563477
    6. '"\' → logprob: -3.3426599502563477
    7. '""' → logprob: -4.092659950256348
    8. '''' → logprob: -4.592659950256348
    9. '"No' → logprob: -4.717659950256348
    10. ''N' → logprob: -5.842659950256348

Token 785: 'NA' (ID: 9555)
  Prédit: 'NONE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NONE' → logprob: -0.20536847412586212
    2. '0' → logprob: -2.7053685188293457
    3. 'None' → logprob: -3.0803685188293457
    4. 'none' → logprob: -3.0803685188293457
    5. '"' → logprob: -4.955368518829346
    6. 'NO' → logprob: -5.455368518829346
    7. 'No' → logprob: -5.705368518829346
    8. '-' → logprob: -5.830368518829346
    9. ' NONE' → logprob: -6.330368518829346
    10. 'no' → logprob: -6.330368518829346

Token 786: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2581515312194824
    2. '"
' → logprob: -1.5081515312194824
    3. '\n' → logprob: -5.133151531219482
    4. '"
' → logprob: -8.50815200805664
    5. '"\' → logprob: -10.50815200805664
    6. '""' → logprob: -11.13315200805664
    7. ' "' → logprob: -11.50815200805664
    8. '
' → logprob: -11.63315200805664
    9. '"

' → logprob: -11.75815200805664
    10. 's' → logprob: -12.13315200805664

Token 787: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4298922121524811
    2. '       ' → logprob: -1.0548921823501587
    3. 'return' → logprob: -7.429892063140869
    4. '        
' → logprob: -8.304892539978027
    5. '\n' → logprob: -9.054892539978027
    6. '
' → logprob: -9.429892539978027
    7. ' return' → logprob: -10.054892539978027
    8. ' 
' → logprob: -10.429892539978027
    9. '    
' → logprob: -10.804892539978027
    10. '  
' → logprob: -11.179892539978027

Token 788: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5312243103981018
    2. 'return' (adapté à ' return') → logprob: -0.9062243103981018
    3. ''' → logprob: -5.531224250793457
    4. '"' → logprob: -5.781224250793457
    5. '       ' → logprob: -7.156224250793457
    6. '
' → logprob: -9.031224250793457
    7. ' '' → logprob: -9.906224250793457
    8. ' "' → logprob: -10.531224250793457
    9. ' 
' → logprob: -11.406224250793457
    10. '        
' → logprob: -11.406224250793457

Token 789: ' '\' (ID: 10855)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4745505452156067
    2. '"' → logprob: -0.9745505452156067
    3. ' '' → logprob: -8.224550247192383
    4. '','.' → logprob: -9.349550247192383
    5. ' "' → logprob: -9.599550247192383
    6. '",".' → logprob: -10.349550247192383
    7. '',' → logprob: -12.474550247192383
    8. '"\' → logprob: -13.099550247192383
    9. '",' → logprob: -13.224550247192383
    10. 'str' → logprob: -13.349550247192383

Token 790: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08017582446336746
    2. ''.' → logprob: -3.3301758766174316
    3. 'n' → logprob: -3.7051758766174316
    4. 'r' → logprob: -4.705175876617432
    5. ''\' → logprob: -6.705175876617432
    6. '\n' → logprob: -7.455175876617432
    7. ',' → logprob: -7.580175876617432
    8. ' '.' → logprob: -7.580175876617432
    9. '','.' → logprob: -7.830175876617432
    10. '''.' → logprob: -7.830175876617432

Token 791: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.006182845216244459
    2. '".' → logprob: -5.256182670593262
    3. ''' → logprob: -7.006182670593262
    4. '''.' → logprob: -10.256182670593262
    5. ' '.' → logprob: -12.506182670593262
    6. '"' → logprob: -13.756182670593262
    7. '.join' → logprob: -14.006182670593262
    8. '`.' → logprob: -14.631182670593262
    9. '.' → logprob: -15.006182670593262
    10. 'join' → logprob: -15.131182670593262

Token 792: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.650518920039758e-06
    2. ' join' → logprob: -13.125003814697266
    3. ''.' → logprob: -14.250003814697266
    4. '''.' → logprob: -14.500003814697266
    5. ''' → logprob: -15.625003814697266
    6. 'sep' → logprob: -15.750003814697266
    7. ''\' → logprob: -17.125003814697266
    8. '.join' → logprob: -17.250003814697266
    9. '```' → logprob: -17.250003814697266
    10. '".' → logprob: -17.875003814697266

Token 793: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.504692792892456
    2. 'str' → logprob: -1.004692792892456
    3. 'map' → logprob: -3.754692792892456
    4. '(map' → logprob: -5.004693031311035
    5. '[str' → logprob: -10.379693031311035
    6. '           ' → logprob: -13.254693031311035
    7. ' str' → logprob: -13.504693031311035
    8. '       ' → logprob: -13.629693031311035
    9. '	str' → logprob: -14.379693031311035
    10. ' map' → logprob: -14.504693031311035

Token 794: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.046414073556661606
    2. '(i' → logprob: -3.5464141368865967
    3. '(s' → logprob: -4.546413898468018
    4. 'id' → logprob: -6.046413898468018
    5. '(x' → logprob: -6.546413898468018
    6. '(_' → logprob: -6.796413898468018
    7. '(sn' → logprob: -7.921413898468018
    8. '(' → logprob: -8.046414375305176
    9. '(a' → logprob: -8.671414375305176
    10. '(_)' → logprob: -9.421414375305176

Token 795: '_)' (ID: 35080)
  Prédit: '_)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.00789288617670536
    2. ')' → logprob: -5.007893085479736
    3. '_' → logprob: -6.882893085479736
    4. '_id' → logprob: -9.007892608642578
    5. '_)
' → logprob: -10.882892608642578
    6. '_sn' → logprob: -13.007892608642578
    7. '_i' → logprob: -13.257892608642578
    8. 's' → logprob: -13.632892608642578
    9. '_=' → logprob: -14.132892608642578
    10. '_]' → logprob: -14.132892608642578

Token 796: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11220946907997131
    2. ' for' → logprob: -2.4872095584869385
    3. ')' → logprob: -4.362209320068359
    4. '(id' → logprob: -4.612209320068359
    5. 'id' → logprob: -8.61220932006836
    6. '(i' → logprob: -9.73720932006836
    7. '```' → logprob: -10.98720932006836
    8. '(' → logprob: -11.11220932006836
    9. '   ' → logprob: -11.86220932006836
    10. '(sn' → logprob: -11.98720932006836

Token 797: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.6166903151315637e-05
    2. ' id' → logprob: -11.125016212463379
    3. 'allowed' → logprob: -13.500016212463379
    4. ' allowed' → logprob: -19.500015258789062
    5. '	id' → logprob: -19.750015258789062
    6. ' ' → logprob: -20.750015258789062
    7. 'in' → logprob: -21.125015258789062
    8. '_id' → logprob: -22.000015258789062
    9. '   ' → logprob: -22.000015258789062
    10. 'allow' → logprob: -22.375015258789062

Token 798: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10708931088447571
    2. 'in' → logprob: -2.7320892810821533
    3. ' in' → logprob: -3.3570892810821533
    4. 'id' → logprob: -6.482089519500732
    5. '_id' → logprob: -9.607089042663574
    6. '_in' → logprob: -10.482089042663574
    7. '_
' → logprob: -12.607089042663574
    8. ' ' → logprob: -13.357089042663574
    9. ' id' → logprob: -13.357089042663574
    10. '
' → logprob: -15.107089042663574

Token 799: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128259226679802
    2. 'in' → logprob: -2.237825870513916
    3. ' ' → logprob: -13.487826347351074
    4. '	in' → logprob: -14.362826347351074
    5. 'id' → logprob: -14.487826347351074
    6. ')' → logprob: -14.862826347351074
    7. 'n' → logprob: -15.487826347351074
    8. ' ' → logprob: -16.362825393676758
    9. '<|end|>' → logprob: -16.362825393676758
    10. '_in' → logprob: -16.487825393676758

Token 800: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -2.7610454708337784e-05
    2. ' allowed' → logprob: -10.500027656555176
    3. 'sorted' → logprob: -17.00002670288086
    4. '.allowed' → logprob: -19.87502670288086
    5. '_allowed' → logprob: -20.87502670288086
    6. 'ordered' → logprob: -21.50002670288086
    7. 'allow' → logprob: -22.37502670288086
    8. 'approved' → logprob: -22.62502670288086
    9. '   ' → logprob: -22.87502670288086
    10. 'accepted' → logprob: -23.62502670288086

Token 801: '_ids' (ID: 17465)
  Prédit: '_ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -3.225939872208983e-05
    2. 'ids' → logprob: -10.750032424926758
    3. 's' → logprob: -12.000032424926758
    4. 'allowed' → logprob: -13.250032424926758
    5. '_' → logprob: -14.125032424926758
    6. '_allowed' → logprob: -14.250032424926758
    7. '_id' → logprob: -14.500032424926758
    8. '_i' → logprob: -15.125032424926758
    9. 'd' → logprob: -15.625032424926758
    10. ')' → logprob: -16.500032424926758

Token 802: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.966313281329349e-05
    2. ')
' → logprob: -10.000049591064453
    3. '       ' → logprob: -13.375049591064453
    4. ')+' → logprob: -13.625049591064453
    5. ' )' → logprob: -13.875049591064453
    6. '   ' → logprob: -15.625049591064453
    7. ')return' → logprob: -16.375049591064453
    8. ')}' → logprob: -17.125049591064453
    9. '
' → logprob: -17.375049591064453
    10. ').' → logprob: -17.625049591064453

Token 803: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033610546961426735
    2. '<|end|>' → logprob: -6.253361225128174
    3. 'class' → logprob: -7.253361225128174
    4. 'if' → logprob: -7.378361225128174
    5. 'import' → logprob: -10.378360748291016
    6. '#' → logprob: -10.628360748291016
    7. '```' → logprob: -10.753360748291016
    8. 'from' → logprob: -11.003360748291016
    9. '
' → logprob: -13.003360748291016
    10. '#!/' → logprob: -13.878360748291016

Token 804: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4769931435585022
    2. ' main' → logprob: -0.9769931435585022
    3. 'process' → logprob: -5.976993083953857
    4. ' process' → logprob: -8.226993560791016
    5. 'solve' → logprob: -10.101993560791016
    6. ' solve' → logprob: -10.226993560791016
    7. 'run' → logprob: -10.851993560791016
    8. ' run' → logprob: -11.476993560791016
    9. '_main' → logprob: -15.351993560791016
    10. ' find' → logprob: -15.476993560791016

Token 805: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.014684110297821e-06
    2. '():
' → logprob: -11.875008583068848
    3. ' ():' → logprob: -13.375008583068848
    4. '()' → logprob: -14.750008583068848
    5. '():
' → logprob: -18.125009536743164
    6. '()>' → logprob: -18.625009536743164
    7. '_' → logprob: -20.000009536743164
    8. '():

' → logprob: -20.250009536743164
    9. '()->' → logprob: -20.375009536743164
    10. ':' → logprob: -20.375009536743164

Token 806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16990584135055542
    2. 'import' → logprob: -2.1699059009552
    3. ' import' → logprob: -3.1699059009552
    4. ' input' → logprob: -10.919905662536621
    5. 'from' → logprob: -11.169905662536621
    6. ' from' → logprob: -11.294905662536621
    7. 'input' → logprob: -12.169905662536621
    8. '```' → logprob: -12.169905662536621
    9. '	import' → logprob: -13.419905662536621
    10. ' parser' → logprob: -13.669905662536621

Token 807: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.07890642434358597
    2. ' import' → logprob: -2.578906536102295
    3. '   ' → logprob: -11.078906059265137
    4. 'from' → logprob: -14.203906059265137
    5. 'input' → logprob: -14.828906059265137
    6. ' input' → logprob: -15.828906059265137
    7. '```' → logprob: -16.828907012939453
    8. '	import' → logprob: -17.453907012939453
    9. ' from' → logprob: -17.828907012939453
    10. ' ' → logprob: -18.453907012939453

Token 808: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20141665637493134
    2. ' sys' → logprob: -1.7014166116714478
    3. '=sys' → logprob: -12.951416969299316
    4. '	sys' → logprob: -13.951416969299316
    5. '_sys' → logprob: -17.076416015625
    6. '(sys' → logprob: -18.201416015625
    7. '.sys' → logprob: -18.826416015625
    8. 's' → logprob: -20.951416015625
    9. '_' → logprob: -21.326416015625
    10. '/sys' → logprob: -21.701416015625

Token 809: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02801327407360077
    2. 'input' → logprob: -4.278013229370117
    3. '
' → logprob: -4.903013229370117
    4. ' input' → logprob: -6.153013229370117
    5. ' lines' → logprob: -6.278013229370117
    6. '    
' → logprob: -6.903013229370117
    7. 'for' → logprob: -7.153013229370117
    8. ' for' → logprob: -7.778013229370117
    9. 'lines' → logprob: -9.653013229370117
    10. '	lines' → logprob: -11.028013229370117

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08800361305475235
    2. 'input' → logprob: -2.838003635406494
    3. 'parser' → logprob: -3.838003635406494
    4. ' parser' → logprob: -6.088003635406494
    5. ' input' → logprob: -6.338003635406494
    6. ' lines' → logprob: -10.213003158569336
    7. '	parser' → logprob: -10.213003158569336
    8. 'inputs' → logprob: -10.838003158569336
    9. 'lines' → logprob: -11.213003158569336
    10. 'for' → logprob: -12.088003158569336

Token 811: ' parser' (ID: 14216)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10624915361404419
    2. 'parser' (adapté à ' parser') → logprob: -2.7312490940093994
    3. '   ' → logprob: -4.2312493324279785
    4. 'for' → logprob: -4.3562493324279785
    5. 'lines' → logprob: -4.8562493324279785
    6. 'inputs' → logprob: -8.10624885559082
    7. ' input' → logprob: -8.98124885559082
    8. ' lines' → logprob: -10.23124885559082
    9. ' parser' → logprob: -10.60624885559082
    10. ' for' → logprob: -11.60624885559082

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193166732788086
    2. '=' → logprob: -1.5019316673278809
    3. ' =
' → logprob: -14.501932144165039
    4. ' ' → logprob: -14.626932144165039
    5. '=
' → logprob: -14.751932144165039
    6. '=input' → logprob: -15.501932144165039
    7. '＝' → logprob: -15.626932144165039
    8. ' ' → logprob: -15.876932144165039
    9. '<|end|>' → logprob: -15.876932144165039
    10. '=parse' → logprob: -17.00193214416504

Token 813: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.676292231422849e-05
    2. ' Input' → logprob: -11.000017166137695
    3. '	Input' → logprob: -22.125017166137695
    4. '<Input' → logprob: -22.625017166137695
    5. '_input' → logprob: -22.750017166137695
    6. '_Input' → logprob: -23.250017166137695
    7. 'input' → logprob: -23.625017166137695
    8. '\Input' → logprob: -25.125017166137695
    9. 'Output' → logprob: -25.250017166137695
    10. '.Input' → logprob: -25.250017166137695

Token 814: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -16.375
    3. '_parser' → logprob: -20.0
    4. ' Parser' → logprob: -21.5
    5. '(Parser' → logprob: -22.125
    6. '.Parser' → logprob: -22.5
    7. 'Parse' → logprob: -22.875
    8. ' parser' → logprob: -22.875
    9. 'Processor' → logprob: -23.375
    10. '-parser' → logprob: -23.375

Token 815: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0005543439765460789
    2. 'sys' → logprob: -7.50055456161499
    3. ' sys' → logprob: -14.500554084777832
    4. '(system' → logprob: -15.125554084777832
    5. '(' → logprob: -15.375554084777832
    6. '=sys' → logprob: -15.375554084777832
    7. '	sys' → logprob: -16.25055503845215
    8. '(
' → logprob: -17.87555503845215
    9. '((' → logprob: -18.12555503845215
    10. '   ' → logprob: -18.50055503845215

Token 816: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00021343429398257285
    2. '.argv' → logprob: -8.500213623046875
    3. '.' → logprob: -11.625213623046875
    4. '.stdout' → logprob: -14.125213623046875
    5. '.std' → logprob: -16.000213623046875
    6. 'stdin' → logprob: -16.125213623046875
    7. ' .' → logprob: -17.750213623046875
    8. '.__' → logprob: -18.125213623046875
    9. '.stderr' → logprob: -18.750213623046875
    10. '._' → logprob: -18.875213623046875

Token 817: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0232770424336195
    2. ')
' → logprob: -3.7732770442962646
    3. '.readlines' → logprob: -11.023277282714844
    4. ')

' → logprob: -12.273277282714844
    5. '.readline' → logprob: -12.273277282714844
    6. ' )' → logprob: -12.523277282714844
    7. ')
' → logprob: -13.898277282714844
    8. '`)' → logprob: -15.523277282714844
    9. ' )
' → logprob: -15.773277282714844
    10. ')`' → logprob: -16.148277282714844

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029866192489862442
    2. 'for' → logprob: -3.5298662185668945
    3. 'while' → logprob: -9.404866218566895
    4. ' for' → logprob: -11.154866218566895
    5. '```' → logprob: -11.904866218566895
    6. '
' → logprob: -12.029866218566895
    7. '    
' → logprob: -12.029866218566895
    8. '       ' → logprob: -15.904866218566895
    9. 'try' → logprob: -16.529865264892578
    10. '``' → logprob: -16.654865264892578

Token 819: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017171852523460984
    2. '   ' → logprob: -6.3767170906066895
    3. ' for' → logprob: -12.126717567443848
    4. 'while' → logprob: -12.751717567443848
    5. 'outputs' → logprob: -13.001717567443848
    6. 'output' → logprob: -13.126717567443848
    7. 'results' → logprob: -14.126717567443848
    8. '
' → logprob: -14.376717567443848
    9. 'datasets' → logprob: -14.376717567443848
    10. '```' → logprob: -15.876717567443848

Token 820: ' snack' (ID: 39337)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.0017179005080834031
    2. '(sn' → logprob: -6.876718044281006
    3. 'collection' → logprob: -7.626718044281006
    4. ' snack' → logprob: -9.501717567443848
    5. '(' → logprob: -10.251717567443848
    6. 'dataset' → logprob: -10.376717567443848
    7. 'Snack' → logprob: -11.126717567443848
    8. 'sc' → logprob: -11.876717567443848
    9. 'snippet' → logprob: -11.876717567443848
    10. '_sn' → logprob: -12.251717567443848

Token 821: '_collection' (ID: 58616)
  Prédit: '_collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_collection' → logprob: -0.0016872010892257094
    2. 'collection' → logprob: -6.751687049865723
    3. 'Collection' → logprob: -7.751687049865723
    4. 's' → logprob: -9.376687049865723
    5. ',' → logprob: -13.876687049865723
    6. '_' → logprob: -14.626687049865723
    7. '_col' → logprob: -15.001687049865723
    8. '_COLLECTION' → logprob: -16.25168800354004
    9. '_,' → logprob: -16.37668800354004
    10. ' collection' → logprob: -16.50168800354004

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024335073248948902
    2. ',n' → logprob: -8.500243186950684
    3. ' ,' → logprob: -10.625243186950684
    4. '_,' → logprob: -12.125243186950684
    5. ',
' → logprob: -12.750243186950684
    6. ',s' → logprob: -13.250243186950684
    7. '‌,' → logprob: -14.000243186950684
    8. 'in' → logprob: -14.125243186950684
    9. 'n' → logprob: -14.375243186950684
    10. ',N' → logprob: -14.875243186950684

Token 823: ' nutrient' (ID: 72324)
  Prédit: 'nut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nut' → logprob: -0.3982289731502533
    2. ' nutrient' → logprob: -1.6482290029525757
    3. 'limits' → logprob: -2.523228883743286
    4. ' limits' → logprob: -2.898228883743286
    5. '   ' → logprob: -8.148228645324707
    6. 'limit' → logprob: -8.898228645324707
    7. ' nutrients' → logprob: -9.273228645324707
    8. 'n' → logprob: -9.273228645324707
    9. 'lim' → logprob: -10.148228645324707
    10. '    ' → logprob: -10.898228645324707

Token 824: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.01266456302255392
    2. 'limits' → logprob: -4.387664794921875
    3. '_limit' → logprob: -8.887664794921875
    4. 'limit' → logprob: -11.637664794921875
    5. 'Limits' → logprob: -12.012664794921875
    6. ' limits' → logprob: -13.637664794921875
    7. '_' → logprob: -15.762664794921875
    8. 'lim' → logprob: -15.887664794921875
    9. '   ' → logprob: -16.387664794921875
    10. 'LIMIT' → logprob: -16.387664794921875

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',c' → logprob: -16.250022888183594
    4. '   ' → logprob: -16.375022888183594
    5. ',
' → logprob: -16.500022888183594
    6. '_,' → logprob: -16.625022888183594
    7. '‌,' → logprob: -16.625022888183594
    8. 'cal' → logprob: -17.625022888183594
    9. '<|end|>' → logprob: -18.375022888183594
    10. ',\
' → logprob: -18.875022888183594

Token 826: ' calorie' (ID: 66006)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.00012523093027994037
    2. ' calorie' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.75012493133545
    4. 'Cal' → logprob: -15.00012493133545
    5. '	cal' → logprob: -16.250125885009766
    6. 'c' → logprob: -16.875125885009766
    7. ' cal' → logprob: -17.375125885009766
    8. '_cal' → logprob: -17.375125885009766
    9. 'cale' → logprob: -17.500125885009766
    10. '

' → logprob: -17.750125885009766

Token 827: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00026884564431384206
    2. 'limit' → logprob: -8.250268936157227
    3. '_limits' → logprob: -11.875268936157227
    4. '_' → logprob: -16.375268936157227
    5. '_lim' → logprob: -16.375268936157227
    6. '_LIMIT' → logprob: -16.750268936157227
    7. 'lim' → logprob: -16.750268936157227
    8. 'Limit' → logprob: -16.875268936157227
    9. '   ' → logprob: -17.000268936157227
    10. 'limits' → logprob: -17.375268936157227

Token 828: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016282567754387856
    2. 'in' → logprob: -4.141282558441162
    3. '   ' → logprob: -8.64128303527832
    4. ',' → logprob: -10.76628303527832
    5. ':' → logprob: -10.89128303527832
    6. '    ' → logprob: -11.39128303527832
    7. '	in' → logprob: -11.64128303527832
    8. ':
' → logprob: -12.64128303527832
    9. '_in' → logprob: -12.89128303527832
    10. '  ' → logprob: -13.76628303527832

Token 829: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.061968132853507996
    2. ' parser' → logprob: -2.8119680881500244
    3. '(parser' → logprob: -15.436967849731445
    4. '	parser' → logprob: -15.436967849731445
    5. '   ' → logprob: -16.686967849731445
    6. 'Parser' → logprob: -17.061967849731445
    7. '.parser' → logprob: -17.436967849731445
    8. 'parse' → logprob: -18.436967849731445
    9. '_parser' → logprob: -18.436967849731445
    10. '/parser' → logprob: -19.686967849731445

Token 830: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -9.253090865968261e-06
    2. ' .' → logprob: -12.625009536743164
    3. '.parse' → logprob: -12.750009536743164
    4. 'datasets' → logprob: -13.125009536743164
    5. '.dataset' → logprob: -14.750009536743164
    6. '.' → logprob: -15.250009536743164
    7. '.datas' → logprob: -16.250009536743164
    8. ' datasets' → logprob: -16.625009536743164
    9. '.dat' → logprob: -17.750009536743164
    10. '   ' → logprob: -18.250009536743164

Token 831: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4324382543563843
    2. ':' → logprob: -1.1824382543563843
    3. '():
' → logprob: -3.182438373565674
    4. ':
' → logprob: -5.807438373565674
    5. '()' → logprob: -10.807437896728516
    6. '():
' → logprob: -11.182437896728516
    7. '):' → logprob: -11.557437896728516
    8. '   ' → logprob: -12.432437896728516
    9. ' ():' → logprob: -12.682437896728516
    10. '):
' → logprob: -13.307437896728516

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013500562636181712
    2. '
' → logprob: -10.00013542175293
    3. '        
' → logprob: -10.00013542175293
    4. 'allowed' → logprob: -10.87513542175293
    5. '```' → logprob: -11.87513542175293
    6. '   ' → logprob: -12.37513542175293
    7. ' allowed' → logprob: -12.50013542175293
    8. '<|end|>' → logprob: -13.00013542175293
    9. ',' → logprob: -13.37513542175293
    10. '           ' → logprob: -13.62513542175293

Token 833: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' (adapté à ' allowed') → logprob: -0.06641320139169693
    2. '       ' → logprob: -3.441413164138794
    3. ' allowed' → logprob: -3.441413164138794
    4. '   ' → logprob: -8.566412925720215
    5. '           ' → logprob: -11.191412925720215
    6. '_allowed' → logprob: -11.816412925720215
    7. 'allow' → logprob: -13.066412925720215
    8. '.allowed' → logprob: -14.191412925720215
    9. '```' → logprob: -14.191412925720215
    10. 'available' → logprob: -14.816412925720215

Token 834: ' =' (ID: 314)
  Prédit: '_ids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ids' → logprob: -0.11100496351718903
    2. '=' → logprob: -2.8610050678253174
    3. ' =' → logprob: -3.1110050678253174
    4. '_sn' → logprob: -5.736004829406738
    5. '   ' → logprob: -10.236004829406738
    6. 'sn' → logprob: -10.861004829406738
    7. 'ids' → logprob: -12.486004829406738
    8. '```' → logprob: -13.486004829406738
    9. '_IDS' → logprob: -13.486004829406738
    10. '=_' → logprob: -13.611004829406738

Token 835: ' snack' (ID: 39337)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.0013410773826763034
    2. ' snack' → logprob: -6.626340866088867
    3. ' sn' → logprob: -11.376340866088867
    4. '   ' → logprob: -12.876340866088867
    5. '(sn' → logprob: -15.126340866088867
    6. 'snippet' → logprob: -15.626340866088867
    7. '_sn' → logprob: -15.876340866088867
    8. '       ' → logprob: -15.876340866088867
    9. 'Snack' → logprob: -16.251340866088867
    10. '```' → logprob: -16.626340866088867

Token 836: '_collection' (ID: 58616)
  Prédit: '_collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_collection' → logprob: -2.463036435074173e-05
    2. 'collection' → logprob: -10.625024795532227
    3. '_COLLECTION' → logprob: -16.625024795532227
    4. '.collection' → logprob: -16.750024795532227
    5. 'Collection' → logprob: -17.625024795532227
    6. '_col' → logprob: -17.875024795532227
    7. '_allowed' → logprob: -17.875024795532227
    8. 'allowed' → logprob: -18.250024795532227
    9. 's' → logprob: -18.875024795532227
    10. '=' → logprob: -19.750024795532227

Token 837: '.filter' (ID: 12744)
  Prédit: '.filter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.filter' → logprob: -3.173704271830502e-06
    2. 'filter' → logprob: -13.00000286102295
    3. '.' → logprob: -14.00000286102295
    4. ' .' → logprob: -17.375003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '       ' → logprob: -18.625003814697266
    7. '	filter' → logprob: -19.000003814697266
    8. ' filter' → logprob: -20.125003814697266
    9. '.filtered' → logprob: -20.375003814697266
    10. '_filter' → logprob: -20.625003814697266

Token 838: '_allowed' (ID: 104427)
  Prédit: '_allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allowed' → logprob: -1.9743012671824545e-05
    2. 'allowed' → logprob: -10.875020027160645
    3. 'Allowed' → logprob: -14.250020027160645
    4. '_ALLOWED' → logprob: -17.000019073486328
    5. '_enabled' → logprob: -17.875019073486328
    6. '.allowed' → logprob: -18.375019073486328
    7. '```' → logprob: -18.750019073486328
    8. '
' → logprob: -18.875019073486328
    9. '   ' → logprob: -18.875019073486328
    10. ' allowed' → logprob: -19.000019073486328

Token 839: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -11.875009536743164
    3. 'nut' → logprob: -13.500009536743164
    4. '(
' → logprob: -14.125009536743164
    5. '```' → logprob: -15.750009536743164
    6. '   ' → logprob: -16.625009536743164
    7. '(noun' → logprob: -16.875009536743164
    8. ' (' → logprob: -16.875009536743164
    9. '((' → logprob: -18.125009536743164
    10. '
' → logprob: -18.375009536743164

Token 840: 'utr' (ID: 64165)
  Prédit: 'utr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utr' → logprob: -0.002212108112871647
    2. 'utrients' → logprob: -6.377212047576904
    3. 'limits' → logprob: -8.252212524414062
    4. 'ut' → logprob: -9.377212524414062
    5. 'it' → logprob: -9.627212524414062
    6. ',' → logprob: -10.127212524414062
    7. 'uts' → logprob: -11.252212524414062
    8. '_limits' → logprob: -11.502212524414062
    9. 'nut' → logprob: -11.752212524414062
    10. '(' → logprob: -11.877212524414062

Token 841: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.008098188787698746
    2. 'it' → logprob: -5.008098125457764
    3. '_limits' → logprob: -7.758098125457764
    4. 'utr' → logprob: -8.508098602294922
    5. 'r' → logprob: -8.758098602294922
    6. 'ients' → logprob: -9.008098602294922
    7. '   ' → logprob: -9.508098602294922
    8. 'itent' → logprob: -9.633098602294922
    9. 'er' → logprob: -9.758098602294922
    10. '_limit' → logprob: -9.883098602294922

Token 842: '_limits' (ID: 80205)
  Prédit: '_limits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limits' → logprob: -0.00021486106561496854
    2. '_limit' → logprob: -8.625214576721191
    3. 'limits' → logprob: -10.625214576721191
    4. ',' → logprob: -11.625214576721191
    5. 'Limits' → logprob: -14.625214576721191
    6. ',_' → logprob: -14.750214576721191
    7. 's' → logprob: -15.125214576721191
    8. ' limits' → logprob: -15.750214576721191
    9. '_,' → logprob: -15.875214576721191
    10. 'limit' → logprob: -16.125215530395508

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',
' → logprob: -16.625028610229492
    4. ',c' → logprob: -17.500028610229492
    5. '       ' → logprob: -20.000028610229492
    6. '   ' → logprob: -20.000028610229492
    7. '‌,' → logprob: -20.125028610229492
    8. 'cal' → logprob: -20.375028610229492
    9. '<|end|>' → logprob: -20.625028610229492
    10. ',user' → logprob: -21.000028610229492

Token 844: ' calorie' (ID: 66006)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0024763736873865128
    2. ' calorie' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.252476692199707
    4. 'Cal' → logprob: -16.75247573852539
    5. '-cal' → logprob: -17.00247573852539
    6. ' cal' → logprob: -17.00247573852539
    7. '	cal' → logprob: -17.00247573852539
    8. '_cal' → logprob: -17.25247573852539
    9. '(cal' → logprob: -17.50247573852539
    10. 'c' → logprob: -17.62747573852539

Token 845: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00016837897419463843
    2. 'limit' → logprob: -8.750168800354004
    3. 'imit' → logprob: -12.000168800354004
    4. 'it' → logprob: -13.125168800354004
    5. 'Limit' → logprob: -13.500168800354004
    6. 'mit' → logprob: -15.625168800354004
    7. '-limit' → logprob: -16.875167846679688
    8. 't' → logprob: -17.000167846679688
    9. '_LIMIT' → logprob: -17.000167846679688
    10. '_limits' → logprob: -17.375167846679688

Token 846: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0033899256959557533
    2. '       ' → logprob: -6.003389835357666
    3. ')' → logprob: -7.003389835357666
    4. ')
' → logprob: -12.253390312194824
    5. '   ' → logprob: -15.878390312194824
    6. ' )
' → logprob: -16.253389358520508
    7. ')

' → logprob: -17.128389358520508
    8. ')`
' → logprob: -17.628389358520508
    9. '           ' → logprob: -18.253389358520508
    10. '
' → logprob: -18.503389358520508

Token 847: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013715129171032459
    2. '   ' → logprob: -9.375137329101562
    3. 'print' → logprob: -9.875137329101562
    4. '
' → logprob: -14.500137329101562
    5. ' print' → logprob: -15.125137329101562
    6. '```' → logprob: -16.875137329101562
    7. '	' → logprob: -17.625137329101562
    8. '           ' → logprob: -18.125137329101562
    9. '	   ' → logprob: -18.625137329101562
    10. '        
' → logprob: -18.750137329101562

Token 848: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016671013145241886
    2. ' print' → logprob: -8.750166893005371
    3. '       ' → logprob: -11.750166893005371
    4. 'output' → logprob: -14.875166893005371
    5. '	print' → logprob: -17.875165939331055
    6. 'result' → logprob: -19.125165939331055
    7. '   ' → logprob: -19.250165939331055
    8. '
' → logprob: -20.125165939331055
    9. ' output' → logprob: -21.125165939331055
    10. 'formatted' → logprob: -21.875165939331055

Token 849: '(Output' (ID: 132866)
  Prédit: '(Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Output' → logprob: -3.531315314830863e-06
    2. 'Output' → logprob: -12.875003814697266
    3. '('\' → logprob: -14.125003814697266
    4. '(' → logprob: -16.250003814697266
    5. '("\' → logprob: -16.250003814697266
    6. '	Output' → logprob: -17.000003814697266
    7. '(
' → logprob: -17.875003814697266
    8. '(output' → logprob: -18.625003814697266
    9. ' Output' → logprob: -18.750003814697266
    10. '(Input' → logprob: -19.750003814697266

Token 850: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: 0.0
    2. 'formatter' → logprob: -19.125
    3. 'Format' → logprob: -19.375
    4. '   ' → logprob: -19.75
    5. '_formatter' → logprob: -20.875
    6. 'Formatted' → logprob: -21.125
    7. ' Formatter' → logprob: -21.125
    8. '     ' → logprob: -23.125
    9. '       ' → logprob: -23.125
    10. 'Validator' → logprob: -23.75

Token 851: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.500001907348633
    3. ').' → logprob: -15.375001907348633
    4. '.form' → logprob: -16.125001907348633
    5. ' .' → logprob: -17.375001907348633
    6. '.output' → logprob: -17.375001907348633
    7. '.print' → logprob: -17.750001907348633
    8. '(format' → logprob: -18.750001907348633
    9. 'format' → logprob: -19.000001907348633
    10. '=format' → logprob: -19.000001907348633

Token 852: '_allowed' (ID: 104427)
  Prédit: '_allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allowed' → logprob: -1.6240566083070007e-06
    2. 'allowed' → logprob: -13.625001907348633
    3. 'Allowed' → logprob: -15.000001907348633
    4. '_ALLOWED' → logprob: -17.250001907348633
    5. '(' → logprob: -20.750001907348633
    6. '_enabled' → logprob: -21.375001907348633
    7. '.allowed' → logprob: -21.375001907348633
    8. '```' → logprob: -22.125001907348633
    9. ' Allowed' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.250001907348633

Token 853: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -14.875
    3. ')' → logprob: -18.0
    4. '```' → logprob: -19.0
    5. ')(' → logprob: -19.125
    6. 'allowed' → logprob: -19.375
    7. '(
' → logprob: -19.625
    8. '((' → logprob: -20.875
    9. '   ' → logprob: -21.25
    10. '	' → logprob: -21.375

Token 854: 'allowed' (ID: 32510)
  Prédit: 'allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.07889121770858765
    2. '(' → logprob: -2.5788912773132324
    3. ' allowed' → logprob: -14.078890800476074
    4. 'allow' → logprob: -15.203890800476074
    5. '_allowed' → logprob: -15.703890800476074
    6. ')' → logprob: -16.07889175415039
    7. 'Allowed' → logprob: -16.45389175415039
    8. '.allowed' → logprob: -17.32889175415039
    9. '
' → logprob: -19.20389175415039
    10. '   ' → logprob: -19.20389175415039

Token 855: '))


' (ID: 49252)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004012511111795902
    2. ')' → logprob: -6.004012584686279
    3. '())
' → logprob: -6.629012584686279
    4. '()' → logprob: -8.629012107849121
    5. '(' → logprob: -11.254012107849121
    6. '()))' → logprob: -11.504012107849121
    7. '))' → logprob: -12.379012107849121
    8. '()
' → logprob: -13.254012107849121
    9. ' ())' → logprob: -13.254012107849121
    10. ')
' → logprob: -13.379012107849121

Token 856: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1517960956552997e-05
    2. ' if' → logprob: -12.125011444091797
    3. '```' → logprob: -12.500011444091797
    4. '
' → logprob: -13.500011444091797
    5. '<|end|>' → logprob: -14.000011444091797
    6. '#' → logprob: -16.125011444091797
    7. '\' → logprob: -16.875011444091797
    8. '\n' → logprob: -17.125011444091797
    9. '__' → logprob: -17.375011444091797
    10. 'If' → logprob: -18.625011444091797

Token 857: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048854295164346695
    2. '__' → logprob: -3.048854351043701
    3. '_name' → logprob: -8.548853874206543
    4. '_' → logprob: -10.048853874206543
    5. '___' → logprob: -11.298853874206543
    6. 'name' → logprob: -11.423853874206543
    7. ' _' → logprob: -13.423853874206543
    8. ' ___' → logprob: -13.673853874206543
    9. '_main' → logprob: -14.173853874206543
    10. '____' → logprob: -14.173853874206543

Token 858: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3118143081665039
    2. ' ==' → logprob: -1.811814308166504
    3. '==' → logprob: -2.686814308166504
    4. '.__' → logprob: -3.936814308166504
    5. ' __' → logprob: -4.311814308166504
    6. '.name' → logprob: -7.311814308166504
    7. 'name' → logprob: -7.311814308166504
    8. '.main' → logprob: -7.686814308166504
    9. '.' → logprob: -7.936814308166504
    10. '__.__' → logprob: -8.186814308166504

Token 859: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5776860184123507e-06
    2. '__.__' → logprob: -13.75000286102295
    3. '==' → logprob: -13.87500286102295
    4. 'name' → logprob: -16.125001907348633
    5. '__.' → logprob: -16.125001907348633
    6. '__
' → logprob: -16.250001907348633
    7. ' ==' → logprob: -16.875001907348633
    8. '___' → logprob: -17.000001907348633
    9. '__('' → logprob: -17.250001907348633
    10. '____' → logprob: -17.250001907348633

Token 860: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.33324214816093445
    2. '==' → logprob: -1.3332421779632568
    3. ' ==' → logprob: -3.958242177963257
    4. '=="' → logprob: -7.708241939544678
    5. '=='' → logprob: -8.458242416381836
    6. '_' → logprob: -11.958242416381836
    7. '==
' → logprob: -12.458242416381836
    8. '__.__' → logprob: -12.583242416381836
    9. '=' → logprob: -12.833242416381836
    10. '===' → logprob: -13.083242416381836

Token 861: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47409355640411377
    2. ''' → logprob: -0.9740935564041138
    3. '__' → logprob: -11.224093437194824
    4. ' "__' → logprob: -13.224093437194824
    5. ' '__' → logprob: -14.474093437194824
    6. '   ' → logprob: -15.849093437194824
    7. ''"' → logprob: -15.849093437194824
    8. ''s' → logprob: -16.72409439086914
    9. ''name' → logprob: -16.84909439086914
    10. '('__' → logprob: -16.97409439086914

Token 862: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.698698704596609e-05
    2. '__' → logprob: -9.250097274780273
    3. 'name' → logprob: -14.625097274780273
    4. '_main' → logprob: -15.625097274780273
    5. 'built' → logprob: -16.750097274780273
    6. ' main' → logprob: -17.000097274780273
    7. 'ma' → logprob: -18.125097274780273
    8. '-main' → logprob: -18.125097274780273
    9. '__":
' → logprob: -18.375097274780273
    10. 'python' → logprob: -18.750097274780273

Token 863: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.008633476682007313
    2. '__' → logprob: -4.758633613586426
    3. '__':
' → logprob: -10.883633613586426
    4. '__:' → logprob: -16.63363265991211
    5. '__["' → logprob: -17.38363265991211
    6. '__.' → logprob: -17.75863265991211
    7. '_' → logprob: -18.13363265991211
    8. '__",' → logprob: -18.38363265991211
    9. '__.__' → logprob: -18.88363265991211
    10. '__
' → logprob: -19.13363265991211

Token 864: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0015623578801751137
    2. ' main' → logprob: -6.501562595367432
    3. '__' → logprob: -10.126562118530273
    4. '	main' → logprob: -11.251562118530273
    5. '_main' → logprob: -12.251562118530273
    6. '   ' → logprob: -13.126562118530273
    7. '(main' → logprob: -15.751562118530273
    8. ' __' → logprob: -17.001562118530273
    9. '____' → logprob: -17.501562118530273
    10. '.main' → logprob: -17.751562118530273

Token 865: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -21.125
    5. '_main' → logprob: -22.75
    6. '.main' → logprob: -24.375
    7. '(main' → logprob: -25.375
    8. '
' → logprob: -25.375
    9. 'ma' → logprob: -27.625
    10. 'Main' → logprob: -28.0

Token 866: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 864
Tokens correctement prédits (1ère position, stricte): 448
Tokens correctement prédits (1ère position, avec adaptation): 491
Tokens correctement prédits (top 10): 793
Précision stricte (1ère position): 51.85%
Précision adaptée (1ère position): 56.83%
Précision (top 10): 91.78%
================================================================================
