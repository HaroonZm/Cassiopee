================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def solve():
    input = sys.stdin.readline
    while True:
        N,M,L,K,A,H = map(int, input().split())
        if N==0 and M==0 and L==0 and K==0 and A==0 and H==0:
            break
        fsets = set(map(int, input().split())) if L>0 else set()
        fsets.add(A)
        fsets.add(H)
        graph = [[] for _ in range(N)]
        for _ in range(K):
            X,Y,T = map(int, input().split())
            graph[X].append((Y,T))
            graph[Y].append((X,T))
        # dist[node][remain] = minimum delivery time to arrive at node with remain mins of freshness
        dist = [[float('inf')]*(M+1) for _ in range(N)]
        dist[A][M] = 0
        pq = [(0,A,M)]
        while pq:
            time,node,remain = heapq.heappop(pq)
            if dist[node][remain] < time:
                continue
            if node == H:
                print(time)
                break
            for nxt,t in graph[node]:
                if t > remain:
                    continue
                new_time = time + t
                new_remain = remain - t
                if nxt in fsets and new_remain < M:
                    # refreeze for M - new_remain minutes
                    cool = M - new_remain
                    new_time += cool
                    new_remain = M
                if dist[nxt][new_remain] > new_time:
                    dist[nxt][new_remain] = new_time
                    heapq.heappush(pq, (new_time, nxt, new_remain))
        else:
            print("Help!")

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.992775888647884e-05
    2. '.' → logprob: -9.875069618225098
    3. '_' → logprob: -11.875069618225098
    4. '#' → logprob: -12.250069618225098
    5. 's' → logprob: -13.500069618225098
    6. 'u' → logprob: -14.125069618225098
    7. '=' → logprob: -14.250069618225098
    8. ')' → logprob: -14.500069618225098
    9. ',' → logprob: -14.750069618225098
    10. 'ify' → logprob: -14.875069618225098

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7021071314811707
    2. 'def' → logprob: -1.7021071910858154
    3. '
' → logprob: -2.3271071910858154
    4. '\' → logprob: -3.2021071910858154
    5. '```' → logprob: -3.3271071910858154
    6. 'class' → logprob: -3.4521071910858154
    7. '\n' → logprob: -3.8271071910858154
    8. 'import' → logprob: -4.077106952667236
    9. 'from' → logprob: -4.077106952667236
    10. '' → logprob: -4.327106952667236

Token 8: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027493613306432962
    2. '_' → logprob: -6.252749443054199
    3. '```' → logprob: -7.627749443054199
    4. '():' → logprob: -9.6277494430542
    5. ' (' → logprob: -10.1277494430542
    6. '(
' → logprob: -10.3777494430542
    7. '(:' → logprob: -10.6277494430542
    8. '("("' → logprob: -10.7527494430542
    9. ':' → logprob: -11.2527494430542
    10. '(_' → logprob: -11.5027494430542

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15676239132881165
    2. '\' → logprob: -3.1567623615264893
    3. '    
' → logprob: -3.6567623615264893
    4. '```' → logprob: -3.6567623615264893
    5. '\n' → logprob: -4.156762599945068
    6. '    ' → logprob: -4.656762599945068
    7. ' 
' → logprob: -5.156762599945068
    8. ' ' → logprob: -5.406762599945068
    9. '(' → logprob: -5.656762599945068
    10. '`' → logprob: -6.781762599945068

Token 11: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5227965712547302
    2. ' n' → logprob: -1.022796630859375
    3. ' input' → logprob: -3.897796630859375
    4. 'n' → logprob: -4.272796630859375
    5. ' data' → logprob: -5.772796630859375
    6. ' sys' → logprob: -6.022796630859375
    7. ' heap' → logprob: -6.272796630859375
    8. 'input' (adapté à ' input') → logprob: -6.397796630859375
    9. '    ' → logprob: -7.022796630859375
    10. ' line' → logprob: -7.147796630859375

Token 12: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3244025409221649
    2. '()' → logprob: -1.3244025707244873
    3. '_data' → logprob: -5.324402332305908
    4. '().' → logprob: -6.824402332305908
    5. '('' → logprob: -7.074402332305908
    6. '_' → logprob: -7.324402332305908
    7. 'data' → logprob: -7.449402332305908
    8. ' =' → logprob: -7.824402332305908
    9. '_line' → logprob: -7.949402332305908
    10. '("")' → logprob: -8.074402809143066

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0012942852918058634
    2. 'sys' → logprob: -6.751294136047363
    3. ' input' → logprob: -9.126294136047363
    4. '(sys' → logprob: -12.126294136047363
    5. '	sys' → logprob: -12.376294136047363
    6. 'input' → logprob: -12.626294136047363
    7. '=sys' → logprob: -13.001294136047363
    8. ' ' → logprob: -16.50129508972168
    9. ' lambda' → logprob: -16.62629508972168
    10. '_sys' → logprob: -17.87629508972168

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.018771836534142494
    2. '.readline' → logprob: -4.518771648406982
    3. '.' → logprob: -4.893771648406982
    4. '.stdout' → logprob: -9.51877212524414
    5. '.std' → logprob: -9.64377212524414
    6. '.argv' → logprob: -10.51877212524414
    7. ' .' → logprob: -11.64377212524414
    8. '.read' → logprob: -12.51877212524414
    9. '.setdefault' → logprob: -12.51877212524414
    10. 'stdin' → logprob: -12.89377212524414

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023961057886481285
    2. '.read' → logprob: -6.127396106719971
    3. '.' → logprob: -9.252395629882812
    4. '.buffer' → logprob: -9.627395629882812
    5. '.stdin' → logprob: -10.127395629882812
    6. '.readlines' → logprob: -12.252395629882812
    7. 'read' → logprob: -13.377395629882812
    8. '.reader' → logprob: -14.502395629882812
    9. '.input' → logprob: -14.627395629882812
    10. '.Read' → logprob: -15.002395629882812

Token 16: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024360312148928642
    2. '()
' → logprob: -3.774360418319702
    3. '().' → logprob: -8.024360656738281
    4. '()\' → logprob: -8.149360656738281
    5. '(' → logprob: -8.524360656738281
    6. '
' → logprob: -9.024360656738281
    7. '(
' → logprob: -9.649360656738281
    8. ' ()' → logprob: -10.274360656738281
    9. '()

' → logprob: -10.274360656738281
    10. '()`' → logprob: -11.524360656738281

Token 17: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03512345999479294
    2. '   ' → logprob: -3.785123348236084
    3. '()
' → logprob: -4.785123348236084
    4. '()\' → logprob: -6.660123348236084
    5. '():' → logprob: -7.910123348236084
    6. '(' → logprob: -8.035123825073242
    7. '
' → logprob: -8.160123825073242
    8. '()

' → logprob: -8.160123825073242
    9. ' ()' → logprob: -8.160123825073242
    10. '```' → logprob: -9.035123825073242

Token 18: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4779495894908905
    2. ' n' → logprob: -0.9779496192932129
    3. '   ' → logprob: -5.852949619293213
    4. ' t' → logprob: -7.477949619293213
    5. 't' → logprob: -8.477949142456055
    6. '(n' → logprob: -9.727949142456055
    7. ' N' → logprob: -9.852949142456055
    8. 'N' → logprob: -10.102949142456055
    9. '	n' → logprob: -10.602949142456055
    10. 'k' → logprob: -11.727949142456055

Token 19: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0006444069440476596
    2. 'True' → logprob: -7.500644207000732
    3. '(True' → logprob: -9.37564468383789
    4. ' ' → logprob: -12.12564468383789
    5. ' not' → logprob: -14.25064468383789
    6. ' (' → logprob: -14.62564468383789
    7. '(' → logprob: -16.75064468383789
    8. '  ' → logprob: -17.62564468383789
    9. ' true' → logprob: -17.75064468383789
    10. '_true' → logprob: -18.50064468383789

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43045055866241455
    2. '():' → logprob: -1.0554505586624146
    3. '):' → logprob: -7.680450439453125
    4. '(' → logprob: -7.680450439453125
    5. '():
' → logprob: -8.305450439453125
    6. ',' → logprob: -8.805450439453125
    7. ':**' → logprob: -9.180450439453125
    8. ' :' → logprob: -9.680450439453125
    9. ' ():' → logprob: -9.680450439453125
    10. '       ' → logprob: -10.055450439453125

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1118600070476532
    2. '    ' → logprob: -2.6118600368499756
    3. '   ' → logprob: -3.8618600368499756
    4. ' ' → logprob: -4.8618597984313965
    5. '     ' → logprob: -6.8618597984313965
    6. '  ' → logprob: -7.9868597984313965
    7. '      ' → logprob: -7.9868597984313965
    8. '        
' → logprob: -8.236860275268555
    9. '<|end|>' → logprob: -8.361860275268555
    10. '(' → logprob: -8.611860275268555

Token 22: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.044645924121141434
    2. 'line' → logprob: -3.7946460247039795
    3. ' n' → logprob: -5.0446457862854
    4. ' data' → logprob: -5.2946457862854
    5. 'data' → logprob: -5.5446457862854
    6. '   ' → logprob: -6.0446457862854
    7. 'n' → logprob: -6.1696457862854
    8. '       ' → logprob: -7.4196457862854
    9. ' s' → logprob: -8.294646263122559
    10. 's' → logprob: -8.919646263122559

Token 23: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36962324380874634
    2. ' ==' → logprob: -1.2446231842041016
    3. '=' → logprob: -4.244623184204102
    4. ' ' → logprob: -5.994623184204102
    5. ' >' → logprob: -6.244623184204102
    6. '==' → logprob: -7.119623184204102
    7. ' <=' → logprob: -7.494623184204102
    8. ' :=' → logprob: -8.369623184204102
    9. ' ,' → logprob: -8.744623184204102
    10. ' <' → logprob: -9.244623184204102

Token 24: ',L' (ID: 68006)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894796669483185
    2. '=' → logprob: -2.4639480113983154
    3. ',' → logprob: -12.463948249816895
    4. ' ' → logprob: -12.963948249816895
    5. '=input' → logprob: -14.338948249816895
    6. '    ' → logprob: -14.713948249816895
    7. ')' → logprob: -15.213948249816895
    8. '=int' → logprob: -15.213948249816895
    9. ' ,' → logprob: -15.713948249816895
    10. '=line' → logprob: -16.463947296142578

Token 25: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364904224872589
    2. '=' → logprob: -3.40864896774292
    3. ' ' → logprob: -13.283649444580078
    4. '    ' → logprob: -14.908649444580078
    5. ',' → logprob: -15.033649444580078
    6. '=input' → logprob: -15.283649444580078
    7. '        ' → logprob: -15.408649444580078
    8. '=line' → logprob: -15.658649444580078
    9. ')' → logprob: -16.408649444580078
    10. '       ' → logprob: -16.533649444580078

Token 26: ',A' (ID: 59196)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519315779209137
    2. '=' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.501931190490723
    4. '=line' → logprob: -14.501931190490723
    5. '=input' → logprob: -15.376931190490723
    6. '    ' → logprob: -15.626931190490723
    7. ',' → logprob: -16.62693214416504
    8. '   ' → logprob: -17.12693214416504
    9. '＝' → logprob: -17.50193214416504
    10. ')' → logprob: -17.62693214416504

Token 27: ',H' (ID: 94400)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875800371170044
    2. '=' → logprob: -1.1375800371170044
    3. ',' → logprob: -7.387579917907715
    4. ' ' → logprob: -10.012579917907715
    5. '[' → logprob: -11.637579917907715
    6. '=input' → logprob: -11.762579917907715
    7. '=line' → logprob: -11.762579917907715
    8. '   ' → logprob: -12.637579917907715
    9. ' ,' → logprob: -13.137579917907715
    10. ' =[' → logprob: -13.262579917907715

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931781768798828
    2. ' =' → logprob: -0.6931781768798828
    3. ' ' → logprob: -11.193178176879883
    4. ',' → logprob: -11.568178176879883
    5. '=line' → logprob: -12.943178176879883
    6. '=input' → logprob: -13.193178176879883
    7. '   ' → logprob: -13.943178176879883
    8. '  ' → logprob: -14.818178176879883
    9. '=sys' → logprob: -14.943178176879883
    10. '[' → logprob: -15.318178176879883

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07210895419120789
    2. 'map' → logprob: -2.6971089839935303
    3. ' input' → logprob: -6.572108745574951
    4. ' list' → logprob: -7.822108745574951
    5. 'input' → logprob: -8.07210922241211
    6. 'list' → logprob: -9.94710922241211
    7. ' ' → logprob: -12.19710922241211
    8. '	map' → logprob: -12.94710922241211
    9. '   ' → logprob: -13.69710922241211
    10. '(map' → logprob: -14.32210922241211

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16376079618930817
    2. '(' → logprob: -1.913760781288147
    3. '(str' → logprob: -6.163760662078857
    4. '(lambda' → logprob: -7.163760662078857
    5. '(input' → logprob: -7.413760662078857
    6. '(list' → logprob: -11.413761138916016
    7. '(eval' → logprob: -11.538761138916016
    8. '(
' → logprob: -12.038761138916016
    9. '(sys' → logprob: -12.788761138916016
    10. 'int' → logprob: -13.288761138916016

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05650680884718895
    2. ')' → logprob: -4.056506633758545
    3. ',input' → logprob: -4.056506633758545
    4. '(sys' → logprob: -4.806506633758545
    5. '(' → logprob: -4.806506633758545
    6. 'input' → logprob: -5.806506633758545
    7. ',' → logprob: -7.306506633758545
    8. 'sys' → logprob: -9.556507110595703
    9. ' input' → logprob: -9.931507110595703
    10. ')(' → logprob: -10.431507110595703

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804642707109451
    2. ' input' → logprob: -3.288046360015869
    3. ')' → logprob: -12.538046836853027
    4. ',input' → logprob: -14.913046836853027
    5. '(input' → logprob: -15.163046836853027
    6. '=input' → logprob: -15.288046836853027
    7. '	input' → logprob: -15.413046836853027
    8. '   ' → logprob: -16.16304588317871
    9. '       ' → logprob: -16.66304588317871
    10. '[input' → logprob: -16.91304588317871

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012749579036608338
    2. '()' → logprob: -9.000127792358398
    3. ' ().' → logprob: -12.750127792358398
    4. '())' → logprob: -14.750127792358398
    5. '()))' → logprob: -15.250127792358398
    6. '(' → logprob: -16.5001277923584
    7. '().'' → logprob: -16.5001277923584
    8. ')' → logprob: -16.8751277923584
    9. '.readline' → logprob: -17.0001277923584
    10. '()
' → logprob: -17.1251277923584

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.034835103899240494
    2. 'strip' → logprob: -3.53483510017395
    3. 'rstrip' → logprob: -5.284835338592529
    4. 'read' → logprob: -13.159834861755371
    5. ' split' → logprob: -13.659834861755371
    6. '(split' → logprob: -15.034834861755371
    7. ')' → logprob: -15.159834861755371
    8. '().' → logprob: -16.284835815429688
    9. ' strip' → logprob: -16.784835815429688
    10. 'decode' → logprob: -17.534835815429688

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16874243319034576
    2. ')' → logprob: -1.9187424182891846
    3. '()' → logprob: -5.418742656707764
    4. '()))' → logprob: -6.168742656707764
    5. '))' → logprob: -6.293742656707764
    6. '())
' → logprob: -9.543742179870605
    7. '(' → logprob: -10.793742179870605
    8. ' ())' → logprob: -12.918742179870605
    9. '('' → logprob: -13.168742179870605
    10. ' )' → logprob: -13.668742179870605

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04582008719444275
    2. '<|end|>' → logprob: -3.7958199977874756
    3. '   ' → logprob: -4.045820236206055
    4. ' if' → logprob: -7.170820236206055
    5. '        
' → logprob: -7.170820236206055
    6. ')' → logprob: -7.295820236206055
    7. ' ' → logprob: -7.545820236206055
    8. '        ' → logprob: -8.420820236206055
    9. '    ' → logprob: -8.420820236206055
    10. '```' → logprob: -8.420820236206055

Token 37: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5252790451049805
    2. ' if' → logprob: -1.0252790451049805
    3. '<|end|>' → logprob: -3.5252790451049805
    4. 'if' (adapté à ' if') → logprob: -4.4002790451049805
    5. ' ' → logprob: -5.9002790451049805
    6. '
' → logprob: -6.1502790451049805
    7. '        ' → logprob: -6.7752790451049805
    8. '   ' → logprob: -7.6502790451049805
    9. '        
' → logprob: -7.9002790451049805
    10. '\n' → logprob: -8.15027904510498

Token 38: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.021285193040966988
    2. 'N' → logprob: -4.146285057067871
    3. ' not' → logprob: -5.271285057067871
    4. ' ' → logprob: -9.646285057067871
    5. 'not' → logprob: -10.771285057067871
    6. ' (' → logprob: -11.646285057067871
    7. '(N' → logprob: -13.396285057067871
    8. '	N' → logprob: -14.021285057067871
    9. ' ' → logprob: -14.146285057067871
    10. '[N' → logprob: -14.271285057067871

Token 39: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023316988721489906
    2. '==' → logprob: -3.7733170986175537
    3. ' <=' → logprob: -10.398317337036133
    4. ' <' → logprob: -11.023317337036133
    5. ' ' → logprob: -11.523317337036133
    6. '=' → logprob: -12.273317337036133
    7. '<' → logprob: -12.648317337036133
    8. '<=' → logprob: -13.273317337036133
    9. ')' → logprob: -13.523317337036133
    10. ')==' → logprob: -13.648317337036133

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. '-' → logprob: -17.375911712646484
    5. '```' → logprob: -17.375911712646484
    6. 'M' → logprob: -17.625911712646484
    7. '  ' → logprob: -17.625911712646484
    8. 'H' → logprob: -17.875911712646484
    9. '=' → logprob: -18.313411712646484
    10. '۰' → logprob: -18.500911712646484

Token 41: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04351324960589409
    2. ':' → logprob: -3.418513298034668
    3. 'and' → logprob: -4.668513298034668
    4. ' or' → logprob: -7.918513298034668
    5. ' ' → logprob: -10.293513298034668
    6. ' :' → logprob: -10.418513298034668
    7. '	and' → logprob: -13.543513298034668
    8. ':return' → logprob: -14.168513298034668
    9. '  ' → logprob: -14.543513298034668
    10. ' ' → logprob: -14.668513298034668

Token 42: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2519338130950928
    2. 'M' → logprob: -1.5019338130950928
    3. ' ' → logprob: -12.501934051513672
    4. '	M' → logprob: -14.501934051513672
    5. '  ' → logprob: -16.251934051513672
    6. '<M' → logprob: -16.376934051513672
    7. ',M' → logprob: -16.501934051513672
    8. '=M' → logprob: -16.751934051513672
    9. '>M' → logprob: -16.751934051513672
    10. '   ' → logprob: -17.001934051513672

Token 43: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0019355426775291562
    2. ' ==' → logprob: -6.2519354820251465
    3. '=' → logprob: -13.251935958862305
    4. '===' → logprob: -13.626935958862305
    5. ')==' → logprob: -13.626935958862305
    6. ']==' → logprob: -14.126935958862305
    7. '()==' → logprob: -14.376935958862305
    8. '==-' → logprob: -14.626935958862305
    9. '==(' → logprob: -15.126935958862305
    10. '==
' → logprob: -15.376935958862305

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -16.62504005432129
    4. '   ' → logprob: -18.50004005432129
    5. '<|end|>' → logprob: -18.87504005432129
    6. '  ' → logprob: -18.87504005432129
    7. 'and' → logprob: -19.50004005432129
    8. ' and' → logprob: -19.50004005432129
    9. '۰' → logprob: -20.37504005432129
    10. '```' → logprob: -20.37504005432129

Token 45: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009759158827364445
    2. 'and' → logprob: -4.634758949279785
    3. '	and' → logprob: -14.009758949279785
    4. '0' → logprob: -14.259758949279785
    5. ' ' → logprob: -14.509758949279785
    6. '<|end|>' → logprob: -15.134758949279785
    7. '<|end|>' → logprob: -15.509758949279785
    8. ' ' → logprob: -16.1347599029541
    9. ' и' → logprob: -16.2597599029541
    10. '```' → logprob: -16.5097599029541

Token 46: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.0549691766500473
    2. 'L' → logprob: -2.929969072341919
    3. ' ' → logprob: -9.55496883392334
    4. ' and' → logprob: -11.92996883392334
    5. '	L' → logprob: -13.05496883392334
    6. '0' → logprob: -13.30496883392334
    7. ' ' → logprob: -13.42996883392334
    8. '<|end|>' → logprob: -13.80496883392334
    9. '  ' → logprob: -13.92996883392334
    10. 'and' → logprob: -14.05496883392334

Token 47: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -8.7689099018462e-05
    2. ' ==' → logprob: -9.37508773803711
    3. '()==' → logprob: -14.50008773803711
    4. '=' → logprob: -14.75008773803711
    5. '==
' → logprob: -14.87508773803711
    6. '==-' → logprob: -14.87508773803711
    7. ')==' → logprob: -15.00008773803711
    8. ']==' → logprob: -15.37508773803711
    9. '==(' → logprob: -15.62508773803711
    10. '```' → logprob: -15.75008773803711

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. ' and' → logprob: -17.375028610229492
    4. 'and' → logprob: -17.875028610229492
    5. '<|end|>' → logprob: -18.250028610229492
    6. '  ' → logprob: -19.250028610229492
    7. '   ' → logprob: -19.750028610229492
    8. '<|end|>' → logprob: -19.875028610229492
    9. '۰' → logprob: -20.000028610229492
    10. '=' → logprob: -20.125028610229492

Token 49: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02976033091545105
    2. 'and' → logprob: -3.5297603607177734
    3. ' ' → logprob: -11.904760360717773
    4. '	and' → logprob: -13.904760360717773
    5. '```' → logprob: -14.154760360717773
    6. '0' → logprob: -15.154760360717773
    7. '<|end|>' → logprob: -15.654760360717773
    8. ' и' → logprob: -15.904760360717773
    9. '   ' → logprob: -15.904760360717773
    10. '<|end|>' → logprob: -16.029760360717773

Token 50: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.04867639020085335
    2. 'K' → logprob: -3.0486764907836914
    3. ' ' → logprob: -9.423676490783691
    4. '0' → logprob: -12.173676490783691
    5. '	K' → logprob: -13.673676490783691
    6. '  ' → logprob: -14.173676490783691
    7. ' and' → logprob: -14.798676490783691
    8. '   ' → logprob: -14.923676490783691
    9. '<|end|>' → logprob: -16.173675537109375
    10. '```' → logprob: -16.423675537109375

Token 51: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -3.166338137816638e-05
    2. ' ==' → logprob: -10.375031471252441
    3. '==(' → logprob: -16.500032424926758
    4. '()==' → logprob: -16.625032424926758
    5. '==
' → logprob: -16.875032424926758
    6. '=' → logprob: -16.875032424926758
    7. ')==' → logprob: -17.000032424926758
    8. ']==' → logprob: -17.875032424926758
    9. '```' → logprob: -17.875032424926758
    10. '==-' → logprob: -18.250032424926758

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. ' and' → logprob: -17.625015258789062
    4. 'and' → logprob: -17.875015258789062
    5. '<|end|>' → logprob: -18.125015258789062
    6. '   ' → logprob: -19.000015258789062
    7. '۰' → logprob: -19.000015258789062
    8. '  ' → logprob: -19.375015258789062
    9. '=' → logprob: -19.875015258789062
    10. '<|end|>' → logprob: -20.125015258789062

Token 53: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036071976646780968
    2. 'and' → logprob: -5.628607273101807
    3. ' ' → logprob: -12.378606796264648
    4. '0' → logprob: -13.503606796264648
    5. '	and' → logprob: -14.128606796264648
    6. '```' → logprob: -15.378606796264648
    7. '   ' → logprob: -15.628606796264648
    8. ' и' → logprob: -16.00360679626465
    9. ' ' → logprob: -16.50360679626465
    10. '<|end|>' → logprob: -16.75360679626465

Token 54: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.09312113374471664
    2. 'A' → logprob: -2.71812105178833
    3. ' ' → logprob: -4.21812105178833
    4. '0' → logprob: -4.84312105178833
    5. ' H' → logprob: -8.593121528625488
    6. 'H' → logprob: -10.218121528625488
    7. '  ' → logprob: -10.218121528625488
    8. ' and' → logprob: -10.843121528625488
    9. '	A' → logprob: -11.093121528625488
    10. '   ' → logprob: -11.468121528625488

Token 55: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0067240106873214245
    2. ' ==' → logprob: -5.006723880767822
    3. 'and' → logprob: -12.63172435760498
    4. ' and' → logprob: -12.88172435760498
    5. '0' → logprob: -13.63172435760498
    6. '()==' → logprob: -15.25672435760498
    7. '==(' → logprob: -15.50672435760498
    8. '```' → logprob: -15.63172435760498
    9. '<|end|>' → logprob: -15.75672435760498
    10. '=' → logprob: -15.88172435760498

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. ' and' → logprob: -15.000262260437012
    4. 'and' → logprob: -15.500262260437012
    5. '   ' → logprob: -17.500261306762695
    6. '  ' → logprob: -17.875261306762695
    7. '=' → logprob: -18.000261306762695
    8. '<|end|>' → logprob: -18.125261306762695
    9. '۰' → logprob: -19.062761306762695
    10. '```' → logprob: -19.312761306762695

Token 57: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006721298210322857
    2. 'and' → logprob: -5.006721496582031
    3. ' ' → logprob: -12.256721496582031
    4. '	and' → logprob: -15.131721496582031
    5. ' ' → logprob: -15.256721496582031
    6. '```' → logprob: -15.381721496582031
    7. '0' → logprob: -15.756721496582031
    8. '<|end|>' → logprob: -15.881721496582031
    9. ' и' → logprob: -16.50672149658203
    10. 'x' → logprob: -17.00672149658203

Token 58: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.589299201965332
    2. ' H' → logprob: -0.839299201965332
    3. '0' → logprob: -4.714299201965332
    4. ' ' → logprob: -5.464299201965332
    5. '   ' → logprob: -10.089299201965332
    6. '  ' → logprob: -10.714299201965332
    7. '	H' → logprob: -12.964299201965332
    8. '    ' → logprob: -14.151799201965332
    9. ' ' → logprob: -14.401799201965332
    10. '=' → logprob: -15.401799201965332

Token 59: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008619185537099838
    2. ' ==' → logprob: -4.75861930847168
    3. ')==' → logprob: -13.38361930847168
    4. '()==' → logprob: -13.50861930847168
    5. ']==' → logprob: -14.38361930847168
    6. '==-' → logprob: -15.00861930847168
    7. '=' → logprob: -15.13361930847168
    8. '==
' → logprob: -15.50861930847168
    9. '==(' → logprob: -15.63361930847168
    10. '0' → logprob: -16.13361930847168

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009124171338044107
    2. ' ' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.9384126663208
    4. '  ' → logprob: -15.6884126663208
    5. '۰' → logprob: -16.125911712646484
    6. '```' → logprob: -16.563411712646484
    7. '<|end|>' → logprob: -16.813411712646484
    8. '=' → logprob: -17.375911712646484
    9. '1' → logprob: -17.563411712646484
    10. '<|end|>' → logprob: -17.813411712646484

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001572948880493641
    2. ':
' → logprob: -6.501573085784912
    3. ':return' → logprob: -9.876572608947754
    4. ' :' → logprob: -11.251572608947754
    5. '   ' → logprob: -12.876572608947754
    6. '       ' → logprob: -13.126572608947754
    7. '           ' → logprob: -14.251572608947754
    8. '):' → logprob: -14.501572608947754
    9. ' :
' → logprob: -15.376572608947754
    10. ':
' → logprob: -16.00157356262207

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006016458501107991
    2. '       ' → logprob: -7.500601768493652
    3. ' break' → logprob: -10.500601768493652
    4. '   ' → logprob: -11.750601768493652
    5. '          ' → logprob: -12.125601768493652
    6. '               ' → logprob: -12.750601768493652
    7. '		' → logprob: -14.250601768493652
    8. '            ' → logprob: -14.250601768493652
    9. '         ' → logprob: -14.375601768493652
    10. 'break' → logprob: -14.625601768493652

Token 63: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0979747548699379
    2. 'break' (adapté à ' break') → logprob: -2.9729747772216797
    3. '           ' → logprob: -3.3479747772216797
    4. ' return' → logprob: -5.59797477722168
    5. '       ' → logprob: -6.47297477722168
    6. 'return' → logprob: -6.47297477722168
    7. '               ' → logprob: -8.84797477722168
    8. '	break' → logprob: -10.09797477722168
    9. '   ' → logprob: -10.34797477722168
    10. '```' → logprob: -12.59797477722168

Token 64: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029070556163787842
    2. '        
' → logprob: -4.4040703773498535
    3. '
' → logprob: -5.1540703773498535
    4. '<|end|>' → logprob: -5.1540703773498535
    5. '        ' → logprob: -6.1540703773498535
    6. ' 
' → logprob: -7.7790703773498535
    7. '   ' → logprob: -8.029070854187012
    8. '    ' → logprob: -8.154070854187012
    9. '' → logprob: -8.404070854187012
    10. '    
' → logprob: -8.529070854187012

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13372991979122162
    2. '
' → logprob: -2.258729934692383
    3. '        
' → logprob: -4.383729934692383
    4. '<|end|>' → logprob: -5.508729934692383
    5. '        ' → logprob: -6.133729934692383
    6. '   ' → logprob: -8.133729934692383
    7. '' → logprob: -8.133729934692383
    8. '    ' → logprob: -8.633729934692383
    9. '```' → logprob: -8.633729934692383
    10. ' ' → logprob: -8.758729934692383

Token 66: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3706914186477661
    2. 'graph' → logprob: -2.1206912994384766
    3. 'dist' → logprob: -2.2456912994384766
    4. ' graph' → logprob: -2.9956912994384766
    5. 'dp' → logprob: -3.3706912994384766
    6. 'nodes' → logprob: -3.8706912994384766
    7. '   ' → logprob: -3.8706912994384766
    8. ' dist' → logprob: -3.9956912994384766
    9. 'pq' → logprob: -4.120691299438477
    10. 'heap' → logprob: -4.370691299438477

Token 67: 'sets' (ID: 7234)
  Prédit: 'riends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'riends' → logprob: -2.0123023986816406
    2. 'oods' → logprob: -2.3873023986816406
    3. 'requencies' → logprob: -2.3873023986816406
    4. 'or' → logprob: -2.6373023986816406
    5. 'req' → logprob: -2.6373023986816406
    6. 'ood' → logprob: -3.2623023986816406
    7. 'requency' → logprob: -3.3873023986816406
    8. 'loor' → logprob: -3.3873023986816406
    9. 'ields' → logprob: -3.5123023986816406
    10. 'lights' → logprob: -3.6373023986816406

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05828715115785599
    2. '=' → logprob: -2.9332871437072754
    3. '=[]' → logprob: -6.058287143707275
    4. 's' → logprob: -7.808287143707275
    5. ',' → logprob: -8.433287620544434
    6. '[]' → logprob: -8.808287620544434
    7. '[' → logprob: -9.558287620544434
    8. '_list' → logprob: -9.683287620544434
    9. '   ' → logprob: -10.933287620544434
    10. '=[]
' → logprob: -10.933287620544434

Token 69: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03976164385676384
    2. '[]' → logprob: -3.414761543273926
    3. ' [' → logprob: -5.414761543273926
    4. '[' → logprob: -6.664761543273926
    5. ' [[]' → logprob: -8.914761543273926
    6. ' [{}' → logprob: -9.039761543273926
    7. ' {}' → logprob: -9.289761543273926
    8. '{}' → logprob: -11.789761543273926
    9. ' defaultdict' → logprob: -12.664761543273926
    10. ' []
' → logprob: -13.289761543273926

Token 70: '(map' (ID: 16946)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08935916423797607
    2. '(' → logprob: -2.4643592834472656
    3. '([' → logprob: -8.714359283447266
    4. '([]' → logprob: -9.089359283447266
    5. '([(' → logprob: -10.214359283447266
    6. '()
' → logprob: -10.714359283447266
    7. '((' → logprob: -11.214359283447266
    8. '(),' → logprob: -11.339359283447266
    9. '();' → logprob: -11.464359283447266
    10. '()

' → logprob: -11.839359283447266

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017648482753429562
    2. '(' → logprob: -8.875176429748535
    3. 'int' → logprob: -11.000176429748535
    4. '[int' → logprob: -12.500176429748535
    5. ',int' → logprob: -12.500176429748535
    6. '=int' → logprob: -12.750176429748535
    7. '(str' → logprob: -12.750176429748535
    8. ')' → logprob: -13.250176429748535
    9. '<int' → logprob: -13.250176429748535
    10. ' int' → logprob: -13.750176429748535

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2855607271194458
    2. '(input' → logprob: -2.0355606079101562
    3. ',input' → logprob: -2.2855606079101562
    4. '(' → logprob: -4.160560607910156
    5. ' ,' → logprob: -8.535560607910156
    6. ' (' → logprob: -8.660560607910156
    7. '(),' → logprob: -9.910560607910156
    8. 'input' → logprob: -10.535560607910156
    9. ' input' → logprob: -10.785560607910156
    10. ',(' → logprob: -11.910560607910156

Token 73: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17975197732448578
    2. 'input' → logprob: -1.804751992225647
    3. ' sys' → logprob: -13.304752349853516
    4. '(input' → logprob: -13.804752349853516
    5. '	input' → logprob: -13.804752349853516
    6. '[input' → logprob: -13.929752349853516
    7. 'sys' → logprob: -14.179752349853516
    8. ' ' → logprob: -14.554752349853516
    9. '   ' → logprob: -14.554752349853516
    10. ',input' → logprob: -15.054752349853516

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.64970643306151e-05
    2. '()' → logprob: -9.375086784362793
    3. ' ().' → logprob: -14.125086784362793
    4. '()))' → logprob: -14.750086784362793
    5. '(' → logprob: -15.125086784362793
    6. '())' → logprob: -16.375085830688477
    7. '()));' → logprob: -17.500085830688477
    8. '()).' → logprob: -17.500085830688477
    9. '()
' → logprob: -17.625085830688477
    10. ')' → logprob: -17.875085830688477

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013727048644796014
    2. 'strip' → logprob: -9.000137329101562
    3. 'rstrip' → logprob: -11.500137329101562
    4. ' split' → logprob: -12.625137329101562
    5. '(split' → logprob: -16.375137329101562
    6. 'read' → logprob: -16.625137329101562
    7. 'spl' → logprob: -16.625137329101562
    8. 's' → logprob: -17.250137329101562
    9. ')' → logprob: -18.125137329101562
    10. '```' → logprob: -18.375137329101562

Token 76: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.021727170795202255
    2. '()' → logprob: -4.021727085113525
    3. '))' → logprob: -6.146727085113525
    4. '(' → logprob: -7.271727085113525
    5. '())' → logprob: -7.521727085113525
    6. '()))
' → logprob: -9.521727561950684
    7. '().' → logprob: -9.896727561950684
    8. '()));' → logprob: -10.646727561950684
    9. '()))

' → logprob: -11.771727561950684
    10. '(),' → logprob: -11.771727561950684

Token 77: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7420415282249451
    2. ' M' → logprob: -1.1170415878295898
    3. ' N' → logprob: -2.24204158782959
    4. 'L' → logprob: -3.74204158782959
    5. ' K' → logprob: -3.99204158782959
    6. ' f' → logprob: -4.36704158782959
    7. 'M' → logprob: -4.36704158782959
    8. 'N' → logprob: -4.49204158782959
    9. ' ' → logprob: -5.74204158782959
    10. ' len' → logprob: -5.86704158782959

Token 79: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7034081220626831
    2. ' >' → logprob: -0.7034081220626831
    3. ' else' → logprob: -4.828408241271973
    4. 'else' → logprob: -6.203408241271973
    5. ' !=' → logprob: -9.828408241271973
    6. '!=' → logprob: -10.078408241271973
    7. ' ' → logprob: -10.078408241271973
    8. '<|end|>' → logprob: -10.703408241271973
    9. ' ' → logprob: -11.578408241271973
    10. '<|end|>' → logprob: -12.203408241271973

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008621551096439362
    2. ' ' → logprob: -4.758621692657471
    3. '>' → logprob: -12.758621215820312
    4. '  ' → logprob: -13.633621215820312
    5. '<|end|>' → logprob: -13.883621215820312
    6. '   ' → logprob: -14.758621215820312
    7. 'f' → logprob: -14.883621215820312
    8. '1' → logprob: -15.383621215820312
    9. '    ' → logprob: -15.446121215820312
    10. '```' → logprob: -16.071121215820312

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029884008690714836
    2. 'else' → logprob: -3.529884099960327
    3. '       ' → logprob: -10.029884338378906
    4. ' ' → logprob: -10.529884338378906
    5. '        ' → logprob: -10.654884338378906
    6. ')' → logprob: -10.779884338378906
    7. '	else' → logprob: -11.529884338378906
    8. ' )' → logprob: -13.404884338378906
    9. '<|end|>' → logprob: -13.779884338378906
    10. ' ' → logprob: -14.029884338378906

Token 82: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.42897531390190125
    2. 'set' → logprob: -1.0539753437042236
    3. ' ' → logprob: -9.303975105285645
    4. ' {}' → logprob: -10.053975105285645
    5. '{}' → logprob: -10.428975105285645
    6. ' []' → logprob: -10.553975105285645
    7. '	set' → logprob: -10.553975105285645
    8. '{' → logprob: -11.053975105285645
    9. ' {' → logprob: -11.303975105285645
    10. '=set' → logprob: -11.803975105285645

Token 83: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.084206375409849e-05
    2. '([]' → logprob: -10.625041007995605
    3. '(' → logprob: -12.375041007995605
    4. ' ()' → logprob: -12.500041007995605
    5. '[]' → logprob: -12.750041007995605
    6. '()
' → logprob: -13.250041007995605
    7. '()]' → logprob: -14.375041007995605
    8. '();' → logprob: -14.625041007995605
    9. '()

' → logprob: -14.625041007995605
    10. '()\' → logprob: -14.875041007995605

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46888846158981323
    2. '<|end|>' → logprob: -1.343888521194458
    3. '        
' → logprob: -3.218888521194458
    4. ' ' → logprob: -3.718888521194458
    5. ' 
' → logprob: -3.968888521194458
    6. '
' → logprob: -4.593888282775879
    7. ')' → logprob: -5.093888282775879
    8. '  
' → logprob: -5.718888282775879
    9. '        ' → logprob: -5.718888282775879
    10. '<|end|>' → logprob: -6.593888282775879

Token 85: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.510533571243286
    2. 'f' (adapté à ' f') → logprob: -3.135533571243286
    3. 'h' → logprob: -3.135533571243286
    4. 'q' → logprob: -3.573033571243286
    5. 'friends' → logprob: -3.635533571243286
    6. 'graph' → logprob: -3.823033571243286
    7. 'dist' → logprob: -3.885533571243286
    8. ' edges' → logprob: -3.948033571243286
    9. 'p' → logprob: -4.010533332824707
    10. 'arr' → logprob: -4.010533332824707

Token 86: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.37743788957595825
    2. 'riends' → logprob: -2.7524378299713135
    3. 'ails' → logprob: -4.377438068389893
    4. 'set' → logprob: -4.502438068389893
    5. 'oods' → logprob: -4.502438068389893
    6. 'ights' → logprob: -4.752438068389893
    7. 'or' → logprob: -4.877438068389893
    8. 'ail' → logprob: -5.002438068389893
    9. ' =' → logprob: -5.002438068389893
    10. 'riend' → logprob: -5.002438068389893

Token 87: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8049649000167847
    2. '<|end|>' → logprob: -1.3049649000167847
    3. '.add' → logprob: -1.9299649000167847
    4. '.update' → logprob: -2.304965019226074
    5. '.union' → logprob: -4.929965019226074
    6. '=' → logprob: -4.929965019226074
    7. ' =' → logprob: -5.179965019226074
    8. ',' → logprob: -5.304965019226074
    9. '.clear' → logprob: -5.804965019226074
    10. '.remove' → logprob: -5.929965019226074

Token 88: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02838553674519062
    2. '(A' → logprob: -4.028385639190674
    3. '(H' → logprob: -4.903385639190674
    4. '(-' → logprob: -6.278385639190674
    5. '(M' → logprob: -7.778385639190674
    6. '(N' → logprob: -8.778385162353516
    7. '(K' → logprob: -9.153385162353516
    8. '(L' → logprob: -9.528385162353516
    9. '(f' → logprob: -10.153385162353516
    10. '(F' → logprob: -11.028385162353516

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008235682616941631
    2. ' )' → logprob: -7.125823497772217
    3. ')
' → logprob: -11.000823974609375
    4. '))' → logprob: -14.375823974609375
    5. ')
' → logprob: -15.375823974609375
    6. ')`' → logprob: -15.750823974609375
    7. ')

' → logprob: -15.875823974609375
    8. ')}' → logprob: -15.875823974609375
    9. ')#' → logprob: -16.000823974609375
    10. ')return' → logprob: -16.125823974609375

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02920231968164444
    2. '        
' → logprob: -4.529202461242676
    3. '        ' → logprob: -4.904202461242676
    4. '<|end|>' → logprob: -5.154202461242676
    5. '
' → logprob: -6.404202461242676
    6. ' sets' → logprob: -7.279202461242676
    7. ')' → logprob: -8.279202461242676
    8. 's' → logprob: -8.404202461242676
    9. '' → logprob: -8.529202461242676
    10. 'f' → logprob: -8.529202461242676

Token 91: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8939505219459534
    2. 'dist' → logprob: -1.8939504623413086
    3. ' dist' → logprob: -2.7689504623413086
    4. 'f' (adapté à ' f') → logprob: -3.3939504623413086
    5. '   ' → logprob: -3.3939504623413086
    6. 'h' → logprob: -3.3939504623413086
    7. 'q' → logprob: -3.7689504623413086
    8. 'dp' → logprob: -3.8939504623413086
    9. 'pq' → logprob: -4.143950462341309
    10. 'visited' → logprob: -4.206450462341309

Token 92: 'sets' (ID: 7234)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1404145956039429
    2. 'sets' → logprob: -2.1404147148132324
    3. 'or' → logprob: -2.5154147148132324
    4. 'e' → logprob: -2.5154147148132324
    5. '       ' → logprob: -2.6404147148132324
    6. '   ' → logprob: -3.0154147148132324
    7. '=' → logprob: -3.3904147148132324
    8. 's' → logprob: -3.5154147148132324
    9. 'for' → logprob: -3.7654147148132324
    10. 'o' → logprob: -4.515414714813232

Token 93: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4286089539527893
    2. '<|end|>' → logprob: -2.4286088943481445
    3. ' =' → logprob: -2.6786088943481445
    4. '.update' → logprob: -2.8036088943481445
    5. '=' → logprob: -3.3036088943481445
    6. '.remove' → logprob: -3.6786088943481445
    7. '.add' → logprob: -3.8036088943481445
    8. ',' → logprob: -4.3036088943481445
    9. '.union' → logprob: -4.8036088943481445
    10. ')' → logprob: -5.0536088943481445

Token 94: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0009852928342297673
    2. '(' → logprob: -7.250985145568848
    3. '(K' → logprob: -8.750985145568848
    4. '(M' → logprob: -9.625985145568848
    5. '(N' → logprob: -11.125985145568848
    6. 'H' → logprob: -11.625985145568848
    7. '(B' → logprob: -11.625985145568848
    8. '(A' → logprob: -12.375985145568848
    9. '(L' → logprob: -12.750985145568848
    10. '((' → logprob: -12.750985145568848

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008800933137536049
    2. ')
' → logprob: -4.758800983428955
    3. ' )' → logprob: -8.758800506591797
    4. ')
' → logprob: -11.258800506591797
    5. '       ' → logprob: -11.883800506591797
    6. ' )
' → logprob: -12.633800506591797
    7. ')

' → logprob: -12.758800506591797
    8. '<|end|>' → logprob: -14.133800506591797
    9. ')set' → logprob: -14.883800506591797
    10. '#' → logprob: -15.383800506591797

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25148826837539673
    2. '<|end|>' → logprob: -1.876488208770752
    3. '
' → logprob: -3.126488208770752
    4. '        
' → logprob: -3.751488208770752
    5. '<|end|>' → logprob: -8.00148868560791
    6. ')' → logprob: -8.37648868560791
    7. '        ' → logprob: -8.50148868560791
    8. '```' → logprob: -8.62648868560791
    9. ' ' → logprob: -8.75148868560791
    10. '  
' → logprob: -8.75148868560791

Token 97: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5885974764823914
    2. 'dist' → logprob: -1.4635975360870361
    3. 'graph' (adapté à ' graph') → logprob: -3.338597536087036
    4. 'dp' → logprob: -3.463597536087036
    5. ' dist' → logprob: -4.213597297668457
    6. 'visited' → logprob: -4.463597297668457
    7. 'd' → logprob: -5.088597297668457
    8. 'friends' → logprob: -5.213597297668457
    9. 'distance' → logprob: -5.338597297668457
    10. 'edges' → logprob: -5.401097297668457

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076099359430372715
    2. '=' → logprob: -4.882609844207764
    3. '[' → logprob: -13.507610321044922
    4. ' ' → logprob: -14.257610321044922
    5. ',' → logprob: -14.757610321044922
    6. '=[]' → logprob: -15.132610321044922
    7. '[]' → logprob: -15.507610321044922
    8. '<|end|>' → logprob: -15.757610321044922
    9. '={}' → logprob: -16.132610321044922
    10. ')' → logprob: -16.382610321044922

Token 99: ' [[]' (ID: 182908)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9894750714302063
    2. ' [[]' → logprob: -0.9894750714302063
    3. '[' → logprob: -1.7394750118255615
    4. ' {}' → logprob: -3.2394750118255615
    5. '{' → logprob: -4.114475250244141
    6. ' [' → logprob: -4.364475250244141
    7. ' {' → logprob: -5.239475250244141
    8. ' [{}' → logprob: -5.489475250244141
    9. 'default' → logprob: -6.489475250244141
    10. ' defaultdict' → logprob: -6.614475250244141

Token 100: ' for' (ID: 395)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7889039516448975
    2. ' for' → logprob: -1.1639039516448975
    3. 'for' → logprob: -1.6639039516448975
    4. '(' → logprob: -3.5389039516448975
    5. ')' → logprob: -5.038904190063477
    6. ' (' → logprob: -5.663904190063477
    7. ',' → logprob: -5.913904190063477
    8. '       ' → logprob: -7.288904190063477
    9. ']' → logprob: -7.788904190063477
    10. '<|end|>' → logprob: -7.913904190063477

Token 101: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09932510554790497
    2. '_' → logprob: -2.974325180053711
    3. ' _' → logprob: -3.349325180053711
    4. 'range' → logprob: -5.224325180053711
    5. ' in' → logprob: -6.099325180053711
    6. '(range' → logprob: -7.724325180053711
    7. ' ' → logprob: -8.599325180053711
    8. '_range' → logprob: -10.099325180053711
    9. ' i' → logprob: -10.099325180053711
    10. '	range' → logprob: -12.099325180053711

Token 102: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06565862149000168
    2. ' in' → logprob: -3.0656585693359375
    3. 'range' → logprob: -4.1906585693359375
    4. '(range' → logprob: -6.6906585693359375
    5. ' range' → logprob: -7.8156585693359375
    6. '(' → logprob: -9.065658569335938
    7. '(N' → logprob: -10.690658569335938
    8. ' ' → logprob: -13.815658569335938
    9. 'x' → logprob: -14.190658569335938
    10. '	range' → logprob: -14.315658569335938

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03829313442111015
    2. ' range' → logprob: -3.2882931232452393
    3. '(range' → logprob: -8.28829288482666
    4. '	range' → logprob: -16.288293838500977
    5. '(' → logprob: -18.538293838500977
    6. '   ' → logprob: -19.413293838500977
    7. '.range' → logprob: -19.913293838500977
    8. ' xrange' → logprob: -19.913293838500977
    9. '(N' → logprob: -20.038293838500977
    10. ']' → logprob: -20.413293838500977

Token 104: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001097417771234177
    2. '(' → logprob: -9.125109672546387
    3. '((' → logprob: -14.500109672546387
    4. '(n' → logprob: -15.625109672546387
    5. ' (' → logprob: -15.625109672546387
    6. '(M' → logprob: -18.125110626220703
    7. '(
' → logprob: -18.375110626220703
    8. 'N' → logprob: -19.500110626220703
    9. '(S' → logprob: -20.375110626220703
    10. ')(' → logprob: -20.750110626220703

Token 105: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.438573680294212e-06
    2. ')' → logprob: -13.250005722045898
    3. ')]
' → logprob: -13.625005722045898
    4. ' )' → logprob: -13.750005722045898
    5. '+' → logprob: -13.875005722045898
    6. ')]

' → logprob: -15.750005722045898
    7. ']' → logprob: -16.8750057220459
    8. ')]
' → logprob: -16.8750057220459
    9. ')])' → logprob: -16.8750057220459
    10. '))' → logprob: -17.0000057220459

Token 106: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5783917903900146
    2. ' for' → logprob: -0.8283917903900146
    3. '   ' → logprob: -6.203392028808594
    4. '       ' → logprob: -7.953392028808594
    5. '	for' → logprob: -9.953392028808594
    6. ' ' → logprob: -11.078392028808594
    7. '```' → logprob: -12.203392028808594
    8. '  ' → logprob: -13.203392028808594
    9. '<|end|>' → logprob: -13.328392028808594
    10. '    ' → logprob: -13.953392028808594

Token 108: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004095973912626505
    2. '_' → logprob: -5.504096031188965
    3. ' i' → logprob: -11.129096031188965
    4. '_i' → logprob: -13.254096031188965
    5. ' ' → logprob: -14.004096031188965
    6. ' ' → logprob: -16.37909507751465
    7. 'i' → logprob: -16.75409507751465
    8. ' __' → logprob: -16.75409507751465
    9. '   ' → logprob: -18.00409507751465
    10. '  ' → logprob: -18.62909507751465

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3496546745300293
    2. 'in' → logprob: -1.2246546745300293
    3. 'range' → logprob: -6.974654674530029
    4. '_' → logprob: -9.224655151367188
    5. '(' → logprob: -9.724655151367188
    6. ' ' → logprob: -10.099655151367188
    7. ' range' → logprob: -10.099655151367188
    8. 'n' → logprob: -11.974655151367188
    9. 'i' → logprob: -12.224655151367188
    10. '0' → logprob: -12.724655151367188

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.251502990722656
    4. '	range' → logprob: -17.501502990722656
    5. '```' → logprob: -19.251502990722656
    6. 'r' → logprob: -19.251502990722656
    7. 'ange' → logprob: -19.376502990722656
    8. 'rang' → logprob: -19.376502990722656
    9. 'map' → logprob: -20.126502990722656
    10. '[' → logprob: -20.376502990722656

Token 111: '(K' (ID: 28797)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00011284107313258573
    2. ' (' → logprob: -9.250112533569336
    3. '(' → logprob: -11.250112533569336
    4. ' M' → logprob: -12.625112533569336
    5. 'M' → logprob: -14.875112533569336
    6. '   ' → logprob: -17.750112533569336
    7. '	M' → logprob: -17.750112533569336
    8. ' ' → logprob: -18.125112533569336
    9. '(m' → logprob: -18.250112533569336
    10. '(N' → logprob: -18.625112533569336

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01839960366487503
    2. '):
' → logprob: -4.018399715423584
    3. ' ):' → logprob: -8.768399238586426
    4. '):
' → logprob: -10.268399238586426
    5. ':' → logprob: -10.393399238586426
    6. ')' → logprob: -11.143399238586426
    7. ' ):
' → logprob: -12.518399238586426
    8. '   ' → logprob: -12.893399238586426
    9. ',' → logprob: -13.268399238586426
    10. '):

' → logprob: -13.643399238586426

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15134793519973755
    2. '           ' → logprob: -2.6513478755950928
    3. '   ' → logprob: -2.7763478755950928
    4. '```' → logprob: -5.901348114013672
    5. '	   ' → logprob: -6.026348114013672
    6. '	       ' → logprob: -7.651348114013672
    7. '    ' → logprob: -8.401348114013672
    8. '    
' → logprob: -8.776348114013672
    9. '
' → logprob: -8.901348114013672
    10. '        ' → logprob: -9.026348114013672

Token 114: ' X' (ID: 2127)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11766097694635391
    2. 'u' → logprob: -2.2426609992980957
    3. ' a' → logprob: -5.992660999298096
    4. 'a' → logprob: -6.867660999298096
    5. ' U' → logprob: -7.867660999298096
    6. ' s' → logprob: -7.867660999298096
    7. 'U' → logprob: -8.867660522460938
    8. ' x' → logprob: -8.992660522460938
    9. 'x' → logprob: -9.492660522460938
    10. 's' → logprob: -9.492660522460938

Token 115: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014187362976372242
    2. ',Y' → logprob: -4.514187335968018
    3. ' ,' → logprob: -5.889187335968018
    4. ',M' → logprob: -8.389187812805176
    5. ',y' → logprob: -10.389187812805176
    6. ' Y' → logprob: -11.014187812805176
    7. ',int' → logprob: -11.639187812805176
    8. '<|end|>' → logprob: -11.889187812805176
    9. ',S' → logprob: -12.264187812805176
    10. 'Y' → logprob: -12.264187812805176

Token 116: ',T' (ID: 44428)
  Prédit: ',W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.4467473328113556
    2. ',w' → logprob: -1.8217473030090332
    3. ',' → logprob: -1.9467473030090332
    4. ',Z' → logprob: -3.321747303009033
    5. ',C' → logprob: -5.321747303009033
    6. ',c' → logprob: -5.571747303009033
    7. ',d' → logprob: -5.696747303009033
    8. ',D' → logprob: -6.321747303009033
    9. ',T' → logprob: -6.446747303009033
    10. ',Q' → logprob: -6.696747303009033

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38927677273750305
    2. ' =' → logprob: -1.1392767429351807
    3. ',time' → logprob: -7.01427698135376
    4. ',' → logprob: -7.13927698135376
    5. '=time' → logprob: -8.889276504516602
    6. ',c' → logprob: -9.014276504516602
    7. '=input' → logprob: -9.639276504516602
    8. ',w' → logprob: -9.764276504516602
    9. '=int' → logprob: -10.014276504516602
    10. '=line' → logprob: -10.389276504516602

Token 118: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011048642918467522
    2. 'map' → logprob: -4.511048793792725
    3. '	map' → logprob: -14.261048316955566
    4. ' ' → logprob: -15.636048316955566
    5. '   ' → logprob: -17.886049270629883
    6. '  ' → logprob: -18.011049270629883
    7. ' ' → logprob: -18.261049270629883
    8. '(map' → logprob: -18.636049270629883
    9. '.map' → logprob: -19.636049270629883
    10. ' list' → logprob: -19.636049270629883

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.537180211627856e-05
    2. '(' → logprob: -10.125045776367188
    3. ',int' → logprob: -13.375045776367188
    4. '=int' → logprob: -13.625045776367188
    5. '[int' → logprob: -13.875045776367188
    6. '<int' → logprob: -14.375045776367188
    7. 'int' → logprob: -15.000045776367188
    8. ' (' → logprob: -15.250045776367188
    9. ']int' → logprob: -15.625045776367188
    10. '<|end|>' → logprob: -16.375045776367188

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005446485709398985
    2. ',input' → logprob: -5.255446434020996
    3. ' ,' → logprob: -8.880446434020996
    4. '(' → logprob: -10.755446434020996
    5. ',int' → logprob: -11.005446434020996
    6. '(),' → logprob: -11.255446434020996
    7. '           ' → logprob: -11.630446434020996
    8. '               ' → logprob: -12.630446434020996
    9. '                   ' → logprob: -12.880446434020996
    10. 'input' → logprob: -13.130446434020996

Token 121: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519291639328003
    2. 'input' → logprob: -1.5019291639328003
    3. ',input' → logprob: -17.251928329467773
    4. '	input' → logprob: -17.751928329467773
    5. '=input' → logprob: -18.126928329467773
    6. '(input' → logprob: -18.251928329467773
    7. '_input' → logprob: -18.751928329467773
    8. 'Input' → logprob: -19.626928329467773
    9. '<input' → logprob: -19.626928329467773
    10. '[input' → logprob: -20.126928329467773

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.750000953674316
    3. '().__' → logprob: -18.250001907348633
    4. ' ().' → logprob: -18.375001907348633
    5. '.' → logprob: -18.875001907348633
    6. '.split' → logprob: -19.125001907348633
    7. '(' → logprob: -19.250001907348633
    8. '.readline' → logprob: -20.625001907348633
    9. '()-' → logprob: -20.625001907348633
    10. '   ' → logprob: -21.000001907348633

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.125
    3. '(split' → logprob: -18.125
    4. 'spl' → logprob: -18.125
    5. 'strip' → logprob: -18.375
    6. 'rstrip' → logprob: -19.375
    7. 'read' → logprob: -20.625
    8. 'plit' → logprob: -20.875
    9. '.split' → logprob: -21.25
    10. '_split' → logprob: -21.875

Token 124: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044768236577510834
    2. '())' → logprob: -3.4197683334350586
    3. ')
' → logprob: -4.919768333435059
    4. '()' → logprob: -5.919768333435059
    5. '())
' → logprob: -6.919768333435059
    6. '()
' → logprob: -10.419768333435059
    7. ')
' → logprob: -11.419768333435059
    8. ' )' → logprob: -11.419768333435059
    9. '       ' → logprob: -11.669768333435059
    10. ')`' → logprob: -12.169768333435059

Token 125: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032729968428611755
    2. '<|end|>' → logprob: -4.2827301025390625
    3. '           ' → logprob: -5.0327301025390625
    4. '   ' → logprob: -5.2827301025390625
    5. ')' → logprob: -6.5327301025390625
    6. ',' → logprob: -6.6577301025390625
    7. '        
' → logprob: -6.9077301025390625
    8. '
' → logprob: -7.4077301025390625
    9. '[' → logprob: -8.032730102539062
    10. ' 
' → logprob: -8.282730102539062

Token 126: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.45620453357696533
    2. ' graph' → logprob: -1.0812045335769653
    3. '   ' → logprob: -3.706204414367676
    4. ' if' → logprob: -6.581204414367676
    5. 'if' → logprob: -7.331204414367676
    6. '	graph' → logprob: -8.081204414367676
    7. '```' → logprob: -9.331204414367676
    8. '       ' → logprob: -9.956204414367676
    9. '           ' → logprob: -10.831204414367676
    10. ' ' → logprob: -11.956204414367676

Token 127: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.000009536743164
    3. '[Y' → logprob: -13.000009536743164
    4. 'X' → logprob: -14.250009536743164
    5. '[x' → logprob: -16.750009536743164
    6. '```' → logprob: -16.875009536743164
    7. ' [' → logprob: -17.125009536743164
    8. '[T' → logprob: -17.625009536743164
    9. '[A' → logprob: -18.125009536743164
    10. '[min' → logprob: -18.625009536743164

Token 128: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.023851191624999046
    2. '[X' → logprob: -4.02385139465332
    3. '[Y' → logprob: -5.64885139465332
    4. ').' → logprob: -7.27385139465332
    5. '][' → logprob: -7.64885139465332
    6. '[' → logprob: -8.02385139465332
    7. '       ' → logprob: -8.14885139465332
    8. '   ' → logprob: -8.52385139465332
    9. ' ].' → logprob: -9.64885139465332
    10. ']' → logprob: -9.89885139465332

Token 129: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -16.0
    4. 'app' → logprob: -18.0
    5. 'push' → logprob: -18.125
    6. '_append' → logprob: -18.625
    7. 'appen' → logprob: -19.125
    8. '	append' → logprob: -19.75
    9. 'Append' → logprob: -21.0
    10. ' ' → logprob: -21.625

Token 130: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20171132683753967
    2. '(' → logprob: -1.7017112970352173
    3. '(Y' → logprob: -8.201711654663086
    4. ' (' → logprob: -11.076711654663086
    5. '(X' → logprob: -11.951711654663086
    6. '(y' → logprob: -14.201711654663086
    7. '(T' → logprob: -14.951711654663086
    8. '(B' → logprob: -15.576711654663086
    9. ' ((' → logprob: -15.701711654663086
    10. '(E' → logprob: -16.326711654663086

Token 131: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0010338802821934223
    2. ' Y' → logprob: -6.876033782958984
    3. '	Y' → logprob: -14.501033782958984
    4. '   ' → logprob: -15.001033782958984
    5. ',Y' → logprob: -15.876033782958984
    6. ')' → logprob: -16.626033782958984
    7. ' ' → logprob: -16.751033782958984
    8. ',' → logprob: -17.501033782958984
    9. '
' → logprob: -17.876033782958984
    10. '(Y' → logprob: -18.251033782958984

Token 132: ',T' (ID: 44428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012737778946757317
    2. ',T' → logprob: -4.38773775100708
    3. ' ,' → logprob: -8.387738227844238
    4. ',
' → logprob: -15.012738227844238
    5. ',t' → logprob: -17.762737274169922
    6. '，' → logprob: -17.887737274169922
    7. ',

' → logprob: -17.887737274169922
    8. ' T' → logprob: -18.387737274169922
    9. '‌,' → logprob: -18.512737274169922
    10. '   ' → logprob: -18.762737274169922

Token 133: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00013786651834379882
    2. ' ))' → logprob: -9.750138282775879
    3. '))
' → logprob: -10.125138282775879
    4. ')' → logprob: -10.250138282775879
    5. ',' → logprob: -13.625138282775879
    6. ')))' → logprob: -13.750138282775879
    7. '));' → logprob: -14.750138282775879
    8. '))

' → logprob: -15.000138282775879
    9. ' ' → logprob: -15.250138282775879
    10. '<|end|>' → logprob: -15.375138282775879

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014132248237729073
    2. '<|end|>' → logprob: -4.389132022857666
    3. '<|end|>' → logprob: -7.889132022857666
    4. '       ' → logprob: -8.264132499694824
    5. '		' → logprob: -8.764132499694824
    6. ' ' → logprob: -9.014132499694824
    7. ')' → logprob: -9.014132499694824
    8. '   ' → logprob: -9.014132499694824
    9. '          ' → logprob: -9.639132499694824
    10. '	graph' → logprob: -10.014132499694824

Token 135: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.42950770258903503
    2. 'graph' (adapté à ' graph') → logprob: -1.0545077323913574
    3. '	graph' → logprob: -7.429507732391357
    4. '   ' → logprob: -9.6795072555542
    5. '(graph' → logprob: -9.8045072555542
    6. ' ' → logprob: -10.5545072555542
    7. '           ' → logprob: -10.6795072555542
    8. '       ' → logprob: -11.3045072555542
    9. 'Graph' → logprob: -11.5545072555542
    10. '<|end|>' → logprob: -12.5545072555542

Token 136: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.06621037423610687
    2. '[' → logprob: -3.4412102699279785
    3. '[X' → logprob: -3.4412102699279785
    4. '[y' → logprob: -13.066210746765137
    5. '[A' → logprob: -13.316210746765137
    6. 'Y' → logprob: -13.316210746765137
    7. '```' → logprob: -13.316210746765137
    8. '[T' → logprob: -14.066210746765137
    9. '[N' → logprob: -14.191210746765137
    10. ')[' → logprob: -14.191210746765137

Token 137: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3161618113517761
    2. '.append' → logprob: -1.316161870956421
    3. '].' → logprob: -6.316161632537842
    4. '.' → logprob: -6.941161632537842
    5. '.app' → logprob: -10.316162109375
    6. ',' → logprob: -10.691162109375
    7. ' .' → logprob: -11.316162109375
    8. ')' → logprob: -11.316162109375
    9. '}.' → logprob: -11.566162109375
    10. '           ' → logprob: -11.691162109375

Token 138: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.625
    3. ' append' → logprob: -15.875
    4. 'appen' → logprob: -16.0
    5. '	append' → logprob: -17.25
    6. 'app' → logprob: -19.375
    7. 'add' → logprob: -19.75
    8. 'Append' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. '_append' → logprob: -20.5

Token 139: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1273801326751709
    2. '(X' → logprob: -2.252380132675171
    3. '(Y' → logprob: -5.00238037109375
    4. ' (' → logprob: -5.12738037109375
    5. '(' → logprob: -6.37738037109375
    6. '<|end|>' → logprob: -10.62738037109375
    7. ',' → logprob: -10.87738037109375
    8. '(View' → logprob: -11.12738037109375
    9. ' ((' → logprob: -11.25238037109375
    10. '(
' → logprob: -11.62738037109375

Token 140: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0893147811293602
    2. '(X' → logprob: -2.4643146991729736
    3. ' (' → logprob: -8.714314460754395
    4. ' X' → logprob: -8.839314460754395
    5. ',X' → logprob: -10.589314460754395
    6. '(' → logprob: -10.964314460754395
    7. ',' → logprob: -11.339314460754395
    8. ')' → logprob: -12.089314460754395
    9. ')(' → logprob: -13.839314460754395
    10. '[X' → logprob: -13.964314460754395

Token 141: ',T' (ID: 44428)
  Prédit: ',T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',T' → logprob: -0.02063671499490738
    2. ',' → logprob: -3.895636796951294
    3. ' ,' → logprob: -9.395636558532715
    4. ',(' → logprob: -12.645636558532715
    5. ',Y' → logprob: -13.645636558532715
    6. ',int' → logprob: -13.895636558532715
    7. ',
' → logprob: -14.270636558532715
    8. ',K' → logprob: -14.270636558532715
    9. '),(' → logprob: -14.395636558532715
    10. ',t' → logprob: -14.395636558532715

Token 142: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012248923303559422
    2. ')' → logprob: -9.3751220703125
    3. '))
' → logprob: -10.2501220703125
    4. ' ))' → logprob: -13.6251220703125
    5. ')))' → logprob: -14.6251220703125
    6. '       ' → logprob: -16.0001220703125
    7. '));' → logprob: -16.2501220703125
    8. '))

' → logprob: -16.2501220703125
    9. '<|end|>' → logprob: -16.2501220703125
    10. '   ' → logprob: -16.5001220703125

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32869359850883484
    2. '<|end|>' → logprob: -1.7036936283111572
    3. '   ' → logprob: -3.4536936283111572
    4. ' 
' → logprob: -4.078693389892578
    5. '
' → logprob: -4.578693389892578
    6. '        
' → logprob: -4.703693389892578
    7. '    ' → logprob: -4.953693389892578
    8. '  
' → logprob: -4.953693389892578
    9. '    
' → logprob: -5.078693389892578
    10. ' ' → logprob: -6.328693389892578

Token 144: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010986280627548695
    2. '
' → logprob: -5.510986328125
    3. ' dist' → logprob: -6.260986328125
    4. '       ' → logprob: -6.260986328125
    5. 'def' → logprob: -6.510986328125
    6. 'distance' → logprob: -6.885986328125
    7. '   ' → logprob: -8.510986328125
    8. 'heap' → logprob: -8.885986328125
    9. 'import' → logprob: -9.760986328125
    10. '        
' → logprob: -10.135986328125

Token 145: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.051352500915527344
    2. ' dist' → logprob: -3.8013525009155273
    3. 'def' → logprob: -4.051352500915527
    4. 'distance' → logprob: -6.051352500915527
    5. 'import' → logprob: -6.301352500915527
    6. 'heap' → logprob: -6.551352500915527
    7. '       ' → logprob: -6.926352500915527
    8. '#' → logprob: -7.426352500915527
    9. ' def' → logprob: -8.051352500915527
    10. 'd' → logprob: -8.176352500915527

Token 146: '[node' (ID: 67268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2244054228067398
    2. '=' → logprob: -1.9744054079055786
    3. 'ances' → logprob: -2.974405527114868
    4. '[' → logprob: -5.224405288696289
    5. 'ance' → logprob: -5.849405288696289
    6. '=[]' → logprob: -6.599405288696289
    7. '[]' → logprob: -7.849405288696289
    8. 's' → logprob: -8.349405288696289
    9. '=[' → logprob: -8.474405288696289
    10. ',' → logprob: -9.099405288696289

Token 147: '][' (ID: 2696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7313705682754517
    2. ' =' → logprob: -1.3563705682754517
    3. ')' → logprob: -1.6063705682754517
    4. ']' → logprob: -3.731370449066162
    5. '=' → logprob: -3.856370449066162
    6. ',' → logprob: -4.481370449066162
    7. ']=' → logprob: -6.606370449066162
    8. ')=' → logprob: -6.731370449066162
    9. '[' → logprob: -7.356370449066162
    10. '])' → logprob: -8.10637092590332

Token 148: 'remain' (ID: 186441)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6373358368873596
    2. 'mask' → logprob: -1.8873357772827148
    3. '0' → logprob: -2.387335777282715
    4. '2' → logprob: -2.762335777282715
    5. 'M' → logprob: -2.887335777282715
    6. 'used' → logprob: -3.637335777282715
    7. 'visited' → logprob: -4.012335777282715
    8. 'bit' → logprob: -4.387335777282715
    9. 'm' → logprob: -5.137335777282715
    10. 'L' → logprob: -5.137335777282715

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.250252604484558
    2. 's' → logprob: -1.250252604484558
    3. '_f' → logprob: -2.0002527236938477
    4. '_time' → logprob: -2.2502527236938477
    5. '_l' → logprob: -3.8752527236938477
    6. '_' → logprob: -3.8752527236938477
    7. ')' → logprob: -4.250252723693848
    8. ']_' → logprob: -4.250252723693848
    9. ')]' → logprob: -4.500252723693848
    10. '[' → logprob: -4.500252723693848

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16366706788539886
    2. '=' → logprob: -1.91366708278656
    3. '[' → logprob: -6.53866720199585
    4. '_' → logprob: -7.16366720199585
    5. '=[]' → logprob: -8.163666725158691
    6. ']' → logprob: -8.288666725158691
    7. 's' → logprob: -8.788666725158691
    8. ',' → logprob: -9.288666725158691
    9. '=[' → logprob: -9.413666725158691
    10. ' ' → logprob: -9.538666725158691

Token 151: ' minimum' (ID: 11085)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3345682621002197
    2. 'float' → logprob: -2.0845682621002197
    3. '[min' → logprob: -2.8345682621002197
    4. 'min' → logprob: -3.7095682621002197
    5. '[M' → logprob: -4.084568023681641
    6. 'sys' → logprob: -4.334568023681641
    7. '[N' → logprob: -4.584568023681641
    8. ' [' → logprob: -4.959568023681641
    9. 'import' → logprob: -5.709568023681641
    10. '[int' → logprob: -5.959568023681641

Token 152: ' delivery' (ID: 8676)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.8348362445831299
    2. '_' → logprob: -1.0848362445831299
    3. '_dist' → logprob: -2.45983624458313
    4. '_time' → logprob: -2.70983624458313
    5. ' =' → logprob: -3.08483624458313
    6. '_cost' → logprob: -4.459836006164551
    7. 'dist' → logprob: -5.209836006164551
    8. ' _' → logprob: -5.584836006164551
    9. 'distance' → logprob: -5.834836006164551
    10. '=' → logprob: -6.709836006164551

Token 153: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5328601598739624
    2. '_' → logprob: -0.9078601598739624
    3. '_times' → logprob: -5.157860279083252
    4. '_cost' → logprob: -6.532860279083252
    5. ' _' → logprob: -7.157860279083252
    6. ' time' → logprob: -7.532860279083252
    7. '_distance' → logprob: -7.532860279083252
    8. 'time' → logprob: -7.907860279083252
    9. '_dist' → logprob: -9.407859802246094
    10. '[' → logprob: -10.407859802246094

Token 154: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9457368850708008
    2. '[' → logprob: -1.4457368850708008
    3. ' =' → logprob: -1.9457368850708008
    4. '=' → logprob: -2.945736885070801
    5. '
' → logprob: -3.195736885070801
    6. ']' → logprob: -3.320736885070801
    7. ',' → logprob: -3.570736885070801
    8. '       ' → logprob: -4.445736885070801
    9. 'dist' → logprob: -4.445736885070801
    10. '_' → logprob: -5.070736885070801

Token 155: ' arrive' (ID: 18338)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.3333775997161865
    2. ' reach' → logprob: -1.4583775997161865
    3. 'get' → logprob: -4.083377838134766
    4. 'deliver' → logprob: -4.208377838134766
    5. '[node' → logprob: -5.083377838134766
    6. 'visit' → logprob: -5.208377838134766
    7. ' get' → logprob: -6.583377838134766
    8. '   ' → logprob: -7.208377838134766
    9. '```' → logprob: -7.333377838134766
    10. 'complete' → logprob: -7.708377838134766

Token 156: ' at' (ID: 540)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.75299471616745
    2. ' at' → logprob: -1.0029947757720947
    3. '[' → logprob: -2.3779947757720947
    4. '   ' → logprob: -4.377994537353516
    5. '=' → logprob: -4.502994537353516
    6. ' =' → logprob: -4.627994537353516
    7. ',' → logprob: -4.752994537353516
    8. ' _' → logprob: -4.877994537353516
    9. ']' → logprob: -5.252994537353516
    10. ')' → logprob: -5.752994537353516

Token 157: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2665517032146454
    2. ' node' → logprob: -1.8915517330169678
    3. '[node' → logprob: -2.5165517330169678
    4. '(node' → logprob: -6.391551494598389
    5. 'the' → logprob: -8.516551971435547
    6. ',node' → logprob: -8.766551971435547
    7. '=node' → logprob: -9.641551971435547
    8. ' the' → logprob: -9.766551971435547
    9. ']' → logprob: -10.266551971435547
    10. ')' → logprob: -10.766551971435547

Token 158: ' with' (ID: 483)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1962472200393677
    2. ' =' → logprob: -1.3212472200393677
    3. '[' → logprob: -2.446247100830078
    4. ',' → logprob: -2.571247100830078
    5. '=' → logprob: -2.696247100830078
    6. 'dist' → logprob: -3.321247100830078
    7. '       ' → logprob: -3.571247100830078
    8. '_dist' → logprob: -3.571247100830078
    9. '_' → logprob: -4.071247100830078
    10. '][' → logprob: -4.571247100830078

Token 159: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.14453758299350739
    2. ' remain' → logprob: -2.2695376873016357
    3. 'remaining' → logprob: -3.7695376873016357
    4. ' remaining' → logprob: -5.269537448883057
    5. ' L' → logprob: -7.394537448883057
    6. 'rem' → logprob: -7.519537448883057
    7. 'f' → logprob: -8.019537925720215
    8. ' K' → logprob: -8.144537925720215
    9. ' f' → logprob: -8.394537925720215
    10. ' M' → logprob: -8.644537925720215

Token 160: ' mins' (ID: 32563)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3012222051620483
    2. '_time' → logprob: -1.8012222051620483
    3. 's' → logprob: -2.426222324371338
    4. '_times' → logprob: -2.426222324371338
    5. ' =' → logprob: -2.926222324371338
    6. '_f' → logprob: -3.051222324371338
    7. '[' → logprob: -3.176222324371338
    8. '_s' → logprob: -3.676222324371338
    9. ']' → logprob: -3.926222324371338
    10. ' _' → logprob: -4.176222324371338

Token 161: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.390273094177246
    2. '_dist' → logprob: -1.515273094177246
    3. 'dist' → logprob: -1.640273094177246
    4. ']' → logprob: -2.140273094177246
    5. 's' → logprob: -2.765273094177246
    6. '[' → logprob: -3.015273094177246
    7. '[]' → logprob: -3.515273094177246
    8. '=' → logprob: -4.390273094177246
    9. ' _' → logprob: -4.390273094177246
    10. ' =' → logprob: -5.140273094177246

Token 162: ' freshness' (ID: 123416)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -1.1751830577850342
    2. 'battery' → logprob: -1.3001830577850342
    3. 'fuel' → logprob: -2.050183057785034
    4. 'L' → logprob: -2.925183057785034
    5. 'charge' → logprob: -2.925183057785034
    6. 'M' → logprob: -3.175183057785034
    7. 'f' → logprob: -3.675183057785034
    8. 'rest' → logprob: -4.050183296203613
    9. 'K' → logprob: -4.300183296203613
    10. 'fast' → logprob: -4.550183296203613

Token 163: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5353526473045349
    2. '
' → logprob: -2.4103527069091797
    3. 'dist' → logprob: -2.4103527069091797
    4. '_dist' → logprob: -2.7853527069091797
    5. '_' → logprob: -3.0353527069091797
    6. '[
' → logprob: -3.6603527069091797
    7. ',' → logprob: -3.6603527069091797
    8. '=' → logprob: -4.91035270690918
    9. ']' → logprob: -4.91035270690918
    10. '\[' → logprob: -5.28535270690918

Token 164: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3020493984222412
    2. '   ' → logprob: -1.5520493984222412
    3. 'dist' → logprob: -1.8020493984222412
    4. '       ' → logprob: -2.302049398422241
    5. '[' → logprob: -2.552049398422241
    6. '\n' → logprob: -2.552049398422241
    7. '[
' → logprob: -4.05204963684082
    8. ')' → logprob: -4.80204963684082
    9. ']' → logprob: -4.80204963684082
    10. '```' → logprob: -4.92704963684082

Token 165: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.20228378474712372
    2. ' dist' → logprob: -1.7022837400436401
    3. '	dist' → logprob: -7.45228385925293
    4. '   ' → logprob: -9.20228385925293
    5. 'd' → logprob: -9.70228385925293
    6. '_dist' → logprob: -9.82728385925293
    7. '
' → logprob: -10.70228385925293
    8. '       ' → logprob: -11.95228385925293
    9. '-dist' → logprob: -12.07728385925293
    10. 'distance' → logprob: -12.20228385925293

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42896780371665955
    2. '=' → logprob: -1.053967833518982
    3. '=[' → logprob: -8.678967475891113
    4. '=[[' → logprob: -10.053967475891113
    5. '[' → logprob: -10.178967475891113
    6. ']' → logprob: -12.303967475891113
    7. ' =[' → logprob: -12.803967475891113
    8. ')' → logprob: -12.803967475891113
    9. '=[]' → logprob: -13.178967475891113
    10. ',' → logprob: -14.053967475891113

Token 167: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.007150683552026749
    2. ' [[' → logprob: -5.007150650024414
    3. '[' → logprob: -7.757150650024414
    4. ' [' → logprob: -11.882150650024414
    5. '[{' → logprob: -14.757150650024414
    6. '[['' → logprob: -16.632150650024414
    7. '[(' → logprob: -17.507150650024414
    8. '   ' → logprob: -17.507150650024414
    9. ' [[[' → logprob: -18.132150650024414
    10. '[-' → logprob: -18.132150650024414

Token 168: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0023280750028789043
    2. '10' → logprob: -6.127327919006348
    3. 'sys' → logprob: -9.752327919006348
    4. 'int' → logprob: -10.127327919006348
    5. '-' → logprob: -10.252327919006348
    6. ' float' → logprob: -12.877327919006348
    7. '100' → logprob: -13.377327919006348
    8. '101' → logprob: -13.752327919006348
    9. '1' → logprob: -13.752327919006348
    10. '(float' → logprob: -13.877327919006348

Token 169: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000981839606538415
    2. ''in' → logprob: -7.00098180770874
    3. 'inf' → logprob: -10.000982284545898
    4. '("' → logprob: -11.500982284545898
    5. ''' → logprob: -11.750982284545898
    6. ''s' → logprob: -13.625982284545898
    7. '   ' → logprob: -13.625982284545898
    8. '(' → logprob: -13.750982284545898
    9. '(in' → logprob: -13.750982284545898
    10. '_inf' → logprob: -14.500982284545898

Token 170: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0280383548888494e-06
    2. ''' → logprob: -14.250000953674316
    3. ''in' → logprob: -15.500000953674316
    4. '-inf' → logprob: -16.375001907348633
    5. ' inf' → logprob: -18.125001907348633
    6. ''s' → logprob: -18.625001907348633
    7. '_inf' → logprob: -19.000001907348633
    8. 'in' → logprob: -19.250001907348633
    9. '.inf' → logprob: -19.375001907348633
    10. '('' → logprob: -20.000001907348633

Token 171: '')' (ID: 1542)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1948113888502121
    2. ')' → logprob: -2.0698113441467285
    3. '')]' → logprob: -3.0698113441467285
    4. ' )' → logprob: -6.5698113441467285
    5. '')' → logprob: -6.9448113441467285
    6. '),' → logprob: -6.9448113441467285
    7. ']' → logprob: -7.5698113441467285
    8. ',' → logprob: -8.569811820983887
    9. '']' → logprob: -9.819811820983887
    10. '('' → logprob: -10.319811820983887

Token 172: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2397780418395996
    2. 'for' → logprob: -1.6147780418395996
    3. ']' → logprob: -4.4897780418396
    4. ']*(' → logprob: -6.3647780418396
    5. ']*' → logprob: -7.1147780418396
    6. ')' → logprob: -8.114778518676758
    7. ',' → logprob: -9.239778518676758
    8. '	for' → logprob: -10.989778518676758
    9. '[' → logprob: -10.989778518676758
    10. '(' → logprob: -11.114778518676758

Token 173: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1737099438905716
    2. 'L' → logprob: -1.9237099885940552
    3. '101' → logprob: -4.423709869384766
    4. 'f' → logprob: -7.423709869384766
    5. '21' → logprob: -9.673709869384766
    6. '(M' → logprob: -9.673709869384766
    7. '301' → logprob: -9.798709869384766
    8. '51' → logprob: -9.923709869384766
    9. '11' → logprob: -9.923709869384766
    10. '2' → logprob: -10.048709869384766

Token 174: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178901970386505
    2. ' +' → logprob: -5.75317907333374
    3. '+
' → logprob: -15.003178596496582
    4. ')' → logprob: -15.128178596496582
    5. '1' → logprob: -15.628178596496582
    6. ')+' → logprob: -16.6281795501709
    7. '+B' → logprob: -16.6281795501709
    8. '+)' → logprob: -16.8781795501709
    9. '```' → logprob: -16.8781795501709
    10. '＋' → logprob: -17.0031795501709

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015681622608099133
    2. '+' → logprob: -9.50015640258789
    3. ' ' → logprob: -9.75015640258789
    4. '2' → logprob: -11.37515640258789
    5. '101' → logprob: -13.12515640258789
    6. ' +' → logprob: -13.87515640258789
    7. ')' → logprob: -13.87515640258789
    8. '6' → logprob: -14.00015640258789
    9. '(M' → logprob: -14.25015640258789
    10. '(' → logprob: -14.25015640258789

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033415461075492203
    2. ')]' → logprob: -8.250333786010742
    3. ' )' → logprob: -9.625333786010742
    4. '   ' → logprob: -13.500333786010742
    5. ')
' → logprob: -13.500333786010742
    6. '       ' → logprob: -13.750333786010742
    7. ']' → logprob: -14.000333786010742
    8. '+' → logprob: -14.875333786010742
    9. 'for' → logprob: -15.000333786010742
    10. ' for' → logprob: -15.000333786010742

Token 177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.049190279096364975
    2. 'for' → logprob: -3.0491902828216553
    3. ']' → logprob: -7.799190044403076
    4. ')' → logprob: -8.674190521240234
    5. '   ' → logprob: -12.299190521240234
    6. '       ' → logprob: -12.299190521240234
    7. ' ]' → logprob: -12.299190521240234
    8. ' ' → logprob: -13.049190521240234
    9. ')]' → logprob: -13.174190521240234
    10. '	for' → logprob: -13.549190521240234

Token 178: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05760001763701439
    2. '_' → logprob: -2.9326000213623047
    3. ' range' → logprob: -6.057600021362305
    4. ' in' → logprob: -8.557600021362305
    5. '_node' → logprob: -9.807600021362305
    6. 'range' → logprob: -10.057600021362305
    7. '_range' → logprob: -10.557600021362305
    8. ' node' → logprob: -10.682600021362305
    9. ' i' → logprob: -10.932600021362305
    10. '(range' → logprob: -12.557600021362305

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015065997838974
    2. 'in' → logprob: -1.7015066146850586
    3. 'range' → logprob: -9.951506614685059
    4. '_' → logprob: -10.201506614685059
    5. ' ' → logprob: -12.701506614685059
    6. ' _' → logprob: -12.826506614685059
    7. ' range' → logprob: -13.701506614685059
    8. 'i' → logprob: -13.826506614685059
    9. 'node' → logprob: -16.201505661010742
    10. ' i' → logprob: -16.576505661010742

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196925416588783
    2. ' range' → logprob: -2.81196928024292
    3. '(range' → logprob: -13.436968803405762
    4. '	range' → logprob: -17.061969757080078
    5. ' xrange' → logprob: -18.811969757080078
    6. '[' → logprob: -19.061969757080078
    7. 'in' → logprob: -19.311969757080078
    8. ')' → logprob: -19.311969757080078
    9. ' in' → logprob: -19.311969757080078
    10. '```' → logprob: -19.311969757080078

Token 181: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024843348655849695
    2. 'N' → logprob: -6.002484321594238
    3. '(' → logprob: -12.252484321594238
    4. ' (' → logprob: -13.377484321594238
    5. ' N' → logprob: -13.877484321594238
    6. '(n' → logprob: -15.127484321594238
    7. ')' → logprob: -15.502484321594238
    8. '	N' → logprob: -15.502484321594238
    9. 'range' → logprob: -15.877484321594238
    10. '   ' → logprob: -15.877484321594238

Token 182: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.723352049040841e-06
    2. ')])' → logprob: -13.375004768371582
    3. ')' → logprob: -13.500004768371582
    4. ' )' → logprob: -14.875004768371582
    5. ')][' → logprob: -15.250004768371582
    6. ']' → logprob: -15.250004768371582
    7. '])]' → logprob: -15.375004768371582
    8. ')],' → logprob: -15.625004768371582
    9. '       ' → logprob: -15.750004768371582
    10. '))' → logprob: -15.875004768371582

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.777043879032135
    2. 'dist' → logprob: -1.0270438194274902
    3. ' dist' → logprob: -2.0270438194274902
    4. '
' → logprob: -3.7770438194274902
    5. '	dist' → logprob: -4.40204381942749
    6. '        
' → logprob: -5.52704381942749
    7. '```' → logprob: -5.65204381942749
    8. '   ' → logprob: -6.02704381942749
    9. '<|end|>' → logprob: -6.27704381942749
    10. '(dist' → logprob: -7.02704381942749

Token 184: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0014439263613894582
    2. 'import' → logprob: -6.626443862915039
    3. ' dist' → logprob: -9.751443862915039
    4. 'from' → logprob: -10.751443862915039
    5. '       ' → logprob: -11.501443862915039
    6. '	dist' → logprob: -11.751443862915039
    7. '   ' → logprob: -11.876443862915039
    8. 'for' → logprob: -12.626443862915039
    9. 'queue' → logprob: -12.626443862915039
    10. 'dq' → logprob: -13.126443862915039

Token 185: '[A' (ID: 58391)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013163764029741287
    2. '[A' → logprob: -4.3881635665893555
    3. '[f' → logprob: -7.6381635665893555
    4. '[S' → logprob: -9.388163566589355
    5. '[s' → logprob: -9.888163566589355
    6. 'f' → logprob: -11.763163566589355
    7. '[F' → logprob: -12.013163566589355
    8. '[N' → logprob: -12.263163566589355
    9. '][' → logprob: -12.263163566589355
    10. '[start' → logprob: -12.638163566589355

Token 186: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020258675795048475
    2. ')][' → logprob: -9.500202178955078
    3. ' ][' → logprob: -9.625202178955078
    4. '[M' → logprob: -11.000202178955078
    5. '[A' → logprob: -11.125202178955078
    6. '[' → logprob: -11.250202178955078
    7. ')[' → logprob: -11.625202178955078
    8. ']' → logprob: -12.250202178955078
    9. ']][' → logprob: -14.125202178955078
    10. '   ' → logprob: -14.625202178955078

Token 187: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0017985886661335826
    2. 'L' → logprob: -6.376798629760742
    3. 'f' → logprob: -10.251798629760742
    4. '0' → logprob: -10.251798629760742
    5. 'm' → logprob: -11.626798629760742
    6. ' M' → logprob: -11.876798629760742
    7. 'A' → logprob: -13.001798629760742
    8. 'H' → logprob: -13.251798629760742
    9. '```' → logprob: -13.751798629760742
    10. 'min' → logprob: -14.126798629760742

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010968804126605392
    2. ']=' → logprob: -7.001096725463867
    3. ' ]' → logprob: -8.626096725463867
    4. '-' → logprob: -13.251096725463867
    5. '=' → logprob: -13.251096725463867
    6. '[' → logprob: -13.751096725463867
    7. ']+=' → logprob: -15.251096725463867
    8. ')' → logprob: -15.376096725463867
    9. '])' → logprob: -15.501096725463867
    10. ')]' → logprob: -16.001096725463867

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132634460926056
    2. '=' → logprob: -1.3132634162902832
    3. '=M' → logprob: -14.563263893127441
    4. '[' → logprob: -15.063263893127441
    5. '=A' → logprob: -15.313263893127441
    6. ',' → logprob: -16.063262939453125
    7. ')' → logprob: -16.188262939453125
    8. '＝' → logprob: -16.438262939453125
    9. '=int' → logprob: -16.438262939453125
    10. ']' → logprob: -16.688262939453125

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '```' → logprob: -17.250001907348633
    5. '۰' → logprob: -17.875001907348633
    6. 'M' → logprob: -17.875001907348633
    7. '=' → logprob: -19.000001907348633
    8. '``' → logprob: -19.062501907348633
    9. '`' → logprob: -19.125001907348633
    10. '00' → logprob: -19.375001907348633

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'M' → logprob: -15.125001907348633
    4. '```' → logprob: -16.312501907348633
    5. '۰' → logprob: -18.187501907348633
    6. '00' → logprob: -18.187501907348633
    7. '`' → logprob: -18.437501907348633
    8. '   ' → logprob: -18.562501907348633
    9. '``' → logprob: -18.687501907348633
    10. 'T' → logprob: -18.875001907348633

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.329741895198822
    2. '   ' → logprob: -1.3297419548034668
    3. '       ' → logprob: -5.329741954803467
    4. '    
' → logprob: -5.579741954803467
    5. '
' → logprob: -6.204741954803467
    6. 'import' → logprob: -6.704741954803467
    7. '<|end|>' → logprob: -6.704741954803467
    8. ' for' → logprob: -6.954741954803467
    9. '	queue' → logprob: -8.204741477966309
    10. '  
' → logprob: -8.204741477966309

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14926353096961975
    2. '   ' → logprob: -2.149263620376587
    3. ' for' → logprob: -4.399263381958008
    4. 'import' → logprob: -6.149263381958008
    5. 'for' → logprob: -6.274263381958008
    6. '
' → logprob: -6.899263381958008
    7. 'heap' → logprob: -7.024263381958008
    8. '	for' → logprob: -7.149263381958008
    9. ' heap' → logprob: -7.274263381958008
    10. '        
' → logprob: -7.649263381958008

Token 194: ' pq' (ID: 65424)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8160222768783569
    2. 'heap' → logprob: -0.8160222768783569
    3. 'hq' → logprob: -2.8160223960876465
    4. 'pq' (adapté à ' pq') → logprob: -3.0660223960876465
    5. 'queue' → logprob: -4.8160223960876465
    6. 'q' → logprob: -7.5660223960876465
    7. '   ' → logprob: -7.9410223960876465
    8. '       ' → logprob: -8.816021919250488
    9. 'from' → logprob: -11.191021919250488
    10. 'h' → logprob: -11.191021919250488

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023335738107562065
    2. '=' → logprob: -3.7733356952667236
    3. '=[]' → logprob: -9.523335456848145
    4. 'import' → logprob: -11.398335456848145
    5. 'heap' → logprob: -14.148335456848145
    6. ' ' → logprob: -14.273335456848145
    7. '.heap' → logprob: -14.398335456848145
    8. '.' → logprob: -14.523335456848145
    9. '<|end|>' → logprob: -14.898335456848145
    10. '(heap' → logprob: -15.148335456848145

Token 196: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.000352266215486452
    2. ' [(' → logprob: -8.000351905822754
    3. '[]' → logprob: -11.000351905822754
    4. '[]
' → logprob: -15.750351905822754
    5. '[((' → logprob: -17.50035285949707
    6. '[' → logprob: -18.50035285949707
    7. ' []' → logprob: -19.37535285949707
    8. '([(' → logprob: -20.00035285949707
    9. '[]

' → logprob: -20.87535285949707
    10. '[],' → logprob: -21.87535285949707

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -10.875020027160645
    3. ' ' → logprob: -14.375020027160645
    4. '   ' → logprob: -16.750019073486328
    5. 'dist' → logprob: -17.375019073486328
    6. ')' → logprob: -17.625019073486328
    7. ' (' → logprob: -17.750019073486328
    8. '(dist' → logprob: -18.000019073486328
    9. '```' → logprob: -18.500019073486328
    10. '۰' → logprob: -19.937519073486328

Token 198: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1054253011243418e-05
    2. ' ,' → logprob: -10.875020980834961
    3. ',A' → logprob: -14.750020980834961
    4. ')' → logprob: -15.000020980834961
    5. ',M' → logprob: -15.125020980834961
    6. ',
' → logprob: -15.375020980834961
    7. '```' → logprob: -15.750020980834961
    8. ',)' → logprob: -16.12502098083496
    9. ',int' → logprob: -16.75002098083496
    10. ',K' → logprob: -17.00002098083496

Token 199: ',M' (ID: 54127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4748077690601349
    2. ',M' → logprob: -0.9748077392578125
    3. ' ,' → logprob: -7.2248077392578125
    4. ',m' → logprob: -14.349807739257812
    5. ' M' → logprob: -15.099807739257812
    6. '   ' → logprob: -15.349807739257812
    7. ',
' → logprob: -15.599807739257812
    8. 'M' → logprob: -15.849807739257812
    9. ' ' → logprob: -16.099807739257812
    10. '，' → logprob: -16.099807739257812

Token 200: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.723973582556937e-05
    2. ')' → logprob: -11.250017166137695
    3. ')]
' → logprob: -13.125017166137695
    4. ' )' → logprob: -14.125017166137695
    5. '))' → logprob: -14.875017166137695
    6. ']' → logprob: -15.250017166137695
    7. ')]

' → logprob: -15.250017166137695
    8. ',' → logprob: -16.000017166137695
    9. '),' → logprob: -16.375017166137695
    10. ')])' → logprob: -16.500017166137695

Token 201: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5256303548812866
    2. '       ' → logprob: -1.6506303548812866
    3. '   ' → logprob: -2.025630474090576
    4. 'while' → logprob: -3.775630474090576
    5. ' while' → logprob: -3.900630474090576
    6. '<|end|>' → logprob: -4.150630474090576
    7. ',' → logprob: -4.650630474090576
    8. ' )' → logprob: -5.775630474090576
    9. ' ' → logprob: -6.025630474090576
    10. '```' → logprob: -6.650630474090576

Token 202: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1215280145406723
    2. ' while' → logprob: -2.246527910232544
    3. ')' → logprob: -5.371528148651123
    4. '       ' → logprob: -6.246528148651123
    5. '   ' → logprob: -6.621528148651123
    6. '```' → logprob: -8.496527671813965
    7. '	while' → logprob: -8.871527671813965
    8. ']' → logprob: -9.371527671813965
    9. 'heap' → logprob: -9.746527671813965
    10. ',' → logprob: -9.871527671813965

Token 203: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.014171971939504147
    2. ' pq' → logprob: -4.264172077178955
    3. 'p' → logprob: -11.889171600341797
    4. 'len' → logprob: -14.764171600341797
    5. '[p' → logprob: -15.264171600341797
    6. 'q' → logprob: -15.264171600341797
    7. 'PQ' → logprob: -15.514171600341797
    8. '(p' → logprob: -15.764171600341797
    9. '   ' → logprob: -15.889171600341797
    10. '```' → logprob: -16.014171600341797

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6350252032279968
    2. ':
' → logprob: -0.7600252032279968
    3. '):
' → logprob: -6.6350250244140625
    4. '[' → logprob: -7.6350250244140625
    5. ' and' → logprob: -8.885025024414062
    6. '):' → logprob: -9.010025024414062
    7. '.pop' → logprob: -9.260025024414062
    8. ',' → logprob: -9.635025024414062
    9. 'and' → logprob: -9.885025024414062
    10. ']:
' → logprob: -10.885025024414062

Token 205: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6163305640220642
    2. '           ' → logprob: -0.8663305640220642
    3. '       ' → logprob: -3.616330623626709
    4. ' ,' → logprob: -5.366330623626709
    5. '	       ' → logprob: -5.991330623626709
    6. '```' → logprob: -7.116330623626709
    7. ',c' → logprob: -7.491330623626709
    8. ')' → logprob: -7.741330623626709
    9. ',t' → logprob: -7.741330623626709
    10. '_,' → logprob: -7.866330623626709

Token 206: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.1830911487340927
    2. 't' → logprob: -2.558091163635254
    3. 'cost' → logprob: -3.183091163635254
    4. 'cur' → logprob: -3.808091163635254
    5. 'd' → logprob: -4.308091163635254
    6. 'curr' → logprob: -5.558091163635254
    7. 'dist' → logprob: -5.683091163635254
    8. '0' → logprob: -6.808091163635254
    9. ' time' → logprob: -6.933091163635254
    10. '           ' → logprob: -7.058091163635254

Token 207: ',node' (ID: 181125)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005351595464162529
    2. ',time' → logprob: -9.000535011291504
    3. ',next' → logprob: -9.500535011291504
    4. ' ,' → logprob: -9.875535011291504
    5. ',t' → logprob: -10.000535011291504
    6. ',user' → logprob: -10.250535011291504
    7. ',u' → logprob: -10.375535011291504
    8. ',_' → logprob: -10.625535011291504
    9. ',p' → logprob: -10.875535011291504
    10. ',n' → logprob: -11.125535011291504

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.611234724521637
    2. '=' → logprob: -1.1112346649169922
    3. ',time' → logprob: -2.361234664916992
    4. ' =' → logprob: -3.611234664916992
    5. '=time' → logprob: -5.861234664916992
    6. ')=' → logprob: -7.111234664916992
    7. ')' → logprob: -7.611234664916992
    8. 'time' → logprob: -7.861234664916992
    9. ',t' → logprob: -7.861234664916992
    10. ',current' → logprob: -8.361234664916992

Token 209: 'remain' (ID: 186441)
  Prédit: 'remain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.2575589716434479
    2. 'fresh' → logprob: -1.5075589418411255
    3. 'rem' → logprob: -5.382558822631836
    4. 'f' → logprob: -7.632558822631836
    5. ' remain' → logprob: -9.132558822631836
    6. 'remaining' → logprob: -9.257558822631836
    7. 'fr' → logprob: -9.507558822631836
    8. 'refresh' → logprob: -9.882558822631836
    9. ' freshness' → logprob: -9.882558822631836
    10. 'left' → logprob: -10.632558822631836

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021109133958817
    2. ' =' → logprob: -2.3502111434936523
    3. ')=' → logprob: -13.350211143493652
    4. '=time' → logprob: -14.350211143493652
    5. ')' → logprob: -14.600211143493652
    6. '   ' → logprob: -14.850211143493652
    7. ' ' → logprob: -15.225211143493652
    8. '=q' → logprob: -15.725211143493652
    9. '=query' → logprob: -15.725211143493652
    10. '=_' → logprob: -15.975211143493652

Token 211: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0002613358374219388
    2. ' heap' → logprob: -8.250261306762695
    3. 'he' → logprob: -16.375261306762695
    4. '(heap' → logprob: -18.250261306762695
    5. '   ' → logprob: -18.625261306762695
    6. 'import' → logprob: -20.125261306762695
    7. '.heap' → logprob: -20.875261306762695
    8. '_heap' → logprob: -20.875261306762695
    9. '
' → logprob: -22.000261306762695
    10. 'hq' → logprob: -22.625261306762695

Token 212: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -16.375
    3. 'app' → logprob: -17.375
    4. '```' → logprob: -17.5
    5. '[' → logprob: -17.75
    6. 'h' → logprob: -18.375
    7. '
' → logprob: -18.75
    8. '   ' → logprob: -19.625
    9. '

' → logprob: -20.0
    10. 'ify' → logprob: -20.25

Token 213: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.153795766294934e-06
    2. '.' → logprob: -13.000005722045898
    3. '.heap' → logprob: -13.000005722045898
    4. 'he' → logprob: -14.250005722045898
    5. 'q' → logprob: -14.375005722045898
    6. ').' → logprob: -16.0000057220459
    7. ' .' → logprob: -16.6250057220459
    8. '>.' → logprob: -17.0000057220459
    9. ' he' → logprob: -17.0000057220459
    10. '.q' → logprob: -17.6250057220459

Token 214: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.061054359131958e-06
    2. 'pp' → logprob: -11.875007629394531
    3. 'ap' → logprob: -14.000007629394531
    4. '```' → logprob: -17.00000762939453
    5. 'push' → logprob: -17.37500762939453
    6. 'appen' → logprob: -17.50000762939453
    7. '[' → logprob: -17.75000762939453
    8. 'a' → logprob: -18.12500762939453
    9. 'q' → logprob: -18.37500762939453
    10. '(app' → logprob: -19.00000762939453

Token 215: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.07461278140544891
    2. 'ush' → logprob: -3.324612855911255
    3. 'p' → logprob: -4.324612617492676
    4. 'app' → logprob: -4.574612617492676
    5. 'pp' → logprob: -5.074612617492676
    6. 'q' → logprob: -5.449612617492676
    7. 'ap' → logprob: -6.449612617492676
    8. '[' → logprob: -10.449612617492676
    9. 'ort' → logprob: -11.074612617492676
    10. 'ot' → logprob: -11.074612617492676

Token 216: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001254634466022253
    2. '(' → logprob: -6.751254558563232
    3. '(q' → logprob: -9.50125503540039
    4. ' (' → logprob: -12.75125503540039
    5. '(
' → logprob: -12.75125503540039
    6. '(heap' → logprob: -13.75125503540039
    7. '(py' → logprob: -14.00125503540039
    8. '(pr' → logprob: -14.50125503540039
    9. '(queue' → logprob: -14.62625503540039
    10. '(

' → logprob: -15.50125503540039

Token 217: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. ')' → logprob: -14.12500286102295
    3. '(p' → logprob: -14.75000286102295
    4. '(q' → logprob: -15.00000286102295
    5. '(' → logprob: -15.37500286102295
    6. '
' → logprob: -15.37500286102295
    7. '	q' → logprob: -16.250001907348633
    8. 'Q' → logprob: -16.375001907348633
    9. '[' → logprob: -16.375001907348633
    10. 'r' → logprob: -16.750001907348633

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003837213444057852
    2. ')
' → logprob: -7.8753838539123535
    3. '           ' → logprob: -14.000383377075195
    4. '   ' → logprob: -14.375383377075195
    5. '):' → logprob: -14.875383377075195
    6. '       ' → logprob: -15.000383377075195
    7. ')
' → logprob: -15.000383377075195
    8. ' )' → logprob: -15.250383377075195
    9. ')]' → logprob: -15.750383377075195
    10. ']' → logprob: -16.000383377075195

Token 219: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7987550497055054
    2. '           ' → logprob: -0.9237550497055054
    3. ')' → logprob: -3.173755168914795
    4. '<|end|>' → logprob: -3.173755168914795
    5. 'if' → logprob: -3.673755168914795
    6. ':' → logprob: -4.048755168914795
    7. ' if' → logprob: -4.673755168914795
    8. '   ' → logprob: -5.548755168914795
    9. '
' → logprob: -5.673755168914795
    10. '               ' → logprob: -6.048755168914795

Token 220: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.529862105846405
    2. '           ' → logprob: -1.2798621654510498
    3. ' if' → logprob: -2.02986216545105
    4. '       ' → logprob: -6.529861927032471
    5. '
' → logprob: -8.529862403869629
    6. '            
' → logprob: -8.779862403869629
    7. ' 
' → logprob: -10.904862403869629
    8. '               ' → logprob: -11.279862403869629
    9. '```' → logprob: -11.779862403869629
    10. '   ' → logprob: -12.154862403869629

Token 221: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008923115208745003
    2. ' dist' → logprob: -5.258923053741455
    3. 'time' → logprob: -5.633923053741455
    4. ' time' → logprob: -9.508923530578613
    5. 'node' → logprob: -10.383923530578613
    6. '	dist' → logprob: -13.633923530578613
    7. ' node' → logprob: -14.133923530578613
    8. '(dist' → logprob: -14.508923530578613
    9. '_dist' → logprob: -16.008922576904297
    10. '   ' → logprob: -16.133922576904297

Token 222: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. 'node' → logprob: -17.875001907348633
    4. '][' → logprob: -18.125001907348633
    5. '[next' → logprob: -18.875001907348633
    6. ' [' → logprob: -19.000001907348633
    7. '(node' → logprob: -19.875001907348633
    8. '```' → logprob: -19.875001907348633
    9. '[user' → logprob: -20.500001907348633
    10. '[now' → logprob: -20.625001907348633

Token 223: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.21372418105602264
    2. '[node' → logprob: -1.713724136352539
    3. '[' → logprob: -4.463724136352539
    4. '[row' → logprob: -9.088724136352539
    5. '[state' → logprob: -9.213724136352539
    6. '[now' → logprob: -9.338724136352539
    7. '[next' → logprob: -9.463724136352539
    8. ' ][' → logprob: -9.963724136352539
    9. '[token' → logprob: -9.963724136352539
    10. ']' → logprob: -10.088724136352539

Token 224: 'remain' (ID: 186441)
  Prédit: 'remain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -6.2729995988775045e-06
    2. ' remain' → logprob: -12.000006675720215
    3. 'rem' → logprob: -17.3750057220459
    4. 'retain' → logprob: -20.2500057220459
    5. 'remember' → logprob: -20.7500057220459
    6. '
' → logprob: -21.0000057220459
    7. ' ' → logprob: -21.2500057220459
    8. '
' → logprob: -21.7500057220459
    9. 'Remain' → logprob: -21.8750057220459
    10. '   ' → logprob: -22.0000057220459

Token 225: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04281510040163994
    2. '!=' → logprob: -3.4178152084350586
    3. ']!=' → logprob: -5.792815208435059
    4. ']<' → logprob: -5.917815208435059
    5. ']' → logprob: -6.292815208435059
    6. ' <' → logprob: -7.167815208435059
    7. ' !=' → logprob: -8.417815208435059
    8. '<int' → logprob: -8.667815208435059
    9. '>' → logprob: -9.542815208435059
    10. '<p' → logprob: -10.417815208435059

Token 226: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00633649155497551
    2. ' <' → logprob: -5.256336688995361
    3. '!=' → logprob: -7.631336688995361
    4. '<int' → logprob: -8.131336212158203
    5. '<v' → logprob: -10.006336212158203
    6. '<ll' → logprob: -10.256336212158203
    7. ' !=' → logprob: -10.381336212158203
    8. '<n' → logprob: -10.506336212158203
    9. '<len' → logprob: -10.881336212158203
    10. '<data' → logprob: -10.881336212158203

Token 227: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00020354038861114532
    2. ' time' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.25020408630371
    4. '=time' → logprob: -18.87520408630371
    5. '	time' → logprob: -19.25020408630371
    6. '   ' → logprob: -19.25020408630371
    7. '"time' → logprob: -19.87520408630371
    8. 'ime' → logprob: -20.12520408630371
    9. '(time' → logprob: -20.37520408630371
    10. '  ' → logprob: -20.37520408630371

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08330477774143219
    2. ':
' → logprob: -2.7083048820495605
    3. 'continue' → logprob: -5.5833048820495605
    4. '           ' → logprob: -5.7083048820495605
    5. ' continue' → logprob: -5.7083048820495605
    6. '               ' → logprob: -5.9583048820495605
    7. '	continue' → logprob: -9.333304405212402
    8. '       ' → logprob: -9.583304405212402
    9. '_continue' → logprob: -10.583304405212402
    10. ' continues' → logprob: -10.708304405212402

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004864411428570747
    2. '           ' → logprob: -5.87986421585083
    3. ' continue' → logprob: -6.62986421585083
    4. 'continue' → logprob: -7.25486421585083
    5. '       ' → logprob: -11.754864692687988
    6. ':' → logprob: -12.504864692687988
    7. '	continue' → logprob: -12.504864692687988
    8. '   ' → logprob: -12.879864692687988
    9. '_continue' → logprob: -13.254864692687988
    10. ':
' → logprob: -13.254864692687988

Token 230: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1622583121061325
    2. '           ' → logprob: -2.6622583866119385
    3. ' continue' → logprob: -3.1622583866119385
    4. '               ' → logprob: -3.2872583866119385
    5. '	continue' → logprob: -8.53725814819336
    6. '_continue' → logprob: -9.78725814819336
    7. 'contin' → logprob: -10.78725814819336
    8. '		' → logprob: -12.16225814819336
    9. '```' → logprob: -12.41225814819336
    10. '   ' → logprob: -12.53725814819336

Token 231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002813194179907441
    2. '       ' → logprob: -6.127813339233398
    3. '            
' → logprob: -8.002813339233398
    4. '```' → logprob: -9.877813339233398
    5. '   ' → logprob: -10.127813339233398
    6. '          ' → logprob: -10.252813339233398
    7. ' 
' → logprob: -10.502813339233398
    8. '<|end|>' → logprob: -10.502813339233398
    9. ')' → logprob: -10.752813339233398
    10. ' if' → logprob: -11.377813339233398

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002214488573372364
    2. '       ' → logprob: -6.377214431762695
    3. '            
' → logprob: -8.627214431762695
    4. '
' → logprob: -9.252214431762695
    5. '<|end|>' → logprob: -9.502214431762695
    6. ' 
' → logprob: -10.127214431762695
    7. '          ' → logprob: -10.377214431762695
    8. '```' → logprob: -10.752214431762695
    9. '   ' → logprob: -11.252214431762695
    10. '        
' → logprob: -11.502214431762695

Token 233: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4965279698371887
    2. '           ' → logprob: -1.371527910232544
    3. '       ' → logprob: -2.371527910232544
    4. ' if' → logprob: -3.621527910232544
    5. 'for' → logprob: -4.246528148651123
    6. ' for' → logprob: -6.496528148651123
    7. '            
' → logprob: -7.121528148651123
    8. '   ' → logprob: -7.996528148651123
    9. '        
' → logprob: -8.246527671813965
    10. '
' → logprob: -9.121527671813965

Token 234: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.11286340653896332
    2. ' node' → logprob: -2.237863302230835
    3. ' f' → logprob: -10.862863540649414
    4. 'f' → logprob: -11.362863540649414
    5. '(node' → logprob: -11.862863540649414
    6. ' ' → logprob: -14.237863540649414
    7. 'n' → logprob: -14.862863540649414
    8. '   ' → logprob: -14.987863540649414
    9. '	node' → logprob: -15.237863540649414
    10. ' (' → logprob: -15.487863540649414

Token 235: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05490338057279587
    2. '==' → logprob: -2.929903268814087
    3. ']==' → logprob: -11.304903030395508
    4. ')==' → logprob: -12.054903030395508
    5. ')' → logprob: -13.429903030395508
    6. ']' → logprob: -15.054903030395508
    7. '=' → logprob: -15.054903030395508
    8. '==
' → logprob: -15.679903030395508
    9. '()==' → logprob: -15.679903030395508
    10. '<|end|>' → logprob: -16.054903030395508

Token 236: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0008022417314350605
    2. ' H' → logprob: -7.250802040100098
    3. 'f' → logprob: -9.750802040100098
    4. 'A' → logprob: -10.750802040100098
    5. 'F' → logprob: -12.125802040100098
    6. ' ' → logprob: -12.625802040100098
    7. '   ' → logprob: -12.750802040100098
    8. '  ' → logprob: -15.625802040100098
    9. ' f' → logprob: -15.625802040100098
    10. 'B' → logprob: -15.750802040100098

Token 237: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043913085013628006
    2. ':' → logprob: -3.4189131259918213
    3. 'and' → logprob: -5.293912887573242
    4. ':
' → logprob: -5.293912887573242
    5. '           ' → logprob: -9.793912887573242
    6. ':return' → logprob: -9.918912887573242
    7. '   ' → logprob: -10.418912887573242
    8. '	and' → logprob: -11.793912887573242
    9. ' :' → logprob: -11.918912887573242
    10. '       ' → logprob: -12.168912887573242

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001241421326994896
    2. '\n' → logprob: -7.751241207122803
    3. '           ' → logprob: -8.001241683959961
    4. ' return' → logprob: -8.751241683959961
    5. ':
' → logprob: -8.751241683959961
    6. ' and' → logprob: -10.001241683959961
    7. '   ' → logprob: -10.501241683959961
    8. '
' → logprob: -10.626241683959961
    9. '                   ' → logprob: -11.626241683959961
    10. '                
' → logprob: -11.876241683959961

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4322805404663086
    2. 'return' → logprob: -1.1822805404663086
    3. '               ' → logprob: -3.4322805404663086
    4. ' return' → logprob: -4.932280540466309
    5. '           ' → logprob: -5.557280540466309
    6. ' print' → logprob: -6.932280540466309
    7. 'break' → logprob: -10.432280540466309
    8. '       ' → logprob: -13.057280540466309
    9. '   ' → logprob: -13.557280540466309
    10. '```' → logprob: -13.682280540466309

Token 240: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.003210865193977952
    2. 'time' → logprob: -5.75321102142334
    3. ' time' → logprob: -10.50321102142334
    4. '(' → logprob: -12.12821102142334
    5. ' (' → logprob: -16.378210067749023
    6. '"time' → logprob: -16.753210067749023
    7. '	time' → logprob: -16.878210067749023
    8. '(
' → logprob: -16.878210067749023
    9. '(t' → logprob: -17.628210067749023
    10. ',time' → logprob: -17.628210067749023

Token 241: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03805778920650482
    2. ')' → logprob: -3.288057804107666
    3. '               ' → logprob: -11.788057327270508
    4. ')
' → logprob: -12.038057327270508
    5. '           ' → logprob: -13.663057327270508
    6. ' )
' → logprob: -14.538057327270508
    7. ')return' → logprob: -14.538057327270508
    8. ')`
' → logprob: -14.788057327270508
    9. '                   ' → logprob: -15.663057327270508
    10. ')

' → logprob: -16.538057327270508

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03824872896075249
    2. '           ' → logprob: -3.2882487773895264
    3. '            
' → logprob: -10.163249015808105
    4. '                   ' → logprob: -10.288249015808105
    5. '                
' → logprob: -10.663249015808105
    6. '       ' → logprob: -11.038249015808105
    7. ' continue' → logprob: -11.038249015808105
    8. '<|end|>' → logprob: -11.288249015808105
    9. '    
' → logprob: -11.413249015808105
    10. ')' → logprob: -11.538249015808105

Token 243: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7595741152763367
    2. 'break' (adapté à ' break') → logprob: -0.7595741152763367
    3. 'return' → logprob: -2.7595741748809814
    4. ' break' → logprob: -7.134573936462402
    5. ' return' → logprob: -8.884573936462402
    6. 'continue' → logprob: -11.259573936462402
    7. '           ' → logprob: -14.384573936462402
    8. '	break' → logprob: -14.509573936462402
    9. '```' → logprob: -16.63457489013672
    10. '			' → logprob: -16.75957489013672

Token 244: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08975576609373093
    2. '       ' → logprob: -2.4647557735443115
    3. '   ' → logprob: -8.46475601196289
    4. '​' → logprob: -9.21475601196289
    5. ' ' → logprob: -9.58975601196289
    6. '        
' → logprob: -9.83975601196289
    7. '            
' → logprob: -9.83975601196289
    8. '```' → logprob: -9.83975601196289
    9. '          ' → logprob: -10.08975601196289
    10. '		' → logprob: -10.58975601196289

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07991524040699005
    2. '       ' → logprob: -2.5799152851104736
    3. ' ' → logprob: -8.204915046691895
    4. '   ' → logprob: -8.454915046691895
    5. '        
' → logprob: -9.454915046691895
    6. '            
' → logprob: -9.454915046691895
    7. '          ' → logprob: -9.704915046691895
    8. '​' → logprob: -10.079915046691895
    9. '    ' → logprob: -10.079915046691895
    10. '        ' → logprob: -10.579915046691895

Token 246: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16849327087402344
    2. '           ' → logprob: -2.1684932708740234
    3. ' for' → logprob: -3.4184932708740234
    4. '       ' → logprob: -4.918493270874023
    5. '            
' → logprob: -7.918493270874023
    6. '   ' → logprob: -8.918493270874023
    7. '        
' → logprob: -10.418493270874023
    8. '	for' → logprob: -10.668493270874023
    9. '```' → logprob: -10.793493270874023
    10. '    
' → logprob: -11.168493270874023

Token 247: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9279629588127136
    2. ' nxt' → logprob: -0.9279629588127136
    3. 'neighbor' → logprob: -1.9279630184173584
    4. 'to' → logprob: -4.177962779998779
    5. ' next' → logprob: -4.177962779998779
    6. '(next' → logprob: -4.427962779998779
    7. 'n' → logprob: -4.802962779998779
    8. 'nei' → logprob: -6.052962779998779
    9. '(ne' → logprob: -6.177962779998779
    10. ' nei' → logprob: -6.302962779998779

Token 248: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06986584514379501
    2. ',node' → logprob: -3.1948659420013428
    3. ' ,' → logprob: -4.194865703582764
    4. ',n' → logprob: -4.694865703582764
    5. ',time' → logprob: -6.194865703582764
    6. ' in' → logprob: -9.069866180419922
    7. ',next' → logprob: -10.194866180419922
    8. '_,' → logprob: -11.069866180419922
    9. ',_' → logprob: -11.444866180419922
    10. ',user' → logprob: -11.569866180419922

Token 249: ' in' (ID: 306)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.00020139472326263785
    2. ',' → logprob: -8.750201225280762
    3. ' in' → logprob: -10.375201225280762
    4. 'me' → logprob: -12.500201225280762
    5. 'imes' → logprob: -13.500201225280762
    6. 'im' → logprob: -13.625201225280762
    7. 'ype' → logprob: -14.000201225280762
    8. ' ime' → logprob: -14.000201225280762
    9. '```' → logprob: -14.250201225280762
    10. 'iem' → logprob: -14.375201225280762

Token 250: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04874792322516441
    2. ' graph' → logprob: -3.048748016357422
    3. 'in' → logprob: -9.298748016357422
    4. ' in' → logprob: -10.173748016357422
    5. '(graph' → logprob: -10.673748016357422
    6. '	graph' → logprob: -12.673748016357422
    7. '_graph' → logprob: -13.548748016357422
    8. ',' → logprob: -13.673748016357422
    9. 'node' → logprob: -14.423748016357422
    10. ' ' → logprob: -14.548748016357422

Token 251: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.00014728360110893846
    2. ' in' → logprob: -9.125146865844727
    3. 'in' → logprob: -10.875146865844727
    4. ',node' → logprob: -12.250146865844727
    5. '(node' → logprob: -12.250146865844727
    6. 'node' → logprob: -12.375146865844727
    7. '[' → logprob: -12.625146865844727
    8. ',' → logprob: -14.375146865844727
    9. '[n' → logprob: -14.750146865844727
    10. '[in' → logprob: -15.250146865844727

Token 252: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.30359289050102234
    2. ']:
' → logprob: -1.4285929203033447
    3. ':' → logprob: -4.928592681884766
    4. '):
' → logprob: -4.928592681884766
    5. '):' → logprob: -5.053592681884766
    6. '       ' → logprob: -7.678592681884766
    7. ']:
' → logprob: -8.553592681884766
    8. ':
' → logprob: -8.678592681884766
    9. ',' → logprob: -8.928592681884766
    10. ']' → logprob: -9.178592681884766

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048290375620126724
    2. '           ' → logprob: -3.298290491104126
    3. '<|end|>' → logprob: -5.798290252685547
    4. '                
' → logprob: -6.048290252685547
    5. ' 
' → logprob: -6.548290252685547
    6. '            
' → logprob: -7.173290252685547
    7. '       ' → logprob: -7.548290252685547
    8. ',' → logprob: -8.048290252685547
    9. ' if' → logprob: -8.548290252685547
    10. ' ' → logprob: -8.673290252685547

Token 254: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31748270988464355
    2. ' if' → logprob: -1.9424827098846436
    3. 'new' → logprob: -2.6924827098846436
    4. '               ' → logprob: -3.1924827098846436
    5. ' new' → logprob: -4.692482948303223
    6. 'remain' → logprob: -5.067482948303223
    7. '                
' → logprob: -7.192482948303223
    8. 'next' → logprob: -7.317482948303223
    9. 'n' → logprob: -7.817482948303223
    10. '```' → logprob: -8.067482948303223

Token 255: ' t' (ID: 260)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.5807409286499023
    2. 't' → logprob: -1.0807409286499023
    3. ' remain' → logprob: -2.4557409286499023
    4. ' t' → logprob: -4.455740928649902
    5. 'n' → logprob: -6.705740928649902
    6. 'not' → logprob: -7.580740928649902
    7. 'rem' → logprob: -7.705740928649902
    8. 'f' → logprob: -8.205740928649902
    9. 'time' → logprob: -8.268240928649902
    10. ' nxt' → logprob: -8.580740928649902

Token 256: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5871174335479736
    2. ' <=' → logprob: -0.8371174335479736
    3. '>' → logprob: -4.9621171951293945
    4. ' >' → logprob: -5.5871171951293945
    5. '+' → logprob: -8.087117195129395
    6. '<' → logprob: -10.462117195129395
    7. '*' → logprob: -11.462117195129395
    8. ' +' → logprob: -11.962117195129395
    9. '```' → logprob: -12.462117195129395
    10. '=' → logprob: -13.212117195129395

Token 257: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.043052855879068375
    2. ' remain' → logprob: -3.168052911758423
    3. 'rem' → logprob: -10.668052673339844
    4. 'M' → logprob: -10.918052673339844
    5. '0' → logprob: -12.168052673339844
    6. ' M' → logprob: -12.793052673339844
    7. ' ' → logprob: -14.043052673339844
    8. 'r' → logprob: -14.168052673339844
    9. 't' → logprob: -14.418052673339844
    10. '
' → logprob: -14.418052673339844

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22662809491157532
    2. ' and' → logprob: -2.226628065109253
    3. ':
' → logprob: -2.601628065109253
    4. ' or' → logprob: -4.226628303527832
    5. '               ' → logprob: -5.476628303527832
    6. 'and' → logprob: -7.226628303527832
    7. '           ' → logprob: -7.726628303527832
    8. '                   ' → logprob: -8.226628303527832
    9. ':return' → logprob: -8.351628303527832
    10. '                       ' → logprob: -9.976628303527832

Token 259: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5809873938560486
    2. '                   ' → logprob: -1.0809874534606934
    3. ' continue' → logprob: -2.7059874534606934
    4. ':' → logprob: -3.9559874534606934
    5. 'continue' → logprob: -4.705987453460693
    6. '                ' → logprob: -6.330987453460693
    7. ':
' → logprob: -6.455987453460693
    8. '                       ' → logprob: -7.080987453460693
    9. '           ' → logprob: -7.205987453460693
    10. ',' → logprob: -8.580986976623535

Token 260: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10429313778877258
    2. ' continue' → logprob: -2.35429310798645
    3. '               ' → logprob: -5.729293346405029
    4. 'if' → logprob: -7.354293346405029
    5. ' if' → logprob: -9.104292869567871
    6. '           ' → logprob: -10.104292869567871
    7. '                   ' → logprob: -11.104292869567871
    8. '   ' → logprob: -11.854292869567871
    9. '```' → logprob: -13.479292869567871
    10. '       ' → logprob: -13.479292869567871

Token 261: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01612774096429348
    2. '                
' → logprob: -4.266127586364746
    3. '
' → logprob: -7.141127586364746
    4. ' 
' → logprob: -7.266127586364746
    5. '                ' → logprob: -9.391127586364746
    6. '               
' → logprob: -9.766127586364746
    7. '           ' → logprob: -9.891127586364746
    8. '```' → logprob: -10.016127586364746
    9. '  
' → logprob: -10.141127586364746
    10. '                    
' → logprob: -10.516127586364746

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01769961044192314
    2. '                
' → logprob: -4.142699718475342
    3. ' 
' → logprob: -7.267699718475342
    4. '
' → logprob: -8.142699241638184
    5. '               
' → logprob: -8.642699241638184
    6. '           ' → logprob: -9.267699241638184
    7. '                ' → logprob: -9.892699241638184
    8. ')' → logprob: -10.017699241638184
    9. '  
' → logprob: -10.267699241638184
    10. '              ' → logprob: -10.392699241638184

Token 263: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.44698765873908997
    2. 'new' (adapté à ' new') → logprob: -1.4469876289367676
    3. '               ' → logprob: -2.8219876289367676
    4. ' n' → logprob: -3.5719876289367676
    5. 'n' → logprob: -4.446987628936768
    6. ' nxt' → logprob: -4.821987628936768
    7. ' next' → logprob: -5.321987628936768
    8. 'remain' → logprob: -5.821987628936768
    9. 'next' → logprob: -5.946987628936768
    10. ' nt' → logprob: -6.071987628936768

Token 264: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.11183708906173706
    2. '_rem' → logprob: -2.361837148666382
    3. 'time' → logprob: -4.611836910247803
    4. 'remain' → logprob: -6.861836910247803
    5. '_t' → logprob: -8.236837387084961
    6. ' =' → logprob: -9.111837387084961
    7. '_' → logprob: -10.111837387084961
    8. 'rem' → logprob: -10.486837387084961
    9. '_remaining' → logprob: -10.861837387084961
    10. '=' → logprob: -10.986837387084961

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602376252412796
    2. '=' → logprob: -1.9102376699447632
    3. '=time' → logprob: -11.410237312316895
    4. ',' → logprob: -13.285237312316895
    5. '＝' → logprob: -15.535237312316895
    6. '   ' → logprob: -16.53523826599121
    7. '```' → logprob: -16.66023826599121
    8. ')' → logprob: -16.78523826599121
    9. ' =
' → logprob: -16.91023826599121
    10. '    ' → logprob: -16.91023826599121

Token 266: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.029750484973192215
    2. ' time' → logprob: -3.5297505855560303
    3. '               ' → logprob: -16.77975082397461
    4. '	time' → logprob: -18.15475082397461
    5. '                   ' → logprob: -18.65475082397461
    6. '(time' → logprob: -19.40475082397461
    7. '   ' → logprob: -19.65475082397461
    8. '=time' → logprob: -19.65475082397461
    9. '"time' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.65475082397461

Token 267: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20280735194683075
    2. ' +' → logprob: -1.7028073072433472
    3. '+t' → logprob: -6.577807426452637
    4. '+n' → logprob: -14.702807426452637
    5. '＋' → logprob: -14.827807426452637
    6. '               ' → logprob: -15.202807426452637
    7. ' ' → logprob: -15.577807426452637
    8. '           ' → logprob: -15.702807426452637
    9. '+
' → logprob: -15.827807426452637
    10. '+p' → logprob: -16.20280647277832

Token 268: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003177952254191041
    2. ' t' → logprob: -5.753178119659424
    3. '`t' → logprob: -15.628177642822266
    4. '	t' → logprob: -17.378177642822266
    5. '   ' → logprob: -18.878177642822266
    6. '+t' → logprob: -19.003177642822266
    7. ' ' → logprob: -19.503177642822266
    8. ')t' → logprob: -19.503177642822266
    9. '               ' → logprob: -20.003177642822266
    10. '
' → logprob: -20.128177642822266

Token 269: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030017051845788956
    2. '                
' → logprob: -3.905017137527466
    3. ' 
' → logprob: -5.405016899108887
    4. '
' → logprob: -6.030016899108887
    5. '                ' → logprob: -7.155016899108887
    6. ',' → logprob: -7.405016899108887
    7. '  
' → logprob: -8.405016899108887
    8. 'new' → logprob: -8.405016899108887
    9. '<|end|>' → logprob: -9.405016899108887
    10. '               
' → logprob: -9.530016899108887

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14508554339408875
    2. 'new' → logprob: -2.770085573196411
    3. '                
' → logprob: -3.020085573196411
    4. ' new' → logprob: -4.270085334777832
    5. ',new' → logprob: -5.645085334777832
    6. ',' → logprob: -6.020085334777832
    7. '[new' → logprob: -6.770085334777832
    8. ' 
' → logprob: -7.520085334777832
    9. '```' → logprob: -8.145085334777832
    10. ',
' → logprob: -8.270085334777832

Token 271: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00220461655408144
    2. ' new' → logprob: -6.627204418182373
    3. 'n' → logprob: -7.877204418182373
    4. 'remain' → logprob: -8.127204895019531
    5. 'if' → logprob: -9.377204895019531
    6. 'next' → logprob: -9.877204895019531
    7. '               ' → logprob: -10.752204895019531
    8. 'rem' → logprob: -11.377204895019531
    9. '           ' → logprob: -11.752204895019531
    10. 'remaining' → logprob: -12.252204895019531

Token 272: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.002958327531814575
    2. '_time' → logprob: -6.252958297729492
    3. 'remain' → logprob: -7.877958297729492
    4. '_' → logprob: -8.002958297729492
    5. '_remaining' → logprob: -9.877958297729492
    6. ',' → logprob: -10.127958297729492
    7. '_space' → logprob: -10.127958297729492
    8. '_token' → logprob: -10.377958297729492
    9. ',_' → logprob: -10.752958297729492
    10. ' _' → logprob: -10.752958297729492

Token 273: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -5.12127808178775e-05
    2. 'a' → logprob: -10.000051498413086
    3. '=' → logprob: -13.125051498413086
    4. ' =' → logprob: -13.375051498413086
    5. '[' → logprob: -14.250051498413086
    6. '```' → logprob: -15.125051498413086
    7. '-' → logprob: -15.500051498413086
    8. 'ains' → logprob: -15.625051498413086
    9. 'ained' → logprob: -16.125051498413086
    10. 'remain' → logprob: -16.625051498413086

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038061000406742096
    2. ' =' → logprob: -3.2880609035491943
    3. '-' → logprob: -11.163061141967773
    4. ' -' → logprob: -13.663061141967773
    5. '[' → logprob: -13.913061141967773
    6. '```' → logprob: -14.038061141967773
    7. ')' → logprob: -14.413061141967773
    8. ' ' → logprob: -15.163061141967773
    9. '               ' → logprob: -15.663061141967773
    10. '-=' → logprob: -15.788061141967773

Token 275: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.005941832438111305
    2. ' remain' → logprob: -5.130941867828369
    3. 'rem' → logprob: -11.755941390991211
    4. '   ' → logprob: -12.630941390991211
    5. ' ' → logprob: -14.880941390991211
    6. '           ' → logprob: -15.630941390991211
    7. 'remaining' → logprob: -15.755941390991211
    8. '
' → logprob: -15.880941390991211
    9. '(rem' → logprob: -16.13094139099121
    10. '       ' → logprob: -16.25594139099121

Token 276: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3133419454097748
    2. '-' → logprob: -1.3133419752120972
    3. '-t' → logprob: -9.438342094421387
    4. ' ' → logprob: -15.313342094421387
    5. '-
' → logprob: -16.06334114074707
    6. '   ' → logprob: -16.68834114074707
    7. ' -
' → logprob: -17.31334114074707
    8. '−' → logprob: -17.56334114074707
    9. '-token' → logprob: -17.68834114074707
    10. '```' → logprob: -17.81334114074707

Token 277: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010331686353310943
    2. ' t' → logprob: -6.876033306121826
    3. '`t' → logprob: -15.126032829284668
    4. '               ' → logprob: -16.626033782958984
    5. '	t' → logprob: -17.626033782958984
    6. '                   ' → logprob: -18.001033782958984
    7. ' ' → logprob: -18.376033782958984
    8. '   ' → logprob: -18.501033782958984
    9. '```' → logprob: -18.626033782958984
    10. '+t' → logprob: -18.876033782958984

Token 278: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01642153412103653
    2. '                
' → logprob: -4.516421318054199
    3. '
' → logprob: -6.266421318054199
    4. '<|end|>' → logprob: -6.516421318054199
    5. ' if' → logprob: -7.391421318054199
    6. ' 
' → logprob: -7.766421318054199
    7. '  
' → logprob: -8.3914213180542
    8. '                ' → logprob: -8.6414213180542
    9. '+' → logprob: -9.3914213180542
    10. '               
' → logprob: -9.7664213180542

Token 279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017721657641232014
    2. '                
' → logprob: -6.501772403717041
    3. ' 
' → logprob: -9.751771926879883
    4. '<|end|>' → logprob: -9.876771926879883
    5. '                ' → logprob: -10.251771926879883
    6. '              ' → logprob: -10.876771926879883
    7. '```' → logprob: -10.876771926879883
    8. '  
' → logprob: -11.126771926879883
    9. ')' → logprob: -11.626771926879883
    10. '               
' → logprob: -11.626771926879883

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003368065692484379
    2. '               ' → logprob: -6.003367900848389
    3. ' if' → logprob: -7.503367900848389
    4. 'new' → logprob: -8.503368377685547
    5. '                
' → logprob: -9.753368377685547
    6. '#' → logprob: -10.003368377685547
    7. 'for' → logprob: -11.628368377685547
    8. 'next' → logprob: -11.753368377685547
    9. 'refresh' → logprob: -12.378368377685547
    10. '```' → logprob: -12.753368377685547

Token 281: ' nxt' (ID: 160200)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3204643726348877
    2. 'dist' → logprob: -1.3204643726348877
    3. 'new' → logprob: -5.570464134216309
    4. ' new' → logprob: -5.695464134216309
    5. '	dist' → logprob: -12.820464134216309
    6. '(dist' → logprob: -13.820464134216309
    7. ' ' → logprob: -14.070464134216309
    8. '   ' → logprob: -14.195464134216309
    9. '_dist' → logprob: -15.132964134216309
    10. '```' → logprob: -15.570464134216309

Token 282: ' in' (ID: 306)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04096165671944618
    2. ']==' → logprob: -4.290961742401123
    3. ']' → logprob: -4.415961742401123
    4. '<|end|>' → logprob: -5.915961742401123
    5. ']][' → logprob: -6.165961742401123
    6. ']<' → logprob: -6.290961742401123
    7. ']!=' → logprob: -6.415961742401123
    8. '==' → logprob: -6.790961742401123
    9. ']>=' → logprob: -6.915961742401123
    10. '<|end|>' → logprob: -7.790961742401123

Token 283: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001238004770129919
    2. ' f' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.625123977661133
    4. '   ' → logprob: -15.750123977661133
    5. 'fsp' → logprob: -17.500123977661133
    6. '	f' → logprob: -17.750123977661133
    7. 's' → logprob: -18.000123977661133
    8. '  ' → logprob: -18.125123977661133
    9. ')' → logprob: -18.125123977661133
    10. '(f' → logprob: -18.250123977661133

Token 284: 'sets' (ID: 7234)
  Prédit: 'sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sets' → logprob: -1.1756367712223437e-05
    2. 'ets' → logprob: -11.375011444091797
    3. 'set' → logprob: -15.375011444091797
    4. '_sets' → logprob: -17.625011444091797
    5. ' sets' → logprob: -17.875011444091797
    6. 's' → logprob: -18.000011444091797
    7. '```' → logprob: -18.500011444091797
    8. 'ests' → logprob: -18.750011444091797
    9. 'Sets' → logprob: -19.375011444091797
    10. 'rets' → logprob: -19.375011444091797

Token 285: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08855604380369186
    2. 'and' → logprob: -3.4635560512542725
    3. ':' → logprob: -3.5885560512542725
    4. ':
' → logprob: -3.7135560512542725
    5. '<|end|>' → logprob: -7.838555812835693
    6. '-' → logprob: -8.588556289672852
    7. '           ' → logprob: -8.713556289672852
    8. '==' → logprob: -9.213556289672852
    9. '       ' → logprob: -9.588556289672852
    10. '):
' → logprob: -9.588556289672852

Token 286: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32328513264656067
    2. ' new' → logprob: -1.3232851028442383
    3. 'M' → logprob: -6.073285102844238
    4. 'remain' → logprob: -6.073285102844238
    5. ' M' → logprob: -6.448285102844238
    6. 'n' → logprob: -6.573285102844238
    7. ' remain' → logprob: -7.198285102844238
    8. ' nxt' → logprob: -8.448285102844238
    9. 'f' → logprob: -8.573285102844238
    10. 'not' → logprob: -8.573285102844238

Token 287: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.0018389179604128003
    2. '_time' → logprob: -6.376838684082031
    3. 'rem' → logprob: -9.501838684082031
    4. '_rest' → logprob: -10.751838684082031
    5. '_remaining' → logprob: -11.376838684082031
    6. '_dist' → logprob: -11.876838684082031
    7. '_' → logprob: -12.251838684082031
    8. ''_' → logprob: -12.751838684082031
    9. ' _' → logprob: -12.876838684082031
    10. '```' → logprob: -13.751838684082031

Token 288: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -1.3544423381972592e-05
    2. '>' → logprob: -12.37501335144043
    3. 'a' → logprob: -13.00001335144043
    4. '
' → logprob: -14.25001335144043
    5. '<' → logprob: -14.50001335144043
    6. '=' → logprob: -14.62501335144043
    7. '_' → logprob: -14.62501335144043
    8. '```' → logprob: -14.75001335144043
    9. '>=' → logprob: -14.87501335144043
    10. '+' → logprob: -14.87501335144043

Token 289: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6084020733833313
    2. '<' → logprob: -1.2334020137786865
    3. ' <=' → logprob: -2.1084020137786865
    4. '<=' → logprob: -3.8584020137786865
    5. ' ==' → logprob: -4.358402252197266
    6. '==' → logprob: -4.858402252197266
    7. '>' → logprob: -7.733402252197266
    8. ' >' → logprob: -7.983402252197266
    9. ' ' → logprob: -8.483402252197266
    10. '=' → logprob: -9.608402252197266

Token 290: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0009711332386359572
    2. ' M' → logprob: -7.62597131729126
    3. 'L' → logprob: -7.75097131729126
    4. '0' → logprob: -10.125970840454102
    5. '=' → logprob: -13.125970840454102
    6. 'new' → logprob: -13.250970840454102
    7. 'K' → logprob: -13.375970840454102
    8. ' ' → logprob: -13.500970840454102
    9. '=M' → logprob: -13.750970840454102
    10. '5' → logprob: -14.000970840454102

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38777297735214233
    2. ':
' → logprob: -1.137773036956787
    3. ' and' → logprob: -7.887773036956787
    4. '+' → logprob: -8.637772560119629
    5. '):
' → logprob: -9.512772560119629
    6. ' :' → logprob: -10.012772560119629
    7. ' :
' → logprob: -10.012772560119629
    8. '-' → logprob: -10.137772560119629
    9. 'and' → logprob: -10.512772560119629
    10. '<|end|>' → logprob: -11.137772560119629

Token 292: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01806834526360035
    2. ':' → logprob: -5.018068313598633
    3. '               ' → logprob: -5.518068313598633
    4. '                    
' → logprob: -6.143068313598633
    5. '                       ' → logprob: -6.768068313598633
    6. '                           ' → logprob: -6.893068313598633
    7. ':
' → logprob: -7.018068313598633
    8. ',' → logprob: -8.018068313598633
    9. '```' → logprob: -8.268068313598633
    10. '                        
' → logprob: -8.393068313598633

Token 293: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.06478792428970337
    2. 'new' → logprob: -3.3147878646850586
    3. '                   ' → logprob: -4.439787864685059
    4. '               ' → logprob: -4.689787864685059
    5. ' continue' → logprob: -5.439787864685059
    6. 'continue' → logprob: -7.439787864685059
    7. '                       ' → logprob: -8.189787864685059
    8. '```' → logprob: -9.939787864685059
    9. '                               ' → logprob: -10.689787864685059
    10. '   ' → logprob: -11.064787864685059

Token 294: ' ref' (ID: 2714)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2891601026058197
    2. ' new' → logprob: -1.414160132408142
    3. '               ' → logprob: -5.289160251617432
    4. 'continue' → logprob: -7.039160251617432
    5. '                   ' → logprob: -7.164160251617432
    6. ' continue' → logprob: -7.164160251617432
    7. '           ' → logprob: -8.164159774780273
    8. '   ' → logprob: -9.664159774780273
    9. '                       ' → logprob: -10.164159774780273
    10. 'dist' → logprob: -10.414159774780273

Token 295: 'reeze' (ID: 38584)
  Prédit: 'ill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.6365326046943665
    2. 'resh' → logprob: -0.7615326046943665
    3. 'esh' → logprob: -7.011532783508301
    4. '
' → logprob: -7.136532783508301
    5. 'rest' → logprob: -7.761532783508301
    6. 'fresh' → logprob: -7.761532783508301
    7. 'lesh' → logprob: -8.5115327835083
    8. '```' → logprob: -8.6365327835083
    9. 'res' → logprob: -8.7615327835083
    10. 'ress' → logprob: -8.7615327835083

Token 296: ' for' (ID: 395)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.24135291576385498
    2. 'new' → logprob: -1.741352915763855
    3. '                   ' → logprob: -3.4913530349731445
    4. '               ' → logprob: -6.3663530349731445
    5. '                       ' → logprob: -6.6163530349731445
    6. '_new' → logprob: -6.7413530349731445
    7. ' =' → logprob: -6.8663530349731445
    8. '                    
' → logprob: -6.9913530349731445
    9. '=' → logprob: -7.3663530349731445
    10. '                           ' → logprob: -7.7413530349731445

Token 297: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7318011522293091
    2. ' M' → logprob: -0.7318011522293091
    3. ' new' → logprob: -3.8568010330200195
    4. 'new' → logprob: -4.1068010330200195
    5. ' ' → logprob: -9.35680103302002
    6. ')' → logprob: -10.35680103302002
    7. '1' → logprob: -10.60680103302002
    8. '=' → logprob: -10.98180103302002
    9. '0' → logprob: -10.98180103302002
    10. 'm' → logprob: -10.98180103302002

Token 298: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2201910018920898
    2. ')' → logprob: -1.9701910018920898
    3. ':
' → logprob: -2.22019100189209
    4. '+' → logprob: -2.84519100189209
    5. '):
' → logprob: -2.84519100189209
    6. 'new' → logprob: -3.09519100189209
    7. '<|end|>' → logprob: -3.22019100189209
    8. ' new' → logprob: -3.34519100189209
    9. '):' → logprob: -3.34519100189209
    10. '=' → logprob: -3.47019100189209

Token 299: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06197004392743111
    2. ' new' → logprob: -2.8119699954986572
    3. '_new' → logprob: -13.436969757080078
    4. '1' → logprob: -14.686969757080078
    5. ')new' → logprob: -15.436969757080078
    6. '```' → logprob: -16.436969757080078
    7. '-new' → logprob: -17.311969757080078
    8. '	new' → logprob: -17.561969757080078
    9. '[new' → logprob: -17.686969757080078
    10. '(new' → logprob: -17.811969757080078

Token 300: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -3.0590548703912646e-05
    2. '_new' → logprob: -11.125030517578125
    3. 'new' → logprob: -11.875030517578125
    4. 'rem' → logprob: -11.875030517578125
    5. '_remaining' → logprob: -14.125030517578125
    6. 'remain' → logprob: -14.750030517578125
    7. '_re' → logprob: -15.625030517578125
    8. '_rest' → logprob: -15.750030517578125
    9. '```' → logprob: -16.375030517578125
    10. ' _' → logprob: -16.875030517578125

Token 301: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.00014358828775584698
    2. 'new' → logprob: -9.500144004821777
    3. 'a' → logprob: -10.750144004821777
    4. '
' → logprob: -12.375144004821777
    5. 'main' → logprob: -12.375144004821777
    6. 'remain' → logprob: -12.875144004821777
    7. '_rem' → logprob: -12.875144004821777
    8. '```' → logprob: -13.000144004821777
    9. ' new' → logprob: -13.125144004821777
    10. '   ' → logprob: -13.312644004821777

Token 302: ' minutes' (ID: 5438)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0418469905853271
    2. 'new' → logprob: -2.166846990585327
    3. '):' → logprob: -2.291846990585327
    4. ')' → logprob: -2.541846990585327
    5. ':
' → logprob: -2.666846990585327
    6. ':' → logprob: -3.041846990585327
    7. '+' → logprob: -3.416846990585327
    8. ')
' → logprob: -3.541846990585327
    9. '                           ' → logprob: -3.791846990585327
    10. ' new' → logprob: -3.916846990585327

Token 303: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7381855249404907
    2. '                       ' → logprob: -1.9881855249404907
    3. ' new' → logprob: -2.613185405731201
    4. ':
' → logprob: -2.613185405731201
    5. 'new' → logprob: -2.863185405731201
    6. ':' → logprob: -2.863185405731201
    7. '                           ' → logprob: -2.988185405731201
    8. '               ' → logprob: -4.238185405731201
    9. '                               ' → logprob: -4.238185405731201
    10. '                    
' → logprob: -4.488185405731201

Token 304: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1838444620370865
    2. ' new' → logprob: -3.183844566345215
    3. 'new' → logprob: -3.183844566345215
    4. '               ' → logprob: -3.433844566345215
    5. '                       ' → logprob: -3.558844566345215
    6. '                    
' → logprob: -4.683844566345215
    7. '                        
' → logprob: -5.933844566345215
    8. '                           ' → logprob: -6.058844566345215
    9. '                               ' → logprob: -6.433844566345215
    10. 'continue' → logprob: -6.808844566345215

Token 305: ' cool' (ID: 8157)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04863187298178673
    2. ' new' → logprob: -3.6736319065093994
    3. '                   ' → logprob: -4.92363166809082
    4. 'ref' → logprob: -5.29863166809082
    5. 'additional' → logprob: -6.04863166809082
    6. 'add' → logprob: -6.79863166809082
    7. 'freeze' → logprob: -6.92363166809082
    8. 'extra' → logprob: -7.17363166809082
    9. 'cost' → logprob: -7.42363166809082
    10. 'time' → logprob: -7.42363166809082

Token 306: ' =' (ID: 314)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.4459350109100342
    2. '_time' → logprob: -1.8209350109100342
    3. 'time' → logprob: -2.070935010910034
    4. '_down' → logprob: -3.070935010910034
    5. 'ing' → logprob: -4.195935249328613
    6. 'dow' → logprob: -5.195935249328613
    7. 'd' → logprob: -6.445935249328613
    8. '=' → logprob: -6.445935249328613
    9. ' =' → logprob: -7.195935249328613
    10. '               ' → logprob: -8.945935249328613

Token 307: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3492122292518616
    2. ' M' → logprob: -1.2242121696472168
    3. '(M' → logprob: -7.599212169647217
    4. ' (' → logprob: -8.474212646484375
    5. '(' → logprob: -10.599212646484375
    6. '   ' → logprob: -11.599212646484375
    7. '                   ' → logprob: -11.974212646484375
    8. 'new' → logprob: -11.974212646484375
    9. ' ' → logprob: -13.099212646484375
    10. ' new' → logprob: -13.224212646484375

Token 308: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023304060101509094
    2. '-' → logprob: -3.773303985595703
    3. '<|end|>' → logprob: -10.523303985595703
    4. '-new' → logprob: -10.648303985595703
    5. ')' → logprob: -12.648303985595703
    6. '<|end|>' → logprob: -14.023303985595703
    7. ' ' → logprob: -14.523303985595703
    8. '
' → logprob: -14.898303985595703
    9. '-n' → logprob: -15.148303985595703
    10. '	' → logprob: -15.273303985595703

Token 309: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00317783304490149
    2. ' new' → logprob: -5.753177642822266
    3. '_new' → logprob: -17.003177642822266
    4. '	new' → logprob: -19.378177642822266
    5. '```' → logprob: -20.003177642822266
    6. ')new' → logprob: -20.128177642822266
    7. 'New' → logprob: -20.628177642822266
    8. '[new' → logprob: -20.753177642822266
    9. '新' → logprob: -21.503177642822266
    10. 'newline' → logprob: -21.753177642822266

Token 310: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -5.347765181795694e-05
    2. 'rem' → logprob: -9.875053405761719
    3. 'remain' → logprob: -13.250053405761719
    4. '_' → logprob: -16.37505340576172
    5. '_remaining' → logprob: -16.62505340576172
    6. '_rest' → logprob: -16.75005340576172
    7. '_rel' → logprob: -17.37505340576172
    8. '_re' → logprob: -18.00005340576172
    9. '_ref' → logprob: -18.75005340576172
    10. '_Rem' → logprob: -19.50005340576172

Token 311: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -1.306760805164231e-05
    2. 'a' → logprob: -12.25001335144043
    3. 'main' → logprob: -12.25001335144043
    4. '[' → logprob: -14.37501335144043
    5. '
' → logprob: -15.12501335144043
    6. 'remain' → logprob: -15.12501335144043
    7. ' ain' → logprob: -15.12501335144043
    8. 'aim' → logprob: -15.87501335144043
    9. 'an' → logprob: -15.87501335144043
    10. '```' → logprob: -15.87501335144043

Token 312: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1382362842559814
    2. '
' → logprob: -1.3882362842559814
    3. ' new' → logprob: -1.7632362842559814
    4. '               ' → logprob: -2.0132362842559814
    5. '                    
' → logprob: -3.0132362842559814
    6. '                
' → logprob: -3.5132362842559814
    7. '                   ' → logprob: -4.263236045837402
    8. ' 
' → logprob: -4.638236045837402
    9. ')
' → logprob: -5.513236045837402
    10. '+' → logprob: -5.763236045837402

Token 313: '                   ' (ID: 699)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.3011913299560547
    2. 'new' → logprob: -1.3011913299560547
    3. '               ' → logprob: -1.6761913299560547
    4. '                   ' → logprob: -2.4261913299560547
    5. '                    
' → logprob: -2.8011913299560547
    6. '
' → logprob: -2.8011913299560547
    7. '                
' → logprob: -4.176191329956055
    8. ' 
' → logprob: -4.676191329956055
    9. '                        
' → logprob: -4.801191329956055
    10. '                       ' → logprob: -5.551191329956055

Token 314: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.1286512315273285
    2. ' new' → logprob: -2.1286511421203613
    3. '                   ' → logprob: -6.753651142120361
    4. '               ' → logprob: -8.12865161895752
    5. 'if' → logprob: -8.87865161895752
    6. ' if' → logprob: -9.87865161895752
    7. 'heap' → logprob: -10.50365161895752
    8. '```' → logprob: -10.87865161895752
    9. '                       ' → logprob: -11.87865161895752
    10. 'time' → logprob: -12.50365161895752

Token 315: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00011236425780225545
    2. '_rem' → logprob: -9.125112533569336
    3. 'time' → logprob: -13.500112533569336
    4. '_' → logprob: -13.500112533569336
    5. '_remaining' → logprob: -15.750112533569336
    6. 'rem' → logprob: -16.375112533569336
    7. ' _' → logprob: -16.750112533569336
    8. '_times' → logprob: -16.875112533569336
    9. '_space' → logprob: -17.000112533569336
    10. '_cost' → logprob: -17.250112533569336

Token 316: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.146051824092865
    2. '+=' → logprob: -2.0210518836975098
    3. '+' → logprob: -5.89605188369751
    4. ' +' → logprob: -8.021051406860352
    5. '=' → logprob: -8.646051406860352
    6. ' =' → logprob: -9.271051406860352
    7. ']+=' → logprob: -11.646051406860352
    8. ')' → logprob: -12.646051406860352
    9. ')+' → logprob: -12.771051406860352
    10. ',' → logprob: -13.021051406860352

Token 317: ' cool' (ID: 8157)
  Prédit: 'cool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cool' → logprob: -0.002476135268807411
    2. ' cool' → logprob: -6.002476215362549
    3. ' cooldown' → logprob: -15.87747573852539
    4. 'c' → logprob: -16.12747573852539
    5. '```' → logprob: -16.25247573852539
    6. '1' → logprob: -17.75247573852539
    7. 'co' → logprob: -17.75247573852539
    8. '.cool' → logprob: -18.25247573852539
    9. ' cooling' → logprob: -18.37747573852539
    10. ' ' → logprob: -18.75247573852539

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2195836901664734
    2. '                   ' → logprob: -2.094583749771118
    3. 'new' → logprob: -3.469583749771118
    4. ' 
' → logprob: -4.219583511352539
    5. '                    
' → logprob: -4.219583511352539
    6. ' new' → logprob: -5.344583511352539
    7. '                
' → logprob: -5.719583511352539
    8. '
' → logprob: -6.469583511352539
    9. ',' → logprob: -6.719583511352539
    10. '               ' → logprob: -6.719583511352539

Token 319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18830840289592743
    2. 'new' → logprob: -2.6883084774017334
    3. '
' → logprob: -2.9383084774017334
    4. '                    
' → logprob: -3.4383084774017334
    5. ' new' → logprob: -4.438308238983154
    6. ' 
' → logprob: -6.313308238983154
    7. '                
' → logprob: -6.438308238983154
    8. '               ' → logprob: -6.688308238983154
    9. '                        
' → logprob: -7.813308238983154
    10. '  
' → logprob: -8.313308715820312

Token 320: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.31326377391815186
    2. ' new' → logprob: -1.3132637739181519
    3. '```' → logprob: -14.188263893127441
    4. '
' → logprob: -14.438263893127441
    5. '_new' → logprob: -15.938263893127441
    6. 'New' → logprob: -16.188262939453125
    7. 'newline' → logprob: -16.188262939453125
    8. '               ' → logprob: -16.813262939453125
    9. '                   ' → logprob: -16.938262939453125
    10. ',' → logprob: -17.063262939453125

Token 321: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -5.200166469876422e-06
    2. 'remain' → logprob: -12.500004768371582
    3. 'rem' → logprob: -13.625004768371582
    4. '_rest' → logprob: -15.750004768371582
    5. '_rel' → logprob: -17.8750057220459
    6. '_remaining' → logprob: -18.0000057220459
    7. '_re' → logprob: -18.2500057220459
    8. ' remain' → logprob: -18.3750057220459
    9. '(rem' → logprob: -18.8750057220459
    10. '=' → logprob: -20.1250057220459

Token 322: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -2.2723104848410003e-05
    2. 'a' → logprob: -11.875022888183594
    3. '_' → logprob: -12.125022888183594
    4. 'main' → logprob: -12.875022888183594
    5. '__' → logprob: -14.125022888183594
    6. ' ain' → logprob: -14.125022888183594
    7. '_main' → logprob: -14.375022888183594
    8. '   ' → logprob: -14.625022888183594
    9. '_set' → logprob: -14.750022888183594
    10. '[' → logprob: -14.750022888183594

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150296062231064
    2. ' =' → logprob: -4.018150329589844
    3. '+=' → logprob: -15.143150329589844
    4. ' +=' → logprob: -16.768150329589844
    5. '＝' → logprob: -17.143150329589844
    6. '=
' → logprob: -18.268150329589844
    7. '=M' → logprob: -18.768150329589844
    8. ' ' → logprob: -19.643150329589844
    9. '=

' → logprob: -19.643150329589844
    10. ',' → logprob: -19.643150329589844

Token 324: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00033546582562848926
    2. ' M' → logprob: -8.000335693359375
    3. '0' → logprob: -20.250335693359375
    4. '```' → logprob: -20.500335693359375
    5. '   ' → logprob: -21.250335693359375
    6. '>M' → logprob: -21.500335693359375
    7. ' ' → logprob: -21.750335693359375
    8. 'm' → logprob: -21.875335693359375
    9. '                   ' → logprob: -22.000335693359375
    10. '<M' → logprob: -22.125335693359375

Token 325: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05088469013571739
    2. '                
' → logprob: -3.05088472366333
    3. '<|end|>' → logprob: -7.42588472366333
    4. '                    
' → logprob: -7.92588472366333
    5. '
' → logprob: -8.050884246826172
    6. '               
' → logprob: -8.925884246826172
    7. '				
' → logprob: -8.925884246826172
    8. '  
' → logprob: -9.050884246826172
    9. '                ' → logprob: -9.175884246826172
    10. ' 
' → logprob: -9.425884246826172

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013946282677352428
    2. '                
' → logprob: -4.513946056365967
    3. ' 
' → logprob: -6.763946056365967
    4. '                    
' → logprob: -8.013946533203125
    5. ' if' → logprob: -8.138946533203125
    6. '<|end|>' → logprob: -8.263946533203125
    7. '                   ' → logprob: -8.513946533203125
    8. '  
' → logprob: -8.763946533203125
    9. '                ' → logprob: -9.638946533203125
    10. '
' → logprob: -9.763946533203125

Token 327: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007250106893479824
    2. 'if' (adapté à ' if') → logprob: -6.0072503089904785
    3. '                
' → logprob: -6.0072503089904785
    4. ' if' → logprob: -6.5072503089904785
    5. ' 
' → logprob: -8.25724983215332
    6. '                   ' → logprob: -8.63224983215332
    7. '
' → logprob: -9.38224983215332
    8. '           ' → logprob: -9.88224983215332
    9. '                    
' → logprob: -10.25724983215332
    10. '                ' → logprob: -10.75724983215332

Token 328: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.019744504243135452
    2. 'dist' → logprob: -4.019744396209717
    3. ' new' → logprob: -6.644744396209717
    4. 'new' → logprob: -8.144744873046875
    5. '(dist' → logprob: -14.144744873046875
    6. '	dist' → logprob: -14.269744873046875
    7. '_dist' → logprob: -15.519744873046875
    8. ' ' → logprob: -15.769744873046875
    9. '   ' → logprob: -15.769744873046875
    10. 'Dist' → logprob: -15.894744873046875

Token 329: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16025184094905853
    2. '[node' → logprob: -1.9102518558502197
    3. '[next' → logprob: -10.66025161743164
    4. 'n' → logprob: -13.41025161743164
    5. '][' → logprob: -13.78525161743164
    6. '[' → logprob: -13.78525161743164
    7. ' [' → logprob: -15.53525161743164
    8. 'node' → logprob: -15.78525161743164
    9. ')[' → logprob: -15.91025161743164
    10. ')n' → logprob: -16.53525161743164

Token 330: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.002292398363351822
    2. '[n' → logprob: -7.127292633056641
    3. 'ext' → logprob: -7.627292633056641
    4. 'ode' → logprob: -8.12729263305664
    5. '[node' → logprob: -8.12729263305664
    6. 'x' → logprob: -8.50229263305664
    7. '[' → logprob: -9.25229263305664
    8. '][' → logprob: -10.00229263305664
    9. '[x' → logprob: -10.37729263305664
    10. '```' → logprob: -11.37729263305664

Token 331: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.25208890438079834
    2. '][' → logprob: -1.5020889043807983
    3. '[node' → logprob: -9.12708854675293
    4. '[' → logprob: -11.50208854675293
    5. ' ][' → logprob: -12.00208854675293
    6. ']][' → logprob: -12.12708854675293
    7. '"][' → logprob: -12.37708854675293
    8. 'n' → logprob: -12.50208854675293
    9. ')[' → logprob: -12.50208854675293
    10. '[next' → logprob: -12.50208854675293

Token 332: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.5577775128767826e-06
    2. ' new' → logprob: -12.125005722045898
    3. '
' → logprob: -18.1250057220459
    4. '[new' → logprob: -18.5000057220459
    5. '_new' → logprob: -18.8750057220459
    6. '
' → logprob: -19.2500057220459
    7. 'New' → logprob: -19.3750057220459
    8. '```' → logprob: -19.6250057220459
    9. '	new' → logprob: -19.8750057220459
    10. ')new' → logprob: -20.1250057220459

Token 333: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.0022694433573633432
    2. 'remain' → logprob: -6.252269268035889
    3. 'rem' → logprob: -8.377269744873047
    4. '_re' → logprob: -9.127269744873047
    5. ' remain' → logprob: -13.752269744873047
    6. '   ' → logprob: -15.377269744873047
    7. '_remaining' → logprob: -15.877269744873047
    8. ' ' → logprob: -16.127269744873047
    9. 'Remain' → logprob: -16.127269744873047
    10. '_' → logprob: -16.377269744873047

Token 334: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.001656613196246326
    2. '[' → logprob: -6.876656532287598
    3. '   ' → logprob: -8.626656532287598
    4. '+' → logprob: -10.001656532287598
    5. '```' → logprob: -10.001656532287598
    6. ']' → logprob: -10.126656532287598
    7. '       ' → logprob: -10.251656532287598
    8. '_' → logprob: -10.501656532287598
    9. '    ' → logprob: -10.626656532287598
    10. ' ' → logprob: -11.001656532287598

Token 335: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.989711344242096
    2. ']>' → logprob: -1.1147112846374512
    3. ']' → logprob: -1.3647112846374512
    4. ' >' → logprob: -3.114711284637451
    5. ' ]' → logprob: -8.61471176147461
    6. '[' → logprob: -8.73971176147461
    7. ')>' → logprob: -10.98971176147461
    8. '>]' → logprob: -11.11471176147461
    9. '">' → logprob: -11.23971176147461
    10. '   ' → logprob: -11.61471176147461

Token 336: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.021536068990826607
    2. ' >' → logprob: -3.896536111831665
    3. '[' → logprob: -7.396535873413086
    4. ']>' → logprob: -8.771535873413086
    5. '>[' → logprob: -9.396535873413086
    6. '[token' → logprob: -9.771535873413086
    7. ']' → logprob: -10.521535873413086
    8. '[next' → logprob: -10.896535873413086
    9. '>`' → logprob: -11.146535873413086
    10. '">' → logprob: -11.771535873413086

Token 337: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04858805239200592
    2. ' new' → logprob: -3.0485880374908447
    3. '	new' → logprob: -15.798587799072266
    4. '_new' → logprob: -16.423587799072266
    5. '               ' → logprob: -16.673587799072266
    6. '   ' → logprob: -16.673587799072266
    7. '                   ' → logprob: -16.798587799072266
    8. '```' → logprob: -16.798587799072266
    9. '[new' → logprob: -16.923587799072266
    10. 'New' → logprob: -17.048587799072266

Token 338: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00023810577113181353
    2. 'time' → logprob: -8.750238418579102
    3. '[n' → logprob: -9.750238418579102
    4. '_rem' → logprob: -12.000238418579102
    5. 'rem' → logprob: -12.375238418579102
    6. '   ' → logprob: -12.625238418579102
    7. ' time' → logprob: -12.875238418579102
    8. 'Time' → logprob: -13.875238418579102
    9. '_' → logprob: -14.000238418579102
    10. '
' → logprob: -14.625238418579102

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07403044402599335
    2. ':
' → logprob: -2.6990303993225098
    3. '):
' → logprob: -7.32403039932251
    4. '               ' → logprob: -7.44903039932251
    5. '=' → logprob: -7.57403039932251
    6. ' :' → logprob: -7.94903039932251
    7. '[' → logprob: -8.199030876159668
    8. '           ' → logprob: -8.199030876159668
    9. '<|end|>' → logprob: -8.324030876159668
    10. ' =' → logprob: -8.574030876159668

Token 340: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2407093495130539
    2. '               ' → logprob: -2.4907093048095703
    3. '                           ' → logprob: -3.1157093048095703
    4. '                       ' → logprob: -3.8657093048095703
    5. '                               ' → logprob: -4.36570930480957
    6. '<|end|>' → logprob: -4.49070930480957
    7. '[' → logprob: -4.99070930480957
    8. '                                           ' → logprob: -5.24070930480957
    9. ' 
' → logprob: -5.24070930480957
    10. '           ' → logprob: -5.61570930480957

Token 341: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5847606658935547
    2. ' dist' → logprob: -0.8347606658935547
    3. '                       ' → logprob: -4.834760665893555
    4. 'heap' → logprob: -7.834760665893555
    5. '                   ' → logprob: -8.459760665893555
    6. ' heap' → logprob: -8.834760665893555
    7. '                           ' → logprob: -10.334760665893555
    8. '                               ' → logprob: -11.334760665893555
    9. '               ' → logprob: -11.709760665893555
    10. '                    ' → logprob: -11.834760665893555

Token 342: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.625
    3. 'n' → logprob: -16.875
    4. ' [' → logprob: -17.0
    5. '[' → logprob: -17.0
    6. '[node' → logprob: -17.5
    7. '][' → logprob: -17.75
    8. '[next' → logprob: -18.125
    9. '[x' → logprob: -19.25
    10. '=n' → logprob: -19.5

Token 343: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0023572142235934734
    2. '[n' → logprob: -6.752357006072998
    3. 'x' → logprob: -7.002357006072998
    4. '][' → logprob: -8.752357482910156
    5. '[x' → logprob: -9.252357482910156
    6. '[' → logprob: -12.002357482910156
    7. '   ' → logprob: -12.127357482910156
    8. ']' → logprob: -13.252357482910156
    9. '```' → logprob: -13.252357482910156
    10. '       ' → logprob: -13.627357482910156

Token 344: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.576015293598175
    2. '[n' → logprob: -0.826015293598175
    3. '               ' → logprob: -10.95101547241211
    4. ']][' → logprob: -11.70101547241211
    5. ' ][' → logprob: -11.70101547241211
    6. '           ' → logprob: -11.82601547241211
    7. '[][' → logprob: -12.45101547241211
    8. '"][' → logprob: -12.57601547241211
    9. ',n' → logprob: -12.57601547241211
    10. '```' → logprob: -12.57601547241211

Token 345: 'new' (ID: 1389)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03805893659591675
    2. 'new' → logprob: -3.2880589962005615
    3. '[n' → logprob: -11.16305923461914
    4. '[new' → logprob: -12.91305923461914
    5. '][' → logprob: -15.66305923461914
    6. ' new' → logprob: -15.66305923461914
    7. '[' → logprob: -15.78805923461914
    8. '
' → logprob: -16.28805923461914
    9. '
' → logprob: -16.91305923461914
    10. '```' → logprob: -17.03805923461914

Token 346: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.0045394194312393665
    2. '_time' → logprob: -5.754539489746094
    3. 'rem' → logprob: -6.754539489746094
    4. 'new' → logprob: -8.879539489746094
    5. 'remain' → logprob: -10.254539489746094
    6. 'time' → logprob: -11.629539489746094
    7. 'ime' → logprob: -12.754539489746094
    8. '_re' → logprob: -13.129539489746094
    9. '_ref' → logprob: -13.254539489746094
    10. '_new' → logprob: -13.379539489746094

Token 347: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0002123614540323615
    2. '[' → logprob: -9.125212669372559
    3. '   ' → logprob: -11.250212669372559
    4. ']' → logprob: -11.750212669372559
    5. '```' → logprob: -12.125212669372559
    6. 'an' → logprob: -12.250212669372559
    7. 'main' → logprob: -12.250212669372559
    8. 'new' → logprob: -12.437712669372559
    9. 'in' → logprob: -12.500212669372559
    10. '
' → logprob: -12.562712669372559

Token 348: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19102604687213898
    2. ' =' → logprob: -1.9410260915756226
    3. ']=' → logprob: -4.191026210784912
    4. ']' → logprob: -4.191026210784912
    5. ' ]' → logprob: -10.816025733947754
    6. ')=' → logprob: -10.941025733947754
    7. ')' → logprob: -11.316025733947754
    8. '=
' → logprob: -12.316025733947754
    9. ' =
' → logprob: -12.691025733947754
    10. '[' → logprob: -13.566025733947754

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018152397125959396
    2. ' =' → logprob: -4.018152236938477
    3. ']=' → logprob: -14.143152236938477
    4. '=
' → logprob: -14.518152236938477
    5. '[' → logprob: -15.143152236938477
    6. '=n' → logprob: -15.268152236938477
    7. ']' → logprob: -15.518152236938477
    8. '=

' → logprob: -15.518152236938477
    9. '＝' → logprob: -16.018152236938477
    10. '   ' → logprob: -16.518152236938477

Token 350: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4740770161151886
    2. ' new' → logprob: -0.9740769863128662
    3. 'New' → logprob: -17.724077224731445
    4. '_new' → logprob: -18.474077224731445
    5. '[new' → logprob: -19.224077224731445
    6. '	new' → logprob: -19.349077224731445
    7. '                   ' → logprob: -20.474077224731445
    8. '新' → logprob: -20.474077224731445
    9. '$new' → logprob: -20.849077224731445
    10. '(new' → logprob: -21.849077224731445

Token 351: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -14.875
    3. ' time' → logprob: -19.5
    4. 'Time' → logprob: -20.125
    5. '_TIME' → logprob: -21.625
    6. '_code' → logprob: -21.875
    7. '_times' → logprob: -22.125
    8. '-time' → logprob: -22.25
    9. '_new' → logprob: -22.625
    10. 'ime' → logprob: -22.75

Token 352: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00032640635618008673
    2. 'heap' → logprob: -8.375326156616211
    3. ' heap' → logprob: -10.250326156616211
    4. '				' → logprob: -10.875326156616211
    5. '               ' → logprob: -10.875326156616211
    6. '           ' → logprob: -11.625326156616211
    7. '
' → logprob: -12.375326156616211
    8. '                    
' → logprob: -12.875326156616211
    9. '                       ' → logprob: -13.375326156616211
    10. '```' → logprob: -13.500326156616211

Token 353: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023661323357373476
    2. '               ' → logprob: -6.752366065979004
    3. '                    
' → logprob: -7.752366065979004
    4. '           ' → logprob: -8.252366065979004
    5. '                    ' → logprob: -9.377366065979004
    6. '				' → logprob: -9.377366065979004
    7. '                       ' → logprob: -9.627366065979004
    8. 'heap' → logprob: -9.627366065979004
    9. '```' → logprob: -9.752366065979004
    10. '                           ' → logprob: -11.002366065979004

Token 354: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.10026328265666962
    2. ' heap' → logprob: -2.3502633571624756
    3. '                   ' → logprob: -9.850263595581055
    4. '                       ' → logprob: -13.350263595581055
    5. 'he' → logprob: -14.100263595581055
    6. '.heap' → logprob: -14.600263595581055
    7. '               ' → logprob: -14.725263595581055
    8. '(heap' → logprob: -14.850263595581055
    9. '           ' → logprob: -15.475263595581055
    10. '                           ' → logprob: -16.100263595581055

Token 355: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.246537173457909e-06
    2. 'p' → logprob: -12.375003814697266
    3. 'pq' → logprob: -17.875003814697266
    4. 'push' → logprob: -18.250003814697266
    5. 'f' → logprob: -18.750003814697266
    6. '-p' → logprob: -18.875003814697266
    7. '```' → logprob: -19.375003814697266
    8. 'app' → logprob: -19.750003814697266
    9. '.q' → logprob: -19.750003814697266
    10. 'qp' → logprob: -19.875003814697266

Token 356: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.721228368813172e-05
    2. 'he' → logprob: -9.500086784362793
    3. '.heap' → logprob: -12.500086784362793
    4. ' he' → logprob: -12.875086784362793
    5. '.push' → logprob: -13.125086784362793
    6. ' .' → logprob: -14.125086784362793
    7. 'push' → logprob: -14.250086784362793
    8. 'q' → logprob: -14.375086784362793
    9. 'ush' → logprob: -14.625086784362793
    10. '.' → logprob: -14.625086784362793

Token 357: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00017278951418120414
    2. 'pp' → logprob: -8.87517261505127
    3. 'push' → logprob: -10.37517261505127
    4. 'p' → logprob: -13.87517261505127
    5. 'ap' → logprob: -15.50017261505127
    6. 'append' → logprob: -15.75017261505127
    7. 'q' → logprob: -15.87517261505127
    8. 'appen' → logprob: -15.87517261505127
    9. '```' → logprob: -16.625173568725586
    10. 'ush' → logprob: -17.750173568725586

Token 358: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.036524842376821e-05
    2. 'op' → logprob: -10.250040054321289
    3. 'push' → logprob: -12.875040054321289
    4. 'p' → logprob: -13.875040054321289
    5. 'sh' → logprob: -14.375040054321289
    6. 'pp' → logprob: -14.750040054321289
    7. 'app' → logprob: -15.000040054321289
    8. '```' → logprob: -16.75004005432129
    9. 'he' → logprob: -17.75004005432129
    10. 'USH' → logprob: -17.87504005432129

Token 359: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.511406809295295e-06
    2. 'pq' → logprob: -12.750006675720215
    3. '(' → logprob: -12.875006675720215
    4. '(q' → logprob: -15.000006675720215
    5. ' (' → logprob: -15.125006675720215
    6. 'p' → logprob: -15.625006675720215
    7. '```' → logprob: -16.8750057220459
    8. '(
' → logprob: -17.0000057220459
    9. ' pq' → logprob: -17.7500057220459
    10. '   ' → logprob: -18.0000057220459

Token 360: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2723104848410003e-05
    2. '(p' → logprob: -10.875022888183594
    3. '(q' → logprob: -12.625022888183594
    4. 'pq' → logprob: -15.500022888183594
    5. '	q' → logprob: -16.375022888183594
    6. ' q' → logprob: -17.375022888183594
    7. 'Q' → logprob: -17.375022888183594
    8. '.q' → logprob: -17.750022888183594
    9. '[q' → logprob: -17.875022888183594
    10. 'aq' → logprob: -18.125022888183594

Token 361: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0034622715320438147
    2. '(' → logprob: -6.003462314605713
    3. ' (' → logprob: -7.253462314605713
    4. ',' → logprob: -8.753461837768555
    5. ',p' → logprob: -10.628461837768555
    6. '((' → logprob: -10.628461837768555
    7. '           ' → logprob: -11.128461837768555
    8. '   ' → logprob: -11.128461837768555
    9. '               ' → logprob: -11.628461837768555
    10. '       ' → logprob: -11.753461837768555

Token 362: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.10876620560884476
    2. ' (' → logprob: -2.8587663173675537
    3. '(' → logprob: -3.1087663173675537
    4. '(time' → logprob: -6.858766078948975
    5. '   ' → logprob: -11.483766555786133
    6. '[new' → logprob: -13.983766555786133
    7. '(New' → logprob: -14.233766555786133
    8. ' ' → logprob: -14.608766555786133
    9. '  ' → logprob: -14.983766555786133
    10. '(next' → logprob: -14.983766555786133

Token 363: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -7.107425062713446e-06
    2. ' new' → logprob: -11.875006675720215
    3. '                   ' → logprob: -18.25000762939453
    4. '   ' → logprob: -18.25000762939453
    5. '	new' → logprob: -18.87500762939453
    6. ')new' → logprob: -19.37500762939453
    7. '               ' → logprob: -19.75000762939453
    8. '
' → logprob: -20.12500762939453
    9. '[new' → logprob: -20.12500762939453
    10. '_new' → logprob: -20.25000762939453

Token 364: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.6656825866666622e-05
    2. 'time' → logprob: -10.62502670288086
    3. ',n' → logprob: -14.87502670288086
    4. ',' → logprob: -15.12502670288086
    5. '(n' → logprob: -15.37502670288086
    6. 'Time' → logprob: -15.37502670288086
    7. '[n' → logprob: -15.62502670288086
    8. '_n' → logprob: -15.87502670288086
    9. '_,' → logprob: -16.12502670288086
    10. ' time' → logprob: -16.12502670288086

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133063316345215
    2. ',n' → logprob: -1.3133063316345215
    3. ' ,' → logprob: -10.31330680847168
    4. ',
' → logprob: -11.93830680847168
    5. ',node' → logprob: -12.68830680847168
    6. ',next' → logprob: -14.06330680847168
    7. ',x' → logprob: -14.68830680847168
    8. ',

' → logprob: -16.56330680847168
    9. ',new' → logprob: -17.06330680847168
    10. '`,' → logprob: -17.43830680847168

Token 366: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' nxt' → logprob: -8.750158309936523
    3. '	n' → logprob: -16.875158309936523
    4. '   ' → logprob: -17.000158309936523
    5. 'nx' → logprob: -17.375158309936523
    6. '```' → logprob: -17.875158309936523
    7. ')n' → logprob: -18.125158309936523
    8. ' ' → logprob: -18.875158309936523
    9. '[n' → logprob: -19.000158309936523
    10. ' n' → logprob: -19.375158309936523

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014198172837495804
    2. ',new' → logprob: -4.264198303222656
    3. ' ,' → logprob: -10.389198303222656
    4. ',n' → logprob: -12.514198303222656
    5. ',next' → logprob: -17.014198303222656
    6. 'new' → logprob: -17.264198303222656
    7. ' new' → logprob: -18.014198303222656
    8. ',current' → logprob: -18.014198303222656
    9. ',num' → logprob: -18.389198303222656
    10. ',
' → logprob: -18.389198303222656

Token 368: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.000553151941858232
    2. ' new' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.875553131103516
    4. '	new' → logprob: -19.250553131103516
    5. '               ' → logprob: -19.875553131103516
    6. '                   ' → logprob: -20.250553131103516
    7. '       ' → logprob: -20.750553131103516
    8. ' ' → logprob: -20.875553131103516
    9. '           ' → logprob: -20.875553131103516
    10. '_new' → logprob: -20.875553131103516

Token 369: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.0032425972167402506
    2. 'rem' → logprob: -5.753242492675781
    3. 'remain' → logprob: -9.753242492675781
    4. 'new' → logprob: -12.253242492675781
    5. '_re' → logprob: -14.378242492675781
    6. '\' → logprob: -15.503242492675781
    7. 'Rem' → logprob: -15.878242492675781
    8. 'r' → logprob: -16.12824249267578
    9. '(rem' → logprob: -16.12824249267578
    10. 'reman' → logprob: -16.25324249267578

Token 370: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -1.282920129597187e-05
    2. 'a' → logprob: -12.250012397766113
    3. '[' → logprob: -13.125012397766113
    4. '_' → logprob: -14.000012397766113
    5. '
' → logprob: -14.250012397766113
    6. ')' → logprob: -14.625012397766113
    7. 'an' → logprob: -14.750012397766113
    8. '   ' → logprob: -14.875012397766113
    9. '```' → logprob: -15.000012397766113
    10. 'new' → logprob: -15.750012397766113

Token 371: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.566264295950532e-05
    2. '))
' → logprob: -9.500085830688477
    3. ' ))' → logprob: -11.625085830688477
    4. ')' → logprob: -13.500085830688477
    5. ')))' → logprob: -14.875085830688477
    6. '))

' → logprob: -17.000085830688477
    7. ' ' → logprob: -17.000085830688477
    8. '   ' → logprob: -17.250085830688477
    9. '))
' → logprob: -17.875085830688477
    10. '       ' → logprob: -18.375085830688477

Token 372: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0889778584241867
    2. ':
' → logprob: -2.463977813720703
    3. '           ' → logprob: -10.463977813720703
    4. '       ' → logprob: -12.213977813720703
    5. '        ' → logprob: -13.963977813720703
    6. ':

' → logprob: -14.213977813720703
    7. ':
' → logprob: -14.338977813720703
    8. '   ' → logprob: -14.713977813720703
    9. ' :' → logprob: -15.213977813720703
    10. ':return' → logprob: -15.213977813720703

Token 375: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029452718794345856
    2. '       ' → logprob: -4.029452800750732
    3. '           ' → logprob: -4.529452800750732
    4. ' print' → logprob: -8.029452323913574
    5. '   ' → logprob: -9.154452323913574
    6. '```' → logprob: -11.529452323913574
    7. '	print' → logprob: -12.279452323913574
    8. '	       ' → logprob: -13.029452323913574
    9. '        
' → logprob: -13.654452323913574
    10. '               ' → logprob: -14.029452323913574

Token 376: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021760274830739945
    2. '       ' → logprob: -8.50021743774414
    3. ' print' → logprob: -11.25021743774414
    4. '   ' → logprob: -14.50021743774414
    5. '           ' → logprob: -14.62521743774414
    6. '	print' → logprob: -16.50021743774414
    7. '```' → logprob: -17.12521743774414
    8. 'printf' → logprob: -20.37521743774414
    9. 'println' → logprob: -20.37521743774414
    10. '               ' → logprob: -20.62521743774414

Token 377: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4523855149745941
    2. '("' → logprob: -1.2023855447769165
    3. '-' → logprob: -3.077385425567627
    4. '('' → logprob: -4.077385425567627
    5. '(' → logprob: -8.577385902404785
    6. '"' → logprob: -8.702385902404785
    7. '("-' → logprob: -10.702385902404785
    8. ''' → logprob: -13.577385902404785
    9. '   ' → logprob: -13.702385902404785
    10. ' ("' → logprob: -13.952385902404785

Token 378: 'Help' (ID: 14470)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.45770376920700073
    2. 'Impossible' → logprob: -1.2077038288116455
    3. 'IMP' → logprob: -3.0827038288116455
    4. 'im' → logprob: -4.332703590393066
    5. 'NA' → logprob: -6.082703590393066
    6. 'Delivery' → logprob: -6.832703590393066
    7. 'delivery' → logprob: -6.957703590393066
    8. 'None' → logprob: -7.207703590393066
    9. '"' → logprob: -7.582703590393066
    10. '0' → logprob: -7.582703590393066

Token 379: '!")

' (ID: 169327)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.28635674715042114
    2. ' me' → logprob: -2.0363566875457764
    3. 'Me' → logprob: -3.6613566875457764
    4. '!")' → logprob: -4.1613569259643555
    5. '")' → logprob: -4.2863569259643555
    6. ')' → logprob: -4.5363569259643555
    7. ' Me' → logprob: -4.9113569259643555
    8. 'me' → logprob: -5.2863569259643555
    9. '<|end|>' → logprob: -5.2863569259643555
    10. 'Sorry' → logprob: -5.4113569259643555

Token 380: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31327563524246216
    2. ' __' → logprob: -1.3132755756378174
    3. 'name' → logprob: -11.563275337219238
    4. '___' → logprob: -12.938275337219238
    5. '/__' → logprob: -14.938275337219238
    6. '____' → logprob: -15.063275337219238
    7. '_name' → logprob: -15.188275337219238
    8. '  ' → logprob: -15.688275337219238
    9. ' "__' → logprob: -15.813275337219238
    10. '_' → logprob: -15.813275337219238

Token 382: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18317413330078125
    2. ' __' → logprob: -1.9331741333007812
    3. 'name' → logprob: -4.308174133300781
    4. ' ==' → logprob: -4.808174133300781
    5. '==' → logprob: -7.058174133300781
    6. '```' → logprob: -9.683174133300781
    7. '.__' → logprob: -10.558174133300781
    8. '_name' → logprob: -11.183174133300781
    9. 'main' → logprob: -11.433174133300781
    10. '﻿' → logprob: -11.558174133300781

Token 383: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018077615823131055
    2. '__.__' → logprob: -9.000181198120117
    3. '==' → logprob: -10.375181198120117
    4. '__.' → logprob: -11.125181198120117
    5. '=="' → logprob: -12.500181198120117
    6. '__('' → logprob: -13.500181198120117
    7. '```' → logprob: -13.500181198120117
    8. ' ==' → logprob: -13.625181198120117
    9. '__["' → logprob: -13.875181198120117
    10. '___' → logprob: -14.625181198120117

Token 384: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7253875732421875
    2. '==' → logprob: -1.1003875732421875
    3. '=="' → logprob: -1.8503875732421875
    4. '__' → logprob: -4.3503875732421875
    5. '=='' → logprob: -4.3503875732421875
    6. ' =="' → logprob: -9.975387573242188
    7. '()==' → logprob: -11.350387573242188
    8. '==="' → logprob: -11.350387573242188
    9. ' =='' → logprob: -11.475387573242188
    10. '==
' → logprob: -11.475387573242188

Token 385: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003183420980349183
    2. ''' → logprob: -5.753183364868164
    3. '__' → logprob: -12.253183364868164
    4. ' "__' → logprob: -14.128183364868164
    5. '"'' → logprob: -17.253183364868164
    6. ''"' → logprob: -17.503183364868164
    7. '"class' → logprob: -17.878183364868164
    8. '"user' → logprob: -17.878183364868164
    9. '"name' → logprob: -18.003183364868164
    10. ''s' → logprob: -18.753183364868164

Token 386: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5614251494407654
    2. '__' → logprob: -1.0614252090454102
    3. '"' → logprob: -2.56142520904541
    4. ''' → logprob: -5.06142520904541
    5. 'name' → logprob: -9.31142520904541
    6. '__":
' → logprob: -12.18642520904541
    7. '_main' → logprob: -12.68642520904541
    8. '"name' → logprob: -12.93642520904541
    9. 'import' → logprob: -13.18642520904541
    10. ''m' → logprob: -13.68642520904541

Token 387: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.003476531943306327
    2. '__' → logprob: -5.753476619720459
    3. '__':
' → logprob: -8.1284761428833
    4. '():
' → logprob: -12.8784761428833
    5. '__()
' → logprob: -14.6284761428833
    6. '__:' → logprob: -15.0034761428833
    7. '__.' → logprob: -15.3784761428833
    8. '__["' → logprob: -16.253477096557617
    9. '__
' → logprob: -17.503477096557617
    10. '()' → logprob: -17.628477096557617

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2312774956226349
    2. 'solve' → logprob: -1.6062774658203125
    3. ' solve' → logprob: -5.6062774658203125
    4. '	s' → logprob: -6.3562774658203125
    5. '.solve' → logprob: -8.231277465820312
    6. '```' → logprob: -8.981277465820312
    7. '  ' → logprob: -11.731277465820312
    8. ' ' → logprob: -11.981277465820312
    9. '<|end|>' → logprob: -11.981277465820312
    10. '   ' → logprob: -12.356277465820312

Token 389: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -4.320199877838604e-07
    2. ' solve' → logprob: -15.25
    3. '   ' → logprob: -16.25
    4. '.solve' → logprob: -19.0
    5. 'import' → logprob: -19.5
    6. 'resolve' → logprob: -19.75
    7. 'save' → logprob: -20.625
    8. '```' → logprob: -21.0
    9. '    
' → logprob: -21.625
    10. 'sys' → logprob: -22.0

Token 390: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 388
Tokens correctement prédits (1ère position, stricte): 181
Tokens correctement prédits (1ère position, avec adaptation): 202
Tokens correctement prédits (top 10): 336
Précision stricte (1ère position): 46.65%
Précision adaptée (1ère position): 52.06%
Précision (top 10): 86.60%
================================================================================
