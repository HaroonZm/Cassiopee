================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    arr = [int(input()) for _ in range(n)]
    swaps = 0
    for i in range(n-1):
        for j in range(n-1-i):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swaps += 1
    print(swaps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20415055751800537
    2. '    ' → logprob: -2.579150676727295
    3. ' ' → logprob: -3.079150676727295
    4. '```' → logprob: -3.204150676727295
    5. '       ' → logprob: -5.204150676727295
    6. '    
' → logprob: -5.704150676727295
    7. ' pass' → logprob: -5.954150676727295
    8. '  ' → logprob: -6.454150676727295
    9. 'pass' → logprob: -6.454150676727295
    10. ' ```' → logprob: -6.954150676727295

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3691587746143341
    2. ' input' → logprob: -1.2441587448120117
    3. 'input' → logprob: -4.494158744812012
    4. 'int' → logprob: -5.244158744812012
    5. ' n' → logprob: -5.619158744812012
    6. ' ' → logprob: -8.494158744812012
    7. 'n' → logprob: -9.744158744812012
    8. ' randint' → logprob: -10.619158744812012
    9. ' a' → logprob: -10.744158744812012
    10. ' eval' → logprob: -11.119158744812012

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006758829578757286
    2. '(input' → logprob: -5.006758689880371
    3. '()' → logprob: -11.131758689880371
    4. 'input' → logprob: -11.756758689880371
    5. '(n' → logprob: -12.256758689880371
    6. '(
' → logprob: -12.381758689880371
    7. ' (' → logprob: -12.506758689880371
    8. '('' → logprob: -12.631758689880371
    9. '(int' → logprob: -14.756758689880371
    10. ''' → logprob: -14.756758689880371

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0225566625595093
    2. '   ' → logprob: -1.2725566625595093
    3. ')' → logprob: -2.272556781768799
    4. '<|end|>' → logprob: -2.272556781768799
    5. ' if' → logprob: -2.522556781768799
    6. '    ' → logprob: -3.522556781768799
    7. ' )' → logprob: -4.522556781768799
    8. '  ' → logprob: -4.647556781768799
    9. 'if' (adapté à ' if') → logprob: -5.147556781768799
    10. '    
' → logprob: -6.147556781768799

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0014810555148869753
    2. 'n' → logprob: -7.001481056213379
    3. ' not' → logprob: -8.001481056213379
    4. ' ' → logprob: -8.376481056213379
    5. 'not' → logprob: -13.251481056213379
    6. ' ' → logprob: -13.751481056213379
    7. '  ' → logprob: -15.126481056213379
    8. '	n' → logprob: -15.876481056213379
    9. '(n' → logprob: -16.126480102539062
    10. '<|end|>' → logprob: -16.251480102539062

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. ')' → logprob: -7.560174465179443
    10. '<' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002514188876375556
    2. ' ' → logprob: -6.002514362335205
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -12.877513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '  ' → logprob: -14.877513885498047
    9. '```' → logprob: -14.877513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024994369596242905
    2. '   ' → logprob: -6.752499580383301
    3. ' break' → logprob: -6.877499580383301
    4. '\n' → logprob: -9.1274995803833
    5. '    ' → logprob: -9.8774995803833
    6. '	break' → logprob: -10.5024995803833
    7. ':' → logprob: -10.7524995803833
    8. '\' → logprob: -11.3774995803833
    9. '      ' → logprob: -11.3774995803833
    10. ' ' → logprob: -11.6274995803833

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6997511982917786
    2. '\n' → logprob: -1.5747511386871338
    3. '    
' → logprob: -2.199751138687134
    4. '```' → logprob: -2.574751138687134
    5. '\' → logprob: -2.699751138687134
    6. '
' → logprob: -4.199751377105713
    7. '  
' → logprob: -4.824751377105713
    8. 'n' → logprob: -5.574751377105713
    9. '\r' → logprob: -5.824751377105713
    10. ' 
' → logprob: -6.074751377105713

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47039151191711426
    2. '<|end|>' → logprob: -1.2203915119171143
    3. '\n' → logprob: -3.9703915119171143
    4. '
' → logprob: -4.470391273498535
    5. '    
' → logprob: -4.470391273498535
    6. '#' → logprob: -4.595391273498535
    7. '```' → logprob: -4.720391273498535
    8. ')' → logprob: -5.220391273498535
    9. '\' → logprob: -5.345391273498535
    10. '<|end|>' → logprob: -5.970391273498535

Token 20: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5292903780937195
    2. ' ' → logprob: -1.1542904376983643
    3. '    ' → logprob: -3.9042904376983643
    4. ':' → logprob: -4.279290199279785
    5. '\' → logprob: -4.529290199279785
    6. '\n' → logprob: -4.529290199279785
    7. ')' → logprob: -4.654290199279785
    8. '(' → logprob: -5.529290199279785
    9. '#' → logprob: -5.529290199279785
    10. '  ' → logprob: -5.654290199279785

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007476005703210831
    2. ' =' → logprob: -5.757475852966309
    3. '.' → logprob: -6.632475852966309
    4. '.append' → logprob: -7.007475852966309
    5. '[]' → logprob: -7.507475852966309
    6. '[:]' → logprob: -7.632475852966309
    7. '=' → logprob: -8.257475852966309
    8. '[i' → logprob: -9.257475852966309
    9. '.setdefault' → logprob: -9.382475852966309
    10. '_' → logprob: -9.757475852966309

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1297939121723175
    2. ' [' → logprob: -2.879793882369995
    3. '[]' → logprob: -3.004793882369995
    4. ' list' → logprob: -4.629794120788574
    5. '[' → logprob: -5.254794120788574
    6. 'list' → logprob: -7.004794120788574
    7. '[list' → logprob: -10.254794120788574
    8. '[input' → logprob: -10.754794120788574
    9. ' ' → logprob: -10.879794120788574
    10. ' [[]' → logprob: -11.629794120788574

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.056514251977205276
    2. ' int' → logprob: -3.431514263153076
    3. '0' → logprob: -4.056514263153076
    4. ']int' → logprob: -6.556514263153076
    5. ']' → logprob: -7.056514263153076
    6. 'i' → logprob: -7.056514263153076
    7. 'n' → logprob: -7.181514263153076
    8. ' n' → logprob: -7.556514263153076
    9. ' ]' → logprob: -7.556514263153076
    10. ' i' → logprob: -9.056513786315918

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11923352628946304
    2. '(' → logprob: -2.2442336082458496
    3. '(x' → logprob: -5.24423360824585
    4. '(i' → logprob: -7.24423360824585
    5. '()' → logprob: -8.869233131408691
    6. ')' → logprob: -8.994233131408691
    7. 'input' → logprob: -10.119233131408691
    8. ']' → logprob: -10.744233131408691
    9. ' (' → logprob: -11.494233131408691
    10. '(a' → logprob: -11.744233131408691

Token 25: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002686586929485202
    2. '()' → logprob: -6.002686500549316
    3. '()]' → logprob: -8.752686500549316
    4. '()))' → logprob: -10.627686500549316
    5. '()),' → logprob: -11.002686500549316
    6. ' ())' → logprob: -12.127686500549316
    7. '());' → logprob: -13.752686500549316
    8. '(' → logprob: -13.877686500549316
    9. '())
' → logprob: -14.002686500549316
    10. '()`' → logprob: -14.377686500549316

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.280710369348526
    2. ')' → logprob: -1.5307103395462036
    3. 'for' → logprob: -4.905710220336914
    4. '())' → logprob: -5.155710220336914
    5. '()]' → logprob: -5.155710220336914
    6. '   ' → logprob: -6.030710220336914
    7. '(' → logprob: -6.155710220336914
    8. ')]' → logprob: -6.405710220336914
    9. ' for' → logprob: -6.905710220336914
    10. ' ()' → logprob: -7.280710220336914

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03253936395049095
    2. ' ' → logprob: -3.5325393676757812
    3. ' _' → logprob: -6.907539367675781
    4. '_' → logprob: -7.282539367675781
    5. ' i' → logprob: -7.282539367675781
    6. ' xrange' → logprob: -8.907539367675781
    7. 'range' → logprob: -9.282539367675781
    8. '	range' → logprob: -9.657539367675781
    9. ' in' → logprob: -10.157539367675781
    10. '(range' → logprob: -10.782539367675781

Token 28: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8408666253089905
    2. 'range' → logprob: -0.8408666253089905
    3. ' in' → logprob: -2.0908665657043457
    4. 'in' → logprob: -4.965866565704346
    5. 'ange' → logprob: -5.340866565704346
    6. ' ' → logprob: -6.840866565704346
    7. ' xrange' → logprob: -8.340867042541504
    8. '  ' → logprob: -8.715867042541504
    9. '   ' → logprob: -9.090867042541504
    10. 'n' → logprob: -9.590867042541504

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11287607997655869
    2. 'range' → logprob: -2.2378761768341064
    3. ' ' → logprob: -10.862875938415527
    4. '	range' → logprob: -11.987875938415527
    5. '(range' → logprob: -12.362875938415527
    6. 'rang' → logprob: -12.362875938415527
    7. 'arr' → logprob: -12.987875938415527
    8. ' rang' → logprob: -13.112875938415527
    9. '  ' → logprob: -13.237875938415527
    10. '[' → logprob: -13.362875938415527

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.049137163907289505
    2. '(' → logprob: -3.1741371154785156
    3. ' n' → logprob: -5.299137115478516
    4. ' (' → logprob: -7.174137115478516
    5. 'n' → logprob: -8.549137115478516
    6. ' )' → logprob: -9.174137115478516
    7. ')' → logprob: -10.424137115478516
    8. ')n' → logprob: -11.424137115478516
    9. '(len' → logprob: -11.799137115478516
    10. ' ' → logprob: -12.424137115478516

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00037895687273703516
    2. ')' → logprob: -8.125378608703613
    3. ']' → logprob: -10.125378608703613
    4. ')])' → logprob: -11.125378608703613
    5. '   ' → logprob: -11.750378608703613
    6. ' )' → logprob: -11.875378608703613
    7. '))' → logprob: -12.625378608703613
    8. '])]' → logprob: -12.750378608703613
    9. ')]
' → logprob: -13.625378608703613
    10. '')]' → logprob: -13.750378608703613

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0494790077209473
    2. ' ' → logprob: -1.1744790077209473
    3. '<|end|>' → logprob: -1.9244790077209473
    4. '
' → logprob: -2.5494790077209473
    5. '\n' → logprob: -3.5494790077209473
    6. '[' → logprob: -3.5494790077209473
    7. '\' → logprob: -4.174479007720947
    8. ' 
' → logprob: -4.299479007720947
    9. '    
' → logprob: -5.424479007720947
    10. ')' → logprob: -5.424479007720947

Token 33: ' swaps' (ID: 150699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0273211002349854
    2. ' ' → logprob: -1.5273211002349854
    3. 'arr' → logprob: -2.6523211002349854
    4. 'sum' → logprob: -2.9023211002349854
    5. ' arr' → logprob: -3.4023211002349854
    6. '   ' → logprob: -3.6523211002349854
    7. 'm' → logprob: -3.9023211002349854
    8. 'max' → logprob: -3.9023211002349854
    9. 'n' → logprob: -4.027320861816406
    10. ')' → logprob: -4.152320861816406

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005978330969810486
    2. '=' → logprob: -5.380978107452393
    3. '_count' → logprob: -7.005978107452393
    4. ',' → logprob: -8.25597858428955
    5. ' ' → logprob: -9.38097858428955
    6. '_' → logprob: -9.63097858428955
    7. '   ' → logprob: -11.50597858428955
    8. '(' → logprob: -11.75597858428955
    9. ' ,' → logprob: -12.75597858428955
    10. '_needed' → logprob: -12.75597858428955

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868725001811981
    2. ' ' → logprob: -1.1368725299835205
    3. ' ' → logprob: -14.636872291564941
    4. ' len' → logprob: -14.886872291564941
    5. '1' → logprob: -15.886872291564941
    6. ' True' → logprob: -16.011873245239258
    7. ' n' → logprob: -16.261873245239258
    8. ' sum' → logprob: -16.761873245239258
    9. '[' → logprob: -16.761873245239258
    10. 'len' → logprob: -17.011873245239258

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011355629976605996
    2. 'sum' → logprob: -9.750113487243652
    3. 'len' → logprob: -10.500113487243652
    4. ' ' → logprob: -11.125113487243652
    5. 'True' → logprob: -11.875113487243652
    6. '1' → logprob: -12.500113487243652
    7. 'sorted' → logprob: -14.125113487243652
    8. '[' → logprob: -14.125113487243652
    9. '[]' → logprob: -15.125113487243652
    10. 'arr' → logprob: -16.12511444091797

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9120774865150452
    2. '<|end|>' → logprob: -0.9120774865150452
    3. ' for' → logprob: -2.5370774269104004
    4. ' ' → logprob: -3.2870774269104004
    5. '
' → logprob: -3.4120774269104004
    6. 'for' → logprob: -3.5370774269104004
    7. '<|end|>' → logprob: -5.1620774269104
    8. '  ' → logprob: -5.5370774269104
    9. ')' → logprob: -6.0370774269104
    10. '\n' → logprob: -6.7870774269104

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13639859855175018
    2. '<|end|>' → logprob: -3.0113985538482666
    3. ' for' → logprob: -3.1363985538482666
    4. '
' → logprob: -4.011398792266846
    5. 'for' → logprob: -4.636398792266846
    6. ' ' → logprob: -5.761398792266846
    7. '<|end|>' → logprob: -6.886398792266846
    8. '  ' → logprob: -7.011398792266846
    9. '    ' → logprob: -7.511398792266846
    10. '    
' → logprob: -7.886398792266846

Token 39: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04051976278424263
    2. '   ' → logprob: -3.5405197143554688
    3. ' for' → logprob: -4.540519714355469
    4. '  ' → logprob: -10.915519714355469
    5. ' ' → logprob: -11.915519714355469
    6. '	for' → logprob: -12.165519714355469
    7. '```' → logprob: -12.665519714355469
    8. ')' → logprob: -12.790519714355469
    9. 'i' → logprob: -12.915519714355469
    10. '    ' → logprob: -13.540519714355469

Token 40: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0004017137107439339
    2. 'i' → logprob: -8.625401496887207
    3. ' ' → logprob: -9.000401496887207
    4. ' j' → logprob: -9.625401496887207
    5. ' range' → logprob: -10.750401496887207
    6. ' _' → logprob: -12.875401496887207
    7. ' ' → logprob: -13.000401496887207
    8. 'j' → logprob: -13.500401496887207
    9. 'range' → logprob: -13.875401496887207
    10. '<|end|>' → logprob: -14.000401496887207

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003994934726506472
    2. 'in' → logprob: -5.628994941711426
    3. ' ' → logprob: -7.878994941711426
    4. '+' → logprob: -11.378994941711426
    5. '	in' → logprob: -14.003994941711426
    6. '<|end|>' → logprob: -14.003994941711426
    7. '  ' → logprob: -14.378994941711426
    8. '0' → logprob: -14.878994941711426
    9. '1' → logprob: -15.003994941711426
    10. 'range' → logprob: -15.253994941711426

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005234121344983578
    2. 'range' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.755233764648438
    4. '	range' → logprob: -16.880233764648438
    5. ' xrange' → logprob: -17.380233764648438
    6. '   ' → logprob: -18.630233764648438
    7. '  ' → logprob: -19.005233764648438
    8. '(range' → logprob: -19.380233764648438
    9. ' rang' → logprob: -19.630233764648438
    10. ' ran' → logprob: -19.880233764648438

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2312636822462082
    2. '(' → logprob: -1.7312636375427246
    3. '(len' → logprob: -3.9812636375427246
    4. ' n' → logprob: -5.356263637542725
    5. ' ' → logprob: -5.481263637542725
    6. ' (' → logprob: -6.481263637542725
    7. ' len' → logprob: -8.356264114379883
    8. 'n' → logprob: -9.731264114379883
    9. '(s' → logprob: -11.856264114379883
    10. ' range' → logprob: -11.856264114379883

Token 44: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26901206374168396
    2. '):' → logprob: -1.5190120935440063
    3. ' -' → logprob: -4.394011974334717
    4. ')' → logprob: -5.644011974334717
    5. '):
' → logprob: -7.269011974334717
    6. '   ' → logprob: -8.769012451171875
    7. ' ):' → logprob: -8.894012451171875
    8. ' ' → logprob: -10.269012451171875
    9. ' )' → logprob: -12.269012451171875
    10. '  ' → logprob: -12.644012451171875

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020449401927180588
    2. ' ' → logprob: -8.500204086303711
    3. '-' → logprob: -14.625204086303711
    4. '2' → logprob: -15.625204086303711
    5. ')' → logprob: -16.62520408630371
    6. '   ' → logprob: -16.62520408630371
    7. '```' → logprob: -16.62520408630371
    8. '  ' → logprob: -16.93770408630371
    9. ' -' → logprob: -17.62520408630371
    10. '0' → logprob: -18.31270408630371

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004155806731432676
    2. '):
' → logprob: -6.37915563583374
    3. ' ):' → logprob: -6.37915563583374
    4. ')' → logprob: -7.62915563583374
    5. ':' → logprob: -8.504156112670898
    6. ',' → logprob: -10.504156112670898
    7. '):
' → logprob: -12.129156112670898
    8. '):

' → logprob: -12.129156112670898
    9. '-' → logprob: -12.254156112670898
    10. '>' → logprob: -12.879156112670898

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01863868720829487
    2. '    ' → logprob: -5.143638610839844
    3. '   ' → logprob: -5.393638610839844
    4. ' for' → logprob: -5.518638610839844
    5. '<|end|>' → logprob: -5.893638610839844
    6. ' ' → logprob: -7.393638610839844
    7. ':' → logprob: -8.393638610839844
    8. 'for' → logprob: -9.518638610839844
    9. '    
' → logprob: -9.893638610839844
    10. '<|end|>' → logprob: -10.018638610839844

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32679688930511475
    2. '   ' → logprob: -2.0767970085144043
    3. 'for' (adapté à ' for') → logprob: -2.4517970085144043
    4. '       ' → logprob: -3.3267970085144043
    5. '    ' → logprob: -3.5767970085144043
    6. ' ' → logprob: -6.326797008514404
    7. '<|end|>' → logprob: -7.201797008514404
    8. '	for' → logprob: -7.576797008514404
    9. '	   ' → logprob: -9.201796531677246
    10. '  ' → logprob: -10.076796531677246

Token 49: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02025677263736725
    2. 'j' → logprob: -4.395256996154785
    3. ' range' → logprob: -5.145256996154785
    4. 'range' → logprob: -6.520256996154785
    5. ' ' → logprob: -8.520256996154785
    6. '    ' → logprob: -9.020256996154785
    7. '<|end|>' → logprob: -9.770256996154785
    8. '	j' → logprob: -11.645256996154785
    9. ' ' → logprob: -11.645256996154785
    10. '   ' → logprob: -12.770256996154785

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009945672005414963
    2. 'in' → logprob: -5.509945869445801
    3. ' range' → logprob: -5.759945869445801
    4. ' ' → logprob: -6.509945869445801
    5. 'range' → logprob: -7.009945869445801
    6. '    ' → logprob: -8.7599458694458
    7. '<|end|>' → logprob: -10.0099458694458
    8. '  ' → logprob: -10.5099458694458
    9. '   ' → logprob: -11.0099458694458
    10. '	range' → logprob: -11.2599458694458

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193408131599426
    2. 'range' → logprob: -1.5019340515136719
    3. ' ' → logprob: -13.126934051513672
    4. ' n' → logprob: -14.126934051513672
    5. '(range' → logprob: -14.126934051513672
    6. 'n' → logprob: -14.501934051513672
    7. '	range' → logprob: -14.626934051513672
    8. '   ' → logprob: -16.001934051513672
    9. ' xrange' → logprob: -16.126934051513672
    10. ' in' → logprob: -16.251934051513672

Token 52: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9447541236877441
    2. '(n' → logprob: -1.4447541236877441
    3. ' (' → logprob: -1.6947541236877441
    4. ' ' → logprob: -2.444754123687744
    5. '(range' → logprob: -3.194754123687744
    6. ' n' → logprob: -3.944754123687744
    7. 'range' → logprob: -4.069754123687744
    8. '(' → logprob: -4.319754123687744
    9. '<|end|>' → logprob: -4.819754123687744
    10. '(i' → logprob: -5.819754123687744

Token 53: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06919118016958237
    2. ' -' → logprob: -3.1941912174224854
    3. '+' → logprob: -3.9441912174224854
    4. '1' → logprob: -5.694190979003906
    5. '   ' → logprob: -6.569190979003906
    6. ')' → logprob: -7.194190979003906
    7. '-i' → logprob: -7.444190979003906
    8. ' ' → logprob: -9.194190979003906
    9. '-j' → logprob: -9.569190979003906
    10. ' +' → logprob: -9.944190979003906

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041851779678836465
    2. 'i' → logprob: -8.500418663024902
    3. ' ' → logprob: -8.500418663024902
    4. '2' → logprob: -12.250418663024902
    5. '0' → logprob: -13.000418663024902
    6. ' i' → logprob: -13.250418663024902
    7. '   ' → logprob: -13.875418663024902
    8. '-' → logprob: -14.625418663024902
    9. '  ' → logprob: -14.875418663024902
    10. 'j' → logprob: -15.000418663024902

Token 55: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.055647410452365875
    2. '-i' → logprob: -3.305647373199463
    3. '-' → logprob: -4.055647373199463
    4. '-j' → logprob: -10.180647850036621
    5. '):' → logprob: -10.180647850036621
    6. ')' → logprob: -11.305647850036621
    7. '):
' → logprob: -11.430647850036621
    8. ' ' → logprob: -11.805647850036621
    9. '-k' → logprob: -12.180647850036621
    10. '   ' → logprob: -12.430647850036621

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021006562747061253
    2. '):
' → logprob: -6.252100467681885
    3. ':' → logprob: -9.002100944519043
    4. ' ):' → logprob: -10.627100944519043
    5. '   ' → logprob: -11.502100944519043
    6. ')' → logprob: -12.752100944519043
    7. '+' → logprob: -12.877100944519043
    8. ']:' → logprob: -13.627100944519043
    9. '):
' → logprob: -13.627100944519043
    10. '1' → logprob: -13.877100944519043

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005047675222158432
    2. '<|end|>' → logprob: -5.880047798156738
    3. ' if' → logprob: -7.505047798156738
    4. ' ' → logprob: -7.505047798156738
    5. '            ' → logprob: -8.255047798156738
    6. ':' → logprob: -8.255047798156738
    7. '               ' → logprob: -8.380047798156738
    8. '       ' → logprob: -10.005047798156738
    9. '<|end|>' → logprob: -10.005047798156738
    10. 'if' → logprob: -10.130047798156738

Token 58: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6933884024620056
    2. '<|end|>' → logprob: -1.6933884620666504
    3. '           ' → logprob: -2.1933884620666504
    4. ' ' → logprob: -2.1933884620666504
    5. 'if' (adapté à ' if') → logprob: -2.9433884620666504
    6. '               ' → logprob: -3.5683884620666504
    7. '   ' → logprob: -5.31838846206665
    8. '       ' → logprob: -6.44338846206665
    9. ' 
' → logprob: -6.81838846206665
    10. '            ' → logprob: -6.81838846206665

Token 59: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.0008123667794279754
    2. 'arr' → logprob: -7.125812530517578
    3. '	arr' → logprob: -12.375812530517578
    4. '(arr' → logprob: -13.375812530517578
    5. ' ' → logprob: -14.250812530517578
    6. '[arr' → logprob: -14.625812530517578
    7. '<arr' → logprob: -15.000812530517578
    8. '$arr' → logprob: -15.500812530517578
    9. ' ' → logprob: -15.625812530517578
    10. '    ' → logprob: -16.125812530517578

Token 60: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.00001049041748
    4. '```' → logprob: -17.125011444091797
    5. '[i' → logprob: -18.250011444091797
    6. 'j' → logprob: -19.375011444091797
    7. '>' → logprob: -19.625011444091797
    8. '   ' → logprob: -19.750011444091797
    9. '[
' → logprob: -19.750011444091797
    10. '[js' → logprob: -19.750011444091797

Token 61: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20141470432281494
    2. ' >' → logprob: -1.701414704322815
    3. '">' → logprob: -14.701415061950684
    4. ']>' → logprob: -14.951415061950684
    5. ' ' → logprob: -15.326415061950684
    6. ']' → logprob: -16.201414108276367
    7. ')>' → logprob: -16.201414108276367
    8. ')' → logprob: -17.201414108276367
    9. '>tag' → logprob: -17.326414108276367
    10. '```' → logprob: -17.326414108276367

Token 62: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2811558246612549
    2. ' >' → logprob: -1.4061558246612549
    3. '">' → logprob: -13.156155586242676
    4. '>tag' → logprob: -14.531155586242676
    5. ' ' → logprob: -14.656155586242676
    6. '```' → logprob: -14.781155586242676
    7. '<|end|>' → logprob: -15.156155586242676
    8. '>end' → logprob: -15.406155586242676
    9. '()>' → logprob: -15.781155586242676
    10. '>User' → logprob: -15.781155586242676

Token 63: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.12693335115909576
    2. 'arr' → logprob: -2.1269333362579346
    3. '	arr' → logprob: -12.376933097839355
    4. '(arr' → logprob: -15.126933097839355
    5. '<arr' → logprob: -15.376933097839355
    6. ' ' → logprob: -15.876933097839355
    7. '[arr' → logprob: -16.001934051513672
    8. '_arr' → logprob: -16.501934051513672
    9. '$arr' → logprob: -16.501934051513672
    10. ' ' → logprob: -16.626934051513672

Token 64: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9385402993066236e-05
    2. '+' → logprob: -11.125019073486328
    3. '[' → logprob: -13.000019073486328
    4. '```' → logprob: -14.125019073486328
    5. '+j' → logprob: -14.500019073486328
    6. '1' → logprob: -15.000019073486328
    7. '[
' → logprob: -16.000019073486328
    8. 'j' → logprob: -16.125019073486328
    9. '   ' → logprob: -16.250019073486328
    10. '`' → logprob: -16.375019073486328

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.167648876318708e-05
    2. '+j' → logprob: -10.500041961669922
    3. '[j' → logprob: -12.125041961669922
    4. ' +' → logprob: -12.500041961669922
    5. '1' → logprob: -12.625041961669922
    6. ']+' → logprob: -14.125041961669922
    7. '[' → logprob: -15.250041961669922
    8. ']' → logprob: -15.500041961669922
    9. '```' → logprob: -15.500041961669922
    10. '   ' → logprob: -16.625041961669922

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.00004768371582
    3. ']' → logprob: -13.37504768371582
    4. '   ' → logprob: -15.25004768371582
    5. '```' → logprob: -16.25004768371582
    6. ')' → logprob: -16.31254768371582
    7. '  ' → logprob: -16.62504768371582
    8. 'j' → logprob: -17.56254768371582
    9. 'i' → logprob: -17.93754768371582
    10. '])' → logprob: -18.06254768371582

Token 67: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0031219832599163055
    2. '):' → logprob: -6.003121852874756
    3. ']' → logprob: -7.878121852874756
    4. ':' → logprob: -9.003122329711914
    5. ']:
' → logprob: -9.628122329711914
    6. '"]:' → logprob: -11.003122329711914
    7. '}:' → logprob: -11.128122329711914
    8. '']:' → logprob: -11.128122329711914
    9. ']):' → logprob: -11.378122329711914
    10. ']:
' → logprob: -11.628122329711914

Token 68: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02336415834724903
    2. '<|end|>' → logprob: -4.273364067077637
    3. '           ' → logprob: -4.898364067077637
    4. ' ' → logprob: -8.273364067077637
    5. '                
' → logprob: -8.523364067077637
    6. '            ' → logprob: -8.648364067077637
    7. '.swap' → logprob: -8.773364067077637
    8. ')' → logprob: -9.023364067077637
    9. '<|end|>' → logprob: -9.023364067077637
    10. ' swaps' → logprob: -9.148364067077637

Token 69: ' arr' (ID: 1724)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5886731147766113
    2. ' arr' → logprob: -1.3386731147766113
    3. '                   ' → logprob: -2.4636731147766113
    4. 'arr' (adapté à ' arr') → logprob: -2.7136731147766113
    5. '                ' → logprob: -3.5886731147766113
    6. '           ' → logprob: -7.588673114776611
    7. ' ' → logprob: -7.713673114776611
    8. ' 
' → logprob: -7.838673114776611
    9. '```' → logprob: -7.963673114776611
    10. ' swap' → logprob: -8.338672637939453

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0017031522002071142
    2. '[' → logprob: -6.376703262329102
    3. ',j' → logprob: -14.751703262329102
    4. ',' → logprob: -14.751703262329102
    5. '```' → logprob: -17.2517032623291
    6. '.swap' → logprob: -17.5017032623291
    7. '[js' → logprob: -17.6267032623291
    8. 'j' → logprob: -17.7517032623291
    9. '[
' → logprob: -18.5017032623291
    10. ' [' → logprob: -19.0017032623291

Token 71: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3829990327358246
    2. ',' → logprob: -1.382999062538147
    3. ' ],' → logprob: -2.8829989433288574
    4. ']' → logprob: -5.132998943328857
    5. '>,' → logprob: -5.757998943328857
    6. ' ,' → logprob: -7.007998943328857
    7. '),' → logprob: -7.382998943328857
    8. ' ]' → logprob: -8.757999420166016
    9. ''],' → logprob: -9.132999420166016
    10. ' ),' → logprob: -9.507999420166016

Token 72: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.061981916427612305
    2. 'arr' → logprob: -2.8119819164276123
    3. '	arr' → logprob: -11.686982154846191
    4. '<|end|>' → logprob: -13.186982154846191
    5. '[arr' → logprob: -13.436982154846191
    6. ' ' → logprob: -13.811982154846191
    7. '(arr' → logprob: -14.311982154846191
    8. '$arr' → logprob: -14.686982154846191
    9. '<arr' → logprob: -15.186982154846191
    10. ' ' → logprob: -15.311982154846191

Token 73: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.375003814697266
    3. 'j' → logprob: -13.375003814697266
    4. '```' → logprob: -15.500003814697266
    5. '+' → logprob: -16.125003814697266
    6. ',j' → logprob: -16.250003814697266
    7. '[
' → logprob: -16.625003814697266
    8. '	j' → logprob: -17.125003814697266
    9. '][' → logprob: -17.250003814697266
    10. ']' → logprob: -17.500003814697266

Token 74: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.56102097814437e-05
    2. '[j' → logprob: -10.750045776367188
    3. '+j' → logprob: -11.125045776367188
    4. ' +' → logprob: -11.750045776367188
    5. '+]' → logprob: -14.375045776367188
    6. '[' → logprob: -14.750045776367188
    7. '+[' → logprob: -15.500045776367188
    8. '1' → logprob: -15.625045776367188
    9. ']' → logprob: -17.500045776367188
    10. '+
' → logprob: -17.500045776367188

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.625003814697266
    5. ')' → logprob: -17.312503814697266
    6. '+' → logprob: -17.437503814697266
    7. ']' → logprob: -17.937503814697266
    8. '[' → logprob: -18.187503814697266
    9. '2' → logprob: -18.312503814697266
    10. '  ' → logprob: -18.687503814697266

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018628736957907677
    2. '=' → logprob: -4.6436285972595215
    3. ' =' → logprob: -5.0186285972595215
    4. ']=' → logprob: -6.1436285972595215
    5. ')' → logprob: -10.14362907409668
    6. ' ]' → logprob: -11.01862907409668
    7. '<|end|>' → logprob: -12.01862907409668
    8. '   ' → logprob: -13.26862907409668
    9. '],' → logprob: -13.89362907409668
    10. ' ' → logprob: -13.89362907409668

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858918860554695
    2. ' =' → logprob: -3.0485892295837402
    3. '=

' → logprob: -13.798588752746582
    4. '=
' → logprob: -14.923588752746582
    5. ',' → logprob: -15.673588752746582
    6. 'swap' → logprob: -15.798588752746582
    7. ' =
' → logprob: -17.0485897064209
    8. '<|end|>' → logprob: -17.1735897064209
    9. '_swap' → logprob: -17.2985897064209
    10. '.swap' → logprob: -17.2985897064209

Token 78: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.10021141171455383
    2. 'arr' → logprob: -2.3502113819122314
    3. '	arr' → logprob: -12.725211143493652
    4. '(arr' → logprob: -14.225211143493652
    5. ' ' → logprob: -14.975211143493652
    6. '$arr' → logprob: -15.475211143493652
    7. ' ' → logprob: -15.850211143493652
    8. '[arr' → logprob: -15.975211143493652
    9. '<arr' → logprob: -16.35021209716797
    10. '_arr' → logprob: -16.60021209716797

Token 79: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.62500286102295
    3. 'j' → logprob: -13.87500286102295
    4. ',j' → logprob: -16.125001907348633
    5. '[i' → logprob: -16.500001907348633
    6. '[
' → logprob: -17.000001907348633
    7. '	j' → logprob: -17.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. ']' → logprob: -18.250001907348633
    10. ';j' → logprob: -18.750001907348633

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000953502138145268
    2. ' +' → logprob: -7.000953674316406
    3. '+j' → logprob: -10.375953674316406
    4. '[j' → logprob: -11.875953674316406
    5. '],' → logprob: -13.250953674316406
    6. '+,' → logprob: -14.125953674316406
    7. '1' → logprob: -14.750953674316406
    8. ' ],' → logprob: -15.125953674316406
    9. ']' → logprob: -15.625953674316406
    10. '[' → logprob: -16.125953674316406

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.50001335144043
    4. '11' → logprob: -15.00001335144043
    5. '+' → logprob: -16.12501335144043
    6. '
' → logprob: -16.25001335144043
    7. '`' → logprob: -16.31251335144043
    8. ']' → logprob: -16.43751335144043
    9. '2' → logprob: -16.68751335144043
    10. '```' → logprob: -16.87501335144043

Token 82: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02459251694381237
    2. ']' → logprob: -4.024592399597168
    3. '],' → logprob: -5.274592399597168
    4. ' ,' → logprob: -7.024592399597168
    5. '<|end|>' → logprob: -8.649592399597168
    6. ' ]' → logprob: -9.649592399597168
    7. ',n' → logprob: -10.274592399597168
    8. ',
' → logprob: -10.274592399597168
    9. ' ],' → logprob: -10.649592399597168
    10. ',j' → logprob: -10.649592399597168

Token 83: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.048587486147880554
    2. ' arr' → logprob: -3.0485875606536865
    3. '	arr' → logprob: -16.298587799072266
    4. '(arr' → logprob: -18.048587799072266
    5. ' ' → logprob: -18.298587799072266
    6. '$arr' → logprob: -18.298587799072266
    7. '[arr' → logprob: -18.673587799072266
    8. '-arr' → logprob: -18.923587799072266
    9. 'Arr' → logprob: -19.173587799072266
    10. '_arr' → logprob: -19.173587799072266

Token 84: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. 'j' → logprob: -15.625000953674316
    4. '```' → logprob: -16.875
    5. 'arr' → logprob: -17.75
    6. '[i' → logprob: -18.25
    7. '[arr' → logprob: -19.625
    8. 'ar' → logprob: -19.625
    9. ']' → logprob: -20.125
    10. '\[' → logprob: -20.125

Token 85: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6352499723434448
    2. ')' → logprob: -0.8852499723434448
    3. '               ' → logprob: -3.1352500915527344
    4. ']' → logprob: -5.010250091552734
    5. ']
' → logprob: -5.260250091552734
    6. '           ' → logprob: -7.010250091552734
    7. ')
' → logprob: -7.260250091552734
    8. '       ' → logprob: -8.260250091552734
    9. '                   ' → logprob: -9.010250091552734
    10. '```' → logprob: -9.885250091552734

Token 86: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.160834401845932
    2. ' swaps' → logprob: -1.9108344316482544
    3. 'sw' → logprob: -8.160834312438965
    4. '           ' → logprob: -8.285834312438965
    5. '                
' → logprob: -10.910834312438965
    6. '```' → logprob: -11.410834312438965
    7. '                   ' → logprob: -11.660834312438965
    8. '
' → logprob: -11.910834312438965
    9. '       ' → logprob: -12.285834312438965
    10. 'swap' → logprob: -12.285834312438965

Token 87: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.0298096165060997
    2. ' swaps' → logprob: -3.5298097133636475
    3. 'swap' → logprob: -10.404809951782227
    4. '               ' → logprob: -10.654809951782227
    5. ' sw' → logprob: -12.904809951782227
    6. '	sw' → logprob: -14.154809951782227
    7. '           ' → logprob: -14.279809951782227
    8. '   ' → logprob: -14.529809951782227
    9. '                   ' → logprob: -15.154809951782227
    10. 'Sw' → logprob: -15.779809951782227

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3236555755138397
    2. '+=' → logprob: -1.323655605316162
    3. '+' → logprob: -4.573655605316162
    4. '=' → logprob: -11.823655128479004
    5. ' +' → logprob: -12.198655128479004
    6. '++' → logprob: -12.948655128479004
    7. ']+=' → logprob: -13.198655128479004
    8. ' ' → logprob: -14.448655128479004
    9. '```' → logprob: -14.448655128479004
    10. ' =' → logprob: -14.573655128479004

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -21.50010871887207
    4. '１' → logprob: -21.87510871887207
    5. ' ' → logprob: -22.12510871887207
    6. '  ' → logprob: -22.75010871887207
    7. '۱' → logprob: -23.37510871887207
    8. '```' → logprob: -23.37510871887207
    9. '`' → logprob: -23.62510871887207
    10. '<|end|>' → logprob: -23.62510871887207

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -21.0
    5. '１' → logprob: -21.25
    6. '  ' → logprob: -21.375
    7. '+' → logprob: -21.875
    8. '2' → logprob: -21.9375
    9. '۱' → logprob: -22.0
    10. '           ' → logprob: -22.5

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148723244667053
    2. 'print' → logprob: -1.3148722648620605
    3. '
' → logprob: -6.8148722648620605
    4. ' print' → logprob: -8.064872741699219
    5. '    
' → logprob: -9.064872741699219
    6. '```' → logprob: -9.689872741699219
    7. '       ' → logprob: -12.189872741699219
    8. '	print' → logprob: -12.689872741699219
    9. '  
' → logprob: -12.939872741699219
    10. '<|end|>' → logprob: -13.064872741699219

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25279471278190613
    2. 'print' → logprob: -1.5027947425842285
    3. ' print' → logprob: -7.6277947425842285
    4. '```' → logprob: -8.50279426574707
    5. '
' → logprob: -9.00279426574707
    6. '    
' → logprob: -10.12779426574707
    7. '       ' → logprob: -12.37779426574707
    8. '`' → logprob: -13.25279426574707
    9. '	print' → logprob: -13.50279426574707
    10. 'if' → logprob: -13.62779426574707

Token 93: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4749505817890167
    2. 'print' (adapté à ' print') → logprob: -0.9749505519866943
    3. ' print' → logprob: -7.474950790405273
    4. '```' → logprob: -8.599950790405273
    5. '
' → logprob: -9.724950790405273
    6. '    
' → logprob: -9.849950790405273
    7. '	print' → logprob: -13.224950790405273
    8. '``' → logprob: -13.474950790405273
    9. '`' → logprob: -14.099950790405273
    10. '  
' → logprob: -14.224950790405273

Token 94: '(sw' (ID: 132758)
  Prédit: '(sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -0.1902199536561966
    2. '(' → logprob: -2.0652198791503906
    3. '(f' → logprob: -3.3152198791503906
    4. '("' → logprob: -5.065219879150391
    5. '('' → logprob: -6.690219879150391
    6. '("("' → logprob: -6.815219879150391
    7. '(s' → logprob: -6.940219879150391
    8. '(len' → logprob: -8.56521987915039
    9. '()' → logprob: -9.19021987915039
    10. '((' → logprob: -9.81521987915039

Token 95: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -14.500000953674316
    3. 'eps' → logprob: -16.875
    4. 'ap' → logprob: -17.0
    5. 'apses' → logprob: -17.0
    6. 'ps' → logprob: -17.125
    7. 'apsed' → logprob: -17.625
    8. 'apped' → logprob: -18.125
    9. '"' → logprob: -18.375
    10. '(' → logprob: -18.75

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -15.000000953674316
    4. '))' → logprob: -15.500000953674316
    5. ')
' → logprob: -16.375001907348633
    6. '`)' → logprob: -17.125001907348633
    7. ')}' → logprob: -17.750001907348633
    8. '')' → logprob: -17.875001907348633
    9. '   ' → logprob: -19.000001907348633
    10. ')**' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 94
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 62.77%
Précision adaptée (1ère position): 63.83%
Précision (top 10): 94.68%
================================================================================
