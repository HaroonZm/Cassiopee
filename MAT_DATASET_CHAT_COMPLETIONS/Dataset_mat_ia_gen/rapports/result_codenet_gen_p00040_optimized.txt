================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def egcd(a,b):
    while b:
        a,b = b,a%b
    return a

def modinv(a,m):
    # mod inverse exists as gcd(a,m)=1
    x,y,m0 = 1,0,m
    b = m
    while b:
        q = a//b
        a,b = b,a%b
        x,y = y,x - q*y
    return x % m0

def decode(cipher, a, b):
    a_inv = modinv(a,26)
    res = []
    for c in cipher:
        if 'a' <= c <= 'z':
            val = ord(c)-97
            plain = (a_inv*(val - b))%26
            res.append(chr(plain+97))
        else:
            res.append(c)
    return ''.join(res)

input=sys.stdin.readline
n=int(input())
keywords = ('that','this')
alphas = [a for a in range(1,26,2) if egcd(a,26)==1]  # possible a values

for _ in range(n):
    enc = input().rstrip('\n')
    found = False
    for a in alphas:
        for b in range(26):
            dec = decode(enc,a,b)
            if any(k in dec for k in keywords):
                print(dec)
                found = True
                break
        if found:
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' eg' (ID: 9768)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023278674110770226
    2. ' main' → logprob: -5.148278713226318
    3. ' process' → logprob: -5.898278713226318
    4. ' space' → logprob: -6.023278713226318
    5. ' sys' → logprob: -6.273278713226318
    6. ' ' → logprob: -6.273278713226318
    7. '  ' → logprob: -7.023278713226318
    8. ' a' → logprob: -7.398278713226318
    9. ' function' → logprob: -7.398278713226318
    10. ' def' → logprob: -7.523278713226318

Token 5: 'cd' (ID: 8301)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3491860032081604
    2. 'g' → logprob: -1.7241859436035156
    3. 'gs' → logprob: -3.0991859436035156
    4. 'z' → logprob: -3.5991859436035156
    5. 's' → logprob: -4.724185943603516
    6. '():' → logprob: -4.724185943603516
    7. ':def' → logprob: -4.974185943603516
    8. '```' → logprob: -5.474185943603516
    9. 'f' → logprob: -5.599185943603516
    10. '():
' → logprob: -6.474185943603516

Token 6: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012872886843979359
    2. '_' → logprob: -5.637872695922852
    3. ' (' → logprob: -5.762872695922852
    4. '<|end|>' → logprob: -6.137872695922852
    5. '<|end|>' → logprob: -6.262872695922852
    6. '```' → logprob: -7.137872695922852
    7. '("("' → logprob: -9.012872695922852
    8. ')' → logprob: -9.137872695922852
    9. '(e' → logprob: -9.762872695922852
    10. 'def' → logprob: -10.012872695922852

Token 7: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021496654953807592
    2. ',b' → logprob: -7.50214958190918
    3. ' ,' → logprob: -7.50214958190918
    4. ',a' → logprob: -7.50214958190918
    5. ',)' → logprob: -8.62714958190918
    6. ')' → logprob: -8.75214958190918
    7. '<|end|>' → logprob: -10.37714958190918
    8. ',n' → logprob: -10.87714958190918
    9. '_,' → logprob: -11.37714958190918
    10. ',p' → logprob: -11.75214958190918

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07339173555374146
    2. ')' → logprob: -2.6983916759490967
    3. ',' → logprob: -5.948391914367676
    4. '):
' → logprob: -7.448391914367676
    5. '<|end|>' → logprob: -10.073391914367676
    6. ')=' → logprob: -10.573391914367676
    7. '):

' → logprob: -10.698391914367676
    8. ':' → logprob: -10.948391914367676
    9. ' ):' → logprob: -10.948391914367676
    10. '=' → logprob: -10.948391914367676

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44693511724472046
    2. ':' → logprob: -1.6969351768493652
    3. ' return' → logprob: -3.3219351768493652
    4. '	return' → logprob: -3.3219351768493652
    5. ' :' → logprob: -3.3219351768493652
    6. '    ' → logprob: -4.071935176849365
    7. ' ' → logprob: -4.071935176849365
    8. '<|end|>' → logprob: -4.821935176849365
    9. '):' → logprob: -5.071935176849365
    10. 'def' → logprob: -5.196935176849365

Token 10: ' while' (ID: 2049)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4428708553314209
    2. ' if' → logprob: -1.567870855331421
    3. ' ' → logprob: -2.067870855331421
    4. '   ' → logprob: -4.81787109375
    5. '     
' → logprob: -5.31787109375
    6. 'if' → logprob: -5.56787109375
    7. ' return' → logprob: -6.81787109375
    8. '```' → logprob: -7.06787109375
    9. '  ' → logprob: -7.31787109375
    10. ' space' → logprob: -8.06787109375

Token 11: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07525026798248291
    2. ' a' → logprob: -3.2002501487731934
    3. ' not' → logprob: -3.8252501487731934
    4. ' b' → logprob: -4.950250148773193
    5. '  ' → logprob: -7.200250148773193
    6. 'a' → logprob: -7.450250148773193
    7. 'b' → logprob: -7.700250148773193
    8. '    ' → logprob: -8.325250625610352
    9. ' (' → logprob: -8.575250625610352
    10. ' ' → logprob: -8.950250625610352

Token 12: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.14282862842082977
    2. ' >' → logprob: -2.5178287029266357
    3. ':' → logprob: -3.6428287029266357
    4. '>' → logprob: -4.142828464508057
    5. '!=' → logprob: -5.017828464508057
    6. ' ' → logprob: -6.517828464508057
    7. ' :' → logprob: -6.892828464508057
    8. ' and' → logprob: -7.642828464508057
    9. '  ' → logprob: -9.142828941345215
    10. '```' → logprob: -9.267828941345215

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04207518696784973
    2. '    ' → logprob: -3.6670751571655273
    3. '```' → logprob: -5.167075157165527
    4. '        ' → logprob: -6.292075157165527
    5. '     
' → logprob: -6.542075157165527
    6. '   ' → logprob: -6.917075157165527
    7. '``' → logprob: -7.042075157165527
    8. '        
' → logprob: -7.417075157165527
    9. '`' → logprob: -7.667075157165527
    10. ' 
' → logprob: -7.667075157165527

Token 14: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.6167985796928406
    2. ' a' → logprob: -1.9917986392974854
    3. 't' → logprob: -2.6167986392974854
    4. '       ' → logprob: -2.7417986392974854
    5. 'r' → logprob: -2.8667986392974854
    6. '    ' → logprob: -3.2417986392974854
    7. '        ' → logprob: -3.8667986392974854
    8. ' t' → logprob: -4.241798400878906
    9. ' r' → logprob: -4.366798400878906
    10. '```' → logprob: -4.866798400878906

Token 15: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022645669523626566
    2. ' ,' → logprob: -6.252264499664307
    3. ',b' → logprob: -8.127264976501465
    4. '=' → logprob: -11.502264976501465
    5. ' %=' → logprob: -11.877264976501465
    6. '%' → logprob: -12.252264976501465
    7. ',a' → logprob: -12.252264976501465
    8. '%,' → logprob: -13.502264976501465
    9. '%=' → logprob: -13.627264976501465
    10. ',%' → logprob: -13.877264976501465

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.345122754573822
    2. '=' → logprob: -1.3451228141784668
    3. ',' → logprob: -3.470122814178467
    4. ' ,' → logprob: -8.470122337341309
    5. '<|end|>' → logprob: -10.845122337341309
    6. '<|end|>' → logprob: -12.220122337341309
    7. '=a' → logprob: -13.220122337341309
    8. ',a' → logprob: -13.595122337341309
    9. '   ' → logprob: -13.970122337341309
    10. ')' → logprob: -14.095122337341309

Token 17: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.11282730847597122
    2. 'b' → logprob: -2.2378273010253906
    3. ' ' → logprob: -13.11282730102539
    4. '    ' → logprob: -13.61282730102539
    5. '   ' → logprob: -14.11282730102539
    6. ' ' → logprob: -15.36282730102539
    7. '```' → logprob: -15.36282730102539
    8. '	b' → logprob: -15.48782730102539
    9. '(b' → logprob: -16.23782730102539
    10. '>b' → logprob: -16.48782730102539

Token 18: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038157057017087936
    2. ' ,' → logprob: -3.2881569862365723
    3. ',a' → logprob: -9.28815746307373
    4. ',
' → logprob: -11.41315746307373
    5. 'a' → logprob: -12.78815746307373
    6. ',b' → logprob: -13.03815746307373
    7. ' ' → logprob: -13.28815746307373
    8. ' a' → logprob: -13.66315746307373
    9. '`,' → logprob: -13.91315746307373
    10. ' ,
' → logprob: -14.78815746307373

Token 19: '%b' (ID: 148937)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12749671936035156
    2. '%' → logprob: -2.1274967193603516
    3. '%b' → logprob: -7.502496719360352
    4. '```' → logprob: -12.502496719360352
    5. ' ' → logprob: -12.752496719360352
    6. '%n' → logprob: -12.877496719360352
    7. '%i' → logprob: -13.502496719360352
    8. '`' → logprob: -14.127496719360352
    9. '%e' → logprob: -14.377496719360352
    10. '[' → logprob: -14.502496719360352

Token 20: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4218314290046692
    2. '<|end|>' → logprob: -1.2968313694000244
    3. ' 
' → logprob: -3.0468313694000244
    4. '\n' → logprob: -4.5468316078186035
    5. ' \' → logprob: -5.7968316078186035
    6. '<|end|>' → logprob: -6.2968316078186035
    7. '       ' → logprob: -6.4218316078186035
    8. '        ' → logprob: -6.6718316078186035
    9. '  
' → logprob: -7.1718316078186035
    10. '    ' → logprob: -7.1718316078186035

Token 21: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4227127134799957
    2. '    ' → logprob: -1.4227126836776733
    3. '<|end|>' → logprob: -3.172712802886963
    4. ' return' → logprob: -3.922712802886963
    5. ' 
' → logprob: -4.547712802886963
    6. '   ' → logprob: -4.547712802886963
    7. '       ' → logprob: -5.297712802886963
    8. 'return' (adapté à ' return') → logprob: -5.422712802886963
    9. '        ' → logprob: -6.047712802886963
    10. '  ' → logprob: -6.297712802886963

Token 23: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6367408633232117
    2. 'a' → logprob: -0.7617408633232117
    3. ' (' → logprob: -5.761740684509277
    4. ' ' → logprob: -7.386740684509277
    5. '(a' → logprob: -8.011740684509277
    6. '(' → logprob: -10.886740684509277
    7. '  ' → logprob: -11.886740684509277
    8. '   ' → logprob: -12.136740684509277
    9. '	a' → logprob: -13.011740684509277
    10. ',a' → logprob: -14.011740684509277

Token 24: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014587931334972382
    2. '<|end|>' → logprob: -4.389587879180908
    3. ',
' → logprob: -6.389587879180908
    4. '
' → logprob: -9.014588356018066
    5. '+' → logprob: -10.014588356018066
    6. '```' → logprob: -10.389588356018066
    7. ')' → logprob: -10.514588356018066
    8. ' ,' → logprob: -10.639588356018066
    9. ',

' → logprob: -10.889588356018066
    10. '<|end|>' → logprob: -10.889588356018066

Token 25: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45162487030029297
    2. '<|end|>' → logprob: -1.076624870300293
    3. '```' → logprob: -5.076624870300293
    4. ')' → logprob: -5.201624870300293
    5. '+' → logprob: -5.451624870300293
    6. '
' → logprob: -6.826624870300293
    7. '<|end|>' → logprob: -6.951624870300293
    8. '_' → logprob: -7.076624870300293
    9. '*' → logprob: -7.451624870300293
    10. ',
' → logprob: -7.576624870300293

Token 26: ' mod' (ID: 1812)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.16315126419067383
    2. ' mod' → logprob: -2.163151264190674
    3. ' eg' → logprob: -4.163151264190674
    4. 'g' → logprob: -4.538151264190674
    5. ' modular' → logprob: -6.038151264190674
    6. ' l' → logprob: -6.288151264190674
    7. ' extended' → logprob: -6.663151264190674
    8. ' g' → logprob: -6.788151264190674
    9. ' main' → logprob: -6.788151264190674
    10. ' ' → logprob: -8.163150787353516

Token 27: 'inv' (ID: 31086)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.3220203220844269
    2. '_inv' → logprob: -1.9470202922821045
    3. '_exp' → logprob: -2.8220202922821045
    4. 'inv' → logprob: -3.6970202922821045
    5. 'ular' → logprob: -4.072020530700684
    6. '_mul' → logprob: -4.947020530700684
    7. '_' → logprob: -4.947020530700684
    8. ' _' → logprob: -5.322020530700684
    9. '_pow' → logprob: -5.697020530700684
    10. '_add' → logprob: -5.822020530700684

Token 28: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005689987912774086
    2. '(a' → logprob: -5.630690097808838
    3. ' (' → logprob: -6.255690097808838
    4. '(n' → logprob: -9.63068962097168
    5. '(x' → logprob: -10.00568962097168
    6. '(token' → logprob: -10.63068962097168
    7. '<|end|>' → logprob: -11.88068962097168
    8. '(b' → logprob: -13.13068962097168
    9. '(i' → logprob: -13.38068962097168
    10. '(
' → logprob: -13.38068962097168

Token 29: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005643534241244197
    2. ' ,' → logprob: -7.8755645751953125
    3. ',a' → logprob: -9.125564575195312
    4. ',b' → logprob: -9.625564575195312
    5. ',n' → logprob: -12.250564575195312
    6. ')' → logprob: -13.500564575195312
    7. ',int' → logprob: -14.125564575195312
    8. ',num' → logprob: -14.875564575195312
    9. ',m' → logprob: -15.125564575195312
    10. ',p' → logprob: -15.500564575195312

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006347587914206088
    2. ')' → logprob: -7.750634670257568
    3. ',' → logprob: -8.875635147094727
    4. ' ):' → logprob: -9.875635147094727
    5. ':' → logprob: -11.625635147094727
    6. '):
' → logprob: -13.125635147094727
    7. '=' → logprob: -15.000635147094727
    8. '):
' → logprob: -15.000635147094727
    9. '),' → logprob: -15.625635147094727
    10. ',b' → logprob: -15.875635147094727

Token 31: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.20490802824497223
    2. '   ' → logprob: -1.704908013343811
    3. ' ' → logprob: -6.8299078941345215
    4. '<|end|>' → logprob: -7.2049078941345215
    5. '     
' → logprob: -8.45490837097168
    6. 'def' → logprob: -8.70490837097168
    7. '       ' → logprob: -8.95490837097168
    8. ',' → logprob: -9.32990837097168
    9. ' def' → logprob: -9.32990837097168
    10. 'n' → logprob: -9.45490837097168

Token 32: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23948271572589874
    2. ' a' → logprob: -2.6144826412200928
    3. '    ' → logprob: -3.4894826412200928
    4. ' t' → logprob: -3.8644826412200928
    5. 'a' → logprob: -4.489482879638672
    6. ' m' → logprob: -4.614482879638672
    7. 'def' → logprob: -4.614482879638672
    8. ' ' → logprob: -4.864482879638672
    9. ' b' → logprob: -4.989482879638672
    10. ' return' → logprob: -5.239482879638672

Token 33: ' mod' (ID: 1812)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0852400064468384
    2. '   ' → logprob: -1.2102400064468384
    3. ' def' → logprob: -2.460239887237549
    4. ' a' → logprob: -2.460239887237549
    5. ' eg' → logprob: -3.210239887237549
    6. 'def' → logprob: -4.210239887237549
    7. ' g' → logprob: -4.210239887237549
    8. 'return' → logprob: -4.335239887237549
    9. ' for' → logprob: -4.585239887237549
    10. ' ' → logprob: -4.585239887237549

Token 34: ' inverse' (ID: 53743)
  Prédit: 'ular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: -0.41635704040527344
    2. 'inv' → logprob: -1.4163570404052734
    3. ' ' → logprob: -3.6663570404052734
    4. '   ' → logprob: -3.6663570404052734
    5. ' inv' → logprob: -3.9163570404052734
    6. '  ' → logprob: -4.916357040405273
    7. ' inverse' → logprob: -5.291357040405273
    8. 'inverse' → logprob: -5.916357040405273
    9. ' a' → logprob: -6.291357040405273
    10. '_inverse' → logprob: -6.291357040405273

Token 35: ' exists' (ID: 13031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9248881936073303
    2. '   ' → logprob: -1.0498881340026855
    3. '=' → logprob: -2.1748881340026855
    4. '    ' → logprob: -2.4248881340026855
    5. ' ' → logprob: -3.9248881340026855
    6. ':' → logprob: -4.9248881340026855
    7. ' :' → logprob: -5.2998881340026855
    8. ',' → logprob: -5.4248881340026855
    9. 'def' → logprob: -5.7998881340026855
    10. ' a' → logprob: -6.0498881340026855

Token 36: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21252797544002533
    2. ' only' → logprob: -1.7125279903411865
    3. '   ' → logprob: -5.712527751922607
    4. ',' → logprob: -6.087527751922607
    5. '=' → logprob: -6.587527751922607
    6. 'if' → logprob: -6.962527751922607
    7. ' ' → logprob: -7.462527751922607
    8. ' =' → logprob: -7.462527751922607
    9. ' iff' → logprob: -7.712527751922607
    10. '    ' → logprob: -7.962527751922607

Token 37: ' gcd' (ID: 106918)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.36000940203666687
    2. 'a' → logprob: -2.3600094318389893
    3. ' (' → logprob: -2.4850094318389893
    4. ' long' → logprob: -2.9850094318389893
    5. '1' → logprob: -3.9850094318389893
    6. ' eg' → logprob: -3.9850094318389893
    7. ' ' → logprob: -4.98500919342041
    8. 'eg' → logprob: -5.23500919342041
    9. '    ' → logprob: -5.48500919342041
    10. ' b' → logprob: -5.61000919342041

Token 38: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001418207655660808
    2. '=' → logprob: -7.251418113708496
    3. '==' → logprob: -7.626418113708496
    4. ' ==' → logprob: -10.001418113708496
    5. 'a' → logprob: -10.126418113708496
    6. ' =' → logprob: -10.251418113708496
    7. '(' → logprob: -10.501418113708496
    8. '```' → logprob: -10.626418113708496
    9. ' (' → logprob: -11.001418113708496
    10. '===' → logprob: -12.126418113708496

Token 39: ',m' (ID: 26648)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03872763738036156
    2. ')' → logprob: -3.7887275218963623
    3. ',' → logprob: -4.288727760314941
    4. '(' → logprob: -8.038727760314941
    5. ',m' → logprob: -8.288727760314941
    6. '=' → logprob: -8.413727760314941
    7. ',a' → logprob: -8.413727760314941
    8. '(m' → logprob: -9.163727760314941
    9. ' (' → logprob: -9.538727760314941
    10. '   ' → logprob: -9.538727760314941

Token 40: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14490848779678345
    2. ')==' → logprob: -2.0199084281921387
    3. ' )' → logprob: -6.769908428192139
    4. '==' → logprob: -7.269908428192139
    5. ')!=' → logprob: -9.394908905029297
    6. ' ==' → logprob: -9.769908905029297
    7. '=' → logprob: -9.894908905029297
    8. ')=' → logprob: -10.019908905029297
    9. '```' → logprob: -10.019908905029297
    10. '   ' → logprob: -10.269908905029297

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603870838880539
    2. ' ' → logprob: -4.14103889465332
    3. '   ' → logprob: -13.01603889465332
    4. '```' → logprob: -14.14103889465332
    5. 'def' → logprob: -14.39103889465332
    6. '    ' → logprob: -15.39103889465332
    7. '=' → logprob: -15.51603889465332
    8. '==' → logprob: -16.01603889465332
    9. '0' → logprob: -16.01603889465332
    10. '  ' → logprob: -16.39103889465332

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053814660757780075
    2. ' if' → logprob: -3.303814649581909
    3. '    ' → logprob: -5.303814888000488
    4. '       ' → logprob: -5.303814888000488
    5. ' and' → logprob: -6.678814888000488
    6. ',' → logprob: -6.678814888000488
    7. ' ' → logprob: -7.053814888000488
    8. '  ' → logprob: -7.678814888000488
    9. '<|end|>' → logprob: -7.928814888000488
    10. '
' → logprob: -8.428814888000488

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002333428245037794
    2. ' if' → logprob: -6.502333641052246
    3. 'def' → logprob: -8.627333641052246
    4. '    ' → logprob: -8.877333641052246
    5. ',' → logprob: -9.002333641052246
    6. ' ' → logprob: -9.627333641052246
    7. '       ' → logprob: -9.627333641052246
    8. ' def' → logprob: -10.127333641052246
    9. '  ' → logprob: -10.252333641052246
    10. '
' → logprob: -10.377333641052246

Token 44: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07864761352539062
    2. '    ' → logprob: -3.7036476135253906
    3. 'g' → logprob: -3.8286476135253906
    4. ' g' → logprob: -4.328647613525391
    5. ' a' → logprob: -5.453647613525391
    6. ' return' → logprob: -5.953647613525391
    7. 'def' → logprob: -6.328647613525391
    8. 'a' → logprob: -6.703647613525391
    9. 'return' → logprob: -7.078647613525391
    10. 'eg' → logprob: -7.203647613525391

Token 45: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04965909197926521
    2. ',y' → logprob: -3.424659013748169
    3. '=' → logprob: -4.799659252166748
    4. ' =' → logprob: -5.174659252166748
    5. ' ,' → logprob: -6.799659252166748
    6. ',x' → logprob: -7.549659252166748
    7. ',s' → logprob: -9.79965877532959
    8. ',b' → logprob: -10.04965877532959
    9. ',a' → logprob: -10.17465877532959
    10. ' ' → logprob: -10.17465877532959

Token 46: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43722230195999146
    2. '=' → logprob: -1.0622222423553467
    3. ' =' → logprob: -4.812222480773926
    4. ' ,' → logprob: -9.187222480773926
    5. ',x' → logprob: -10.187222480773926
    6. ',a' → logprob: -10.562222480773926
    7. ',i' → logprob: -10.562222480773926
    8. ',u' → logprob: -10.687222480773926
    9. ',p' → logprob: -11.187222480773926
    10. ',s' → logprob: -11.312222480773926

Token 47: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0498984158039093
    2. ' =' → logprob: -3.174898386001587
    3. ',' → logprob: -5.799898624420166
    4. '0' → logprob: -5.924898624420166
    5. '=int' → logprob: -8.049898147583008
    6. 'od' → logprob: -8.799898147583008
    7. '_mod' → logprob: -9.299898147583008
    8. '_=' → logprob: -9.424898147583008
    9. '=m' → logprob: -9.799898147583008
    10. '=os' → logprob: -10.174898147583008

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22914282977581024
    2. '=' → logprob: -1.6041427850723267
    3. ',' → logprob: -5.604142665863037
    4. '=int' → logprob: -11.229143142700195
    5. ',x' → logprob: -12.104143142700195
    6. ' ,' → logprob: -12.479143142700195
    7. ',a' → logprob: -13.604143142700195
    8. ',b' → logprob: -13.854143142700195
    9. ',m' → logprob: -13.854143142700195
    10. ',t' → logprob: -13.979143142700195

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006463951431214809
    2. '0' → logprob: -5.631464004516602
    3. 'a' → logprob: -5.881464004516602
    4. 'm' → logprob: -9.631464004516602
    5. ' ' → logprob: -13.131464004516602
    6. '```' → logprob: -14.756464004516602
    7. '   ' → logprob: -15.256464004516602
    8. ' a' → logprob: -15.506464004516602
    9. '(' → logprob: -16.5064640045166
    10. '(a' → logprob: -17.1314640045166

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014788446016609669
    2. 'a' → logprob: -4.264788627624512
    3. '0' → logprob: -7.389788627624512
    4. 'm' → logprob: -12.139788627624512
    5. '```' → logprob: -14.889788627624512
    6. '(' → logprob: -15.014788627624512
    7. '(a' → logprob: -15.014788627624512
    8. '   ' → logprob: -15.889788627624512
    9. ' ' → logprob: -16.139787673950195
    10. ' a' → logprob: -16.264787673950195

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033945636823773384
    2. ' ,' → logprob: -6.503394603729248
    3. '<|end|>' → logprob: -6.503394603729248
    4. ' ' → logprob: -8.37839412689209
    5. ',m' → logprob: -10.12839412689209
    6. '<|end|>' → logprob: -10.37839412689209
    7. ',y' → logprob: -10.75339412689209
    8. '0' → logprob: -10.75339412689209
    9. ',None' → logprob: -11.00339412689209
    10. ',n' → logprob: -11.75339412689209

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '1' → logprob: -16.750059127807617
    4. '۰' → logprob: -17.125059127807617
    5. '   ' → logprob: -17.250059127807617
    6. '  ' → logprob: -18.500059127807617
    7. '    ' → logprob: -18.625059127807617
    8. '<|end|>' → logprob: -18.750059127807617
    9. '```' → logprob: -18.937559127807617
    10. '	' → logprob: -19.875059127807617

Token 53: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6437321305274963
    2. ',m' → logprob: -0.7687321305274963
    3. '<|end|>' → logprob: -4.643732070922852
    4. ' ,' → logprob: -7.768732070922852
    5. 'm' → logprob: -7.768732070922852
    6. ',y' → logprob: -9.018732070922852
    7. ',n' → logprob: -9.268732070922852
    8. '<|end|>' → logprob: -9.393732070922852
    9. ',M' → logprob: -9.518732070922852
    10. ',#' → logprob: -10.893732070922852

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5595348477363586
    2. '<|end|>' → logprob: -0.9345348477363586
    3. '<|end|>' → logprob: -4.059535026550293
    4. ',' → logprob: -4.559535026550293
    5. '   ' → logprob: -5.559535026550293
    6. ' ' → logprob: -7.184535026550293
    7. ' 
' → logprob: -7.309535026550293
    8. ' while' → logprob: -7.684535026550293
    9. '\n' → logprob: -8.184535026550293
    10. '  
' → logprob: -8.184535026550293

Token 55: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0448315143585205
    2. '<|end|>' → logprob: -1.6698315143585205
    3. 'n' → logprob: -1.9198315143585205
    4. '   ' → logprob: -2.0448315143585205
    5. ' ' → logprob: -2.7948315143585205
    6. 'while' → logprob: -3.1698315143585205
    7. '  ' → logprob: -3.6698315143585205
    8. ' while' → logprob: -4.294831275939941
    9. 'y' → logprob: -5.419831275939941
    10. '<|end|>' → logprob: -5.419831275939941

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12283831834793091
    2. '=' → logprob: -2.247838258743286
    3. '=a' → logprob: -5.372838497161865
    4. ',' → logprob: -6.372838497161865
    5. '=m' → logprob: -6.372838497161865
    6. 'a' → logprob: -7.997838497161865
    7. ' ' → logprob: -8.122838020324707
    8. 'm' → logprob: -8.247838020324707
    9. '=int' → logprob: -8.747838020324707
    10. '>' → logprob: -9.372838020324707

Token 58: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0017066054278984666
    2. ' m' → logprob: -6.376706600189209
    3. '   ' → logprob: -13.126707077026367
    4. 'a' → logprob: -13.376707077026367
    5. '```' → logprob: -15.251707077026367
    6. '  ' → logprob: -15.501707077026367
    7. ' ' → logprob: -15.626707077026367
    8. '1' → logprob: -15.876707077026367
    9. '	m' → logprob: -16.626707077026367
    10. '0' → logprob: -16.876707077026367

Token 59: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6865333318710327
    2. ' while' → logprob: -1.5615333318710327
    3. '   ' → logprob: -2.0615334510803223
    4. '<|end|>' → logprob: -2.8115334510803223
    5. '
' → logprob: -3.4365334510803223
    6. ',' → logprob: -4.061533451080322
    7. ' ' → logprob: -4.061533451080322
    8. '	while' → logprob: -4.561533451080322
    9. '```' → logprob: -5.186533451080322
    10. '>' → logprob: -5.436533451080322

Token 60: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.008297085762024
    2. '   ' → logprob: -1.133297085762024
    3. 'while' → logprob: -1.758297085762024
    4. '<|end|>' → logprob: -2.7582969665527344
    5. ',' → logprob: -3.1332969665527344
    6. '
' → logprob: -4.133296966552734
    7. '	while' → logprob: -4.633296966552734
    8. ' ' → logprob: -6.008296966552734
    9. '<|end|>' → logprob: -6.758296966552734
    10. '```' → logprob: -7.008296966552734

Token 61: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6266541481018066
    2. ' while' → logprob: -0.8766541481018066
    3. '   ' → logprob: -3.3766541481018066
    4. '
' → logprob: -4.751654148101807
    5. '<|end|>' → logprob: -6.126654148101807
    6. ',' → logprob: -7.001654148101807
    7. ' ' → logprob: -7.001654148101807
    8. '	while' → logprob: -7.001654148101807
    9. 'While' → logprob: -7.626654148101807
    10. ' 
' → logprob: -8.376653671264648

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3143359422683716
    2. ' b' → logprob: -1.3143359422683716
    3. 'a' → logprob: -7.064335823059082
    4. ' a' → logprob: -8.439335823059082
    5. '   ' → logprob: -13.689335823059082
    6. ' ' → logprob: -14.564335823059082
    7. '	b' → logprob: -15.564335823059082
    8. '    ' → logprob: -16.3143367767334
    9. ' not' → logprob: -16.8143367767334
    10. '>' → logprob: -16.9393367767334

Token 63: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4834677577018738
    2. ':' → logprob: -1.3584678173065186
    3. '>' → logprob: -2.4834678173065186
    4. ' !=' → logprob: -3.2334678173065186
    5. ':
' → logprob: -6.2334675788879395
    6. ' >' → logprob: -8.358468055725098
    7. '">' → logprob: -8.483468055725098
    8. '```' → logprob: -8.483468055725098
    9. '!==' → logprob: -9.358468055725098
    10. '<|end|>' → logprob: -9.358468055725098

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11779987066984177
    2. '   ' → logprob: -2.867799758911133
    3. '    ' → logprob: -4.242799758911133
    4. ' ' → logprob: -4.617799758911133
    5. '<|end|>' → logprob: -4.617799758911133
    6. '>' → logprob: -5.617799758911133
    7. '```' → logprob: -5.742799758911133
    8. ':' → logprob: -6.117799758911133
    9. ',' → logprob: -6.492799758911133
    10. '      ' → logprob: -6.867799758911133

Token 65: ' q' (ID: 2335)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8157972693443298
    2. 'a' → logprob: -1.5657973289489746
    3. 'q' (adapté à ' q') → logprob: -1.6907973289489746
    4. ' x' → logprob: -2.8157973289489746
    5. ' q' → logprob: -3.0657973289489746
    6. ' a' → logprob: -3.0657973289489746
    7. '       ' → logprob: -6.190797328948975
    8. '   ' → logprob: -6.565797328948975
    9. ' (' → logprob: -6.815797328948975
    10. 't' → logprob: -6.940797328948975

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025110673159360886
    2. ' =' → logprob: -3.9001107215881348
    3. ',' → logprob: -5.400110721588135
    4. '=q' → logprob: -10.775110244750977
    5. ',q' → logprob: -12.275110244750977
    6. '=a' → logprob: -12.525110244750977
    7. '=int' → logprob: -12.775110244750977
    8. '=x' → logprob: -13.400110244750977
    9. ' ,' → logprob: -13.775110244750977
    10. ',a' → logprob: -14.025110244750977

Token 67: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3871593773365021
    2. ' a' → logprob: -1.1371593475341797
    3. 'x' → logprob: -8.38715934753418
    4. ' x' → logprob: -9.76215934753418
    5. 'b' → logprob: -14.01215934753418
    6. '	a' → logprob: -14.01215934753418
    7. ' ' → logprob: -14.51215934753418
    8. ' ' → logprob: -16.26215934753418
    9. ' b' → logprob: -16.26215934753418
    10. ''a' → logprob: -16.26215934753418

Token 68: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.003606959478929639
    2. ' //' → logprob: -5.628606796264648
    3. ' ' → logprob: -12.378606796264648
    4. 'b' → logprob: -13.878606796264648
    5. '//=' → logprob: -14.378606796264648
    6. 'div' → logprob: -14.753606796264648
    7. '/' → logprob: -15.503606796264648
    8. '#' → logprob: -15.753606796264648
    9. '```' → logprob: -16.25360679626465
    10. 'q' → logprob: -16.50360679626465

Token 69: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.36574100604048e-06
    2. ' b' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.125003814697266
    4. '>b' → logprob: -18.375003814697266
    5. '%b' → logprob: -19.375003814697266
    6. ')b' → logprob: -19.875003814697266
    7. '	b' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.875003814697266
    9. '*b' → logprob: -20.875003814697266
    10. ' ' → logprob: -21.000003814697266

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005035336595028639
    2. 'a' → logprob: -5.755035400390625
    3. '       ' → logprob: -6.880035400390625
    4. 't' → logprob: -7.755035400390625
    5. 'r' → logprob: -8.255035400390625
    6. ' x' → logprob: -9.380035400390625
    7. '   ' → logprob: -10.505035400390625
    8. ' a' → logprob: -11.380035400390625
    9. ',x' → logprob: -12.505035400390625
    10. ',' → logprob: -12.630035400390625

Token 72: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.314181923866272
    2. 'a' (adapté à ' a') → logprob: -1.314181923866272
    3. 't' → logprob: -7.814181804656982
    4. ' a' → logprob: -8.31418228149414
    5. ' x' → logprob: -8.56418228149414
    6. '   ' → logprob: -10.06418228149414
    7. 'r' → logprob: -10.56418228149414
    8. ' ' → logprob: -12.93918228149414
    9. '  ' → logprob: -12.93918228149414
    10. '    ' → logprob: -13.56418228149414

Token 73: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3163503408432007
    2. ',' → logprob: -1.3163503408432007
    3. '%b' → logprob: -5.94135046005249
    4. '%' → logprob: -8.066349983215332
    5. 'b' → logprob: -10.191349983215332
    6. ',q' → logprob: -10.316349983215332
    7. ',a' → logprob: -10.691349983215332
    8. ',t' → logprob: -10.816349983215332
    9. ' ,' → logprob: -11.816349983215332
    10. ',y' → logprob: -12.441349983215332

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5783172845840454
    2. '=' → logprob: -0.8283172845840454
    3. ',' → logprob: -6.078317165374756
    4. ' ,' → logprob: -9.953317642211914
    5. '=b' → logprob: -10.953317642211914
    6. ',b' → logprob: -11.328317642211914
    7. ' b' → logprob: -12.828317642211914
    8. 'b' → logprob: -13.828317642211914
    9. ' ' → logprob: -13.828317642211914
    10. '=a' → logprob: -14.953317642211914

Token 75: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38689419627189636
    2. 'b' → logprob: -1.1368942260742188
    3. '   ' → logprob: -11.261894226074219
    4. ' ' → logprob: -12.511894226074219
    5. '    ' → logprob: -13.011894226074219
    6. '	b' → logprob: -13.761894226074219
    7. '  ' → logprob: -14.824394226074219
    8. ',b' → logprob: -14.824394226074219
    9. '>b' → logprob: -15.199394226074219
    10. ' ' → logprob: -15.199394226074219

Token 76: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.2589121460914612
    2. ',' → logprob: -1.5089120864868164
    3. 'a' → logprob: -5.133912086486816
    4. ',q' → logprob: -7.633912086486816
    5. ' ,' → logprob: -8.133912086486816
    6. ' a' → logprob: -8.383912086486816
    7. ',x' → logprob: -10.508912086486816
    8. ',b' → logprob: -11.258912086486816
    9. ',y' → logprob: -11.383912086486816
    10. ',m' → logprob: -13.383912086486816

Token 77: '%b' (ID: 148937)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6954372525215149
    2. '-' → logprob: -1.1954371929168701
    3. '%' → logprob: -1.9454371929168701
    4. ' %' → logprob: -2.94543719291687
    5. '%b' → logprob: -6.820437431335449
    6. '-q' → logprob: -6.945437431335449
    7. ' ' → logprob: -7.570437431335449
    8. ' q' → logprob: -8.57043743133545
    9. 'q' → logprob: -9.69543743133545
    10. 'mod' → logprob: -9.94543743133545

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4445231854915619
    2. '
' → logprob: -1.0695232152938843
    3. ',' → logprob: -5.444523334503174
    4. '<|end|>' → logprob: -5.944523334503174
    5. 'x' → logprob: -6.069523334503174
    6. '        
' → logprob: -6.319523334503174
    7. '
' → logprob: -6.444523334503174
    8. ' 
' → logprob: -6.819523334503174
    9. ' x' → logprob: -7.319523334503174
    10. '  
' → logprob: -8.069522857666016

Token 79: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12645485997200012
    2. '       ' → logprob: -2.2514548301696777
    3. ' x' → logprob: -5.126454830169678
    4. '```' → logprob: -5.626454830169678
    5. ',x' → logprob: -6.376454830169678
    6. ',' → logprob: -6.501454830169678
    7. 'y' → logprob: -9.001455307006836
    8. '   ' → logprob: -9.001455307006836
    9. '``' → logprob: -9.126455307006836
    10. ',y' → logprob: -9.376455307006836

Token 80: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -4.9424725148128346e-05
    2. ' x' → logprob: -10.500049591064453
    3. 'y' → logprob: -10.750049591064453
    4. '"x' → logprob: -15.875049591064453
    5. '   ' → logprob: -16.250049591064453
    6. '	x' → logprob: -16.375049591064453
    7. ',x' → logprob: -17.000049591064453
    8. ' y' → logprob: -17.375049591064453
    9. '    ' → logprob: -18.625049591064453
    10. '%x' → logprob: -19.000049591064453

Token 81: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.045632679015398026
    2. ',' → logprob: -3.1706326007843018
    3. ',x' → logprob: -6.045632839202881
    4. ',b' → logprob: -8.545632362365723
    5. ',q' → logprob: -10.420632362365723
    6. ',m' → logprob: -11.795632362365723
    7. ',t' → logprob: -12.170632362365723
    8. ',new' → logprob: -12.295632362365723
    9. ',s' → logprob: -12.295632362365723
    10. ',k' → logprob: -12.545632362365723

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00278645777143538
    2. ' =' → logprob: -6.377786636352539
    3. ',' → logprob: -6.877786636352539
    4. '=y' → logprob: -10.252786636352539
    5. ',y' → logprob: -11.127786636352539
    6. ' ,' → logprob: -14.127786636352539
    7. 'y' → logprob: -14.752786636352539
    8. '=q' → logprob: -15.002786636352539
    9. '=user' → logprob: -15.252786636352539
    10. '=

' → logprob: -15.627786636352539

Token 83: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2520095109939575
    2. ' y' → logprob: -1.5020095109939575
    3. '	y' → logprob: -9.752009391784668
    4. '(y' → logprob: -11.252009391784668
    5. ',y' → logprob: -12.252009391784668
    6. '‘y' → logprob: -14.127009391784668
    7. '   ' → logprob: -14.252009391784668
    8. '=y' → logprob: -14.627009391784668
    9. '<|end|>' → logprob: -14.877009391784668
    10. ' ' → logprob: -15.002009391784668

Token 84: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20181189477443695
    2. ',x' → logprob: -1.7018119096755981
    3. ' ,' → logprob: -8.076811790466309
    4. 'x' → logprob: -9.951811790466309
    5. ',q' → logprob: -11.076811790466309
    6. '-' → logprob: -12.451811790466309
    7. ',b' → logprob: -12.826811790466309
    8. ',y' → logprob: -12.826811790466309
    9. '```' → logprob: -12.826811790466309
    10. ' ' → logprob: -13.451811790466309

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5380330085754395
    2. '-' → logprob: -1.0380330085754395
    3. ' x' → logprob: -3.4130330085754395
    4. ' ' → logprob: -4.1630330085754395
    5. 'x' → logprob: -5.1630330085754395
    6. ' q' → logprob: -5.5380330085754395
    7. 'q' → logprob: -6.5380330085754395
    8. '-q' → logprob: -7.0380330085754395
    9. ' y' → logprob: -8.038032531738281
    10. '   ' → logprob: -8.038032531738281

Token 86: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006716317031532526
    2. ' q' → logprob: -5.006716251373291
    3. 'qy' → logprob: -14.63171672821045
    4. 'qx' → logprob: -15.25671672821045
    5. '	q' → logprob: -15.50671672821045
    6. '(q' → logprob: -17.381715774536133
    7. '*q' → logprob: -18.006715774536133
    8. ' ' → logprob: -18.256715774536133
    9. ' ' → logprob: -18.506715774536133
    10. '?q' → logprob: -19.131715774536133

Token 87: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.10035073012113571
    2. '*' → logprob: -2.3503506183624268
    3. 'y' → logprob: -8.850350379943848
    4. ' *' → logprob: -14.600350379943848
    5. '   ' → logprob: -15.850350379943848
    6. '*b' → logprob: -16.600351333618164
    7. '```' → logprob: -16.975351333618164
    8. '"*' → logprob: -17.350351333618164
    9. '*x' → logprob: -17.475351333618164
    10. ' ' → logprob: -18.225351333618164

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29485052824020386
    2. '<|end|>' → logprob: -1.5448505878448486
    3. '       ' → logprob: -4.5448503494262695
    4. ' 
' → logprob: -5.2948503494262695
    5. '  
' → logprob: -5.2948503494262695
    6. ' return' → logprob: -5.4198503494262695
    7. '
' → logprob: -5.5448503494262695
    8. '    
' → logprob: -5.5448503494262695
    9. '    ' → logprob: -5.9198503494262695
    10. ' ' → logprob: -6.1698503494262695

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016376927960664034
    2. '    
' → logprob: -7.3766374588012695
    3. ' ' → logprob: -8.12663745880127
    4. ',' → logprob: -8.87663745880127
    5. ' return' → logprob: -9.37663745880127
    6. '<|end|>' → logprob: -9.37663745880127
    7. '    ' → logprob: -9.62663745880127
    8. ' 
' → logprob: -9.75163745880127
    9. ' x' → logprob: -10.00163745880127
    10. '  
' → logprob: -10.00163745880127

Token 90: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4050734341144562
    2. ' return' → logprob: -1.6550734043121338
    3. ' x' → logprob: -2.405073404312134
    4. 'return' (adapté à ' return') → logprob: -3.905073404312134
    5. ' if' → logprob: -4.155073642730713
    6. 'x' → logprob: -4.280073642730713
    7. '    ' → logprob: -7.280073642730713
    8. 'if' → logprob: -7.280073642730713
    9. ' ' → logprob: -8.530073165893555
    10. 'eturn' → logprob: -9.155073165893555

Token 91: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023249205201864243
    2. ' x' → logprob: -3.7732491493225098
    3. '(x' → logprob: -12.898249626159668
    4. ' (' → logprob: -14.773249626159668
    5. '	x' → logprob: -14.898249626159668
    6. '"x' → logprob: -15.523249626159668
    7. '%x' → logprob: -16.39824867248535
    8. ' ' → logprob: -16.77324867248535
    9. ',x' → logprob: -17.02324867248535
    10. ')x' → logprob: -17.89824867248535

Token 92: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07995739579200745
    2. '%' → logprob: -2.5799574851989746
    3. '%m' → logprob: -7.704957485198975
    4. ' if' → logprob: -8.704957008361816
    5. '<|end|>' → logprob: -8.954957008361816
    6. '%x' → logprob: -9.204957008361816
    7. '%n' → logprob: -9.454957008361816
    8. ' mod' → logprob: -9.579957008361816
    9. ' ' → logprob: -10.454957008361816
    10. ' %#' → logprob: -11.204957008361816

Token 93: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001584850688232109
    2. ' m' → logprob: -8.750158309936523
    3. ' ' → logprob: -20.000158309936523
    4. '	m' → logprob: -20.000158309936523
    5. '   ' → logprob: -20.500158309936523
    6. '  ' → logprob: -21.125158309936523
    7. '%m' → logprob: -21.250158309936523
    8. '<m' → logprob: -22.500158309936523
    9. '#m' → logprob: -22.500158309936523
    10. '```' → logprob: -22.875158309936523

Token 94: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' decode' (ID: 32043)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16169869899749756
    2. ' rsa' → logprob: -2.786698818206787
    3. ' encrypt' → logprob: -2.911698818206787
    4. ' gcd' → logprob: -4.661698818206787
    5. ' is' → logprob: -4.786698818206787
    6. ' mod' → logprob: -5.286698818206787
    7. ' pow' → logprob: -5.786698818206787
    8. ' l' → logprob: -6.911698818206787
    9. ' solve' → logprob: -6.911698818206787
    10. ' modular' → logprob: -7.161698818206787

Token 98: '(cipher' (ID: 181734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21928389370441437
    2. '(cipher' → logprob: -2.4692838191986084
    3. '(encoded' → logprob: -3.2192838191986084
    4. '_cipher' → logprob: -4.0942840576171875
    5. '(code' → logprob: -4.4692840576171875
    6. '(message' → logprob: -4.4692840576171875
    7. '(data' → logprob: -4.5942840576171875
    8. '(token' → logprob: -5.2192840576171875
    9. '_message' → logprob: -5.8442840576171875
    10. '(base' → logprob: -6.2192840576171875

Token 99: ',' (ID: 11)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.03161546215415001
    2. ',' → logprob: -4.531615257263184
    3. '):' → logprob: -4.656615257263184
    4. '_text' → logprob: -4.656615257263184
    5. ',text' → logprob: -6.781615257263184
    6. '):
' → logprob: -9.156615257263184
    7. ',int' → logprob: -10.531615257263184
    8. ')' → logprob: -10.781615257263184
    9. 'txt' → logprob: -11.031615257263184
    10. 'ed' → logprob: -11.406615257263184

Token 100: ' a' (ID: 261)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6832672357559204
    2. ' key' → logprob: -1.3082672357559204
    3. 'd' → logprob: -2.683267116546631
    4. 'private' → logprob: -3.683267116546631
    5. 'n' → logprob: -3.808267116546631
    6. 'e' → logprob: -3.808267116546631
    7. ' private' → logprob: -4.058267116546631
    8. ' d' → logprob: -4.058267116546631
    9. ' n' → logprob: -4.433267116546631
    10. 'priv' → logprob: -4.558267116546631

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05353311076760292
    2. ' ,' → logprob: -3.8035330772399902
    3. ',key' → logprob: -4.67853307723999
    4. '_key' → logprob: -4.92853307723999
    5. '):' → logprob: -5.17853307723999
    6. ',b' → logprob: -6.05353307723999
    7. ',c' → logprob: -6.55353307723999
    8. ',a' → logprob: -6.67853307723999
    9. ',n' → logprob: -7.42853307723999
    10. '_,' → logprob: -8.303533554077148

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03805778920650482
    2. ' b' → logprob: -3.288057804107666
    3. ' ' → logprob: -11.538057327270508
    4. 'm' → logprob: -13.163057327270508
    5. '   ' → logprob: -13.913057327270508
    6. 'c' → logprob: -14.413057327270508
    7. '```' → logprob: -14.725557327270508
    8. '	b' → logprob: -14.788057327270508
    9. 'mod' → logprob: -14.788057327270508
    10. 'inv' → logprob: -14.975557327270508

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001637300301808864
    2. ',' → logprob: -9.125164031982422
    3. ':' → logprob: -10.000164031982422
    4. ')' → logprob: -12.375164031982422
    5. '):
' → logprob: -12.375164031982422
    6. ' ):' → logprob: -14.625164031982422
    7. '}:' → logprob: -16.000164031982422
    8. ']:' → logprob: -16.125164031982422
    9. '():' → logprob: -16.375164031982422
    10. '   ' → logprob: -17.125164031982422

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008701292099431157
    2. 'plaintext' → logprob: -7.875870227813721
    3. ' plaintext' → logprob: -8.000869750976562
    4. ' result' → logprob: -9.375869750976562
    5. 'n' → logprob: -11.125869750976562
    6. ' decoded' → logprob: -11.500869750976562
    7. ' plain' → logprob: -11.750869750976562
    8. 'decoded' → logprob: -11.750869750976562
    9. 'result' → logprob: -12.000869750976562
    10. '   ' → logprob: -12.375869750976562

Token 105: ' a' (ID: 261)
  Prédit: 'plaintext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plaintext' → logprob: -0.39264652132987976
    2. 'plain' → logprob: -1.8926465511322021
    3. '   ' → logprob: -2.517646551132202
    4. 'result' → logprob: -2.892646551132202
    5. 'decoded' → logprob: -3.642646551132202
    6. ' plaintext' → logprob: -5.267646312713623
    7. 'n' → logprob: -6.267646312713623
    8. ' plain' → logprob: -6.392646312713623
    9. ' result' → logprob: -6.517646312713623
    10. 'res' → logprob: -8.017646789550781

Token 106: '_inv' (ID: 53427)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46171584725379944
    2. ',' → logprob: -1.836715817451477
    3. '_inv' → logprob: -1.961715817451477
    4. ' =' → logprob: -2.8367159366607666
    5. 'inv' → logprob: -5.4617156982421875
    6. '_inverse' → logprob: -5.5867156982421875
    7. 'inverse' → logprob: -7.3367156982421875
    8. 'def' → logprob: -7.5867156982421875
    9. '**' → logprob: -8.836715698242188
    10. '   ' → logprob: -8.836715698242188

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300331324338913
    2. '=' → logprob: -3.1680033206939697
    3. ',' → logprob: -12.66800308227539
    4. ' ' → logprob: -15.04300308227539
    5. '  ' → logprob: -15.29300308227539
    6. ')' → logprob: -16.16800308227539
    7. ' =)' → logprob: -16.16800308227539
    8. 'a' → logprob: -16.29300308227539
    9. ' =
' → logprob: -17.04300308227539
    10. '   ' → logprob: -17.16800308227539

Token 108: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.16022644937038422
    2. 'mod' → logprob: -1.9102264642715454
    3. '	mod' → logprob: -13.410226821899414
    4. '   ' → logprob: -14.785226821899414
    5. '(mod' → logprob: -15.035226821899414
    6. ' ' → logprob: -16.785226821899414
    7. ' a' → logprob: -18.035226821899414
    8. ' мод' → logprob: -18.285226821899414
    9. ' modul' → logprob: -18.285226821899414
    10. ' modular' → logprob: -18.410226821899414

Token 109: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00013452880375552922
    2. 'a' → logprob: -9.000134468078613
    3. '(a' → logprob: -12.625134468078613
    4. ' inv' → logprob: -12.625134468078613
    5. '(inv' → logprob: -13.375134468078613
    6. 'invert' → logprob: -13.750134468078613
    7. '   ' → logprob: -15.000134468078613
    8. ' a' → logprob: -15.125134468078613
    9. '```' → logprob: -15.500134468078613
    10. 'inf' → logprob: -15.625134468078613

Token 110: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008060562540777028
    2. '(' → logprob: -7.125805854797363
    3. 'a' → logprob: -14.000805854797363
    4. ' (' → logprob: -15.375805854797363
    5. '(ai' → logprob: -15.625805854797363
    6. '<|end|>' → logprob: -15.875805854797363
    7. '(
' → logprob: -16.25080680847168
    8. ')(' → logprob: -16.75080680847168
    9. ')' → logprob: -17.37580680847168
    10. '('' → logprob: -17.87580680847168

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008617172949016094
    2. ',m' → logprob: -5.133617401123047
    3. ')' → logprob: -6.008617401123047
    4. ',b' → logprob: -9.383617401123047
    5. ' ,' → logprob: -9.508617401123047
    6. ',a' → logprob: -10.758617401123047
    7. ',len' → logprob: -11.133617401123047
    8. ',c' → logprob: -11.508617401123047
    9. ',)' → logprob: -12.008617401123047
    10. '   ' → logprob: -12.383617401123047

Token 112: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.00150390958879143
    2. ' ' → logprob: -6.501503944396973
    3. '27' → logprob: -14.376503944396973
    4. '256' → logprob: -15.001503944396973
    5. 'm' → logprob: -15.501503944396973
    6. '   ' → logprob: -15.751503944396973
    7. ' ' → logprob: -16.251502990722656
    8. '```' → logprob: -16.751502990722656
    9. ')' → logprob: -17.001502990722656
    10. '25' → logprob: -17.376502990722656

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.702754474943504e-05
    2. ')
' → logprob: -10.25003719329834
    3. ' )' → logprob: -14.25003719329834
    4. ')

' → logprob: -14.50003719329834
    5. ')
' → logprob: -15.37503719329834
    6. '   ' → logprob: -16.250036239624023
    7. '),' → logprob: -18.500036239624023
    8. '')' → logprob: -18.875036239624023
    9. ' ' → logprob: -19.000036239624023
    10. '")' → logprob: -19.125036239624023

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15218044817447662
    2. 'result' → logprob: -3.0271804332733154
    3. ' result' → logprob: -3.2771804332733154
    4. 'plaintext' → logprob: -3.6521804332733154
    5. 'decoded' → logprob: -4.2771806716918945
    6. ' decoded' → logprob: -5.0271806716918945
    7. ' plaintext' → logprob: -5.7771806716918945
    8. '    
' → logprob: -7.0271806716918945
    9. ' decrypted' → logprob: -7.2771806716918945
    10. '<|end|>' → logprob: -7.5271806716918945

Token 115: ' res' (ID: 694)
  Prédit: 'plaintext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plaintext' → logprob: -0.34363099932670593
    2. 'plain' → logprob: -1.5936310291290283
    3. ' plaintext' → logprob: -3.2186310291290283
    4. ' plain' → logprob: -3.5936310291290283
    5. 'decoded' → logprob: -4.468630790710449
    6. 'result' → logprob: -5.593630790710449
    7. ' result' → logprob: -6.343630790710449
    8. ' decoded' → logprob: -6.593630790710449
    9. '   ' → logprob: -6.968630790710449
    10. ' decrypted' → logprob: -7.843630790710449

Token 116: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.28275907039642334
    2. ' =' → logprob: -1.4077590703964233
    3. '=' → logprob: -6.782759189605713
    4. 'ULT' → logprob: -8.532758712768555
    5. 'ults' → logprob: -8.657758712768555
    6. 'ultat' → logprob: -10.532758712768555
    7. '=[]' → logprob: -11.282758712768555
    8. '=""' → logprob: -11.407758712768555
    9. ' ' → logprob: -11.407758712768555
    10. 'ault' → logprob: -11.532758712768555

Token 117: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.041120242327451706
    2. '''' → logprob: -3.2911202907562256
    3. '[]' → logprob: -6.1661200523376465
    4. ' ""' → logprob: -7.5411200523376465
    5. '"' → logprob: -7.7911200523376465
    6. ' []' → logprob: -11.041120529174805
    7. ' ''' → logprob: -11.666120529174805
    8. ''' → logprob: -12.291120529174805
    9. '[' → logprob: -15.291120529174805
    10. '"",' → logprob: -15.666120529174805

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054925158619880676
    2. ' for' → logprob: -3.0549252033233643
    3. '<|end|>' → logprob: -5.554924964904785
    4. 'for' → logprob: -6.804924964904785
    5. ' ' → logprob: -7.304924964904785
    6. '	for' → logprob: -7.804924964904785
    7. '<|end|>' → logprob: -9.554924964904785
    8. '    
' → logprob: -10.179924964904785
    9. '
' → logprob: -10.304924964904785
    10. '  ' → logprob: -10.554924964904785

Token 119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4766429364681244
    2. ' for' → logprob: -0.9766429662704468
    3. '   ' → logprob: -5.976643085479736
    4. ' ' → logprob: -10.726642608642578
    5. '	for' → logprob: -13.601642608642578
    6. '```' → logprob: -13.601642608642578
    7. '
' → logprob: -14.351642608642578
    8. ' ' → logprob: -15.976642608642578
    9. '  ' → logprob: -16.601642608642578
    10. '    
' → logprob: -16.976642608642578

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13126860558986664
    2. ' c' → logprob: -2.1312685012817383
    3. ' i' → logprob: -6.631268501281738
    4. 'char' → logprob: -6.631268501281738
    5. 'i' → logprob: -6.881268501281738
    6. ' char' → logprob: -8.006268501281738
    7. 'ch' → logprob: -8.131268501281738
    8. ' ch' → logprob: -10.631268501281738
    9. ' ' → logprob: -12.006268501281738
    10. 'x' → logprob: -12.381268501281738

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011150982230901718
    2. 'in' → logprob: -4.51115083694458
    3. ' ' → logprob: -9.386151313781738
    4. '  ' → logprob: -12.136151313781738
    5. '   ' → logprob: -12.386151313781738
    6. ',' → logprob: -13.136151313781738
    7. 'import' → logprob: -13.511151313781738
    8. 'n' → logprob: -13.636151313781738
    9. 's' → logprob: -13.886151313781738
    10. ' ,' → logprob: -13.886151313781738

Token 122: ' cipher' (ID: 56483)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -0.20149558782577515
    2. ' cipher' → logprob: -1.70149564743042
    3. '(cipher' → logprob: -9.451495170593262
    4. 'res' → logprob: -13.951495170593262
    5. 'range' → logprob: -14.451495170593262
    6. 'c' → logprob: -14.576495170593262
    7. '"' → logprob: -14.576495170593262
    8. 'cip' → logprob: -15.076495170593262
    9. ' ciphertext' → logprob: -15.076495170593262
    10. ' range' → logprob: -15.201495170593262

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022693241480737925
    2. ':
' → logprob: -6.127269268035889
    3. '):' → logprob: -9.877269744873047
    4. ' :' → logprob: -11.252269744873047
    5. '):
' → logprob: -11.252269744873047
    6. '   ' → logprob: -13.002269744873047
    7. ')' → logprob: -14.377269744873047
    8. '=' → logprob: -14.502269744873047
    9. ':
' → logprob: -14.752269744873047
    10. ':

' → logprob: -14.877269744873047

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024156268045771867
    2. ' if' → logprob: -8.50024127960205
    3. '    ' → logprob: -11.00024127960205
    4. '```' → logprob: -12.00024127960205
    5. '   ' → logprob: -12.50024127960205
    6. '<|end|>' → logprob: -12.62524127960205
    7. '        ' → logprob: -13.62524127960205
    8. '      ' → logprob: -13.75024127960205
    9. ' ' → logprob: -13.87524127960205
    10. ',' → logprob: -14.25024127960205

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23896676301956177
    2. 'if' (adapté à ' if') → logprob: -1.863966703414917
    3. '       ' → logprob: -2.863966703414917
    4. ' code' → logprob: -9.238966941833496
    5. ' x' → logprob: -9.738966941833496
    6. ' i' → logprob: -9.988966941833496
    7. '    ' → logprob: -10.988966941833496
    8. 'n' → logprob: -10.988966941833496
    9. '```' → logprob: -10.988966941833496
    10. ' n' → logprob: -10.988966941833496

Token 126: ' '' (ID: 461)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06255865842103958
    2. 'c' → logprob: -3.687558650970459
    3. ''' → logprob: -3.812558650970459
    4. ' '' → logprob: -4.312558650970459
    5. ' ' → logprob: -9.687559127807617
    6. ' ord' → logprob: -10.812559127807617
    7. ' not' → logprob: -11.187559127807617
    8. '65' → logprob: -12.625059127807617
    9. '	c' → logprob: -12.937559127807617
    10. '"' → logprob: -13.062559127807617

Token 127: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011835616314783692
    2. 'a' → logprob: -6.75118350982666
    3. ' A' → logprob: -11.87618350982666
    4. ''A' → logprob: -12.12618350982666
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.25118350982666
    6. ' '' → logprob: -15.75118350982666
    7. '65' → logprob: -16.251184463500977
    8. ''' → logprob: -16.751184463500977
    9. ''a' → logprob: -17.251184463500977
    10. '_A' → logprob: -17.376184463500977

Token 128: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.610702363715973e-06
    2. '<=' → logprob: -12.625009536743164
    3. ''<' → logprob: -13.000009536743164
    4. ''''' → logprob: -13.625009536743164
    5. ' <=' → logprob: -14.125009536743164
    6. ''>' → logprob: -15.125009536743164
    7. ''z' → logprob: -15.625009536743164
    8. ''in' → logprob: -15.750009536743164
    9. 'c' → logprob: -15.875009536743164
    10. 'a' → logprob: -16.000009536743164

Token 129: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2812250256538391
    2. '<=' → logprob: -1.4062249660491943
    3. ''' → logprob: -10.531225204467773
    4. '[' → logprob: -11.406225204467773
    5. '=' → logprob: -11.656225204467773
    6. 'ord' → logprob: -12.031225204467773
    7. ' ' → logprob: -12.656225204467773
    8. ')<=' → logprob: -12.656225204467773
    9. ')' → logprob: -12.781225204467773
    10. '   ' → logprob: -13.281225204467773

Token 130: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033546582562848926
    2. ' c' → logprob: -8.000335693359375
    3. '	c' → logprob: -17.875335693359375
    4. ')c' → logprob: -18.375335693359375
    5. '```' → logprob: -18.750335693359375
    6. '_c' → logprob: -19.000335693359375
    7. '%c' → logprob: -19.000335693359375
    8. '<c' → logprob: -20.000335693359375
    9. 'с' → logprob: -20.125335693359375
    10. '   ' → logprob: -20.125335693359375

Token 131: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.030438166111707687
    2. '<=' → logprob: -3.530438184738159
    3. ' and' → logprob: -7.53043794631958
    4. 'and' → logprob: -9.030438423156738
    5. '[' → logprob: -11.530438423156738
    6. '```' → logprob: -12.155438423156738
    7. '<' → logprob: -12.530438423156738
    8. 'e' → logprob: -13.280438423156738
    9. ' ' → logprob: -13.530438423156738
    10. 'def' → logprob: -13.905438423156738

Token 132: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -9.77022064034827e-05
    2. ' '' → logprob: -9.875097274780273
    3. ''y' → logprob: -10.250097274780273
    4. '‘z' → logprob: -11.875097274780273
    5. 'z' → logprob: -13.125097274780273
    6. ''' → logprob: -13.875097274780273
    7. ' ' → logprob: -15.250097274780273
    8. '’z' → logprob: -15.500097274780273
    9. ''s' → logprob: -15.875097274780273
    10. ''x' → logprob: -16.500097274780273

Token 133: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0004306692280806601
    2. ''z' → logprob: -7.750430583953857
    3. ''' → logprob: -18.250431060791016
    4. ' z' → logprob: -19.500431060791016
    5. '_z' → logprob: -20.250431060791016
    6. '‘z' → logprob: -20.500431060791016
    7. '	z' → logprob: -20.625431060791016
    8. ':z' → logprob: -22.625431060791016
    9. '.z' → logprob: -23.250431060791016
    10. '```' → logprob: -23.375431060791016

Token 134: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16269628703594208
    2. ':' → logprob: -2.537696361541748
    3. '':
' → logprob: -2.662696361541748
    4. ':
' → logprob: -7.287696361541748
    5. ''' → logprob: -7.662696361541748
    6. '       ' → logprob: -10.16269588470459
    7. ' :' → logprob: -10.16269588470459
    8. '':

' → logprob: -10.53769588470459
    9. ' ':' → logprob: -10.78769588470459
    10. '):' → logprob: -11.03769588470459

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19575239717960358
    2. '        ' → logprob: -2.4457523822784424
    3. ' ' → logprob: -2.5707523822784424
    4. '            ' → logprob: -5.6957526206970215
    5. '<|end|>' → logprob: -5.6957526206970215
    6. '       ' → logprob: -5.8207526206970215
    7. '```' → logprob: -6.9457526206970215
    8. 'n' → logprob: -7.3207526206970215
    9. '        
' → logprob: -7.5707526206970215
    10. '            
' → logprob: -8.070752143859863

Token 136: ' val' (ID: 1459)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13459771871566772
    2. 'x' → logprob: -2.7595977783203125
    3. '           ' → logprob: -3.6345977783203125
    4. ' num' → logprob: -5.2595977783203125
    5. ' t' → logprob: -5.3845977783203125
    6. ' y' → logprob: -5.7595977783203125
    7. ' p' → logprob: -6.1345977783203125
    8. ' n' → logprob: -6.1345977783203125
    9. 'num' → logprob: -6.2595977783203125
    10. ' code' → logprob: -6.6345977783203125

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. '   ' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '       ' → logprob: -18.001928329467773
    6. 'ex' → logprob: -18.001928329467773
    7. ' =(' → logprob: -18.001928329467773
    8. '    ' → logprob: -18.501928329467773
    9. ' =
' → logprob: -18.626928329467773
    10. '=int' → logprob: -18.751928329467773

Token 138: ' ord' (ID: 6608)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.0657605305314064
    2. ' (' → logprob: -3.065760612487793
    3. ' ord' → logprob: -4.190760612487793
    4. 'ord' → logprob: -6.315760612487793
    5. '(' → logprob: -10.440760612487793
    6. '(chr' → logprob: -10.690760612487793
    7. '(c' → logprob: -11.190760612487793
    8. '((' → logprob: -11.690760612487793
    9. '   ' → logprob: -13.065760612487793
    10. '26' → logprob: -13.065760612487793

Token 139: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -11.000027656555176
    3. 'c' → logprob: -11.500027656555176
    4. '('' → logprob: -14.125027656555176
    5. ' (' → logprob: -17.12502670288086
    6. ')c' → logprob: -19.25002670288086
    7. '(cipher' → logprob: -19.50002670288086
    8. '(
' → logprob: -20.37502670288086
    9. '©' → logprob: -20.37502670288086
    10. '((' → logprob: -20.62502670288086

Token 140: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002092445967718959
    2. ' )' → logprob: -6.377092361450195
    3. ' -' → logprob: -8.627092361450195
    4. '-' → logprob: -8.752092361450195
    5. ')-' → logprob: -10.502092361450195
    6. '')' → logprob: -11.127092361450195
    7. '-)' → logprob: -11.752092361450195
    8. ' ' → logprob: -14.377092361450195
    9. '")' → logprob: -14.752092361450195
    10. '   ' → logprob: -15.127092361450195

Token 141: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.26148566603660583
    2. 'ord' → logprob: -1.5114856958389282
    3. ''a' → logprob: -5.261485576629639
    4. ' ord' → logprob: -6.011485576629639
    5. ''' → logprob: -7.011485576629639
    6. '(ord' → logprob: -7.886485576629639
    7. 'a' → logprob: -8.261486053466797
    8. '   ' → logprob: -9.136486053466797
    9. '`' → logprob: -9.386486053466797
    10. '```' → logprob: -9.886486053466797

Token 142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15004390478134155
    2. ')' → logprob: -2.1500439643859863
    3. 'res' → logprob: -4.400043964385986
    4. 'decoded' → logprob: -6.400043964385986
    5. '<|end|>' → logprob: -6.525043964385986
    6. '       ' → logprob: -6.525043964385986
    7. '               ' → logprob: -7.150043964385986
    8. 'a' → logprob: -7.275043964385986
    9. '            ' → logprob: -7.400043964385986
    10. ' res' → logprob: -8.150043487548828

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004005622584372759
    2. 'decoded' → logprob: -6.629005432128906
    3. '            
' → logprob: -7.879005432128906
    4. '
' → logprob: -8.004005432128906
    5. ' decoded' → logprob: -8.004005432128906
    6. 'val' → logprob: -8.129005432128906
    7. '```' → logprob: -8.254005432128906
    8. '            ' → logprob: -8.379005432128906
    9. ' val' → logprob: -8.754005432128906
    10. 'res' → logprob: -8.754005432128906

Token 144: ' plain' (ID: 21402)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3519679307937622
    2. 'decoded' → logprob: -2.3519678115844727
    3. ' val' → logprob: -2.7269678115844727
    4. 'res' → logprob: -3.1019678115844727
    5. ' decoded' → logprob: -3.8519678115844727
    6. 'x' → logprob: -4.226967811584473
    7. 'dec' → logprob: -4.226967811584473
    8. 'new' → logprob: -4.726967811584473
    9. 'y' → logprob: -4.851967811584473
    10. '           ' → logprob: -5.101967811584473

Token 145: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.05649508908390999
    2. ' =' → logprob: -3.181495189666748
    3. 'val' → logprob: -4.556495189666748
    4. '=' → logprob: -5.931495189666748
    5. 'Val' → logprob: -8.55649471282959
    6. '	val' → logprob: -10.43149471282959
    7. '_value' → logprob: -11.93149471282959
    8. '_char' → logprob: -12.30649471282959
    9. ' val' → logprob: -12.55649471282959
    10. 'v' → logprob: -12.55649471282959

Token 146: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01516764611005783
    2. ' (' → logprob: -4.390167713165283
    3. '(' → logprob: -6.640167713165283
    4. '(chr' → logprob: -6.640167713165283
    5. '(ord' → logprob: -11.390167236328125
    6. '(x' → logprob: -12.015167236328125
    7. '   ' → logprob: -12.140167236328125
    8. '(A' → logprob: -12.390167236328125
    9. '((' → logprob: -12.890167236328125
    10. '(val' → logprob: -13.015167236328125

Token 147: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0016839897725731134
    2. ' a' → logprob: -6.876684188842773
    3. 'val' → logprob: -7.501684188842773
    4. '(a' → logprob: -9.501684188842773
    5. ' val' → logprob: -10.876684188842773
    6. ' (' → logprob: -13.376684188842773
    7. '   ' → logprob: -13.626684188842773
    8. '(val' → logprob: -13.751684188842773
    9. '(' → logprob: -14.001684188842773
    10. 'plain' → logprob: -16.001684188842773

Token 148: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0008734668954275548
    2. '_val' → logprob: -7.250873565673828
    3. 'inv' → logprob: -8.750873565673828
    4. '_inverse' → logprob: -13.000873565673828
    5. '*' → logprob: -14.000873565673828
    6. '_in' → logprob: -14.375873565673828
    7. 'val' → logprob: -14.750873565673828
    8. 'Inv' → logprob: -14.875873565673828
    9. '[val' → logprob: -15.625873565673828
    10. '_INV' → logprob: -15.625873565673828

Token 149: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12862879037857056
    2. '*' → logprob: -2.128628730773926
    3. '*(' → logprob: -6.378628730773926
    4. ' ' → logprob: -14.003628730773926
    5. ' *(' → logprob: -15.503628730773926
    6. ')' → logprob: -15.753628730773926
    7. '[val' → logprob: -15.878628730773926
    8. ' ' → logprob: -16.128629684448242
    9. '*object' → logprob: -16.628629684448242
    10. 'val' → logprob: -16.878629684448242

Token 150: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.002657224191352725
    2. '(val' → logprob: -6.002657413482666
    3. ' val' → logprob: -8.627656936645508
    4. '[val' → logprob: -13.127656936645508
    5. ' (' → logprob: -15.752656936645508
    6. '	val' → logprob: -15.877656936645508
    7. ',val' → logprob: -16.627656936645508
    8. '_val' → logprob: -17.627656936645508
    9. '.val' → logprob: -18.377656936645508
    10. 'valu' → logprob: -18.377656936645508

Token 151: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02978092059493065
    2. '-' → logprob: -3.529780864715576
    3. '-b' → logprob: -10.529781341552734
    4. ' ' → logprob: -13.279781341552734
    5. ')' → logprob: -14.154781341552734
    6. '<|end|>' → logprob: -14.779781341552734
    7. ' ' → logprob: -15.029781341552734
    8. ' –' → logprob: -16.404781341552734
    9. '-remove' → logprob: -16.529781341552734
    10. ' -
' → logprob: -16.654781341552734

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078997299075127
    2. ' b' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.37907886505127
    4. ')b' → logprob: -16.254079818725586
    5. '(b' → logprob: -16.504079818725586
    6. ' (' → logprob: -17.004079818725586
    7. '	b' → logprob: -18.004079818725586
    8. ' ' → logprob: -18.754079818725586
    9. ')' → logprob: -18.754079818725586
    10. '    ' → logprob: -19.004079818725586

Token 153: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009830227121710777
    2. ' ))' → logprob: -4.884829998016357
    3. ')' → logprob: -6.134829998016357
    4. ' )' → logprob: -10.759830474853516
    5. ')%' → logprob: -11.259830474853516
    6. '+' → logprob: -11.384830474853516
    7. ' +' → logprob: -12.884830474853516
    8. '%' → logprob: -13.259830474853516
    9. '   ' → logprob: -13.259830474853516
    10. ')))' → logprob: -13.259830474853516

Token 154: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.49311867356300354
    2. '%' → logprob: -0.9931186437606812
    3. ')' → logprob: -3.9931187629699707
    4. ')%' → logprob: -7.868118762969971
    5. ' )' → logprob: -10.493118286132812
    6. ' ' → logprob: -11.993118286132812
    7. ' ' → logprob: -13.368118286132812
    8. '```' → logprob: -15.243118286132812
    9. '26' → logprob: -15.618118286132812
    10. ']' → logprob: -15.618118286132812

Token 155: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.37509536743164
    4. '```' → logprob: -19.50009536743164
    5. '27' → logprob: -21.00009536743164
    6. '24' → logprob: -21.06259536743164
    7. '  ' → logprob: -21.06259536743164
    8. '`' → logprob: -21.31259536743164
    9. '2' → logprob: -21.43759536743164
    10. '
' → logprob: -21.56259536743164

Token 156: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023011912708170712
    2. '
' → logprob: -8.500229835510254
    3. '       ' → logprob: -11.250229835510254
    4. ',' → logprob: -12.875229835510254
    5. '            
' → logprob: -13.000229835510254
    6. '
' → logprob: -13.125229835510254
    7. ')' → logprob: -13.250229835510254
    8. ' res' → logprob: -14.000229835510254
    9. '          ' → logprob: -14.250229835510254
    10. '               ' → logprob: -14.375229835510254

Token 157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004027865652460605
    2. ' res' → logprob: -8.375402450561523
    3. 'res' → logprob: -8.875402450561523
    4. '       ' → logprob: -10.500402450561523
    5. '
' → logprob: -13.000402450561523
    6. '            
' → logprob: -14.000402450561523
    7. '   ' → logprob: -14.500402450561523
    8. '```' → logprob: -15.375402450561523
    9. '          ' → logprob: -15.500402450561523
    10. '	       ' → logprob: -15.500402450561523

Token 158: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.06206078827381134
    2. ' res' → logprob: -2.812060832977295
    3. '           ' → logprob: -9.312060356140137
    4. '       ' → logprob: -13.062060356140137
    5. '
' → logprob: -15.187060356140137
    6. '	res' → logprob: -15.937060356140137
    7. 'char' → logprob: -16.437061309814453
    8. '   ' → logprob: -16.687061309814453
    9. '               ' → logprob: -17.187061309814453
    10. '```' → logprob: -17.312061309814453

Token 159: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06198079511523247
    2. '.' → logprob: -2.811980724334717
    3. '.extend' → logprob: -12.061981201171875
    4. '.app' → logprob: -12.811981201171875
    5. ' .' → logprob: -13.061981201171875
    6. 'append' → logprob: -14.061981201171875
    7. '.Append' → logprob: -14.061981201171875
    8. '.ap' → logprob: -14.936981201171875
    9. '.push' → logprob: -15.061981201171875
    10. ' append' → logprob: -15.811981201171875

Token 160: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -9.372294698550832e-06
    2. 'chr' → logprob: -11.750009536743164
    3. '(' → logprob: -13.500009536743164
    4. ' chr' → logprob: -17.875009536743164
    5. ' (' → logprob: -18.750009536743164
    6. '(ord' → logprob: -20.875009536743164
    7. '(ch' → logprob: -21.125009536743164
    8. '_chr' → logprob: -21.125009536743164
    9. '((' → logprob: -22.375009536743164
    10. '(chars' → logprob: -22.750009536743164

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. 'plain' → logprob: -14.375000953674316
    3. '(pl' → logprob: -15.375000953674316
    4. '(ord' → logprob: -16.500001907348633
    5. '((' → logprob: -16.625001907348633
    6. ' (' → logprob: -16.625001907348633
    7. '/plain' → logprob: -18.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '97' → logprob: -19.500001907348633
    10. '_plain' → logprob: -19.875001907348633

Token 162: 'plain' (ID: 26330)
  Prédit: 'plain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plain' → logprob: -2.141186450899113e-05
    2. '97' → logprob: -11.125020980834961
    3. 'plaintext' → logprob: -12.375020980834961
    4. ' plain' → logprob: -13.500020980834961
    5. '(' → logprob: -14.125020980834961
    6. '/plain' → logprob: -15.625020980834961
    7. '_plain' → logprob: -16.25002098083496
    8. '   ' → logprob: -17.25002098083496
    9. 'pl' → logprob: -18.37502098083496
    10. '```' → logprob: -19.25002098083496

Token 163: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07897031307220459
    2. ' +' → logprob: -2.578970432281494
    3. '97' → logprob: -9.578969955444336
    4. '(' → logprob: -13.203969955444336
    5. '   ' → logprob: -13.203969955444336
    6. ')+' → logprob: -13.203969955444336
    7. ' ' → logprob: -13.578969955444336
    8. '```' → logprob: -13.578969955444336
    9. '()+' → logprob: -13.703969955444336
    10. ')' → logprob: -13.703969955444336

Token 164: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'a' → logprob: -18.125
    4. '097' → logprob: -18.625
    5. '```' → logprob: -19.5
    6. '96' → logprob: -19.625
    7. ''' → logprob: -20.5
    8. '98' → logprob: -21.0
    9. '`' → logprob: -21.5
    10. '   ' → logprob: -21.625

Token 165: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05050348863005638
    2. ')' → logprob: -3.0505034923553467
    3. '))
' → logprob: -6.300503253936768
    4. ')
' → logprob: -9.800503730773926
    5. '       ' → logprob: -11.300503730773926
    6. ')))' → logprob: -11.925503730773926
    7. ' ))' → logprob: -13.425503730773926
    8. '))
' → logprob: -13.550503730773926
    9. '   ' → logprob: -13.925503730773926
    10. ' )' → logprob: -15.050503730773926

Token 166: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.804988443851471
    2. '   ' → logprob: -0.929988443851471
    3. '       ' → logprob: -2.429988384246826
    4. ' return' → logprob: -2.929988384246826
    5. 'else' → logprob: -4.304988384246826
    6. 'return' → logprob: -5.804988384246826
    7. ' ' → logprob: -9.554988861083984
    8. '```' → logprob: -9.804988861083984
    9. ' elif' → logprob: -9.929988861083984
    10. '
' → logprob: -9.929988861083984

Token 167: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02006528526544571
    2. ' else' → logprob: -4.0200653076171875
    3. 'elif' → logprob: -6.2700653076171875
    4. ' elif' → logprob: -11.270065307617188
    5. '   ' → logprob: -12.020065307617188
    6. '       ' → logprob: -13.020065307617188
    7. '```' → logprob: -15.520065307617188
    8. 'el' → logprob: -16.395065307617188
    9. '	else' → logprob: -16.395065307617188
    10. ' ' → logprob: -17.395065307617188

Token 168: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001968649885384366
    2. ' res' → logprob: -9.00019645690918
    3. '       ' → logprob: -10.37519645690918
    4. 'res' → logprob: -11.50019645690918
    5. '            ' → logprob: -11.75019645690918
    6. '            
' → logprob: -12.25019645690918
    7. '          ' → logprob: -12.75019645690918
    8. ' return' → logprob: -12.75019645690918
    9. '        ' → logprob: -12.75019645690918
    10. '   ' → logprob: -13.00019645690918

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01485352497547865
    2. 'res' → logprob: -4.639853477478027
    3. '       ' → logprob: -6.014853477478027
    4. ' res' → logprob: -6.014853477478027
    5. '   ' → logprob: -8.889853477478027
    6. '```' → logprob: -10.264853477478027
    7. '               ' → logprob: -11.514853477478027
    8. ' ' → logprob: -12.639853477478027
    9. '          ' → logprob: -12.889853477478027
    10. '	res' → logprob: -13.389853477478027

Token 170: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.004191536456346512
    2. ' res' → logprob: -5.5041913986206055
    3. '           ' → logprob: -9.254191398620605
    4. '       ' → logprob: -11.129191398620605
    5. '   ' → logprob: -13.004191398620605
    6. '	res' → logprob: -15.254191398620605
    7. ' ' → logprob: -16.629192352294922
    8. '_res' → logprob: -16.629192352294922
    9. '  ' → logprob: -18.129192352294922
    10. '               ' → logprob: -18.379192352294922

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.408677290892228e-05
    2. '.' → logprob: -10.2500638961792
    3. '.extend' → logprob: -10.5000638961792
    4. 'append' → logprob: -14.1250638961792
    5. '.app' → logprob: -15.1250638961792
    6. '.Append' → logprob: -17.125064849853516
    7. '.ap' → logprob: -18.000064849853516
    8. ' .' → logprob: -18.000064849853516
    9. '.write' → logprob: -18.125064849853516
    10. '.push' → logprob: -19.000064849853516

Token 172: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.301394023466855e-05
    2. 'c' → logprob: -10.250062942504883
    3. '(' → logprob: -10.500062942504883
    4. '('' → logprob: -16.500062942504883
    5. '((' → logprob: -18.875062942504883
    6. '(cipher' → logprob: -18.875062942504883
    7. ')c' → logprob: -19.000062942504883
    8. '(C' → logprob: -19.875062942504883
    9. '(
' → logprob: -20.125062942504883
    10. '()' → logprob: -20.125062942504883

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.375005722045898
    3. ')return' → logprob: -13.375005722045898
    4. ' )' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.8750057220459
    6. 'return' → logprob: -18.1250057220459
    7. '))' → logprob: -19.0000057220459
    8. ')

' → logprob: -19.1250057220459
    9. ')}' → logprob: -19.2500057220459
    10. '`)' → logprob: -19.3750057220459

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21463869512081146
    2. ' return' → logprob: -1.7146387100219727
    3. 'return' → logprob: -4.339638710021973
    4. '	return' → logprob: -9.964638710021973
    5. '
' → logprob: -10.214638710021973
    6. '    
' → logprob: -12.214638710021973
    7. ' ' → logprob: -12.839638710021973
    8. '```' → logprob: -13.339638710021973
    9. 'eturn' → logprob: -13.964638710021973
    10. ')' → logprob: -14.714638710021973

Token 175: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003410647332202643
    2. ' return' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.375341415405273
    4. '	return' → logprob: -14.625341415405273
    5. '
' → logprob: -15.000341415405273
    6. '```' → logprob: -15.000341415405273
    7. 'eturn' → logprob: -16.000341415405273
    8. ')return' → logprob: -16.500341415405273
    9. '    
' → logprob: -17.125341415405273
    10. ')' → logprob: -17.875341415405273

Token 176: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25198543071746826
    2. '''.' → logprob: -1.5019854307174683
    3. ' ''.' → logprob: -10.501985549926758
    4. ' "".' → logprob: -10.751985549926758
    5. '''' → logprob: -12.876985549926758
    6. ''' → logprob: -12.876985549926758
    7. '""' → logprob: -13.001985549926758
    8. '"",' → logprob: -16.751985549926758
    9. 'res' → logprob: -17.751985549926758
    10. '''
' → logprob: -19.126985549926758

Token 177: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. 'jo' → logprob: -14.625000953674316
    3. ' join' → logprob: -16.125
    4. 'j' → logprob: -16.375
    5. '''.' → logprob: -16.625
    6. '```' → logprob: -16.625
    7. '.join' → logprob: -18.5
    8. '(join' → logprob: -19.25
    9. 'decode' → logprob: -20.75
    10. 'concat' → logprob: -20.875

Token 178: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.029800597578287125
    2. '(' → logprob: -3.5298006534576416
    3. 'res' → logprob: -10.279800415039062
    4. '('' → logprob: -12.654800415039062
    5. '(
' → logprob: -12.904800415039062
    6. '("("' → logprob: -13.154800415039062
    7. '()' → logprob: -13.404800415039062
    8. '(rs' → logprob: -13.904800415039062
    9. '(`' → logprob: -13.904800415039062
    10. ' (' → logprob: -14.154800415039062

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.875
    3. '<|end|>' → logprob: -15.875
    4. ' )' → logprob: -18.25
    5. '}' → logprob: -18.375
    6. '```' → logprob: -18.625
    7. ')#' → logprob: -18.875
    8. ')`' → logprob: -18.875
    9. '')' → logprob: -19.0
    10. ')}}' → logprob: -19.125

Token 180: 'input' (ID: 2586)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -0.2857377529144287
    2. 'print' → logprob: -2.4107377529144287
    3. 'plaintext' → logprob: -3.1607377529144287
    4. 'def' → logprob: -3.1607377529144287
    5. '#' → logprob: -3.6607377529144287
    6. 'text' → logprob: -4.160737991333008
    7. 'message' → logprob: -4.285737991333008
    8. 'key' → logprob: -5.035737991333008
    9. 'decoded' → logprob: -6.285737991333008
    10. 'decode' → logprob: -6.410737991333008

Token 181: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2899448871612549
    2. '_text' → logprob: -2.164944887161255
    3. '_data' → logprob: -2.789944887161255
    4. '_str' → logprob: -3.414944887161255
    5. '_line' → logprob: -4.039944648742676
    6. '_string' → logprob: -4.539944648742676
    7. '_' → logprob: -5.164944648742676
    8. '_cipher' → logprob: -6.164944648742676
    9. ' =' → logprob: -6.414944648742676
    10. '().' → logprob: -6.664944648742676

Token 182: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3190646171569824
    2. '.readline' → logprob: -1.5690646171569824
    3. '.stdin' → logprob: -3.0690646171569824
    4. '.argv' → logprob: -4.444064617156982
    5. '.get' → logprob: -5.944064617156982
    6. '.stdout' → logprob: -7.194064617156982
    7. '[' → logprob: -7.194064617156982
    8. '```' → logprob: -7.819064617156982
    9. '._' → logprob: -8.06906509399414
    10. ' .' → logprob: -8.56906509399414

Token 183: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.007574442774057388
    2. '.read' → logprob: -5.257574558258057
    3. 'read' → logprob: -6.507574558258057
    4. '.readlines' → logprob: -7.132574558258057
    5. '.' → logprob: -10.632574081420898
    6. '_read' → logprob: -11.382574081420898
    7. 'buffer' → logprob: -12.257574081420898
    8. 'input' → logprob: -12.882574081420898
    9. ' readline' → logprob: -13.507574081420898
    10. '_buffer' → logprob: -14.757574081420898

Token 184: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3289344608783722
    2. '().' → logprob: -1.3289344310760498
    3. '()
' → logprob: -4.328934669494629
    4. 'input' → logprob: -7.328934669494629
    5. 'strip' → logprob: -8.078934669494629
    6. 'line' → logprob: -8.078934669494629
    7. '()

' → logprob: -8.203934669494629
    8. '()\' → logprob: -8.703934669494629
    9. '
' → logprob: -8.828934669494629
    10. '.strip' → logprob: -9.078934669494629

Token 185: 'n' (ID: 77)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -0.22415433824062347
    2. 'n' → logprob: -1.7241543531417847
    3. 'text' → logprob: -4.599154472351074
    4. 't' → logprob: -5.349154472351074
    5. 'data' → logprob: -6.849154472351074
    6. 'c' → logprob: -6.849154472351074
    7. 'def' → logprob: -6.849154472351074
    8. 'plaintext' → logprob: -6.974154472351074
    9. 'line' → logprob: -7.224154472351074
    10. 'print' → logprob: -7.724154472351074

Token 186: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18019649386405945
    2. ' =' → logprob: -1.9301965236663818
    3. '=int' → logprob: -3.930196523666382
    4. ',' → logprob: -9.805196762084961
    5. '=input' → logprob: -9.805196762084961
    6. ' ' → logprob: -11.680196762084961
    7. '=n' → logprob: -11.930196762084961
    8. '=sys' → logprob: -13.305196762084961
    9. ',n' → logprob: -13.430196762084961
    10. '=len' → logprob: -14.680196762084961

Token 187: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.015336472541093826
    2. '(' → logprob: -4.265336513519287
    3. '()' → logprob: -7.140336513519287
    4. 'input' → logprob: -7.890336513519287
    5. '(sys' → logprob: -13.640336036682129
    6. '(
' → logprob: -13.640336036682129
    7. ' (' → logprob: -14.140336036682129
    8. '(n' → logprob: -14.390336036682129
    9. '=input' → logprob: -14.515336036682129
    10. '('' → logprob: -15.890336036682129

Token 188: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05367118865251541
    2. '()' → logprob: -3.05367112159729
    3. '().' → logprob: -5.303671360015869
    4. '()
' → logprob: -10.178670883178711
    5. ')' → logprob: -10.803670883178711
    6. '())
' → logprob: -11.053670883178711
    7. ' ())' → logprob: -11.303670883178711
    8. '(' → logprob: -11.928670883178711
    9. '();)' → logprob: -13.678670883178711
    10. '()

' → logprob: -13.803670883178711

Token 189: 'keywords' (ID: 68653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.684072732925415
    2. 'cipher' → logprob: -0.809072732925415
    3. 'c' → logprob: -4.309072494506836
    4. 'a' → logprob: -4.559072494506836
    5. 'codes' → logprob: -4.809072494506836
    6. 'keys' → logprob: -5.059072494506836
    7. 's' → logprob: -5.559072494506836
    8. 'code' → logprob: -6.684072494506836
    9. 'lines' → logprob: -6.934072494506836
    10. 'data' → logprob: -7.309072494506836

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08009429275989532
    2. ' =' → logprob: -2.580094337463379
    3. '=[]' → logprob: -6.830094337463379
    4. '=input' → logprob: -9.330094337463379
    5. ',' → logprob: -11.205094337463379
    6. '=list' → logprob: -11.955094337463379
    7. ' ' → logprob: -12.955094337463379
    8. '=[]
' → logprob: -13.205094337463379
    9. '=int' → logprob: -13.455094337463379
    10. '=n' → logprob: -13.580094337463379

Token 191: ' ('' (ID: 9906)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.16408580541610718
    2. '[]' → logprob: -1.914085865020752
    3. '[' → logprob: -6.164085865020752
    4. '[n' → logprob: -7.039085865020752
    5. 'input' → logprob: -7.914085865020752
    6. '[str' → logprob: -9.539085388183594
    7. ' []' → logprob: -10.039085388183594
    8. '{}' → logprob: -10.039085388183594
    9. 'set' → logprob: -10.039085388183594
    10. '[]
' → logprob: -10.164085388183594

Token 192: 'that' (ID: 14116)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4797752797603607
    2. '"' → logprob: -1.729775309562683
    3. ''n' → logprob: -3.8547751903533936
    4. ''s' → logprob: -3.9797751903533936
    5. ''e' → logprob: -4.104775428771973
    6. ''ap' → logprob: -4.354775428771973
    7. ''a' → logprob: -4.479775428771973
    8. ''m' → logprob: -4.479775428771973
    9. ''t' → logprob: -4.604775428771973
    10. ''H' → logprob: -4.604775428771973

Token 193: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.06756363064050674
    2. '','' → logprob: -2.817563533782959
    3. ''' → logprob: -5.567563533782959
    4. ' ',' → logprob: -7.442563533782959
    5. ''s' → logprob: -7.692563533782959
    6. ',' → logprob: -8.067564010620117
    7. 'which' → logprob: -9.567564010620117
    8. '',"' → logprob: -10.067564010620117
    9. 'the' → logprob: -10.192564010620117
    10. 'is' → logprob: -10.442564010620117

Token 194: 'this' (ID: 851)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8114054203033447
    2. 'this' → logprob: -0.9364054203033447
    3. ' this' → logprob: -3.8114054203033447
    4. 'with' → logprob: -3.8114054203033447
    5. 'there' → logprob: -3.8114054203033447
    6. 'the' → logprob: -4.061405181884766
    7. 'them' → logprob: -4.311405181884766
    8. ' '' → logprob: -4.936405181884766
    9. 'have' → logprob: -4.936405181884766
    10. ''t' → logprob: -5.311405181884766

Token 195: '')
' (ID: 2515)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.12898564338684082
    2. ','' → logprob: -2.628985643386841
    3. '',' → logprob: -3.378985643386841
    4. ',' → logprob: -4.253985404968262
    5. ''' → logprob: -8.253985404968262
    6. '')' → logprob: -9.128985404968262
    7. ')' → logprob: -9.503985404968262
    8. ')','' → logprob: -10.128985404968262
    9. '',"' → logprob: -10.253985404968262
    10. ''s' → logprob: -11.128985404968262

Token 196: 'alph' (ID: 53076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28901687264442444
    2. 'cipher' → logprob: -2.9140169620513916
    3. 'plaintext' → logprob: -3.2890169620513916
    4. 'words' → logprob: -3.4140169620513916
    5. 'text' → logprob: -3.6640169620513916
    6. 'texts' → logprob: -4.0390167236328125
    7. 'results' → logprob: -4.0390167236328125
    8. 'lines' → logprob: -4.4140167236328125
    9. 'message' → logprob: -4.6640167236328125
    10. 'strings' → logprob: -5.1640167236328125

Token 197: 'as' (ID: 288)
  Prédit: 'abet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abet' → logprob: -0.05886511877179146
    2. 'abets' → logprob: -2.9338650703430176
    3. 'a' → logprob: -6.058865070343018
    4. 'abeth' → logprob: -6.808865070343018
    5. 'ab' → logprob: -8.183865547180176
    6. 'as' → logprob: -9.558865547180176
    7. 'abetes' → logprob: -10.058865547180176
    8. 'abetic' → logprob: -10.683865547180176
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.808865547180176
    10. 'aset' → logprob: -11.058865547180176

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7740599513053894
    2. 'abet' → logprob: -1.2740600109100342
    3. '=' → logprob: -1.6490600109100342
    4. 'abets' → logprob: -4.149059772491455
    5. '=['' → logprob: -4.274059772491455
    6. 'bet' → logprob: -4.399059772491455
    7. '='' → logprob: -4.649059772491455
    8. 'et' → logprob: -4.774059772491455
    9. '=('' → logprob: -6.024059772491455
    10. 'a' → logprob: -6.774059772491455

Token 199: ' [' (ID: 723)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4873560667037964
    2. '[' → logprob: -1.4873560667037964
    3. 'set' → logprob: -2.862356185913086
    4. '"' → logprob: -3.737356185913086
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.237356185913086
    6. '[string' → logprob: -4.612356185913086
    7. ' [' → logprob: -4.737356185913086
    8. ''s' → logprob: -4.862356185913086
    9. ' '' → logprob: -4.862356185913086
    10. ''import' → logprob: -5.112356185913086

Token 200: 'a' (ID: 64)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18117570877075195
    2. 'chr' → logprob: -2.181175708770752
    3. 'False' → logprob: -4.056175708770752
    4. 'i' → logprob: -4.181175708770752
    5. 'c' → logprob: -4.806175708770752
    6. 'ord' → logprob: -6.306175708770752
    7. '[i' → logprob: -6.931175708770752
    8. '[' → logprob: -6.931175708770752
    9. 'x' → logprob: -7.181175708770752
    10. 'a' → logprob: -7.181175708770752

Token 201: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02384583093225956
    2. 'for' → logprob: -3.773845911026001
    3. 'i' → logprob: -8.648845672607422
    4. ' ' → logprob: -9.023845672607422
    5. ' i' → logprob: -10.148845672607422
    6. '+' → logprob: -10.398845672607422
    7. '=' → logprob: -10.898845672607422
    8. ',' → logprob: -10.898845672607422
    9. '	for' → logprob: -11.023845672607422
    10. ' in' → logprob: -11.273845672607422

Token 202: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08587131649255753
    2. ' a' → logprob: -2.5858712196350098
    3. ' range' → logprob: -5.83587121963501
    4. 'range' → logprob: -6.08587121963501
    5. ''a' → logprob: -7.33587121963501
    6. ''' → logprob: -7.83587121963501
    7. 'c' → logprob: -8.085871696472168
    8. ' c' → logprob: -8.585871696472168
    9. '_' → logprob: -9.835871696472168
    10. 'x' → logprob: -9.960871696472168

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030833479017019272
    2. 'in' → logprob: -3.6558334827423096
    3. 'range' → logprob: -5.6558332443237305
    4. ' range' → logprob: -7.4058332443237305
    5. 'a' → logprob: -8.53083324432373
    6. 's' → logprob: -10.15583324432373
    7. 'b' → logprob: -10.78083324432373
    8. ' ' → logprob: -10.90583324432373
    9. '=' → logprob: -10.90583324432373
    10. ',' → logprob: -11.03083324432373

Token 204: ' range' (ID: 3352)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5502042174339294
    2. ' range' → logprob: -1.0502042770385742
    3. 'range' → logprob: -2.675204277038574
    4. '"' → logprob: -6.050204277038574
    5. ' '' → logprob: -7.050204277038574
    6. ''r' → logprob: -7.550204277038574
    7. ''s' → logprob: -9.050204277038574
    8. ''t' → logprob: -9.300204277038574
    9. 'keywords' → logprob: -9.675204277038574
    10. ''al' → logprob: -9.925204277038574

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.0590548703912646e-05
    2. '1' → logprob: -10.625030517578125
    3. '(-' → logprob: -12.875030517578125
    4. ' (' → logprob: -13.125030517578125
    5. ')' → logprob: -14.750030517578125
    6. ']' → logprob: -15.125030517578125
    7. '26' → logprob: -15.375030517578125
    8. '2' → logprob: -16.125030517578125
    9. '(ord' → logprob: -16.250030517578125
    10. '3' → logprob: -16.500030517578125

Token 206: '1' (ID: 16)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.01730789802968502
    2. '97' → logprob: -4.392307758331299
    3. '1' → logprob: -5.392307758331299
    4. '65' → logprob: -9.392308235168457
    5. ' ' → logprob: -9.642308235168457
    6. '2' → logprob: -10.642308235168457
    7. '0' → logprob: -10.767308235168457
    8. 'ord' → logprob: -11.142308235168457
    9. '(' → logprob: -11.642308235168457
    10. '(ord' → logprob: -11.892308235168457

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00471848389133811
    2. ' ,' → logprob: -5.37971830368042
    3. '26' → logprob: -9.379718780517578
    4. '27' → logprob: -11.754718780517578
    5. '1' → logprob: -12.879718780517578
    6. '25' → logprob: -13.379718780517578
    7. '36' → logprob: -14.504718780517578
    8. ' ' → logprob: -15.129718780517578
    9. '24' → logprob: -15.254718780517578
    10. '2' → logprob: -15.754718780517578

Token 208: '26' (ID: 2109)
  Prédit: '27'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.6931518912315369
    2. '26' → logprob: -0.6931518912315369
    3. ' ' → logprob: -12.318151473999023
    4. '100' → logprob: -16.443151473999023
    5. '29' → logprob: -18.068151473999023
    6. '	' → logprob: -18.068151473999023
    7. '   ' → logprob: -18.193151473999023
    8. ')' → logprob: -18.443151473999023
    9. '

' → logprob: -18.443151473999023
    10. '2' → logprob: -18.693151473999023

Token 209: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47422489523887634
    2. ',' → logprob: -0.9742249250411987
    3. '+' → logprob: -9.974225044250488
    4. ')]' → logprob: -10.224225044250488
    5. ' ,' → logprob: -10.599225044250488
    6. '1' → logprob: -11.349225044250488
    7. ' if' → logprob: -11.849225044250488
    8. ']' → logprob: -12.599225044250488
    9. 'if' → logprob: -12.849225044250488
    10. ' )' → logprob: -12.849225044250488

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.790129555156454e-05
    2. ' ' → logprob: -9.750067710876465
    3. ')' → logprob: -11.750067710876465
    4. '1' → logprob: -13.875067710876465
    5. '+' → logprob: -15.375067710876465
    6. '

' → logprob: -16.75006866455078
    7. ' )' → logprob: -16.87506866455078
    8. '])' → logprob: -16.87506866455078
    9. '```' → logprob: -17.12506866455078
    10. '  ' → logprob: -17.12506866455078

Token 211: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4234485328197479
    2. ')' → logprob: -1.1734485626220703
    3. ' if' → logprob: -3.4234485626220703
    4. ']' → logprob: -5.79844856262207
    5. ' )' → logprob: -8.54844856262207
    6. 'if' → logprob: -10.17344856262207
    7. ',' → logprob: -10.67344856262207
    8. ' ]' → logprob: -10.79844856262207
    9. ' ' → logprob: -13.04844856262207
    10. ')],' → logprob: -13.17344856262207

Token 212: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30547189712524414
    2. ' if' → logprob: -1.4304718971252441
    3. ' ]' → logprob: -4.805471897125244
    4. ')' → logprob: -4.930471897125244
    5. ')]' → logprob: -5.180471897125244
    6. 'if' → logprob: -6.305471897125244
    7. ',' → logprob: -7.430471897125244
    8. '])' → logprob: -8.055471420288086
    9. '<|end|>' → logprob: -8.805471420288086
    10. ' )' → logprob: -9.930471420288086

Token 213: ' eg' (ID: 9768)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.13419607281684875
    2. 'a' → logprob: -2.5091960430145264
    3. 'all' → logprob: -3.7591960430145264
    4. 'g' → logprob: -5.0091962814331055
    5. ' ' → logprob: -6.0091962814331055
    6. 'sys' → logprob: -6.2591962814331055
    7. 'pow' → logprob: -6.5091962814331055
    8. 'any' → logprob: -6.6341962814331055
    9. '__' → logprob: -6.6341962814331055
    10. ' eg' → logprob: -6.7591962814331055

Token 214: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.4272752852994017e-05
    2. '(a' → logprob: -10.75002384185791
    3. 'g' → logprob: -13.25002384185791
    4. 'cdf' → logprob: -14.87502384185791
    5. 'eg' → logprob: -16.000024795532227
    6. 'c' → logprob: -16.125024795532227
    7. ' gcd' → logprob: -16.250024795532227
    8. 'a' → logprob: -16.625024795532227
    9. 'cdn' → logprob: -17.250024795532227
    10. '   ' → logprob: -17.375024795532227

Token 215: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002989968634210527
    2. '(' → logprob: -8.125299453735352
    3. '26' → logprob: -13.500299453735352
    4. ' (' → logprob: -14.375299453735352
    5. 'a' → logprob: -15.000299453735352
    6. '(_,' → logprob: -15.000299453735352
    7. '((' → logprob: -16.00029945373535
    8. '
' → logprob: -17.00029945373535
    9. '```' → logprob: -17.50029945373535
    10. '(n' → logprob: -17.50029945373535

Token 216: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14099569618701935
    2. '26' → logprob: -2.765995740890503
    3. ',' → logprob: -3.015995740890503
    4. '(a' → logprob: -4.015995502471924
    5. ')' → logprob: -7.890995502471924
    6. '==' → logprob: -8.265995979309082
    7. ' (' → logprob: -8.640995979309082
    8. 'a' → logprob: -8.890995979309082
    9. ',a' → logprob: -8.890995979309082
    10. ' ,' → logprob: -9.265995979309082

Token 217: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. ')' → logprob: -19.75
    4. '   ' → logprob: -20.75
    5. '2' → logprob: -21.0
    6. 'alphabet' → logprob: -21.5
    7. '
' → logprob: -21.75
    8. '```' → logprob: -22.125
    9. 'a' → logprob: -23.25
    10. '    ' → logprob: -23.375

Token 218: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931890845298767
    2. ')==' → logprob: -0.6931890845298767
    3. ' )' → logprob: -10.568188667297363
    4. '==' → logprob: -11.568188667297363
    5. ']==' → logprob: -12.568188667297363
    6. ')=' → logprob: -13.193188667297363
    7. ')!=' → logprob: -14.443188667297363
    8. '```' → logprob: -15.193188667297363
    9. '")==' → logprob: -15.318188667297363
    10. ')
' → logprob: -16.81818962097168

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.0
    5. '  ' → logprob: -22.25
    6. '۱' → logprob: -23.375
    7. '=' → logprob: -24.0
    8. '１' → logprob: -24.125
    9. '
' → logprob: -24.25
    10. '<|end|>' → logprob: -24.5

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002655079588294029
    2. ' ]' → logprob: -8.625265121459961
    3. ')]' → logprob: -9.375265121459961
    4. ']
' → logprob: -14.875265121459961
    5. ')' → logprob: -15.125265121459961
    6. '()]' → logprob: -15.250265121459961
    7. '`]' → logprob: -16.12526512145996
    8. ']

' → logprob: -16.37526512145996
    9. '']' → logprob: -16.37526512145996
    10. '}]' → logprob: -16.75026512145996

Token 221: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576595664024353
    2. '<|end|>' → logprob: -1.201595664024353
    3. 'plaintext' → logprob: -2.9515957832336426
    4. 'found' → logprob: -3.9515957832336426
    5. 'possible' → logprob: -4.326595783233643
    6. 'keys' → logprob: -4.576595783233643
    7. 'answers' → logprob: -4.701595783233643
    8. 'results' → logprob: -4.701595783233643
    9. ' for' → logprob: -5.451595783233643
    10. 'valid' → logprob: -5.576595783233643

Token 222: ' #' (ID: 1069)
  Prédit: 'plaintext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plaintext' → logprob: -1.3222323656082153
    2. 'for' → logprob: -1.5722323656082153
    3. 'found' → logprob: -1.6972323656082153
    4. '<|end|>' → logprob: -2.697232246398926
    5. 'possible' → logprob: -2.822232246398926
    6. 'b' → logprob: -3.447232246398926
    7. 'answers' → logprob: -4.072232246398926
    8. 'valid' → logprob: -4.072232246398926
    9. 'best' → logprob: -4.322232246398926
    10. 'results' → logprob: -4.447232246398926

Token 223: ' possible' (ID: 4149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4115734100341797
    2. 'plaintext' → logprob: -2.0365734100341797
    3. 'possible' → logprob: -2.5365734100341797
    4. 'decoded' → logprob: -2.9115734100341797
    5. 'valid' → logprob: -4.53657341003418
    6. 'keys' → logprob: -4.91157341003418
    7. 'results' → logprob: -4.91157341003418
    8. 'de' → logprob: -5.03657341003418
    9. 'c' → logprob: -5.16157341003418
    10. 'plain' → logprob: -5.16157341003418

Token 224: ' a' (ID: 261)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.9947963356971741
    2. 'values' → logprob: -1.2447962760925293
    3. '<|end|>' → logprob: -1.2447962760925293
    4. 'a' → logprob: -3.7447962760925293
    5. ' keys' → logprob: -4.994796276092529
    6. 'alph' → logprob: -4.994796276092529
    7. 'multip' → logprob: -5.119796276092529
    8. 'next' → logprob: -5.869796276092529
    9. ' values' → logprob: -6.119796276092529
    10. ' next' → logprob: -7.369796276092529

Token 225: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11100346595048904
    2. 'results' → logprob: -3.3610033988952637
    3. 'plaintext' → logprob: -4.111003398895264
    4. 'possible' → logprob: -4.236003398895264
    5. ' for' → logprob: -5.111003398895264
    6. 'answers' → logprob: -5.236003398895264
    7. 'outputs' → logprob: -5.736003398895264
    8. 'decoded' → logprob: -5.736003398895264
    9. 'valid' → logprob: -5.861003398895264
    10. 'c' → logprob: -5.986003398895264

Token 227: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.062288977205753326
    2. 'cipher' → logprob: -3.062288999557495
    3. 'results' → logprob: -5.937288761138916
    4. 'c' → logprob: -6.437288761138916
    5. 'plaintext' → logprob: -6.437288761138916
    6. 'possible' → logprob: -7.312288761138916
    7. 'found' → logprob: -7.312288761138916
    8. ' for' → logprob: -7.312288761138916
    9. 'a' → logprob: -7.437288761138916
    10. 'keys' → logprob: -7.562288761138916

Token 228: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4132605493068695
    2. '_' → logprob: -1.663260579109192
    3. ' a' → logprob: -3.1632604598999023
    4. '_a' → logprob: -3.5382604598999023
    5. ' keyword' → logprob: -3.7882604598999023
    6. ' key' → logprob: -4.538260459899902
    7. 'keyword' → logprob: -5.038260459899902
    8. ' kw' → logprob: -5.038260459899902
    9. 'a' → logprob: -5.163260459899902
    10. ' i' → logprob: -5.413260459899902

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995543837547302
    2. 'in' → logprob: -2.694955348968506
    3. ' ' → logprob: -11.069955825805664
    4. 'n' → logprob: -13.569955825805664
    5. 'i' → logprob: -14.319955825805664
    6. 'import' → logprob: -14.944955825805664
    7. '```' → logprob: -15.444955825805664
    8. ' _' → logprob: -15.694955825805664
    9. ' i' → logprob: -15.694955825805664
    10. 'range' → logprob: -15.944955825805664

Token 230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012415809032972902
    2. ' range' → logprob: -9.000123977661133
    3. 'sys' → logprob: -15.250123977661133
    4. 'input' → logprob: -15.875123977661133
    5. '(range' → logprob: -16.250123977661133
    6. 'rang' → logprob: -16.875123977661133
    7. 'ran' → logprob: -17.125123977661133
    8. 'r' → logprob: -17.250123977661133
    9. 'ra' → logprob: -17.625123977661133
    10. '	range' → logprob: -17.875123977661133

Token 231: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020291616674512625
    2. 'n' → logprob: -6.502028942108154
    3. ' n' → logprob: -8.002029418945312
    4. '(' → logprob: -9.252029418945312
    5. ' (' → logprob: -9.252029418945312
    6. '_n' → logprob: -17.377029418945312
    7. '(int' → logprob: -18.002029418945312
    8. '	n' → logprob: -18.252029418945312
    9. '(range' → logprob: -18.377029418945312
    10. '(
' → logprob: -19.377029418945312

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11323913186788559
    2. '):
' → logprob: -2.238239049911499
    3. ':' → logprob: -7.988239288330078
    4. ' ):' → logprob: -10.738239288330078
    5. '):
' → logprob: -10.738239288330078
    6. ')' → logprob: -11.238239288330078
    7. ':
' → logprob: -11.863239288330078
    8. ' ):
' → logprob: -12.488239288330078
    9. '():
' → logprob: -12.863239288330078
    10. '   ' → logprob: -13.238239288330078

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003388502635061741
    2. 'cipher' → logprob: -5.878388404846191
    3. ' cipher' → logprob: -8.628388404846191
    4. '   ' → logprob: -8.878388404846191
    5. ' s' → logprob: -9.753388404846191
    6. ' ciphertext' → logprob: -9.753388404846191
    7. ' code' → logprob: -10.628388404846191
    8. 'text' → logprob: -11.003388404846191
    9. ' line' → logprob: -11.253388404846191
    10. ' text' → logprob: -11.378388404846191

Token 234: ' enc' (ID: 3219)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -0.15200699865818024
    2. '   ' → logprob: -2.1520071029663086
    3. ' cipher' → logprob: -4.652007102966309
    4. 'text' → logprob: -4.902007102966309
    5. 'line' → logprob: -6.027007102966309
    6. 's' → logprob: -6.277007102966309
    7. ' ciphertext' → logprob: -6.652007102966309
    8. 'c' → logprob: -7.527007102966309
    9. 'ct' → logprob: -7.652007102966309
    10. '    
' → logprob: -7.777007102966309

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6363973617553711
    2. ' =' → logprob: -2.261397361755371
    3. 'oded' → logprob: -2.386397361755371
    4. '_line' → logprob: -2.511397361755371
    5. '=input' → logprob: -3.261397361755371
    6. 'ipher' → logprob: -3.511397361755371
    7. '_message' → logprob: -3.636397361755371
    8. '_text' → logprob: -4.136397361755371
    9. '=line' → logprob: -4.136397361755371
    10. 'ode' → logprob: -4.511397361755371

Token 236: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0017030329909175634
    2. ' input' → logprob: -6.376703262329102
    3. '(input' → logprob: -15.126703262329102
    4. 'sys' → logprob: -15.251703262329102
    5. '=input' → logprob: -16.3767032623291
    6. '<input' → logprob: -16.5017032623291
    7. '   ' → logprob: -16.7517032623291
    8. 'list' → logprob: -17.0017032623291
    9. '	input' → logprob: -17.8767032623291
    10. ' ' → logprob: -18.2517032623291

Token 237: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003087678924202919
    2. '()' → logprob: -8.125308990478516
    3. 'rstrip' → logprob: -11.875308990478516
    4. '.strip' → logprob: -12.625308990478516
    5. '.rstrip' → logprob: -13.125308990478516
    6. 'strip' → logprob: -15.125308990478516
    7. '_strip' → logprob: -16.500308990478516
    8. ' ().' → logprob: -16.500308990478516
    9. '()
' → logprob: -16.625308990478516
    10. '(' → logprob: -17.250308990478516

Token 238: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6931473612785339
    2. 'rstrip' → logprob: -0.6931473612785339
    3. ' strip' → logprob: -16.693147659301758
    4. '.rstrip' → logprob: -16.943147659301758
    5. '.strip' → logprob: -18.443147659301758
    6. 'rs' → logprob: -18.818147659301758
    7. 'rst' → logprob: -18.943147659301758
    8. 'split' → logprob: -19.318147659301758
    9. '_strip' → logprob: -19.318147659301758
    10. 'r' → logprob: -19.568147659301758

Token 239: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01613501086831093
    2. '()
' → logprob: -4.141135215759277
    3. '()
' → logprob: -9.641135215759277
    4. '()\' → logprob: -10.641135215759277
    5. '()

' → logprob: -12.266135215759277
    6. '(' → logprob: -13.141135215759277
    7. ')' → logprob: -13.266135215759277
    8. '())' → logprob: -13.516135215759277
    9. ' ()' → logprob: -15.016135215759277
    10. '   ' → logprob: -15.016135215759277

Token 240: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.015418400056660175
    2. 'n' → logprob: -4.265418529510498
    3. ')' → logprob: -7.015418529510498
    4. 'newline' → logprob: -8.76541805267334
    5. '')' → logprob: -9.39041805267334
    6. ''\' → logprob: -10.01541805267334
    7. '('\' → logprob: -10.51541805267334
    8. '
' → logprob: -10.89041805267334
    9. ')\' → logprob: -11.01541805267334
    10. '"\' → logprob: -13.14041805267334

Token 241: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.32676398754119873
    2. '')
' → logprob: -1.7017639875411987
    3. ')' → logprob: -2.4517641067504883
    4. ')
' → logprob: -4.826764106750488
    5. '()' → logprob: -6.701764106750488
    6. ')')
' → logprob: -8.201764106750488
    7. '')
' → logprob: -8.326764106750488
    8. '').' → logprob: -8.826764106750488
    9. '())' → logprob: -9.451764106750488
    10. '())
' → logprob: -9.701764106750488

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035475246608257294
    2. 'found' → logprob: -4.035475254058838
    3. 'for' → logprob: -4.660475254058838
    4. ' for' → logprob: -5.035475254058838
    5. ' found' → logprob: -6.785475254058838
    6. 'decoded' → logprob: -10.53547477722168
    7. '```' → logprob: -11.91047477722168
    8. 'possible' → logprob: -11.91047477722168
    9. ' ' → logprob: -12.16047477722168
    10. '  ' → logprob: -12.28547477722168

Token 243: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5804434418678284
    2. 'found' (adapté à ' found') → logprob: -0.8304434418678284
    3. 'decoded' → logprob: -5.705443382263184
    4. 'best' → logprob: -8.080443382263184
    5. 'possible' → logprob: -8.330443382263184
    6. 'flag' → logprob: -8.830443382263184
    7. 'de' → logprob: -9.455443382263184
    8. 'poss' → logprob: -9.830443382263184
    9. ' for' → logprob: -10.080443382263184
    10. 'results' → logprob: -10.080443382263184

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3541039228439331
    2. '=' → logprob: -1.229103922843933
    3. '=False' → logprob: -5.229104042053223
    4. ':' → logprob: -8.229104042053223
    5. '=True' → logprob: -12.479104042053223
    6. '   ' → logprob: -12.479104042053223
    7. ',' → logprob: -12.854104042053223
    8. ' ' → logprob: -13.729104042053223
    9. '=None' → logprob: -14.229104042053223
    10. 'found' → logprob: -14.229104042053223

Token 245: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031803252641111612
    2. ' False' → logprob: -5.753180503845215
    3. 'None' → logprob: -13.253180503845215
    4. '''' → logprob: -14.878180503845215
    5. '(False' → logprob: -14.878180503845215
    6. '""' → logprob: -16.3781795501709
    7. 'True' → logprob: -17.5031795501709
    8. '   ' → logprob: -18.1281795501709
    9. '0' → logprob: -18.5031795501709
    10. '"' → logprob: -19.0031795501709

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038235874380916357
    2. ' for' → logprob: -6.378823757171631
    3. '    
' → logprob: -7.253823757171631
    4. '<|end|>' → logprob: -7.253823757171631
    5. 'for' → logprob: -7.628823757171631
    6. ',' → logprob: -9.628823280334473
    7. '
' → logprob: -10.003823280334473
    8. '    ' → logprob: -10.128823280334473
    9. ':' → logprob: -11.378823280334473
    10. '       ' → logprob: -11.753823280334473

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006110332440584898
    2. ' for' → logprob: -5.381110191345215
    3. 'for' → logprob: -6.756110191345215
    4. '<|end|>' → logprob: -9.006110191345215
    5. '
' → logprob: -9.506110191345215
    6. '```' → logprob: -9.756110191345215
    7. '       ' → logprob: -10.881110191345215
    8. '    
' → logprob: -11.006110191345215
    9. ' ' → logprob: -11.506110191345215
    10. '	for' → logprob: -12.006110191345215

Token 248: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6810216903686523
    2. ' for' → logprob: -0.9310216903686523
    3. 'for' (adapté à ' for') → logprob: -2.3060216903686523
    4. '	for' → logprob: -10.056021690368652
    5. ' ' → logprob: -10.931021690368652
    6. '    
' → logprob: -11.556021690368652
    7. '       ' → logprob: -11.931021690368652
    8. '    ' → logprob: -12.556021690368652
    9. '```' → logprob: -12.556021690368652
    10. '  ' → logprob: -12.681021690368652

Token 249: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05494344234466553
    2. 'a' → logprob: -2.929943561553955
    3. '	a' → logprob: -10.429943084716797
    4. '_a' → logprob: -11.929943084716797
    5. ' alpha' → logprob: -11.929943084716797
    6. '(a' → logprob: -12.429943084716797
    7. ' ' → logprob: -12.804943084716797
    8. ' b' → logprob: -13.054943084716797
    9. 'alpha' → logprob: -13.742443084716797
    10. '   ' → logprob: -13.867443084716797

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016043636947870255
    2. 'in' → logprob: -4.141043663024902
    3. ' ' → logprob: -12.641043663024902
    4. '<|end|>' → logprob: -12.766043663024902
    5. 'inth' → logprob: -13.766043663024902
    6. ',' → logprob: -15.016043663024902
    7. '	in' → logprob: -15.141043663024902
    8. '   ' → logprob: -15.516043663024902
    9. 's' → logprob: -15.641043663024902
    10. 'import' → logprob: -15.891043663024902

Token 251: ' al' (ID: 434)
  Prédit: 'alph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alph' → logprob: -0.007661036215722561
    2. ' al' → logprob: -4.882660865783691
    3. ' alph' → logprob: -10.382660865783691
    4. 'al' → logprob: -10.882660865783691
    5. 'alp' → logprob: -13.132660865783691
    6. '   ' → logprob: -14.757660865783691
    7. 'alf' → logprob: -14.757660865783691
    8. 'alphabet' → logprob: -15.007660865783691
    9. 'alpha' → logprob: -15.132660865783691
    10. 'alg' → logprob: -15.257660865783691

Token 252: 'phas' (ID: 95774)
  Prédit: 'phas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phas' → logprob: -0.0012549920938909054
    2. 'ph' → logprob: -7.626255035400391
    3. '   ' → logprob: -7.751255035400391
    4. 'as' → logprob: -8.87625503540039
    5. '[' → logprob: -10.25125503540039
    6. 'fas' → logprob: -10.37625503540039
    7. 'pas' → logprob: -11.25125503540039
    8. 'has' → logprob: -11.37625503540039
    9. '=' → logprob: -11.37625503540039
    10. 'pha' → logprob: -11.62625503540039

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032378402538597584
    2. ':
' → logprob: -6.253237724304199
    3. '   ' → logprob: -7.003237724304199
    4. ' in' → logprob: -8.3782377243042
    5. ',' → logprob: -9.0032377243042
    6. ' :' → logprob: -10.3782377243042
    7. '=' → logprob: -13.0032377243042
    8. 'in' → logprob: -13.0032377243042
    9. '<|end|>' → logprob: -13.0032377243042
    10. '       ' → logprob: -13.2532377243042

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04986700415611267
    2. ' for' → logprob: -3.1748669147491455
    3. '<|end|>' → logprob: -5.299867153167725
    4. '	   ' → logprob: -7.549867153167725
    5. ',' → logprob: -8.174866676330566
    6. '	for' → logprob: -8.549866676330566
    7. 'for' → logprob: -8.674866676330566
    8. '   ' → logprob: -8.924866676330566
    9. '	' → logprob: -9.049866676330566
    10. ' ' → logprob: -9.424866676330566

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03608553856611252
    2. 'for' (adapté à ' for') → logprob: -3.661085605621338
    3. '   ' → logprob: -4.661085605621338
    4. '       ' → logprob: -8.41108512878418
    5. '	for' → logprob: -10.28608512878418
    6. ' ' → logprob: -11.28608512878418
    7. '    ' → logprob: -12.16108512878418
    8. '           ' → logprob: -12.91108512878418
    9. '<|end|>' → logprob: -13.53608512878418
    10. '	   ' → logprob: -13.66108512878418

Token 256: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931548714637756
    2. ' b' → logprob: -0.6931548714637756
    3. ' ' → logprob: -13.443155288696289
    4. '   ' → logprob: -13.568155288696289
    5. '```' → logprob: -14.568155288696289
    6. '<|end|>' → logprob: -14.568155288696289
    7. '	b' → logprob: -14.693155288696289
    8. '    ' → logprob: -15.068155288696289
    9. 'B' → logprob: -15.193155288696289
    10. '>b' → logprob: -15.443155288696289

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007276826072484255
    2. 'in' → logprob: -7.250727653503418
    3. 'range' → logprob: -11.375727653503418
    4. ' range' → logprob: -12.500727653503418
    5. ' ' → logprob: -13.250727653503418
    6. '<|end|>' → logprob: -14.500727653503418
    7. '(range' → logprob: -16.125728607177734
    8. '0' → logprob: -17.250728607177734
    9. 's' → logprob: -17.375728607177734
    10. '(' → logprob: -17.750728607177734

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868716359138489
    2. ' range' → logprob: -1.136871576309204
    3. '(range' → logprob: -14.511871337890625
    4. '	range' → logprob: -16.636871337890625
    5. '0' → logprob: -17.761871337890625
    6. ' ' → logprob: -18.011871337890625
    7. '26' → logprob: -19.011871337890625
    8. ' xrange' → logprob: -19.386871337890625
    9. '   ' → logprob: -20.136871337890625
    10. '20' → logprob: -20.136871337890625

Token 259: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014013137842994183
    2. '26' → logprob: -8.875140190124512
    3. ' (' → logprob: -15.125140190124512
    4. ' ' → logprob: -17.125139236450195
    5. '(
' → logprob: -17.625139236450195
    6. '   ' → logprob: -18.000139236450195
    7. '[' → logprob: -18.500139236450195
    8. ',' → logprob: -18.750139236450195
    9. '{' → logprob: -19.500139236450195
    10. '(-' → logprob: -19.750139236450195

Token 260: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.000003814697266
    4. '   ' → logprob: -17.375003814697266
    5. '(' → logprob: -18.500003814697266
    6. '27' → logprob: -20.000003814697266
    7. '	' → logprob: -20.250003814697266
    8. ')' → logprob: -20.625003814697266
    9. '1' → logprob: -20.625003814697266
    10. '
' → logprob: -21.125003814697266

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030120696872472763
    2. '):
' → logprob: -3.530120611190796
    3. ':' → logprob: -8.155120849609375
    4. '+' → logprob: -10.280120849609375
    5. '   ' → logprob: -11.030120849609375
    6. '):
' → logprob: -12.155120849609375
    7. '):

' → logprob: -12.405120849609375
    8. '       ' → logprob: -12.405120849609375
    9. ')' → logprob: -12.530120849609375
    10. '<|end|>' → logprob: -12.655120849609375

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002302383363712579
    2. '<|end|>' → logprob: -9.250229835510254
    3. '            
' → logprob: -10.500229835510254
    4. ',' → logprob: -10.500229835510254
    5. ' token' → logprob: -11.500229835510254
    6. '#' → logprob: -11.625229835510254
    7. ' code' → logprob: -12.000229835510254
    8. '	       ' → logprob: -12.250229835510254
    9. '```' → logprob: -12.250229835510254
    10. '          ' → logprob: -12.250229835510254

Token 263: ' dec' (ID: 1885)
  Prédit: 'plaintext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plaintext' → logprob: -0.7267374396324158
    2. 'plain' → logprob: -1.7267374992370605
    3. 'decoded' → logprob: -1.9767374992370605
    4. ' plaintext' → logprob: -2.6017374992370605
    5. ' plain' → logprob: -3.2267374992370605
    6. ' decoded' → logprob: -3.2267374992370605
    7. '           ' → logprob: -3.9767374992370605
    8. 'dec' (adapté à ' dec') → logprob: -4.3517374992370605
    9. 'de' → logprob: -5.6017374992370605
    10. ' dec' → logprob: -5.6017374992370605

Token 264: ' =' (ID: 314)
  Prédit: 'oded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oded' → logprob: -0.5682382583618164
    2. ' =' → logprob: -1.4432382583618164
    3. '=' → logprob: -1.6932382583618164
    4. 'ode' → logprob: -4.693238258361816
    5. 'ipher' → logprob: -7.068238258361816
    6. 'ed' → logprob: -7.318238258361816
    7. '       ' → logprob: -7.318238258361816
    8. '   ' → logprob: -7.443238258361816
    9. '        ' → logprob: -7.943238258361816
    10. 'rypt' → logprob: -8.568238258361816

Token 265: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.2519293427467346
    2. ' decode' → logprob: -1.5019292831420898
    3. '.decode' → logprob: -15.37692928314209
    4. '   ' → logprob: -17.251930236816406
    5. '           ' → logprob: -17.501930236816406
    6. '_decode' → logprob: -17.876930236816406
    7. 'decrypt' → logprob: -18.626930236816406
    8. 'decoded' → logprob: -18.876930236816406
    9. 'dec' → logprob: -19.376930236816406
    10. 'de' → logprob: -20.626930236816406

Token 266: '(enc' (ID: 162116)
  Prédit: '(enc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(enc' → logprob: -2.696889623621246e-06
    2. '(encoded' → logprob: -13.25000286102295
    3. '(en' → logprob: -14.37500286102295
    4. '(' → logprob: -15.37500286102295
    5. 'enc' → logprob: -16.000001907348633
    6. '(cipher' → logprob: -18.125001907348633
    7. '.enc' → logprob: -19.375001907348633
    8. '(
' → logprob: -19.500001907348633
    9. ' enc' → logprob: -19.500001907348633
    10. '(ent' → logprob: -19.500001907348633

Token 267: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25202813744544983
    2. ',a' → logprob: -1.5020281076431274
    3. ' ,' → logprob: -9.252028465270996
    4. 'a' → logprob: -13.502028465270996
    5. '   ' → logprob: -15.127028465270996
    6. '           ' → logprob: -15.377028465270996
    7. '       ' → logprob: -15.627028465270996
    8. ',c' → logprob: -15.752028465270996
    9. '(a' → logprob: -15.877028465270996
    10. '```' → logprob: -15.877028465270996

Token 268: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.004082793369889259
    2. ',' → logprob: -5.504082679748535
    3. 'b' → logprob: -13.004082679748535
    4. ' ,' → logprob: -13.129082679748535
    5. ',
' → logprob: -17.62908363342285
    6. ' b' → logprob: -17.62908363342285
    7. ',p' → logprob: -18.00408363342285
    8. ',c' → logprob: -18.50408363342285
    9. ',y' → logprob: -18.50408363342285
    10. ',g' → logprob: -18.50408363342285

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5773797631263733
    2. ')
' → logprob: -0.8273797631263733
    3. '           ' → logprob: -6.5773797035217285
    4. ')
' → logprob: -10.327380180358887
    5. '          ' → logprob: -12.702380180358887
    6. ')

' → logprob: -12.827380180358887
    7. '       ' → logprob: -13.202380180358887
    8. '               ' → logprob: -13.452380180358887
    9. ' )
' → logprob: -13.702380180358887
    10. ')==' → logprob: -14.077380180358887

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006105714710429311
    2. '<|end|>' → logprob: -8.0006103515625
    3. '            
' → logprob: -8.6256103515625
    4. '
' → logprob: -10.0006103515625
    5. '<|end|>' → logprob: -10.8756103515625
    6. '```' → logprob: -11.0006103515625
    7. ' if' → logprob: -12.7506103515625
    8. '       ' → logprob: -13.1256103515625
    9. '               ' → logprob: -13.3756103515625
    10. '          ' → logprob: -13.5006103515625

Token 271: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16721908748149872
    2. ' for' → logprob: -2.7922191619873047
    3. 'if' (adapté à ' if') → logprob: -3.2922191619873047
    4. 'for' → logprob: -3.4172191619873047
    5. ' if' → logprob: -3.7922191619873047
    6. '               ' → logprob: -9.542219161987305
    7. '   ' → logprob: -10.042219161987305
    8. '       ' → logprob: -10.542219161987305
    9. '```' → logprob: -11.167219161987305
    10. '                   ' → logprob: -12.542219161987305

Token 272: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.43692320585250854
    2. 'any' → logprob: -1.0619232654571533
    3. ' keywords' → logprob: -5.561923027038574
    4. 'keywords' → logprob: -6.186923027038574
    5. ' all' → logprob: -7.061923027038574
    6. 'dec' → logprob: -7.436923027038574
    7. ' dec' → logprob: -8.061923027038574
    8. 'all' → logprob: -8.436923027038574
    9. '(any' → logprob: -8.811923027038574
    10. ''any' → logprob: -9.561923027038574

Token 273: '(k' (ID: 12125)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.9102004170417786
    2. '(k' → logprob: -1.7852003574371338
    3. '(keyword' → logprob: -1.9102003574371338
    4. 'kw' → logprob: -2.160200357437134
    5. '(' → logprob: -2.285200357437134
    6. 'word' → logprob: -3.535200357437134
    7. '(dec' → logprob: -4.035200595855713
    8. '(key' → logprob: -4.410200595855713
    9. 'k' → logprob: -6.160200595855713
    10. 'keyword' → logprob: -6.160200595855713

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05541408807039261
    2. 'in' → logprob: -2.9304141998291016
    3. ')' → logprob: -8.055414199829102
    4. 'k' → logprob: -10.055414199829102
    5. '==' → logprob: -10.180414199829102
    6. ' ==' → logprob: -10.305414199829102
    7. ' ' → logprob: -10.305414199829102
    8. ' k' → logprob: -10.805414199829102
    9. '  ' → logprob: -12.305414199829102
    10. ' not' → logprob: -12.555414199829102

Token 275: ' dec' (ID: 1885)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.4740789234638214
    2. ' dec' → logprob: -0.974078893661499
    3. '(dec' → logprob: -14.349079132080078
    4. 'decoded' → logprob: -14.474079132080078
    5. '_dec' → logprob: -14.724079132080078
    6. 'decode' → logprob: -15.849079132080078
    7. 'd' → logprob: -16.849079132080078
    8. ')' → logprob: -17.099079132080078
    9. 'Dec' → logprob: -17.599079132080078
    10. 'de' → logprob: -17.599079132080078

Token 276: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20823845267295837
    2. ' for' → logprob: -2.333238363265991
    3. ')' → logprob: -2.583238363265991
    4. ' ):' → logprob: -4.70823860168457
    5. '):
' → logprob: -5.83323860168457
    6. 'for' → logprob: -6.20823860168457
    7. ':' → logprob: -7.58323860168457
    8. ' )' → logprob: -7.83323860168457
    9. '()' → logprob: -8.58323860168457
    10. ' ):
' → logprob: -9.83323860168457

Token 277: ' k' (ID: 372)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.2014218121767044
    2. 'keywords' → logprob: -1.701421856880188
    3. ' ' → logprob: -13.201421737670898
    4. '_keywords' → logprob: -13.576421737670898
    5. ' key' → logprob: -14.451421737670898
    6. '   ' → logprob: -14.576421737670898
    7. ' keyword' → logprob: -14.576421737670898
    8. 'k' → logprob: -14.701421737670898
    9. ')' → logprob: -14.826421737670898
    10. 'dec' → logprob: -15.076421737670898

Token 278: ' in' (ID: 306)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.11658964306116104
    2. 'keywords' → logprob: -2.2415895462036133
    3. '<|end|>' → logprob: -5.991589546203613
    4. ')' → logprob: -7.991589546203613
    5. ' in' → logprob: -8.366589546203613
    6. '_keywords' → logprob: -8.616589546203613
    7. ' k' → logprob: -8.866589546203613
    8. ' ' → logprob: -8.866589546203613
    9. ' )' → logprob: -9.491589546203613
    10. 'Keywords' → logprob: -10.241589546203613

Token 279: ' keywords' (ID: 29778)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -0.016044458374381065
    2. ' keywords' → logprob: -4.141044616699219
    3. ')' → logprob: -12.266044616699219
    4. '
' → logprob: -13.266044616699219
    5. '   ' → logprob: -13.516044616699219
    6. ' ' → logprob: -15.141044616699219
    7. '_keywords' → logprob: -15.141044616699219
    8. '['' → logprob: -15.266044616699219
    9. 'keyword' → logprob: -15.391044616699219
    10. 'Keywords' → logprob: -15.641044616699219

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2297336310148239
    2. '):
' → logprob: -1.6047335863113403
    3. '           ' → logprob: -6.104733467102051
    4. ')' → logprob: -6.479733467102051
    5. '               ' → logprob: -8.10473346710205
    6. ':' → logprob: -9.72973346710205
    7. '):
' → logprob: -10.10473346710205
    8. '                   ' → logprob: -10.35473346710205
    9. '):

' → logprob: -10.60473346710205
    10. '          ' → logprob: -10.97973346710205

Token 281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013123786775395274
    2. '                   ' → logprob: -6.876312255859375
    3. '                       ' → logprob: -8.751312255859375
    4. '           ' → logprob: -11.001312255859375
    5. '              ' → logprob: -11.001312255859375
    6. 'found' → logprob: -11.001312255859375
    7. ' found' → logprob: -11.251312255859375
    8. '                               ' → logprob: -11.376312255859375
    9. '```' → logprob: -11.376312255859375
    10. '<|end|>' → logprob: -11.876312255859375

Token 282: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5640499591827393
    2. ' found' → logprob: -1.1890499591827393
    3. 'found' → logprob: -2.8140499591827393
    4. ' print' → logprob: -3.1890499591827393
    5. 'print' (adapté à ' print') → logprob: -4.31404972076416
    6. '                   ' → logprob: -4.43904972076416
    7. '           ' → logprob: -9.56404972076416
    8. '```' → logprob: -9.93904972076416
    9. 'Found' → logprob: -10.81404972076416
    10. '
' → logprob: -11.18904972076416

Token 283: '(dec' (ID: 77281)
  Prédit: '(dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dec' → logprob: -0.00411959970369935
    2. 'dec' → logprob: -5.504119396209717
    3. '(decoded' → logprob: -10.879119873046875
    4. '(a' → logprob: -11.129119873046875
    5. '(f' → logprob: -12.379119873046875
    6. 'a' → logprob: -13.629119873046875
    7. '(' → logprob: -14.129119873046875
    8. '(d' → logprob: -14.754119873046875
    9. ' dec' → logprob: -14.754119873046875
    10. '(de' → logprob: -14.879119873046875

Token 284: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16063199937343597
    2. ')' → logprob: -1.9106320142745972
    3. '               ' → logprob: -7.910632133483887
    4. ')
' → logprob: -10.660632133483887
    5. '                   ' → logprob: -11.785632133483887
    6. ')return' → logprob: -12.410632133483887
    7. ',' → logprob: -13.410632133483887
    8. ')

' → logprob: -13.535632133483887
    9. ')`
' → logprob: -13.910632133483887
    10. ' )
' → logprob: -14.910632133483887

Token 285: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012511172099038959
    2. '                
' → logprob: -9.75012493133545
    3. 'found' → logprob: -10.37512493133545
    4. ',' → logprob: -11.50012493133545
    5. '                   ' → logprob: -12.12512493133545
    6. '           ' → logprob: -12.37512493133545
    7. '
' → logprob: -12.50012493133545
    8. 'Found' → logprob: -12.87512493133545
    9. ' found' → logprob: -12.87512493133545
    10. '```' → logprob: -13.50012493133545

Token 286: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.00020568605395965278
    2. ' found' → logprob: -8.500205993652344
    3. '               ' → logprob: -13.250205993652344
    4. '
' → logprob: -14.750205993652344
    5. 'Found' → logprob: -18.125205993652344
    6. '                
' → logprob: -18.250205993652344
    7. '	found' → logprob: -18.375205993652344
    8. '(found' → logprob: -19.125205993652344
    9. '```' → logprob: -20.125205993652344
    10. '           ' → logprob: -21.000205993652344

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16756969690322876
    2. ' =' → logprob: -1.917569637298584
    3. '=True' → logprob: -4.917569637298584
    4. '=False' → logprob: -13.667570114135742
    5. '=true' → logprob: -14.792570114135742
    6. 'True' → logprob: -16.042570114135742
    7. '(True' → logprob: -17.417570114135742
    8. ' True' → logprob: -17.667570114135742
    9. '=
' → logprob: -17.792570114135742
    10. '<|end|>' → logprob: -18.167570114135742

Token 288: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.676292231422849e-05
    2. ' True' → logprob: -11.000017166137695
    3. '=True' → logprob: -18.625017166137695
    4. '   ' → logprob: -19.000017166137695
    5. '               ' → logprob: -20.125017166137695
    6. '(True' → logprob: -20.625017166137695
    7. '           ' → logprob: -21.250017166137695
    8. 'true' → logprob: -21.375017166137695
    9. '                   ' → logprob: -21.625017166137695
    10. '       ' → logprob: -23.125017166137695

Token 289: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012011249782517552
    2. '                
' → logprob: -9.750120162963867
    3. '			' → logprob: -10.750120162963867
    4. '                   ' → logprob: -11.125120162963867
    5. '<|end|>' → logprob: -11.250120162963867
    6. '
' → logprob: -12.375120162963867
    7. '           ' → logprob: -13.625120162963867
    8. '				
' → logprob: -13.750120162963867
    9. '                       ' → logprob: -14.000120162963867
    10. '		       ' → logprob: -14.125120162963867

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0325924449716695e-05
    2. '                   ' → logprob: -12.37501049041748
    3. '           ' → logprob: -12.87501049041748
    4. '<|end|>' → logprob: -13.62501049041748
    5. '       ' → logprob: -14.37501049041748
    6. '                
' → logprob: -14.50001049041748
    7. '			' → logprob: -15.00001049041748
    8. '                       ' → logprob: -15.25001049041748
    9. '   ' → logprob: -15.50001049041748
    10. 'break' → logprob: -16.250009536743164

Token 291: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011477130465209484
    2. '               ' → logprob: -4.511476993560791
    3. ' break' → logprob: -7.761476993560791
    4. '	break' → logprob: -13.01147747039795
    5. '                   ' → logprob: -15.26147747039795
    6. '_break' → logprob: -15.26147747039795
    7. '
' → logprob: -15.51147747039795
    8. '           ' → logprob: -16.011476516723633
    9. '                
' → logprob: -16.136476516723633
    10. 'BREAK' → logprob: -16.636476516723633

Token 292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5264310240745544
    2. '<|end|>' → logprob: -0.9014310240745544
    3. '```' → logprob: -7.151431083679199
    4. '
' → logprob: -7.276431083679199
    5. '        
' → logprob: -7.526431083679199
    6. '	' → logprob: -8.1514310836792
    7. '<|end|>' → logprob: -8.5264310836792
    8. '    
' → logprob: -8.9014310836792
    9. '           ' → logprob: -9.1514310836792
    10. '   ' → logprob: -9.7764310836792

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009082449832931161
    2. '<|end|>' → logprob: -7.125908374786377
    3. '        
' → logprob: -10.000907897949219
    4. '           ' → logprob: -10.625907897949219
    5. '   ' → logprob: -11.500907897949219
    6. '```' → logprob: -11.750907897949219
    7. '	' → logprob: -12.500907897949219
    8. '               ' → logprob: -13.125907897949219
    9. '    
' → logprob: -13.125907897949219
    10. '
' → logprob: -13.625907897949219

Token 294: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00759184081107378
    2. '   ' → logprob: -5.007591724395752
    3. '           ' → logprob: -7.757591724395752
    4. '<|end|>' → logprob: -8.38259220123291
    5. '    ' → logprob: -9.75759220123291
    6. '        
' → logprob: -9.88259220123291
    7. '               ' → logprob: -10.63259220123291
    8. '	' → logprob: -10.88259220123291
    9. '     ' → logprob: -11.38259220123291
    10. '    
' → logprob: -11.38259220123291

Token 295: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.25193214416503906
    2. 'found' → logprob: -1.501932144165039
    3. '(found' → logprob: -13.001932144165039
    4. '   ' → logprob: -14.626932144165039
    5. '	found' → logprob: -15.251932144165039
    6. '_found' → logprob: -16.37693214416504
    7. 'Found' → logprob: -16.62693214416504
    8. ' ' → logprob: -17.50193214416504
    9. '       ' → logprob: -18.62693214416504
    10. ' ' → logprob: -19.62693214416504

Token 296: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4848184585571289
    2. ':' → logprob: -1.234818458557129
    3. ':
' → logprob: -2.609818458557129
    4. '   ' → logprob: -4.359818458557129
    5. '       ' → logprob: -5.359818458557129
    6. '               ' → logprob: -7.359818458557129
    7. '==' → logprob: -7.609818458557129
    8. '          ' → logprob: -8.234818458557129
    9. '                   ' → logprob: -9.109818458557129
    10. '<|end|>' → logprob: -9.109818458557129

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030578780570067465
    2. ' break' → logprob: -8.625306129455566
    3. 'break' → logprob: -9.125306129455566
    4. '   ' → logprob: -11.625306129455566
    5. '               ' → logprob: -12.125306129455566
    6. '       ' → logprob: -13.125306129455566
    7. '		' → logprob: -15.125306129455566
    8. '	break' → logprob: -15.250306129455566
    9. '```' → logprob: -15.625306129455566
    10. '          ' → logprob: -16.62530517578125

Token 298: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.024154478684067726
    2. '           ' → logprob: -3.7741544246673584
    3. ' break' → logprob: -7.0241546630859375
    4. '   ' → logprob: -11.524154663085938
    5. '	break' → logprob: -12.399154663085938
    6. '       ' → logprob: -12.524154663085938
    7. '               ' → logprob: -14.274154663085938
    8. '		' → logprob: -15.774154663085938
    9. '_break' → logprob: -17.899154663085938
    10. '```' → logprob: -18.399154663085938


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 41.22%
Précision (top 10): 83.11%
================================================================================
