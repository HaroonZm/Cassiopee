================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
for _ in range(N):
    xa, ya, ra, xb, yb, rb = map(float, input().split())
    dx = xa - xb
    dy = ya - yb
    dist = (dx*dx + dy*dy)**0.5
    
    if dist + rb < ra:
        print(2)
    elif dist + ra < rb:
        print(-2)
    elif dist <= ra + rb and dist >= abs(ra - rb):
        print(1)
    else:
        print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034893216798081994
    2. ''' → logprob: -9.000349044799805
    3. '(N' → logprob: -9.125349044799805
    4. '`' → logprob: -10.375349044799805
    5. '```' → logprob: -10.375349044799805
    6. '(
' → logprob: -11.000349044799805
    7. '('' → logprob: -11.625349044799805
    8. '("("' → logprob: -12.000349044799805
    9. '\(' → logprob: -12.375349044799805
    10. ')' → logprob: -12.875349044799805

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34698352217674255
    2. ')' → logprob: -1.346983551979065
    3. '()' → logprob: -3.5969834327697754
    4. '())' → logprob: -5.346983432769775
    5. '(
' → logprob: -8.096983909606934
    6. '```' → logprob: -9.221983909606934
    7. '))' → logprob: -9.471983909606934
    8. '")' → logprob: -9.596983909606934
    9. '('' → logprob: -9.721983909606934
    10. '(

' → logprob: -9.971983909606934

Token 5: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7971054315567017
    2. 'if' → logprob: -1.7971054315567017
    3. '\n' → logprob: -2.172105312347412
    4. '`' → logprob: -3.172105312347412
    5. 'x' → logprob: -3.672105312347412
    6. '```' → logprob: -3.672105312347412
    7. 's' → logprob: -3.797105312347412
    8. 'a' → logprob: -3.922105312347412
    9. '\' → logprob: -4.047105312347412
    10. ')' → logprob: -4.297105312347412

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020300572738051414
    2. ' i' → logprob: -4.145300388336182
    3. '  ' → logprob: -5.520300388336182
    4. ' N' → logprob: -8.52030086517334
    5. ' n' → logprob: -10.52030086517334
    6. 'i' → logprob: -11.89530086517334
    7. ' ' → logprob: -12.64530086517334
    8. ' range' → logprob: -13.02030086517334
    9. ' for' → logprob: -13.27030086517334
    10. '_' → logprob: -13.52030086517334

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008003469556570053
    2. 'in' → logprob: -4.883003234863281
    3. ' ' → logprob: -7.883003234863281
    4. '  ' → logprob: -12.383003234863281
    5. ' N' → logprob: -12.383003234863281
    6. ' i' → logprob: -12.383003234863281
    7. ',' → logprob: -13.258003234863281
    8. ' ,' → logprob: -13.883003234863281
    9. 'range' → logprob: -14.133003234863281
    10. '_' → logprob: -14.508003234863281

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326520442962646
    2. ' range' → logprob: -1.3132652044296265
    3. '	range' → logprob: -13.313264846801758
    4. '_' → logprob: -14.438264846801758
    5. '_range' → logprob: -14.688264846801758
    6. '(range' → logprob: -14.938264846801758
    7. ' ' → logprob: -15.063264846801758
    8. 'in' → logprob: -16.188264846801758
    9. 'rang' → logprob: -16.563264846801758
    10. ' xrange' → logprob: -17.188264846801758

Token 9: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00405370257794857
    2. '(N' → logprob: -5.629053592681885
    3. ' (' → logprob: -7.754053592681885
    4. '(n' → logprob: -11.254054069519043
    5. '(range' → logprob: -11.754054069519043
    6. '(
' → logprob: -13.879054069519043
    7. ' ' → logprob: -13.879054069519043
    8. ' N' → logprob: -14.879054069519043
    9. '```' → logprob: -15.129054069519043
    10. '(len' → logprob: -15.754054069519043

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09369517862796783
    2. ')' → logprob: -2.8436951637268066
    3. ':' → logprob: -3.4686951637268066
    4. ':)' → logprob: -10.593695640563965
    5. '):
' → logprob: -10.718695640563965
    6. ' ):' → logprob: -12.218695640563965
    7. '+' → logprob: -12.843695640563965
    8. '```' → logprob: -13.093695640563965
    9. '():' → logprob: -13.593695640563965
    10. ' )' → logprob: -13.593695640563965

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01153710950165987
    2. '    
' → logprob: -4.636537075042725
    3. '```' → logprob: -7.386537075042725
    4. '    ' → logprob: -7.886537075042725
    5. ' ' → logprob: -8.386537551879883
    6. ' input' → logprob: -9.011537551879883
    7. ' 
' → logprob: -9.136537551879883
    8. 'input' → logprob: -9.886537551879883
    9. '   ' → logprob: -10.386537551879883
    10. 'print' → logprob: -10.511537551879883

Token 12: ' xa' (ID: 24817)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20279859006404877
    2. 'print' → logprob: -2.70279860496521
    3. 'x' → logprob: -3.32779860496521
    4. 'a' → logprob: -3.82779860496521
    5. 'text' → logprob: -4.952798366546631
    6. 'name' → logprob: -5.077798366546631
    7. 'line' → logprob: -5.202798366546631
    8. 'n' → logprob: -5.452798366546631
    9. 'data' → logprob: -5.452798366546631
    10. '```' → logprob: -5.452798366546631

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08646079897880554
    2. 'x' → logprob: -2.961460828781128
    3. ' ,' → logprob: -4.836460590362549
    4. 'y' → logprob: -5.211460590362549
    5. ' ' → logprob: -5.586460590362549
    6. ' =' → logprob: -5.961460590362549
    7. ',y' → logprob: -6.086460590362549
    8. 'm' → logprob: -6.336460590362549
    9. 't' → logprob: -6.586460590362549
    10. '=' → logprob: -6.961460590362549

Token 14: ' ya' (ID: 2289)
  Prédit: 'ya'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ya' → logprob: -0.46526050567626953
    2. ' ya' → logprob: -1.7152605056762695
    3. 'yb' → logprob: -2.4652605056762695
    4. ' ' → logprob: -3.2152605056762695
    5. ',' → logprob: -4.0902605056762695
    6. 'y' → logprob: -4.4652605056762695
    7. ' xb' → logprob: -4.4652605056762695
    8. ' ,' → logprob: -4.7152605056762695
    9. 'a' → logprob: -6.4652605056762695
    10. 'x' → logprob: -6.4652605056762695

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11570299416780472
    2. ' =' → logprob: -2.8657031059265137
    3. '=' → logprob: -2.9907031059265137
    4. ' ,' → logprob: -6.240703105926514
    5. ')' → logprob: -10.115702629089355
    6. '<|end|>' → logprob: -10.490702629089355
    7. '   ' → logprob: -11.615702629089355
    8. ' ' → logprob: -11.865702629089355
    9. '  ' → logprob: -12.803202629089355
    10. '    ' → logprob: -12.928202629089355

Token 16: ' ra' (ID: 4409)
  Prédit: 'xb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xb' → logprob: -0.8360874652862549
    2. ' xb' → logprob: -1.0860874652862549
    3. 'x' → logprob: -1.9610874652862549
    4. 'xa' → logprob: -3.836087465286255
    5. 'xba' → logprob: -3.961087465286255
    6. ',' → logprob: -4.586087226867676
    7. ' x' → logprob: -4.836087226867676
    8. ' xa' → logprob: -5.586087226867676
    9. ' ,' → logprob: -5.711087226867676
    10. ' ' → logprob: -5.836087226867676

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4655840992927551
    2. '=' → logprob: -1.0905840396881104
    3. ',' → logprob: -3.3405840396881104
    4. ')' → logprob: -7.3405842781066895
    5. ' ,' → logprob: -9.465583801269531
    6. ')=' → logprob: -10.715583801269531
    7. ' ' → logprob: -11.090583801269531
    8. 's' → logprob: -12.340583801269531
    9. ' )' → logprob: -12.965583801269531
    10. 'x' → logprob: -12.965583801269531

Token 18: ' xb' (ID: 144451)
  Prédit: ' xb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xb' → logprob: -0.05527050048112869
    2. 'xb' → logprob: -2.9302704334259033
    3. ' ' → logprob: -8.555270195007324
    4. 'x' → logprob: -9.680270195007324
    5. ' x' → logprob: -10.180270195007324
    6. ' ,' → logprob: -10.555270195007324
    7. '  ' → logprob: -11.555270195007324
    8. 'xba' → logprob: -11.805270195007324
    9. '`' → logprob: -11.930270195007324
    10. ',' → logprob: -12.180270195007324

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024203950306400657
    2. ' ,' → logprob: -8.625242233276367
    3. ')' → logprob: -11.000242233276367
    4. '`,' → logprob: -11.625242233276367
    5. '<|end|>' → logprob: -11.750242233276367
    6. '=' → logprob: -11.875242233276367
    7. '',' → logprob: -12.000242233276367
    8. 's' → logprob: -12.625242233276367
    9. '",' → logprob: -13.125242233276367
    10. ',a' → logprob: -13.625242233276367

Token 20: ' y' (ID: 342)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002319071936653927
    2. '<|end|>' → logprob: -9.000231742858887
    3. ',' → logprob: -9.750231742858887
    4. ' b' → logprob: -10.625231742858887
    5. ' ' → logprob: -11.375231742858887
    6. 'x' → logprob: -11.500231742858887
    7. '```' → logprob: -13.625231742858887
    8. '<|end|>' → logprob: -14.125231742858887
    9. 'xb' → logprob: -15.000231742858887
    10. '  ' → logprob: -15.000231742858887

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004251931968610734
    2. '=' → logprob: -8.250425338745117
    3. 'c' → logprob: -10.375425338745117
    4. ' ,' → logprob: -10.375425338745117
    5. ' =' → logprob: -10.375425338745117
    6. ')' → logprob: -10.625425338745117
    7. '<|end|>' → logprob: -11.125425338745117
    8. '_' → logprob: -11.500425338745117
    9. '_,' → logprob: -12.000425338745117
    10. 'b' → logprob: -12.875425338745117

Token 23: ' rb' (ID: 39441)
  Prédit: ' rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rb' → logprob: -0.3877767026424408
    2. 'rb' → logprob: -1.1377767324447632
    3. '_rb' → logprob: -7.512776851654053
    4. 'r' → logprob: -9.137776374816895
    5. ' ' → logprob: -9.262776374816895
    6. '(rb' → logprob: -9.637776374816895
    7. '<|end|>' → logprob: -10.512776374816895
    8. 'ra' → logprob: -10.887776374816895
    9. ' ra' → logprob: -11.262776374816895
    10. ' r' → logprob: -11.512776374816895

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11284423619508743
    2. ' =' → logprob: -2.237844228744507
    3. '=input' → logprob: -10.987844467163086
    4. ',' → logprob: -12.612844467163086
    5. ')' → logprob: -14.112844467163086
    6. '=line' → logprob: -15.237844467163086
    7. '=int' → logprob: -15.612844467163086
    8. '=

' → logprob: -16.112844467163086
    9. ' ' → logprob: -16.362844467163086
    10. '   ' → logprob: -16.987844467163086

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0025100242346525192
    2. 'map' → logprob: -6.002510070800781
    3. ' list' → logprob: -10.877510070800781
    4. ' input' → logprob: -11.377510070800781
    5. '   ' → logprob: -13.252510070800781
    6. 'input' → logprob: -14.127510070800781
    7. '	map' → logprob: -14.502510070800781
    8. ' ' → logprob: -14.627510070800781
    9. ' [' → logprob: -15.127510070800781
    10. '[' → logprob: -15.502510070800781

Token 26: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2837750017642975
    2. '(' → logprob: -1.408774971961975
    3. '(lambda' → logprob: -7.0337748527526855
    4. '(str' → logprob: -7.1587748527526855
    5. '(input' → logprob: -7.1587748527526855
    6. '(
' → logprob: -9.908775329589844
    7. '(float' → logprob: -10.158775329589844
    8. '(list' → logprob: -10.283775329589844
    9. '[int' → logprob: -11.283775329589844
    10. 'int' → logprob: -11.408775329589844

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6944605112075806
    2. ',input' → logprob: -0.6944605112075806
    3. 'input' → logprob: -7.069460391998291
    4. '(input' → logprob: -7.819460391998291
    5. ' ,' → logprob: -10.31946086883545
    6. '(' → logprob: -12.19446086883545
    7. ' input' → logprob: -12.19446086883545
    8. ',int' → logprob: -12.44446086883545
    9. '(),' → logprob: -12.69446086883545
    10. ')' → logprob: -12.81946086883545

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0008217801805585623
    2. ' input' → logprob: -7.125821590423584
    3. ')' → logprob: -11.125822067260742
    4. '(input' → logprob: -13.625822067260742
    5. ',input' → logprob: -15.000822067260742
    6. '   ' → logprob: -15.125822067260742
    7. '=input' → logprob: -15.125822067260742
    8. ' ' → logprob: -15.625822067260742
    9. '[input' → logprob: -16.000822067260742
    10. '	input' → logprob: -16.625822067260742

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00048596507986076176
    2. ')' → logprob: -7.750485897064209
    3. '()' → logprob: -10.000486373901367
    4. '())' → logprob: -11.875486373901367
    5. ' ().' → logprob: -13.750486373901367
    6. '))' → logprob: -14.000486373901367
    7. '(' → logprob: -14.875486373901367
    8. ').' → logprob: -14.875486373901367
    9. '()))' → logprob: -16.875486373901367
    10. '()
' → logprob: -17.250486373901367

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001290454383706674
    2. 'strip' → logprob: -9.000128746032715
    3. 'rstrip' → logprob: -12.250128746032715
    4. ' split' → logprob: -14.375128746032715
    5. '(split' → logprob: -15.750128746032715
    6. 'spl' → logprob: -17.25012969970703
    7. '.split' → logprob: -18.37512969970703
    8. '().' → logprob: -19.12512969970703
    9. '```' → logprob: -19.12512969970703
    10. ')' → logprob: -19.37512969970703

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.43936240673065186
    2. ')' → logprob: -1.8143624067306519
    3. '()))' → logprob: -2.0643625259399414
    4. '))' → logprob: -2.8143625259399414
    5. '()' → logprob: -5.564362525939941
    6. '('' → logprob: -6.439362525939941
    7. ''))' → logprob: -9.439362525939941
    8. '()))
' → logprob: -9.564362525939941
    9. '())
' → logprob: -10.189362525939941
    10. '`)' → logprob: -10.314362525939941

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.324548602104187
    2. '<|end|>' → logprob: -1.324548602104187
    3. 'if' → logprob: -2.3245487213134766
    4. ')' → logprob: -2.3245487213134766
    5. ' if' → logprob: -2.8245487213134766
    6. '```' → logprob: -3.0745487213134766
    7. '
' → logprob: -3.1995487213134766
    8. ':' → logprob: -4.074548721313477
    9. 'a' → logprob: -4.449548721313477
    10. 'd' → logprob: -4.574548721313477

Token 33: ' dx' (ID: 29472)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9420470595359802
    2. 'r' → logprob: -1.692047119140625
    3. 'if' → logprob: -2.192047119140625
    4. 'dist' → logprob: -2.317047119140625
    5. 'distance' → logprob: -2.442047119140625
    6. 'import' → logprob: -3.442047119140625
    7. '   ' → logprob: -3.567047119140625
    8. 'x' → logprob: -4.567047119140625
    9. '```' → logprob: -4.567047119140625
    10. ' if' → logprob: -5.067047119140625

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632259577512741
    2. '=' → logprob: -3.651322603225708
    3. ',' → logprob: -10.901322364807129
    4. ' =)' → logprob: -13.526322364807129
    5. ')' → logprob: -13.651322364807129
    6. ' ' → logprob: -15.026322364807129
    7. ' ,' → logprob: -15.276322364807129
    8. 's' → logprob: -15.651322364807129
    9. ' )' → logprob: -15.901322364807129
    10. ' ' → logprob: -16.901323318481445

Token 35: ' xa' (ID: 24817)
  Prédit: ' xb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xb' → logprob: -0.3043324053287506
    2. 'xb' → logprob: -1.4293323755264282
    3. ' xa' → logprob: -4.304332256317139
    4. 'xa' → logprob: -4.679332256317139
    5. 'abs' → logprob: -9.804332733154297
    6. '(x' → logprob: -10.054332733154297
    7. ' abs' → logprob: -11.554332733154297
    8. ' (' → logprob: -12.179332733154297
    9. '   ' → logprob: -13.054332733154297
    10. ' ' → logprob: -13.679332733154297

Token 36: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31327563524246216
    2. '-' → logprob: -1.3132755756378174
    3. '-b' → logprob: -11.688275337219238
    4. ' ' → logprob: -13.188275337219238
    5. ' ' → logprob: -14.063275337219238
    6. '-x' → logprob: -14.438275337219238
    7. ' –' → logprob: -14.938275337219238
    8. '	' → logprob: -15.063275337219238
    9. '-ra' → logprob: -15.313275337219238
    10. '-xl' → logprob: -15.688275337219238

Token 37: ' xb' (ID: 144451)
  Prédit: 'xb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xb' → logprob: -0.005234121344983578
    2. ' xb' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.380233764648438
    4. 'x' → logprob: -16.630233764648438
    5. '\xb' → logprob: -18.005233764648438
    6. '   ' → logprob: -18.630233764648438
    7. 'xbb' → logprob: -18.755233764648438
    8. 'xab' → logprob: -19.255233764648438
    9. 'yb' → logprob: -19.255233764648438
    10. '0' → logprob: -19.505233764648438

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0959547683596611
    2. '**' → logprob: -2.595954656600952
    3. '<|end|>' → logprob: -4.470954895019531
    4. '```' → logprob: -6.595954895019531
    5. ' 
' → logprob: -7.220954895019531
    6. '2' → logprob: -7.845954895019531
    7. ' ' → logprob: -7.970954895019531
    8. '    
' → logprob: -7.970954895019531
    9. ')' → logprob: -8.095954895019531
    10. '<|end|>' → logprob: -8.220954895019531

Token 39: '   ' (ID: 271)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5338432192802429
    2. '<|end|>' → logprob: -1.6588432788848877
    3. '```' → logprob: -2.5338432788848877
    4. ')' → logprob: -2.9088432788848877
    5. '2' → logprob: -2.9088432788848877
    6. 'dx' → logprob: -5.033843040466309
    7. ' ' → logprob: -5.283843040466309
    8. ')**' → logprob: -5.408843040466309
    9. '   ' → logprob: -5.533843040466309
    10. 'dy' → logprob: -5.783843040466309

Token 40: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.13299088180065155
    2. ' dy' → logprob: -2.132990837097168
    3. '2' → logprob: -5.132990837097168
    4. ' ' → logprob: -9.882990837097168
    5. '.dy' → logprob: -10.507990837097168
    6. '<|end|>' → logprob: -10.882990837097168
    7. '```' → logprob: -11.632990837097168
    8. 'd' → logprob: -11.882990837097168
    9. '²' → logprob: -12.382990837097168
    10. 'Dy' → logprob: -12.382990837097168

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04363217577338219
    2. '=' → logprob: -3.1686322689056396
    3. '<|end|>' → logprob: -7.4186320304870605
    4. ' ' → logprob: -11.168632507324219
    5. '<|end|>' → logprob: -12.168632507324219
    6. ')' → logprob: -12.543632507324219
    7. '**' → logprob: -13.418632507324219
    8. '   ' → logprob: -13.543632507324219
    9. ' *=' → logprob: -13.543632507324219
    10. '```' → logprob: -14.043632507324219

Token 42: ' ya' (ID: 2289)
  Prédit: ' ya'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ya' → logprob: -1.003509759902954
    2. 'yb' → logprob: -1.003509759902954
    3. 'ya' → logprob: -1.378509759902954
    4. ' y' → logprob: -4.253509521484375
    5. 'y' → logprob: -8.503509521484375
    6. ' (' → logprob: -9.503509521484375
    7. ' ' → logprob: -9.628509521484375
    8. 'ay' → logprob: -10.003509521484375
    9. '(y' → logprob: -10.003509521484375
    10. 'yc' → logprob: -10.003509521484375

Token 43: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008768437430262566
    2. '-' → logprob: -4.758768558502197
    3. ' ' → logprob: -9.008768081665039
    4. '<|end|>' → logprob: -12.008768081665039
    5. ' ' → logprob: -12.133768081665039
    6. ' dy' → logprob: -12.383768081665039
    7. ')' → logprob: -12.633768081665039
    8. ' *' → logprob: -13.133768081665039
    9. '```' → logprob: -13.133768081665039
    10. '*' → logprob: -13.383768081665039

Token 44: ' y' (ID: 342)
  Prédit: 'yb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yb' → logprob: -0.00020389800192788243
    2. ' y' → logprob: -8.500204086303711
    3. ' ' → logprob: -16.00020408630371
    4. 'y' → logprob: -16.00020408630371
    5. 'yd' → logprob: -16.62520408630371
    6. 'yc' → logprob: -17.25020408630371
    7. 'yl' → logprob: -17.37520408630371
    8. '0' → logprob: -18.00020408630371
    9. 'dy' → logprob: -18.25020408630371
    10. 'yk' → logprob: -18.75020408630371

Token 45: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.807595431804657
    2. 'a' → logprob: -0.932595431804657
    3. 'd' → logprob: -2.5575954914093018
    4. '2' → logprob: -3.4325954914093018
    5. '-' → logprob: -3.5575954914093018
    6. '```' → logprob: -5.182595252990723
    7. '**' → logprob: -5.557595252990723
    8. ' ' → logprob: -5.682595252990723
    9. '^' → logprob: -6.682595252990723
    10. '*' → logprob: -6.682595252990723

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1522788405418396
    2. ' 
' → logprob: -3.5272789001464844
    3. 'd' → logprob: -4.152278900146484
    4. '    
' → logprob: -4.277278900146484
    5. '```' → logprob: -4.402278900146484
    6. '    ' → logprob: -4.777278900146484
    7. ' ' → logprob: -4.902278900146484
    8. '  
' → logprob: -5.027278900146484
    9. '<|end|>' → logprob: -5.027278900146484
    10. '\n' → logprob: -5.027278900146484

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.332422137260437
    2. 'd' → logprob: -1.582422137260437
    3. ' 
' → logprob: -2.3324222564697266
    4. 'r' → logprob: -2.8324222564697266
    5. ' ' → logprob: -2.9574222564697266
    6. '\n' → logprob: -2.9574222564697266
    7. '```' → logprob: -3.4574222564697266
    8. '    ' → logprob: -3.5824222564697266
    9. ' d' → logprob: -3.5824222564697266
    10. ' \' → logprob: -4.082422256469727

Token 48: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009693173691630363
    2. 'r' → logprob: -5.259693145751953
    3. 'dist' (adapté à ' dist') → logprob: -5.634693145751953
    4. 'distance' → logprob: -8.009693145751953
    5. ' d' → logprob: -8.384693145751953
    6. '2' → logprob: -9.634693145751953
    7. ' ' → logprob: -9.884693145751953
    8. 'D' → logprob: -10.384693145751953
    9. 'import' → logprob: -10.634693145751953
    10. 'c' → logprob: -10.884693145751953

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12592653930187225
    2. '_' → logprob: -2.8759264945983887
    3. '=' → logprob: -3.0009264945983887
    4. ' ' → logprob: -5.000926494598389
    5. ' ==' → logprob: -7.000926494598389
    6. ' _' → logprob: -7.375926494598389
    7. '<|end|>' → logprob: -7.375926494598389
    8. ')' → logprob: -7.625926494598389
    9. '  ' → logprob: -7.875926494598389
    10. 'space' → logprob: -8.125926971435547

Token 50: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.16307683289051056
    2. ' (' → logprob: -1.9130768775939941
    3. '(abs' → logprob: -6.163076877593994
    4. '(dist' → logprob: -7.788076877593994
    5. '(' → logprob: -8.538076400756836
    6. '(d' → logprob: -10.413076400756836
    7. '(x' → logprob: -10.538076400756836
    8. '(math' → logprob: -10.788076400756836
    9. '(max' → logprob: -11.538076400756836
    10. 'abs' → logprob: -11.913076400756836

Token 51: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -7.481510692741722e-05
    2. '(dx' → logprob: -9.62507438659668
    3. ' dx' → logprob: -12.12507438659668
    4. '   ' → logprob: -13.00007438659668
    5. 'd' → logprob: -14.75007438659668
    6. '_dx' → logprob: -15.75007438659668
    7. '```' → logprob: -16.00007438659668
    8. ')' → logprob: -16.37507438659668
    9. '.dx' → logprob: -16.62507438659668
    10. ' ' → logprob: -17.25007438659668

Token 52: '*' (ID: 9)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00197526509873569
    2. ' **' → logprob: -6.251975059509277
    3. '*' → logprob: -10.376975059509277
    4. ')**' → logprob: -11.376975059509277
    5. '**)' → logprob: -13.126975059509277
    6. ')' → logprob: -14.126975059509277
    7. '2' → logprob: -14.251975059509277
    8. ' **)' → logprob: -14.501975059509277
    9. ' *' → logprob: -16.126976013183594
    10. '***' → logprob: -17.001976013183594

Token 53: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -4.842555426876061e-06
    2. ' dx' → logprob: -12.750004768371582
    3. '_dx' → logprob: -14.000004768371582
    4. '2' → logprob: -14.750004768371582
    5. 'd' → logprob: -15.375004768371582
    6. '(dx' → logprob: -15.625004768371582
    7. '.dx' → logprob: -16.1250057220459
    8. '```' → logprob: -16.8750057220459
    9. ')' → logprob: -17.1250057220459
    10. 'dy' → logprob: -17.1250057220459

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6938745975494385
    2. ' +' → logprob: -0.6938745975494385
    3. ')' → logprob: -7.318874359130859
    4. '+)' → logprob: -9.94387435913086
    5. ')+' → logprob: -12.19387435913086
    6. ' ' → logprob: -12.81887435913086
    7. ' )' → logprob: -12.81887435913086
    8. '<|end|>' → logprob: -12.94387435913086
    9. ')**' → logprob: -13.69387435913086
    10. ' +
' → logprob: -14.44387435913086

Token 55: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.003603990189731121
    2. ' dy' → logprob: -5.628603935241699
    3. ')' → logprob: -13.3786039352417
    4. '<|end|>' → logprob: -14.0036039352417
    5. '   ' → logprob: -14.6286039352417
    6. '.dy' → logprob: -15.0036039352417
    7. ' ' → logprob: -15.2536039352417
    8. 'dym' → logprob: -15.5036039352417
    9. '  ' → logprob: -15.7536039352417
    10. '```' → logprob: -16.753604888916016

Token 56: '*' (ID: 9)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.35141444206237793
    2. ')' → logprob: -1.226414442062378
    3. '**' → logprob: -6.351414680480957
    4. '*)' → logprob: -7.226414680480957
    5. '**)' → logprob: -7.851414680480957
    6. '*' → logprob: -9.851414680480957
    7. ')^' → logprob: -11.476414680480957
    8. '`)' → logprob: -11.726414680480957
    9. '')' → logprob: -11.851414680480957
    10. '***' → logprob: -11.976414680480957

Token 57: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -4.179569077678025e-05
    2. ')' → logprob: -10.375041961669922
    3. ' dy' → logprob: -11.625041961669922
    4. '*' → logprob: -14.750041961669922
    5. '2' → logprob: -15.375041961669922
    6. '.dy' → logprob: -15.875041961669922
    7. 'dym' → logprob: -16.125041961669922
    8. 'Dy' → logprob: -16.375041961669922
    9. 'dx' → logprob: -16.375041961669922
    10. 'ddy' → logprob: -16.375041961669922

Token 58: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.04863709583878517
    2. ')' → logprob: -3.0486371517181396
    3. ' )' → logprob: -10.298637390136719
    4. '**' → logprob: -11.173637390136719
    5. ')^' → logprob: -14.298637390136719
    6. '0' → logprob: -14.423637390136719
    7. ' ' → logprob: -14.798637390136719
    8. '**)' → logprob: -15.673637390136719
    9. '```' → logprob: -15.923637390136719
    10. ')*' → logprob: -17.17363739013672

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.125008583068848
    3. '(' → logprob: -13.125008583068848
    4. '.' → logprob: -14.125008583068848
    5. '   ' → logprob: -18.87500762939453
    6. '-' → logprob: -19.37500762939453
    7. '```' → logprob: -19.37500762939453
    8. ' ' → logprob: -19.75000762939453
    9. '۰' → logprob: -20.50000762939453
    10. '{' → logprob: -20.68750762939453

Token 60: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.542423165636137e-05
    2. '-' → logprob: -10.125085830688477
    3. '.-' → logprob: -10.125085830688477
    4. '```' → logprob: -12.875085830688477
    5. '0' → logprob: -13.750085830688477
    6. '-.' → logprob: -14.625085830688477
    7. ' .' → logprob: -15.375085830688477
    8. '`.' → logprob: -15.375085830688477
    9. ' -' → logprob: -16.000085830688477
    10. '5' → logprob: -16.750085830688477

Token 61: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.125
    3. '0' → logprob: -18.0625
    4. '4' → logprob: -18.3125
    5. 'five' → logprob: -18.4375
    6. '25' → logprob: -19.0625
    7. '``' → logprob: -19.3125
    8. '`' → logprob: -19.3125
    9. ' ' → logprob: -19.6875
    10. '   ' → logprob: -19.6875

Token 62: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7514334321022034
    2. ' if' → logprob: -1.6264333724975586
    3. 'if' → logprob: -2.2514333724975586
    4. '   ' → logprob: -2.7514333724975586
    5. '```' → logprob: -3.3764333724975586
    6. ' 
' → logprob: -3.5014333724975586
    7. '<|end|>' → logprob: -3.5014333724975586
    8. '    
' → logprob: -4.251433372497559
    9. '\n' → logprob: -4.626433372497559
    10. '' → logprob: -4.876433372497559

Token 63: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7145859003067017
    2. 'i' → logprob: -0.8395859003067017
    3. '   ' → logprob: -2.839585781097412
    4. ' if' → logprob: -4.464585781097412
    5. ' ' → logprob: -6.464585781097412
    6. '```' → logprob: -6.464585781097412
    7. 'n' → logprob: -6.964585781097412
    8. ' i' → logprob: -7.214585781097412
    9. '#' → logprob: -7.339585781097412
    10. '
' → logprob: -7.589585781097412

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3074564039707184
    2. 'i' → logprob: -1.432456374168396
    3. 'r' → logprob: -3.6824564933776855
    4. 'd' → logprob: -8.932456016540527
    5. ')' → logprob: -9.057456016540527
    6. '#' → logprob: -9.432456016540527
    7. '```' → logprob: -9.557456016540527
    8. 'c' → logprob: -9.807456016540527
    9. ' if' → logprob: -10.057456016540527
    10. 'result' → logprob: -10.182456016540527

Token 65: ' dist' (ID: 3601)
  Prédit: ' ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ra' → logprob: -0.2328842282295227
    2. ' dist' → logprob: -1.732884168624878
    3. 'dist' → logprob: -3.732884168624878
    4. ' ' → logprob: -6.232884407043457
    5. 'ra' → logprob: -6.232884407043457
    6. ' rb' → logprob: -6.982884407043457
    7. '(dist' → logprob: -7.357884407043457
    8. ' abs' → logprob: -7.982884407043457
    9. ' r' → logprob: -8.232884407043457
    10. ' (' → logprob: -8.482884407043457

Token 66: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3280819058418274
    2. ' <' → logprob: -1.4530818462371826
    3. ' ==' → logprob: -3.3280818462371826
    4. '>' → logprob: -5.453082084655762
    5. ' ' → logprob: -5.953082084655762
    6. ' <=' → logprob: -6.828082084655762
    7. '<' → logprob: -6.828082084655762
    8. '==' → logprob: -7.328082084655762
    9. ' >=' → logprob: -8.578082084655762
    10. '.' → logprob: -10.953082084655762

Token 67: ' rb' (ID: 39441)
  Prédit: ' ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ra' → logprob: -0.41821402311325073
    2. 'ra' → logprob: -1.2932140827178955
    3. ' rb' → logprob: -2.7932140827178955
    4. 'rb' → logprob: -5.168213844299316
    5. '(rb' → logprob: -8.668213844299316
    6. ' min' → logprob: -9.543213844299316
    7. ' ' → logprob: -9.668213844299316
    8. '-ra' → logprob: -9.918213844299316
    9. '_ra' → logprob: -10.168213844299316
    10. 'min' → logprob: -10.418213844299316

Token 68: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.19055047631263733
    2. ' <' → logprob: -1.815550446510315
    3. '<=' → logprob: -4.940550327301025
    4. ' <=' → logprob: -5.690550327301025
    5. ' ' → logprob: -9.065550804138184
    6. '>' → logprob: -10.315550804138184
    7. '```' → logprob: -10.815550804138184
    8. ')' → logprob: -11.315550804138184
    9. '0' → logprob: -12.315550804138184
    10. '   ' → logprob: -12.440550804138184

Token 69: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.02471974492073059
    2. ' ra' → logprob: -3.774719715118408
    3. '=' → logprob: -6.524719715118408
    4. '_ra' → logprob: -13.399720191955566
    5. 'r' → logprob: -13.524720191955566
    6. ' ' → logprob: -13.524720191955566
    7. '0' → logprob: -15.274720191955566
    8. ' =' → logprob: -15.524720191955566
    9. 'Ra' → logprob: -15.524720191955566
    10. '.ra' → logprob: -15.524720191955566

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006364924367517233
    2. ' or' → logprob: -5.756364822387695
    3. ' :' → logprob: -5.881364822387695
    4. ' and' → logprob: -8.131364822387695
    5. 'and' → logprob: -10.631364822387695
    6. 'or' → logprob: -10.756364822387695
    7. '):' → logprob: -11.381364822387695
    8. ' ' → logprob: -11.756364822387695
    9. ':
' → logprob: -12.006364822387695
    10. '<|end|>' → logprob: -12.256364822387695

Token 71: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13671983778476715
    2. ' print' → logprob: -2.6367199420928955
    3. '   ' → logprob: -3.1367199420928955
    4. '1' → logprob: -5.136719703674316
    5. '\n' → logprob: -5.261719703674316
    6. ' ' → logprob: -7.761719703674316
    7. ' \' → logprob: -8.386719703674316
    8. '0' → logprob: -8.386719703674316
    9. '4' → logprob: -8.761719703674316
    10. '    ' → logprob: -8.886719703674316

Token 73: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.31503474712371826
    2. '(' → logprob: -1.5650347471237183
    3. '('' → logprob: -2.815034866333008
    4. '("("' → logprob: -7.315034866333008
    5. '"' → logprob: -8.565034866333008
    6. '("(' → logprob: -9.190034866333008
    7. '(-' → logprob: -9.815034866333008
    8. '("")' → logprob: -10.440034866333008
    9. '1' → logprob: -10.815034866333008
    10. '(`' → logprob: -10.940034866333008

Token 74: '2' (ID: 17)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5926373600959778
    2. '0' → logprob: -1.467637300491333
    3. '2' → logprob: -2.217637300491333
    4. '1' → logprob: -2.467637300491333
    5. '-' → logprob: -4.592637538909912
    6. ''' → logprob: -4.967637538909912
    7. '3' → logprob: -6.092637538909912
    8. 'ra' → logprob: -6.842637538909912
    9. '"a' → logprob: -7.967637538909912
    10. 'int' → logprob: -8.092637062072754

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10107549279928207
    2. ' )' → logprob: -2.6010754108428955
    3. '0' → logprob: -4.851075649261475
    4. '1' → logprob: -4.976075649261475
    5. '*' → logprob: -6.101075649261475
    6. '
' → logprob: -6.726075649261475
    7. ' ' → logprob: -6.851075649261475
    8. '<|end|>' → logprob: -7.351075649261475
    9. '3' → logprob: -7.726075649261475
    10. '4' → logprob: -7.851075649261475

Token 76: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.49431246519088745
    2. ' elif' → logprob: -1.2443125247955322
    3. 'else' → logprob: -3.3693125247955322
    4. '<|end|>' → logprob: -3.8693125247955322
    5. ' else' → logprob: -4.619312286376953
    6. '0' → logprob: -4.869312286376953
    7. ' ' → logprob: -4.994312286376953
    8. '
' → logprob: -5.119312286376953
    9. '  
' → logprob: -5.744312286376953
    10. '   ' → logprob: -6.494312286376953

Token 77: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6345009207725525
    2. ' elif' → logprob: -0.8845009207725525
    3. ' else' → logprob: -4.009500980377197
    4. 'else' → logprob: -4.259500980377197
    5. ' ' → logprob: -4.384500980377197
    6. '<|end|>' → logprob: -5.009500980377197
    7. '	elif' → logprob: -6.759500980377197
    8. '  ' → logprob: -7.134500980377197
    9. '\n' → logprob: -7.134500980377197
    10. '   ' → logprob: -7.259500980377197

Token 78: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.08295977115631104
    2. ' ' → logprob: -3.2079596519470215
    3. 'dist' → logprob: -3.4579596519470215
    4. ' (' → logprob: -6.0829596519470215
    5. ' ra' → logprob: -6.2079596519470215
    6. ' abs' → logprob: -7.7079596519470215
    7. '<|end|>' → logprob: -7.7079596519470215
    8. '0' → logprob: -8.08296012878418
    9. '(dist' → logprob: -8.08296012878418
    10. '  ' → logprob: -8.20796012878418

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5369998216629028
    2. ' >' → logprob: -1.5369998216629028
    3. ' <' → logprob: -2.1619997024536133
    4. ' <=' → logprob: -3.0369997024536133
    5. '+' → logprob: -3.5369997024536133
    6. '>' → logprob: -5.911999702453613
    7. ' >=' → logprob: -5.911999702453613
    8. '<' → logprob: -6.536999702453613
    9. ' ' → logprob: -7.411999702453613
    10. '<=' → logprob: -7.786999702453613

Token 80: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0012286811834201217
    2. ' ra' → logprob: -6.8762288093566895
    3. 'rb' → logprob: -8.626228332519531
    4. '_ra' → logprob: -12.001228332519531
    5. ' ' → logprob: -12.876228332519531
    6. 'ar' → logprob: -13.001228332519531
    7. '-ra' → logprob: -14.001228332519531
    8. ' rb' → logprob: -14.001228332519531
    9. 'rc' → logprob: -14.501228332519531
    10. 'r' → logprob: -14.751228332519531

Token 81: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07894090563058853
    2. '<' → logprob: -2.5789408683776855
    3. ' ' → logprob: -10.953941345214844
    4. ' <=' → logprob: -11.828941345214844
    5. ' >' → logprob: -12.203941345214844
    6. ')' → logprob: -12.203941345214844
    7. '>' → logprob: -12.328941345214844
    8. '<=' → logprob: -13.203941345214844
    9. '   ' → logprob: -13.641441345214844
    10. '```' → logprob: -13.766441345214844

Token 82: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.10022251307964325
    2. ' rb' → logprob: -2.350222587585449
    3. '_rb' → logprob: -11.60022258758545
    4. '(rb' → logprob: -11.97522258758545
    5. ' ' → logprob: -16.100221633911133
    6. 'br' → logprob: -16.475221633911133
    7. '.rb' → logprob: -16.725221633911133
    8. 'r' → logprob: -17.225221633911133
    9. 'ra' → logprob: -17.600221633911133
    10. '=' → logprob: -17.600221633911133

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0802738870552275e-05
    2. ':
' → logprob: -12.25001049041748
    3. '):' → logprob: -13.00001049041748
    4. ' :' → logprob: -13.62501049041748
    5. '   ' → logprob: -13.75001049041748
    6. '       ' → logprob: -14.37501049041748
    7. ' or' → logprob: -14.37501049041748
    8. 'or' → logprob: -16.500011444091797
    9. ':**' → logprob: -17.000011444091797
    10. '>:' → logprob: -17.250011444091797

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07273087650537491
    2. '       ' → logprob: -2.697730779647827
    3. ':
' → logprob: -6.322731018066406
    4. '   ' → logprob: -7.072731018066406
    5. '<|end|>' → logprob: -9.572731018066406
    6. '```' → logprob: -11.322731018066406
    7. '{' → logprob: -11.572731018066406
    8. ' ' → logprob: -11.572731018066406
    9. '):' → logprob: -11.697731018066406
    10. '2' → logprob: -12.197731018066406

Token 85: ' print' (ID: 2123)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008622609078884125
    2. 'print' (adapté à ' print') → logprob: -5.008622646331787
    3. ' ' → logprob: -6.383622646331787
    4. '   ' → logprob: -9.133622169494629
    5. ' print' → logprob: -9.883622169494629
    6. '       ' → logprob: -10.383622169494629
    7. '1' → logprob: -10.758622169494629
    8. '3' → logprob: -12.883622169494629
    9. '```' → logprob: -14.383622169494629
    10. '  ' → logprob: -14.633622169494629

Token 86: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009829873219132423
    2. '2' → logprob: -4.634829998016357
    3. ' (' → logprob: -9.6348295211792
    4. ' ' → logprob: -11.8848295211792
    5. '1' → logprob: -15.0098295211792
    6. '('' → logprob: -15.3848295211792
    7. '3' → logprob: -15.3848295211792
    8. '`' → logprob: -15.5098295211792
    9. '()' → logprob: -15.8848295211792
    10. '(
' → logprob: -16.259830474853516

Token 87: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20153456926345825
    2. '2' → logprob: -1.7015345096588135
    3. ' ' → logprob: -9.076534271240234
    4. '-' → logprob: -12.451534271240234
    5. '0' → logprob: -14.701534271240234
    6. '3' → logprob: -14.764034271240234
    7. '   ' → logprob: -14.826534271240234
    8. '  ' → logprob: -14.951534271240234
    9. '```' → logprob: -15.201534271240234
    10. ' -' → logprob: -15.764034271240234

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013209529221057892
    2. ')
' → logprob: -4.763209342956543
    3. '   ' → logprob: -5.388209342956543
    4. ' )' → logprob: -11.513209342956543
    5. 'else' → logprob: -13.888209342956543
    6. 'elif' → logprob: -14.138209342956543
    7. ' )
' → logprob: -14.513209342956543
    8. ')
' → logprob: -14.763209342956543
    9. '')' → logprob: -15.013209342956543
    10. '```' → logprob: -15.638209342956543

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03347901627421379
    2. 'elif' → logprob: -4.0334792137146
    3. 'else' → logprob: -4.7834792137146
    4. '<|end|>' → logprob: -5.1584792137146
    5. ')' → logprob: -8.158478736877441
    6. ' elif' → logprob: -8.658478736877441
    7. '```' → logprob: -8.658478736877441
    8. ' else' → logprob: -9.033478736877441
    9. '<|end|>' → logprob: -9.033478736877441
    10. '    
' → logprob: -9.158478736877441

Token 90: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4619680345058441
    2. 'else' → logprob: -1.5869680643081665
    3. '   ' → logprob: -1.8369680643081665
    4. '<|end|>' → logprob: -5.836967945098877
    5. ' elif' → logprob: -6.461967945098877
    6. ' else' → logprob: -6.961967945098877
    7. '```' → logprob: -7.711967945098877
    8. '	elif' → logprob: -9.586968421936035
    9. '  ' → logprob: -9.711968421936035
    10. ')' → logprob: -10.211968421936035

Token 91: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.618258535861969
    2. 'dist' → logprob: -0.993258535861969
    3. ' ra' → logprob: -2.618258476257324
    4. 'ra' → logprob: -5.368258476257324
    5. 'abs' → logprob: -5.618258476257324
    6. ' abs' → logprob: -5.868258476257324
    7. '(dist' → logprob: -6.618258476257324
    8. ' ' → logprob: -6.868258476257324
    9. ' rb' → logprob: -7.118258476257324
    10. 'rb' → logprob: -7.368258476257324

Token 92: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7757490873336792
    2. '>' → logprob: -1.6507490873336792
    3. ' <' → logprob: -2.0257492065429688
    4. ' <=' → logprob: -2.6507492065429688
    5. '==' → logprob: -2.9007492065429688
    6. '<' → logprob: -3.1507492065429688
    7. '<=' → logprob: -3.7757492065429688
    8. ' ==' → logprob: -4.150749206542969
    9. ' ' → logprob: -5.650749206542969
    10. ' >=' → logprob: -6.650749206542969

Token 93: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.026468543335795403
    2. ' ra' → logprob: -3.651468515396118
    3. '(' → logprob: -9.901468276977539
    4. ' ' → logprob: -9.901468276977539
    5. '0' → logprob: -10.526468276977539
    6. '2' → logprob: -11.776468276977539
    7. ' (' → logprob: -11.901468276977539
    8. 'r' → logprob: -12.276468276977539
    9. 'abs' → logprob: -12.401468276977539
    10. '1' → logprob: -12.651468276977539

Token 94: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020588131621479988
    2. ' +' → logprob: -3.8955881595611572
    3. '+r' → logprob: -10.395587921142578
    4. '+:' → logprob: -13.020587921142578
    5. '+
' → logprob: -13.270587921142578
    6. ' ' → logprob: -13.520587921142578
    7. '1' → logprob: -13.770587921142578
    8. ' ' → logprob: -13.770587921142578
    9. '＋' → logprob: -14.020587921142578
    10. '-' → logprob: -14.020587921142578

Token 95: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.061983373016119
    2. ' rb' → logprob: -2.811983346939087
    3. '(rb' → logprob: -11.186983108520508
    4. ' ' → logprob: -14.061983108520508
    5. '_rb' → logprob: -14.061983108520508
    6. 'ra' → logprob: -16.436983108520508
    7. '.rb' → logprob: -16.561983108520508
    8. 'Rb' → logprob: -16.936983108520508
    9. ' ' → logprob: -18.061983108520508
    10. ' ra' → logprob: -18.311983108520508

Token 96: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005203855689615011
    2. ':
' → logprob: -7.6255202293396
    3. ' :' → logprob: -10.750520706176758
    4. '):' → logprob: -11.750520706176758
    5. '   ' → logprob: -13.625520706176758
    6. '       ' → logprob: -14.250520706176758
    7. ' and' → logprob: -15.750520706176758
    8. ' :
' → logprob: -15.750520706176758
    9. 'and' → logprob: -16.000520706176758
    10. '():' → logprob: -16.125520706176758

Token 97: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.029487211257219315
    2. 'dist' → logprob: -3.654487133026123
    3. ' ra' → logprob: -6.654487133026123
    4. '(dist' → logprob: -7.029487133026123
    5. ' not' → logprob: -8.154487609863281
    6. ' (' → logprob: -8.404487609863281
    7. '	dist' → logprob: -9.154487609863281
    8. ' ' → logprob: -9.404487609863281
    9. '(' → logprob: -9.529487609863281
    10. ' max' → logprob: -10.154487609863281

Token 98: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5297496914863586
    2. '>=' → logprob: -1.1547496318817139
    3. '>' → logprob: -2.779749631881714
    4. ' >' → logprob: -3.779749631881714
    5. ' ' → logprob: -5.404749870300293
    6. '+' → logprob: -5.529749870300293
    7. '=' → logprob: -6.654749870300293
    8. '0' → logprob: -8.029749870300293
    9. '<|end|>' → logprob: -8.029749870300293
    10. ' +' → logprob: -8.904749870300293

Token 99: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16218504309654236
    2. ' abs' → logprob: -1.9121850728988647
    3. ' ra' → logprob: -6.787185192108154
    4. 'ra' → logprob: -7.537185192108154
    5. '(abs' → logprob: -8.537184715270996
    6. '   ' → logprob: -10.537184715270996
    7. ' ' → logprob: -10.662184715270996
    8. '0' → logprob: -11.037184715270996
    9. '```' → logprob: -11.787184715270996
    10. '1' → logprob: -12.162184715270996

Token 100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1637164789135568e-05
    2. ' (' → logprob: -12.125011444091797
    3. 'ra' → logprob: -13.000011444091797
    4. '(ro' → logprob: -13.250011444091797
    5. '(rb' → logprob: -13.625011444091797
    6. ' ra' → logprob: -14.750011444091797
    7. '(
' → logprob: -16.000011444091797
    8. '((' → logprob: -16.125011444091797
    9. ' ' → logprob: -16.375011444091797
    10. '(r' → logprob: -16.875011444091797

Token 101: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.00015979631280060858
    2. ' ra' → logprob: -8.750160217285156
    3. '-ra' → logprob: -14.125160217285156
    4. 'r' → logprob: -15.375160217285156
    5. '_ra' → logprob: -16.000160217285156
    6. '.ra' → logprob: -16.500160217285156
    7. 'raa' → logprob: -17.125160217285156
    8. ')' → logprob: -17.125160217285156
    9. '```' → logprob: -17.750160217285156
    10. '(' → logprob: -17.750160217285156

Token 102: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5920095443725586
    2. '-' → logprob: -0.8420095443725586
    3. '-r' → logprob: -4.842009544372559
    4. '-ra' → logprob: -4.842009544372559
    5. ' ' → logprob: -8.842009544372559
    6. ' ' → logprob: -12.592009544372559
    7. '   ' → logprob: -12.717009544372559
    8. '	' → logprob: -13.092009544372559
    9. '  ' → logprob: -13.217009544372559
    10. '-R' → logprob: -13.967009544372559

Token 103: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.016140175983309746
    2. ' rb' → logprob: -4.141139984130859
    3. '(rb' → logprob: -9.26613998413086
    4. '_rb' → logprob: -11.64113998413086
    5. ' ' → logprob: -13.64113998413086
    6. '.rb' → logprob: -13.89113998413086
    7. '   ' → logprob: -15.39113998413086
    8. 'Rb' → logprob: -16.51613998413086
    9. '  ' → logprob: -16.76613998413086
    10. 'r' → logprob: -17.76613998413086

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012873590923845768
    2. '):
' → logprob: -5.012873649597168
    3. ':' → logprob: -5.137873649597168
    4. '   ' → logprob: -8.637873649597168
    5. ' ):' → logprob: -9.887873649597168
    6. ')' → logprob: -11.012873649597168
    7. ':
' → logprob: -11.512873649597168
    8. '       ' → logprob: -12.387873649597168
    9. '):
' → logprob: -13.012873649597168
    10. ' :' → logprob: -13.637873649597168

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0053084660321474075
    2. ':' → logprob: -5.755308628082275
    3. '   ' → logprob: -6.630308628082275
    4. ':
' → logprob: -7.880308628082275
    5. 'print' → logprob: -8.630308151245117
    6. ' print' → logprob: -9.880308151245117
    7. ' :' → logprob: -10.255308151245117
    8. '<|end|>' → logprob: -10.255308151245117
    9. ',' → logprob: -10.880308151245117
    10. ')' → logprob: -11.005308151245117

Token 106: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020600922871381044
    2. '   ' → logprob: -6.6270599365234375
    3. ' print' → logprob: -7.8770599365234375
    4. '0' → logprob: -8.627059936523438
    5. '       ' → logprob: -9.377059936523438
    6. '1' → logprob: -9.627059936523438
    7. '2' → logprob: -11.877059936523438
    8. 'if' → logprob: -12.502059936523438
    9. ' ' → logprob: -12.877059936523438
    10. '4' → logprob: -13.002059936523438

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18725834786891937
    2. '0' → logprob: -1.8122583627700806
    3. '1' → logprob: -4.937258243560791
    4. '2' → logprob: -8.93725872039795
    5. ' ' → logprob: -9.93725872039795
    6. '()' → logprob: -10.18725872039795
    7. '(-' → logprob: -11.31225872039795
    8. ' (' → logprob: -11.56225872039795
    9. '`' → logprob: -11.87475872039795
    10. '3' → logprob: -12.06225872039795

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3189763128757477
    2. '0' → logprob: -1.3189762830734253
    3. '2' → logprob: -5.193976402282715
    4. ' ' → logprob: -9.318976402282715
    5. '3' → logprob: -11.193976402282715
    6. '4' → logprob: -11.443976402282715
    7. ')' → logprob: -11.443976402282715
    8. '"' → logprob: -12.193976402282715
    9. '(' → logprob: -12.443976402282715
    10. ''' → logprob: -12.818976402282715

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008360736537724733
    2. ')
' → logprob: -7.12583589553833
    3. '   ' → logprob: -10.500836372375488
    4. ' )' → logprob: -12.625836372375488
    5. 'else' → logprob: -15.375836372375488
    6. ')#' → logprob: -16.500835418701172
    7. 'elif' → logprob: -16.750835418701172
    8. '())' → logprob: -17.000835418701172
    9. '()' → logprob: -17.125835418701172
    10. ' ' → logprob: -17.125835418701172

Token 110: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.007637747563421726
    2. '   ' → logprob: -5.382637977600098
    3. 'elif' → logprob: -6.632637977600098
    4. ' else' → logprob: -6.757637977600098
    5. '0' → logprob: -8.757637977600098
    6. ')' → logprob: -8.882637977600098
    7. '<|end|>' → logprob: -9.382637977600098
    8. '```' → logprob: -10.507637977600098
    9. '	else' → logprob: -10.757637977600098
    10. '    
' → logprob: -10.882637977600098

Token 111: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0001319063303526491
    2. 'elif' → logprob: -9.250131607055664
    3. ' else' → logprob: -10.750131607055664
    4. '0' → logprob: -11.750131607055664
    5. '   ' → logprob: -12.250131607055664
    6. 'el' → logprob: -15.000131607055664
    7. '```' → logprob: -15.125131607055664
    8. 'lse' → logprob: -15.125131607055664
    9. '	else' → logprob: -15.500131607055664
    10. 'e' → logprob: -16.000131607055664

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001270589418709278
    2. '   ' → logprob: -7.251270771026611
    3. ':
' → logprob: -7.751270771026611
    4. '       ' → logprob: -9.876270294189453
    5. '(' → logprob: -10.501270294189453
    6. '():' → logprob: -10.626270294189453
    7. ' :' → logprob: -11.376270294189453
    8. '):' → logprob: -12.001270294189453
    9. '    ' → logprob: -12.376270294189453
    10. '0' → logprob: -14.251270294189453

Token 113: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05136518180370331
    2. 'print' → logprob: -3.1763651371002197
    3. '   ' → logprob: -4.926365375518799
    4. '       ' → logprob: -7.301365375518799
    5. ' ' → logprob: -8.05136489868164
    6. '    ' → logprob: -10.30136489868164
    7. ' print' → logprob: -10.30136489868164
    8. '-' → logprob: -12.30136489868164
    9. '```' → logprob: -12.67636489868164
    10. '  ' → logprob: -12.80136489868164

Token 114: ' print' (ID: 2123)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012595826759934425
    2. 'print' (adapté à ' print') → logprob: -4.3875956535339355
    3. ' ' → logprob: -10.387596130371094
    4. '-' → logprob: -10.387596130371094
    5. ' print' → logprob: -11.012596130371094
    6. '2' → logprob: -12.887596130371094
    7. '3' → logprob: -12.887596130371094
    8. '   ' → logprob: -14.387596130371094
    9. '```' → logprob: -14.387596130371094
    10. ' -' → logprob: -14.887596130371094

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.384836888173595e-05
    2. '0' → logprob: -9.8750638961792
    3. '(-' → logprob: -11.5000638961792
    4. '()' → logprob: -13.8750638961792
    5. '('' → logprob: -14.2500638961792
    6. ' (' → logprob: -14.8750638961792
    7. '((' → logprob: -16.375062942504883
    8. '(
' → logprob: -16.750062942504883
    9. '("' → logprob: -17.000062942504883
    10. 'a' → logprob: -17.375062942504883

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010270876373397186
    2. '-' → logprob: -9.750102996826172
    3. ' ' → logprob: -10.500102996826172
    4. ')' → logprob: -12.625102996826172
    5. '3' → logprob: -12.625102996826172
    6. '"' → logprob: -12.875102996826172
    7. '2' → logprob: -13.250102996826172
    8. ''' → logprob: -13.750102996826172
    9. '   ' → logprob: -14.375102996826172
    10. ' -' → logprob: -14.437602996826172

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.000001907348633
    4. ')`' → logprob: -17.875001907348633
    5. '))' → logprob: -18.750001907348633
    6. '`)' → logprob: -19.375001907348633
    7. '）' → logprob: -20.625001907348633
    8. '')' → logprob: -20.750001907348633
    9. ')

' → logprob: -20.750001907348633
    10. '   ' → logprob: -20.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 40.87%
Précision adaptée (1ère position): 46.96%
Précision (top 10): 88.70%
================================================================================
