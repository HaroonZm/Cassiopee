================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
for _ in range(n):
    a=input().lstrip('0') or '0'
    b=input().lstrip('0') or '0'
    if len(a)>80 or len(b)>80:
        print("overflow")
        continue
    s=str(int(a)+int(b))
    print(s if len(s)<=80 else "overflow")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03064407967031002
    2. ')' → logprob: -3.780644178390503
    3. '()' → logprob: -5.030643939971924
    4. '())' → logprob: -8.030644416809082
    5. '(
' → logprob: -8.655644416809082
    6. '<|end|>' → logprob: -9.655644416809082
    7. '(

' → logprob: -9.905644416809082
    8. '('' → logprob: -10.530644416809082
    9. '("("' → logprob: -10.655644416809082
    10. '```' → logprob: -10.655644416809082

Token 4: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7022286057472229
    2. 'i' → logprob: -1.4522285461425781
    3. 'if' → logprob: -2.952228546142578
    4. 's' → logprob: -3.452228546142578
    5. ' ' → logprob: -3.577228546142578
    6. '`' → logprob: -3.577228546142578
    7. '\n' → logprob: -3.702228546142578
    8. '#' → logprob: -3.827228546142578
    9. ''' → logprob: -3.952228546142578
    10. '```' → logprob: -4.702228546142578

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03377029672265053
    2. '  ' → logprob: -3.6587703227996826
    3. ' i' → logprob: -4.9087700843811035
    4. 'i' → logprob: -10.658770561218262
    5. ' n' → logprob: -11.283770561218262
    6. ' ‌' → logprob: -12.408770561218262
    7. ' )' → logprob: -12.533770561218262
    8. ' ' → logprob: -12.533770561218262
    9. '_' → logprob: -12.658770561218262
    10. ' ,' → logprob: -13.408770561218262

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01588948257267475
    2. 'in' → logprob: -4.265889644622803
    3. ' ' → logprob: -6.390889644622803
    4. ' i' → logprob: -11.265889167785645
    5. '  ' → logprob: -11.765889167785645
    6. ' n' → logprob: -11.890889167785645
    7. 'n' → logprob: -12.265889167785645
    8. 'range' → logprob: -12.265889167785645
    9. '_' → logprob: -13.390889167785645
    10. 'import' → logprob: -13.515889167785645

Token 7: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759523510932922
    2. ' range' → logprob: -0.8259523510932922
    3. '	range' → logprob: -11.950952529907227
    4. '(range' → logprob: -13.075952529907227
    5. ' ' → logprob: -13.200952529907227
    6. '_range' → logprob: -13.825952529907227
    7. 'n' → logprob: -15.075952529907227
    8. ' xrange' → logprob: -15.450952529907227
    9. '<|end|>' → logprob: -15.575952529907227
    10. 'in' → logprob: -15.700952529907227

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0069210343062877655
    2. '(n' → logprob: -5.50692081451416
    3. ' (' → logprob: -5.88192081451416
    4. '(range' → logprob: -10.13192081451416
    5. '(len' → logprob: -12.38192081451416
    6. '(
' → logprob: -14.00692081451416
    7. '(int' → logprob: -14.13192081451416
    8. '((' → logprob: -14.75692081451416
    9. '(`' → logprob: -15.00692081451416
    10. '(i' → logprob: -15.13192081451416

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05660921707749367
    2. ')' → logprob: -3.1816091537475586
    3. ':' → logprob: -4.306609153747559
    4. ':)' → logprob: -10.681609153747559
    5. '):
' → logprob: -12.181609153747559
    6. '+' → logprob: -13.056609153747559
    7. ' ):' → logprob: -13.806609153747559
    8. '+:' → logprob: -14.306609153747559
    9. '():' → logprob: -14.431609153747559
    10. '```' → logprob: -14.431609153747559

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00406070938333869
    2. '    
' → logprob: -5.879060745239258
    3. '```' → logprob: -7.129060745239258
    4. ' ' → logprob: -8.879060745239258
    5. '    ' → logprob: -9.504060745239258
    6. 'print' → logprob: -9.754060745239258
    7. 'input' → logprob: -10.129060745239258
    8. '`' → logprob: -11.004060745239258
    9. ' print' → logprob: -11.129060745239258
    10. '  ' → logprob: -11.254060745239258

Token 11: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14100293815135956
    2. 'print' → logprob: -2.891002893447876
    3. 'x' → logprob: -3.766002893447876
    4. 'a' (adapté à ' a') → logprob: -3.766002893447876
    5. 'data' → logprob: -4.766003131866455
    6. 'name' → logprob: -5.391003131866455
    7. 'num' → logprob: -5.766003131866455
    8. 'input' → logprob: -5.891003131866455
    9. 's' → logprob: -6.641003131866455
    10. 'text' → logprob: -6.641003131866455

Token 12: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4851158559322357
    2. ' =' → logprob: -1.985115885734558
    3. ' ' → logprob: -2.7351157665252686
    4. '.' → logprob: -2.9851157665252686
    5. '[' → logprob: -3.1101157665252686
    6. ',' → logprob: -3.6101157665252686
    7. '+' → logprob: -4.610116004943848
    8. 'r' → logprob: -4.735116004943848
    9. ')' → logprob: -5.110116004943848
    10. ' +=' → logprob: -5.235116004943848

Token 13: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4295886754989624
    2. '()' → logprob: -1.0545886754989624
    3. ')' → logprob: -8.554588317871094
    4. '('' → logprob: -9.054588317871094
    5. '```' → logprob: -9.304588317871094
    6. '("("' → logprob: -9.554588317871094
    7. ' ' → logprob: -9.929588317871094
    8. '().' → logprob: -10.054588317871094
    9. 'parent' → logprob: -10.429588317871094
    10. '"' → logprob: -10.554588317871094

Token 14: 'l' (ID: 75)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1269788295030594
    2. 'strip' → logprob: -2.126978874206543
    3. 'rstrip' → logprob: -10.501978874206543
    4. 'lower' → logprob: -11.626978874206543
    5. 'replace' → logprob: -12.251978874206543
    6. 'isdigit' → logprob: -13.001978874206543
    7. 'startswith' → logprob: -13.001978874206543
    8. 's' → logprob: -13.126978874206543
    9. 'spl' → logprob: -13.501978874206543
    10. ' split' → logprob: -14.376978874206543

Token 15: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04671776294708252
    2. 'ower' → logprob: -3.171717643737793
    3. 'ist' → logprob: -5.796717643737793
    4. 'o' → logprob: -8.171717643737793
    5. 'i' → logprob: -9.171717643737793
    6. 'split' → logprob: -9.546717643737793
    7. 'ow' → logprob: -9.546717643737793
    8. 'owe' → logprob: -9.921717643737793
    9. 'ine' → logprob: -10.296717643737793
    10. 'e' → logprob: -11.296717643737793

Token 16: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.261528342962265
    2. '()' → logprob: -1.7615283727645874
    3. '().' → logprob: -2.886528253555298
    4. '('' → logprob: -7.261528491973877
    5. '("("' → logprob: -7.511528491973877
    6. '('.')' → logprob: -8.636528015136719
    7. '(`' → logprob: -8.761528015136719
    8. '())' → logprob: -8.886528015136719
    9. '.' → logprob: -9.011528015136719
    10. ' ()' → logprob: -9.136528015136719

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016332410275936127
    2. ' ' → logprob: -4.891332626342773
    3. '-' → logprob: -5.766332626342773
    4. '[' → logprob: -6.516332626342773
    5. '['' → logprob: -7.641332626342773
    6. '')' → logprob: -7.641332626342773
    7. '+' → logprob: -7.641332626342773
    8. '(' → logprob: -8.266332626342773
    9. '('' → logprob: -8.266332626342773
    10. '+-' → logprob: -8.391332626342773

Token 18: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029935376718640327
    2. '')' → logprob: -3.529935359954834
    3. '0' → logprob: -9.779935836791992
    4. ').' → logprob: -10.154935836791992
    5. '))' → logprob: -10.654935836791992
    6. '")' → logprob: -10.904935836791992
    7. '()' → logprob: -10.904935836791992
    8. '`)' → logprob: -11.904935836791992
    9. '())' → logprob: -12.154935836791992
    10. ')
' → logprob: -12.404935836791992

Token 19: ' or' (ID: 503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3474339246749878
    2. ' if' → logprob: -1.3474339246749878
    3. '   ' → logprob: -4.222434043884277
    4. ' or' → logprob: -4.972434043884277
    5. '```' → logprob: -4.972434043884277
    6. 'a' → logprob: -6.847434043884277
    7. '==' → logprob: -7.347434043884277
    8. ')' → logprob: -7.722434043884277
    9. 'print' → logprob: -8.097434043884277
    10. '
' → logprob: -8.097434043884277

Token 20: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003513125702738762
    2. '"' → logprob: -8.625350952148438
    3. '0' → logprob: -9.000350952148438
    4. ''a' → logprob: -10.750350952148438
    5. '1' → logprob: -11.125350952148438
    6. ' '' → logprob: -11.750350952148438
    7. '`' → logprob: -12.625350952148438
    8. '('' → logprob: -15.375350952148438
    9. 'a' → logprob: -15.500350952148438
    10. ' ' → logprob: -15.625350952148438

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016468366084154695
    2. ''' → logprob: -8.750164985656738
    3. '1' → logprob: -12.000164985656738
    4. ' ' → logprob: -16.750164031982422
    5. '"' → logprob: -16.875164031982422
    6. 'a' → logprob: -20.250164031982422
    7. '`' → logprob: -20.500164031982422
    8. '01' → logprob: -21.000164031982422
    9. '۰' → logprob: -21.375164031982422
    10. '012' → logprob: -21.375164031982422

Token 22: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.25526925921440125
    2. ''' → logprob: -1.5052692890167236
    3. ')' → logprob: -5.8802690505981445
    4. 'a' → logprob: -8.880269050598145
    5. '0' → logprob: -9.505269050598145
    6. '')
' → logprob: -9.755269050598145
    7. ''
' → logprob: -10.255269050598145
    8. ''a' → logprob: -10.380269050598145
    9. '```' → logprob: -10.630269050598145
    10. '#' → logprob: -10.880269050598145

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7202820777893066
    2. '+' → logprob: -1.2202820777893066
    3. 'if' → logprob: -3.4702820777893066
    4. 'print' → logprob: -3.5952820777893066
    5. ' if' → logprob: -3.7202820777893066
    6. 'b' → logprob: -3.7202820777893066
    7. '```' → logprob: -4.095282077789307
    8. ' ' → logprob: -4.345282077789307
    9. '#' → logprob: -4.345282077789307
    10. ':' → logprob: -4.720282077789307

Token 24: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1718246936798096
    2. '+' → logprob: -1.5468246936798096
    3. '=' → logprob: -2.0468246936798096
    4. ':' → logprob: -2.1718246936798096
    5. ' if' → logprob: -3.0468246936798096
    6. 's' → logprob: -3.1718246936798096
    7. 'b' (adapté à ' b') → logprob: -3.6718246936798096
    8. '   ' → logprob: -4.1718244552612305
    9. ',' → logprob: -4.2968244552612305
    10. 'd' → logprob: -4.6718244552612305

Token 25: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4785115420818329
    2. '=input' → logprob: -0.9785115718841553
    3. '=int' → logprob: -5.853511333465576
    4. ' =' → logprob: -6.478511333465576
    5. '=

' → logprob: -12.478511810302734
    6. '=len' → logprob: -13.103511810302734
    7. '=a' → logprob: -13.228511810302734
    8. '=
' → logprob: -13.478511810302734
    9. '+=' → logprob: -13.978511810302734
    10. '=.' → logprob: -14.228511810302734

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07903926819562912
    2. '()' → logprob: -2.5790393352508545
    3. '.' → logprob: -9.454039573669434
    4. '(' → logprob: -10.704039573669434
    5. '())' → logprob: -10.954039573669434
    6. '().'' → logprob: -11.454039573669434
    7. ' ().' → logprob: -12.829039573669434
    8. '()[' → logprob: -12.954039573669434
    9. ')' → logprob: -13.204039573669434
    10. ' .' → logprob: -13.329039573669434

Token 27: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005732863210141659
    2. 'rstrip' → logprob: -7.50057315826416
    3. 'strip' → logprob: -11.37557315826416
    4. ' l' → logprob: -12.25057315826416
    5. '```' → logprob: -12.62557315826416
    6. 'input' → logprob: -15.50057315826416
    7. 'split' → logprob: -16.125574111938477
    8. 'isdigit' → logprob: -16.875574111938477
    9. 'startswith' → logprob: -17.125574111938477
    10. '­l' → logprob: -17.250574111938477

Token 28: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.534558552724775e-05
    2. 'rstrip' → logprob: -10.875025749206543
    3. 'str' → logprob: -12.500025749206543
    4. 'split' → logprob: -13.750025749206543
    5. 'stri' → logprob: -14.500025749206543
    6. 's' → logprob: -14.500025749206543
    7. 'trip' → logprob: -14.875025749206543
    8. 'startswith' → logprob: -16.125024795532227
    9. 'stip' → logprob: -17.125024795532227
    10. 'stripe' → logprob: -17.625024795532227

Token 29: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005088301841169596
    2. '(' → logprob: -7.875508785247803
    3. ''' → logprob: -9.000509262084961
    4. '('_' → logprob: -13.125509262084961
    5. '('.')' → logprob: -13.125509262084961
    6. ''s' → logprob: -14.625509262084961
    7. '("' → logprob: -15.250509262084961
    8. '('(' → logprob: -16.00050926208496
    9. 'b' → logprob: -16.00050926208496
    10. ''b' → logprob: -16.62550926208496

Token 30: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.043028995394706726
    2. '0' → logprob: -3.1680290699005127
    3. '"' → logprob: -10.918028831481934
    4. '('' → logprob: -11.543028831481934
    5. '`' → logprob: -13.668028831481934
    6. ' '' → logprob: -15.293028831481934
    7. 'b' → logprob: -15.918028831481934
    8. ' ' → logprob: -16.54302978515625
    9. '```' → logprob: -16.79302978515625
    10. '(' → logprob: -17.04302978515625

Token 31: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1317768543958664
    2. ''' → logprob: -2.131776809692383
    3. ')' → logprob: -5.506776809692383
    4. '('' → logprob: -7.381776809692383
    5. '()' → logprob: -8.881776809692383
    6. '')
' → logprob: -12.506776809692383
    7. 'b' → logprob: -13.131776809692383
    8. '(' → logprob: -13.256776809692383
    9. '")' → logprob: -13.381776809692383
    10. '0' → logprob: -13.506776809692383

Token 32: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0052406336180865765
    2. 'or' → logprob: -5.505240440368652
    3. ''' → logprob: -8.005240440368652
    4. ')' → logprob: -8.755240440368652
    5. '   ' → logprob: -8.880240440368652
    6. ''or' → logprob: -9.130240440368652
    7. ' ' → logprob: -9.255240440368652
    8. '	or' → logprob: -9.380240440368652
    9. '[' → logprob: -10.005240440368652
    10. ' if' → logprob: -10.505240440368652

Token 33: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019376773852854967
    2. ' '' → logprob: -6.2519378662109375
    3. '"' → logprob: -12.626937866210938
    4. ' ' → logprob: -12.751937866210938
    5. 'b' → logprob: -14.126937866210938
    6. '('' → logprob: -14.501937866210938
    7. ' ' → logprob: -14.626937866210938
    8. '`' → logprob: -15.126937866210938
    9. ''a' → logprob: -15.251937866210938
    10. '0' → logprob: -15.376937866210938

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ''' → logprob: -8.250261306762695
    3. 'b' → logprob: -15.500261306762695
    4. '')' → logprob: -15.750261306762695
    5. '1' → logprob: -17.250261306762695
    6. ' ' → logprob: -17.250261306762695
    7. '"' → logprob: -17.625261306762695
    8. 'a' → logprob: -18.125261306762695
    9. '`' → logprob: -18.500261306762695
    10. '<|end|>' → logprob: -19.000261306762695

Token 35: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05561752989888191
    2. '')' → logprob: -2.930617570877075
    3. ')' → logprob: -7.555617332458496
    4. '   ' → logprob: -9.430617332458496
    5. ''
' → logprob: -10.180617332458496
    6. ''s' → logprob: -11.055617332458496
    7. 'a' → logprob: -11.055617332458496
    8. ''a' → logprob: -11.305617332458496
    9. '```' → logprob: -11.430617332458496
    10. ''''' → logprob: -11.555617332458496

Token 36: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6337885856628418
    2. 'i' → logprob: -2.133788585662842
    3. 'if' → logprob: -2.258788585662842
    4. '+
' → logprob: -2.258788585662842
    5. '
' → logprob: -3.258788585662842
    6. 'c' → logprob: -4.008788585662842
    7. ' if' → logprob: -4.383788585662842
    8. '   ' → logprob: -4.383788585662842
    9. '#' → logprob: -4.383788585662842
    10. '=' → logprob: -5.258788585662842

Token 37: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5071892738342285
    2. 'if' (adapté à ' if') → logprob: -1.3821892738342285
    3. 'c' → logprob: -2.8821892738342285
    4. 's' → logprob: -3.6321892738342285
    5. '+' → logprob: -3.8821892738342285
    6. '=' → logprob: -4.3821892738342285
    7. ' if' → logprob: -5.0071892738342285
    8. 'p' → logprob: -5.1321892738342285
    9. '#' → logprob: -5.6321892738342285
    10. 'n' → logprob: -6.0071892738342285

Token 38: ' len' (ID: 4631)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5784772634506226
    2. ' len' → logprob: -1.4534772634506226
    3. 'len' → logprob: -2.078477382659912
    4. 'a' → logprob: -2.703477382659912
    5. ' int' → logprob: -4.453477382659912
    6. 'int' → logprob: -6.703477382659912
    7. '(len' → logprob: -8.703476905822754
    8. ' (' → logprob: -9.328476905822754
    9. '(a' → logprob: -9.328476905822754
    10. ' '' → logprob: -9.703476905822754

Token 39: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.029777687042951584
    2. '(' → logprob: -3.529777765274048
    3. '(b' → logprob: -10.904777526855469
    4. '(s' → logprob: -12.154777526855469
    5. 'a' → logprob: -13.279777526855469
    6. '('' → logprob: -14.154777526855469
    7. ' (' → logprob: -14.779777526855469
    8. '(n' → logprob: -15.279777526855469
    9. '(max' → logprob: -15.779777526855469
    10. '(A' → logprob: -16.15477752685547

Token 40: ')>' (ID: 37292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4995858073234558
    2. '>' → logprob: -1.4995858669281006
    3. ' >' → logprob: -2.3745858669281006
    4. ' )' → logprob: -3.7495858669281006
    5. '<' → logprob: -3.9995858669281006
    6. ' <' → logprob: -4.4995856285095215
    7. ')>' → logprob: -4.4995856285095215
    8. '!=' → logprob: -5.4995856285095215
    9. ' !=' → logprob: -5.6245856285095215
    10. '==' → logprob: -6.4995856285095215

Token 41: '80' (ID: 2241)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012678056373260915
    2. ' len' → logprob: -9.000126838684082
    3. 'b' → logprob: -13.750126838684082
    4. '=len' → logprob: -13.750126838684082
    5. '(len' → logprob: -14.625126838684082
    6. '[len' → logprob: -15.250126838684082
    7. '	len' → logprob: -15.500126838684082
    8. '<len' → logprob: -16.250125885009766
    9. ' ' → logprob: -17.000125885009766
    10. '1' → logprob: -17.250125885009766

Token 42: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019489556550979614
    2. ' and' → logprob: -4.394489765167236
    3. ' or' → logprob: -5.144489765167236
    4. 'and' → logprob: -7.144489765167236
    5. '+' → logprob: -8.769489288330078
    6. 'or' → logprob: -9.769489288330078
    7. ' :' → logprob: -10.144489288330078
    8. ':
' → logprob: -11.144489288330078
    9. '<|end|>' → logprob: -11.394489288330078
    10. '>' → logprob: -11.894489288330078

Token 43: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3485259711742401
    2. ' len' → logprob: -1.2235260009765625
    3. '(len' → logprob: -9.598526000976562
    4. '	len' → logprob: -12.598526000976562
    5. '   ' → logprob: -12.973526000976562
    6. ' ' → logprob: -12.973526000976562
    7. '[len' → logprob: -13.098526000976562
    8. '  ' → logprob: -14.098526000976562
    9. 'b' → logprob: -14.223526000976562
    10. 'a' → logprob: -14.848526000976562

Token 44: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.4398016929626465
    2. '(a' → logprob: -1.3148016929626465
    3. '(' → logprob: -2.4398016929626465
    4. ' (' → logprob: -10.439802169799805
    5. '('' → logprob: -10.689802169799805
    6. 'a' → logprob: -10.814802169799805
    7. 'b' → logprob: -10.814802169799805
    8. '(s' → logprob: -11.439802169799805
    9. '(space' → logprob: -12.439802169799805
    10. '(max' → logprob: -13.064802169799805

Token 45: ')>' (ID: 37292)
  Prédit: ')>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.31426793336868286
    2. ')' → logprob: -1.314267873764038
    3. '>' → logprob: -7.189268112182617
    4. ' )' → logprob: -9.314268112182617
    5. ')>=' → logprob: -10.189268112182617
    6. ' >' → logprob: -10.689268112182617
    7. ')==' → logprob: -10.814268112182617
    8. '>)' → logprob: -11.314268112182617
    9. ')">' → logprob: -11.439268112182617
    10. '[' → logprob: -11.439268112182617

Token 46: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.0005242000916041434
    2. ' ' → logprob: -7.625524044036865
    3. '800' → logprob: -11.625524520874023
    4. 'len' → logprob: -11.625524520874023
    5. '8' → logprob: -12.500524520874023
    6. '100' → logprob: -12.625524520874023
    7. '0' → logprob: -13.375524520874023
    8. ' len' → logprob: -13.563024520874023
    9. '90' → logprob: -14.125524520874023
    10. '81' → logprob: -14.125524520874023

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026181264547631145
    2. ':
' → logprob: -9.125262260437012
    3. ' or' → logprob: -10.125262260437012
    4. ' and' → logprob: -10.125262260437012
    5. '   ' → logprob: -10.625262260437012
    6. '):' → logprob: -11.250262260437012
    7. '       ' → logprob: -11.375262260437012
    8. ' :' → logprob: -11.500262260437012
    9. ')' → logprob: -12.875262260437012
    10. ',' → logprob: -13.000262260437012

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03519251570105553
    2. '   ' → logprob: -3.9101924896240234
    3. ':' → logprob: -4.785192489624023
    4. ' continue' → logprob: -6.285192489624023
    5. '\n' → logprob: -7.035192489624023
    6. 'continue' → logprob: -7.160192489624023
    7. ':
' → logprob: -7.535192489624023
    8. '        
' → logprob: -7.660192489624023
    9. '    
' → logprob: -7.910192489624023
    10. '    ' → logprob: -8.410192489624023

Token 49: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0744802951812744
    2. 'print' (adapté à ' print') → logprob: -1.0744802951812744
    3. ' print' → logprob: -1.4494802951812744
    4. ' continue' → logprob: -2.9494802951812744
    5. 'continue' → logprob: -4.699480056762695
    6. 'p' → logprob: -5.199480056762695
    7. '    ' → logprob: -5.574480056762695
    8. ' p' → logprob: -5.699480056762695
    9. 'pr' → logprob: -6.199480056762695
    10. ' if' → logprob: -6.324480056762695

Token 50: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4690212905406952
    2. '("' → logprob: -1.4690213203430176
    3. '('' → logprob: -2.3440213203430176
    4. '(-' → logprob: -3.3440213203430176
    5. '()' → logprob: -4.969021320343018
    6. '(len' → logprob: -6.094021320343018
    7. '(a' → logprob: -6.844021320343018
    8. '(max' → logprob: -7.344021320343018
    9. '(">' → logprob: -8.09402084350586
    10. '("-' → logprob: -8.21902084350586

Token 51: 'overflow' (ID: 47116)
  Prédit: 'overflow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.44681116938591003
    2. 'Big' → logprob: -1.6968111991882324
    3. 'Overflow' → logprob: -3.3218111991882324
    4. 'error' → logprob: -3.9468111991882324
    5. '>' → logprob: -4.446811199188232
    6. '-' → logprob: -4.696811199188232
    7. 'length' → logprob: -4.946811199188232
    8. 'b' → logprob: -5.321811199188232
    9. 'big' → logprob: -5.321811199188232
    10. 'Error' → logprob: -5.446811199188232

Token 52: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05665922909975052
    2. ')' → logprob: -3.05665922164917
    3. ')")' → logprob: -5.30665922164917
    4. '!")' → logprob: -6.18165922164917
    5. '!' → logprob: -8.556659698486328
    6. '')' → logprob: -8.556659698486328
    7. '")
' → logprob: -8.681659698486328
    8. ' error' → logprob: -9.181659698486328
    9. ':' → logprob: -9.556659698486328
    10. ' )' → logprob: -10.181659698486328

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0305563285946846
    2. 'else' → logprob: -4.2805562019348145
    3. 'elif' → logprob: -4.7805562019348145
    4. '       ' → logprob: -5.4055562019348145
    5. ' else' → logprob: -6.4055562019348145
    6. '<|end|>' → logprob: -8.030556678771973
    7. ' elif' → logprob: -8.155556678771973
    8. '
' → logprob: -8.280556678771973
    9. '    
' → logprob: -8.530556678771973
    10. '	elif' → logprob: -9.030556678771973

Token 54: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.32938554883003235
    2. '   ' → logprob: -1.57938551902771
    3. '       ' → logprob: -2.70438551902771
    4. ' continue' → logprob: -5.329385757446289
    5. '	continue' → logprob: -6.204385757446289
    6. '```' → logprob: -7.454385757446289
    7. 'else' → logprob: -9.079385757446289
    8. ' ' → logprob: -10.954385757446289
    9. '_continue' → logprob: -11.954385757446289
    10. 'continu' → logprob: -12.079385757446289

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023679202422499657
    2. '    
' → logprob: -6.627367973327637
    3. '```' → logprob: -7.752367973327637
    4. '<|end|>' → logprob: -8.002367973327637
    5. 'elif' → logprob: -10.002367973327637
    6. 'if' → logprob: -10.752367973327637
    7. ' elif' → logprob: -11.002367973327637
    8. '    ' → logprob: -11.127367973327637
    9. '  
' → logprob: -11.252367973327637
    10. ' ' → logprob: -11.252367973327637

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14887645840644836
    2. '+' → logprob: -2.148876428604126
    3. '    
' → logprob: -4.273876667022705
    4. 'a' → logprob: -6.148876667022705
    5. ' 
' → logprob: -6.648876667022705
    6. '+
' → logprob: -6.898876667022705
    7. '
' → logprob: -7.273876667022705
    8. '```' → logprob: -7.523876667022705
    9. '   
' → logprob: -7.898876667022705
    10. '  
' → logprob: -8.023876190185547

Token 57: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0336858034133911
    2. 'c' → logprob: -2.0336856842041016
    3. '+' → logprob: -2.4086856842041016
    4. 'if' → logprob: -2.4086856842041016
    5. 'try' → logprob: -2.6586856842041016
    6. ' if' → logprob: -2.6586856842041016
    7. 'print' → logprob: -3.4086856842041016
    8. ' try' → logprob: -3.7836856842041016
    9. '    
' → logprob: -3.9086856842041016
    10. 's' (adapté à ' s') → logprob: -4.033685684204102

Token 58: '=str' (ID: 36106)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06308527290821075
    2. ' =' → logprob: -2.9380853176116943
    3. 'um' → logprob: -5.313085079193115
    4. '=int' → logprob: -5.813085079193115
    5. ' ' → logprob: -9.813085556030273
    6. '=u' → logprob: -10.188085556030273
    7. 'u' → logprob: -10.438085556030273
    8. '=(' → logprob: -10.813085556030273
    9. '=sum' → logprob: -11.063085556030273
    10. '=s' → logprob: -11.438085556030273

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018244501552544534
    2. '(' → logprob: -9.250182151794434
    3. '(eval' → logprob: -9.625182151794434
    4. '(in' → logprob: -12.500182151794434
    5. '(len' → logprob: -12.875182151794434
    6. '(sum' → logprob: -12.875182151794434
    7. 'int' → logprob: -13.000182151794434
    8. '(max' → logprob: -13.125182151794434
    9. '(min' → logprob: -13.625182151794434
    10. '(bin' → logprob: -13.875182151794434

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -12.250008583068848
    3. 'a' → logprob: -12.875008583068848
    4. '(s' → logprob: -14.750008583068848
    5. ')' → logprob: -15.500008583068848
    6. '(
' → logprob: -16.00000762939453
    7. ')a' → logprob: -17.37500762939453
    8. '   ' → logprob: -18.00000762939453
    9. 's' → logprob: -18.50000762939453
    10. '('' → logprob: -18.62500762939453

Token 61: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.023497262969613075
    2. ')' → logprob: -3.7734973430633545
    3. ' )' → logprob: -9.148497581481934
    4. '+' → logprob: -9.148497581481934
    5. '+b' → logprob: -10.773497581481934
    6. ')*' → logprob: -11.648497581481934
    7. ')-' → logprob: -12.773497581481934
    8. ')+(' → logprob: -12.898497581481934
    9. ' ' → logprob: -13.523497581481934
    10. '")+' → logprob: -14.773497581481934

Token 62: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010743727907538414
    2. ' int' → logprob: -6.876074314117432
    3. 'b' → logprob: -10.12607479095459
    4. '(int' → logprob: -14.50107479095459
    5. '   ' → logprob: -15.00107479095459
    6. 'in' → logprob: -15.62607479095459
    7. ' b' → logprob: -16.001073837280273
    8. '	int' → logprob: -16.251073837280273
    9. ' ' → logprob: -16.626073837280273
    10. '[int' → logprob: -16.751073837280273

Token 63: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.03805446997284889
    2. '(' → logprob: -3.2880544662475586
    3. 'b' → logprob: -11.913054466247559
    4. '('' → logprob: -12.663054466247559
    5. ')b' → logprob: -13.913054466247559
    6. '(
' → logprob: -14.038054466247559
    7. ')' → logprob: -14.663054466247559
    8. '(a' → logprob: -15.413054466247559
    9. '(B' → logprob: -15.663054466247559
    10. '(

' → logprob: -15.788054466247559

Token 64: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20143020153045654
    2. '))' → logprob: -1.7014302015304565
    3. ')))' → logprob: -11.326430320739746
    4. ')
' → logprob: -13.451430320739746
    5. ')")' → logprob: -14.076430320739746
    6. ' )' → logprob: -14.326430320739746
    7. '))
' → logprob: -14.451430320739746
    8. ' ))' → logprob: -15.326430320739746
    9. '})' → logprob: -15.701430320739746
    10. '),' → logprob: -15.826430320739746

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023512400686740875
    2. 'print' → logprob: -3.898512363433838
    3. '
' → logprob: -6.273512363433838
    4. '<|end|>' → logprob: -7.273512363433838
    5. '    
' → logprob: -8.398512840270996
    6. '```' → logprob: -9.523512840270996
    7. ' print' → logprob: -10.523512840270996
    8. '  
' → logprob: -11.148512840270996
    9. '	print' → logprob: -11.773512840270996
    10. '  ' → logprob: -12.023512840270996

Token 66: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04960566386580467
    2. 'if' → logprob: -3.04960560798645
    3. '   ' → logprob: -6.924605846405029
    4. ' if' → logprob: -10.924605369567871
    5. ' print' → logprob: -12.049605369567871
    6. '```' → logprob: -12.299605369567871
    7. 'for' → logprob: -12.674605369567871
    8. 'p' → logprob: -13.549605369567871
    9. ' ' → logprob: -15.174605369567871
    10. '#print' → logprob: -15.674605369567871

Token 67: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014175265096127987
    2. '(' → logprob: -4.2641754150390625
    3. '('' → logprob: -11.889175415039062
    4. '()' → logprob: -12.389175415039062
    5. 's' → logprob: -15.139175415039062
    6. '((' → logprob: -16.139175415039062
    7. '(`' → logprob: -16.389175415039062
    8. '("("' → logprob: -16.389175415039062
    9. ' (' → logprob: -17.264175415039062
    10. '("' → logprob: -17.889175415039062

Token 68: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.875
    3. ' )' → logprob: -17.375
    4. ')
' → logprob: -17.5
    5. ')`' → logprob: -18.625
    6. '`)' → logprob: -19.125
    7. '')' → logprob: -19.625
    8. '）' → logprob: -20.75
    9. '")' → logprob: -21.0
    10. '   ' → logprob: -21.0

Token 69: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012923730537295341
    2. ' len' → logprob: -4.387923717498779
    3. 's' → logprob: -9.262924194335938
    4. 'int' → logprob: -9.512924194335938
    5. '(len' → logprob: -9.512924194335938
    6. 'not' → logprob: -10.137924194335938
    7. 'a' → logprob: -10.637924194335938
    8. ' not' → logprob: -10.637924194335938
    9. ' s' → logprob: -10.762924194335938
    10. ' ' → logprob: -11.012924194335938

Token 70: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.394135612528771e-05
    2. '(' → logprob: -10.125043869018555
    3. 's' → logprob: -13.375043869018555
    4. '(a' → logprob: -13.875043869018555
    5. ' (' → logprob: -14.625043869018555
    6. '(
' → logprob: -15.000043869018555
    7. '(max' → logprob: -15.625043869018555
    8. ')' → logprob: -15.875043869018555
    9. '()' → logprob: -16.125043869018555
    10. '(n' → logprob: -17.125043869018555

Token 71: ')<=' (ID: 176862)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.004973658826202154
    2. ')<=' → logprob: -5.379973888397217
    3. ']<=' → logprob: -8.879973411560059
    4. ')' → logprob: -9.129973411560059
    5. ' <=' → logprob: -9.879973411560059
    6. '<' → logprob: -10.004973411560059
    7. '```' → logprob: -12.504973411560059
    8. '>' → logprob: -13.879973411560059
    9. '()' → logprob: -13.879973411560059
    10. ')<' → logprob: -13.879973411560059

Token 72: '80' (ID: 2241)
  Prédit: '80'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '80' → logprob: -0.002152165398001671
    2. '8' → logprob: -6.877151966094971
    3. ' ' → logprob: -7.627151966094971
    4. '81' → logprob: -7.877151966094971
    5. '100' → logprob: -9.127152442932129
    6. '800' → logprob: -10.627152442932129
    7. '85' → logprob: -11.314652442932129
    8. '79' → logprob: -11.502152442932129
    9. '10' → logprob: -11.689652442932129
    10. 'max' → logprob: -11.814652442932129

Token 73: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3868997097015381
    2. ' else' → logprob: -1.136899709701538
    3. '   ' → logprob: -10.511899948120117
    4. '    ' → logprob: -14.761899948120117
    5. ' ' → logprob: -14.886899948120117
    6. '	else' → logprob: -15.261899948120117
    7. '```' → logprob: -15.636899948120117
    8. 'el' → logprob: -16.136899948120117
    9. 'els' → logprob: -16.886899948120117
    10. 's' → logprob: -17.011899948120117

Token 74: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20631811022758484
    2. 'overflow' → logprob: -2.0813181400299072
    3. ' overflow' → logprob: -3.0813181400299072
    4. ' "' → logprob: -4.206317901611328
    5. ''' → logprob: -8.206317901611328
    6. ' ' → logprob: -8.706317901611328
    7. '   ' → logprob: -8.956317901611328
    8. '`' → logprob: -10.018817901611328
    9. 'print' → logprob: -10.331317901611328
    10. 'over' → logprob: -10.393817901611328

Token 75: 'overflow' (ID: 47116)
  Prédit: 'overflow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.0003017385315615684
    2. '"' → logprob: -8.500301361083984
    3. ' overflow' → logprob: -9.250301361083984
    4. '   ' → logprob: -14.500301361083984
    5. ' ' → logprob: -15.000301361083984
    6. 'Overflow' → logprob: -15.250301361083984
    7. 'over' → logprob: -16.000301361083984
    8. '`' → logprob: -16.125301361083984
    9. '```' → logprob: -16.375301361083984
    10. ''' → logprob: -16.500301361083984

Token 76: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.644463479053229e-05
    2. ')' → logprob: -10.375046730041504
    3. ')")' → logprob: -11.375046730041504
    4. '")
' → logprob: -12.625046730041504
    5. '"' → logprob: -15.500046730041504
    6. '")
' → logprob: -15.625046730041504
    7. '")

' → logprob: -17.375045776367188
    8. '"))' → logprob: -17.875045776367188
    9. '");' → logprob: -18.000045776367188
    10. '')' → logprob: -18.250045776367188


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 43.24%
Précision adaptée (1ère position): 45.95%
Précision (top 10): 89.19%
================================================================================
