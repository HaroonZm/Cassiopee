================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == "0 0 0":
        break
    n, k, m = map(int, line.split())
    stones = list(range(1, n + 1))
    # trouver l'index de la pierre m
    idx = stones.index(m)
    while len(stones) > 1:
        stones.pop(idx)
        # hop k-1 fois en comptant uniquement les pierres restantes
        idx = (idx + (k - 1)) % len(stones)
    print(stones[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439530849456787
    2. ' ' → logprob: -3.0189530849456787
    3. '    ' → logprob: -4.143953323364258
    4. '\' → logprob: -4.268953323364258
    5. ' 
' → logprob: -4.518953323364258
    6. '    
' → logprob: -4.518953323364258
    7. '\n' → logprob: -4.893953323364258
    8. ':' → logprob: -5.018953323364258
    9. '```' → logprob: -5.018953323364258
    10. '  
' → logprob: -6.518953323364258

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20415055751800537
    2. '    ' → logprob: -2.579150676727295
    3. ' ' → logprob: -3.079150676727295
    4. '```' → logprob: -3.204150676727295
    5. '       ' → logprob: -5.204150676727295
    6. '    
' → logprob: -5.704150676727295
    7. ' pass' → logprob: -5.954150676727295
    8. '  ' → logprob: -6.454150676727295
    9. 'pass' → logprob: -6.454150676727295
    10. ' ```' → logprob: -6.954150676727295

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12187442928552628
    2. '=' → logprob: -2.3718743324279785
    3. 's' → logprob: -4.6218743324279785
    4. '.' → logprob: -5.4968743324279785
    5. '.startswith' → logprob: -6.1218743324279785
    6. '[:]' → logprob: -7.1218743324279785
    7. '_' → logprob: -7.3718743324279785
    8. '.readline' → logprob: -7.3718743324279785
    9. '[' → logprob: -7.3718743324279785
    10. '.strip' → logprob: -7.6218743324279785

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08899911493062973
    2. 'input' → logprob: -2.463999032974243
    3. ' ' → logprob: -10.963998794555664
    4. ' f' → logprob: -10.963998794555664
    5. ' file' → logprob: -11.588998794555664
    6. ' readline' → logprob: -12.213998794555664
    7. '=input' → logprob: -12.963998794555664
    8. 'file' → logprob: -12.963998794555664
    9. '(input' → logprob: -14.088998794555664
    10. 'f' → logprob: -14.338998794555664

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002917691832408309
    2. '()' → logprob: -6.502917766571045
    3. '('' → logprob: -6.752917766571045
    4. '("("' → logprob: -9.002917289733887
    5. '```' → logprob: -10.252917289733887
    6. ''' → logprob: -10.252917289733887
    7. ')' → logprob: -11.377917289733887
    8. '("")' → logprob: -12.002917289733887
    9. ''s' → logprob: -12.377917289733887
    10. '(
' → logprob: -12.502917289733887

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0842502117156982
    2. '<|end|>' → logprob: -1.4592502117156982
    3. ' if' → logprob: -1.5842502117156982
    4. ' ' → logprob: -2.2092502117156982
    5. '    ' → logprob: -3.3342502117156982
    6. '\n' → logprob: -4.459250450134277
    7. ' ==' → logprob: -4.709250450134277
    8. '.' → logprob: -4.834250450134277
    9. '<|end|>' → logprob: -4.959250450134277
    10. '.strip' → logprob: -5.084250450134277

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07125309854745865
    2. '   ' → logprob: -3.4462530612945557
    3. 'if' (adapté à ' if') → logprob: -4.071253299713135
    4. ' ' → logprob: -4.446253299713135
    5. '    ' → logprob: -5.071253299713135
    6. '```' → logprob: -7.821253299713135
    7. '  ' → logprob: -8.196252822875977
    8. '\n' → logprob: -8.571252822875977
    9. '<|end|>' → logprob: -8.696252822875977
    10. '    
' → logprob: -9.321252822875977

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16687685251235962
    2. ' line' → logprob: -2.041876792907715
    3. ' ' → logprob: -3.791876792907715
    4. 'not' → logprob: -7.041876792907715
    5. 'line' → logprob: -8.041876792907715
    6. ' len' → logprob: -8.916876792907715
    7. '  ' → logprob: -11.291876792907715
    8. ' lines' → logprob: -12.666876792907715
    9. '<|end|>' → logprob: -13.666876792907715
    10. '#line' → logprob: -14.041876792907715

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11603689193725586
    2. '.startswith' → logprob: -3.116036891937256
    3. '.' → logprob: -3.616036891937256
    4. '==' → logprob: -3.866036891937256
    5. '.strip' → logprob: -4.116036891937256
    6. ' .' → logprob: -7.866036891937256
    7. '.endswith' → logprob: -8.866037368774414
    8. '.rstrip' → logprob: -9.241037368774414
    9. ' ' → logprob: -9.366037368774414
    10. '    ' → logprob: -9.366037368774414

Token 12: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09067127108573914
    2. ''' → logprob: -2.9656713008880615
    3. '""' → logprob: -3.9656713008880615
    4. ' "' → logprob: -4.715671062469482
    5. ' ""' → logprob: -5.965671062469482
    6. '''' → logprob: -6.215671062469482
    7. ' '' → logprob: -6.340671062469482
    8. ' ''' → logprob: -7.590671062469482
    9. ' ' → logprob: -8.21567153930664
    10. '"\' → logprob: -10.46567153930664

Token 13: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5823299884796143
    2. 'quit' → logprob: -1.7073299884796143
    3. 'exit' → logprob: -1.9573299884796143
    4. '":' → logprob: -2.2073299884796143
    5. 'break' → logprob: -6.332329750061035
    6. 'stop' → logprob: -6.457329750061035
    7. '"":' → logprob: -6.582329750061035
    8. '""' → logprob: -6.707329750061035
    9. '\n' → logprob: -7.207329750061035
    10. '```' → logprob: -7.957329750061035

Token 14: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.3171597421169281
    2. '"' → logprob: -1.3171597719192505
    3. '\n' → logprob: -5.942159652709961
    4. '":
' → logprob: -7.442159652709961
    5. '"):' → logprob: -8.067159652709961
    6. '":
' → logprob: -9.192159652709961
    7. '0' → logprob: -9.192159652709961
    8. ':' → logprob: -10.067159652709961
    9. '")' → logprob: -10.567159652709961
    10. ' "' → logprob: -11.192159652709961

Token 15: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.12381885945796967
    2. '"' → logprob: -2.873818874359131
    3. '0' → logprob: -3.373818874359131
    4. ' ' → logprob: -4.248818874359131
    5. ' "' → logprob: -5.248818874359131
    6. ' ":' → logprob: -5.998818874359131
    7. '":
' → logprob: -6.748818874359131
    8. '":
' → logprob: -7.123818874359131
    9. '\n' → logprob: -7.373818874359131
    10. '"):' → logprob: -7.873818874359131

Token 16: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.016641031950712204
    2. '"' → logprob: -4.391641139984131
    3. '\n' → logprob: -6.391641139984131
    4. ':' → logprob: -6.641641139984131
    5. '":
' → logprob: -7.516641139984131
    6. '"):' → logprob: -8.391640663146973
    7. ' ":' → logprob: -9.016640663146973
    8. '":
' → logprob: -10.141640663146973
    9. ' "' → logprob: -10.266640663146973
    10. '")' → logprob: -10.391640663146973

Token 17: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2577648162841797
    2. '\n' → logprob: -2.3827648162841797
    3. '0' → logprob: -2.7577648162841797
    4. ' ' → logprob: -3.2577648162841797
    5. '"' → logprob: -3.7577648162841797
    6. '":
' → logprob: -5.63276481628418
    7. ':' → logprob: -6.25776481628418
    8. '":
' → logprob: -6.25776481628418
    9. ' ":' → logprob: -7.13276481628418
    10. ' "' → logprob: -7.25776481628418

Token 18: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.019615573808550835
    2. '"' → logprob: -4.769615650177002
    3. ':' → logprob: -4.894615650177002
    4. '\n' → logprob: -6.394615650177002
    5. '"):' → logprob: -6.894615650177002
    6. '":
' → logprob: -7.894615650177002
    7. '):' → logprob: -8.769615173339844
    8. '")' → logprob: -10.394615173339844
    9. ':
' → logprob: -10.519615173339844
    10. ' ":' → logprob: -10.769615173339844

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016112701268866658
    2. ' break' → logprob: -6.751611232757568
    3. '\n' → logprob: -8.501611709594727
    4. '   ' → logprob: -9.751611709594727
    5. '    ' → logprob: -10.376611709594727
    6. ':' → logprob: -10.501611709594727
    7. '        
' → logprob: -10.626611709594727
    8. '
' → logprob: -11.376611709594727
    9. '<|end|>' → logprob: -11.626611709594727
    10. ' continue' → logprob: -11.751611709594727

Token 20: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5767697095870972
    2. '       ' → logprob: -0.8267697095870972
    3. 'break' (adapté à ' break') → logprob: -7.576769828796387
    4. '	break' → logprob: -9.076769828796387
    5. '\n' → logprob: -9.326769828796387
    6. '   ' → logprob: -9.326769828796387
    7. '           ' → logprob: -11.451769828796387
    8. '```' → logprob: -12.826769828796387
    9. '_break' → logprob: -12.951769828796387
    10. '    ' → logprob: -13.701769828796387

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17532674968242645
    2. '\n' → logprob: -2.8003268241882324
    3. '    
' → logprob: -2.8003268241882324
    4. '
' → logprob: -3.9253268241882324
    5. '<|end|>' → logprob: -5.050326824188232
    6. ')' → logprob: -5.675326824188232
    7. '  
' → logprob: -5.925326824188232
    8. '\' → logprob: -6.425326824188232
    9. '   
' → logprob: -7.050326824188232
    10. ' ' → logprob: -7.050326824188232

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11216907948255539
    2. '    
' → logprob: -2.487169027328491
    3. '\n' → logprob: -4.98716926574707
    4. '  
' → logprob: -5.61216926574707
    5. 'n' → logprob: -5.98716926574707
    6. '   
' → logprob: -6.11216926574707
    7. '<|end|>' → logprob: -6.48716926574707
    8. '
' → logprob: -6.61216926574707
    9. '  ' → logprob: -7.11216926574707
    10. ')' → logprob: -7.36216926574707

Token 23: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.74749755859375
    2. '    
' → logprob: -0.99749755859375
    3. '
' → logprob: -2.74749755859375
    4. '  
' → logprob: -3.99749755859375
    5. '\n' → logprob: -3.99749755859375
    6. 'tokens' → logprob: -4.49749755859375
    7. '   
' → logprob: -4.87249755859375
    8. 'n' (adapté à ' n') → logprob: -4.87249755859375
    9. ' 
' → logprob: -5.62249755859375
    10. '```' → logprob: -5.74749755859375

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06302348524332047
    2. ' ,' → logprob: -3.313023567199707
    3. ' =' → logprob: -3.813023567199707
    4. '=' → logprob: -6.688023567199707
    5. ' ' → logprob: -7.438023567199707
    6. 'um' → logprob: -8.563023567199707
    7. 'umbers' → logprob: -9.063023567199707
    8. '   ' → logprob: -9.938023567199707
    9. '1' → logprob: -10.313023567199707
    10. '  ' → logprob: -10.313023567199707

Token 25: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9339698553085327
    2. 'k' → logprob: -1.8089698553085327
    3. ' m' → logprob: -1.8089698553085327
    4. ' k' → logprob: -2.5589699745178223
    5. 'h' → logprob: -2.6839699745178223
    6. ' h' → logprob: -3.0589699745178223
    7. ' ' → logprob: -3.5589699745178223
    8. ' d' → logprob: -4.433969974517822
    9. 'd' → logprob: -4.433969974517822
    10. 's' → logprob: -4.933969974517822

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02271084673702717
    2. '=' → logprob: -4.022710800170898
    3. ',' → logprob: -5.397710800170898
    4. ' ' → logprob: -11.397710800170898
    5. ' ,' → logprob: -11.647710800170898
    6. ')' → logprob: -14.397710800170898
    7. '```' → logprob: -14.397710800170898
    8. '  ' → logprob: -14.522710800170898
    9. ' =
' → logprob: -15.272710800170898
    10. '   ' → logprob: -15.397710800170898

Token 27: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7212598323822021
    2. 'd' → logprob: -2.596259832382202
    3. 's' → logprob: -2.846259832382202
    4. 'x' → logprob: -2.846259832382202
    5. 'p' → logprob: -2.971259832382202
    6. 'r' → logprob: -2.971259832382202
    7. ' m' → logprob: -3.096259832382202
    8. 'q' → logprob: -3.471259832382202
    9. 'c' → logprob: -3.596259832382202
    10. 'l' → logprob: -3.971259832382202

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860984906554222
    2. '=' → logprob: -3.048609733581543
    3. ',' → logprob: -11.048609733581543
    4. ' ' → logprob: -12.798609733581543
    5. ')' → logprob: -13.173609733581543
    6. '    ' → logprob: -15.423609733581543
    7. ' =
' → logprob: -15.423609733581543
    8. '  ' → logprob: -15.673609733581543
    9. '=int' → logprob: -15.673609733581543
    10. '```' → logprob: -15.673609733581543

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014632229693233967
    2. 'map' → logprob: -4.264632225036621
    3. ' line' → logprob: -8.139632225036621
    4. ' list' → logprob: -9.514632225036621
    5. ' [' → logprob: -10.139632225036621
    6. '[' → logprob: -10.764632225036621
    7. '   ' → logprob: -11.389632225036621
    8. ' ' → logprob: -11.639632225036621
    9. 'line' → logprob: -12.139632225036621
    10. 'list' → logprob: -12.639632225036621

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06402933597564697
    2. '(' → logprob: -2.8140292167663574
    3. '(lambda' → logprob: -6.814029216766357
    4. '(str' → logprob: -7.064029216766357
    5. '(
' → logprob: -10.314029693603516
    6. '(input' → logprob: -10.439029693603516
    7. 'int' → logprob: -10.814029693603516
    8. '<int' → logprob: -12.564029693603516
    9. '(list' → logprob: -12.564029693603516
    10. '(eval' → logprob: -12.939029693603516

Token 31: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.16083602607250214
    2. ',' → logprob: -2.1608359813690186
    3. ',line' → logprob: -3.5358359813690186
    4. ')' → logprob: -6.035836219787598
    5. ' line' → logprob: -7.160836219787598
    6. '(' → logprob: -7.535836219787598
    7. 'line' → logprob: -7.910836219787598
    8. ' ,' → logprob: -10.410836219787598
    9. '=line' → logprob: -10.410836219787598
    10. '[line' → logprob: -10.660836219787598

Token 32: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.31339913606643677
    2. 'line' → logprob: -1.313399076461792
    3. ')' → logprob: -9.313399314880371
    4. '	line' → logprob: -10.938399314880371
    5. '(line' → logprob: -11.313399314880371
    6. '[line' → logprob: -12.063399314880371
    7. '   ' → logprob: -13.188399314880371
    8. ' ' → logprob: -13.188399314880371
    9. '=line' → logprob: -13.438399314880371
    10. '#line' → logprob: -13.688399314880371

Token 33: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03778749331831932
    2. '.' → logprob: -3.412787437438965
    3. '.strip' → logprob: -5.662787437438965
    4. '().' → logprob: -8.162787437438965
    5. ')' → logprob: -8.787787437438965
    6. ').' → logprob: -9.037787437438965
    7. ' .' → logprob: -9.662787437438965
    8. 'split' → logprob: -10.662787437438965
    9. '.rstrip' → logprob: -11.412787437438965
    10. '.readline' → logprob: -13.287787437438965

Token 34: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04751494526863098
    2. '())' → logprob: -3.1725149154663086
    3. '("' → logprob: -6.422514915466309
    4. '(' → logprob: -6.672514915466309
    5. '()' → logprob: -6.922514915466309
    6. ')' → logprob: -8.297514915466309
    7. '("("' → logprob: -8.547514915466309
    8. '(','' → logprob: -8.922514915466309
    9. '()))' → logprob: -10.422514915466309
    10. '(""))' → logprob: -12.297514915466309

Token 35: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' stones' (ID: 38940)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0418347120285034
    2. 'n' → logprob: -1.5418347120285034
    3. '[' → logprob: -2.416834831237793
    4. 's' → logprob: -2.791834831237793
    5. 'd' → logprob: -2.916834831237793
    6. 'a' → logprob: -3.166834831237793
    7. 'r' → logprob: -4.166834831237793
    8. 'c' → logprob: -4.291834831237793
    9. ' 
' → logprob: -4.416834831237793
    10. ')' → logprob: -4.791834831237793

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01839270070195198
    2. '=' → logprob: -4.393392562866211
    3. '[' → logprob: -5.768392562866211
    4. '_' → logprob: -6.893392562866211
    5. '_count' → logprob: -7.768392562866211
    6. ',' → logprob: -8.768392562866211
    7. '_counts' → logprob: -8.893392562866211
    8. '[:]' → logprob: -8.893392562866211
    9. ' ' → logprob: -9.143392562866211
    10. '.' → logprob: -9.143392562866211

Token 38: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20504814386367798
    2. ' []' → logprob: -2.580048084259033
    3. ' [' → logprob: -2.830048084259033
    4. 'list' → logprob: -3.080048084259033
    5. '[]' → logprob: -6.205048084259033
    6. '[' → logprob: -6.205048084259033
    7. ' input' → logprob: -8.580048561096191
    8. '[list' → logprob: -8.830048561096191
    9. ' ' → logprob: -9.205048561096191
    10. 'input' → logprob: -9.580048561096191

Token 39: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034026403445750475
    2. '(range' → logprob: -6.1284027099609375
    3. '(map' → logprob: -7.5034027099609375
    4. '(int' → logprob: -7.7534027099609375
    5. '()' → logprob: -9.378402709960938
    6. '(st' → logprob: -10.753402709960938
    7. '(input' → logprob: -10.878402709960938
    8. '(
' → logprob: -11.253402709960938
    9. '(tokens' → logprob: -11.628402709960938
    10. '(token' → logprob: -12.003402709960938

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03805674985051155
    2. '(n' → logprob: -3.2880568504333496
    3. '(k' → logprob: -12.038056373596191
    4. '1' → logprob: -12.163056373596191
    5. ' (' → logprob: -13.288056373596191
    6. '(
' → logprob: -14.163056373596191
    7. ')' → logprob: -14.413056373596191
    8. '(m' → logprob: -15.038056373596191
    9. ')(' → logprob: -15.163056373596191
    10. '```' → logprob: -16.288057327270508

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0082014175131917
    2. 'n' → logprob: -5.008201599121094
    3. '   ' → logprob: -7.258201599121094
    4. ' ' → logprob: -8.133201599121094
    5. '(' → logprob: -8.383201599121094
    6. ' n' → logprob: -8.633201599121094
    7. '(n' → logprob: -10.133201599121094
    8. '	n' → logprob: -11.258201599121094
    9. '0' → logprob: -12.008201599121094
    10. 'k' → logprob: -12.508201599121094

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007703172159381211
    2. ',n' → logprob: -7.250770092010498
    3. ' ,' → logprob: -9.750770568847656
    4. '1' → logprob: -15.000770568847656
    5. 'n' → logprob: -15.250770568847656
    6. ',k' → logprob: -15.250770568847656
    7. ',m' → logprob: -15.375770568847656
    8. ',
' → logprob: -15.500770568847656
    9. '   ' → logprob: -15.750770568847656
    10. ',

' → logprob: -15.750770568847656

Token 43: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6932149529457092
    2. ' n' → logprob: -0.6932149529457092
    3. '	n' → logprob: -9.693215370178223
    4. ')n' → logprob: -12.693215370178223
    5. '<|end|>' → logprob: -13.693215370178223
    6. ' ' → logprob: -15.068215370178223
    7. '_n' → logprob: -15.193215370178223
    8. '(n' → logprob: -15.443215370178223
    9. '    ' → logprob: -15.568215370178223
    10. '   ' → logprob: -15.943215370178223

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141470432281494
    2. ' +' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.451415061950684
    4. ' +
' → logprob: -15.326415061950684
    5. '1' → logprob: -16.076414108276367
    6. '   ' → logprob: -16.326414108276367
    7. ' ' → logprob: -16.326414108276367
    8. '+n' → logprob: -16.326414108276367
    9. '```' → logprob: -16.826414108276367
    10. '+
' → logprob: -16.826414108276367

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012517428025603294
    2. ' ' → logprob: -4.38751745223999
    3. ')' → logprob: -12.512516975402832
    4. ' n' → logprob: -13.762516975402832
    5. '```' → logprob: -14.012516975402832
    6. '   ' → logprob: -15.325016975402832
    7. ' ' → logprob: -15.450016975402832
    8. '

' → logprob: -15.575016975402832
    9. ' k' → logprob: -15.762516975402832
    10. '  ' → logprob: -15.887516975402832

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005549400229938328
    2. ' ' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.875555038452148
    4. '  ' → logprob: -15.500555038452148
    5. '2' → logprob: -15.750555038452148
    6. ')' → logprob: -15.875555038452148
    7. '```' → logprob: -16.06305503845215
    8. '    ' → logprob: -16.43805503845215
    9. ' ' → logprob: -16.81305503845215
    10. '１' → logprob: -17.37555503845215

Token 47: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029863880947232246
    2. ')' → logprob: -3.5298638343811035
    3. ' ))' → logprob: -9.529864311218262
    4. ')))' → logprob: -11.154864311218262
    5. '),' → logprob: -11.904864311218262
    6. ' )' → logprob: -12.279864311218262
    7. '))
' → logprob: -12.279864311218262
    8. ' ' → logprob: -13.404864311218262
    9. '   ' → logprob: -13.404864311218262
    10. ',' → logprob: -13.404864311218262

Token 48: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0817073583602905
    2. '    ' → logprob: -1.5817073583602905
    3. '   ' → logprob: -1.7067073583602905
    4. ' while' → logprob: -2.33170747756958
    5. 'while' → logprob: -3.58170747756958
    6. ' 
' → logprob: -3.70670747756958
    7. '<|end|>' → logprob: -3.70670747756958
    8. '[' → logprob: -4.33170747756958
    9. ')' → logprob: -4.45670747756958
    10. '    
' → logprob: -4.58170747756958

Token 50: ' trouver' (ID: 23195)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9108957052230835
    2. ' ' → logprob: -2.035895824432373
    3. 'while' → logprob: -2.410895824432373
    4. 'w' → logprob: -2.785895824432373
    5. 'i' → logprob: -2.910895824432373
    6. ' for' → logprob: -3.035895824432373
    7. ' i' → logprob: -3.660895824432373
    8. 's' → logprob: -3.785895824432373
    9. 'k' → logprob: -4.035895824432373
    10. 'for' → logprob: -4.035895824432373

Token 51: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0511480569839478
    2. '<|end|>' → logprob: -1.3011480569839478
    3. ' les' → logprob: -2.801147937774658
    4. '_' → logprob: -2.926147937774658
    5. 'l' → logprob: -3.176147937774658
    6. ' ' → logprob: -3.301147937774658
    7. 'le' → logprob: -3.301147937774658
    8. 's' → logprob: -3.426147937774658
    9. ' le' → logprob: -3.551147937774658
    10. ' la' → logprob: -3.801147937774658

Token 52: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4012443423271179
    2. 'a' → logprob: -1.2762444019317627
    3. ''' → logprob: -3.0262444019317627
    4. 'es' → logprob: -6.651244163513184
    5. ''é' → logprob: -7.901244163513184
    6. ''''' → logprob: -8.151244163513184
    7. ''e' → logprob: -9.026244163513184
    8. 'é' → logprob: -9.776244163513184
    9. ''em' → logprob: -9.776244163513184
    10. ''end' → logprob: -9.776244163513184

Token 53: 'index' (ID: 2257)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9901410937309265
    2. 'élé' → logprob: -1.3651411533355713
    3. 'é' → logprob: -2.4901411533355713
    4. ''' → logprob: -2.6151411533355713
    5. 'a' → logprob: -2.8651411533355713
    6. 'indice' → logprob: -3.4901411533355713
    7. 'i' → logprob: -3.9901411533355713
    8. 'el' → logprob: -3.9901411533355713
    9. ''ind' → logprob: -4.740140914916992
    10. 'index' → logprob: -4.740140914916992

Token 54: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9572418928146362
    2. 's' → logprob: -1.8322418928146362
    3. 'i' → logprob: -2.457242012023926
    4. 'k' → logprob: -2.582242012023926
    5. 'f' → logprob: -3.582242012023926
    6. '_k' → logprob: -3.582242012023926
    7. 'm' → logprob: -3.832242012023926
    8. 'd' → logprob: -3.832242012023926
    9. 'a' → logprob: -4.082242012023926
    10. ' ' → logprob: -4.207242012023926

Token 55: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10650981217622757
    2. 'l' → logprob: -3.3565099239349365
    3. 'm' → logprob: -4.356509685516357
    4. 'la' → logprob: -4.356509685516357
    5. ' k' → logprob: -4.731509685516357
    6. '(k' → logprob: -5.106509685516357
    7. 'dé' → logprob: -5.231509685516357
    8. 'start' → logprob: -5.606509685516357
    9. 'd' → logprob: -5.731509685516357
    10. '0' → logprob: -6.231509685516357

Token 56: ' pierre' (ID: 70323)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.8406165838241577
    2. 'p' → logprob: -1.2156165838241577
    3. 'pro' → logprob: -2.5906167030334473
    4. ' ' → logprob: -3.0906167030334473
    5. 'person' → logprob: -4.340616703033447
    6. 'per' → logprob: -4.340616703033447
    7. 'm' → logprob: -4.340616703033447
    8. 'pi' → logprob: -4.465616703033447
    9. 'pier' → logprob: -4.590616703033447
    10. ' prochaine' → logprob: -4.715616703033447

Token 57: ' m' (ID: 284)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1127828359603882
    2. '_' → logprob: -1.9877828359603882
    3. 'current' → logprob: -2.1127829551696777
    4. 'm' → logprob: -2.7377829551696777
    5. ' ' → logprob: -3.2377829551696777
    6. 'k' → logprob: -3.2377829551696777
    7. '0' → logprob: -3.6127829551696777
    8. 'a' → logprob: -3.7377829551696777
    9. 'c' → logprob: -3.9877829551696777
    10. 'd' → logprob: -4.362782955169678

Token 58: '
' (ID: 198)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.14671097695827484
    2. '.' → logprob: -2.0217108726501465
    3. 'index' → logprob: -6.8967108726501465
    4. ')' → logprob: -7.2717108726501465
    5. '[' → logprob: -8.021711349487305
    6. '[:]' → logprob: -8.146711349487305
    7. '=' → logprob: -8.396711349487305
    8. ':' → logprob: -8.396711349487305
    9. ',' → logprob: -8.521711349487305
    10. ' =' → logprob: -8.646711349487305

Token 59: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.609580159187317
    2. '.' → logprob: -1.609580159187317
    3. '=' → logprob: -2.3595800399780273
    4. ' =' → logprob: -2.4845800399780273
    5. '_' → logprob: -2.8595800399780273
    6. 'idx' → logprob: -2.9845800399780273
    7. 'm' → logprob: -3.4845800399780273
    8. 'index' → logprob: -3.4845800399780273
    9. '#' → logprob: -3.7345800399780273
    10. ' stones' → logprob: -3.8595800399780273

Token 60: ' idx' (ID: 14016)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.14092808961868286
    2. ' stones' → logprob: -2.390928030014038
    3. ')' → logprob: -4.765928268432617
    4. 'index' → logprob: -4.890928268432617
    5. 'idx' (adapté à ' idx') → logprob: -5.265928268432617
    6. '   ' → logprob: -6.140928268432617
    7. ' ' → logprob: -6.390928268432617
    8. ' index' → logprob: -6.640928268432617
    9. ' idx' → logprob: -6.640928268432617
    10. '```' → logprob: -6.765928268432617

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303784921765327
    2. '=' → logprob: -3.651303768157959
    3. '_' → logprob: -13.651304244995117
    4. 's' → logprob: -14.651304244995117
    5. ' ' → logprob: -14.901304244995117
    6. ',' → logprob: -15.026304244995117
    7. '_m' → logprob: -15.401304244995117
    8. ')' → logprob: -15.651304244995117
    9. '=m' → logprob: -15.776304244995117
    10. 'm' → logprob: -15.901304244995117

Token 62: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.3206031620502472
    2. ' stones' → logprob: -1.3206031322479248
    3. 'm' → logprob: -5.320603370666504
    4. ' m' → logprob: -6.195603370666504
    5. 'st' → logprob: -9.445603370666504
    6. ' n' → logprob: -10.195603370666504
    7. ' ' → logprob: -10.445603370666504
    8. 'n' → logprob: -10.445603370666504
    9. '   ' → logprob: -10.570603370666504
    10. ' (' → logprob: -10.695603370666504

Token 63: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00021927160560153425
    2. '.' → logprob: -8.750219345092773
    3. '.find' → logprob: -10.250219345092773
    4. 'index' → logprob: -10.750219345092773
    5. '.Index' → logprob: -13.500219345092773
    6. ' .' → logprob: -14.000219345092773
    7. '[' → logprob: -15.250219345092773
    8. ' index' → logprob: -15.375219345092773
    9. '#index' → logprob: -15.375219345092773
    10. '.tolist' → logprob: -16.125219345092773

Token 64: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00023119196703191847
    2. '(' → logprob: -8.37523078918457
    3. 'm' → logprob: -15.50023078918457
    4. '(
' → logprob: -16.00023078918457
    5. '((' → logprob: -16.25023078918457
    6. ' (' → logprob: -16.50023078918457
    7. '('' → logprob: -17.87523078918457
    8. '(k' → logprob: -18.00023078918457
    9. '(M' → logprob: -18.00023078918457
    10. '(n' → logprob: -18.75023078918457

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018399098189547658
    2. ')
' → logprob: -8.875184059143066
    3. ' )' → logprob: -10.875184059143066
    4. ')+' → logprob: -11.125184059143066
    5. '))' → logprob: -12.500184059143066
    6. ')

' → logprob: -13.125184059143066
    7. '   ' → logprob: -13.250184059143066
    8. ')
' → logprob: -14.750184059143066
    9. ')`' → logprob: -14.875184059143066
    10. '```' → logprob: -15.375184059143066

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4279195070266724
    2. ' ' → logprob: -1.5529195070266724
    3. '<|end|>' → logprob: -1.5529195070266724
    4. '+' → logprob: -2.302919387817383
    5. ')' → logprob: -2.427919387817383
    6. ' 
' → logprob: -3.052919387817383
    7. '\n' → logprob: -3.552919387817383
    8. '  
' → logprob: -4.427919387817383
    9. '<|end|>' → logprob: -4.802919387817383
    10. '\' → logprob: -4.802919387817383

Token 67: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9322265386581421
    2. ' k' → logprob: -1.432226538658142
    3. ' stones' → logprob: -1.557226538658142
    4. ' True' → logprob: -2.3072266578674316
    5. ' n' → logprob: -4.557226657867432
    6. ' ' → logprob: -4.682226657867432
    7. 'len' → logprob: -4.682226657867432
    8. ' idx' → logprob: -4.807226657867432
    9. 'True' → logprob: -4.807226657867432
    10. 'stones' → logprob: -5.057226657867432

Token 69: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.03376660868525505
    2. '(' → logprob: -3.408766508102417
    3. '(s' → logprob: -9.283766746520996
    4. ' (' → logprob: -11.158766746520996
    5. '>' → logprob: -12.658766746520996
    6. ')' → logprob: -13.908766746520996
    7. '(
' → logprob: -14.033766746520996
    8. 'stones' → logprob: -14.158766746520996
    9. ' stones' → logprob: -14.283766746520996
    10. '()' → logprob: -14.408766746520996

Token 70: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0011105667799711227
    2. '>' → logprob: -7.001110553741455
    3. 'stones' → logprob: -9.626111030578613
    4. '[' → logprob: -10.501111030578613
    5. '```' → logprob: -10.626111030578613
    6. ')' → logprob: -11.251111030578613
    7. 'one' → logprob: -11.751111030578613
    8. '_' → logprob: -12.001111030578613
    9. 's' → logprob: -12.376111030578613
    10. 'onnes' → logprob: -12.626111030578613

Token 71: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1943971812725067
    2. ')' → logprob: -1.944397211074829
    3. '>' → logprob: -3.444397211074829
    4. ')>' → logprob: -6.81939697265625
    5. ' )' → logprob: -7.56939697265625
    6. ' ' → logprob: -10.44439697265625
    7. '   ' → logprob: -11.31939697265625
    8. ' ' → logprob: -12.44439697265625
    9. '">' → logprob: -13.19439697265625
    10. '>)' → logprob: -13.31939697265625

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.008672603406012058
    2. '>' → logprob: -4.758672714233398
    3. ' ' → logprob: -10.633672714233398
    4. ' !=' → logprob: -11.008672714233398
    5. ' >=' → logprob: -12.258672714233398
    6. '   ' → logprob: -12.758672714233398
    7. '  ' → logprob: -12.758672714233398
    8. ')' → logprob: -13.258672714233398
    9. ' ' → logprob: -13.508672714233398
    10. ' <' → logprob: -14.258672714233398

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012807687744498253
    2. ' ' → logprob: -4.387807846069336
    3. '2' → logprob: -8.637807846069336
    4. 'k' → logprob: -9.637807846069336
    5. '0' → logprob: -10.512807846069336
    6. '3' → logprob: -10.762807846069336
    7. ' k' → logprob: -13.012807846069336
    8. '>' → logprob: -13.137807846069336
    9. 'n' → logprob: -14.387807846069336
    10. '  ' → logprob: -14.512807846069336

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041053479071706533
    2. '2' → logprob: -8.875410079956055
    3. 'k' → logprob: -8.875410079956055
    4. '0' → logprob: -9.125410079956055
    5. '3' → logprob: -11.375410079956055
    6. ' ' → logprob: -11.875410079956055
    7. '   ' → logprob: -14.187910079956055
    8. 'n' → logprob: -14.687910079956055
    9. '```' → logprob: -14.937910079956055
    10. '>' → logprob: -15.375410079956055

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.007317567011341e-05
    2. ':
' → logprob: -10.125089645385742
    3. ',' → logprob: -11.000089645385742
    4. '):' → logprob: -11.250089645385742
    5. ')' → logprob: -12.125089645385742
    6. ' :' → logprob: -12.250089645385742
    7. '<|end|>' → logprob: -13.000089645385742
    8. '   ' → logprob: -13.375089645385742
    9. ' and' → logprob: -13.625089645385742
    10. ':**' → logprob: -13.625089645385742

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9630552530288696
    2. '<|end|>' → logprob: -1.9630552530288696
    3. ':' → logprob: -2.33805513381958
    4. '   ' → logprob: -2.46305513381958
    5. '
' → logprob: -2.96305513381958
    6. '    
' → logprob: -3.08805513381958
    7. ' ' → logprob: -3.21305513381958
    8. '    ' → logprob: -3.33805513381958
    9. '        
' → logprob: -3.58805513381958
    10. ' 
' → logprob: -3.83805513381958

Token 77: ' stones' (ID: 38940)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5088728666305542
    2. 'k' → logprob: -2.1338729858398438
    3. ' idx' → logprob: -2.2588729858398438
    4. 'idx' → logprob: -2.5088729858398438
    5. ' for' → logprob: -3.3838729858398438
    6. ' n' → logprob: -4.758872985839844
    7. '    ' → logprob: -4.883872985839844
    8. 'for' → logprob: -4.883872985839844
    9. 'n' → logprob: -5.258872985839844
    10. ' if' → logprob: -5.508872985839844

Token 78: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.04776215925812721
    2. '.remove' → logprob: -3.172762155532837
    3. '[idx' → logprob: -6.922762393951416
    4. ' =' → logprob: -7.047762393951416
    5. '.' → logprob: -7.547762393951416
    6. '.insert' → logprob: -7.672762393951416
    7. 'pop' → logprob: -7.672762393951416
    8. '[(' → logprob: -8.422761917114258
    9. '[' → logprob: -8.547761917114258
    10. '.append' → logprob: -8.797761917114258

Token 79: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.22645056247711182
    2. '((' → logprob: -1.6014505624771118
    3. '(' → logprob: -7.101450443267822
    4. '(k' → logprob: -9.60145092010498
    5. '(((' → logprob: -9.72645092010498
    6. '()' → logprob: -10.72645092010498
    7. '(-' → logprob: -11.10145092010498
    8. 'idx' → logprob: -11.35145092010498
    9. '(index' → logprob: -11.35145092010498
    10. '(len' → logprob: -12.22645092010498

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8561262488365173
    2. ' +' → logprob: -1.606126308441162
    3. ')
' → logprob: -1.606126308441162
    4. '+' → logprob: -1.856126308441162
    5. '+k' → logprob: -4.731126308441162
    6. ' )' → logprob: -5.481126308441162
    7. ' )
' → logprob: -5.981126308441162
    8. '+
' → logprob: -7.606126308441162
    9. '+)' → logprob: -8.106125831604004
    10. ' +
' → logprob: -8.231125831604004

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34039464592933655
    2. '       ' → logprob: -2.3403947353363037
    3. '<|end|>' → logprob: -3.0903947353363037
    4. '+
' → logprob: -3.4653947353363037
    5. '+' → logprob: -3.5903947353363037
    6. ')' → logprob: -4.090394496917725
    7. '        
' → logprob: -4.340394496917725
    8. 'if' → logprob: -4.840394496917725
    9. ' 
' → logprob: -4.840394496917725
    10. '=' → logprob: -4.965394496917725

Token 82: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.012533433735370636
    2. 'if' → logprob: -4.387533664703369
    3. 'k' → logprob: -11.762533187866211
    4. 'index' → logprob: -12.262533187866211
    5. 'n' → logprob: -12.887533187866211
    6. 'for' → logprob: -13.012533187866211
    7. '   ' → logprob: -13.012533187866211
    8. ' idx' → logprob: -13.137533187866211
    9. '```' → logprob: -14.137533187866211
    10. '       ' → logprob: -15.012533187866211

Token 83: ' hop' (ID: 10284)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005957122426480055
    2. 'if' → logprob: -5.130957126617432
    3. ' idx' → logprob: -11.005956649780273
    4. 'index' → logprob: -12.130956649780273
    5. '   ' → logprob: -12.755956649780273
    6. 'k' → logprob: -13.880956649780273
    7. '	idx' → logprob: -14.380956649780273
    8. ' if' → logprob: -14.505956649780273
    9. '```' → logprob: -14.755956649780273
    10. 'for' → logprob: -14.755956649780273

Token 84: ' k' (ID: 372)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01689399965107441
    2. '       ' → logprob: -5.0168938636779785
    3. '   ' → logprob: -5.8918938636779785
    4. '+=' → logprob: -6.2668938636779785
    5. ' idx' → logprob: -7.1418938636779785
    6. '=' → logprob: -7.3918938636779785
    7. 'if' → logprob: -7.5168938636779785
    8. 'index' → logprob: -7.5168938636779785
    9. '           ' → logprob: -8.016894340515137
    10. '_idx' → logprob: -8.141894340515137

Token 85: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3923183679580688
    2. '<|end|>' → logprob: -1.5173183679580688
    3. '+' → logprob: -1.7673183679580688
    4. ' *' → logprob: -2.8923182487487793
    5. ' -' → logprob: -2.8923182487487793
    6. ' +' → logprob: -3.0173182487487793
    7. ' +=' → logprob: -3.0173182487487793
    8. ' ' → logprob: -3.1423182487487793
    9. '*' → logprob: -3.7673182487487793
    10. 'es' → logprob: -4.392318248748779

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010657975217327476
    2. ' ' → logprob: -6.876065731048584
    3. '<|end|>' → logprob: -12.126066207885742
    4. '2' → logprob: -12.251066207885742
    5. 'idx' → logprob: -12.626066207885742
    6. '  ' → logprob: -13.126066207885742
    7. '    ' → logprob: -13.251066207885742
    8. ' -' → logprob: -13.626066207885742
    9. '<|end|>' → logprob: -13.626066207885742
    10. 'index' → logprob: -13.751066207885742

Token 87: ' fois' (ID: 14697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' compt' (ID: 39238)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.6860342025756836
    2. 'avance' → logprob: -1.9360342025756836
    3. ' avant' → logprob: -2.1860342025756836
    4. ' avance' → logprob: -2.4360342025756836
    5. ' avanç' → logprob: -3.0610342025756836
    6. 't' → logprob: -3.9360342025756836
    7. ' avanti' → logprob: -4.186034202575684
    8. 's' → logprob: -5.061034202575684
    9. 'st' → logprob: -5.186034202575684
    10. ' suivant' → logprob: -5.561034202575684

Token 90: 'ant' (ID: 493)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.32471561431884766
    2. 't' → logprob: -2.3247156143188477
    3. 'up' → logprob: -2.4497156143188477
    4. 'e' → logprob: -2.8247156143188477
    5. 'ant' → logprob: -4.199715614318848
    6. 'er' → logprob: -5.199715614318848
    7. 'pt' → logprob: -5.949715614318848
    8. 'ages' → logprob: -7.074715614318848
    9. 'é' → logprob: -7.199715614318848
    10. 'u' → logprob: -7.199715614318848

Token 91: ' uniquement' (ID: 65527)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.07127320021390915
    2. 'idx' → logprob: -2.9462730884552
    3. '(idx' → logprob: -5.196273326873779
    4. ' (' → logprob: -5.321273326873779
    5. ' k' → logprob: -6.071273326873779
    6. ' if' → logprob: -7.321273326873779
    7. ')' → logprob: -7.571273326873779
    8. '(' → logprob: -7.571273326873779
    9. '<|end|>' → logprob: -8.196272850036621
    10. ' ' → logprob: -8.321272850036621

Token 92: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.10756997764110565
    2. 'sur' → logprob: -2.732569932937622
    3. ' les' → logprob: -3.982569932937622
    4. 'des' → logprob: -4.857570171356201
    5. 'en' → logprob: -6.107570171356201
    6. 'aux' → logprob: -6.107570171356201
    7. '<|end|>' → logprob: -6.857570171356201
    8. 'dans' → logprob: -7.357570171356201
    9. 'stones' → logprob: -7.857570171356201
    10. ' des' → logprob: -7.982570171356201

Token 93: ' pierres' (ID: 115592)
  Prédit: 'pier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pier' → logprob: -0.3872176706790924
    2. ' pierres' → logprob: -1.38721764087677
    3. 'p' → logprob: -2.7622177600860596
    4. '```' → logprob: -5.8872175216674805
    5. ' pier' → logprob: -7.1372175216674805
    6. 'indices' → logprob: -7.5122175216674805
    7. 'stones' → logprob: -7.6997175216674805
    8. ' indices' → logprob: -7.6997175216674805
    9. ' ' → logprob: -7.7622175216674805
    10. ' ' → logprob: -8.51221752166748

Token 94: ' restantes' (ID: 159241)
  Prédit: ' restantes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' restantes' → logprob: -0.24904866516590118
    2. 'rest' → logprob: -2.3740487098693848
    3. ' rest' → logprob: -2.6240487098693848
    4. 'sur' → logprob: -4.124048709869385
    5. ' restante' → logprob: -5.374048709869385
    6. ',' → logprob: -5.749048709869385
    7. '_rest' → logprob: -5.874048709869385
    8. '[' → logprob: -6.124048709869385
    9. ' restant' → logprob: -6.124048709869385
    10. 'idx' → logprob: -6.249048709869385

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1026246547698975
    2. '<|end|>' → logprob: -1.2276246547698975
    3. '       ' → logprob: -1.6026246547698975
    4. 'idx' → logprob: -3.1026246547698975
    5. '        
' → logprob: -3.2276246547698975
    6. ',' → logprob: -3.2276246547698975
    7. '<|end|>' → logprob: -5.102624893188477
    8. ',
' → logprob: -5.102624893188477
    9. ' 
' → logprob: -5.227624893188477
    10. '\' → logprob: -5.602624893188477

Token 96: '       ' (ID: 309)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10810894519090652
    2. ' idx' → logprob: -3.2331089973449707
    3. '
' → logprob: -3.8581089973449707
    4. '       ' → logprob: -4.233108997344971
    5. '<|end|>' → logprob: -4.858108997344971
    6. '        
' → logprob: -5.608108997344971
    7. ' for' → logprob: -5.858108997344971
    8. '	idx' → logprob: -6.108108997344971
    9. '```' → logprob: -6.233108997344971
    10. '    
' → logprob: -6.483108997344971

Token 97: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.08052916824817657
    2. 'for' → logprob: -2.58052921295166
    3. ' for' → logprob: -6.70552921295166
    4. ' idx' → logprob: -8.58052921295166
    5. '   ' → logprob: -9.20552921295166
    6. '       ' → logprob: -9.70552921295166
    7. 'k' → logprob: -10.70552921295166
    8. 'if' → logprob: -11.20552921295166
    9. '```' → logprob: -11.45552921295166
    10. '	idx' → logprob: -11.58052921295166

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27652230858802795
    2. '=' → logprob: -1.9015222787857056
    3. ' +=' → logprob: -2.526522397994995
    4. '+=' → logprob: -4.401522159576416
    5. ' =(' → logprob: -10.776522636413574
    6. ' ' → logprob: -11.651522636413574
    7. '+' → logprob: -12.151522636413574
    8. ' -=' → logprob: -12.276522636413574
    9. '=(' → logprob: -13.151522636413574
    10. '+=(' → logprob: -13.651522636413574

Token 99: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.14367082715034485
    2. ' (' → logprob: -2.0186707973480225
    3. '(index' → logprob: -7.893671035766602
    4. '(' → logprob: -8.768671035766602
    5. '   ' → logprob: -9.018671035766602
    6. '(st' → logprob: -9.143671035766602
    7. '(indices' → logprob: -9.268671035766602
    8. '(id' → logprob: -11.018671035766602
    9. ' ' → logprob: -11.143671035766602
    10. '(ans' → logprob: -11.393671035766602

Token 100: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2831955552101135
    2. '(idx' → logprob: -1.4081954956054688
    3. ' idx' → logprob: -6.283195495605469
    4. ' (' → logprob: -9.408195495605469
    5. '[idx' → logprob: -10.283195495605469
    6. '	idx' → logprob: -10.408195495605469
    7. '(' → logprob: -11.908195495605469
    8. 'index' → logprob: -12.033195495605469
    9. '   ' → logprob: -12.158195495605469
    10. '_idx' → logprob: -12.533195495605469

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014201588928699493
    2. '+' → logprob: -4.264201641082764
    3. '+k' → logprob: -10.889201164245605
    4. ' ' → logprob: -11.014201164245605
    5. '<|end|>' → logprob: -14.514201164245605
    6. '   ' → logprob: -14.639201164245605
    7. ' +
' → logprob: -14.639201164245605
    8. ')' → logprob: -15.014201164245605
    9. ' -' → logprob: -15.139201164245605
    10. ' plus' → logprob: -15.639201164245605

Token 102: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10748133063316345
    2. '(k' → logprob: -2.6074812412261963
    3. ' k' → logprob: -3.7324812412261963
    4. ' (' → logprob: -5.482481479644775
    5. '(' → logprob: -9.982481002807617
    6. '{k' → logprob: -10.857481002807617
    7. ')' → logprob: -11.107481002807617
    8. '	k' → logprob: -12.732481002807617
    9. '   ' → logprob: -12.857481002807617
    10. '
' → logprob: -13.669981002807617

Token 103: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008253490086644888
    2. ' k' → logprob: -7.75082540512085
    3. '(k' → logprob: -7.87582540512085
    4. ' (' → logprob: -11.250824928283691
    5. '(' → logprob: -13.625824928283691
    6. '{k' → logprob: -14.875824928283691
    7. '1' → logprob: -16.500825881958008
    8. ')' → logprob: -16.750825881958008
    9. '	k' → logprob: -17.125825881958008
    10. '   ' → logprob: -17.500825881958008

Token 104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07917651534080505
    2. '-' → logprob: -2.579176425933838
    3. ')' → logprob: -8.329176902770996
    4. ' ' → logprob: -10.704176902770996
    5. ' )' → logprob: -11.579176902770996
    6. '1' → logprob: -11.829176902770996
    7. ')-' → logprob: -12.829176902770996
    8. '   ' → logprob: -13.204176902770996
    9. '))' → logprob: -15.204176902770996
    10. '-)' → logprob: -15.329176902770996

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018577903392724693
    2. ' ' → logprob: -8.7501859664917
    3. '2' → logprob: -10.6251859664917
    4. ')' → logprob: -13.5001859664917
    5. '   ' → logprob: -13.8751859664917
    6. '-' → logprob: -16.125185012817383
    7. '```' → logprob: -16.750185012817383
    8. '  ' → logprob: -16.875185012817383
    9. '۱' → logprob: -16.875185012817383
    10. ' -' → logprob: -17.250185012817383

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -14.437520027160645
    4. ')' → logprob: -14.750020027160645
    5. '   ' → logprob: -16.43752098083496
    6. '۱' → logprob: -16.62502098083496
    7. '<|end|>' → logprob: -17.18752098083496
    8. '  ' → logprob: -17.25002098083496
    9. '0' → logprob: -17.56252098083496
    10. '১' → logprob: -17.68752098083496

Token 107: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.42893674969673157
    2. ')' → logprob: -1.0539367198944092
    3. ' ))' → logprob: -8.678936958312988
    4. ' )' → logprob: -10.053936958312988
    5. ')))' → logprob: -11.553936958312988
    6. '   ' → logprob: -12.053936958312988
    7. ')%' → logprob: -12.678936958312988
    8. '    ' → logprob: -13.553936958312988
    9. '})' → logprob: -14.553936958312988
    10. ' ' → logprob: -14.553936958312988

Token 108: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0033072312362492085
    2. '%' → logprob: -5.878307342529297
    3. ')' → logprob: -8.128307342529297
    4. ' ' → logprob: -8.753307342529297
    5. ')%' → logprob: -10.378307342529297
    6. '<|end|>' → logprob: -12.378307342529297
    7. ' ' → logprob: -12.503307342529297
    8. ' %
' → logprob: -12.628307342529297
    9. ' )' → logprob: -13.128307342529297
    10. '%n' → logprob: -14.253307342529297

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.113290095934644e-05
    2. ' len' → logprob: -9.500081062316895
    3. '(len' → logprob: -12.000081062316895
    4. '[len' → logprob: -16.00008201599121
    5. '	len' → logprob: -18.12508201599121
    6. '<len' → logprob: -18.50008201599121
    7. '=len' → logprob: -18.62508201599121
    8. ',len' → logprob: -19.75008201599121
    9. '```' → logprob: -20.87508201599121
    10. '   ' → logprob: -21.12508201599121

Token 110: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00023178798437584192
    2. '(' → logprob: -8.375231742858887
    3. '(s' → logprob: -14.375231742858887
    4. ' (' → logprob: -15.125231742858887
    5. 'stones' → logprob: -15.500231742858887
    6. ' stones' → logprob: -17.250232696533203
    7. '(stor' → logprob: -17.500232696533203
    8. '	st' → logprob: -18.000232696533203
    9. 's' → logprob: -18.250232696533203
    10. '(
' → logprob: -18.375232696533203

Token 111: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -2.975612187583465e-05
    2. 'stones' → logprob: -10.500029563903809
    3. 'one' → logprob: -14.000029563903809
    4. ' ones' → logprob: -14.750029563903809
    5. 'es' → logprob: -15.625029563903809
    6. '[' → logprob: -15.875029563903809
    7. ')' → logprob: -15.875029563903809
    8. ' stones' → logprob: -16.125030517578125
    9. '```' → logprob: -16.375030517578125
    10. 'tones' → logprob: -16.750030517578125

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.79811754100956e-05
    2. ')
' → logprob: -10.250038146972656
    3. ' )' → logprob: -13.500038146972656
    4. '       ' → logprob: -15.000038146972656
    5. '<|end|>' → logprob: -15.000038146972656
    6. '   ' → logprob: -15.375038146972656
    7. ')

' → logprob: -16.000038146972656
    8. '))' → logprob: -16.125038146972656
    9. ')
' → logprob: -17.250038146972656
    10. ')}' → logprob: -17.375038146972656

Token 113: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15053093433380127
    2. '<|end|>' → logprob: -2.2755308151245117
    3. '   ' → logprob: -3.5255308151245117
    4. ')' → logprob: -5.775530815124512
    5. ' print' → logprob: -6.525530815124512
    6. '
' → logprob: -7.150530815124512
    7. '```' → logprob: -7.650530815124512
    8. '<|end|>' → logprob: -7.775530815124512
    9. '    
' → logprob: -8.650530815124512
    10. ' ' → logprob: -8.900530815124512

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0018033420201390982
    2. '   ' → logprob: -6.376803398132324
    3. ' print' → logprob: -9.626803398132324
    4. '<|end|>' → logprob: -11.001803398132324
    5. '
' → logprob: -11.501803398132324
    6. '    
' → logprob: -12.751803398132324
    7. '```' → logprob: -13.376803398132324
    8. '	print' → logprob: -13.751803398132324
    9. ' ' → logprob: -14.126803398132324
    10. '#print' → logprob: -14.751803398132324

Token 115: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00014585316239390522
    2. '(' → logprob: -8.87514591217041
    3. '("("' → logprob: -13.12514591217041
    4. '(s' → logprob: -13.25014591217041
    5. '(f' → logprob: -13.87514591217041
    6. '()' → logprob: -14.87514591217041
    7. ' (' → logprob: -15.62514591217041
    8. '((' → logprob: -15.75014591217041
    9. '('' → logprob: -15.75014591217041
    10. 'stones' → logprob: -16.375144958496094

Token 116: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00011772842844948173
    2. '(' → logprob: -9.625117301940918
    3. 'one' → logprob: -10.750117301940918
    4. 'on' → logprob: -11.375117301940918
    5. ')' → logprob: -12.125117301940918
    6. '[' → logprob: -12.750117301940918
    7. '{' → logprob: -13.500117301940918
    8. 'r' → logprob: -13.625117301940918
    9. 'stones' → logprob: -13.750117301940918
    10. 'ons' → logprob: -13.875117301940918

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -14.625000953674316
    3. '()[' → logprob: -17.5
    4. '```' → logprob: -18.125
    5. '.pop' → logprob: -18.375
    6. '[
' → logprob: -19.0
    7. '   ' → logprob: -19.5
    8. '0' → logprob: -19.5
    9. ' [' → logprob: -20.25
    10. '\[' → logprob: -20.375

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '۰' → logprob: -17.437503814697266
    5. '-' → logprob: -17.750003814697266
    6. '[' → logprob: -18.000003814697266
    7. '```' → logprob: -18.562503814697266
    8. ')' → logprob: -18.687503814697266
    9. '00' → logprob: -18.750003814697266
    10. '０' → logprob: -18.937503814697266

Token 119: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -16.25
    5. ')
' → logprob: -17.0
    6. '`)' → logprob: -17.375
    7. '})' → logprob: -18.0
    8. ')}' → logprob: -18.0
    9. '])' → logprob: -18.125
    10. '')' → logprob: -18.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 117
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 43.59%
Précision adaptée (1ère position): 45.30%
Précision (top 10): 76.92%
================================================================================
