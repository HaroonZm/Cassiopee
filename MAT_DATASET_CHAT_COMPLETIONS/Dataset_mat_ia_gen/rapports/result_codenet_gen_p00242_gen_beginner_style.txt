================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = input()
    if n == '0':
        break
    n = int(n)
    words = []
    for _ in range(n):
        line = input().strip()
        words += line.split()
    k = input().strip()
    freq = {}
    for w in words:
        if w.startswith(k):
            freq[w] = freq.get(w, 0) + 1
    if not freq:
        print("NA")
        continue
    # Sort by frequency descending, then lex order ascending
    sorted_words = sorted(freq.items(), key=lambda x: (-x[1], x[0]))
    result = [w for w, _ in sorted_words[:5]]
    print(" ".join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24820508062839508
    2. '    ' → logprob: -1.8732050657272339
    3. '```' → logprob: -3.9982051849365234
    4. ' ' → logprob: -4.123205184936523
    5. '       ' → logprob: -4.123205184936523
    6. '    
' → logprob: -5.998205184936523
    7. '  ' → logprob: -6.373205184936523
    8. '\' → logprob: -6.498205184936523
    9. '\t' → logprob: -6.748205184936523
    10. '\n' → logprob: -6.748205184936523

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' i' → logprob: -12.217714309692383
    10. ' eval' → logprob: -12.217714309692383

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011896300129592419
    2. '('' → logprob: -7.251189708709717
    3. ''' → logprob: -8.251189231872559
    4. '("("' → logprob: -9.126189231872559
    5. '(
' → logprob: -10.626189231872559
    6. '"' → logprob: -10.751189231872559
    7. '()' → logprob: -11.251189231872559
    8. '```' → logprob: -11.251189231872559
    9. '`' → logprob: -11.626189231872559
    10. ' (' → logprob: -12.251189231872559

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5477476119995117
    2. ' ==' → logprob: -1.6727476119995117
    3. '.' → logprob: -1.9227476119995117
    4. ' if' → logprob: -2.2977476119995117
    5. '==' → logprob: -2.6727476119995117
    6. ')' → logprob: -3.0477476119995117
    7. '<|end|>' → logprob: -3.0477476119995117
    8. ':' → logprob: -3.2977476119995117
    9. '   ' → logprob: -3.4227476119995117
    10. '.strip' → logprob: -3.6727476119995117

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.122202754020691
    2. ' ==' → logprob: -1.247202754020691
    3. '.' → logprob: -2.1222028732299805
    4. ' ' → logprob: -2.3722028732299805
    5. '==' → logprob: -3.2472028732299805
    6. '.strip' → logprob: -3.4972028732299805
    7. 'if' (adapté à ' if') → logprob: -3.7472028732299805
    8. '   ' → logprob: -3.9972028732299805
    9. '\n' → logprob: -4.6222028732299805
    10. ')' → logprob: -4.7472028732299805

Token 10: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4405902624130249
    2. ' ' → logprob: -1.565590262413025
    3. ' n' → logprob: -1.940590262413025
    4. 'n' → logprob: -6.1905903816223145
    5. 'not' → logprob: -6.5655903816223145
    6. '  ' → logprob: -8.190589904785156
    7. ' ' → logprob: -12.065589904785156
    8. ' n't' → logprob: -12.065589904785156
    9. '<|end|>' → logprob: -13.315589904785156
    10. '	not' → logprob: -13.440589904785156

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.022259756922721863
    2. '==' → logprob: -4.022259712219238
    3. '.' → logprob: -6.272259712219238
    4. ' !=' → logprob: -7.397259712219238
    5. ' .' → logprob: -7.647259712219238
    6. ' ' → logprob: -8.272259712219238
    7. '.strip' → logprob: -8.272259712219238
    8. ' =' → logprob: -8.772259712219238
    9. '.is' → logprob: -9.022259712219238
    10. ' ===' → logprob: -9.772259712219238

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05038289353251457
    2. ''' → logprob: -3.0503828525543213
    3. '""' → logprob: -6.5503830909729
    4. '''' → logprob: -8.800382614135742
    5. ' ' → logprob: -8.925382614135742
    6. ' "' → logprob: -10.550382614135742
    7. '"\' → logprob: -10.675382614135742
    8. ' '' → logprob: -11.800382614135742
    9. ''\' → logprob: -13.175382614135742
    10. '   ' → logprob: -13.425382614135742

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09033937007188797
    2. '':' → logprob: -3.465339422225952
    3. '0' → logprob: -4.090339183807373
    4. '\n' → logprob: -4.590339183807373
    5. 'q' → logprob: -5.215339183807373
    6. ''\' → logprob: -5.215339183807373
    7. ''ex' → logprob: -5.340339183807373
    8. 'exit' → logprob: -5.340339183807373
    9. 'quit' → logprob: -5.840339183807373
    10. '"' → logprob: -5.965339183807373

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07276080548763275
    2. ''' → logprob: -3.197760820388794
    3. '\n' → logprob: -3.572760820388794
    4. ':' → logprob: -7.447760581970215
    5. '':
' → logprob: -7.822760581970215
    6. ' ':' → logprob: -9.447760581970215
    7. '':
' → logprob: -9.572760581970215
    8. '0' → logprob: -10.947760581970215
    9. '":' → logprob: -11.072760581970215
    10. '\r' → logprob: -11.072760581970215

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015047992579638958
    2. ' break' → logprob: -4.890048027038574
    3. '   ' → logprob: -5.015048027038574
    4. '\n' → logprob: -8.140048027038574
    5. '    ' → logprob: -9.015048027038574
    6. '	break' → logprob: -9.015048027038574
    7. ' ' → logprob: -9.515048027038574
    8. ':' → logprob: -10.390048027038574
    9. '     ' → logprob: -10.515048027038574
    10. '      ' → logprob: -10.515048027038574

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.18513841927051544
    2. '       ' → logprob: -1.810138463973999
    3. 'break' (adapté à ' break') → logprob: -5.43513822555542
    4. '   ' → logprob: -7.56013822555542
    5. '	break' → logprob: -7.93513822555542
    6. '\n' → logprob: -9.935138702392578
    7. '           ' → logprob: -10.560138702392578
    8. ' ' → logprob: -11.185138702392578
    9. '    ' → logprob: -11.560138702392578
    10. '_break' → logprob: -11.560138702392578

Token 17: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0845832824707031
    2. '   ' → logprob: -1.0845832824707031
    3. '\n' → logprob: -2.334583282470703
    4. '<|end|>' → logprob: -2.709583282470703
    5. ' ' → logprob: -2.959583282470703
    6. '
' → logprob: -3.459583282470703
    7. '    
' → logprob: -4.209583282470703
    8. 'n' → logprob: -4.334583282470703
    9. ')' → logprob: -4.334583282470703
    10. '  ' → logprob: -5.334583282470703

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038735318928956985
    2. '    
' → logprob: -4.163735389709473
    3. '
' → logprob: -5.038735389709473
    4. '<|end|>' → logprob: -5.413735389709473
    5. 'n' → logprob: -6.038735389709473
    6. '  
' → logprob: -6.538735389709473
    7. '\n' → logprob: -6.663735389709473
    8. ' ' → logprob: -6.913735389709473
    9. '  ' → logprob: -6.913735389709473
    10. '```' → logprob: -7.163735389709473

Token 19: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7141585350036621
    2. '\n' → logprob: -1.339158535003662
    3. '   ' → logprob: -2.339158535003662
    4. '\' → logprob: -2.714158535003662
    5. ' ' → logprob: -3.339158535003662
    6. '    ' → logprob: -4.714158535003662
    7. '\r' → logprob: -5.214158535003662
    8. '.' → logprob: -5.339158535003662
    9. ',' → logprob: -5.589158535003662
    10. '(' → logprob: -5.714158535003662

Token 20: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07300595939159393
    2. 'int' → logprob: -2.9480059146881104
    3. ' n' → logprob: -4.1980061531066895
    4. ' list' → logprob: -6.6980061531066895
    5. 'n' → logprob: -6.8230061531066895
    6. ' ' → logprob: -8.448005676269531
    7. 'list' → logprob: -9.448005676269531
    8. '"' → logprob: -10.073005676269531
    9. '   ' → logprob: -10.198005676269531
    10. ' input' → logprob: -10.448005676269531

Token 22: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5761975049972534
    2. '(' → logprob: -0.8261975049972534
    3. '()' → logprob: -8.451197624206543
    4. ' (' → logprob: -11.451197624206543
    5. '('' → logprob: -11.451197624206543
    6. '(input' → logprob: -12.076197624206543
    7. '   ' → logprob: -13.326197624206543
    8. ')' → logprob: -13.326197624206543
    9. '(`' → logprob: -13.451197624206543
    10. '(
' → logprob: -13.451197624206543

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.135819760151207e-05
    2. ' )' → logprob: -10.37507152557373
    3. '+' → logprob: -10.75007152557373
    4. ')
' → logprob: -12.12507152557373
    5. '   ' → logprob: -12.62507152557373
    6. '))' → logprob: -13.25007152557373
    7. '**' → logprob: -13.25007152557373
    8. '*' → logprob: -13.25007152557373
    9. '`)' → logprob: -14.12507152557373
    10. ' ' → logprob: -14.12507152557373

Token 24: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' words' (ID: 6391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7090177536010742
    2. ' ' → logprob: -0.9590177536010742
    3. ' if' → logprob: -3.459017753601074
    4. 's' → logprob: -3.834017753601074
    5. 'n' → logprob: -4.084017753601074
    6. '    ' → logprob: -4.209017753601074
    7. 'if' → logprob: -4.959017753601074
    8. ' 
' → logprob: -5.334017753601074
    9. 'result' → logprob: -5.334017753601074
    10. ' result' → logprob: -5.709017753601074

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23698961734771729
    2. '=' → logprob: -2.4869894981384277
    3. '_count' → logprob: -2.9869894981384277
    4. '.' → logprob: -3.9869894981384277
    5. '_' → logprob: -3.9869894981384277
    6. '[' → logprob: -4.111989498138428
    7. 's' → logprob: -5.861989498138428
    8. '.append' → logprob: -6.111989498138428
    9. ')' → logprob: -6.236989498138428
    10. '_counts' → logprob: -6.361989498138428

Token 27: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6268927454948425
    2. ' []' → logprob: -1.0018928050994873
    3. ' [' → logprob: -3.3768928050994873
    4. '[' → logprob: -4.251892566680908
    5. 'list' → logprob: -4.876892566680908
    6. '['' → logprob: -5.001892566680908
    7. ' list' → logprob: -5.001892566680908
    8. '[n' → logprob: -5.126892566680908
    9. '[input' → logprob: -5.126892566680908
    10. ' ['' → logprob: -5.251892566680908

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3934079110622406
    2. ' ' → logprob: -2.0184078216552734
    3. ' for' → logprob: -2.3934078216552734
    4. 'for' → logprob: -3.1434078216552734
    5. '<|end|>' → logprob: -3.5184078216552734
    6. '    ' → logprob: -5.268407821655273
    7. ' 
' → logprob: -5.393407821655273
    8. ' while' → logprob: -5.643407821655273
    9. '    
' → logprob: -6.143407821655273
    10. '[' → logprob: -6.268407821655273

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1555551141500473
    2. ' for' → logprob: -2.280555009841919
    3. '   ' → logprob: -3.280555009841919
    4. ' ' → logprob: -7.405555248260498
    5. 'if' → logprob: -7.405555248260498
    6. 'while' → logprob: -7.655555248260498
    7. 'words' → logprob: -7.655555248260498
    8. 'word' → logprob: -7.780555248260498
    9. 'i' → logprob: -7.905555248260498
    10. 'w' → logprob: -8.65555477142334

Token 30: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0030596256256104
    2. ' _' → logprob: -1.2530596256256104
    3. '_' → logprob: -1.7530596256256104
    4. ' i' → logprob: -1.7530596256256104
    5. 'i' → logprob: -6.878059387207031
    6. '  ' → logprob: -10.378059387207031
    7. ' range' → logprob: -11.003059387207031
    8. ' ‌' → logprob: -11.128059387207031
    9. ' ' → logprob: -11.503059387207031
    10. ' in' → logprob: -11.878059387207031

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0014105896698310971
    2. 'in' → logprob: -6.626410484313965
    3. ' ' → logprob: -9.501410484313965
    4. '<|end|>' → logprob: -12.251410484313965
    5. '	in' → logprob: -12.876410484313965
    6. 'range' → logprob: -14.126410484313965
    7. '_' → logprob: -14.376410484313965
    8. ' range' → logprob: -15.626410484313965
    9. ' _' → logprob: -15.876410484313965
    10. ' i' → logprob: -16.00141143798828

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408777475357056
    2. 'range' → logprob: -0.9740877747535706
    3. '	range' → logprob: -11.849087715148926
    4. '(range' → logprob: -14.224087715148926
    5. 'rang' → logprob: -14.349087715148926
    6. ' ' → logprob: -14.349087715148926
    7. 'ran' → logprob: -14.599087715148926
    8. '_range' → logprob: -14.724087715148926
    9. '_' → logprob: -15.099087715148926
    10. ' xrange' → logprob: -15.474087715148926

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1177937313914299
    2. ' n' → logprob: -2.4927937984466553
    3. '(' → logprob: -3.9927937984466553
    4. 'n' → logprob: -5.242793560028076
    5. ' (' → logprob: -5.367793560028076
    6. '	n' → logprob: -10.867794036865234
    7. ' ' → logprob: -11.117794036865234
    8. ',' → logprob: -13.367794036865234
    9. ',n' → logprob: -13.367794036865234
    10. '_n' → logprob: -13.492794036865234

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006472236942499876
    2. ')' → logprob: -5.381472110748291
    3. ' ):' → logprob: -6.631472110748291
    4. '):
' → logprob: -7.756472110748291
    5. '   ' → logprob: -10.88147258758545
    6. ' )' → logprob: -10.88147258758545
    7. ':' → logprob: -11.00647258758545
    8. ',' → logprob: -11.00647258758545
    9. '+' → logprob: -11.25647258758545
    10. '):
' → logprob: -13.00647258758545

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40018460154533386
    2. ' ' → logprob: -1.9001846313476562
    3. '    ' → logprob: -2.0251846313476562
    4. '   ' → logprob: -3.2751846313476562
    5. '<|end|>' → logprob: -5.525184631347656
    6. ' s' → logprob: -6.275184631347656
    7. '        ' → logprob: -7.025184631347656
    8. ' words' → logprob: -7.650184631347656
    9. ' input' → logprob: -7.775184631347656
    10. ' word' → logprob: -7.775184631347656

Token 36: ' line' (ID: 2543)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.8663706183433533
    2. ' words' → logprob: -0.8663706183433533
    3. ' line' → logprob: -2.991370677947998
    4. ' ' → logprob: -3.241370677947998
    5. ' s' → logprob: -3.866370677947998
    6. '   ' → logprob: -4.491370677947998
    7. ' w' → logprob: -4.616370677947998
    8. '    ' → logprob: -4.866370677947998
    9. ' input' → logprob: -4.991370677947998
    10. 'word' → logprob: -5.366370677947998

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006730407476425171
    2. '=' → logprob: -5.006730556488037
    3. ',' → logprob: -12.506730079650879
    4. ' ' → logprob: -12.881730079650879
    5. '   ' → logprob: -13.131730079650879
    6. 's' → logprob: -13.131730079650879
    7. '=input' → logprob: -13.506730079650879
    8. '_' → logprob: -13.881730079650879
    9. ')' → logprob: -14.381730079650879
    10. '=line' → logprob: -14.631730079650879

Token 38: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.004624272231012583
    2. 'input' → logprob: -5.379624366760254
    3. ' ' → logprob: -13.504624366760254
    4. '	input' → logprob: -14.254624366760254
    5. '   ' → logprob: -14.379624366760254
    6. '=input' → logprob: -14.379624366760254
    7. ' ' → logprob: -15.504624366760254
    8. ' int' → logprob: -15.879624366760254
    9. '(input' → logprob: -16.192123413085938
    10. ' list' → logprob: -16.317123413085938

Token 39: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020973898062948138
    2. '().' → logprob: -8.62520980834961
    3. '(' → logprob: -11.50020980834961
    4. '()
' → logprob: -12.12520980834961
    5. '())' → logprob: -12.25020980834961
    6. ')' → logprob: -12.75020980834961
    7. '()`' → logprob: -13.37520980834961
    8. '()

' → logprob: -14.25020980834961
    9. ' ()' → logprob: -14.37520980834961
    10. '`()' → logprob: -14.50020980834961

Token 40: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4829326868057251
    2. 'split' → logprob: -0.9829326868057251
    3. 'rstrip' → logprob: -4.7329325675964355
    4. 'lower' → logprob: -11.732933044433594
    5. 'replace' → logprob: -12.982933044433594
    6. 'rs' → logprob: -13.357933044433594
    7. ' split' → logprob: -13.357933044433594
    8. 'startswith' → logprob: -13.857933044433594
    9. ' strip' → logprob: -14.357933044433594
    10. 'append' → logprob: -15.232933044433594

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010958074126392603
    2. '('' → logprob: -7.376095771789551
    3. '().' → logprob: -8.12609577178955
    4. '(' → logprob: -9.12609577178955
    5. ')' → logprob: -10.75109577178955
    6. '())' → logprob: -11.12609577178955
    7. ' ()' → logprob: -12.37609577178955
    8. '()
' → logprob: -12.75109577178955
    9. '()`' → logprob: -13.12609577178955
    10. '("' → logprob: -13.25109577178955

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6762083768844604
    2. '   ' → logprob: -0.9262083768844604
    3. '<|end|>' → logprob: -3.05120849609375
    4. 'words' → logprob: -4.05120849609375
    5. ')' → logprob: -4.30120849609375
    6. ' words' → logprob: -4.55120849609375
    7. '_words' → logprob: -6.42620849609375
    8. '.words' → logprob: -6.92620849609375
    9. '<|end|>' → logprob: -7.05120849609375
    10. '.split' → logprob: -7.42620849609375

Token 43: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.02806856669485569
    2. ' words' → logprob: -3.7780685424804688
    3. '   ' → logprob: -6.403068542480469
    4. 'if' → logprob: -6.403068542480469
    5. 'word' → logprob: -7.528068542480469
    6. ' if' → logprob: -7.903068542480469
    7. '    ' → logprob: -9.590568542480469
    8. 'parts' → logprob: -10.028068542480469
    9. '       ' → logprob: -10.090568542480469
    10. 'w' → logprob: -10.090568542480469

Token 44: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023488061502575874
    2. '.' → logprob: -3.7734880447387695
    3. '.extend' → logprob: -8.39848804473877
    4. ' .' → logprob: -12.02348804473877
    5. '.add' → logprob: -12.39848804473877
    6. '.ap' → logprob: -13.02348804473877
    7. '.push' → logprob: -13.89848804473877
    8. '.app' → logprob: -14.02348804473877
    9. '.setdefault' → logprob: -14.02348804473877
    10. '.split' → logprob: -14.39848804473877

Token 45: ' line' (ID: 2543)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.32808515429496765
    2. ' [' → logprob: -2.07808518409729
    3. ' line' → logprob: -2.57808518409729
    4. '[' → logprob: -3.07808518409729
    5. 'line' → logprob: -3.45308518409729
    6. '(line' → logprob: -7.828084945678711
    7. '['' → logprob: -8.828084945678711
    8. ' ' → logprob: -9.703084945678711
    9. ' ['' → logprob: -9.703084945678711
    10. '[word' → logprob: -9.953084945678711

Token 46: '.split' (ID: 10347)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13547873497009277
    2. '(' → logprob: -2.7604787349700928
    3. '('' → logprob: -2.7604787349700928
    4. '()
' → logprob: -9.510478973388672
    5. '('.')' → logprob: -10.635478973388672
    6. '(',' → logprob: -11.010478973388672
    7. '("("' → logprob: -11.385478973388672
    8. '()[' → logprob: -11.635478973388672
    9. '("' → logprob: -12.010478973388672
    10. '(
' → logprob: -12.010478973388672

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15092957019805908
    2. '[' → logprob: -3.1509294509887695
    3. '<|end|>' → logprob: -3.2759294509887695
    4. '.' → logprob: -4.0259294509887695
    5. ' ' → logprob: -4.4009294509887695
    6. '    
' → logprob: -4.9009294509887695
    7. '    ' → logprob: -6.0259294509887695
    8. '\n' → logprob: -6.1509294509887695
    9. '
' → logprob: -6.4009294509887695
    10. '       ' → logprob: -6.4009294509887695

Token 49: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07184527814388275
    2. '[' → logprob: -4.321845054626465
    3. '<|end|>' → logprob: -4.321845054626465
    4. 'words' → logprob: -4.571845054626465
    5. '    
' → logprob: -4.821845054626465
    6. ' ' → logprob: -5.821845054626465
    7. 'for' → logprob: -6.196845054626465
    8. '\n' → logprob: -6.321845054626465
    9. ' words' → logprob: -6.321845054626465
    10. ')' → logprob: -6.446845054626465

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02766813337802887
    2. '=' → logprob: -3.6526682376861572
    3. '_' → logprob: -7.652667999267578
    4. ' ' → logprob: -7.777667999267578
    5. 'ey' → logprob: -8.402667999267578
    6. 'e' → logprob: -9.777667999267578
    7. 'eys' → logprob: -10.027667999267578
    8. ',' → logprob: -10.902667999267578
    9. '   ' → logprob: -11.027667999267578
    10. '=int' → logprob: -11.027667999267578

Token 51: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3446679711341858
    2. ' len' → logprob: -1.969667911529541
    3. 'int' → logprob: -2.594667911529541
    4. 'len' → logprob: -3.344667911529541
    5. ' n' → logprob: -3.469667911529541
    6. ' ' → logprob: -5.219667911529541
    7. ' max' → logprob: -6.719667911529541
    8. '0' → logprob: -7.219667911529541
    9. 'n' → logprob: -7.219667911529541
    10. ' min' → logprob: -7.344667911529541

Token 52: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0106986528262496
    2. '().' → logprob: -5.1356987953186035
    3. '(' → logprob: -5.3856987953186035
    4. '('' → logprob: -9.135698318481445
    5. ' ()' → logprob: -10.260698318481445
    6. '())' → logprob: -12.510698318481445
    7. '()>' → logprob: -12.635698318481445
    8. '()`' → logprob: -12.760698318481445
    9. '   ' → logprob: -13.135698318481445
    10. '("("' → logprob: -13.260698318481445

Token 53: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02979503758251667
    2. 'split' → logprob: -3.529794931411743
    3. 'rstrip' → logprob: -10.779794692993164
    4. 'isdigit' → logprob: -10.779794692993164
    5. 'replace' → logprob: -14.279794692993164
    6. ' strip' → logprob: -14.404794692993164
    7. 'str' → logprob: -15.279794692993164
    8. 'z' → logprob: -15.279794692993164
    9. 'lower' → logprob: -15.279794692993164
    10. 'r' → logprob: -15.654794692993164

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029856475070118904
    2. '(' → logprob: -3.5298564434051514
    3. '(k' → logprob: -10.52985668182373
    4. '('' → logprob: -10.90485668182373
    5. ' ()' → logprob: -11.27985668182373
    6. '()`' → logprob: -11.40485668182373
    7. '()
' → logprob: -12.15485668182373
    8. '`()' → logprob: -12.77985668182373
    9. '(),' → logprob: -12.90485668182373
    10. '(
' → logprob: -12.90485668182373

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7793238162994385
    2. '<|end|>' → logprob: -1.7793238162994385
    3. '
' → logprob: -2.1543238162994385
    4. ' ' → logprob: -2.2793238162994385
    5. '[' → logprob: -2.4043238162994385
    6. ' if' → logprob: -3.1543238162994385
    7. 'for' → logprob: -3.1543238162994385
    8. 'if' → logprob: -3.2793238162994385
    9. '\n' → logprob: -3.6543238162994385
    10. '.' → logprob: -3.6543238162994385

Token 56: ' freq' (ID: 42078)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3752429485321045
    2. 'if' → logprob: -2.6252429485321045
    3. 'for' → logprob: -2.7502429485321045
    4. 'm' → logprob: -2.8752429485321045
    5. 'c' → logprob: -3.0002429485321045
    6. 'result' → logprob: -3.1252429485321045
    7. 'i' → logprob: -3.1252429485321045
    8. 'words' → logprob: -3.2502429485321045
    9. 'w' → logprob: -3.3752429485321045
    10. 'l' → logprob: -3.5002429485321045

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6268168091773987
    2. 's' → logprob: -1.626816749572754
    3. '=' → logprob: -1.751816749572754
    4. 'u' → logprob: -2.626816749572754
    5. '[' → logprob: -4.626816749572754
    6. '_' → logprob: -4.751816749572754
    7. '[u' → logprob: -6.626816749572754
    8. 'ency' → logprob: -7.126816749572754
    9. ' ' → logprob: -7.876816749572754
    10. '[k' → logprob: -8.126816749572754

Token 58: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0005077573587186635
    2. ' {}' → logprob: -7.875507831573486
    3. '{' → logprob: -9.250507354736328
    4. 'words' → logprob: -11.000507354736328
    5. 'dict' → logprob: -11.875507354736328
    6. '{}
' → logprob: -13.250507354736328
    7. '{}

' → logprob: -14.000507354736328
    8. ' words' → logprob: -14.000507354736328
    9. 'collections' → logprob: -14.250507354736328
    10. '0' → logprob: -14.375507354736328

Token 59: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0121243791654706
    2. ' for' → logprob: -4.512124538421631
    3. '   ' → logprob: -7.262124538421631
    4. '<|end|>' → logprob: -8.012124061584473
    5. ' ' → logprob: -11.512124061584473
    6. '<|end|>' → logprob: -11.887124061584473
    7. '
' → logprob: -12.137124061584473
    8. '  ' → logprob: -12.637124061584473
    9. '.' → logprob: -12.762124061584473
    10. ')' → logprob: -13.512124061584473

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000205566844670102
    2. ' for' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.500205993652344
    4. '```' → logprob: -16.000205993652344
    5. ' ' → logprob: -16.375205993652344
    6. '<|end|>' → logprob: -16.625205993652344
    7. 'words' → logprob: -16.875205993652344
    8. '	for' → logprob: -17.125205993652344
    9. 'word' → logprob: -17.500205993652344
    10. 'count' → logprob: -17.625205993652344

Token 61: ' w' (ID: 286)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.22052977979183197
    2. ' w' → logprob: -1.7205297946929932
    3. 'word' → logprob: -4.345529556274414
    4. 'w' → logprob: -5.220529556274414
    5. ' ' → logprob: -7.595529556274414
    6. '	word' → logprob: -10.720529556274414
    7. ' _' → logprob: -11.845529556274414
    8. '   ' → logprob: -12.845529556274414
    9. ' wor' → logprob: -13.033029556274414
    10. '    ' → logprob: -13.095529556274414

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006012460216879845
    2. 'in' → logprob: -5.131012439727783
    3. ' ' → logprob: -9.631012916564941
    4. '<|end|>' → logprob: -12.381012916564941
    5. '	in' → logprob: -13.256012916564941
    6. 's' → logprob: -13.381012916564941
    7. '   ' → logprob: -13.506012916564941
    8. '  ' → logprob: -13.506012916564941
    9. ',' → logprob: -13.881012916564941
    10. '<|end|>' → logprob: -14.006012916564941

Token 63: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.12698207795619965
    2. 'words' → logprob: -2.1269819736480713
    3. ' ' → logprob: -11.251981735229492
    4. '    ' → logprob: -11.251981735229492
    5. '(words' → logprob: -11.251981735229492
    6. '   ' → logprob: -11.751981735229492
    7. '.words' → logprob: -13.751981735229492
    8. 'w' → logprob: -13.876981735229492
    9. '  ' → logprob: -14.001981735229492
    10. '_words' → logprob: -14.126981735229492

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000442351185483858
    2. ' :' → logprob: -8.375442504882812
    3. ':
' → logprob: -8.875442504882812
    4. '):' → logprob: -9.750442504882812
    5. ']:' → logprob: -12.500442504882812
    6. '):
' → logprob: -13.750442504882812
    7. '   ' → logprob: -13.875442504882812
    8. '[' → logprob: -14.000442504882812
    9. ':**' → logprob: -14.000442504882812
    10. ',' → logprob: -14.250442504882812

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022559337317943573
    2. '    ' → logprob: -4.27255916595459
    3. '   ' → logprob: -6.14755916595459
    4. ':' → logprob: -6.52255916595459
    5. '<|end|>' → logprob: -6.52255916595459
    6. ' ' → logprob: -6.77255916595459
    7. ' if' → logprob: -7.27255916595459
    8. '        ' → logprob: -7.64755916595459
    9. ' freq' → logprob: -7.77255916595459
    10. 'if' → logprob: -9.02255916595459

Token 66: ' if' (ID: 538)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.5068286061286926
    2. '   ' → logprob: -1.8818285465240479
    3. 'freq' → logprob: -2.131828546524048
    4. '       ' → logprob: -2.881828546524048
    5. ' if' → logprob: -2.881828546524048
    6. 'if' (adapté à ' if') → logprob: -4.256828784942627
    7. ' frequency' → logprob: -8.631828308105469
    8. '_freq' → logprob: -9.256828308105469
    9. '    ' → logprob: -9.381828308105469
    10. '```' → logprob: -10.881828308105469

Token 67: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0025222692638635635
    2. 'w' → logprob: -6.1275224685668945
    3. ' ' → logprob: -8.002522468566895
    4. ' ' → logprob: -13.377522468566895
    5. '	w' → logprob: -15.502522468566895
    6. '  ' → logprob: -15.502522468566895
    7. ' not' → logprob: -16.252521514892578
    8. ' k' → logprob: -16.752521514892578
    9. '    ' → logprob: -16.877521514892578
    10. ' ‌' → logprob: -17.565021514892578

Token 68: '.startswith' (ID: 64340)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08562108874320984
    2. ' not' → logprob: -2.9606211185455322
    3. ' ==' → logprob: -3.7106211185455322
    4. '==' → logprob: -5.460620880126953
    5. 'in' → logprob: -6.835620880126953
    6. ' ' → logprob: -8.085620880126953
    7. 'not' → logprob: -8.835620880126953
    8. ')' → logprob: -12.585620880126953
    9. '   ' → logprob: -12.710620880126953
    10. '  ' → logprob: -13.085620880126953

Token 69: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.8590300139039755e-05
    2. '(' → logprob: -10.375048637390137
    3. ' (' → logprob: -11.250048637390137
    4. 'k' → logprob: -13.000048637390137
    5. ' k' → logprob: -13.250048637390137
    6. '('' → logprob: -16.50004768371582
    7. '((' → logprob: -16.87504768371582
    8. '("("' → logprob: -17.00004768371582
    9. '(key' → logprob: -17.87504768371582
    10. '   ' → logprob: -18.00004768371582

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09233099967241287
    2. '):
' → logprob: -2.4673309326171875
    3. ')' → logprob: -5.9673309326171875
    4. ' ):' → logprob: -8.342330932617188
    5. '       ' → logprob: -8.467330932617188
    6. '   ' → logprob: -9.092330932617188
    7. '):
' → logprob: -9.467330932617188
    8. ''):' → logprob: -9.592330932617188
    9. ' ):
' → logprob: -10.592330932617188
    10. '           ' → logprob: -10.717330932617188

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009863397106528282
    2. '       ' → logprob: -5.259863376617432
    3. 'freq' → logprob: -6.134863376617432
    4. ':' → logprob: -6.759863376617432
    5. ' freq' → logprob: -6.884863376617432
    6. '               ' → logprob: -9.50986385345459
    7. ':
' → logprob: -9.75986385345459
    8. '          ' → logprob: -10.00986385345459
    9. ' :' → logprob: -11.38486385345459
    10. '	       ' → logprob: -11.38486385345459

Token 72: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.13151758909225464
    2. ' freq' → logprob: -2.6315176486968994
    3. '       ' → logprob: -3.2565176486968994
    4. '           ' → logprob: -4.50651741027832
    5. '   ' → logprob: -7.25651741027832
    6. '               ' → logprob: -7.63151741027832
    7. 'if' → logprob: -8.00651741027832
    8. ' if' → logprob: -9.25651741027832
    9. 'frequency' → logprob: -10.88151741027832
    10. '_freq' → logprob: -11.50651741027832

Token 73: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -4.596781946020201e-05
    2. '[' → logprob: -10.375045776367188
    3. '.setdefault' → logprob: -11.375045776367188
    4. 'w' → logprob: -13.625045776367188
    5. '.get' → logprob: -14.125045776367188
    6. ' [' → logprob: -14.750045776367188
    7. '=w' → logprob: -15.625045776367188
    8. ']' → logprob: -16.250045776367188
    9. '```' → logprob: -16.375045776367188
    10. '[word' → logprob: -16.375045776367188

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015030752401798964
    2. ']=' → logprob: -7.251502990722656
    3. ']+=' → logprob: -7.501502990722656
    4. ' ]' → logprob: -8.501502990722656
    5. '']' → logprob: -11.001502990722656
    6. '"]' → logprob: -11.626502990722656
    7. '`]' → logprob: -11.876502990722656
    8. '=' → logprob: -14.251502990722656
    9. ')]' → logprob: -14.376502990722656
    10. ')' → logprob: -14.376502990722656

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889562100172043
    2. ' =' → logprob: -2.5788955688476562
    3. '+=' → logprob: -12.203895568847656
    4. ' +=' → logprob: -14.578895568847656
    5. ' ' → logprob: -15.953895568847656
    6. '＝' → logprob: -16.328895568847656
    7. '=

' → logprob: -16.703895568847656
    8. '=
' → logprob: -16.828895568847656
    9. '=}' → logprob: -18.203895568847656
    10. ']=' → logprob: -18.578895568847656

Token 76: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.6329149007797241
    2. 'freq' → logprob: -0.7579149007797241
    3. '1' → logprob: -8.632914543151855
    4. '(freq' → logprob: -10.382914543151855
    5. ' ' → logprob: -10.507914543151855
    6. '0' → logprob: -10.507914543151855
    7. '   ' → logprob: -11.757914543151855
    8. ' frequency' → logprob: -11.757914543151855
    9. 'fre' → logprob: -12.070414543151855
    10. 'frequency' → logprob: -12.195414543151855

Token 77: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005583931924775243
    2. 'get' → logprob: -7.625558376312256
    3. '.' → logprob: -10.250558853149414
    4. ' .' → logprob: -10.750558853149414
    5. 'w' → logprob: -12.625558853149414
    6. '.setdefault' → logprob: -13.000558853149414
    7. '].' → logprob: -13.875558853149414
    8. ' ' → logprob: -14.000558853149414
    9. '0' → logprob: -14.000558853149414
    10. ').' → logprob: -14.125558853149414

Token 78: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00033713103039190173
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -14.125337600708008
    4. '(u' → logprob: -15.375337600708008
    5. ' ' → logprob: -15.625337600708008
    6. '(k' → logprob: -16.375337600708008
    7. '(
' → logprob: -16.750337600708008
    8. '```' → logprob: -16.875337600708008
    9. '(x' → logprob: -17.125337600708008
    10. '(s' → logprob: -17.125337600708008

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04630845785140991
    2. ',w' → logprob: -3.1713085174560547
    3. '(w' → logprob: -5.921308517456055
    4. 'w' → logprob: -7.796308517456055
    5. ' ,' → logprob: -8.671308517456055
    6. '[w' → logprob: -10.546308517456055
    7. '```' → logprob: -12.921308517456055
    8. ')' → logprob: -13.046308517456055
    9. '<w' → logprob: -13.296308517456055
    10. '`,' → logprob: -13.921308517456055

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004890497075393796
    2. ' ' → logprob: -7.625489234924316
    3. ')' → logprob: -15.000489234924316
    4. '1' → logprob: -15.375489234924316
    5. '   ' → logprob: -15.500489234924316
    6. '    ' → logprob: -16.00048828125
    7. '+' → logprob: -16.75048828125
    8. '  ' → logprob: -16.87548828125
    9. '۰' → logprob: -17.18798828125
    10. '<|end|>' → logprob: -17.37548828125

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -15.250431060791016
    4. ')' → logprob: -15.750431060791016
    5. '   ' → logprob: -16.750431060791016
    6. '۰' → logprob: -17.500431060791016
    7. '```' → logprob: -17.562931060791016
    8. '+' → logprob: -17.812931060791016
    9. '    ' → logprob: -17.875431060791016
    10. '-' → logprob: -18.062931060791016

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011574854142963886
    2. ')+' → logprob: -6.876157283782959
    3. '+' → logprob: -9.126157760620117
    4. ' )' → logprob: -11.251157760620117
    5. ' +' → logprob: -14.126157760620117
    6. '+)' → logprob: -14.251157760620117
    7. '1' → logprob: -14.626157760620117
    8. ']' → logprob: -15.251157760620117
    9. '0' → logprob: -15.751157760620117
    10. ']+' → logprob: -15.751157760620117

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196914613246918
    2. ' +' → logprob: -2.811969041824341
    3. ' plus' → logprob: -14.186968803405762
    4. '1' → logprob: -15.436968803405762
    5. '()+' → logprob: -15.561968803405762
    6. '+=' → logprob: -15.936968803405762
    7. ')+' → logprob: -16.436969757080078
    8. ' ' → logprob: -16.561969757080078
    9. '＋' → logprob: -16.936969757080078
    10. ']+' → logprob: -17.311969757080078

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. '```' → logprob: -19.250709533691406
    5. '<|end|>' → logprob: -19.375709533691406
    6. ' ' → logprob: -20.000709533691406
    7. '  ' → logprob: -20.500709533691406
    8. '0' → logprob: -21.000709533691406
    9. '    ' → logprob: -22.000709533691406
    10. '۱' → logprob: -22.250709533691406

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.375
    4. '<|end|>' → logprob: -19.875
    5. '   ' → logprob: -20.25
    6. '１' → logprob: -22.25
    7. '۱' → logprob: -22.5
    8. '`' → logprob: -22.75
    9. '  ' → logprob: -23.125
    10. '१' → logprob: -23.375

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3374760150909424
    2. '<|end|>' → logprob: -1.3374760150909424
    3. '   ' → logprob: -4.837475776672363
    4. ')' → logprob: -6.212475776672363
    5. '    
' → logprob: -6.212475776672363
    6. 'for' → logprob: -6.462475776672363
    7. '#' → logprob: -6.462475776672363
    8. 'print' → logprob: -6.587475776672363
    9. '  
' → logprob: -6.712475776672363
    10. ' ' → logprob: -6.837475776672363

Token 87: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' if' (ID: 538)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.17552651464939117
    2. 'max' → logprob: -2.9255266189575195
    3. ')' → logprob: -4.4255266189575195
    4. 'for' → logprob: -4.5505266189575195
    5. '<|end|>' → logprob: -4.6755266189575195
    6. ' sorted' → logprob: -4.9255266189575195
    7. 'words' → logprob: -4.9255266189575195
    8. '   ' → logprob: -4.9255266189575195
    9. 'if' (adapté à ' if') → logprob: -5.0505266189575195
    10. '.' → logprob: -5.1755266189575195

Token 89: ' not' (ID: 625)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.1277707815170288
    2. ' len' → logprob: -2.5027709007263184
    3. 'freq' → logprob: -3.8777709007263184
    4. ' not' → logprob: -4.127770900726318
    5. 'len' → logprob: -7.002770900726318
    6. ' max' → logprob: -8.62777042388916
    7. ' ' → logprob: -9.75277042388916
    8. ' sorted' → logprob: -10.25277042388916
    9. 'not' → logprob: -10.50277042388916
    10. '(freq' → logprob: -10.62777042388916

Token 90: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.0021869030315428972
    2. 'freq' → logprob: -6.1271867752075195
    3. '(freq' → logprob: -13.37718677520752
    4. ' ' → logprob: -16.252187728881836
    5. ' fre' → logprob: -16.377187728881836
    6. ' ' → logprob: -17.127187728881836
    7. ' frequency' → logprob: -17.252187728881836
    8. ' frequ' → logprob: -19.127187728881836
    9. '.freq' → logprob: -19.127187728881836
    10. ' len' → logprob: -19.252187728881836

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.802049756515771e-05
    2. '.' → logprob: -10.625067710876465
    3. ':
' → logprob: -11.000067710876465
    4. '.keys' → logprob: -11.500067710876465
    5. ' :' → logprob: -11.625067710876465
    6. ':return' → logprob: -12.500067710876465
    7. '   ' → logprob: -13.250067710876465
    8. '.values' → logprob: -14.375067710876465
    9. '.setdefault' → logprob: -14.625067710876465
    10. '       ' → logprob: -15.250067710876465

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006312804762274027
    2. ':' → logprob: -5.506312847137451
    3. '   ' → logprob: -6.256312847137451
    4. ' continue' → logprob: -8.631312370300293
    5. '    ' → logprob: -10.631312370300293
    6. ':
' → logprob: -10.881312370300293
    7. 'continue' → logprob: -11.006312370300293
    8. '     ' → logprob: -11.256312370300293
    9. ' print' → logprob: -11.256312370300293
    10. ' continues' → logprob: -11.631312370300293

Token 93: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5305770635604858
    2. 'print' (adapté à ' print') → logprob: -1.5305770635604858
    3. '   ' → logprob: -1.6555770635604858
    4. ' continue' → logprob: -6.280577182769775
    5. '    ' → logprob: -6.530577182769775
    6. 'continue' → logprob: -7.905577182769775
    7. '       ' → logprob: -8.280576705932617
    8. '    
' → logprob: -9.030576705932617
    9. ' ' → logprob: -10.155576705932617
    10. '```' → logprob: -10.280576705932617

Token 94: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5262109041213989
    2. '(' → logprob: -1.776210904121399
    3. '('' → logprob: -2.0262107849121094
    4. '("' → logprob: -2.4012107849121094
    5. '(-' → logprob: -4.526210784912109
    6. '(None' → logprob: -5.651210784912109
    7. '("")' → logprob: -6.026210784912109
    8. '("("' → logprob: -7.901210784912109
    9. '(False' → logprob: -9.90121078491211
    10. '('?' → logprob: -10.40121078491211

Token 95: 'NA' (ID: 9555)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8845686316490173
    2. 'No' → logprob: -1.384568691253662
    3. '-' → logprob: -1.884568691253662
    4. 'NA' → logprob: -3.009568691253662
    5. 'None' → logprob: -3.259568691253662
    6. 'NO' → logprob: -4.009568691253662
    7. 'Not' → logprob: -4.509568691253662
    8. 'v' → logprob: -5.134568691253662
    9. 'なし' → logprob: -5.134568691253662
    10. '000' → logprob: -5.259568691253662

Token 96: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.049434930086135864
    2. ')' → logprob: -3.0494349002838135
    3. '")
' → logprob: -7.299435138702393
    4. ')")' → logprob: -9.174434661865234
    5. ')
' → logprob: -10.049434661865234
    6. '"' → logprob: -11.549434661865234
    7. '')' → logprob: -11.674434661865234
    8. '")
' → logprob: -13.299434661865234
    9. '   ' → logprob: -13.549434661865234
    10. '()' → logprob: -13.924434661865234

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012102338951081038
    2. '       ' → logprob: -7.0012102127075195
    3. 'else' → logprob: -8.62621021270752
    4. ' else' → logprob: -9.12621021270752
    5. '<|end|>' → logprob: -12.50121021270752
    6. 'continue' → logprob: -13.37621021270752
    7. ' continue' → logprob: -13.62621021270752
    8. ' ' → logprob: -13.87621021270752
    9. '	else' → logprob: -14.37621021270752
    10. ',' → logprob: -14.50121021270752

Token 98: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6721358895301819
    2. 'else' → logprob: -0.9221358895301819
    3. ' else' → logprob: -2.422135829925537
    4. 'continue' (adapté à ' continue') → logprob: -6.547135829925537
    5. ' continue' → logprob: -6.922135829925537
    6. '       ' → logprob: -7.547135829925537
    7. '	continue' → logprob: -11.672136306762695
    8. ' ' → logprob: -11.672136306762695
    9. '	else' → logprob: -12.547136306762695
    10. 'elif' → logprob: -12.797136306762695

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047129854559898376
    2. 'sorted' → logprob: -3.9221298694610596
    3. '    
' → logprob: -4.0471296310424805
    4. 'max' → logprob: -5.6721296310424805
    5. '
' → logprob: -6.1721296310424805
    6. 'print' → logprob: -6.5471296310424805
    7. ' sorted' → logprob: -7.5471296310424805
    8. 'freq' → logprob: -7.6721296310424805
    9. 'for' → logprob: -9.17212963104248
    10. 'words' → logprob: -9.54712963104248

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045367187703959644
    2. 'sorted' → logprob: -8.87545394897461
    3. 'max' → logprob: -9.00045394897461
    4. 'print' → logprob: -9.50045394897461
    5. '    
' → logprob: -10.00045394897461
    6. ' sorted' → logprob: -10.50045394897461
    7. 'w' → logprob: -12.12545394897461
    8. 'for' → logprob: -12.12545394897461
    9. 'next' → logprob: -12.37545394897461
    10. ' max' → logprob: -12.50045394897461

Token 101: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5404947996139526
    2. 'sorted' → logprob: -1.2904947996139526
    3. ' max' → logprob: -3.665494918823242
    4. '   ' → logprob: -3.790494918823242
    5. ' sorted' → logprob: -3.790494918823242
    6. 'result' → logprob: -3.790494918823242
    7. 'for' → logprob: -4.040494918823242
    8. 'm' → logprob: -4.540494918823242
    9. 'print' → logprob: -4.915494918823242
    10. ' for' → logprob: -6.165494918823242

Token 102: ' Sort' (ID: 25945)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.691518247127533
    2. 'max' → logprob: -1.3165183067321777
    3. ' sorted' → logprob: -2.1915183067321777
    4. 'sorted' → logprob: -3.3165183067321777
    5. ' most' → logprob: -4.316518306732178
    6. ' result' → logprob: -4.691518306732178
    7. 'm' → logprob: -5.191518306732178
    8. ' m' → logprob: -5.316518306732178
    9. ' for' → logprob: -5.441518306732178
    10. ' ans' → logprob: -5.566518306732178

Token 103: ' by' (ID: 656)
  Prédit: '_items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.8267704844474792
    2. 'freq' → logprob: -1.701770544052124
    3. '_freq' → logprob: -1.701770544052124
    4. '(' → logprob: -2.451770544052124
    5. 'items' → logprob: -3.451770544052124
    6. ' =' → logprob: -3.576770544052124
    7. '=' → logprob: -4.076770305633545
    8. '(freq' → logprob: -4.201770305633545
    9. 'sorted' → logprob: -4.826770305633545
    10. '(sorted' → logprob: -5.451770305633545

Token 104: ' frequency' (ID: 19813)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6131112575531006
    2. 'freq' → logprob: -2.2381112575531006
    3. ' (-' → logprob: -2.2381112575531006
    4. ' freq' → logprob: -2.3631112575531006
    5. ' lambda' → logprob: -2.7381112575531006
    6. ' frequency' → logprob: -3.3631112575531006
    7. '-f' → logprob: -3.4881112575531006
    8. 'lambda' → logprob: -4.86311149597168
    9. '(-' → logprob: -4.98811149597168
    10. '-frequency' → logprob: -5.73811149597168

Token 105: ' descending' (ID: 89489)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01913842000067234
    2. 'items' → logprob: -4.769138336181641
    3. 'sorted' → logprob: -5.269138336181641
    4. '=' → logprob: -6.269138336181641
    5. 'freq' → logprob: -6.394138336181641
    6. ' =' → logprob: -7.894138336181641
    7. '(sorted' → logprob: -8.26913833618164
    8. '_items' → logprob: -8.39413833618164
    9. ')' → logprob: -8.64413833618164
    10. '(freq' → logprob: -8.89413833618164

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02127363719046116
    2. '   ' → logprob: -4.396273612976074
    3. 'sorted' → logprob: -4.896273612976074
    4. 'freq' → logprob: -7.271273612976074
    5. ',
' → logprob: -8.771273612976074
    6. ' sorted' → logprob: -9.146273612976074
    7. 'items' → logprob: -9.521273612976074
    8. 'result' → logprob: -10.271273612976074
    9. 'tokens' → logprob: -10.271273612976074
    10. ' ,' → logprob: -10.396273612976074

Token 107: ' then' (ID: 1815)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.062056977301836014
    2. 'key' → logprob: -3.6870570182800293
    3. ' lambda' → logprob: -4.062057018280029
    4. ' then' → logprob: -4.312057018280029
    5. 'lambda' → logprob: -5.687057018280029
    6. ' reverse' → logprob: -7.812057018280029
    7. 'then' → logprob: -7.937057018280029
    8. 'reverse' → logprob: -9.562056541442871
    9. '   ' → logprob: -9.687056541442871
    10. 'w' → logprob: -10.062056541442871

Token 108: ' lex' (ID: 37772)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.06351752579212189
    2. ' lex' → logprob: -3.3135175704956055
    3. ' alphabet' → logprob: -4.5635175704956055
    4. 'by' → logprob: -5.1885175704956055
    5. 'alphabet' → logprob: -5.3135175704956055
    6. 'lex' → logprob: -5.8135175704956055
    7. 'sorted' → logprob: -7.6885175704956055
    8. ' sorted' → logprob: -8.063517570495605
    9. ' key' → logprob: -8.813517570495605
    10. ' alphabetical' → logprob: -9.438517570495605

Token 109: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.07539399713277817
    2. 'sorted' → logprob: -2.7003939151763916
    3. 'sort' → logprob: -5.950394153594971
    4. ',' → logprob: -6.950394153594971
    5. 'order' → logprob: -7.575394153594971
    6. '(sorted' → logprob: -8.075393676757812
    7. ' order' → logprob: -8.325393676757812
    8. ' sorted' → logprob: -8.450393676757812
    9. '_sorted' → logprob: -9.325393676757812
    10. '   ' → logprob: -9.575393676757812

Token 110: ' ascending' (ID: 75564)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.8616330623626709
    2. '
' → logprob: -1.486633062362671
    3. 'sorted' → logprob: -1.611633062362671
    4. '   ' → logprob: -2.111633062362671
    5. 'result' → logprob: -4.23663330078125
    6. 'words' → logprob: -4.98663330078125
    7. 'items' → logprob: -5.48663330078125
    8. ',' → logprob: -6.73663330078125
    9. ' sorted' → logprob: -6.73663330078125
    10. '    
' → logprob: -7.48663330078125

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0727040767669678
    2. 'sorted' → logprob: -1.0727040767669678
    3. 'freq' → logprob: -1.6977040767669678
    4. '
' → logprob: -2.3227040767669678
    5. 'result' → logprob: -3.9477040767669678
    6. 'words' → logprob: -5.072704315185547
    7. 'results' → logprob: -5.947704315185547
    8. 'items' → logprob: -6.072704315185547
    9. ' sorted' → logprob: -6.947704315185547
    10. '    
' → logprob: -6.947704315185547

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4802834987640381
    2. 'sorted' → logprob: -1.105283498764038
    3. 'freq' → logprob: -3.980283498764038
    4. 'result' → logprob: -4.480283737182617
    5. ' sorted' → logprob: -4.605283737182617
    6. 'words' → logprob: -5.230283737182617
    7. '
' → logprob: -5.980283737182617
    8. 'results' → logprob: -6.980283737182617
    9. 'tokens' → logprob: -7.855283737182617
    10. '    
' → logprob: -8.605283737182617

Token 113: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.9018583297729492
    2. 'sorted' (adapté à ' sorted') → logprob: -0.9018583297729492
    3. 'result' → logprob: -2.401858329772949
    4. '   ' → logprob: -2.901858329772949
    5. ' result' → logprob: -4.026858329772949
    6. 'freq' → logprob: -5.026858329772949
    7. ' for' → logprob: -5.526858329772949
    8. ' items' → logprob: -5.651858329772949
    9. 'items' → logprob: -6.026858329772949
    10. ' res' → logprob: -6.151858329772949

Token 114: '_words' (ID: 45077)
  Prédit: '_freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_freq' → logprob: -0.4237011671066284
    2. '_items' → logprob: -1.1737011671066284
    3. '_words' → logprob: -3.798701286315918
    4. 'freq' → logprob: -4.548701286315918
    5. 'items' → logprob: -6.548701286315918
    6. '(freq' → logprob: -7.798701286315918
    7. '_list' → logprob: -8.048701286315918
    8. '(' → logprob: -8.298701286315918
    9. '_' → logprob: -8.298701286315918
    10. '_keys' → logprob: -8.548701286315918

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740923047065735
    2. ' =' → logprob: -0.9740923047065735
    3. '(' → logprob: -11.349092483520508
    4. ')' → logprob: -14.099092483520508
    5. '(sorted' → logprob: -14.224092483520508
    6. 's' → logprob: -14.849092483520508
    7. '(freq' → logprob: -15.349092483520508
    8. '   ' → logprob: -15.349092483520508
    9. 'sorted' → logprob: -15.599092483520508
    10. '=f' → logprob: -15.974092483520508

Token 116: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.1602439284324646
    2. ' sorted' → logprob: -1.9102439880371094
    3. '   ' → logprob: -11.41024398803711
    4. '(sorted' → logprob: -11.66024398803711
    5. '.sorted' → logprob: -16.78524398803711
    6. ' ' → logprob: -16.91024398803711
    7. '```' → logprob: -18.03524398803711
    8. '[' → logprob: -18.28524398803711
    9. '`' → logprob: -20.03524398803711
    10. 'Sorted' → logprob: -20.03524398803711

Token 117: '(freq' (ID: 157195)
  Prédit: '(freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(freq' → logprob: -0.0005866335122846067
    2. '(' → logprob: -7.50058650970459
    3. 'freq' → logprob: -10.37558650970459
    4. '((' → logprob: -13.12558650970459
    5. ' (' → logprob: -15.37558650970459
    6. '(
' → logprob: -15.50058650970459
    7. '```' → logprob: -17.750587463378906
    8. '_freq' → logprob: -18.000587463378906
    9. '([(' → logprob: -18.125587463378906
    10. '(

' → logprob: -18.375587463378906

Token 118: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0059958635829389095
    2. 'items' → logprob: -5.130995750427246
    3. '().' → logprob: -10.380995750427246
    4. ' items' → logprob: -11.380995750427246
    5. '.' → logprob: -11.755995750427246
    6. ',' → logprob: -11.880995750427246
    7. '(items' → logprob: -13.130995750427246
    8. '(),' → logprob: -13.255995750427246
    9. ')' → logprob: -13.505995750427246
    10. '_items' → logprob: -14.005995750427246

Token 119: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.001322742085903883
    2. '(key' → logprob: -6.8763227462768555
    3. ',' → logprob: -8.876322746276855
    4. ',key' → logprob: -9.001322746276855
    5. 'key' → logprob: -11.126322746276855
    6. '()' → logprob: -11.876322746276855
    7. '())' → logprob: -12.626322746276855
    8. '(lambda' → logprob: -14.376322746276855
    9. '(),
' → logprob: -14.751322746276855
    10. '(' → logprob: -15.001322746276855

Token 120: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005238260608166456
    2. ' key' → logprob: -5.255238056182861
    3. 'lambda' → logprob: -12.88023853302002
    4. '   ' → logprob: -13.50523853302002
    5. '(key' → logprob: -15.00523853302002
    6. '	key' → logprob: -15.50523853302002
    7. ',key' → logprob: -16.255237579345703
    8. 'reverse' → logprob: -17.880237579345703
    9. '[key' → logprob: -20.005237579345703
    10. '  ' → logprob: -20.130237579345703

Token 121: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.758300438988954e-05
    2. '=' → logprob: -9.250097274780273
    3. 'lambda' → logprob: -13.500097274780273
    4. '(lambda' → logprob: -16.250097274780273
    5. '=
' → logprob: -17.750097274780273
    6. ' =' → logprob: -19.000097274780273
    7. ' lambda' → logprob: -19.625097274780273
    8. '=item' → logprob: -20.250097274780273
    9. '=(' → logprob: -20.875097274780273
    10. ')=' → logprob: -20.875097274780273

Token 122: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0711558535695076
    2. 'x' → logprob: -2.6961557865142822
    3. ' item' → logprob: -7.071156024932861
    4. ' w' → logprob: -8.696155548095703
    5. 'item' → logprob: -9.446155548095703
    6. 'w' → logprob: -9.446155548095703
    7. ' lambda' → logprob: -10.696155548095703
    8. ' word' → logprob: -11.571155548095703
    9. ' s' → logprob: -12.321155548095703
    10. 'lambda' → logprob: -12.821155548095703

Token 123: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.961759259458631e-06
    2. ' :' → logprob: -12.375004768371582
    3. ':(' → logprob: -14.375004768371582
    4. ':
' → logprob: -17.1250057220459
    5. 'x' → logprob: -17.8750057220459
    6. '(' → logprob: -17.8750057220459
    7. ' :(' → logprob: -18.1250057220459
    8. '   ' → logprob: -19.1250057220459
    9. ':x' → logprob: -19.1250057220459
    10. '[' → logprob: -19.2500057220459

Token 124: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0010563877876847982
    2. ' (-' → logprob: -7.12605619430542
    3. '(lambda' → logprob: -9.001056671142578
    4. 'lambda' → logprob: -9.376056671142578
    5. '(' → logprob: -10.376056671142578
    6. 'x' → logprob: -12.001056671142578
    7. '((-' → logprob: -12.626056671142578
    8. ' lambda' → logprob: -13.001056671142578
    9. '-' → logprob: -14.626056671142578
    10. ' (' → logprob: -15.376056671142578

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. ')x' → logprob: -19.375003814697266
    4. '
' → logprob: -20.875003814697266
    5. '	x' → logprob: -20.875003814697266
    6. '(x' → logprob: -21.500003814697266
    7. '<|end|>' → logprob: -21.750003814697266
    8. ')' → logprob: -21.875003814697266
    9. '```' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.000003814697266

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.000000953674316
    3. '[
' → logprob: -17.125001907348633
    4. 'x' → logprob: -17.375001907348633
    5. ' [' → logprob: -17.500001907348633
    6. '```' → logprob: -18.375001907348633
    7. ')' → logprob: -19.250001907348633
    8. ',' → logprob: -19.375001907348633
    9. '
' → logprob: -19.500001907348633
    10. ' ' → logprob: -19.625001907348633

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.000046730041504
    3. '```' → logprob: -14.625046730041504
    4. '
' → logprob: -15.750046730041504
    5. ' ' → logprob: -16.375045776367188
    6. '-' → logprob: -16.812545776367188
    7. '`' → logprob: -17.062545776367188
    8. '{' → logprob: -17.437545776367188
    9. '``' → logprob: -17.937545776367188
    10. '#' → logprob: -18.000045776367188

Token 128: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1093578804284334e-05
    2. ',x' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.500051498413086
    4. 'x' → logprob: -14.500051498413086
    5. '[' → logprob: -15.000051498413086
    6. ',
' → logprob: -17.625051498413086
    7. ' x' → logprob: -19.750051498413086
    8. '   ' → logprob: -20.500051498413086
    9. ',len' → logprob: -20.875051498413086
    10. '‌,' → logprob: -20.875051498413086

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4287058711051941
    2. ' x' → logprob: -1.0537059307098389
    3. ' ' → logprob: -12.803706169128418
    4. ')' → logprob: -14.553706169128418
    5. '	x' → logprob: -15.053706169128418
    6. 'len' → logprob: -15.053706169128418
    7. '   ' → logprob: -15.428706169128418
    8. ')x' → logprob: -15.553706169128418
    9. '    ' → logprob: -15.866206169128418
    10. ''x' → logprob: -15.928706169128418

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.375000953674316
    3. '[
' → logprob: -16.75
    4. ' [' → logprob: -16.875
    5. '.' → logprob: -17.0
    6. 'x' → logprob: -17.375
    7. '))' → logprob: -17.625
    8. ')' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. '
' → logprob: -19.6875

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8550976164988242e-05
    2. '[' → logprob: -11.000018119812012
    3. ' ' → logprob: -13.250018119812012
    4. 'x' → logprob: -16.875019073486328
    5. '1' → logprob: -17.500019073486328
    6. '۰' → logprob: -17.500019073486328
    7. '   ' → logprob: -17.750019073486328
    8. ')' → logprob: -18.500019073486328
    9. '
' → logprob: -18.687519073486328
    10. '０' → logprob: -19.000019073486328

Token 132: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -6.32523515378125e-05
    2. ')' → logprob: -9.875062942504883
    3. '))
' → logprob: -11.625062942504883
    4. ')))' → logprob: -13.750062942504883
    5. ' ))' → logprob: -14.375062942504883
    6. '),' → logprob: -14.875062942504883
    7. '[' → logprob: -15.125062942504883
    8. '))

' → logprob: -16.250062942504883
    9. '))[' → logprob: -16.500062942504883
    10. ''))' → logprob: -17.000062942504883

Token 133: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4714272618293762
    2. 'for' → logprob: -2.2214272022247314
    3. ')' → logprob: -2.4714272022247314
    4. '
' → logprob: -2.5964272022247314
    5. '   ' → logprob: -3.2214272022247314
    6. ')
' → logprob: -3.5964272022247314
    7. '[' → logprob: -3.7214272022247314
    8. ' for' → logprob: -5.5964274406433105
    9. ',
' → logprob: -5.8464274406433105
    10. ' print' → logprob: -6.0964274406433105

Token 134: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14042061567306519
    2. 'for' → logprob: -2.14042067527771
    3. '[' → logprob: -5.390420436859131
    4. 'if' → logprob: -5.640420436859131
    5. ' for' → logprob: -7.140420436859131
    6. '   ' → logprob: -7.390420436859131
    7. 'word' → logprob: -7.515420436859131
    8. ')' → logprob: -7.640420436859131
    9. ' print' → logprob: -7.890420436859131
    10. 'top' → logprob: -8.015420913696289

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797914355993271
    2. ' =' → logprob: -1.8047914505004883
    3. ',' → logprob: -10.929791450500488
    4. '=[]' → logprob: -12.054791450500488
    5. ')' → logprob: -12.179791450500488
    6. '.' → logprob: -12.304791450500488
    7. 's' → logprob: -12.304791450500488
    8. '=result' → logprob: -13.304791450500488
    9. '_' → logprob: -13.679791450500488
    10. '.extend' → logprob: -13.929791450500488

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5105929970741272
    2. '[]' → logprob: -1.6355929374694824
    3. 'sorted' → logprob: -2.5105929374694824
    4. ' [' → logprob: -3.0105929374694824
    5. '"' → logprob: -3.5105929374694824
    6. ''' → logprob: -4.260592937469482
    7. ' []' → logprob: -4.260592937469482
    8. ' sorted' → logprob: -5.010592937469482
    9. '[]
' → logprob: -5.760592937469482
    10. '[s' → logprob: -5.760592937469482

Token 137: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7514272928237915
    2. 'sorted' → logprob: -1.0014272928237915
    3. 'word' → logprob: -2.001427173614502
    4. 'x' → logprob: -4.501427173614502
    5. 'item' → logprob: -5.251427173614502
    6. ' sorted' → logprob: -5.501427173614502
    7. ' word' → logprob: -6.001427173614502
    8. ' w' → logprob: -6.626427173614502
    9. 'pair' → logprob: -7.376427173614502
    10. 'sw' → logprob: -7.376427173614502

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7150840163230896
    2. 'for' → logprob: -0.7150840163230896
    3. '[' → logprob: -3.8400840759277344
    4. ')' → logprob: -9.840084075927734
    5. ']' → logprob: -10.590084075927734
    6. 's' → logprob: -10.840084075927734
    7. '	for' → logprob: -10.840084075927734
    8. '```' → logprob: -11.215084075927734
    9. ' ' → logprob: -11.590084075927734
    10. '
' → logprob: -11.590084075927734

Token 139: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0011841575615108013
    2. ' w' → logprob: -6.751183986663818
    3. '(w' → logprob: -11.251184463500977
    4. ',' → logprob: -14.626184463500977
    5. ',w' → logprob: -15.751184463500977
    6. '	w' → logprob: -15.876184463500977
    7. ' (' → logprob: -16.126184463500977
    8. '   ' → logprob: -17.626184463500977
    9. '```' → logprob: -17.876184463500977
    10. '_w' → logprob: -18.001184463500977

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005537538789212704
    2. ',w' → logprob: -5.255537509918213
    3. ',_' → logprob: -8.880537986755371
    4. ',f' → logprob: -9.005537986755371
    5. 'w' → logprob: -11.255537986755371
    6. 'in' → logprob: -11.755537986755371
    7. ',v' → logprob: -12.130537986755371
    8. ' ,' → logprob: -12.755537986755371
    9. ',count' → logprob: -12.755537986755371
    10. ',in' → logprob: -13.255537986755371

Token 141: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06398414820432663
    2. 'count' → logprob: -3.0639841556549072
    3. '_count' → logprob: -5.563983917236328
    4. 'c' → logprob: -5.563983917236328
    5. '_c' → logprob: -5.813983917236328
    6. '_f' → logprob: -6.563983917236328
    7. ' _' → logprob: -6.688983917236328
    8. 'freq' → logprob: -6.938983917236328
    9. 'f' → logprob: -7.688983917236328
    10. 'cnt' → logprob: -8.438983917236328

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0788925439119339
    2. 'in' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.453892707824707
    4. ',' → logprob: -14.703892707824707
    5. '	in' → logprob: -15.828892707824707
    6. ')' → logprob: -16.20389175415039
    7. '<|end|>' → logprob: -16.20389175415039
    8. 'In' → logprob: -16.32889175415039
    9. 'sorted' → logprob: -16.45389175415039
    10. ']' → logprob: -16.45389175415039

Token 143: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.018150178715586662
    2. ' sorted' → logprob: -4.018150329589844
    3. '(sorted' → logprob: -15.518150329589844
    4. ' ' → logprob: -17.393150329589844
    5. 'sort' → logprob: -18.268150329589844
    6. '.sorted' → logprob: -18.893150329589844
    7. '   ' → logprob: -19.143150329589844
    8. '
' → logprob: -20.018150329589844
    9. '```' → logprob: -20.018150329589844
    10. 'Sorted' → logprob: -20.018150329589844

Token 144: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.00012118533049942926
    2. '_items' → logprob: -9.625121116638184
    3. 'words' → logprob: -10.250121116638184
    4. 'sorted' → logprob: -11.750121116638184
    5. ')' → logprob: -12.750121116638184
    6. '_sorted' → logprob: -12.750121116638184
    7. 'Words' → logprob: -13.625121116638184
    8. '_tokens' → logprob: -13.750121116638184
    9. '_word' → logprob: -13.750121116638184
    10. '_' → logprob: -15.000121116638184

Token 145: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.20138946175575256
    2. ']' → logprob: -1.8263894319534302
    3. '][:' → logprob: -4.326389312744141
    4. ' if' → logprob: -4.951389312744141
    5. '[' → logprob: -7.201389312744141
    6. 'if' → logprob: -8.57638931274414
    7. '[:]' → logprob: -9.82638931274414
    8. '   ' → logprob: -9.95138931274414
    9. ']
' → logprob: -10.45138931274414
    10. ' ]' → logprob: -10.70138931274414

Token 146: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5021512508392334
    2. '3' → logprob: -1.6271512508392334
    3. '5' → logprob: -1.6271512508392334
    4. '1' → logprob: -7.5021514892578125
    5. '20' → logprob: -8.502151489257812
    6. '2' → logprob: -8.502151489257812
    7. '```' → logprob: -8.752151489257812
    8. '4' → logprob: -9.002151489257812
    9. ' ' → logprob: -9.002151489257812
    10. '7' → logprob: -9.252151489257812

Token 147: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025702932849526405
    2. ']]' → logprob: -3.775702953338623
    3. ')]' → logprob: -6.025702953338623
    4. '])' → logprob: -11.025702476501465
    5. ']}' → logprob: -11.650702476501465
    6. ' ]' → logprob: -11.650702476501465
    7. '])]' → logprob: -13.525702476501465
    8. '}]' → logprob: -13.650702476501465
    9. ' ]]' → logprob: -14.150702476501465
    10. ']
' → logprob: -14.525702476501465

Token 148: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06216362863779068
    2. '   ' → logprob: -2.8121635913848877
    3. '    
' → logprob: -10.062163352966309
    4. '
' → logprob: -10.187163352966309
    5. 'for' → logprob: -10.312163352966309
    6. '```' → logprob: -10.437163352966309
    7. ' print' → logprob: -10.687163352966309
    8. '[' → logprob: -12.187163352966309
    9. '<|end|>' → logprob: -12.187163352966309
    10. ')' → logprob: -12.312163352966309

Token 149: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004666577442549169
    2. '   ' → logprob: -7.750466823577881
    3. ' print' → logprob: -10.375466346740723
    4. 'for' → logprob: -12.375466346740723
    5. '```' → logprob: -15.500466346740723
    6. '
' → logprob: -16.00046730041504
    7. '    
' → logprob: -16.50046730041504
    8. '	print' → logprob: -17.25046730041504
    9. 'if' → logprob: -17.25046730041504
    10. ' for' → logprob: -17.75046730041504

Token 150: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10916581749916077
    2. '(' → logprob: -2.609165906906128
    3. '("' → logprob: -4.109165668487549
    4. '(*' → logprob: -4.359165668487549
    5. '("("' → logprob: -7.609165668487549
    6. '(result' → logprob: -9.109166145324707
    7. '(len' → logprob: -13.859166145324707
    8. '()' → logprob: -13.859166145324707
    9. '(f' → logprob: -14.359166145324707
    10. '(',' → logprob: -14.484166145324707

Token 151: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11300598084926605
    2. ''' → logprob: -2.2380058765411377
    3. '",' → logprob: -9.363005638122559
    4. '"+"' → logprob: -11.113005638122559
    5. ' "' → logprob: -11.238005638122559
    6. '"*' → logprob: -11.613005638122559
    7. ' ".' → logprob: -11.738005638122559
    8. '","' → logprob: -11.863005638122559
    9. '"k' → logprob: -11.863005638122559
    10. '*' → logprob: -12.363005638122559

Token 152: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.856408536899835e-05
    2. 'print' → logprob: -10.500028610229492
    3. '```' → logprob: -15.125028610229492
    4. ' join' → logprob: -15.250028610229492
    5. '(join' → logprob: -15.875028610229492
    6. 'jo' → logprob: -16.250028610229492
    7. 'j' → logprob: -17.000028610229492
    8. 'split' → logprob: -17.250028610229492
    9. ')' → logprob: -17.750028610229492
    10. 'strip' → logprob: -17.750028610229492

Token 153: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -5.8961017202818766e-05
    2. 'result' → logprob: -9.750059127807617
    3. '(' → logprob: -14.375059127807617
    4. ',result' → logprob: -17.250059127807617
    5. ')' → logprob: -17.875059127807617
    6. ' (' → logprob: -18.750059127807617
    7. '(results' → logprob: -18.750059127807617
    8. '[result' → logprob: -18.750059127807617
    9. ' result' → logprob: -18.875059127807617
    10. '=result' → logprob: -19.250059127807617

Token 154: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889077812433243
    2. '))' → logprob: -2.578890800476074
    3. ')))' → logprob: -14.828890800476074
    4. '())' → logprob: -15.078890800476074
    5. ')`' → logprob: -15.953890800476074
    6. ' )' → logprob: -16.578889846801758
    7. ')
' → logprob: -16.703889846801758
    8. ')")' → logprob: -17.078889846801758
    9. '()' → logprob: -17.328889846801758
    10. '])' → logprob: -17.328889846801758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 42.76%
Précision adaptée (1ère position): 46.05%
Précision (top 10): 84.21%
================================================================================
