================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
L = int(input())
A = int(input())
B = int(input())
C = int(input())
D = int(input())

from math import ceil

days_for_A = ceil(A / C)
days_for_B = ceil(B / D)

work_days = max(days_for_A, days_for_B)
play_days = L - work_days

print(play_days)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'L' (ID: 43)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020950057660229504
    2. ''' → logprob: -9.25020980834961
    3. '('' → logprob: -9.75020980834961
    4. '(
' → logprob: -11.25020980834961
    5. '("("' → logprob: -11.50020980834961
    6. '[' → logprob: -11.87520980834961
    7. '```' → logprob: -11.87520980834961
    8. '`' → logprob: -12.37520980834961
    9. '(L' → logprob: -12.87520980834961
    10. '"' → logprob: -13.00020980834961

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13726796209812164
    2. ')' → logprob: -2.38726806640625
    3. '()' → logprob: -3.38726806640625
    4. '())' → logprob: -6.26226806640625
    5. '(
' → logprob: -8.88726806640625
    6. '```' → logprob: -9.51226806640625
    7. ''' → logprob: -9.88726806640625
    8. '")' → logprob: -9.88726806640625
    9. '(

' → logprob: -10.01226806640625
    10. '))' → logprob: -10.01226806640625

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7235759496688843
    2. 'for' → logprob: -1.4735759496688843
    3. 'i' → logprob: -2.098576068878174
    4. '*' → logprob: -3.098576068878174
    5. 'n' → logprob: -3.848576068878174
    6. 'f' → logprob: -4.223576068878174
    7. 's' → logprob: -4.473576068878174
    8. '%' → logprob: -4.473576068878174
    9. '`' → logprob: -4.598576068878174
    10. '#' → logprob: -4.848576068878174

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009444506838917732
    2. '+' → logprob: -5.009444713592529
    3. '[i' → logprob: -7.509444713592529
    4. '[A' → logprob: -7.634444713592529
    5. '=' → logprob: -7.884444713592529
    6. ' =' → logprob: -8.759444236755371
    7. '.' → logprob: -8.884444236755371
    8. '*' → logprob: -9.259444236755371
    9. '[L' → logprob: -9.384444236755371
    10. '[:]' → logprob: -9.509444236755371

Token 7: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.5404436588287354
    2. ' []' → logprob: -1.5404436588287354
    3. '[]' → logprob: -1.7904436588287354
    4. ' list' → logprob: -2.5404436588287354
    5. '0' → logprob: -2.6654436588287354
    6. 'list' → logprob: -2.9154436588287354
    7. ' input' → logprob: -3.0404436588287354
    8. ' L' → logprob: -3.0404436588287354
    9. 'int' → logprob: -3.2904436588287354
    10. ' int' → logprob: -4.040443420410156

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031854258850216866
    2. ')' → logprob: -8.87531852722168
    3. '()' → logprob: -9.25031852722168
    4. ''' → logprob: -11.00031852722168
    5. ' (' → logprob: -11.37531852722168
    6. ' ' → logprob: -11.50031852722168
    7. '"' → logprob: -12.00031852722168
    8. '(input' → logprob: -12.12531852722168
    9. '```' → logprob: -12.12531852722168
    10. '('' → logprob: -12.25031852722168

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.42978835105895996
    2. '()' → logprob: -1.17978835105896
    3. ')' → logprob: -3.17978835105896
    4. '(' → logprob: -7.929788589477539
    5. ' ())' → logprob: -11.179788589477539
    6. '()))' → logprob: -11.554788589477539
    7. '().' → logprob: -12.054788589477539
    8. '`)' → logprob: -12.304788589477539
    9. '()`' → logprob: -12.554788589477539
    10. '()
' → logprob: -12.929788589477539

Token 10: 'B' (ID: 33)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7477902173995972
    2. 'B' → logprob: -1.4977902173995972
    3. 'if' → logprob: -2.1227903366088867
    4. 'T' → logprob: -3.4977903366088867
    5. 'D' → logprob: -3.9977903366088867
    6. 'R' → logprob: -4.122790336608887
    7. 'S' → logprob: -4.247790336608887
    8. 'P' → logprob: -4.247790336608887
    9. 'print' → logprob: -4.247790336608887
    10. 'r' → logprob: -4.497790336608887

Token 11: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29092398285865784
    2. ' +' → logprob: -1.4159239530563354
    3. ' ' → logprob: -4.915924072265625
    4. ')' → logprob: -6.540924072265625
    5. ' )' → logprob: -8.415924072265625
    6. ' +=' → logprob: -8.790924072265625
    7. '<|end|>' → logprob: -9.040924072265625
    8. '=' → logprob: -9.290924072265625
    9. ' =' → logprob: -9.415924072265625
    10. '[' → logprob: -10.165924072265625

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09129753708839417
    2. ' int' → logprob: -2.5912976264953613
    3. 'input' → logprob: -4.716297626495361
    4. ' input' → logprob: -5.716297626495361
    5. '(int' → logprob: -9.966297149658203
    6. '(input' → logprob: -10.591297149658203
    7. 'A' → logprob: -11.591297149658203
    8. ' A' → logprob: -13.216297149658203
    9. '=int' → logprob: -13.341297149658203
    10. 'L' → logprob: -13.466297149658203

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4955834448337555
    2. '(input' → logprob: -0.9955834150314331
    3. '()' → logprob: -4.370583534240723
    4. ' (' → logprob: -5.995583534240723
    5. ')' → logprob: -5.995583534240723
    6. 'input' → logprob: -6.745583534240723
    7. '('' → logprob: -7.120583534240723
    8. ' ' → logprob: -8.370583534240723
    9. '[input' → logprob: -8.495583534240723
    10. '())' → logprob: -8.870583534240723

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33448633551597595
    2. '())' → logprob: -1.4594863653182983
    3. '()' → logprob: -2.959486246109009
    4. '`)' → logprob: -10.33448600769043
    5. '))' → logprob: -10.95948600769043
    6. '())
' → logprob: -11.58448600769043
    7. '()
' → logprob: -11.58448600769043
    8. ' )' → logprob: -12.20948600769043
    9. ')
' → logprob: -12.58448600769043
    10. '(' → logprob: -12.83448600769043

Token 15: 'C' (ID: 34)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1227272748947144
    2. 'C' → logprob: -1.2477272748947144
    3. 'c' → logprob: -2.497727394104004
    4. 'x' → logprob: -2.747727394104004
    5. 'n' → logprob: -3.247727394104004
    6. 'D' → logprob: -3.747727394104004
    7. 't' → logprob: -3.997727394104004
    8. 'T' → logprob: -4.372727394104004
    9. 'N' → logprob: -4.497727394104004
    10. ' if' → logprob: -4.622727394104004

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07909853011369705
    2. '=' → logprob: -2.5790984630584717
    3. '_' → logprob: -8.95409870147705
    4. ')' → logprob: -10.70409870147705
    5. ',' → logprob: -11.07909870147705
    6. ' +=' → logprob: -11.82909870147705
    7. ' ' → logprob: -11.95409870147705
    8. '=int' → logprob: -12.20409870147705
    9. '.' → logprob: -12.32909870147705
    10. '+' → logprob: -12.32909870147705

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.070709228515625
    2. ' int' → logprob: -2.695709228515625
    3. '(int' → logprob: -8.445709228515625
    4. 'L' → logprob: -8.695709228515625
    5. '100' → logprob: -9.195709228515625
    6. '0' → logprob: -9.570709228515625
    7. ' L' → logprob: -9.570709228515625
    8. 'A' → logprob: -9.820709228515625
    9. ' A' → logprob: -10.820709228515625
    10. ' (' → logprob: -11.070709228515625

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03596377372741699
    2. '(input' → logprob: -3.910963773727417
    3. '()' → logprob: -4.410964012145996
    4. ')' → logprob: -6.285964012145996
    5. ' (' → logprob: -7.660964012145996
    6. 'input' → logprob: -8.410964012145996
    7. ''' → logprob: -8.910964012145996
    8. '(
' → logprob: -9.660964012145996
    9. '('' → logprob: -10.660964012145996
    10. '[input' → logprob: -10.660964012145996

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6336802840232849
    2. '()' → logprob: -1.0086803436279297
    3. '())' → logprob: -2.2586803436279297
    4. '()
' → logprob: -10.13368034362793
    5. '`)' → logprob: -10.13368034362793
    6. '(' → logprob: -10.25868034362793
    7. ' )' → logprob: -11.50868034362793
    8. '）' → logprob: -11.75868034362793
    9. '```' → logprob: -12.13368034362793
    10. '')' → logprob: -12.13368034362793

Token 20: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.23943842947483063
    2. 'max' → logprob: -2.989438533782959
    3. 'x' → logprob: -3.364438533782959
    4. 'T' → logprob: -3.364438533782959
    5. 'total' → logprob: -4.114438533782959
    6. 't' → logprob: -4.239438533782959
    7. 'import' → logprob: -4.614438533782959
    8. 'X' → logprob: -4.739438533782959
    9. 'd' → logprob: -4.739438533782959
    10. 'if' → logprob: -5.239438533782959

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2032945603132248
    2. '=' → logprob: -1.8282945156097412
    3. '+' → logprob: -4.57829475402832
    4. ' +=' → logprob: -5.70329475402832
    5. ' ' → logprob: -6.07829475402832
    6. ')' → logprob: -6.20329475402832
    7. '=int' → logprob: -7.32829475402832
    8. ' )' → logprob: -7.45329475402832
    9. ' +' → logprob: -7.45329475402832
    10. '_' → logprob: -7.82829475402832

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5761588215827942
    2. 'int' → logprob: -0.8261588215827942
    3. '(int' → logprob: -9.20115852355957
    4. ' L' → logprob: -9.95115852355957
    5. 'L' → logprob: -11.20115852355957
    6. ' ' → logprob: -11.32615852355957
    7. '=int' → logprob: -11.57615852355957
    8. ' (' → logprob: -11.70115852355957
    9. ' A' → logprob: -12.07615852355957
    10. '0' → logprob: -12.57615852355957

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2986932098865509
    2. '(' → logprob: -1.4236931800842285
    3. '()' → logprob: -4.2986931800842285
    4. 'input' → logprob: -6.4236931800842285
    5. ' (' → logprob: -6.7986931800842285
    6. '[input' → logprob: -8.173693656921387
    7. ')' → logprob: -8.423693656921387
    8. '(space' → logprob: -9.298693656921387
    9. ' ()' → logprob: -9.673693656921387
    10. '=input' → logprob: -10.423693656921387

Token 24: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20574545860290527
    2. '()' → logprob: -2.2057454586029053
    3. '())' → logprob: -2.5807454586029053
    4. '`)' → logprob: -10.330745697021484
    5. ' )' → logprob: -10.830745697021484
    6. '）' → logprob: -12.205745697021484
    7. '()
' → logprob: -12.455745697021484
    8. '))' → logprob: -12.830745697021484
    9. '')' → logprob: -13.080745697021484
    10. '")' → logprob: -13.455745697021484

Token 25: 'from' (ID: 2845)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.069199562072754
    2. 'max' → logprob: -1.194199562072754
    3. 'print' → logprob: -2.069199562072754
    4. 'answer' → logprob: -2.569199562072754
    5. 'E' → logprob: -3.569199562072754
    6. 'import' → logprob: -3.944199562072754
    7. 'count' → logprob: -4.569199562072754
    8. 'result' → logprob: -4.569199562072754
    9. 'e' → logprob: -4.694199562072754
    10. 'left' → logprob: -4.944199562072754

Token 26: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0066072531044483185
    2. ' sys' → logprob: -5.6316070556640625
    3. 'math' → logprob: -6.2566070556640625
    4. ' fractions' → logprob: -7.3816070556640625
    5. ' itertools' → logprob: -9.006607055664062
    6. ' collections' → logprob: -9.006607055664062
    7. ' datetime' → logprob: -9.381607055664062
    8. ' operator' → logprob: -10.256607055664062
    9. '_' → logprob: -10.381607055664062
    10. 'sys' → logprob: -11.506607055664062

Token 27: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0003571535926312208
    2. ' ceil' → logprob: -8.375357627868652
    3. 'import' → logprob: -9.375357627868652
    4. '	import' → logprob: -11.500357627868652
    5. '.ceil' → logprob: -12.000357627868652
    6. ' imports' → logprob: -12.000357627868652
    7. ' importar' → logprob: -12.125357627868652
    8. ' impor' → logprob: -13.000357627868652
    9. ' min' → logprob: -13.125357627868652
    10. ' Import' → logprob: -13.500357627868652

Token 28: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.02388831600546837
    2. ' ceil' → logprob: -3.773888349533081
    3. 'ce' → logprob: -8.14888858795166
    4. 'floor' → logprob: -8.14888858795166
    5. '.ceil' → logprob: -9.89888858795166
    6. 'cel' → logprob: -11.89888858795166
    7. ' floor' → logprob: -13.27388858795166
    8. 'log' → logprob: -13.89888858795166
    9. 'c' → logprob: -13.89888858795166
    10. ' ce' → logprob: -14.02388858795166

Token 29: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7849509716033936
    2. 'a' → logprob: -2.7849509716033936
    3. 'print' → logprob: -2.7849509716033936
    4. 'E' → logprob: -2.9099509716033936
    5. 'l' → logprob: -3.0349509716033936
    6. 'if' → logprob: -3.4099509716033936
    7. 'A' → logprob: -3.4099509716033936
    8. 'days' → logprob: -3.4099509716033936
    9. 'L' → logprob: -3.6599509716033936
    10. ' max' → logprob: -4.159951210021973

Token 30: 'days' (ID: 20270)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7663561701774597
    2. 'max' → logprob: -1.0163562297821045
    3. 'a' → logprob: -3.1413562297821045
    4. 'total' → logprob: -3.8913562297821045
    5. 'days' → logprob: -4.766355991363525
    6. 'x' → logprob: -4.891355991363525
    7. 'left' → logprob: -5.016355991363525
    8. 'score' → logprob: -5.016355991363525
    9. 't' → logprob: -5.266355991363525
    10. 'count' → logprob: -5.391355991363525

Token 31: '_for' (ID: 11903)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5049697756767273
    2. '=' → logprob: -1.004969835281372
    3. '(' → logprob: -3.504969835281372
    4. ' =(' → logprob: -8.879969596862793
    5. ' (' → logprob: -9.129969596862793
    6. '_' → logprob: -10.004969596862793
    7. '=(' → logprob: -10.754969596862793
    8. '_space' → logprob: -11.129969596862793
    9. ' (=' → logprob: -11.629969596862793
    10. ' ' → logprob: -12.004969596862793

Token 32: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.29916489124298096
    2. 'A' → logprob: -1.674164891242981
    3. '_a' → logprob: -3.1741647720336914
    4. ' A' → logprob: -4.049164772033691
    5. '_' → logprob: -5.174164772033691
    6. ' =' → logprob: -6.799164772033691
    7. '_each' → logprob: -6.799164772033691
    8. '_day' → logprob: -7.549164772033691
    9. '=' → logprob: -7.674164772033691
    10. '=A' → logprob: -8.049164772033691

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026620840653777122
    2. '=' → logprob: -3.651620864868164
    3. '_' → logprob: -8.276620864868164
    4. ')' → logprob: -10.651620864868164
    5. '_to' → logprob: -10.776620864868164
    6. ' ' → logprob: -12.901620864868164
    7. '1' → logprob: -12.901620864868164
    8. 'A' → logprob: -13.276620864868164
    9. '(' → logprob: -13.526620864868164
    10. '_A' → logprob: -13.651620864868164

Token 34: ' ceil' (ID: 35964)
  Prédit: ' ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.22814932465553284
    2. ' A' → logprob: -2.6031494140625
    3. 'ceil' → logprob: -2.7281494140625
    4. ' (' → logprob: -3.7281494140625
    5. ' L' → logprob: -3.7281494140625
    6. 'A' → logprob: -4.9781494140625
    7. '(A' → logprob: -5.3531494140625
    8. '(' → logprob: -5.9781494140625
    9. ' ' → logprob: -6.8531494140625
    10. 'L' → logprob: -7.8531494140625

Token 35: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15758773684501648
    2. '(L' → logprob: -2.282587766647339
    3. '((' → logprob: -3.657587766647339
    4. '(A' → logprob: -4.03258752822876
    5. '(D' → logprob: -9.407588005065918
    6. '(B' → logprob: -9.532588005065918
    7. '(C' → logprob: -10.157588005065918
    8. '(((' → logprob: -11.407588005065918
    9. '(T' → logprob: -11.532588005065918
    10. '(S' → logprob: -12.407588005065918

Token 36: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5764782428741455
    2. '/' → logprob: -0.8264782428741455
    3. '/D' → logprob: -8.201478004455566
    4. '/C' → logprob: -8.576478004455566
    5. '/B' → logprob: -10.201478004455566
    6. '/A' → logprob: -11.201478004455566
    7. ' ' → logprob: -11.826478004455566
    8. '/L' → logprob: -12.076478004455566
    9. ')' → logprob: -13.076478004455566
    10. '/div' → logprob: -13.576478004455566

Token 37: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11784140765666962
    2. 'D' → logprob: -2.2428414821624756
    3. 'B' → logprob: -5.3678412437438965
    4. ' C' → logprob: -8.367841720581055
    5. ' ' → logprob: -9.867841720581055
    6. ' D' → logprob: -10.992841720581055
    7. '   ' → logprob: -11.617841720581055
    8. '  ' → logprob: -11.992841720581055
    9. '100' → logprob: -12.867841720581055
    10. ')' → logprob: -12.992841720581055

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.125005722045898
    4. ')

' → logprob: -14.750005722045898
    5. '),' → logprob: -16.6250057220459
    6. '))' → logprob: -17.5000057220459
    7. '*' → logprob: -17.6250057220459
    8. ')`' → logprob: -18.1250057220459
    9. ')*' → logprob: -18.2500057220459
    10. '')' → logprob: -18.6250057220459

Token 39: 'days' (ID: 20270)
  Prédit: 'days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.1565815657377243
    2. ' days' → logprob: -2.5315816402435303
    3. '+' → logprob: -3.0315816402435303
    4. ')' → logprob: -4.281581401824951
    5. '(days' → logprob: -6.406581401824951
    6. '<|end|>' → logprob: -6.656581401824951
    7. '_days' → logprob: -9.40658187866211
    8. '>' → logprob: -9.78158187866211
    9. ',' → logprob: -10.03158187866211
    10. 'space' → logprob: -10.15658187866211

Token 40: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.12968532741069794
    2. '_' → logprob: -2.129685401916504
    3. 'for' → logprob: -6.129685401916504
    4. '<|end|>' → logprob: -8.504685401916504
    5. '=' → logprob: -9.129685401916504
    6. '_f' → logprob: -9.629685401916504
    7. ' for' → logprob: -9.754685401916504
    8. '_=' → logprob: -10.754685401916504
    9. '_FOR' → logprob: -10.879685401916504
    10. ' _' → logprob: -11.004685401916504

Token 41: '_B' (ID: 3201)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3872136175632477
    2. ' B' → logprob: -1.1372135877609253
    3. '_B' → logprob: -8.387213706970215
    4. '_' → logprob: -10.387213706970215
    5. ' ' → logprob: -10.387213706970215
    6. ' ' → logprob: -11.387213706970215
    7. '	B' → logprob: -11.637213706970215
    8. '>B' → logprob: -11.887213706970215
    9. '(B' → logprob: -12.262213706970215
    10. '<|end|>' → logprob: -12.512213706970215

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994254887104034
    2. '=' → logprob: -2.6949424743652344
    3. ' ' → logprob: -12.319942474365234
    4. '_' → logprob: -14.819942474365234
    5. ' ' → logprob: -15.194942474365234
    6. ')' → logprob: -15.444942474365234
    7. 'space' → logprob: -15.944942474365234
    8. ' ,' → logprob: -16.319942474365234
    9. ' =
' → logprob: -16.694942474365234
    10. ' ==' → logprob: -16.694942474365234

Token 43: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.05489887297153473
    2. ' ceil' → logprob: -2.929898977279663
    3. '.ceil' → logprob: -11.179899215698242
    4. '(' → logprob: -13.804899215698242
    5. ' ' → logprob: -14.804899215698242
    6. 'ce' → logprob: -15.054899215698242
    7. '  ' → logprob: -15.304899215698242
    8. '   ' → logprob: -16.429899215698242
    9. ' ' → logprob: -16.429899215698242
    10. '```' → logprob: -16.679899215698242

Token 44: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.03804401680827141
    2. '(' → logprob: -3.288043975830078
    3. ' (' → logprob: -14.288043975830078
    4. 'B' → logprob: -14.413043975830078
    5. '(D' → logprob: -14.663043975830078
    6. '((' → logprob: -15.288043975830078
    7. ')' → logprob: -15.913043975830078
    8. '(A' → logprob: -16.663043975830078
    9. '(b' → logprob: -16.663043975830078
    10. '(
' → logprob: -16.913043975830078

Token 45: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.11282624304294586
    2. '/' → logprob: -2.237826347351074
    3. ')' → logprob: -13.112826347351074
    4. ' ' → logprob: -14.237826347351074
    5. ' ' → logprob: -14.237826347351074
    6. '<|end|>' → logprob: -15.362826347351074
    7. ' /
' → logprob: -16.612825393676758
    8. ' )' → logprob: -16.800325393676758
    9. 's' → logprob: -17.175325393676758
    10. '[' → logprob: -17.237825393676758

Token 46: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.11292367428541183
    2. 'D' → logprob: -2.2379236221313477
    3. ' ' → logprob: -9.612923622131348
    4. '<|end|>' → logprob: -10.737923622131348
    5. ')' → logprob: -12.487923622131348
    6. '>D' → logprob: -13.112923622131348
    7. ' )' → logprob: -13.112923622131348
    8. '	D' → logprob: -13.737923622131348
    9. '  ' → logprob: -13.862923622131348
    10. '   ' → logprob: -14.112923622131348

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -12.125009536743164
    3. ')
' → logprob: -12.500009536743164
    4. '))' → logprob: -16.125009536743164
    5. ')

' → logprob: -16.125009536743164
    6. '),' → logprob: -16.500009536743164
    7. '`)' → logprob: -16.625009536743164
    8. '')' → logprob: -16.750009536743164
    9. '**' → logprob: -17.375009536743164
    10. ')`' → logprob: -18.000009536743164

Token 48: 'work' (ID: 1596)
  Prédit: ' days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' days' → logprob: -0.5362481474876404
    2. 'days' → logprob: -2.036248207092285
    3. ' max' → logprob: -2.286248207092285
    4. ' L' → logprob: -2.411248207092285
    5. 'max' → logprob: -2.786248207092285
    6. 'L' → logprob: -4.536248207092285
    7. '(days' → logprob: -4.911248207092285
    8. 'if' → logprob: -5.661248207092285
    9. ' if' → logprob: -5.661248207092285
    10. '"' → logprob: -6.786248207092285

Token 49: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -0.4568301737308502
    2. 'ing' → logprob: -1.3318301439285278
    3. 'days' → logprob: -2.8318302631378174
    4. 's' → logprob: -3.9568302631378174
    5. ' =' → logprob: -4.331830024719238
    6. 'ers' → logprob: -5.331830024719238
    7. '_' → logprob: -5.956830024719238
    8. '=' → logprob: -6.331830024719238
    9. '_day' → logprob: -6.831830024719238
    10. 'ed' → logprob: -8.831830024719238

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033722009509801865
    2. '=' → logprob: -3.408721923828125
    3. '_' → logprob: -10.033721923828125
    4. 's' → logprob: -10.783721923828125
    5. ' ' → logprob: -12.783721923828125
    6. ')' → logprob: -13.283721923828125
    7. '_needed' → logprob: -14.033721923828125
    8. '.' → logprob: -14.158721923828125
    9. ' ' → logprob: -14.158721923828125
    10. ' +=' → logprob: -14.408721923828125

Token 51: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.351483553647995
    2. 'max' → logprob: -1.2264835834503174
    3. ' L' → logprob: -6.101483345031738
    4. 'L' → logprob: -7.851483345031738
    5. ' days' → logprob: -8.226483345031738
    6. 'days' → logprob: -9.851483345031738
    7. '	max' → logprob: -10.476483345031738
    8. ' ' → logprob: -11.101483345031738
    9. '(max' → logprob: -11.726483345031738
    10. ' ' → logprob: -12.101483345031738

Token 52: '(days' (ID: 97094)
  Prédit: '(days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(days' → logprob: -0.10024494677782059
    2. '(' → logprob: -2.3502449989318848
    3. '(day' → logprob: -10.475244522094727
    4. ' (' → logprob: -12.100244522094727
    5. '((' → logprob: -13.100244522094727
    6. '(`' → logprob: -14.850244522094727
    7. '(work' → logprob: -14.975244522094727
    8. '(
' → logprob: -14.975244522094727
    9. '(_' → logprob: -15.100244522094727
    10. '([' → logprob: -15.725244522094727

Token 53: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -6.704273118884885e-07
    2. 'for' → logprob: -15.500000953674316
    3. '_' → logprob: -16.125
    4. ')' → logprob: -16.25
    5. '(days' → logprob: -16.25
    6. '_days' → logprob: -17.5
    7. 'For' → logprob: -17.875
    8. '_f' → logprob: -18.125
    9. '_to' → logprob: -18.75
    10. ')_' → logprob: -18.875

Token 54: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0003452368837315589
    2. 'A' → logprob: -8.000345230102539
    3. ')' → logprob: -12.250345230102539
    4. '(A' → logprob: -13.250345230102539
    5. '_B' → logprob: -13.750345230102539
    6. ' A' → logprob: -15.250345230102539
    7. 'А' → logprob: -15.500345230102539
    8. '_' → logprob: -15.500345230102539
    9. '```' → logprob: -15.500345230102539
    10. 'Ａ' → logprob: -15.937845230102539

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010373335098847747
    2. ' ,' → logprob: -6.876037120819092
    3. ',d' → logprob: -14.00103759765625
    4. ')' → logprob: -14.12603759765625
    5. '+' → logprob: -14.25103759765625
    6. ' +' → logprob: -14.50103759765625
    7. ',

' → logprob: -14.75103759765625
    8. ',
' → logprob: -15.12603759765625
    9. 'days' → logprob: -15.12603759765625
    10. '),' → logprob: -15.25103759765625

Token 56: ' days' (ID: 3376)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.08894622325897217
    2. ' days' → logprob: -2.4639463424682617
    3. '(days' → logprob: -12.713946342468262
    4. ' ' → logprob: -13.588946342468262
    5. 'd' → logprob: -14.338946342468262
    6. ')' → logprob: -14.463946342468262
    7. '_days' → logprob: -14.963946342468262
    8. 'day' → logprob: -15.088946342468262
    9. '   ' → logprob: -15.963946342468262
    10. ' ' → logprob: -16.213945388793945

Token 57: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00030709904967807233
    2. ')' → logprob: -8.250307083129883
    3. '_days' → logprob: -10.625307083129883
    4. 'for' → logprob: -11.625307083129883
    5. ')_' → logprob: -12.500307083129883
    6. '_' → logprob: -12.625307083129883
    7. '_f' → logprob: -13.000307083129883
    8. 'For' → logprob: -13.875307083129883
    9. '_)' → logprob: -13.875307083129883
    10. '_FOR' → logprob: -15.000307083129883

Token 58: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.004634707234799862
    2. 'B' → logprob: -5.379634857177734
    3. 'days' → logprob: -12.129634857177734
    4. ')' → logprob: -12.129634857177734
    5. '_A' → logprob: -12.879634857177734
    6. '```' → logprob: -14.754634857177734
    7. '_days' → logprob: -14.879634857177734
    8. 'work' → logprob: -16.379634857177734
    9. '	B' → logprob: -16.504634857177734
    10. ' days' → logprob: -16.879634857177734

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. ')
' → logprob: -10.625038146972656
    3. '+' → logprob: -12.125038146972656
    4. ' )' → logprob: -12.250038146972656
    5. ')+' → logprob: -13.125038146972656
    6. ')

' → logprob: -14.250038146972656
    7. '))' → logprob: -14.625038146972656
    8. ')L' → logprob: -15.750038146972656
    9. '+)' → logprob: -16.500038146972656
    10. ')
' → logprob: -16.625038146972656

Token 60: 'play' (ID: 2003)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9757553935050964
    2. '+' → logprob: -1.6007554531097412
    3. ' if' → logprob: -1.9757554531097412
    4. ' L' → logprob: -2.100755453109741
    5. 'if' → logprob: -2.475755453109741
    6. ' +' → logprob: -3.350755453109741
    7. ' print' → logprob: -3.725755453109741
    8. '+
' → logprob: -5.600755214691162
    9. 'L' → logprob: -5.850755214691162
    10. '1' → logprob: -6.475755214691162

Token 61: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -0.02052483893930912
    2. 'ing' → logprob: -4.395524978637695
    3. 'days' → logprob: -5.145524978637695
    4. 's' → logprob: -6.770524978637695
    5. 'ers' → logprob: -8.395524978637695
    6. '_' → logprob: -8.645524978637695
    7. '_hours' → logprob: -9.520524978637695
    8. '_day' → logprob: -9.645524978637695
    9. 'er' → logprob: -9.770524978637695
    10. ' =' → logprob: -9.895524978637695

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896105736494064
    2. '=' → logprob: -2.463961124420166
    3. '_' → logprob: -11.838960647583008
    4. ' ' → logprob: -12.213960647583008
    5. ' +=' → logprob: -12.838960647583008
    6. 'space' → logprob: -13.588960647583008
    7. ' =
' → logprob: -13.963960647583008
    8. ' ' → logprob: -14.213960647583008
    9. '.' → logprob: -14.713960647583008
    10. 's' → logprob: -14.838960647583008

Token 63: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.22552022337913513
    2. ' L' → logprob: -1.6005202531814575
    3. 'max' → logprob: -10.600520133972168
    4. ' ' → logprob: -10.600520133972168
    5. 'days' → logprob: -10.850520133972168
    6. ' max' → logprob: -11.600520133972168
    7. ' days' → logprob: -12.475520133972168
    8. '	L' → logprob: -12.600520133972168
    9. '0' → logprob: -12.975520133972168
    10. '6' → logprob: -12.975520133972168

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269560307264328
    2. ' -' → logprob: -2.126955986022949
    3. '-work' → logprob: -11.37695598602295
    4. '+' → logprob: -11.62695598602295
    5. '-space' → logprob: -13.12695598602295
    6. '<|end|>' → logprob: -13.25195598602295
    7. ' ' → logprob: -14.12695598602295
    8. ' ' → logprob: -15.12695598602295
    9. '-
' → logprob: -15.25195598602295
    10. '-n' → logprob: -15.25195598602295

Token 65: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0031822288874536753
    2. ' work' → logprob: -5.753182411193848
    3. 'days' → logprob: -13.128182411193848
    4. '	work' → logprob: -13.628182411193848
    5. 'max' → logprob: -13.878182411193848
    6. '(work' → logprob: -15.753182411193848
    7. ' days' → logprob: -16.00318145751953
    8. 'play' → logprob: -17.12818145751953
    9. '.work' → logprob: -17.50318145751953
    10. '_work' → logprob: -17.87818145751953

Token 66: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -0.00015181333583313972
    2. 'days' → logprob: -9.000151634216309
    3. '_' → logprob: -10.750151634216309
    4. '_day' → logprob: -12.375151634216309
    5. ' _' → logprob: -13.875151634216309
    6. ' days' → logprob: -14.750151634216309
    7. '```' → logprob: -14.875151634216309
    8. 'day' → logprob: -15.125151634216309
    9. '_d' → logprob: -15.875151634216309
    10. '_dates' → logprob: -16.125152587890625

Token 67: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0998397246003151
    2. '<|end|>' → logprob: -3.349839687347412
    3. ' print' → logprob: -4.224839687347412
    4. '+' → logprob: -4.224839687347412
    5. '>' → logprob: -4.599839687347412
    6. ')' → logprob: -4.599839687347412
    7. '
' → logprob: -5.849839687347412
    8. '\n' → logprob: -6.224839687347412
    9. '*' → logprob: -6.849839687347412
    10. ' ' → logprob: -7.099839687347412

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000181372175575234
    2. ' print' → logprob: -8.625181198120117
    3. '
' → logprob: -14.375181198120117
    4. '>' → logprob: -15.750181198120117
    5. 'if' → logprob: -15.750181198120117
    6. ' 
' → logprob: -16.125181198120117
    7. '\' → logprob: -16.125181198120117
    8. '\n' → logprob: -16.250181198120117
    9. 'pr' → logprob: -16.625181198120117
    10. ' ' → logprob: -16.875181198120117

Token 69: '(play' (ID: 137893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931533217430115
    2. '(play' → logprob: -0.6931533217430115
    3. '()' → logprob: -13.068153381347656
    4. '(`' → logprob: -13.818153381347656
    5. '('' → logprob: -13.943153381347656
    6. '(print' → logprob: -15.068153381347656
    7. '((' → logprob: -15.193153381347656
    8. 'play' → logprob: -15.318153381347656
    9. '(space' → logprob: -15.443153381347656
    10. '("' → logprob: -15.443153381347656

Token 70: '_days' (ID: 67025)
  Prédit: '_days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_days' → logprob: -1.306760805164231e-05
    2. '_' → logprob: -11.75001335144043
    3. '_d' → logprob: -12.75001335144043
    4. '_day' → logprob: -14.12501335144043
    5. 'days' → logprob: -14.37501335144043
    6. ')' → logprob: -15.12501335144043
    7. '_)' → logprob: -15.37501335144043
    8. ' _' → logprob: -15.62501335144043
    9. '_dates' → logprob: -16.12501335144043
    10. ')_' → logprob: -17.25001335144043

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -17.0
    4. ')
' → logprob: -17.875
    5. ')`' → logprob: -18.0
    6. '`)' → logprob: -19.75
    7. ')}' → logprob: -19.75
    8. '')' → logprob: -19.875
    9. '）' → logprob: -20.75
    10. '),' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 46.38%
Précision adaptée (1ère position): 46.38%
Précision (top 10): 82.61%
================================================================================
