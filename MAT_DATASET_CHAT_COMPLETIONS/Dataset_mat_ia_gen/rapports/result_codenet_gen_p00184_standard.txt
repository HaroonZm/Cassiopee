================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
while True:
    n=int(input())
    if n==0:
        break
    counts=[0]*7
    for _ in range(n):
        a=int(input())
        if a<10:
            counts[0]+=1
        elif a<20:
            counts[1]+=1
        elif a<30:
            counts[2]+=1
        elif a<40:
            counts[3]+=1
        elif a<50:
            counts[4]+=1
        elif a<60:
            counts[5]+=1
        else:
            counts[6]+=1
    print('\n'.join(map(str,counts)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016158436483237892
    2. ' .' → logprob: -9.750161170959473
    3. '.readline' → logprob: -9.875161170959473
    4. '.
' → logprob: -10.625161170959473
    5. '[' → logprob: -11.375161170959473
    6. '.get' → logprob: -12.875161170959473
    7. '```' → logprob: -13.250161170959473
    8. '.

' → logprob: -13.625161170959473
    9. '.setdefault' → logprob: -14.000161170959473
    10. '.stdin' → logprob: -14.125161170959473

Token 6: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.25259676575660706
    2. '.' → logprob: -1.5025967359542847
    3. '.read' → logprob: -7.377596855163574
    4. ' readline' → logprob: -10.752596855163574
    5. '.Read' → logprob: -12.252596855163574
    6. 'read' → logprob: -12.252596855163574
    7. '.readlines' → logprob: -12.502596855163574
    8. '```' → logprob: -13.252596855163574
    9. '.

' → logprob: -13.877596855163574
    10. '<|end|>' → logprob: -13.877596855163574

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03877190500497818
    2. '(' → logprob: -3.288771867752075
    3. '()
' → logprob: -7.913772106170654
    4. '().' → logprob: -8.788771629333496
    5. '(
' → logprob: -9.413771629333496
    6. '()

' → logprob: -10.038771629333496
    7. '()\' → logprob: -10.163771629333496
    8. ')' → logprob: -11.788771629333496
    9. ' ()' → logprob: -12.038771629333496
    10. '())' → logprob: -12.663771629333496

Token 9: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012516485527157784
    2. ' True' → logprob: -4.512516498565674
    3. '  ' → logprob: -7.387516498565674
    4. ' (' → logprob: -7.887516498565674
    5. ' not' → logprob: -9.012516021728516
    6. '(' → logprob: -9.387516021728516
    7. ' )' → logprob: -9.887516021728516
    8. ' ' → logprob: -10.137516021728516
    9. ''' → logprob: -10.637516021728516
    10. '"' → logprob: -10.762516021728516

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009105884470045567
    2. '():' → logprob: -4.759105682373047
    3. ' :' → logprob: -7.884105682373047
    4. '(:' → logprob: -10.134105682373047
    5. ':**' → logprob: -10.634105682373047
    6. '):' → logprob: -11.259105682373047
    7. ' ():' → logprob: -11.259105682373047
    8. ':
' → logprob: -12.384105682373047
    9. '(' → logprob: -12.884105682373047
    10. '   ' → logprob: -13.134105682373047

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007454114966094494
    2. '    ' → logprob: -5.882453918457031
    3. ' ' → logprob: -6.132453918457031
    4. '    
' → logprob: -6.257453918457031
    5. '  
' → logprob: -9.757453918457031
    6. ' 
' → logprob: -9.757453918457031
    7. '```' → logprob: -9.882453918457031
    8. 'a' → logprob: -10.257453918457031
    9. ' readline' → logprob: -10.382453918457031
    10. '(' → logprob: -10.507453918457031

Token 12: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14633207023143768
    2. 'line' → logprob: -2.896332025527954
    3. 'data' → logprob: -3.896332025527954
    4. ' user' → logprob: -4.396332263946533
    5. '   ' → logprob: -4.521332263946533
    6. '    ' → logprob: -4.646332263946533
    7. 'user' → logprob: -4.771332263946533
    8. ' ' → logprob: -5.271332263946533
    9. ' data' → logprob: -5.646332263946533
    10. 's' → logprob: -6.021332263946533

Token 13: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4323604106903076
    2. ' =' → logprob: -1.0573604106903076
    3. '=int' → logprob: -6.307360649108887
    4. ' ==' → logprob: -6.807360649108887
    5. '=input' → logprob: -7.807360649108887
    6. '==' → logprob: -8.682360649108887
    7. ' ' → logprob: -9.057360649108887
    8. ' =)' → logprob: -12.057360649108887
    9. '.strip' → logprob: -12.557360649108887
    10. '=line' → logprob: -12.682360649108887

Token 14: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004112119786441326
    2. '(' → logprob: -5.504112243652344
    3. 'input' → logprob: -10.379112243652344
    4. ' (' → logprob: -14.004112243652344
    5. '(sys' → logprob: -14.129112243652344
    6. ' input' → logprob: -15.379112243652344
    7. '(
' → logprob: -15.379112243652344
    8. '()' → logprob: -15.629112243652344
    9. '(in' → logprob: -15.754112243652344
    10. '=input' → logprob: -16.379112243652344

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002930276095867157
    2. '()))' → logprob: -6.377930164337158
    3. ')' → logprob: -7.252930164337158
    4. '()' → logprob: -7.627930164337158
    5. '))' → logprob: -11.002930641174316
    6. ' ())' → logprob: -11.877930641174316
    7. '())
' → logprob: -12.377930641174316
    8. '(' → logprob: -12.752930641174316
    9. '().' → logprob: -13.877930641174316
    10. '())

' → logprob: -15.127930641174316

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11139418184757233
    2. '<|end|>' → logprob: -2.986394166946411
    3. ' if' → logprob: -3.611394166946411
    4. ' ' → logprob: -4.23639440536499
    5. '    ' → logprob: -5.36139440536499
    6. '\n' → logprob: -5.73639440536499
    7. '```' → logprob: -6.73639440536499
    8. '  ' → logprob: -6.98639440536499
    9. ')' → logprob: -7.11139440536499
    10. '    
' → logprob: -7.23639440536499

Token 17: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5770970582962036
    2. '<|end|>' → logprob: -1.7020970582962036
    3. '   ' → logprob: -2.327096939086914
    4. '    ' → logprob: -2.952096939086914
    5. '\n' → logprob: -3.077096939086914
    6. ' if' → logprob: -3.577096939086914
    7. '\r' → logprob: -4.702096939086914
    8. '  ' → logprob: -5.077096939086914
    9. ' 
' → logprob: -5.452096939086914
    10. ')' → logprob: -6.077096939086914

Token 18: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11534105241298676
    2. ' not' → logprob: -2.2403409481048584
    3. 'n' → logprob: -6.1153411865234375
    4. 'not' → logprob: -8.240341186523438
    5. ' ' → logprob: -10.240341186523438
    6. ' ' → logprob: -11.990341186523438
    7. '	n' → logprob: -14.490341186523438
    8. '	not' → logprob: -15.740341186523438
    9. ' н' → logprob: -16.365341186523438
    10. '(not' → logprob: -17.240341186523438

Token 19: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22586819529533386
    2. '==' → logprob: -1.6008682250976562
    3. '()==' → logprob: -8.850868225097656
    4. '<' → logprob: -9.850868225097656
    5. ')==' → logprob: -9.975868225097656
    6. '<=' → logprob: -10.100868225097656
    7. ' <' → logprob: -10.225868225097656
    8. ' <=' → logprob: -10.350868225097656
    9. '=' → logprob: -10.725868225097656
    10. ')' → logprob: -10.850868225097656

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541546821594238
    2. ' ' → logprob: -1.6004154682159424
    3. '  ' → logprob: -14.662915229797363
    4. '   ' → logprob: -14.725415229797363
    5. ' ' → logprob: -14.975415229797363
    6. '```' → logprob: -15.475415229797363
    7. '    ' → logprob: -15.662915229797363
    8. '=' → logprob: -15.975415229797363
    9. '۰' → logprob: -16.28791618347168
    10. '	' → logprob: -16.60041618347168

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001805010950192809
    2. '   ' → logprob: -7.126804828643799
    3. ':
' → logprob: -7.126804828643799
    4. '       ' → logprob: -8.876805305480957
    5. ' :' → logprob: -10.876805305480957
    6. ' break' → logprob: -11.126805305480957
    7. '	break' → logprob: -11.626805305480957
    8. ':return' → logprob: -12.376805305480957
    9. '    ' → logprob: -13.126805305480957
    10. '\n' → logprob: -13.626805305480957

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009798167739063501
    2. '   ' → logprob: -7.000979900360107
    3. ' break' → logprob: -10.75097942352295
    4. '	break' → logprob: -11.00097942352295
    5. '    ' → logprob: -11.75097942352295
    6. '      ' → logprob: -12.50097942352295
    7. '\n' → logprob: -12.62597942352295
    8. '     ' → logprob: -12.87597942352295
    9. '\t' → logprob: -13.25097942352295
    10. '<|end|>' → logprob: -13.25097942352295

Token 23: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06361798197031021
    2. '       ' → logprob: -3.3136179447174072
    3. 'break' (adapté à ' break') → logprob: -4.188618183135986
    4. '   ' → logprob: -4.688618183135986
    5. '	break' → logprob: -7.063618183135986
    6. '```' → logprob: -11.438617706298828
    7. ' ' → logprob: -12.438617706298828
    8. '_break' → logprob: -12.688617706298828
    9. ' ' → logprob: -13.188617706298828
    10. '    ' → logprob: -13.438617706298828

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039557479321956635
    2. '    
' → logprob: -6.378955841064453
    3. '<|end|>' → logprob: -6.628955841064453
    4. 'print' → logprob: -8.003955841064453
    5. '\n' → logprob: -8.753955841064453
    6. '    ' → logprob: -9.253955841064453
    7. ')' → logprob: -9.378955841064453
    8. '```' → logprob: -9.503955841064453
    9. '<|end|>' → logprob: -10.378955841064453
    10. ' print' → logprob: -10.753955841064453

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004547369200736284
    2. '    
' → logprob: -5.629547595977783
    3. '    ' → logprob: -7.879547595977783
    4. '<|end|>' → logprob: -8.254547119140625
    5. 'print' → logprob: -9.129547119140625
    6. '```' → logprob: -9.754547119140625
    7. '\n' → logprob: -10.379547119140625
    8. '\' → logprob: -10.754547119140625
    9. '  ' → logprob: -11.004547119140625
    10. '    
    
' → logprob: -11.629547119140625

Token 26: ' counts' (ID: 28991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07267977297306061
    2. '    ' → logprob: -3.6976797580718994
    3. ' ' → logprob: -4.3226799964904785
    4. 's' → logprob: -4.6976799964904785
    5. 'sum' → logprob: -4.6976799964904785
    6. 'result' → logprob: -5.8226799964904785
    7. '  ' → logprob: -6.8226799964904785
    8. ' sum' → logprob: -7.0726799964904785
    9. 'count' → logprob: -7.0726799964904785
    10. 'a' → logprob: -7.1976799964904785

Token 27: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10048916935920715
    2. ' =' → logprob: -2.8504891395568848
    3. '[' → logprob: -3.3504891395568848
    4. '={}' → logprob: -6.350489139556885
    5. '=[' → logprob: -7.350489139556885
    6. 's' → logprob: -9.475489616394043
    7. '.setdefault' → logprob: -9.600489616394043
    8. '=[]' → logprob: -10.100489616394043
    9. '_' → logprob: -10.475489616394043
    10. ' =[' → logprob: -10.850489616394043

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016074994346126914
    2. ' ' → logprob: -8.750161170959473
    3. ']' → logprob: -13.375161170959473
    4. '   ' → logprob: -15.000161170959473
    5. 'int' → logprob: -16.000160217285156
    6. ')' → logprob: -16.250160217285156
    7. 'False' → logprob: -16.500160217285156
    8. ' ]' → logprob: -16.750160217285156
    9. '[' → logprob: -17.500160217285156
    10. '  ' → logprob: -17.625160217285156

Token 29: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2026098668575287
    2. ']*' → logprob: -1.952609896659851
    3. ' for' → logprob: -3.3276097774505615
    4. 'for' → logprob: -6.202610015869141
    5. ' ]' → logprob: -6.452610015869141
    6. ']*(' → logprob: -6.702610015869141
    7. ',' → logprob: -7.202610015869141
    8. ']+' → logprob: -11.57761001586914
    9. '	for' → logprob: -11.57761001586914
    10. ')' → logprob: -11.70261001586914

Token 30: '7' (ID: 22)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6640802025794983
    2. '(' → logprob: -1.6640801429748535
    3. '10' → logprob: -2.4140801429748535
    4. '(n' → logprob: -2.7890801429748535
    5. '11' → logprob: -2.9140801429748535
    6. '101' → logprob: -3.4140801429748535
    7. 'n' → logprob: -4.5390801429748535
    8. '6' → logprob: -4.9140801429748535
    9. '51' → logprob: -5.1640801429748535
    10. '400' → logprob: -5.2890801429748535

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0320303440093994
    2. '<|end|>' → logprob: -1.2820303440093994
    3. ' 
' → logprob: -2.4070303440093994
    4. ' ' → logprob: -2.5320303440093994
    5. '   ' → logprob: -2.5320303440093994
    6. '\n' → logprob: -3.1570303440093994
    7. '    
' → logprob: -4.15703010559082
    8. '  
' → logprob: -4.65703010559082
    9. ' for' → logprob: -4.65703010559082
    10. '   
' → logprob: -5.03203010559082

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5921069979667664
    2. ' for' → logprob: -1.3421070575714111
    3. 'for' → logprob: -1.7171070575714111
    4. '<|end|>' → logprob: -5.467106819152832
    5. '    
' → logprob: -7.342106819152832
    6. '	for' → logprob: -7.842106819152832
    7. '
' → logprob: -8.467106819152832
    8. '    ' → logprob: -9.217106819152832
    9. '\n' → logprob: -9.342106819152832
    10. ' 
' → logprob: -9.842106819152832

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0043999748304486275
    2. ' for' → logprob: -5.75439977645874
    3. 'nums' → logprob: -7.75439977645874
    4. 'numbers' → logprob: -8.129400253295898
    5. 'arr' → logprob: -8.504400253295898
    6. 'data' → logprob: -9.754400253295898
    7. 's' → logprob: -10.004400253295898
    8. 'days' → logprob: -10.254400253295898
    9. 'scores' → logprob: -10.504400253295898
    10. '   ' → logprob: -10.629400253295898

Token 34: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10192321240901947
    2. '_' → logprob: -2.6019232273101807
    3. ' range' → logprob: -4.101922988891602
    4. ' i' → logprob: -5.101922988891602
    5. ' ' → logprob: -9.476922988891602
    6. 'range' → logprob: -9.976922988891602
    7. '_range' → logprob: -11.351922988891602
    8. 'i' → logprob: -12.726922988891602
    9. '_i' → logprob: -13.101922988891602
    10. ' n' → logprob: -13.476922988891602

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026650320738554
    2. 'in' → logprob: -3.6516504287719727
    3. 'range' → logprob: -8.026650428771973
    4. ' ' → logprob: -11.526650428771973
    5. '_' → logprob: -12.526650428771973
    6. ' _' → logprob: -12.901650428771973
    7. 'i' → logprob: -13.401650428771973
    8. ' range' → logprob: -13.401650428771973
    9. '  ' → logprob: -13.901650428771973
    10. 'n' → logprob: -13.901650428771973

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06199547275900841
    2. ' range' → logprob: -2.811995506286621
    3. 'input' → logprob: -11.561995506286621
    4. '[' → logprob: -12.436995506286621
    5. ' ' → logprob: -12.561995506286621
    6. 'rang' → logprob: -13.186995506286621
    7. '	range' → logprob: -13.811995506286621
    8. 'r' → logprob: -13.811995506286621
    9. '(range' → logprob: -13.936995506286621
    10. 'ran' → logprob: -13.936995506286621

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0053652566857635975
    2. ' (' → logprob: -5.630365371704102
    3. '(' → logprob: -6.505365371704102
    4. ' n' → logprob: -8.255365371704102
    5. 'n' → logprob: -11.880365371704102
    6. ' ' → logprob: -14.380365371704102
    7. '(range' → logprob: -14.880365371704102
    8. ' range' → logprob: -15.880365371704102
    9. '	n' → logprob: -16.3803653717041
    10. '(nn' → logprob: -17.3803653717041

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016573284519836307
    2. ')' → logprob: -6.626657485961914
    3. ':' → logprob: -9.126657485961914
    4. '+' → logprob: -9.251657485961914
    5. '):
' → logprob: -9.251657485961914
    6. ' ):' → logprob: -11.001657485961914
    7. '   ' → logprob: -11.876657485961914
    8. '7' → logprob: -13.751657485961914
    9. '():' → logprob: -13.876657485961914
    10. '6' → logprob: -14.001657485961914

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3561931252479553
    2. '   ' → logprob: -1.2311930656433105
    3. ' line' → logprob: -6.8561930656433105
    4. ' numbers' → logprob: -6.8561930656433105
    5. ' s' → logprob: -7.2311930656433105
    6. ' x' → logprob: -7.3561930656433105
    7. ' data' → logprob: -7.7311930656433105
    8. ' day' → logprob: -7.8561930656433105
    9. ' tokens' → logprob: -7.8561930656433105
    10. ' parts' → logprob: -8.106193542480469

Token 40: ' a' (ID: 261)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.2087916135787964
    2. '   ' → logprob: -1.3337916135787964
    3. ' day' → logprob: -2.583791732788086
    4. ' data' → logprob: -3.083791732788086
    5. ' s' → logprob: -3.833791732788086
    6. ' counts' → logprob: -3.833791732788086
    7. 'numbers' → logprob: -3.958791732788086
    8. ' nums' → logprob: -3.958791732788086
    9. ' days' → logprob: -4.083791732788086
    10. 'a' (adapté à ' a') → logprob: -4.083791732788086

Token 41: '=int' (ID: 37431)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.14150908589363098
    2. '=' → logprob: -3.0165090560913086
    3. ' =' → logprob: -3.2665090560913086
    4. '=int' → logprob: -3.6415090560913086
    5. ',' → logprob: -4.516509056091309
    6. '=input' → logprob: -5.641509056091309
    7. 'b' → logprob: -7.266509056091309
    8. ' ,' → logprob: -7.516509056091309
    9. ',a' → logprob: -7.891509056091309
    10. ',l' → logprob: -8.141509056091309

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. 'input' → logprob: -13.87500286102295
    4. ' (' → logprob: -16.125001907348633
    5. ' input' → logprob: -17.125001907348633
    6. '=input' → logprob: -17.500001907348633
    7. ',input' → logprob: -17.500001907348633
    8. '<input' → logprob: -18.625001907348633
    9. '	input' → logprob: -19.375001907348633
    10. '(
' → logprob: -20.375001907348633

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018079936504364014
    2. '()' → logprob: -4.26807975769043
    3. '())
' → logprob: -5.64307975769043
    4. ')' → logprob: -8.01807975769043
    5. '())
' → logprob: -11.01807975769043
    6. '()
' → logprob: -11.51807975769043
    7. '())

' → logprob: -12.01807975769043
    8. ' ())' → logprob: -13.51807975769043
    9. '().' → logprob: -13.64307975769043
    10. '(' → logprob: -13.89307975769043

Token 44: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7999725341796875
    2. '       ' → logprob: -1.2999725341796875
    3. ' counts' → logprob: -1.5499725341796875
    4. 'counts' → logprob: -3.4249725341796875
    5. '<|end|>' → logprob: -4.2999725341796875
    6. '
' → logprob: -5.0499725341796875
    7. '[' → logprob: -5.6749725341796875
    8. ')' → logprob: -6.5499725341796875
    9. '[count' → logprob: -6.6749725341796875
    10. '    ' → logprob: -6.7999725341796875

Token 45: ' if' (ID: 538)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.11184880882501602
    2. ' counts' → logprob: -2.361848831176758
    3. 'if' (adapté à ' if') → logprob: -4.611848831176758
    4. 'for' → logprob: -7.361848831176758
    5. ' if' → logprob: -7.486848831176758
    6. '   ' → logprob: -8.986848831176758
    7. ' for' → logprob: -9.236848831176758
    8. 'count' → logprob: -9.361848831176758
    9. '```' → logprob: -10.236848831176758
    10. '       ' → logprob: -11.111848831176758

Token 46: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5298581719398499
    2. ' a' → logprob: -1.154858112335205
    3. 'a' → logprob: -3.029858112335205
    4. '1' → logprob: -3.279858112335205
    5. '0' → logprob: -4.779858112335205
    6. '6' → logprob: -7.529858112335205
    7. '2' → logprob: -8.279858589172363
    8. '7' → logprob: -8.529858589172363
    9. '3' → logprob: -8.654858589172363
    10. '4' → logprob: -9.029858589172363

Token 47: '<' (ID: 27)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8968570232391357
    2. '>' → logprob: -1.1468570232391357
    3. '==' → logprob: -2.1468570232391357
    4. '<=' → logprob: -3.2718570232391357
    5. ' >=' → logprob: -3.7718570232391357
    6. '%' → logprob: -3.8968570232391357
    7. ' >' → logprob: -3.8968570232391357
    8. ' ==' → logprob: -4.021857261657715
    9. '<' → logprob: -4.021857261657715
    10. ' in' → logprob: -5.521857261657715

Token 48: '10' (ID: 702)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.457954466342926
    2. '0' → logprob: -1.4579544067382812
    3. '1' → logprob: -2.3329544067382812
    4. '=' → logprob: -4.082954406738281
    5. ' ' → logprob: -5.082954406738281
    6. '4' → logprob: -5.207954406738281
    7. '3' → logprob: -5.832954406738281
    8. '6' → logprob: -6.082954406738281
    9. '5' → logprob: -6.707954406738281
    10. '2' → logprob: -6.707954406738281

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004142268560826778
    2. ':
' → logprob: -5.6291422843933105
    3. ' :' → logprob: -8.129141807556152
    4. ' or' → logprob: -9.254141807556152
    5. '):' → logprob: -10.004141807556152
    6. '       ' → logprob: -10.379141807556152
    7. '[' → logprob: -10.629141807556152
    8. ' and' → logprob: -11.754141807556152
    9. '   ' → logprob: -11.879141807556152
    10. ' :
' → logprob: -11.879141807556152

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1721113920211792
    2. '           ' → logprob: -1.9221113920211792
    3. ':' → logprob: -4.547111511230469
    4. '   ' → logprob: -8.297111511230469
    5. '               ' → logprob: -8.797111511230469
    6. ' or' → logprob: -8.922111511230469
    7. ':
' → logprob: -9.422111511230469
    8. '      ' → logprob: -9.422111511230469
    9. '	       ' → logprob: -9.547111511230469
    10. '        ' → logprob: -9.672111511230469

Token 51: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6976323127746582
    2. 'counts' (adapté à ' counts') → logprob: -0.6976323127746582
    3. '           ' → logprob: -6.322632312774658
    4. '               ' → logprob: -6.697632312774658
    5. '   ' → logprob: -6.947632312774658
    6. '       ' → logprob: -8.5726318359375
    7. '_counts' → logprob: -9.6976318359375
    8. ' ' → logprob: -9.8226318359375
    9. 'count' → logprob: -10.1976318359375
    10. 'continue' → logprob: -10.4476318359375

Token 52: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.08894796669483185
    2. '[' → logprob: -2.4639480113983154
    3. ' [' → logprob: -13.338948249816895
    4. 'a' → logprob: -13.588948249816895
    5. '[c' → logprob: -13.838948249816895
    6. '[-' → logprob: -14.088948249816895
    7. '\[' → logprob: -14.463948249816895
    8. '[A' → logprob: -14.713948249816895
    9. '[int' → logprob: -14.838948249816895
    10. '```' → logprob: -15.213948249816895

Token 53: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04011570289731026
    2. '0' → logprob: -3.2901155948638916
    3. '6' → logprob: -7.165115833282471
    4. '1' → logprob: -7.165115833282471
    5. ' a' → logprob: -7.790115833282471
    6. ' ' → logprob: -10.165115356445312
    7. '5' → logprob: -10.790115356445312
    8. '4' → logprob: -11.165115356445312
    9. '2' → logprob: -11.165115356445312
    10. '3' → logprob: -11.290115356445312

Token 54: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.160518079996109
    2. ']+=' → logprob: -1.9105180501937866
    3. ' ]' → logprob: -8.285517692565918
    4. ']+' → logprob: -10.160517692565918
    5. '+' → logprob: -13.785517692565918
    6. '+=' → logprob: -14.160517692565918
    7. '+]' → logprob: -15.285517692565918
    8. '']' → logprob: -15.410517692565918
    9. ']++;
' → logprob: -16.035518646240234
    10. '[' → logprob: -16.160518646240234

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -10.000085830688477
    3. 'a' → logprob: -10.125085830688477
    4. ' a' → logprob: -15.000085830688477
    5. '0' → logprob: -15.875085830688477
    6. '10' → logprob: -16.000085830688477
    7. '2' → logprob: -16.500085830688477
    8. 'counts' → logprob: -17.250085830688477
    9. '3' → logprob: -17.687585830688477
    10. '100' → logprob: -17.750085830688477

Token 56: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8319756984710693
    2. '       ' → logprob: -1.5819756984710693
    3. '
' → logprob: -1.7069756984710693
    4. ' elif' → logprob: -1.9569756984710693
    5. '<|end|>' → logprob: -3.9569756984710693
    6. '   ' → logprob: -5.081975936889648
    7. ' else' → logprob: -5.581975936889648
    8. '	elif' → logprob: -6.206975936889648
    9. 'else' → logprob: -6.581975936889648
    10. ' ' → logprob: -7.331975936889648

Token 57: '       ' (ID: 309)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.9219489693641663
    2. 'elif' → logprob: -0.9219489693641663
    3. '       ' → logprob: -1.6719489097595215
    4. '   ' → logprob: -4.5469489097595215
    5. ' else' → logprob: -6.2969489097595215
    6. '
' → logprob: -6.4219489097595215
    7. '	elif' → logprob: -6.9219489097595215
    8. ' ' → logprob: -7.6719489097595215
    9. 'else' → logprob: -7.9219489097595215
    10. '<|end|>' → logprob: -8.54694938659668

Token 58: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.16084414720535278
    2. 'elif' (adapté à ' elif') → logprob: -1.910844087600708
    3. ' else' → logprob: -7.910844326019287
    4. '	elif' → logprob: -8.535843849182129
    5. '   ' → logprob: -10.660843849182129
    6. 'else' → logprob: -10.785843849182129
    7. '<|end|>' → logprob: -12.535843849182129
    8. ' ' → logprob: -12.660843849182129
    9. '    ' → logprob: -13.285843849182129
    10. '  ' → logprob: -13.660843849182129

Token 59: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.30458202958106995
    2. 'a' → logprob: -1.4295819997787476
    3. ' ' → logprob: -4.304582118988037
    4. '10' → logprob: -4.679582118988037
    5. '20' → logprob: -8.554581642150879
    6. '	a' → logprob: -10.054581642150879
    7. '9' → logprob: -10.429581642150879
    8. '1' → logprob: -11.179581642150879
    9. '30' → logprob: -11.304581642150879
    10. '100' → logprob: -11.554581642150879

Token 60: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01144341193139553
    2. ' <' → logprob: -4.511443614959717
    3. '>=' → logprob: -8.386443138122559
    4. '<=' → logprob: -9.511443138122559
    5. ' ' → logprob: -10.636443138122559
    6. '20' → logprob: -10.761443138122559
    7. '10' → logprob: -11.511443138122559
    8. '0' → logprob: -11.761443138122559
    9. ' >=' → logprob: -11.886443138122559
    10. '[' → logprob: -12.761443138122559

Token 61: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.004574780818074942
    2. '100' → logprob: -5.754574775695801
    3. '50' → logprob: -7.254574775695801
    4. '30' → logprob: -8.2545747756958
    5. ' ' → logprob: -9.0045747756958
    6. '60' → logprob: -9.3795747756958
    7. '=' → logprob: -9.8795747756958
    8. '40' → logprob: -10.3795747756958
    9. '15' → logprob: -10.8170747756958
    10. '200' → logprob: -11.1920747756958

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006080126389861107
    2. ':
' → logprob: -5.131080150604248
    3. '       ' → logprob: -9.75607967376709
    4. '<|end|>' → logprob: -10.13107967376709
    5. '           ' → logprob: -10.63107967376709
    6. '):' → logprob: -11.50607967376709
    7. '   ' → logprob: -12.25607967376709
    8. ' :' → logprob: -12.25607967376709
    9. ':

' → logprob: -13.50607967376709
    10. ')' → logprob: -13.88107967376709

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12372090667486191
    2. ' counts' → logprob: -2.87372088432312
    3. 'counts' → logprob: -2.87372088432312
    4. '1' → logprob: -6.248721122741699
    5. '               ' → logprob: -7.873721122741699
    6. ' ' → logprob: -8.3737211227417
    7. '[' → logprob: -8.4987211227417
    8. '       ' → logprob: -8.6237211227417
    9. '   ' → logprob: -8.7487211227417
    10. '0' → logprob: -9.6237211227417

Token 64: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.005310485139489174
    2. ' counts' → logprob: -5.255310535430908
    3. '1' → logprob: -9.63031005859375
    4. 'count' → logprob: -12.25531005859375
    5. '           ' → logprob: -12.63031005859375
    6. ' ' → logprob: -14.00531005859375
    7. '               ' → logprob: -14.88031005859375
    8. '0' → logprob: -15.00531005859375
    9. '2' → logprob: -15.00531005859375
    10. '       ' → logprob: -15.25531005859375

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. '1' → logprob: -11.625009536743164
    3. ' [' → logprob: -15.875009536743164
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '[
' → logprob: -17.625009536743164
    7. 's' → logprob: -18.000009536743164
    8. '][' → logprob: -18.000009536743164
    9. '\[' → logprob: -18.625009536743164
    10. '       ' → logprob: -18.625009536743164

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -16.187501907348633
    4. '   ' → logprob: -16.437501907348633
    5. '```' → logprob: -16.437501907348633
    6. '2' → logprob: -17.125001907348633
    7. '0' → logprob: -17.187501907348633
    8. '１' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.125001907348633
    10. '3' → logprob: -18.312501907348633

Token 67: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.0007811574032530189
    2. ']' → logprob: -7.250781059265137
    3. '+=' → logprob: -9.875781059265137
    4. ' ]' → logprob: -11.250781059265137
    5. ']+' → logprob: -12.375781059265137
    6. '```' → logprob: -13.750781059265137
    7. '   ' → logprob: -14.750781059265137
    8. '[' → logprob: -14.750781059265137
    9. '']' → logprob: -15.375781059265137
    10. '+' → logprob: -16.250782012939453

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -18.7500057220459
    4. '１' → logprob: -18.8750057220459
    5. 'count' → logprob: -19.5000057220459
    6. '۱' → logprob: -19.8125057220459
    7. '   ' → logprob: -19.8125057220459
    8. '2' → logprob: -19.9375057220459
    9. '10' → logprob: -20.1250057220459
    10. '```' → logprob: -20.1250057220459

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010110783390700817
    2. 'elif' → logprob: -4.760110855102539
    3. '<|end|>' → logprob: -6.885110855102539
    4. 'else' → logprob: -8.760110855102539
    5. '```' → logprob: -9.135110855102539
    6. ' elif' → logprob: -9.135110855102539
    7. ')' → logprob: -10.885110855102539
    8. ' else' → logprob: -11.135110855102539
    9. '[' → logprob: -11.385110855102539
    10. '	elif' → logprob: -11.385110855102539

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006654949975199997
    2. 'elif' → logprob: -7.750665664672852
    3. '```' → logprob: -9.000665664672852
    4. 'else' → logprob: -10.125665664672852
    5. ' elif' → logprob: -10.375665664672852
    6. '<|end|>' → logprob: -10.875665664672852
    7. ' else' → logprob: -11.125665664672852
    8. '	elif' → logprob: -13.250665664672852
    9. '   ' → logprob: -13.500665664672852
    10. ')' → logprob: -14.250665664672852

Token 71: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.02242995984852314
    2. ' elif' → logprob: -3.897429943084717
    3. 'else' → logprob: -6.522429943084717
    4. '       ' → logprob: -8.147430419921875
    5. ' else' → logprob: -9.272430419921875
    6. '	elif' → logprob: -10.897430419921875
    7. '   ' → logprob: -11.772430419921875
    8. '```' → logprob: -12.897430419921875
    9. ' ' → logprob: -13.272430419921875
    10. 'el' → logprob: -14.147430419921875

Token 72: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10093637555837631
    2. 'a' → logprob: -2.4759364128112793
    3. ' ' → logprob: -5.100936412811279
    4. '30' → logprob: -5.350936412811279
    5. '20' → logprob: -6.850936412811279
    6. '   ' → logprob: -11.100935935974121
    7. '	a' → logprob: -12.350935935974121
    8. '25' → logprob: -12.600935935974121
    9. '    ' → logprob: -13.725935935974121
    10. '29' → logprob: -13.975935935974121

Token 73: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -5.538490950129926e-05
    2. ' <' → logprob: -10.625055313110352
    3. '20' → logprob: -10.875055313110352
    4. '30' → logprob: -12.000055313110352
    5. '>=' → logprob: -13.500055313110352
    6. '[' → logprob: -14.500055313110352
    7. '2' → logprob: -14.750055313110352
    8. '```' → logprob: -14.750055313110352
    9. '0' → logprob: -15.000055313110352
    10. '<int' → logprob: -15.125055313110352

Token 74: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.8908587662735954e-05
    2. '3' → logprob: -11.125019073486328
    3. '40' → logprob: -13.125019073486328
    4. ' ' → logprob: -14.125019073486328
    5. '50' → logprob: -15.250019073486328
    6. '300' → logprob: -15.750019073486328
    7. '۳۰' → logprob: -16.000019073486328
    8. '```' → logprob: -16.062519073486328
    9. '=' → logprob: -16.250019073486328
    10. '0' → logprob: -16.375019073486328

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6881940960884094
    2. '[' → logprob: -0.8131940960884094
    3. '           ' → logprob: -3.3131940364837646
    4. '       ' → logprob: -4.188194274902344
    5. ':
' → logprob: -6.563194274902344
    6. '<|end|>' → logprob: -7.938194274902344
    7. '               ' → logprob: -8.563194274902344
    8. ' counts' → logprob: -9.063194274902344
    9. 'counts' → logprob: -9.313194274902344
    10. '```' → logprob: -9.938194274902344

Token 76: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.1263885796070099
    2. '           ' → logprob: -2.6263885498046875
    3. ' counts' → logprob: -3.5013885498046875
    4. '[' → logprob: -4.5013885498046875
    5. '       ' → logprob: -6.2513885498046875
    6. '               ' → logprob: -6.7513885498046875
    7. '2' → logprob: -7.1263885498046875
    8. '```' → logprob: -8.126388549804688
    9. '1' → logprob: -8.376388549804688
    10. '   ' → logprob: -8.626388549804688

Token 77: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.006741304416209459
    2. ' counts' → logprob: -5.006741523742676
    3. 'count' → logprob: -10.631741523742676
    4. '           ' → logprob: -14.506741523742676
    5. '_counts' → logprob: -14.631741523742676
    6. '```' → logprob: -14.881741523742676
    7. '       ' → logprob: -16.00674057006836
    8. '1' → logprob: -16.50674057006836
    9. '   ' → logprob: -16.50674057006836
    10. ' ' → logprob: -16.63174057006836

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.625000953674316
    3. '```' → logprob: -16.125001907348633
    4. ' [' → logprob: -17.750001907348633
    5. '﻿' → logprob: -19.625001907348633
    6. '][' → logprob: -19.750001907348633
    7. '       ' → logprob: -20.000001907348633
    8. '[
' → logprob: -20.000001907348633
    9. ''[' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.750001907348633

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -17.125
    5. '3' → logprob: -17.5625
    6. '۲' → logprob: -17.9375
    7. '２' → logprob: -18.125
    8. '  ' → logprob: -18.4375
    9. '२' → logprob: -18.6875
    10. '২' → logprob: -18.875

Token 80: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.06297065317630768
    2. '+=' → logprob: -2.8129706382751465
    3. ']' → logprob: -7.9379706382751465
    4. ']+' → logprob: -8.062971115112305
    5. '[' → logprob: -8.437971115112305
    6. '+' → logprob: -9.937971115112305
    7. ' +=' → logprob: -10.562971115112305
    8. '<|end|>' → logprob: -10.812971115112305
    9. '```' → logprob: -12.187971115112305
    10. '   ' → logprob: -13.062971115112305

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'count' → logprob: -16.0
    4. 'counts' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '+' → logprob: -18.375
    7. '<|end|>' → logprob: -19.25
    8. 'a' → logprob: -19.5
    9. '１' → logprob: -20.375
    10. '30' → logprob: -20.875

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003218349302187562
    2. 'elif' → logprob: -6.253218173980713
    3. '<|end|>' → logprob: -7.128218173980713
    4. ' elif' → logprob: -8.378218650817871
    5. '```' → logprob: -8.628218650817871
    6. '        
' → logprob: -11.003218650817871
    7. '[' → logprob: -11.378218650817871
    8. '   ' → logprob: -11.503218650817871
    9. 'else' → logprob: -11.878218650817871
    10. '	elif' → logprob: -12.128218650817871

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023545464500784874
    2. 'elif' → logprob: -3.773545503616333
    3. ' elif' → logprob: -8.898545265197754
    4. '```' → logprob: -9.023545265197754
    5. '   ' → logprob: -11.023545265197754
    6. 'else' → logprob: -11.148545265197754
    7. '<|end|>' → logprob: -12.023545265197754
    8. '	elif' → logprob: -12.773545265197754
    9. '        
' → logprob: -14.398545265197754
    10. '``' → logprob: -14.523545265197754

Token 84: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0002955399686470628
    2. ' elif' → logprob: -8.625295639038086
    3. '       ' → logprob: -9.750295639038086
    4. '```' → logprob: -10.375295639038086
    5. 'else' → logprob: -11.125295639038086
    6. '   ' → logprob: -11.625295639038086
    7. '	elif' → logprob: -14.250295639038086
    8. '[' → logprob: -14.625295639038086
    9. '``' → logprob: -15.375295639038086
    10. 'el' → logprob: -15.625295639038086

Token 85: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22554220259189606
    2. 'a' → logprob: -1.6005421876907349
    3. '30' → logprob: -9.725542068481445
    4. '40' → logprob: -9.850542068481445
    5. ' ' → logprob: -11.475542068481445
    6. '   ' → logprob: -13.475542068481445
    7. '20' → logprob: -13.600542068481445
    8. ' ' → logprob: -13.975542068481445
    9. '(a' → logprob: -14.350542068481445
    10. '10' → logprob: -14.475542068481445

Token 86: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -2.463036435074173e-05
    2. '30' → logprob: -11.625024795532227
    3. ' <' → logprob: -11.875024795532227
    4. '40' → logprob: -11.875024795532227
    5. '>=' → logprob: -14.625024795532227
    6. '```' → logprob: -15.625024795532227
    7. '()<' → logprob: -15.875024795532227
    8. '<int' → logprob: -16.125024795532227
    9. '<num' → logprob: -16.125024795532227
    10. '[' → logprob: -16.250024795532227

Token 87: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.875007629394531
    3. '4' → logprob: -13.125007629394531
    4. '50' → logprob: -13.937507629394531
    5. '35' → logprob: -14.562507629394531
    6. '400' → logprob: -15.250007629394531
    7. '45' → logprob: -16.00000762939453
    8. '  ' → logprob: -16.06250762939453
    9. '60' → logprob: -16.12500762939453
    10. '   ' → logprob: -16.25000762939453

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004777568392455578
    2. ':
' → logprob: -5.754777431488037
    3. '       ' → logprob: -6.879777431488037
    4. '           ' → logprob: -7.629777431488037
    5. '[' → logprob: -9.629777908325195
    6. '   ' → logprob: -12.004777908325195
    7. ' :' → logprob: -12.129777908325195
    8. '               ' → logprob: -13.379777908325195
    9. ':
' → logprob: -13.879777908325195
    10. '):' → logprob: -14.504777908325195

Token 89: '           ' (ID: 352)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6761121153831482
    2. 'counts' → logprob: -1.301112174987793
    3. '           ' → logprob: -1.551112174987793
    4. '       ' → logprob: -5.301112174987793
    5. '               ' → logprob: -6.801112174987793
    6. 'count' → logprob: -7.051112174987793
    7. '```' → logprob: -9.051112174987793
    8. '   ' → logprob: -10.301112174987793
    9. '_counts' → logprob: -10.551112174987793
    10. '          ' → logprob: -12.176112174987793

Token 90: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.0004319804720580578
    2. ' counts' → logprob: -7.750432014465332
    3. 'count' → logprob: -13.750432014465332
    4. '           ' → logprob: -15.875432014465332
    5. '   ' → logprob: -17.250431060791016
    6. '       ' → logprob: -17.500431060791016
    7. '```' → logprob: -18.125431060791016
    8. '[' → logprob: -18.750431060791016
    9. '               ' → logprob: -18.750431060791016
    10. '_counts' → logprob: -18.750431060791016

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.249780638725497e-05
    2. '3' → logprob: -10.375032424926758
    3. '```' → logprob: -13.875032424926758
    4. ' [' → logprob: -16.875032424926758
    5. '+=' → logprob: -16.875032424926758
    6. '       ' → logprob: -17.250032424926758
    7. '\[' → logprob: -17.500032424926758
    8. '+' → logprob: -17.500032424926758
    9. '   ' → logprob: -17.750032424926758
    10. '[
' → logprob: -18.125032424926758

Token 92: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.875
    4. '３' → logprob: -18.125
    5. '۳' → logprob: -18.4375
    6. '[' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '0' → logprob: -19.1875
    9. '৩' → logprob: -19.3125
    10. ']' → logprob: -19.5625

Token 93: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.005491652991622686
    2. '+=' → logprob: -5.380491733551025
    3. ']' → logprob: -7.255491733551025
    4. ']+' → logprob: -9.255491256713867
    5. ' ]' → logprob: -11.255491256713867
    6. '       ' → logprob: -11.380491256713867
    7. '           ' → logprob: -11.380491256713867
    8. '```' → logprob: -11.505491256713867
    9. ' +=' → logprob: -12.130491256713867
    10. '   ' → logprob: -12.505491256713867

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002342912630410865
    2. 'counts' → logprob: -8.375234603881836
    3. 'count' → logprob: -13.125234603881836
    4. ' counts' → logprob: -14.125234603881836
    5. ' ' → logprob: -14.375234603881836
    6. '0' → logprob: -14.875234603881836
    7. '+' → logprob: -17.000234603881836
    8. '```' → logprob: -17.750234603881836
    9. '2' → logprob: -17.875234603881836
    10. '[' → logprob: -18.375234603881836

Token 95: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007217261008918285
    2. 'elif' → logprob: -7.6257219314575195
    3. '<|end|>' → logprob: -9.12572193145752
    4. '```' → logprob: -9.25072193145752
    5. ' elif' → logprob: -11.62572193145752
    6. '   ' → logprob: -11.75072193145752
    7. 'else' → logprob: -12.62572193145752
    8. '           ' → logprob: -12.75072193145752
    9. '        
' → logprob: -13.87572193145752
    10. 'counts' → logprob: -14.37572193145752

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015079588629305363
    2. 'elif' → logprob: -6.501507759094238
    3. ' elif' → logprob: -12.501507759094238
    4. '   ' → logprob: -14.126507759094238
    5. '```' → logprob: -14.376507759094238
    6. 'else' → logprob: -14.751507759094238
    7. '           ' → logprob: -16.126508712768555
    8. '	elif' → logprob: -16.501508712768555
    9. '      ' → logprob: -17.751508712768555
    10. '     ' → logprob: -18.751508712768555

Token 97: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00011439072113716975
    2. 'else' → logprob: -9.500114440917969
    3. '       ' → logprob: -10.500114440917969
    4. '   ' → logprob: -11.875114440917969
    5. ' elif' → logprob: -12.375114440917969
    6. '```' → logprob: -14.625114440917969
    7. '	elif' → logprob: -15.250114440917969
    8. 'elseif' → logprob: -17.12511444091797
    9. '           ' → logprob: -18.75011444091797
    10. '#elif' → logprob: -19.00011444091797

Token 98: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06229424104094505
    2. 'a' → logprob: -2.8122942447662354
    3. '40' → logprob: -8.687294006347656
    4. ' ' → logprob: -8.937294006347656
    5. '   ' → logprob: -11.437294006347656
    6. '	a' → logprob: -12.187294006347656
    7. '    ' → logprob: -13.062294006347656
    8. '50' → logprob: -13.374794006347656
    9. '  ' → logprob: -13.374794006347656
    10. '30' → logprob: -14.374794006347656

Token 99: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -3.881560041918419e-05
    2. ' <' → logprob: -11.000039100646973
    3. '40' → logprob: -11.375039100646973
    4. '[' → logprob: -11.750039100646973
    5. ' ' → logprob: -14.625039100646973
    6. '>=' → logprob: -15.000039100646973
    7. '60' → logprob: -15.000039100646973
    8. '()<' → logprob: -16.000038146972656
    9. 'a' → logprob: -16.250038146972656
    10. '```' → logprob: -16.250038146972656

Token 100: '50' (ID: 1434)
  Prédit: '50'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -5.6934557505883276e-05
    2. ' ' → logprob: -10.000057220458984
    3. '60' → logprob: -12.000057220458984
    4. '5' → logprob: -14.187557220458984
    5. '45' → logprob: -14.250057220458984
    6. '51' → logprob: -14.562557220458984
    7. '70' → logprob: -14.687557220458984
    8. '40' → logprob: -14.750057220458984
    9. '   ' → logprob: -15.000057220458984
    10. '100' → logprob: -15.250057220458984

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6006298661231995
    2. ':
' → logprob: -1.3506298065185547
    3. '           ' → logprob: -2.1006298065185547
    4. '[' → logprob: -2.7256298065185547
    5. '       ' → logprob: -5.475629806518555
    6. '```' → logprob: -9.350629806518555
    7. '               ' → logprob: -9.600629806518555
    8. '   ' → logprob: -9.600629806518555
    9. '          ' → logprob: -10.475629806518555
    10. ' :
' → logprob: -10.475629806518555

Token 102: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.8166274428367615
    2. '           ' → logprob: -1.3166275024414062
    3. '       ' → logprob: -1.9416275024414062
    4. ' counts' → logprob: -1.9416275024414062
    5. '4' → logprob: -6.816627502441406
    6. 'count' → logprob: -7.441627502441406
    7. '[' → logprob: -7.566627502441406
    8. '```' → logprob: -7.941627502441406
    9. '   ' → logprob: -8.566627502441406
    10. '               ' → logprob: -8.941627502441406

Token 103: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.002475777640938759
    2. ' counts' → logprob: -6.002475738525391
    3. '           ' → logprob: -16.87747573852539
    4. '       ' → logprob: -18.00247573852539
    5. '```' → logprob: -18.12747573852539
    6. '_counts' → logprob: -18.25247573852539
    7. 'count' → logprob: -18.62747573852539
    8. '   ' → logprob: -19.12747573852539
    9. '               ' → logprob: -19.75247573852539
    10. '[' → logprob: -19.87747573852539

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '4' → logprob: -16.125
    3. '```' → logprob: -16.625
    4. ' [' → logprob: -17.875
    5. '`' → logprob: -19.5
    6. '[
' → logprob: -19.75
    7. '(' → logprob: -20.125
    8. '   ' → logprob: -20.625
    9. '\[' → logprob: -20.875
    10. '﻿' → logprob: -20.875

Token 105: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.625001907348633
    4. '４' → logprob: -16.500001907348633
    5. '```' → logprob: -16.500001907348633
    6. '۴' → logprob: -16.562501907348633
    7. '[' → logprob: -16.625001907348633
    8. '  ' → logprob: -17.187501907348633
    9. '' → logprob: -17.187501907348633
    10. '४' → logprob: -17.437501907348633

Token 106: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.009001916274428368
    2. '+=' → logprob: -4.759001731872559
    3. '[' → logprob: -8.509001731872559
    4. ']' → logprob: -9.259001731872559
    5. ']+' → logprob: -10.259001731872559
    6. '       ' → logprob: -11.009001731872559
    7. '```' → logprob: -11.134001731872559
    8. '   ' → logprob: -11.509001731872559
    9. '           ' → logprob: -12.134001731872559
    10. ' +=' → logprob: -12.759001731872559

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. 'counts' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.250001907348633
    4. 'count' → logprob: -16.375001907348633
    5. '+' → logprob: -16.875001907348633
    6. ' counts' → logprob: -17.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. '+=' → logprob: -19.125001907348633
    9. '0' → logprob: -19.375001907348633
    10. '１' → logprob: -19.500001907348633

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.061676347395405e-05
    2. 'else' → logprob: -10.25005054473877
    3. 'elif' → logprob: -11.87505054473877
    4. '```' → logprob: -12.50005054473877
    5. '   ' → logprob: -12.87505054473877
    6. '<|end|>' → logprob: -14.00005054473877
    7. ' else' → logprob: -14.37505054473877
    8. '           ' → logprob: -14.75005054473877
    9. '[' → logprob: -16.750051498413086
    10. ' elif' → logprob: -16.875051498413086

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025311444187536836
    2. 'else' → logprob: -8.500252723693848
    3. 'elif' → logprob: -10.125252723693848
    4. '```' → logprob: -12.500252723693848
    5. '   ' → logprob: -12.625252723693848
    6. ' else' → logprob: -13.125252723693848
    7. '           ' → logprob: -15.250252723693848
    8. ' elif' → logprob: -15.500252723693848
    9. '<|end|>' → logprob: -16.750253677368164
    10. '[' → logprob: -17.250253677368164

Token 110: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3161584138870239
    2. 'elif' (adapté à ' elif') → logprob: -1.316158413887024
    3. '       ' → logprob: -6.066158294677734
    4. '   ' → logprob: -7.566158294677734
    5. '```' → logprob: -10.066158294677734
    6. ' else' → logprob: -11.566158294677734
    7. ' elif' → logprob: -13.066158294677734
    8. '	elif' → logprob: -15.941158294677734
    9. '``' → logprob: -15.941158294677734
    10. '[' → logprob: -15.941158294677734

Token 111: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20186595618724823
    2. 'a' → logprob: -1.7018659114837646
    3. ' ' → logprob: -8.451866149902344
    4. '50' → logprob: -8.701866149902344
    5. '60' → logprob: -10.576866149902344
    6. '   ' → logprob: -11.201866149902344
    7. '	a' → logprob: -11.576866149902344
    8. '40' → logprob: -12.326866149902344
    9. '(a' → logprob: -12.576866149902344
    10. '100' → logprob: -12.576866149902344

Token 112: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -2.641841820150148e-05
    2. '50' → logprob: -11.50002670288086
    3. ' <' → logprob: -11.87502670288086
    4. '60' → logprob: -12.37502670288086
    5. '[' → logprob: -14.00002670288086
    6. '<=' → logprob: -14.12502670288086
    7. '```' → logprob: -14.75002670288086
    8. '<int' → logprob: -15.00002670288086
    9. ' ' → logprob: -15.25002670288086
    10. '40' → logprob: -15.62502670288086

Token 113: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -8.006006828509271e-05
    2. '70' → logprob: -9.750080108642578
    3. '55' → logprob: -12.375080108642578
    4. '50' → logprob: -12.375080108642578
    5. '100' → logprob: -12.875080108642578
    6. '80' → logprob: -13.437580108642578
    7. '51' → logprob: -13.812580108642578
    8. '56' → logprob: -14.000080108642578
    9. '600' → logprob: -14.062580108642578
    10. '90' → logprob: -14.250080108642578

Token 114: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6367959380149841
    2. ':' → logprob: -1.011795997619629
    3. ':
' → logprob: -3.011795997619629
    4. '           ' → logprob: -3.386795997619629
    5. '       ' → logprob: -3.761795997619629
    6. '   ' → logprob: -7.636795997619629
    7. 'counts' → logprob: -8.761795997619629
    8. '][' → logprob: -8.886795997619629
    9. '               ' → logprob: -9.636795997619629
    10. '[count' → logprob: -9.761795997619629

Token 115: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.09565375000238419
    2. ' counts' → logprob: -2.720653772354126
    3. '           ' → logprob: -3.845653772354126
    4. '       ' → logprob: -5.595653533935547
    5. 'count' → logprob: -9.220653533935547
    6. '   ' → logprob: -9.845653533935547
    7. '               ' → logprob: -10.220653533935547
    8. '5' → logprob: -10.470653533935547
    9. '7' → logprob: -10.845653533935547
    10. '```' → logprob: -11.095653533935547

Token 116: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.00033546582562848926
    2. ' counts' → logprob: -8.000335693359375
    3. 'count' → logprob: -17.375335693359375
    4. '1' → logprob: -17.750335693359375
    5. '6' → logprob: -18.000335693359375
    6. '5' → logprob: -18.625335693359375
    7. '0' → logprob: -19.125335693359375
    8. '   ' → logprob: -19.875335693359375
    9. '       ' → logprob: -20.125335693359375
    10. '```' → logprob: -20.375335693359375

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. '5' → logprob: -11.625009536743164
    3. '```' → logprob: -14.750009536743164
    4. ' [' → logprob: -16.375009536743164
    5. '][' → logprob: -17.375009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '6' → logprob: -19.125009536743164
    8. '[
' → logprob: -19.500009536743164
    9. '>[' → logprob: -19.625009536743164
    10. '       ' → logprob: -19.625009536743164

Token 118: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.62500286102295
    4. '6' → logprob: -15.12500286102295
    5. '```' → logprob: -15.25000286102295
    6. '2' → logprob: -15.62500286102295
    7. '1' → logprob: -15.68750286102295
    8. '4' → logprob: -15.87500286102295
    9. '
' → logprob: -16.000003814697266
    10. '  ' → logprob: -16.375003814697266

Token 119: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.0006467910134233534
    2. '+=' → logprob: -7.750646591186523
    3. ']' → logprob: -8.625646591186523
    4. ' ]' → logprob: -11.250646591186523
    5. ']+' → logprob: -11.625646591186523
    6. '   ' → logprob: -12.000646591186523
    7. '       ' → logprob: -13.000646591186523
    8. '```' → logprob: -13.375646591186523
    9. '[' → logprob: -13.500646591186523
    10. '           ' → logprob: -13.750646591186523

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. 'counts' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.750014305114746
    4. 'count' → logprob: -14.500014305114746
    5. ' counts' → logprob: -15.750014305114746
    6. '+' → logprob: -15.750014305114746
    7. '0' → logprob: -17.25001335144043
    8. '   ' → logprob: -17.87501335144043
    9. '+=' → logprob: -18.12501335144043
    10. '[' → logprob: -18.12501335144043

Token 121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08021047711372375
    2. 'else' → logprob: -2.5802104473114014
    3. ' else' → logprob: -7.2052106857299805
    4. '   ' → logprob: -8.20521068572998
    5. '[' → logprob: -9.08021068572998
    6. 'counts' → logprob: -9.58021068572998
    7. '           ' → logprob: -10.08021068572998
    8. '```' → logprob: -10.20521068572998
    9. '<|end|>' → logprob: -11.45521068572998
    10. ' counts' → logprob: -11.70521068572998

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1287619024515152
    2. 'else' → logprob: -2.1287620067596436
    3. ' else' → logprob: -6.3787617683410645
    4. '   ' → logprob: -9.378762245178223
    5. '```' → logprob: -10.378762245178223
    6. 'elif' → logprob: -11.753762245178223
    7. '[' → logprob: -12.378762245178223
    8. '           ' → logprob: -12.753762245178223
    9. 'counts' → logprob: -13.503762245178223
    10. '	else' → logprob: -13.878762245178223

Token 123: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00047595196519978344
    2. ' else' → logprob: -8.125475883483887
    3. '       ' → logprob: -8.750475883483887
    4. '   ' → logprob: -11.125475883483887
    5. 'elif' → logprob: -12.000475883483887
    6. '	else' → logprob: -14.875475883483887
    7. '[' → logprob: -16.250476837158203
    8. '```' → logprob: -16.375476837158203
    9. '_else' → logprob: -18.625476837158203
    10. '}else' → logprob: -19.375476837158203

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10038426518440247
    2. ':
' → logprob: -2.35038423538208
    3. '           ' → logprob: -9.600384712219238
    4. ':
' → logprob: -9.725384712219238
    5. '[' → logprob: -10.475384712219238
    6. '       ' → logprob: -11.850384712219238
    7. ':

' → logprob: -12.600384712219238
    8. ' counts' → logprob: -13.475384712219238
    9. '_counts' → logprob: -13.600384712219238
    10. 'counts' → logprob: -13.725384712219238

Token 125: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.5602669715881348
    2. ' counts' → logprob: -1.0602669715881348
    3. '           ' → logprob: -2.5602669715881348
    4. '       ' → logprob: -5.310266971588135
    5. '   ' → logprob: -8.310266494750977
    6. '               ' → logprob: -9.935266494750977
    7. 'count' → logprob: -10.060266494750977
    8. '```' → logprob: -11.810266494750977
    9. '_counts' → logprob: -12.185266494750977
    10. ' ' → logprob: -12.435266494750977

Token 126: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.0024758970830589533
    2. ' counts' → logprob: -6.002475738525391
    3. '           ' → logprob: -16.25247573852539
    4. '   ' → logprob: -16.25247573852539
    5. '       ' → logprob: -17.62747573852539
    6. ' ' → logprob: -18.25247573852539
    7. '               ' → logprob: -18.37747573852539
    8. 'count' → logprob: -18.50247573852539
    9. '  ' → logprob: -20.00247573852539
    10. '_counts' → logprob: -20.12747573852539

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '6' → logprob: -14.875000953674316
    3. '```' → logprob: -16.5
    4. '[
' → logprob: -17.625
    5. '[-' → logprob: -18.125
    6. '
' → logprob: -19.125
    7. ' [' → logprob: -19.75
    8. '\[' → logprob: -19.75
    9. '][' → logprob: -20.25
    10. '>[' → logprob: -20.75

Token 128: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '۶' → logprob: -16.75
    4. '６' → logprob: -17.5
    5. '٦' → logprob: -17.625
    6. '[' → logprob: -17.625
    7. '६' → logprob: -17.75
    8. '   ' → logprob: -18.75
    9. '৬' → logprob: -18.8125
    10. '```' → logprob: -18.875

Token 129: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.010587077587842941
    2. '+=' → logprob: -4.760587215423584
    3. ']' → logprob: -6.385587215423584
    4. '[' → logprob: -8.260586738586426
    5. ']+' → logprob: -11.135586738586426
    6. '```' → logprob: -11.885586738586426
    7. ' ]' → logprob: -13.635586738586426
    8. '   ' → logprob: -14.135586738586426
    9. '']' → logprob: -14.135586738586426
    10. ' +=' → logprob: -14.760586738586426

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -18.375
    4. 'count' → logprob: -18.625
    5. '```' → logprob: -19.5625
    6. '0' → logprob: -19.875
    7. '１' → logprob: -20.125
    8. '6' → logprob: -20.25
    9. '[' → logprob: -20.4375
    10. 'a' → logprob: -20.8125

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03741595521569252
    2. '
' → logprob: -3.9124159812927246
    3. 'print' → logprob: -4.912415981292725
    4. 'for' → logprob: -5.662415981292725
    5. ' for' → logprob: -5.787415981292725
    6. '    
' → logprob: -6.037415981292725
    7. ' print' → logprob: -8.287415504455566
    8. '```' → logprob: -8.912415504455566
    9. '        
' → logprob: -11.287415504455566
    10. ' 
' → logprob: -11.787415504455566

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6340637803077698
    2. 'print' → logprob: -1.259063720703125
    3. 'for' → logprob: -2.259063720703125
    4. ' for' → logprob: -2.884063720703125
    5. '
' → logprob: -4.009063720703125
    6. ' print' → logprob: -5.384063720703125
    7. '    
' → logprob: -6.259063720703125
    8. 'total' → logprob: -8.259063720703125
    9. 'sum' → logprob: -8.884063720703125
    10. '```' → logprob: -9.634063720703125

Token 133: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6299120187759399
    2. 'print' (adapté à ' print') → logprob: -0.8799120187759399
    3. ' for' → logprob: -3.8799118995666504
    4. 'max' → logprob: -3.8799118995666504
    5. '   ' → logprob: -4.87991189956665
    6. ' print' → logprob: -6.37991189956665
    7. 'total' → logprob: -6.87991189956665
    8. '
' → logprob: -8.004912376403809
    9. ' max' → logprob: -8.379912376403809
    10. 'sum' → logprob: -9.004912376403809

Token 134: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.08497592061758041
    2. '('' → logprob: -3.0849759578704834
    3. '(sum' → logprob: -4.334975719451904
    4. '("' → logprob: -4.459975719451904
    5. '(' → logprob: -4.959975719451904
    6. '(max' → logprob: -5.959975719451904
    7. '(count' → logprob: -7.459975719451904
    8. '(len' → logprob: -7.459975719451904
    9. '(min' → logprob: -9.334976196289062
    10. '(tuple' → logprob: -9.834976196289062

Token 135: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0503695122897625
    2. 'max' → logprob: -4.050369739532471
    3. 'sum' → logprob: -4.925369739532471
    4. '*' → logprob: -4.925369739532471
    5. ''*' → logprob: -5.300369739532471
    6. 'counts' → logprob: -5.800369739532471
    7. 'count' → logprob: -6.175369739532471
    8. ' '.' → logprob: -6.425369739532471
    9. ''.' → logprob: -6.550369739532471
    10. '"' → logprob: -6.800369739532471

Token 136: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.001922683441080153
    2. '".' → logprob: -6.626922607421875
    3. ''' → logprob: -7.626922607421875
    4. ' '.' → logprob: -9.751922607421875
    5. ''\' → logprob: -11.501922607421875
    6. '''.' → logprob: -11.626922607421875
    7. '.join' → logprob: -12.376922607421875
    8. '')' → logprob: -12.376922607421875
    9. 'join' → logprob: -12.501922607421875
    10. ''*' → logprob: -12.626922607421875

Token 137: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. ' join' → logprob: -14.750000953674316
    3. 'jo' → logprob: -16.75
    4. 'j' → logprob: -17.125
    5. 'print' → logprob: -18.0
    6. '(join' → logprob: -18.0
    7. '```' → logprob: -19.875
    8. '.join' → logprob: -19.875
    9. 'sep' → logprob: -20.25
    10. 'strip' → logprob: -20.5

Token 138: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16235318779945374
    2. '(str' → logprob: -1.9123531579971313
    3. '([' → logprob: -6.537353038787842
    4. 'map' → logprob: -7.912353038787842
    5. '(list' → logprob: -8.287353515625
    6. '(' → logprob: -10.287353515625
    7. '(f' → logprob: -11.537353515625
    8. 'str' → logprob: -12.162353515625
    9. '[str' → logprob: -12.412353515625
    10. '(['' → logprob: -12.787353515625

Token 139: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0009247996495105326
    2. 'str' → logprob: -7.000924587249756
    3. '(' → logprob: -11.500925064086914
    4. ')' → logprob: -13.500925064086914
    5. '```' → logprob: -14.375925064086914
    6. '[str' → logprob: -15.125925064086914
    7. ' str' → logprob: -15.500925064086914
    8. '=str' → logprob: -15.500925064086914
    9. ')(' → logprob: -16.250925064086914
    10. ',str' → logprob: -16.375925064086914

Token 140: ',' (ID: 11)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.02473440393805504
    2. ',' → logprob: -4.1497344970703125
    3. ',count' → logprob: -4.7747344970703125
    4. '(' → logprob: -9.149734497070312
    5. 'counts' → logprob: -10.274734497070312
    6. ' ,' → logprob: -10.524734497070312
    7. ' counts' → logprob: -10.899734497070312
    8. ' (' → logprob: -11.149734497070312
    9. ',(' → logprob: -11.399734497070312
    10. '[count' → logprob: -11.899734497070312

Token 141: 'counts' (ID: 99089)
  Prédit: 'counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.004115323536098003
    2. ' counts' → logprob: -5.504115104675293
    3. 'count' → logprob: -10.254115104675293
    4. '(count' → logprob: -13.504115104675293
    5. '[count' → logprob: -15.504115104675293
    6. '   ' → logprob: -17.50411605834961
    7. '_counts' → logprob: -20.37911605834961
    8. '[' → logprob: -20.75411605834961
    9. ' count' → logprob: -20.87911605834961
    10. ' ' → logprob: -21.62911605834961

Token 142: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.313276082277298
    2. ')))' → logprob: -1.3132760524749756
    3. '))))' → logprob: -12.188276290893555
    4. ')' → logprob: -12.438276290893555
    5. '))
' → logprob: -12.563276290893555
    6. ')))
' → logprob: -14.313276290893555
    7. ' ))' → logprob: -14.563276290893555
    8. '}))' → logprob: -15.563276290893555
    9. '))+' → logprob: -15.813276290893555
    10. '()))' → logprob: -15.938276290893555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 50.71%
Précision adaptée (1ère position): 58.57%
Précision (top 10): 89.29%
================================================================================
