================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect
input = sys.stdin.readline

N, K, L = map(int, input().split())
a = list(map(int, input().split()))

# On veut trouver le L-ième plus petit nombre des K-ième plus petits éléments
# de toutes sous-séquences contiguës de longueur >= K.
# Pour chaque nombre x, on peut compter combien de sous-séquences ont comme K-ième plus petit élément <= x.
# Utiliser une recherche binaire sur la valeur.

def count_subarrays(x):
    # Pour un x donné, compte le nombre de sous-tableaux dont le K-ième plus petit élément <= x.
    # On transforme a en b où b[i]=1 si a[i] <= x sinon 0.
    # Pour que le K-ieme plus petit <= x, il faut qu'il y ait au moins K éléments <= x dans la sous-séquence.
    # Donc on cherche le nombre de sous-tableaux contigus avec au moins K uns.
    b = [0]*(N+1)
    for i in range(N):
        b[i+1] = b[i] + (1 if a[i] <= x else 0)
    # On compte le nombre de paires (l,r) avec b[r] - b[l] >= K, l<r.
    # Comme b est croissante par l'ajout de 0 ou 1, on peut gérer par deux pointeurs.
    res = 0
    r = 0
    for l in range(N+1):
        while r <= N and b[r] - b[l] < K:
            r += 1
        if r > N:
            break
        res += N - r + 1
    return res

left, right = 1, N
while left < right:
    mid = (left + right) // 2
    c = count_subarrays(mid)
    if c >= L:
        right = mid
    else:
        left = mid + 1

print(left)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.500108141452074e-05
    2. 't' → logprob: -10.750035285949707
    3. 'e' → logprob: -11.875035285949707
    4. 'ected' → logprob: -13.000035285949707
    5. 'ec' → logprob: -13.125035285949707
    6. 'ection' → logprob: -13.625035285949707
    7. '```' → logprob: -14.875035285949707
    8. 'ectl' → logprob: -15.500035285949707
    9. 'ector' → logprob: -16.25003433227539
    10. '\' → logprob: -16.62503433227539

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016111204400658607
    2. '<|end|>' → logprob: -5.516111373901367
    3. '\' → logprob: -6.016111373901367
    4. '\n' → logprob: -6.141111373901367
    5. '' → logprob: -6.391111373901367
    6. '
' → logprob: -6.641111373901367
    7. '

' → logprob: -6.766111373901367
    8. 'import' → logprob: -7.391111373901367
    9. '```' → logprob: -7.766111373901367
    10. ',' → logprob: -8.016111373901367

Token 7: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.530555009841919
    2. '
' → logprob: -1.905555009841919
    3. '.' → logprob: -2.530555009841919
    4. 'def' → logprob: -3.030555009841919
    5. '' → logprob: -3.655555009841919
    6. 'import' → logprob: -3.780555009841919
    7. '


' → logprob: -4.03055477142334
    8. '```' → logprob: -4.78055477142334
    9. '\n' → logprob: -5.03055477142334
    10. ' ' → logprob: -5.03055477142334

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035518433433026075
    2. '.' → logprob: -5.878551959991455
    3. '=' → logprob: -8.253551483154297
    4. '```' → logprob: -9.128551483154297
    5. '()' → logprob: -9.253551483154297
    6. ')' → logprob: -9.378551483154297
    7. '<|end|>' → logprob: -10.253551483154297
    8. ' (' → logprob: -10.503551483154297
    9. '(
' → logprob: -10.628551483154297
    10. '[' → logprob: -10.753551483154297

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.129831925034523
    2. ' sys' → logprob: -2.1298320293426514
    3. 'input' → logprob: -5.879831790924072
    4. ' input' → logprob: -9.25483226776123
    5. '	sys' → logprob: -12.50483226776123
    6. 'lambda' → logprob: -13.12983226776123
    7. '=sys' → logprob: -13.25483226776123
    8. '(sys' → logprob: -14.87983226776123
    9. 'raw' → logprob: -15.50483226776123
    10. ' lambda' → logprob: -15.50483226776123

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0028975941240787506
    2. '.readline' → logprob: -6.2528977394104
    3. '.stdin' → logprob: -7.2528977394104
    4. ' .' → logprob: -9.377897262573242
    5. '.\' → logprob: -10.752897262573242
    6. '.get' → logprob: -11.002897262573242
    7. '.argv' → logprob: -11.002897262573242
    8. '.stdout' → logprob: -11.127897262573242
    9. '.<' → logprob: -11.627897262573242
    10. ''.' → logprob: -11.752897262573242

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0038754926063120365
    2. '.read' → logprob: -5.628875255584717
    3. 'read' → logprob: -8.878875732421875
    4. '.' → logprob: -9.253875732421875
    5. '.readlines' → logprob: -10.628875732421875
    6. '_read' → logprob: -11.628875732421875
    7. '.Read' → logprob: -13.378875732421875
    8. '.buffer' → logprob: -13.378875732421875
    9. 'Read' → logprob: -13.878875732421875
    10. '-read' → logprob: -14.253875732421875

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5384760499000549
    2. '()' → logprob: -0.9134760499000549
    3. '(
' → logprob: -4.53847599029541
    4. '
' → logprob: -6.53847599029541
    5. '()
' → logprob: -6.91347599029541
    6. '()

' → logprob: -7.78847599029541
    7. '(

' → logprob: -8.16347599029541
    8. '\n' → logprob: -8.41347599029541
    9. '

' → logprob: -8.66347599029541
    10. 'def' → logprob: -8.91347599029541

Token 13: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1606500744819641
    2. 'def' → logprob: -2.1606500148773193
    3. '()' → logprob: -3.6606500148773193
    4. '(n' → logprob: -6.160650253295898
    5. '(
' → logprob: -6.535650253295898
    6. 'n' → logprob: -6.660650253295898
    7. 'for' → logprob: -7.910650253295898
    8. '.' → logprob: -8.035650253295898
    9. ')' → logprob: -8.660650253295898
    10. 's' → logprob: -8.785650253295898

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7336593866348267
    2. ' ' → logprob: -1.1086593866348267
    3. '=' → logprob: -2.358659267425537
    4. ',' → logprob: -2.483659267425537
    5. ' ,' → logprob: -5.358659267425537
    6. ')' → logprob: -6.108659267425537
    7. '<|end|>' → logprob: -6.233659267425537
    8. '  ' → logprob: -6.983659267425537
    9. ' )' → logprob: -8.108659744262695
    10. '[' → logprob: -8.358659744262695

Token 15: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.867948055267334
    2. ' K' → logprob: -1.117948055267334
    3. 'M' → logprob: -2.242948055267334
    4. 'K' → logprob: -2.367948055267334
    5. ' ' → logprob: -3.492948055267334
    6. 'space' → logprob: -4.742948055267334
    7. 'int' → logprob: -5.617948055267334
    8. '=' → logprob: -6.117948055267334
    9. 'input' → logprob: -6.367948055267334
    10. ' space' → logprob: -6.992948055267334

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02057388611137867
    2. '=' → logprob: -3.895573854446411
    3. ',' → logprob: -11.145573616027832
    4. ' ' → logprob: -11.395573616027832
    5. ' ,' → logprob: -12.395573616027832
    6. ' =",' → logprob: -14.520573616027832
    7. ' =
' → logprob: -14.770573616027832
    8. '<|end|>' → logprob: -15.020573616027832
    9. ' ='' → logprob: -15.395573616027832
    10. ' ="' → logprob: -15.520573616027832

Token 17: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9933270812034607
    2. ' M' → logprob: -1.1183271408081055
    3. ' =' → logprob: -1.8683271408081055
    4. ' L' → logprob: -3.3683271408081055
    5. '=' → logprob: -3.8683271408081055
    6. ' A' → logprob: -3.8683271408081055
    7. ' Q' → logprob: -4.1183271408081055
    8. ' X' → logprob: -4.3683271408081055
    9. 'M' → logprob: -4.8683271408081055
    10. ' T' → logprob: -5.3683271408081055

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193750858306885
    2. '=' → logprob: -1.5019375085830688
    3. ',' → logprob: -12.251937866210938
    4. '=input' → logprob: -13.126937866210938
    5. ' ' → logprob: -13.751937866210938
    6. '=list' → logprob: -16.001937866210938
    7. ')' → logprob: -16.251937866210938
    8. '=line' → logprob: -16.376937866210938
    9. '=sys' → logprob: -16.751937866210938
    10. '=int' → logprob: -17.251937866210938

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04305616766214371
    2. 'map' → logprob: -3.1680562496185303
    3. ' list' → logprob: -10.29305648803711
    4. ' input' → logprob: -11.66805648803711
    5. 'list' → logprob: -12.66805648803711
    6. 'input' → logprob: -12.66805648803711
    7. ' ' → logprob: -13.16805648803711
    8. '[' → logprob: -13.29305648803711
    9. ' [' → logprob: -13.66805648803711
    10. '(map' → logprob: -13.91805648803711

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7130246162414551
    2. '(' → logprob: -0.8380246162414551
    3. '(lambda' → logprob: -2.963024616241455
    4. '(str' → logprob: -4.088024616241455
    5. '(input' → logprob: -4.838024616241455
    6. '(len' → logprob: -8.463024139404297
    7. '(list' → logprob: -9.338024139404297
    8. 'int' → logprob: -9.463024139404297
    9. '<|end|>' → logprob: -9.463024139404297
    10. '(eval' → logprob: -9.713024139404297

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11081888526678085
    2. '(' → logprob: -2.735818862915039
    3. ')' → logprob: -3.610818862915039
    4. '(input' → logprob: -5.235818862915039
    5. '(sys' → logprob: -5.610818862915039
    6. ',input' → logprob: -6.610818862915039
    7. '<|end|>' → logprob: -7.235818862915039
    8. '(data' → logprob: -8.110818862915039
    9. 'input' → logprob: -8.360818862915039
    10. '(int' → logprob: -8.860818862915039

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6932294964790344
    2. ' input' → logprob: -0.6932294964790344
    3. ' sys' → logprob: -9.818229675292969
    4. 'sys' → logprob: -10.943229675292969
    5. ')' → logprob: -11.818229675292969
    6. ' ' → logprob: -13.943229675292969
    7. '(input' → logprob: -14.318229675292969
    8. ',input' → logprob: -14.443229675292969
    9. '=input' → logprob: -15.193229675292969
    10. ' )' → logprob: -15.693229675292969

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8677978515625
    2. '())' → logprob: -0.8677978515625
    3. '()' → logprob: -1.8677978515625
    4. ')' → logprob: -5.7427978515625
    5. '()))' → logprob: -6.8677978515625
    6. '(' → logprob: -7.7427978515625
    7. '());' → logprob: -7.9927978515625
    8. '();)' → logprob: -9.4927978515625
    9. '()),' → logprob: -9.7427978515625
    10. '()[' → logprob: -9.8677978515625

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7003510594367981
    2. 'strip' → logprob: -0.7003510594367981
    3. 'rstrip' → logprob: -4.950351238250732
    4. 'read' → logprob: -9.325350761413574
    5. ')' → logprob: -12.325350761413574
    6. ' split' → logprob: -13.575350761413574
    7. ' strip' → logprob: -13.950350761413574
    8. '(split' → logprob: -14.575350761413574
    9. '-strip' → logprob: -15.200350761413574
    10. '_split' → logprob: -15.450350761413574

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.805981972021982e-05
    2. '())' → logprob: -10.00009822845459
    3. '))' → logprob: -10.37509822845459
    4. '()' → logprob: -11.00009822845459
    5. '`)' → logprob: -13.62509822845459
    6. '),' → logprob: -13.87509822845459
    7. ')`' → logprob: -13.87509822845459
    8. ')
' → logprob: -15.12509822845459
    9. '(' → logprob: -15.25009822845459
    10. '```' → logprob: -15.37509822845459

Token 26: 'a' (ID: 64)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6906760931015015
    2. 'arr' → logprob: -2.315676212310791
    3. ')
' → logprob: -2.815676212310791
    4. 'sizes' → logprob: -2.815676212310791
    5. 'weights' → logprob: -3.065676212310791
    6. 'a' → logprob: -3.065676212310791
    7. ')' → logprob: -3.190676212310791
    8. 'data' → logprob: -3.690676212310791
    9. '```' → logprob: -3.690676212310791
    10. 'numbers' → logprob: -3.815676212310791

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05195827782154083
    2. '=' → logprob: -3.0519583225250244
    3. 'rr' → logprob: -6.551958084106445
    4. ' ' → logprob: -7.051958084106445
    5. ',' → logprob: -7.926958084106445
    6. 'rray' → logprob: -8.551958084106445
    7. 's' → logprob: -9.051958084106445
    8. '_list' → logprob: -9.801958084106445
    9. '[' → logprob: -9.926958084106445
    10. 'r' → logprob: -9.926958084106445

Token 28: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3155997097492218
    2. 'list' → logprob: -1.3155996799468994
    3. ' [' → logprob: -6.4405999183654785
    4. '[' → logprob: -7.9405999183654785
    5. ' []' → logprob: -8.69059944152832
    6. '[list' → logprob: -8.94059944152832
    7. '[]' → logprob: -9.56559944152832
    8. ' ' → logprob: -12.94059944152832
    9. '[int' → logprob: -12.94059944152832
    10. ' sorted' → logprob: -13.44059944152832

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04489953815937042
    2. '(map' → logprob: -3.2948994636535645
    3. '(int' → logprob: -5.6698994636535645
    4. '(range' → logprob: -6.0448994636535645
    5. '()' → logprob: -8.169899940490723
    6. '(a' → logprob: -8.419899940490723
    7. '(

' → logprob: -9.419899940490723
    8. '(input' → logprob: -9.669899940490723
    9. '(.' → logprob: -10.044899940490723
    10. '(np' → logprob: -10.169899940490723

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011319868644932285
    2. '(' → logprob: -9.625113487243652
    3. 'int' → logprob: -10.750113487243652
    4. '<int' → logprob: -11.625113487243652
    5. '=int' → logprob: -12.250113487243652
    6. '[int' → logprob: -12.250113487243652
    7. '(lambda' → logprob: -13.000113487243652
    8. '(str' → logprob: -13.625113487243652
    9. ',int' → logprob: -13.750113487243652
    10. '<|end|>' → logprob: -14.500113487243652

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0022171074524521828
    2. '(' → logprob: -6.3772172927856445
    3. ',input' → logprob: -7.7522172927856445
    4. ',' → logprob: -9.627217292785645
    5. 'input' → logprob: -11.627217292785645
    6. ')' → logprob: -12.877217292785645
    7. '=input' → logprob: -13.377217292785645
    8. '(int' → logprob: -13.627217292785645
    9. ' (' → logprob: -13.627217292785645
    10. ' input' → logprob: -14.252217292785645

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0076065086759626865
    2. ' input' → logprob: -4.882606506347656
    3. '(input' → logprob: -16.132606506347656
    4. '	input' → logprob: -16.507606506347656
    5. ' ' → logprob: -17.007606506347656
    6. '<input' → logprob: -17.007606506347656
    7. ',input' → logprob: -17.132606506347656
    8. ')' → logprob: -17.882606506347656
    9. '=input' → logprob: -18.007606506347656
    10. 'sys' → logprob: -18.507606506347656

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.644463479053229e-05
    2. '()' → logprob: -10.000046730041504
    3. '()))' → logprob: -15.625046730041504
    4. ' ().' → logprob: -15.625046730041504
    5. '()));' → logprob: -16.375045776367188
    6. '())' → logprob: -16.625045776367188
    7. '()-' → logprob: -16.750045776367188
    8. '().__' → logprob: -16.875045776367188
    9. '.' → logprob: -17.250045776367188
    10. '(' → logprob: -17.500045776367188

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.226628895296017e-06
    2. 'strip' → logprob: -12.250007629394531
    3. '().' → logprob: -13.500007629394531
    4. '(split' → logprob: -14.625007629394531
    5. ' split' → logprob: -15.625007629394531
    6. '.split' → logprob: -15.875007629394531
    7. 'rstrip' → logprob: -15.875007629394531
    8. ')' → logprob: -16.37500762939453
    9. 'read' → logprob: -16.75000762939453
    10. ').' → logprob: -18.00000762939453

Token 35: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5248166918754578
    2. '()))' → logprob: -1.2748167514801025
    3. ')' → logprob: -2.3998167514801025
    4. '())' → logprob: -3.5248167514801025
    5. '(' → logprob: -4.899816513061523
    6. '()' → logprob: -6.774816513061523
    7. '),' → logprob: -11.274816513061523
    8. '()))
' → logprob: -11.399816513061523
    9. ')))' → logprob: -11.649816513061523
    10. ' ))' → logprob: -12.399816513061523

Token 36: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006218921043910086
    2. 'sorted' → logprob: -8.250621795654297
    3. '```' → logprob: -9.375621795654297
    4. 'b' → logprob: -9.500621795654297
    5. 'dp' → logprob: -10.125621795654297
    6. '
' → logprob: -10.750621795654297
    7. 'd' → logprob: -11.000621795654297
    8. 'answer' → logprob: -11.125621795654297
    9. 'for' → logprob: -11.375621795654297
    10. 'bis' → logprob: -11.375621795654297

Token 37: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10290022939443588
    2. ' a' → logprob: -2.477900266647339
    3. 'idx' → logprob: -5.97790002822876
    4. 'dp' → logprob: -5.97790002822876
    5. 'sorted' → logprob: -6.60290002822876
    6. 'b' → logprob: -7.10290002822876
    7. 'for' → logprob: -7.35290002822876
    8. 'indices' → logprob: -7.47790002822876
    9. ' dp' → logprob: -7.60290002822876
    10. ' sorted' → logprob: -7.72790002822876

Token 38: ' veut' (ID: 41653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021688200533390045
    2. 'ly' → logprob: -4.271687984466553
    3. 'es' → logprob: -5.146687984466553
    4. 'sorted' → logprob: -7.646687984466553
    5. 'ce' → logprob: -8.396688461303711
    6. 'sort' → logprob: -8.771688461303711
    7. 'line' → logprob: -8.896688461303711
    8. 'a' → logprob: -9.146688461303711
    9. '```' → logprob: -9.271688461303711
    10. 'ed' → logprob: -9.396688461303711

Token 39: ' trouver' (ID: 23195)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.4352385699748993
    2. 'tr' → logprob: -1.0602385997772217
    3. ' que' → logprob: -6.310238361358643
    4. ' trouver' → logprob: -6.560238361358643
    5. ' Trier' → logprob: -7.560238361358643
    6. ' construire' → logprob: -7.935238361358643
    7. ' ' → logprob: -8.3102388381958
    8. ' trie' → logprob: -8.5602388381958
    9. ' sélectionner' → logprob: -8.5602388381958
    10. ' utiliser' → logprob: -8.8102388381958

Token 40: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4386703372001648
    2. '(' → logprob: -2.3136703968048096
    3. ' l' → logprob: -3.0636703968048096
    4. ' le' → logprob: -3.1886703968048096
    5. ' un' → logprob: -3.3136703968048096
    6. ' une' → logprob: -3.5636703968048096
    7. ' ' → logprob: -3.6886703968048096
    8. 'l' → logprob: -4.6886701583862305
    9. ',' → logprob: -4.8136701583862305
    10. ' a' → logprob: -4.9386701583862305

Token 41: ' L' (ID: 451)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.035056710243225
    2. ' nombre' → logprob: -1.035056710243225
    3. 'plus' → logprob: -2.7850565910339355
    4. 's' → logprob: -2.7850565910339355
    5. ' maximum' → logprob: -2.9100565910339355
    6. 'nombre' → logprob: -3.6600565910339355
    7. 'a' → logprob: -3.7850565910339355
    8. 'maximum' → logprob: -4.9100565910339355
    9. 'max' → logprob: -5.0350565910339355
    10. ' longest' → logprob: -5.2850565910339355

Token 42: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16614916920661926
    2. 'e' → logprob: -3.541149139404297
    3. '+' → logprob: -3.666149139404297
    4. '_' → logprob: -3.791149139404297
    5. ' -' → logprob: -4.416149139404297
    6. '-s' → logprob: -4.791149139404297
    7. '-th' → logprob: -5.166149139404297
    8. '-i' → logprob: -5.416149139404297
    9. '-length' → logprob: -5.791149139404297
    10. '-plus' → logprob: -5.853649139404297

Token 43: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.28084883093833923
    2. 'eme' → logprob: -2.030848741531372
    3. 'è' → logprob: -3.155848741531372
    4. '-' → logprob: -3.780848741531372
    5. 'é' → logprob: -5.030848979949951
    6. 'èm' → logprob: -5.030848979949951
    7. 'e' → logprob: -5.155848979949951
    8. 'me' → logprob: -5.405848979949951
    9. ' è' → logprob: -5.655848979949951
    10. '-eme' → logprob: -5.780848979949951

Token 44: ' plus' (ID: 2932)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.6087055802345276
    2. ' plus' → logprob: -2.233705520629883
    3. '_' → logprob: -2.858705520629883
    4. ' ' → logprob: -3.358705520629883
    5. 'élé' → logprob: -3.608705520629883
    6. 'plus' → logprob: -3.608705520629883
    7. ' i' → logprob: -3.733705520629883
    8. ' a' → logprob: -3.733705520629883
    9. '+' → logprob: -3.858705520629883
    10. '```' → logprob: -3.983705520629883

Token 45: ' petit' (ID: 20577)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.027575243264436722
    2. ' grand' → logprob: -3.9025752544403076
    3. 'pet' → logprob: -5.2775750160217285
    4. 'gr' → logprob: -6.9025750160217285
    5. '```' → logprob: -8.152575492858887
    6. 'large' → logprob: -8.402575492858887
    7. ' petit' → logprob: -8.652575492858887
    8. 'g' → logprob: -10.277575492858887
    9. 'Grand' → logprob: -10.527575492858887
    10. 'gran' → logprob: -11.027575492858887

Token 46: ' nombre' (ID: 9733)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élément' → logprob: -1.0456711053848267
    2. 'élé' → logprob: -1.1706711053848267
    3. '_' → logprob: -2.170670986175537
    4. 'a' → logprob: -2.420670986175537
    5. 'element' → logprob: -2.795670986175537
    6. ')' → logprob: -4.795670986175537
    7. ' a' → logprob: -4.795670986175537
    8. ' element' → logprob: -4.795670986175537
    9. '(' → logprob: -5.045670986175537
    10. ' ' → logprob: -5.045670986175537

Token 47: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14993658661842346
    2. '_' → logprob: -3.0249366760253906
    3. '_a' → logprob: -3.0249366760253906
    4. ',' → logprob: -4.899936676025391
    5. ' a' → logprob: -4.899936676025391
    6. 'sorted' → logprob: -5.024936676025391
    7. 'bis' → logprob: -5.274936676025391
    8. 'b' → logprob: -5.524936676025391
    9. '_sorted' → logprob: -6.149936676025391
    10. 's' → logprob: -6.524936676025391

Token 48: ' K' (ID: 658)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2916160225868225
    2. ' a' → logprob: -1.4166159629821777
    3. 's' → logprob: -6.291615962982178
    4. 'élé' → logprob: -6.416615962982178
    5. ' éléments' → logprob: -6.541615962982178
    6. ' K' → logprob: -6.791615962982178
    7. ' nombres' → logprob: -7.416615962982178
    8. '```' → logprob: -7.541615962982178
    9. 'K' → logprob: -7.791615962982178
    10. ' la' → logprob: -8.416616439819336

Token 49: '-i' (ID: 18499)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6548089981079102
    2. 'a' → logprob: -1.7798089981079102
    3. ' plus' → logprob: -1.9048089981079102
    4. 'plus' → logprob: -2.02980899810791
    5. '+' → logprob: -2.40480899810791
    6. ' a' → logprob: -3.02980899810791
    7. '_' → logprob: -3.40480899810791
    8. 'sorted' → logprob: -3.40480899810791
    9. ' +' → logprob: -3.65480899810791
    10. '-s' → logprob: -4.40480899810791

Token 50: 'ème' (ID: 9767)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0679289102554321
    2. 'eurs' → logprob: -2.0679287910461426
    3. 'ers' → logprob: -2.4429287910461426
    4. 'èmes' → logprob: -2.8179287910461426
    5. 'er' → logprob: -3.0679287910461426
    6. 'emes' → logprob: -3.4429287910461426
    7. 'me' → logprob: -3.8179287910461426
    8. 'eme' → logprob: -3.8179287910461426
    9. 'eux' → logprob: -3.8179287910461426
    10. 'è' → logprob: -3.9429287910461426

Token 51: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6793212890625
    2. ' plus' → logprob: -2.3043212890625
    3. 'plus' → logprob: -2.5543212890625
    4. 's' → logprob: -2.6793212890625
    5. ' smallest' → logprob: -3.0543212890625
    6. 'a' → logprob: -3.3043212890625
    7. '_plus' → logprob: -3.9293212890625
    8. '+' → logprob: -4.3043212890625
    9. 'largest' → logprob: -4.5543212890625
    10. '-' → logprob: -4.6793212890625

Token 52: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.09186937659978867
    2. 'gr' → logprob: -3.591869354248047
    3. '<|end|>' → logprob: -3.716869354248047
    4. 'grand' → logprob: -4.091869354248047
    5. ' petits' → logprob: -4.591869354248047
    6. 'small' → logprob: -6.091869354248047
    7. ' grands' → logprob: -6.716869354248047
    8. 'b' → logprob: -7.216869354248047
    9. '```' → logprob: -7.466869354248047
    10. ' petites' → logprob: -7.841869354248047

Token 53: ' éléments' (ID: 57375)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.0475549697875977
    2. '_' → logprob: -1.6725549697875977
    3. 'a' → logprob: -1.7975549697875977
    4. ' a' → logprob: -2.1725549697875977
    5. ' _' → logprob: -2.7975549697875977
    6. 's' → logprob: -2.9225549697875977
    7. ' ' → logprob: -3.2975549697875977
    8. ' ,' → logprob: -5.672554969787598
    9. ',' → logprob: -6.047554969787598
    10. '_s' → logprob: -6.172554969787598

Token 54: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3678860366344452
    2. ')' → logprob: -2.3678860664367676
    3. '.' → logprob: -2.3678860664367676
    4. '.
' → logprob: -3.3678860664367676
    5. '\' → logprob: -4.117886066436768
    6. '\n' → logprob: -4.242886066436768
    7. ')
' → logprob: -4.242886066436768
    8. '' → logprob: -4.492886066436768
    9. 'sorted' → logprob: -4.867886066436768
    10. '
' → logprob: -5.617886066436768

Token 55: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03648583963513374
    2. '.
' → logprob: -4.28648567199707
    3. ')
' → logprob: -5.03648567199707
    4. ')' → logprob: -5.03648567199707
    5. '.' → logprob: -5.66148567199707
    6. '
' → logprob: -6.53648567199707
    7. 'sorted' → logprob: -6.53648567199707
    8. ').' → logprob: -7.16148567199707
    9. '\' → logprob: -7.53648567199707
    10. '.sort' → logprob: -8.28648567199707

Token 56: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011194946244359016
    2. 'sorted' → logprob: -5.136195182800293
    3. '.
' → logprob: -6.261195182800293
    4. '
' → logprob: -7.136195182800293
    5. ')' → logprob: -7.761195182800293
    6. '\' → logprob: -7.886195182800293
    7. ')
' → logprob: -8.011195182800293
    8. '.' → logprob: -8.636195182800293
    9. 's' → logprob: -8.761195182800293
    10. 'b' → logprob: -9.136195182800293

Token 57: ' toutes' (ID: 17502)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23897568881511688
    2. ' a' → logprob: -1.9889756441116333
    3. ' chaque' → logprob: -3.488975763320923
    4. ' la' → logprob: -3.988975763320923
    5. 'la' → logprob: -4.988975524902344
    6. 'cha' → logprob: -4.988975524902344
    7. 'l' → logprob: -5.238975524902344
    8. ' chacune' → logprob: -6.363975524902344
    9. ' l' → logprob: -6.488975524902344
    10. ' toutes' → logprob: -6.988975524902344

Token 58: ' sous' (ID: 14487)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8360744714736938
    2. 'les' → logprob: -0.9610744714736938
    3. 's' → logprob: -1.9610744714736938
    4. 'l' → logprob: -5.086074352264404
    5. 'a' → logprob: -5.211074352264404
    6. ' des' → logprob: -5.586074352264404
    7. 'la' → logprob: -5.586074352264404
    8. ' sous' → logprob: -5.961074352264404
    9. ' subse' → logprob: -5.961074352264404
    10. '(' → logprob: -6.211074352264404

Token 59: '-s' (ID: 2011)
  Prédit: '-list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-list' → logprob: -0.37904131412506104
    2. '-' → logprob: -2.0040411949157715
    3. '_list' → logprob: -2.1290411949157715
    4. '-cha' → logprob: -4.2540411949157715
    5. '-l' → logprob: -4.3790411949157715
    6. 'list' → logprob: -4.5040411949157715
    7. '_' → logprob: -4.7540411949157715
    8. '-chain' → logprob: -6.0040411949157715
    9. '_lists' → logprob: -6.1290411949157715
    10. '_l' → logprob: -6.7540411949157715

Token 60: 'é' (ID: 377)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -1.1778391599655151
    2. 'eq' → logprob: -1.6778391599655151
    3. 'e' → logprob: -2.4278392791748047
    4. 'é' → logprob: -2.6778392791748047
    5. 'tring' → logprob: -2.8028392791748047
    6. 'équ' → logprob: -3.1778392791748047
    7. 'uites' → logprob: -3.1778392791748047
    8. 'ub' → logprob: -3.3028392791748047
    9. 'tr' → logprob: -3.4278392791748047
    10. 'equ' → logprob: -3.6778392791748047

Token 61: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0002314303710591048
    2. 'ries' → logprob: -9.375231742858887
    3. 'q' → logprob: -9.500231742858887
    4. '#' → logprob: -11.500231742858887
    5. '```' → logprob: -11.875231742858887
    6. 'quence' → logprob: -11.875231742858887
    7. 'qu' → logprob: -12.000231742858887
    8. '`' → logprob: -12.000231742858887
    9. '\' → logprob: -12.250231742858887
    10. 'lections' → logprob: -12.750231742858887

Token 62: ' cont' (ID: 836)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3341905176639557
    2. 'de' → logprob: -1.3341904878616333
    3. 'a' → logprob: -4.209190368652344
    4. ' a' → logprob: -6.209190368652344
    5. ' d' → logprob: -7.209190368652344
    6. 'd' → logprob: -7.334190368652344
    7. '[]' → logprob: -7.709190368652344
    8. 'contin' → logprob: -8.084190368652344
    9. 'cont' → logprob: -8.834190368652344
    10. 's' → logprob: -8.834190368652344

Token 63: 'igu' (ID: 12143)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1959657520055771
    2. 'igu' → logprob: -1.8209657669067383
    3. 'ig' → logprob: -5.070965766906738
    4. 'iguous' → logprob: -5.445965766906738
    5. 'inu' → logprob: -5.695965766906738
    6. '```' → logprob: -7.695965766906738
    7. 'inue' → logprob: -7.820965766906738
    8. 'gu' → logprob: -8.445965766906738
    9. 'igus' → logprob: -9.070965766906738
    10. 'en' → logprob: -9.195965766906738

Token 64: 'ës' (ID: 17225)
  Prédit: 'ig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.3812868893146515
    2. 'g' → logprob: -1.631286859512329
    3. 'igu' → logprob: -2.756286859512329
    4. 'ues' → logprob: -3.756286859512329
    5. 'ugues' → logprob: -4.506287097930908
    6. 'ing' → logprob: -5.256287097930908
    7. 'u' → logprob: -5.381287097930908
    8. 'in' → logprob: -5.631287097930908
    9. 'n' → logprob: -5.756287097930908
    10. 'iguous' → logprob: -7.256287097930908

Token 65: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39799773693084717
    2. 'de' → logprob: -1.1479977369308472
    3. 's' → logprob: -5.647997856140137
    4. 'def' → logprob: -6.147997856140137
    5. ' of' → logprob: -6.522997856140137
    6. ',' → logprob: -6.897997856140137
    7. 'd' → logprob: -7.397997856140137
    8. 'a' → logprob: -7.647997856140137
    9. '.' → logprob: -8.022997856140137
    10. 'length' → logprob: -8.147997856140137

Token 66: ' longueur' (ID: 104613)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.353224515914917
    2. ' longueur' → logprob: -1.978224515914917
    3. 'a' → logprob: -2.103224515914917
    4. ' length' → logprob: -4.228224754333496
    5. 'length' → logprob: -4.728224754333496
    6. ' l' → logprob: -5.103224754333496
    7. 'l' → logprob: -5.978224754333496
    8. ' ' → logprob: -6.853224754333496
    9. ' taille' → logprob: -6.853224754333496
    10. ' la' → logprob: -7.228224754333496

Token 67: ' >=' (ID: 5064)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.10059676319360733
    2. 'K' → logprob: -2.3505966663360596
    3. ' ' → logprob: -8.60059642791748
    4. '(' → logprob: -9.35059642791748
    5. '(K' → logprob: -10.35059642791748
    6. ' (' → logprob: -10.60059642791748
    7. '`' → logprob: -11.10059642791748
    8. 'a' → logprob: -11.22559642791748
    9. ' a' → logprob: -11.47559642791748
    10. '```' → logprob: -12.85059642791748

Token 68: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.17985785007476807
    2. ' K' → logprob: -1.804857850074768
    3. ' ' → logprob: -9.179858207702637
    4. '	K' → logprob: -13.554858207702637
    5. 'k' → logprob: -13.804858207702637
    6. 'N' → logprob: -13.929858207702637
    7. '1' → logprob: -14.179858207702637
    8. '`' → logprob: -14.179858207702637
    9. '<|end|>' → logprob: -14.179858207702637
    10. '>K' → logprob: -14.304858207702637

Token 69: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.163883239030838
    2. 'sorted' → logprob: -3.0388832092285156
    3. '#' → logprob: -3.2888832092285156
    4. 'dp' → logprob: -3.5388832092285156
    5. 'b' → logprob: -4.538883209228516
    6. 'def' → logprob: -5.288883209228516
    7. ')' → logprob: -6.038883209228516
    8. 'possible' → logprob: -6.288883209228516
    9. 'prefix' → logprob: -6.788883209228516
    10. 'max' → logprob: -6.788883209228516

Token 70: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35900571942329407
    2. 'dp' → logprob: -2.1090056896209717
    3. '#' → logprob: -2.6090056896209717
    4. 'sorted' → logprob: -2.8590056896209717
    5. 'possible' → logprob: -4.859005928039551
    6. 'res' → logprob: -5.359005928039551
    7. 'def' → logprob: -5.609005928039551
    8. 'b' → logprob: -5.609005928039551
    9. 'm' → logprob: -5.859005928039551
    10. 'sub' → logprob: -5.859005928039551

Token 71: ' Pour' (ID: 13931)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16223116219043732
    2. '#' → logprob: -3.037231206893921
    3. 'dp' → logprob: -3.537231206893921
    4. 'sorted' → logprob: -3.537231206893921
    5. 'b' → logprob: -4.537230968475342
    6. 'from' → logprob: -4.787230968475342
    7. 'def' → logprob: -5.787230968475342
    8. 'import' → logprob: -6.162230968475342
    9. 'possible' → logprob: -6.287230968475342
    10. 'res' → logprob: -6.287230968475342

Token 72: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2952481210231781
    2. 'i' → logprob: -1.7952481508255005
    3. ' cela' → logprob: -3.545248031616211
    4. ' _' → logprob: -4.545248031616211
    5. ' k' → logprob: -4.545248031616211
    6. ' l' → logprob: -4.795248031616211
    7. ' trouver' → logprob: -5.170248031616211
    8. 'k' → logprob: -5.795248031616211
    9. ' t' → logprob: -5.920248031616211
    10. '_' → logprob: -5.920248031616211

Token 73: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5944419503211975
    2. ' i' → logprob: -1.5944418907165527
    3. 's' → logprob: -1.9694418907165527
    4. 'long' → logprob: -3.9694418907165527
    5. ' longueur' → logprob: -4.094441890716553
    6. 'j' → logprob: -4.344441890716553
    7. ' j' → logprob: -4.719441890716553
    8. 'sub' → logprob: -4.844441890716553
    9. 'window' → logprob: -5.094441890716553
    10. ' taille' → logprob: -5.094441890716553

Token 74: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0286247730255127
    2. 'a' → logprob: -1.1536247730255127
    3. ' i' → logprob: -2.2786247730255127
    4. 'dans' → logprob: -2.7786247730255127
    5. ',' → logprob: -2.9036247730255127
    6. ' a' → logprob: -4.028624534606934
    7. ' de' → logprob: -4.028624534606934
    8. ' in' → logprob: -4.028624534606934
    9. ' dans' → logprob: -4.153624534606934
    10. 'd' → logprob: -4.278624534606934

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29570522904396057
    2. ':' → logprob: -1.4207051992416382
    3. ' :' → logprob: -4.920705318450928
    4. ' ,' → logprob: -5.420705318450928
    5. ' in' → logprob: -6.170705318450928
    6. ' en' → logprob: -8.54570484161377
    7. 'in' → logprob: -9.92070484161377
    8. ' de' → logprob: -10.04570484161377
    9. ' dans' → logprob: -10.04570484161377
    10. ' (' → logprob: -10.29570484161377

Token 76: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.07352320849895477
    2. '#' → logprob: -3.6985232830047607
    3. ' #' → logprob: -3.6985232830047607
    4. 'on' → logprob: -5.448523044586182
    5. ' il' → logprob: -5.448523044586182
    6. ' ' → logprob: -5.948523044586182
    7. ' a' → logprob: -6.448523044586182
    8. ' ' → logprob: -6.448523044586182
    9. 'a' → logprob: -7.073523044586182
    10. ' vérifier' → logprob: -7.073523044586182

Token 77: ' peut' (ID: 9216)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -1.3084185123443604
    2. 'veux' → logprob: -1.8084185123443604
    3. ' veut' → logprob: -2.6834185123443604
    4. 'v' → logprob: -2.6834185123443604
    5. 've' → logprob: -2.6834185123443604
    6. 'va' → logprob: -2.9334185123443604
    7. ' cherche' → logprob: -3.3084185123443604
    8. 'voud' → logprob: -3.4334185123443604
    9. ' vér' → logprob: -3.6834185123443604
    10. ' veux' → logprob: -3.6834185123443604

Token 78: ' compter' (ID: 81694)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.2750476598739624
    2. 'faire' → logprob: -1.2750476598739624
    3. 'penser' → logprob: -2.150047779083252
    4. 'util' → logprob: -2.900047779083252
    5. 'chercher' → logprob: -3.025047779083252
    6. ' utiliser' → logprob: -3.150047779083252
    7. 'v' → logprob: -3.775047779083252
    8. ' vérifier' → logprob: -3.900047779083252
    9. ' faire' → logprob: -4.150047779083252
    10. ' effectuer' → logprob: -4.275047779083252

Token 79: ' combien' (ID: 106648)
  Prédit: ' combien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -0.06510519981384277
    2. 'le' → logprob: -3.9401051998138428
    3. ' la' → logprob: -4.815105438232422
    4. ' le' → logprob: -5.065105438232422
    5. 'comb' → logprob: -5.440105438232422
    6. ' ' → logprob: -5.565105438232422
    7. ' how' → logprob: -5.690105438232422
    8. '<|end|>' → logprob: -5.940105438232422
    9. '```' → logprob: -6.565105438232422
    10. ' comb' → logprob: -6.690105438232422

Token 80: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1759784072637558
    2. 'de' → logprob: -2.050978422164917
    3. ' d' → logprob: -4.300978183746338
    4. 'd' → logprob: -4.800978183746338
    5. 'x' → logprob: -5.550978183746338
    6. ' of' → logprob: -5.925978183746338
    7. '#' → logprob: -7.550978183746338
    8. ' des' → logprob: -7.800978183746338
    9. ' ' → logprob: -7.925978183746338
    10. ' x' → logprob: -7.925978183746338

Token 81: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.6724823713302612
    2. 's' → logprob: -0.9224823713302612
    3. 'sub' → logprob: -3.547482490539551
    4. ' fois' → logprob: -3.922482490539551
    5. ' subse' → logprob: -4.547482490539551
    6. 'a' → logprob: -4.797482490539551
    7. ' a' → logprob: -5.297482490539551
    8. 'fois' → logprob: -5.297482490539551
    9. 'élé' → logprob: -6.297482490539551
    10. '```' → logprob: -6.672482490539551

Token 82: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08223053067922592
    2. '-s' → logprob: -3.082230567932129
    3. 'sé' → logprob: -3.957230567932129
    4. 's' → logprob: -5.457230567932129
    5. '-list' → logprob: -5.707230567932129
    6. '_' → logprob: -5.957230567932129
    7. '-se' → logprob: -6.582230567932129
    8. ' sé' → logprob: -7.582230567932129
    9. '_s' → logprob: -7.957230567932129
    10. ' sequences' → logprob: -8.332230567932129

Token 83: 'é' (ID: 377)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.529699981212616
    2. 'é' → logprob: -1.1547000408172607
    3. 'équ' → logprob: -2.5297000408172607
    4. 'e' → logprob: -5.154699802398682
    5. 'q' → logprob: -6.154699802398682
    6. '#' → logprob: -6.404699802398682
    7. 'equ' → logprob: -7.029699802398682
    8. 'quence' → logprob: -7.029699802398682
    9. 'ections' → logprob: -7.404699802398682
    10. 'eq' → logprob: -7.404699802398682

Token 84: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.01072955783456564
    2. 'quence' → logprob: -4.635729789733887
    3. 'q' → logprob: -7.635729789733887
    4. 'ries' → logprob: -7.760729789733887
    5. 'qu' → logprob: -11.010729789733887
    6. 'quent' → logprob: -11.760729789733887
    7. '#' → logprob: -11.885729789733887
    8. 'rie' → logprob: -12.260729789733887
    9. '```' → logprob: -12.510729789733887
    10. 'lections' → logprob: -12.760729789733887

Token 85: ' ont' (ID: 4930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1951950192451477
    2. ',' → logprob: -3.195194959640503
    3. 'cont' → logprob: -3.445194959640503
    4. ' cont' → logprob: -4.070195198059082
    5. ' ,' → logprob: -4.070195198059082
    6. ' de' → logprob: -4.695195198059082
    7. ' contiguous' → logprob: -4.695195198059082
    8. ' x' → logprob: -4.945195198059082
    9. ' >=' → logprob: -5.320195198059082
    10. ')' → logprob: -5.570195198059082

Token 86: ' comme' (ID: 7971)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.1917675733566284
    2. 'x' → logprob: -1.5667675733566284
    3. ' un' → logprob: -1.6917675733566284
    4. 'a' → logprob: -1.9417675733566284
    5. ' leur' → logprob: -3.066767692565918
    6. ' a' → logprob: -3.691767692565918
    7. 'leur' → logprob: -3.941767692565918
    8. ' x' → logprob: -4.316767692565918
    9. ' une' → logprob: -4.691767692565918
    10. ' ' → logprob: -5.066767692565918

Token 87: ' K' (ID: 658)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.12058686465024948
    2. ' élément' → logprob: -3.24558687210083
    3. ' plus' → logprob: -4.12058687210083
    4. ' éléments' → logprob: -4.37058687210083
    5. ' maximum' → logprob: -4.62058687210083
    6. ' minimum' → logprob: -5.12058687210083
    7. ' valeur' → logprob: -5.62058687210083
    8. ' ' → logprob: -5.62058687210083
    9. ' a' → logprob: -5.99558687210083
    10. ' elements' → logprob: -6.12058687210083

Token 88: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.24363306164741516
    2. '-' → logprob: -1.9936330318450928
    3. 'ième' → logprob: -2.7436330318450928
    4. 'i' → logprob: -5.118633270263672
    5. 'ème' → logprob: -5.618633270263672
    6. 'e' → logprob: -7.368633270263672
    7. '_i' → logprob: -7.493633270263672
    8. ' -' → logprob: -7.618633270263672
    9. '-eme' → logprob: -7.743633270263672
    10. '```' → logprob: -8.118633270263672

Token 89: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.058369796723127365
    2. 'me' → logprob: -3.8083698749542236
    3. 'eme' → logprob: -3.9333698749542236
    4. 'ième' → logprob: -6.0583696365356445
    5. 'è' → logprob: -6.4333696365356445
    6. 'èm' → logprob: -6.5583696365356445
    7. '-' → logprob: -6.6833696365356445
    8. 'èmes' → logprob: -6.9333696365356445
    9. 'e' → logprob: -7.4333696365356445
    10. '+' → logprob: -7.4333696365356445

Token 90: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8486117720603943
    2. 'élé' → logprob: -0.9736117720603943
    3. ' élément' → logprob: -2.348611831665039
    4. 'plus' → logprob: -2.473611831665039
    5. '```' → logprob: -5.598611831665039
    6. ' smallest' → logprob: -5.848611831665039
    7. '+' → logprob: -6.723611831665039
    8. 'a' → logprob: -6.848611831665039
    9. '_' → logprob: -6.848611831665039
    10. ' éléments' → logprob: -7.598611831665039

Token 91: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.18349169194698334
    2. ' petit' → logprob: -1.9334917068481445
    3. '```' → logprob: -3.9334917068481445
    4. 'small' → logprob: -6.8084917068481445
    5. '_small' → logprob: -7.5584917068481445
    6. '_' → logprob: -7.8084917068481445
    7. ' small' → logprob: -7.9334917068481445
    8. '<' → logprob: -8.183491706848145
    9. '_pet' → logprob: -9.433491706848145
    10. 'grand' → logprob: -9.558491706848145

Token 92: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -1.1549170017242432
    2. '_' → logprob: -1.6549170017242432
    3. 'élé' → logprob: -2.029917001724243
    4. ' element' → logprob: -2.654917001724243
    5. ' a' → logprob: -3.029917001724243
    6. ' _' → logprob: -3.529917001724243
    7. ' x' → logprob: -3.529917001724243
    8. '```' → logprob: -3.654917001724243
    9. 'a' → logprob: -3.904917001724243
    10. 'element' → logprob: -4.029916763305664

Token 93: ' <=' (ID: 5017)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8427286148071289
    2. 's' → logprob: -2.217728614807129
    3. ',' → logprob: -2.592728614807129
    4. '.' → logprob: -2.717728614807129
    5. ':' → logprob: -3.092728614807129
    6. ' x' → logprob: -3.092728614807129
    7. ' =' → logprob: -3.717728614807129
    8. ' ,' → logprob: -3.717728614807129
    9. ' dans' → logprob: -3.717728614807129
    10. 'x' → logprob: -3.842728614807129

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28151628375053406
    2. 'x' → logprob: -1.4065163135528564
    3. ' ' → logprob: -8.156516075134277
    4. ' ' → logprob: -10.031516075134277
    5. '```' → logprob: -11.656516075134277
    6. '	x' → logprob: -12.531516075134277
    7. '`' → logprob: -12.781516075134277
    8. ' `' → logprob: -12.781516075134277
    9. '"' → logprob: -13.031516075134277
    10. '(x' → logprob: -13.406516075134277

Token 95: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4989350736141205
    2. '
' → logprob: -1.8739351034164429
    3. 'def' → logprob: -1.8739351034164429
    4. 'a' → logprob: -3.3739349842071533
    5. ')' → logprob: -4.373935222625732
    6. '.' → logprob: -5.123935222625732
    7. 'd' → logprob: -5.373935222625732
    8. '=' → logprob: -5.498935222625732
    9. ']' → logprob: -5.623935222625732
    10. ',' → logprob: -5.873935222625732

Token 96: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20955519378185272
    2. 'low' → logprob: -2.334555149078369
    3. '#' → logprob: -3.459555149078369
    4. 'left' → logprob: -3.959555149078369
    5. 'dp' → logprob: -4.834555149078369
    6. 'l' → logprob: -4.959555149078369
    7. '
' → logprob: -5.084555149078369
    8. 'd' → logprob: -5.334555149078369
    9. 'a' → logprob: -5.834555149078369
    10. 'max' → logprob: -6.084555149078369

Token 97: ' Util' (ID: 13564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08726975321769714
    2. 'left' → logprob: -3.2122697830200195
    3. 'low' → logprob: -3.5872697830200195
    4. ' def' → logprob: -5.3372697830200195
    5. '
' → logprob: -6.0872697830200195
    6. ' left' → logprob: -6.2122697830200195
    7. '#' → logprob: -6.5872697830200195
    8. ' low' → logprob: -7.3372697830200195
    9. 'max' → logprob: -7.4622697830200195
    10. 'l' → logprob: -7.7122697830200195

Token 98: 'iser' (ID: 7466)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09239164739847183
    2. '#' → logprob: -3.7173917293548584
    3. 'es' → logprob: -3.9673917293548584
    4. 'se' → logprob: -4.092391490936279
    5. 'ser' → logprob: -4.342391490936279
    6. 'e' → logprob: -5.217391490936279
    7. '```' → logprob: -5.717391490936279
    8. 'iser' → logprob: -6.467391490936279
    9. 'ons' → logprob: -7.342391490936279
    10. 'isé' → logprob: -7.467391490936279

Token 99: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4040951430797577
    2. 'une' → logprob: -1.52909517288208
    3. ' bis' → logprob: -3.40409517288208
    4. ' un' → logprob: -3.52909517288208
    5. 'bis' → logprob: -4.02909517288208
    6. 'un' → logprob: -4.40409517288208
    7. 'la' → logprob: -4.90409517288208
    8. ' la' → logprob: -5.15409517288208
    9. 'binary' → logprob: -6.15409517288208
    10. ' binary' → logprob: -6.52909517288208

Token 100: ' recherche' (ID: 24975)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.6746411919593811
    2. 'binary' → logprob: -1.5496411323547363
    3. 'heap' → logprob: -3.0496411323547363
    4. ' binary' → logprob: -3.1746411323547363
    5. 'bis' → logprob: -3.4246411323547363
    6. 'def' → logprob: -3.7996411323547363
    7. 'fonction' → logprob: -4.049641132354736
    8. ' bis' → logprob: -4.174641132354736
    9. ' fen' → logprob: -4.674641132354736
    10. 'table' → logprob: -4.674641132354736

Token 101: ' b' (ID: 287)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.40504634380340576
    2. 'bis' → logprob: -2.2800464630126953
    3. ' binary' → logprob: -2.2800464630126953
    4. 'b' → logprob: -3.1550464630126953
    5. 'import' → logprob: -3.2800464630126953
    6. ' b' → logprob: -4.030046463012695
    7. '_binary' → logprob: -4.030046463012695
    8. 'def' → logprob: -5.655046463012695
    9. ' bis' → logprob: -5.905046463012695
    10. 'sorted' → logprob: -6.280046463012695

Token 102: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5518620610237122
    2. 'inaire' → logprob: -1.1768620014190674
    3. 'inary' → logprob: -2.1768620014190674
    4. 'inar' → logprob: -7.1768622398376465
    5. 'i' → logprob: -7.8018622398376465
    6. 'iné' → logprob: -7.9268622398376465
    7. ' in' → logprob: -8.051861763000488
    8. 'ina' → logprob: -8.676861763000488
    9. '```' → logprob: -9.051861763000488
    10. 'inarily' → logprob: -9.176861763000488

Token 103: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33992016315460205
    2. 'def' → logprob: -1.339920163154602
    3. '

' → logprob: -5.4649200439453125
    4. '#' → logprob: -5.4649200439453125
    5. 'x' → logprob: -6.3399200439453125
    6. 'import' → logprob: -6.5899200439453125
    7. ' def' → logprob: -6.5899200439453125
    8. ')' → logprob: -6.8399200439453125
    9. '
' → logprob: -6.8399200439453125
    10. ',' → logprob: -6.9649200439453125

Token 104: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9027310609817505
    2. ' a' → logprob: -1.0277310609817505
    3. ' x' → logprob: -2.027730941772461
    4. 'x' → logprob: -2.277730941772461
    5. ' ' → logprob: -7.277730941772461
    6. ' the' → logprob: -7.652730941772461
    7. ' la' → logprob: -8.027730941772461
    8. ' l' → logprob: -8.152730941772461
    9. '```' → logprob: -8.527730941772461
    10. 'l' → logprob: -8.652730941772461

Token 105: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.027796141803264618
    2. 'x' → logprob: -5.027796268463135
    3. ' val' → logprob: -5.152796268463135
    4. ' valeur' → logprob: -5.152796268463135
    5. 'possible' → logprob: -5.777796268463135
    6. ' x' → logprob: -6.402796268463135
    7. ' possible' → logprob: -6.652796268463135
    8. 's' → logprob: -7.027796268463135
    9. 'X' → logprob: -7.402796268463135
    10. '```' → logprob: -7.902796268463135

Token 106: '.

' (ID: 364)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.1510292291641235
    2. 'max' → logprob: -1.2760292291641235
    3. 'def' → logprob: -1.5260292291641235
    4. 'min' → logprob: -3.026029109954834
    5. '#' → logprob: -3.401029109954834
    6. 'left' → logprob: -4.026029109954834
    7. 'x' → logprob: -4.651029109954834
    8. ')' → logprob: -4.651029109954834
    9. '
' → logprob: -5.026029109954834
    10. 'lo' → logprob: -5.401029109954834

Token 107: 'def' (ID: 1314)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1012593507766724
    2. 'low' → logprob: -1.3512593507766724
    3. 'def' → logprob: -1.8512593507766724
    4. 'values' → logprob: -2.226259231567383
    5. 'min' → logprob: -2.976259231567383
    6. 'max' → logprob: -3.351259231567383
    7. 'sorted' → logprob: -4.351259231567383
    8. 'unique' → logprob: -4.726259231567383
    9. 'v' → logprob: -4.976259231567383
    10. 'mx' → logprob: -4.976259231567383

Token 108: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3008747696876526
    2. ' count' → logprob: -2.050874710083008
    3. 'check' → logprob: -2.550874710083008
    4. ' check' → logprob: -4.050874710083008
    5. ' can' → logprob: -4.175874710083008
    6. 'can' → logprob: -4.925874710083008
    7. 'possible' → logprob: -4.925874710083008
    8. ' possible' → logprob: -5.300874710083008
    9. ' is' → logprob: -8.675874710083008
    10. 'is' → logprob: -8.925874710083008

Token 109: '_sub' (ID: 11572)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05131138488650322
    2. '(' → logprob: -3.051311492919922
    3. '(mid' → logprob: -6.676311492919922
    4. '(m' → logprob: -8.176311492919922
    5. '_less' → logprob: -8.176311492919922
    6. '(k' → logprob: -8.801311492919922
    7. '(value' → logprob: -8.926311492919922
    8. '(val' → logprob: -9.426311492919922
    9. '(num' → logprob: -9.551311492919922
    10. '(max' → logprob: -9.801311492919922

Token 110: 'arrays' (ID: 158630)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.015110697597265244
    2. 'def' → logprob: -5.140110492706299
    3. 'arrays' → logprob: -5.890110492706299
    4. '(x' → logprob: -6.390110492706299
    5. 'seq' → logprob: -6.390110492706299
    6. 'sequence' → logprob: -6.765110492706299
    7. '_sequences' → logprob: -7.265110492706299
    8. 'quences' → logprob: -8.265110969543457
    9. 's' → logprob: -8.265110969543457
    10. ' sequences' → logprob: -8.515110969543457

Token 111: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.012241908349096775
    2. '(' → logprob: -4.887241840362549
    3. '(mid' → logprob: -5.637241840362549
    4. '(value' → logprob: -7.637241840362549
    5. '(max' → logprob: -8.637242317199707
    6. '(arr' → logprob: -8.887242317199707
    7. '(val' → logprob: -10.012242317199707
    8. ' (' → logprob: -10.137242317199707
    9. '(min' → logprob: -10.637242317199707
    10. '(num' → logprob: -10.762242317199707

Token 112: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6365132927894592
    2. '):' → logprob: -0.7615132927894592
    3. ' ):' → logprob: -6.0115132331848145
    4. ' ,' → logprob: -6.8865132331848145
    5. ')' → logprob: -7.8865132331848145
    6. ':' → logprob: -11.511513710021973
    7. ',x' → logprob: -11.636513710021973
    8. ',n' → logprob: -12.011513710021973
    9. ',k' → logprob: -12.011513710021973
    10. ' )' → logprob: -12.136513710021973

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00765313021838665
    2. 'n' → logprob: -6.13265323638916
    3. ' n' → logprob: -6.38265323638916
    4. ':' → logprob: -6.50765323638916
    5. 'count' → logprob: -8.13265323638916
    6. ' count' → logprob: -8.63265323638916
    7. '    
' → logprob: -8.88265323638916
    8. 'left' → logprob: -8.88265323638916
    9. '	n' → logprob: -9.25765323638916
    10. ' left' → logprob: -9.50765323638916

Token 114: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.35601574182510376
    2. 'pass' → logprob: -2.856015682220459
    3. 'n' → logprob: -2.981015682220459
    4. 'res' → logprob: -3.481015682220459
    5. 'window' → logprob: -3.606015682220459
    6. 'cnt' → logprob: -3.606015682220459
    7. 'left' → logprob: -4.356015682220459
    8. 'from' → logprob: -4.356015682220459
    9. 'pos' → logprob: -4.481015682220459
    10. ' pass' → logprob: -4.731015682220459

Token 115: ' Pour' (ID: 13931)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2904921770095825
    2. 'from' → logprob: -3.040492057800293
    3. 'pass' → logprob: -3.040492057800293
    4. 'window' → logprob: -3.040492057800293
    5. 'n' → logprob: -3.915492057800293
    6. ' count' → logprob: -4.665492057800293
    7. 'cnt' → logprob: -4.790492057800293
    8. 'res' → logprob: -4.915492057800293
    9. ' pass' → logprob: -5.040492057800293
    10. 'left' → logprob: -5.040492057800293

Token 116: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3135654628276825
    2. ' i' → logprob: -2.313565492630005
    3. 'count' → logprob: -3.063565492630005
    4. 'val' → logprob: -4.188565254211426
    5. 'b' → logprob: -4.313565254211426
    6. 'a' → logprob: -4.313565254211426
    7. 'sub' → logprob: -4.813565254211426
    8. 'comp' → logprob: -5.063565254211426
    9. 'arr' → logprob: -5.438565254211426
    10. 'l' → logprob: -5.438565254211426

Token 117: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5634139776229858
    2. 'élé' → logprob: -2.3134140968322754
    3. 'e' → logprob: -3.0634140968322754
    4. ' i' → logprob: -3.4384140968322754
    5. 'indice' → logprob: -3.8134140968322754
    6. 'def' → logprob: -3.9384140968322754
    7. ' tableau' → logprob: -3.9384140968322754
    8. 'a' → logprob: -4.063414096832275
    9. 'sub' → logprob: -4.188414096832275
    10. 'index' → logprob: -4.313414096832275

Token 118: ' donné' (ID: 52079)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2333415150642395
    2. ' donné' → logprob: -1.6083414554595947
    3. ' given' → logprob: -5.608341693878174
    4. ' ,' → logprob: -6.483341693878174
    5. 'given' → logprob: -7.358341693878174
    6. '=' → logprob: -7.983341693878174
    7. 'def' → logprob: -7.983341693878174
    8. ':' → logprob: -8.358341217041016
    9. ' =' → logprob: -8.483341217041016
    10. ' donnée' → logprob: -8.483341217041016

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.079556405544281
    2. 'count' → logprob: -3.204556465148926
    3. ':' → logprob: -4.079556465148926
    4. '   ' → logprob: -6.329556465148926
    5. ' ,' → logprob: -6.329556465148926
    6. ' count' → logprob: -6.454556465148926
    7. 'i' → logprob: -6.579556465148926
    8. 'indices' → logprob: -6.579556465148926
    9. 'idx' → logprob: -6.704556465148926
    10. 'def' → logprob: -6.829556465148926

Token 120: ' compte' (ID: 19657)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0035773839335888624
    2. 'cnt' → logprob: -6.62857723236084
    3. ' count' → logprob: -6.75357723236084
    4. 'window' → logprob: -7.62857723236084
    5. 'res' → logprob: -9.62857723236084
    6. 'left' → logprob: -9.75357723236084
    7. 'start' → logprob: -9.87857723236084
    8. 'pos' → logprob: -10.12857723236084
    9. 'idx' → logprob: -10.12857723236084
    10. 'j' → logprob: -10.25357723236084

Token 121: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24828989803791046
    2. '=' → logprob: -2.7482898235321045
    3. ' combien' → logprob: -2.7482898235321045
    4. 'count' → logprob: -4.123290061950684
    5. 'total' → logprob: -4.623290061950684
    6. 'nt' → logprob: -4.623290061950684
    7. 's' → logprob: -4.873290061950684
    8. 'le' → logprob: -4.873290061950684
    9. 'er' → logprob: -5.248290061950684
    10. 'cnt' → logprob: -5.248290061950684

Token 122: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.40728703141212463
    2. 'nombre' → logprob: -1.4072870016098022
    3. ' combien' → logprob: -2.907287120819092
    4. ' nombres' → logprob: -4.532287120819092
    5. 's' → logprob: -4.782287120819092
    6. ' de' → logprob: -4.907287120819092
    7. '#' → logprob: -6.407287120819092
    8. 'comb' → logprob: -6.657287120819092
    9. ' number' → logprob: -6.657287120819092
    10. 'sub' → logprob: -6.782287120819092

Token 123: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2848409116268158
    2. 'de' → logprob: -2.1598408222198486
    3. ' de' → logprob: -2.7848408222198486
    4. 'total' → logprob: -3.6598408222198486
    5. 'of' → logprob: -5.034841060638428
    6. '_sub' → logprob: -5.409841060638428
    7. 'sub' → logprob: -5.659841060638428
    8. '(' → logprob: -5.659841060638428
    9. '_total' → logprob: -5.784841060638428
    10. '=' → logprob: -6.159841060638428

Token 124: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.49393850564956665
    2. 's' → logprob: -0.9939385056495667
    3. 'sub' → logprob: -4.118938446044922
    4. ' sub' → logprob: -7.743938446044922
    5. 'K' → logprob: -7.868938446044922
    6. 'k' → logprob: -7.993938446044922
    7. 'ss' → logprob: -8.181438446044922
    8. ' under' → logprob: -8.493938446044922
    9. ' K' → logprob: -8.618938446044922
    10. ' subse' → logprob: -8.993938446044922

Token 125: '-table' (ID: 35909)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.9744661450386047
    2. '_s' → logprob: -1.59946608543396
    3. '-s' → logprob: -2.47446608543396
    4. 's' → logprob: -2.72446608543396
    5. 'arrays' → logprob: -2.72446608543396
    6. '_sequences' → logprob: -2.84946608543396
    7. '-' → logprob: -3.22446608543396
    8. 'arr' → logprob: -3.59946608543396
    9. 'array' → logprob: -3.97446608543396
    10. '_' → logprob: -4.474466323852539

Token 126: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -1.0006279945373535
    2. 'ux' → logprob: -1.2506279945373535
    3. 'bles' → logprob: -1.6256279945373535
    4. 'ble' → logprob: -3.6256279945373535
    5. 'x' → logprob: -3.6256279945373535
    6. 'illes' → logprob: -4.0006279945373535
    7. 'u' → logprob: -4.0006279945373535
    8. 'xes' → logprob: -4.7506279945373535
    9. 'ches' → logprob: -4.8756279945373535
    10. 'n' → logprob: -5.1256279945373535

Token 127: ' dont' (ID: 11562)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.901404857635498
    2. ' où' → logprob: -1.776404857635498
    3. 's' → logprob: -2.901404857635498
    4. 'où' → logprob: -2.901404857635498
    5. ' where' → logprob: -3.401404857635498
    6. ' avec' → logprob: -3.651404857635498
    7. ' cont' → logprob: -3.776404857635498
    8. ' dont' → logprob: -3.776404857635498
    9. 'dont' → logprob: -3.776404857635498
    10. ' de' → logprob: -3.776404857635498

Token 128: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09035004675388336
    2. ' le' → logprob: -2.7153501510620117
    3. 'K' → logprob: -4.590350151062012
    4. 'a' → logprob: -6.215350151062012
    5. 'la' → logprob: -6.215350151062012
    6. 'leur' → logprob: -6.465350151062012
    7. 'len' → logprob: -6.590350151062012
    8. ' K' → logprob: -7.215350151062012
    9. 'k' → logprob: -7.340350151062012
    10. 'l' → logprob: -7.465350151062012

Token 129: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01103626936674118
    2. ' K' → logprob: -5.136036396026611
    3. 'k' → logprob: -5.386036396026611
    4. 'a' → logprob: -7.886036396026611
    5. 'x' → logprob: -10.011035919189453
    6. ' k' → logprob: -10.761035919189453
    7. '```' → logprob: -10.886035919189453
    8. 'L' → logprob: -12.323535919189453
    9. '#' → logprob: -12.511035919189453
    10. 'def' → logprob: -12.573535919189453

Token 130: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.022365029901266098
    2. '-' → logprob: -4.897365093231201
    3. 'ième' → logprob: -5.147365093231201
    4. 'i' → logprob: -5.522365093231201
    5. 'ème' → logprob: -6.772365093231201
    6. '-eme' → logprob: -6.897365093231201
    7. '\xe1' → logprob: -7.772365093231201
    8. '_i' → logprob: -8.022364616394043
    9. '```' → logprob: -8.147364616394043
    10. '--' → logprob: -8.959864616394043

Token 131: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.041107311844825745
    2. 'eme' → logprob: -4.291107177734375
    3. 'me' → logprob: -4.416107177734375
    4. 'ième' → logprob: -5.666107177734375
    5. '```' → logprob: -6.166107177734375
    6. 'ême' → logprob: -6.291107177734375
    7. 'èmes' → logprob: -6.416107177734375
    8. 'ère' → logprob: -7.478607177734375
    9. 'è' → logprob: -7.541107177734375
    10. 'é' → logprob: -7.791107177734375

Token 132: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5068190097808838
    2. ' plus' → logprob: -1.1318190097808838
    3. 'élé' → logprob: -2.756819009780884
    4. ' smallest' → logprob: -5.381818771362305
    5. ' élément' → logprob: -5.631818771362305
    6. 'small' → logprob: -6.631818771362305
    7. 'element' → logprob: -7.756818771362305
    8. 'minimum' → logprob: -8.006818771362305
    9. '_plus' → logprob: -8.381818771362305
    10. '```' → logprob: -8.881818771362305

Token 133: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0018440400017425418
    2. ' petit' → logprob: -6.5018439292907715
    3. '```' → logprob: -8.87684440612793
    4. 'small' → logprob: -10.62684440612793
    5. 'Petit' → logprob: -10.62684440612793
    6. '_pet' → logprob: -10.75184440612793
    7. 'grand' → logprob: -11.12684440612793
    8. 'min' → logprob: -11.12684440612793
    9. 'p' → logprob: -11.37684440612793
    10. 'élé' → logprob: -11.50184440612793

Token 134: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1448795199394226
    2. ' élément' → logprob: -2.0198795795440674
    3. ' element' → logprob: -6.769879341125488
    4. 'element' → logprob: -7.769879341125488
    5. ' éléments' → logprob: -8.394879341125488
    6. 'é' → logprob: -9.894879341125488
    7. '_' → logprob: -10.269879341125488
    8. '<|end|>' → logprob: -10.394879341125488
    9. '<=' → logprob: -10.644879341125488
    10. ')' → logprob: -10.769879341125488

Token 135: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5735676884651184
    2. ' <=' → logprob: -0.9485676884651184
    3. ' est' → logprob: -3.5735676288604736
    4. ' is' → logprob: -4.698567867279053
    5. '#' → logprob: -5.448567867279053
    6. 'est' → logprob: -6.198567867279053
    7. '<|end|>' → logprob: -6.198567867279053
    8. '≤' → logprob: -6.948567867279053
    9. ' ≤' → logprob: -7.823567867279053
    10. 'd' → logprob: -8.573567390441895

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -18.505233764648438
    4. ' ' → logprob: -18.630233764648438
    5. ' ' → logprob: -18.880233764648438
    6. '```' → logprob: -20.255233764648438
    7. 'a' → logprob: -21.130233764648438
    8. '(x' → logprob: -21.630233764648438
    9. '   ' → logprob: -22.255233764648438
    10. '"x' → logprob: -22.755233764648438

Token 137: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036939747631549835
    2. '   ' → logprob: -3.536939859390259
    3. ':
' → logprob: -5.78693962097168
    4. '):' → logprob: -7.03693962097168
    5. 'def' → logprob: -7.28693962097168
    6. '
' → logprob: -7.28693962097168
    7. '<|end|>' → logprob: -7.28693962097168
    8. ':return' → logprob: -8.41193962097168
    9. '<|end|>' → logprob: -8.91193962097168
    10. ':def' → logprob: -9.03693962097168

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022840777412056923
    2. 'def' → logprob: -5.272840976715088
    3. '
' → logprob: -5.647840976715088
    4. '    ' → logprob: -5.772840976715088
    5. ')' → logprob: -6.022840976715088
    6. '    
' → logprob: -6.272840976715088
    7. 'from' → logprob: -6.897840976715088
    8. '<|end|>' → logprob: -7.272840976715088
    9. ' from' → logprob: -7.397840976715088
    10. 'dp' → logprob: -7.397840976715088

Token 139: ' #' (ID: 1069)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -1.1130552291870117
    2. ' window' → logprob: -2.2380552291870117
    3. 'count' → logprob: -2.4880552291870117
    4. 'from' → logprob: -2.7380552291870117
    5. 'left' → logprob: -2.7380552291870117
    6. 'sorted' → logprob: -3.1130552291870117
    7. 'pass' → logprob: -3.3630552291870117
    8. 'def' → logprob: -3.3630552291870117
    9. 'freq' → logprob: -3.4880552291870117
    10. ' pass' → logprob: -3.6130552291870117

Token 140: ' On' (ID: 2160)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -1.2235103845596313
    2. 'from' → logprob: -1.5985103845596313
    3. 'count' → logprob: -1.7235103845596313
    4. 'left' → logprob: -2.348510265350342
    5. 'de' → logprob: -3.098510265350342
    6. 'pass' → logprob: -3.223510265350342
    7. 'return' → logprob: -3.598510265350342
    8. '#' → logprob: -3.848510265350342
    9. 'deque' → logprob: -3.973510265350342
    10. 'sorted' → logprob: -4.098510265350342

Token 141: ' transforme' (ID: 184109)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.3412158489227295
    2. 'def' → logprob: -1.4662158489227295
    3. 'util' → logprob: -2.2162158489227295
    4. 'a' → logprob: -2.3412158489227295
    5. 'do' → logprob: -2.5912158489227295
    6. 'va' → logprob: -3.4662158489227295
    7. 'n' → logprob: -3.7162158489227295
    8. 'tr' → logprob: -3.7162158489227295
    9. '#' → logprob: -4.091216087341309
    10. 'need' → logprob: -4.591216087341309

Token 142: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04558438062667847
    2. ' a' → logprob: -3.5455844402313232
    3. ' la' → logprob: -5.420584201812744
    4. ' les' → logprob: -5.795584201812744
    5. 'l' → logprob: -6.170584201812744
    6. 'la' → logprob: -6.170584201812744
    7. 'les' → logprob: -6.545584201812744
    8. ' le' → logprob: -7.545584201812744
    9. 'le' → logprob: -8.045584678649902
    10. 'the' → logprob: -8.295584678649902

Token 143: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6208845376968384
    2. '[:]' → logprob: -1.9958845376968384
    3. ' en' → logprob: -2.245884418487549
    4. '[]' → logprob: -3.370884418487549
    5. ' =' → logprob: -3.620884418487549
    6. 'en' → logprob: -3.620884418487549
    7. ' a' → logprob: -3.995884418487549
    8. '[i' → logprob: -4.245884418487549
    9. 'e' → logprob: -4.245884418487549
    10. ',' → logprob: -4.370884418487549

Token 144: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014152223244309425
    2. ' [' → logprob: -4.7641520500183105
    3. 'a' → logprob: -6.0141520500183105
    4. '[a' → logprob: -7.2641520500183105
    5. '[int' → logprob: -7.3891520500183105
    6. '[i' → logprob: -7.8891520500183105
    7. ' une' → logprob: -8.139152526855469
    8. 'une' → logprob: -8.514152526855469
    9. '0' → logprob: -8.764152526855469
    10. 'un' → logprob: -8.889152526855469

Token 145: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038061000406742096
    2. '=' → logprob: -3.2880609035491943
    3. '=[' → logprob: -12.038061141967773
    4. '=[]' → logprob: -12.913061141967773
    5. ',' → logprob: -13.163061141967773
    6. '[' → logprob: -13.413061141967773
    7. '[]' → logprob: -13.913061141967773
    8. '=lambda' → logprob: -14.038061141967773
    9. 'a' → logprob: -14.288061141967773
    10. 'd' → logprob: -14.413061141967773

Token 146: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9700341820716858
    2. ' ' → logprob: -1.470034122467041
    3. 'b' → logprob: -1.470034122467041
    4. ' b' → logprob: -2.095034122467041
    5. ' [' → logprob: -4.095034122467041
    6. '[' → logprob: -4.595034122467041
    7. ' a' → logprob: -5.345034122467041
    8. 'a' → logprob: -5.970034122467041
    9. '0' → logprob: -6.470034122467041
    10. ' (' → logprob: -7.345034122467041

Token 147: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34922224283218384
    2. '=' → logprob: -1.224222183227539
    3. '=[' → logprob: -7.599222183227539
    4. '[i' → logprob: -8.974222183227539
    5. '=[]' → logprob: -9.474222183227539
    6. '[' → logprob: -10.724222183227539
    7. ' =[' → logprob: -12.224222183227539
    8. '=['' → logprob: -12.224222183227539
    9. '=[]
' → logprob: -12.224222183227539
    10. '<|end|>' → logprob: -12.224222183227539

Token 148: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10803598165512085
    2. '=' → logprob: -2.4830360412597656
    3. ']=' → logprob: -4.358036041259766
    4. ' =' → logprob: -5.108036041259766
    5. ']=(' → logprob: -11.233036041259766
    6. '>' → logprob: -11.358036041259766
    7. '=i' → logprob: -11.483036041259766
    8. ' ]' → logprob: -11.608036041259766
    9. ']+=' → logprob: -12.483036041259766
    10. ']='' → logprob: -12.858036041259766

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.031255047768354416
    2. ' ' → logprob: -3.781255006790161
    3. '0' → logprob: -5.03125524520874
    4. 'int' → logprob: -7.40625524520874
    5. ' int' → logprob: -7.90625524520874
    6. 'a' → logprob: -8.906254768371582
    7. '(' → logprob: -9.156254768371582
    8. ' (' → logprob: -9.281254768371582
    9. '(a' → logprob: -9.406254768371582
    10. ' a' → logprob: -10.281254768371582

Token 150: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.062414757907390594
    2. 'if' → logprob: -2.8124146461486816
    3. ' si' → logprob: -7.812414646148682
    4. ' ' → logprob: -10.43741512298584
    5. 'si' → logprob: -12.81241512298584
    6. ' i' → logprob: -12.93741512298584
    7. 'i' → logprob: -12.93741512298584
    8. ' ' → logprob: -13.56241512298584
    9. 'ift' → logprob: -14.18741512298584
    10. '<|end|>' → logprob: -14.81241512298584

Token 151: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141518115997314
    2. ' a' → logprob: -1.7014151811599731
    3. '	a' → logprob: -13.951415061950684
    4. '(a' → logprob: -14.826415061950684
    5. ' ' → logprob: -15.701415061950684
    6. ' ' → logprob: -15.826415061950684
    7. '   ' → logprob: -16.076416015625
    8. 'b' → logprob: -16.701416015625
    9. '```' → logprob: -17.076416015625
    10. 'ai' → logprob: -18.326416015625

Token 152: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -10.75002670288086
    3. 'i' → logprob: -13.25002670288086
    4. '```' → logprob: -13.25002670288086
    5. '[I' → logprob: -14.37502670288086
    6. '\[' → logprob: -14.87502670288086
    7. ' [' → logprob: -15.75002670288086
    8. '[
' → logprob: -16.75002670288086
    9. '[u' → logprob: -16.87502670288086
    10. '
' → logprob: -16.87502670288086

Token 153: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5143992900848389
    2. ']' → logprob: -1.6393992900848389
    3. ' <=' → logprob: -2.264399290084839
    4. ']<=' → logprob: -2.264399290084839
    5. ')<=' → logprob: -9.014399528503418
    6. ' ]' → logprob: -10.514399528503418
    7. '[' → logprob: -10.639399528503418
    8. '```' → logprob: -10.889399528503418
    9. ' ' → logprob: -11.639399528503418
    10. '']' → logprob: -11.889399528503418

Token 154: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17987100780010223
    2. ' <=' → logprob: -1.8048709630966187
    3. '[' → logprob: -9.80487060546875
    4. ']<=' → logprob: -10.55487060546875
    5. '<' → logprob: -11.42987060546875
    6. ')<=' → logprob: -11.55487060546875
    7. ' ' → logprob: -11.67987060546875
    8. '>=' → logprob: -12.92987060546875
    9. '≤' → logprob: -13.30487060546875
    10. '[i' → logprob: -13.67987060546875

Token 155: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01814994215965271
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -17.893150329589844
    4. ' ' → logprob: -19.768150329589844
    5. '(x' → logprob: -20.393150329589844
    6. ' ' → logprob: -20.518150329589844
    7. '_x' → logprob: -21.518150329589844
    8. '"x' → logprob: -21.893150329589844
    9. ')x' → logprob: -21.893150329589844
    10. ''x' → logprob: -22.393150329589844

Token 156: ' sinon' (ID: 52915)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12428145110607147
    2. ',' → logprob: -2.374281406402588
    3. 'else' → logprob: -3.749281406402588
    4. ';' → logprob: -9.624281883239746
    5. ' ,' → logprob: -10.374281883239746
    6. ')' → logprob: -10.374281883239746
    7. '```' → logprob: -11.249281883239746
    8. ']' → logprob: -11.374281883239746
    9. ' and' → logprob: -11.499281883239746
    10. ' ' → logprob: -11.624281883239746

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004625699482858181
    2. ' ' → logprob: -5.3796257972717285
    3. '-' → logprob: -12.75462532043457
    4. ' -' → logprob: -13.87962532043457
    5. '   ' → logprob: -14.87962532043457
    6. ',' → logprob: -15.00462532043457
    7. 'b' → logprob: -15.87962532043457
    8. '=' → logprob: -15.87962532043457
    9. ' ' → logprob: -15.94212532043457
    10. '.' → logprob: -16.44212532043457

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.313314952421933e-05
    2. ' ' → logprob: -9.875062942504883
    3. '-' → logprob: -11.375062942504883
    4. ' -' → logprob: -16.000062942504883
    5. '=' → logprob: -17.625062942504883
    6. '０' → logprob: -19.062562942504883
    7. '۰' → logprob: -19.125062942504883
    8. ' ' → logprob: -19.187562942504883
    9. '  ' → logprob: -19.437562942504883
    10. '00' → logprob: -19.875062942504883

Token 159: '.
' (ID: 558)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.021302932873368263
    2. '   ' → logprob: -4.271302700042725
    3. ',' → logprob: -6.021302700042725
    4. '
' → logprob: -6.396302700042725
    5. ' b' → logprob: -6.646302700042725
    6. ':' → logprob: -7.021302700042725
    7. 'def' → logprob: -8.646303176879883
    8. ')' → logprob: -9.021303176879883
    9. '=' → logprob: -9.146303176879883
    10. 'a' → logprob: -9.521303176879883

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37541648745536804
    2. 'b' → logprob: -1.3754165172576904
    3. ' b' → logprob: -3.0004165172576904
    4. 'def' → logprob: -5.500416278839111
    5. 'n' → logprob: -6.625416278839111
    6. ' prefix' → logprob: -6.750416278839111
    7. 'prefix' → logprob: -7.125416278839111
    8. 'count' → logprob: -7.625416278839111
    9. ' def' → logprob: -7.750416278839111
    10. ' n' → logprob: -8.12541675567627

Token 161: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21592171490192413
    2. ' b' → logprob: -1.8409217596054077
    3. '   ' → logprob: -3.340921640396118
    4. '	b' → logprob: -9.965921401977539
    5. 'n' → logprob: -10.715921401977539
    6. '
' → logprob: -11.465921401977539
    7. '```' → logprob: -11.465921401977539
    8. ' ' → logprob: -11.465921401977539
    9. ' n' → logprob: -12.215921401977539
    10. 'def' → logprob: -12.340921401977539

Token 162: ' Pour' (ID: 13931)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08258532732725143
    2. ' b' → logprob: -2.582585334777832
    3. '   ' → logprob: -5.957585334777832
    4. 'n' → logprob: -8.957585334777832
    5. ' n' → logprob: -8.957585334777832
    6. 'prefix' → logprob: -8.957585334777832
    7. ' prefix' → logprob: -9.082585334777832
    8. 'def' → logprob: -9.082585334777832
    9. ' ' → logprob: -9.207585334777832
    10. 'count' → logprob: -9.332585334777832

Token 163: ' que' (ID: 661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6954239010810852
    2. ' i' → logprob: -0.6954239010810852
    3. ' b' → logprob: -6.6954240798950195
    4. 'b' → logprob: -7.1954240798950195
    5. ' la' → logprob: -9.82042407989502
    6. ' chaque' → logprob: -10.19542407989502
    7. 'a' → logprob: -10.82042407989502
    8. ' le' → logprob: -11.19542407989502
    9. ' continuer' → logprob: -11.57042407989502
    10. ' l' → logprob: -11.69542407989502

Token 164: ' le' (ID: 505)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7948632836341858
    2. 'que' → logprob: -1.294863224029541
    3. ' le' → logprob: -2.919863224029541
    4. ' la' → logprob: -3.169863224029541
    5. 'le' → logprob: -3.794863224029541
    6. 'la' → logprob: -3.919863224029541
    7. 'b' → logprob: -3.919863224029541
    8. ' b' → logprob: -4.044863224029541
    9. 'count' → logprob: -4.044863224029541
    10. ' chaque' → logprob: -4.294863224029541

Token 165: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.16450920701026917
    2. 's' → logprob: -2.5395092964172363
    3. 'b' → logprob: -3.7895092964172363
    4. ' K' → logprob: -3.9145092964172363
    5. 'k' → logprob: -4.789509296417236
    6. ' sous' → logprob: -5.539509296417236
    7. 'sub' → logprob: -5.664509296417236
    8. 'count' → logprob: -5.914509296417236
    9. 'nombre' → logprob: -6.164509296417236
    10. 'i' → logprob: -6.289509296417236

Token 166: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.2543734908103943
    2. 'ième' → logprob: -1.879373550415039
    3. 'ème' → logprob: -4.004373550415039
    4. '-' → logprob: -4.504373550415039
    5. '_i' → logprob: -4.504373550415039
    6. '-th' → logprob: -4.504373550415039
    7. '[i' → logprob: -5.379373550415039
    8. ' -' → logprob: -5.629373550415039
    9. 'th' → logprob: -5.754373550415039
    10. '-eme' → logprob: -6.629373550415039

Token 167: 'eme' (ID: 5825)
  Prédit: 'ème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.11231506615877151
    2. 'eme' → logprob: -2.7373151779174805
    3. 'me' → logprob: -3.8623151779174805
    4. 'ième' → logprob: -5.3623151779174805
    5. 'ême' → logprob: -5.4873151779174805
    6. 'th' → logprob: -5.4873151779174805
    7. '-th' → logprob: -5.7373151779174805
    8. 'è' → logprob: -6.9873151779174805
    9. 'èmes' → logprob: -7.2373151779174805
    10. '-' → logprob: -7.8623151779174805

Token 168: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.5380821824073792
    2. 'plus' → logprob: -1.4130821228027344
    3. ' élément' → logprob: -2.5380821228027344
    4. ' smallest' → logprob: -3.0380821228027344
    5. 'élé' → logprob: -4.288082122802734
    6. 'b' → logprob: -5.163082122802734
    7. ' b' → logprob: -5.288082122802734
    8. ' ' → logprob: -5.413082122802734
    9. '+' → logprob: -5.913082122802734
    10. '1' → logprob: -6.538082122802734

Token 169: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.014567136764526367
    2. ' petit' → logprob: -4.6395673751831055
    3. 'grand' → logprob: -6.3895673751831055
    4. 'court' → logprob: -6.8895673751831055
    5. 'small' → logprob: -7.5145673751831055
    6. '<=' → logprob: -7.8895673751831055
    7. '_' → logprob: -8.014567375183105
    8. '```' → logprob: -8.514567375183105
    9. 'Petit' → logprob: -9.014567375183105
    10. 'élé' → logprob: -9.264567375183105

Token 170: ' <=' (ID: 5017)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6267997622489929
    2. ' élément' → logprob: -0.8767997622489929
    3. 'element' → logprob: -3.2517998218536377
    4. '<|end|>' → logprob: -5.376799583435059
    5. ' element' → logprob: -6.001799583435059
    6. 'token' → logprob: -7.751799583435059
    7. ' soit' → logprob: -7.876799583435059
    8. 'b' → logprob: -8.001799583435059
    9. '```' → logprob: -8.501799583435059
    10. 'plus' → logprob: -8.626799583435059

Token 171: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006719759665429592
    2. ' x' → logprob: -5.006719589233398
    3. ' ' → logprob: -13.381719589233398
    4. ' ' → logprob: -13.881719589233398
    5. 'a' → logprob: -14.631719589233398
    6. '0' → logprob: -14.881719589233398
    7. '	x' → logprob: -15.131719589233398
    8. '1' → logprob: -15.506719589233398
    9. ''x' → logprob: -16.3192195892334
    10. '```' → logprob: -16.4442195892334

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019734179659280926
    2. ':' → logprob: -9.500197410583496
    3. 'dans' → logprob: -10.125197410583496
    4. ' ,' → logprob: -10.625197410583496
    5. ' dans' → logprob: -11.625197410583496
    6. ',
' → logprob: -11.875197410583496
    7. 'b' → logprob: -12.375197410583496
    8. '#' → logprob: -12.625197410583496
    9. 'def' → logprob: -12.750197410583496
    10. 'il' → logprob: -12.875197410583496

Token 173: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.14256300032138824
    2. 'il' → logprob: -2.5175631046295166
    3. ' on' → logprob: -3.6425631046295166
    4. 'on' → logprob: -3.8925631046295166
    5. '#' → logprob: -6.0175628662109375
    6. 'le' → logprob: -7.5175628662109375
    7. ' le' → logprob: -7.6425628662109375
    8. ' la' → logprob: -8.017562866210938
    9. 'la' → logprob: -8.142562866210938
    10. 'c' → logprob: -8.392562866210938

Token 174: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6442752480506897
    2. ' faut' → logprob: -0.7692752480506897
    3. ' doit' → logprob: -5.144275188446045
    4. 'fa' → logprob: -6.144275188446045
    5. 'must' → logprob: -6.519275188446045
    6. ' must' → logprob: -7.019275188446045
    7. ' faudrait' → logprob: -7.269275188446045
    8. 's' → logprob: -9.269275665283203
    9. ' faudra' → logprob: -9.644275665283203
    10. 'd' → logprob: -10.019275665283203

Token 175: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4464811384677887
    2. 'qu' → logprob: -1.6964811086654663
    3. ' que' → logprob: -2.321481227874756
    4. ' d' → logprob: -3.946481227874756
    5. 'd' → logprob: -4.196481227874756
    6. 'avoir' → logprob: -4.196481227874756
    7. 'au' → logprob: -4.821481227874756
    8. 'sum' → logprob: -5.696481227874756
    9. ' avoir' → logprob: -5.696481227874756
    10. ' qu' → logprob: -5.821481227874756

Token 176: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.4080270826816559
    2. 'il' → logprob: -1.4080270528793335
    3. ''on' → logprob: -3.158027172088623
    4. 'au' → logprob: -3.533027172088623
    5. ''au' → logprob: -4.533027172088623
    6. 'on' → logprob: -6.033027172088623
    7. ' il' → logprob: -6.408027172088623
    8. 'u' → logprob: -7.158027172088623
    9. 'e' → logprob: -7.408027172088623
    10. '’il' → logprob: -7.658027172088623

Token 177: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.021024689078330994
    2. ' y' → logprob: -3.896024703979492
    3. ''y' → logprob: -7.896024703979492
    4. 'n' → logprob: -10.146024703979492
    5. 'ai' → logprob: -11.146024703979492
    6. 'a' → logprob: -11.146024703979492
    7. 'ait' → logprob: -11.771024703979492
    8. 'ya' → logprob: -12.271024703979492
    9. 'cont' → logprob: -12.396024703979492
    10. ' ait' → logprob: -12.646024703979492

Token 178: ' ait' (ID: 43015)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.30833154916763306
    2. 'a' → logprob: -1.5583314895629883
    3. 'aie' → logprob: -3.5583314895629883
    4. 'ai' → logprob: -4.183331489562988
    5. ' ait' → logprob: -5.058331489562988
    6. 'aient' → logprob: -5.808331489562988
    7. ' aient' → logprob: -7.808331489562988
    8. ''ai' → logprob: -8.433331489562988
    9. ' a' → logprob: -8.558331489562988
    10. 'avoir' → logprob: -9.058331489562988

Token 179: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5934888124465942
    2. 'au' → logprob: -0.8434888124465942
    3. 'K' → logprob: -4.968488693237305
    4. ' K' → logprob: -5.343488693237305
    5. 'k' → logprob: -6.718488693237305
    6. 's' → logprob: -6.843488693237305
    7. 'une' → logprob: -7.093488693237305
    8. ' ' → logprob: -7.593488693237305
    9. ' une' → logprob: -7.593488693237305
    10. 'at' → logprob: -8.093488693237305

Token 180: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.002778962254524231
    2. 'mo' → logprob: -6.002779006958008
    3. '```' → logprob: -8.752779006958008
    4. 'menos' → logprob: -10.002779006958008
    5. ' moins' → logprob: -10.752779006958008
    6. 'least' → logprob: -10.752779006958008
    7. '   ' → logprob: -11.377779006958008
    8. 'minimum' → logprob: -11.502779006958008
    9. 'm' → logprob: -12.002779006958008
    10. '
' → logprob: -12.627779006958008

Token 181: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0017066054278984666
    2. ' K' → logprob: -6.376706600189209
    3. 'k' → logprob: -12.376707077026367
    4. ' ' → logprob: -16.376707077026367
    5. '```' → logprob: -16.876707077026367
    6. '
' → logprob: -17.626707077026367
    7. ' ' → logprob: -18.001707077026367
    8. '	K' → logprob: -18.251707077026367
    9. '`' → logprob: -18.626707077026367
    10. '

' → logprob: -19.001707077026367

Token 182: ' éléments' (ID: 57375)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6921615600585938
    2. ' éléments' → logprob: -2.0671615600585938
    3. 'de' → logprob: -2.5671615600585938
    4. 'b' → logprob: -2.9421615600585938
    5. ' de' → logprob: -3.1921615600585938
    6. ' ' → logprob: -3.3171615600585938
    7. 'indices' → logprob: -3.3171615600585938
    8. ' b' → logprob: -3.5671615600585938
    9. ' elements' → logprob: -3.9421615600585938
    10. ' des' → logprob: -3.9421615600585938

Token 183: ' <=' (ID: 5017)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3955058753490448
    2. '1' → logprob: -1.7705059051513672
    3. '=' → logprob: -3.520505905151367
    4. ' b' → logprob: -3.520505905151367
    5. 'de' → logprob: -3.895505905151367
    6. '<=' → logprob: -4.020505905151367
    7. ' de' → logprob: -4.520505905151367
    8. 'dans' → logprob: -4.645505905151367
    9. ' ' → logprob: -4.770505905151367
    10. 'with' → logprob: -5.145505905151367

Token 184: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28121522068977356
    2. ' x' → logprob: -1.4062151908874512
    3. ' ' → logprob: -10.65621566772461
    4. ' ' → logprob: -10.65621566772461
    5. '```' → logprob: -12.53121566772461
    6. '	x' → logprob: -12.90621566772461
    7. '_x' → logprob: -13.15621566772461
    8. '1' → logprob: -13.28121566772461
    9. '   ' → logprob: -13.65621566772461
    10. 'i' → logprob: -13.96871566772461

Token 185: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.8804012537002563
    2. 'dans' → logprob: -0.8804012537002563
    3. ' in' → logprob: -2.505401134490967
    4. '   ' → logprob: -3.255401134490967
    5. 'in' → logprob: -5.005401134490967
    6. '.' → logprob: -5.005401134490967
    7. ',' → logprob: -5.255401134490967
    8. ' =' → logprob: -5.255401134490967
    9. 's' → logprob: -5.380401134490967
    10. ' ' → logprob: -5.755401134490967

Token 186: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1450335830450058
    2. ' la' → logprob: -2.395033597946167
    3. 'le' → logprob: -4.395033359527588
    4. 'une' → logprob: -4.395033359527588
    5. 'l' → logprob: -5.520033359527588
    6. 'sub' → logprob: -5.645033359527588
    7. 'b' → logprob: -6.145033359527588
    8. 'the' → logprob: -6.270033359527588
    9. 's' → logprob: -6.395033359527588
    10. 'a' → logprob: -6.520033359527588

Token 187: ' sous' (ID: 14487)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.9802289605140686
    2. 's' → logprob: -1.3552289009094238
    3. 'current' → logprob: -1.6052289009094238
    4. 'window' → logprob: -2.980228900909424
    5. 'b' → logprob: -3.105228900909424
    6. ' sous' → logprob: -3.230228900909424
    7. ' current' → logprob: -4.730228900909424
    8. 'fen' → logprob: -5.230228900909424
    9. ' sub' → logprob: -6.230228900909424
    10. 'cont' → logprob: -6.605228900909424

Token 188: '-s' (ID: 2011)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.10921135544776917
    2. 'a' → logprob: -3.7342114448547363
    3. '-' → logprob: -3.8592114448547363
    4. 'sequence' → logprob: -4.234211444854736
    5. 'b' → logprob: -4.359211444854736
    6. '   ' → logprob: -4.609211444854736
    7. 'sé' → logprob: -4.734211444854736
    8. '-array' → logprob: -6.109211444854736
    9. '-s' → logprob: -6.484211444854736
    10. '#' → logprob: -6.609211444854736

Token 189: 'é' (ID: 377)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.05369581654667854
    2. 'quences' → logprob: -3.4286959171295166
    3. 'é' → logprob: -4.8036956787109375
    4. 'q' → logprob: -5.1786956787109375
    5. 'e' → logprob: -5.9286956787109375
    6. '`' → logprob: -7.9286956787109375
    7. 'eq' → logprob: -7.9286956787109375
    8. 'a' → logprob: -7.9286956787109375
    9. 'ub' → logprob: -8.053695678710938
    10. 'équ' → logprob: -8.303695678710938

Token 190: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.003529986832290888
    2. 'q' → logprob: -5.878530025482178
    3. 'quences' → logprob: -7.878530025482178
    4. 'ction' → logprob: -9.25352954864502
    5. 'ance' → logprob: -10.00352954864502
    6. 'que' → logprob: -10.37852954864502
    7. '   ' → logprob: -10.50352954864502
    8. '#' → logprob: -10.75352954864502
    9. '`' → logprob: -10.87852954864502
    10. 'qu' → logprob: -11.00352954864502

Token 191: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024534350261092186
    2. 'b' → logprob: -4.649534225463867
    3. '.' → logprob: -4.899534225463867
    4. 'n' → logprob: -6.399534225463867
    5. 'def' → logprob: -6.399534225463867
    6. ' b' → logprob: -7.649534225463867
    7. 'count' → logprob: -7.774534225463867
    8. ' =' → logprob: -7.899534225463867
    9. ',' → logprob: -8.024534225463867
    10. 'prefix' → logprob: -8.149534225463867

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05864818021655083
    2. 'b' → logprob: -3.433648109436035
    3. ' b' → logprob: -4.433648109436035
    4. 'n' → logprob: -4.933648109436035
    5. ' n' → logprob: -5.433648109436035
    6. ' prefix' → logprob: -7.558648109436035
    7. 'prefix' → logprob: -8.183648109436035
    8. 'def' → logprob: -9.183648109436035
    9. 'count' → logprob: -9.933648109436035
    10. '	b' → logprob: -10.433648109436035

Token 193: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5345708131790161
    2. ' b' → logprob: -1.4095708131790161
    3. ' n' → logprob: -2.6595706939697266
    4. 'b' → logprob: -2.7845706939697266
    5. 'n' → logprob: -4.284570693969727
    6. ' prefix' → logprob: -4.534570693969727
    7. ' count' → logprob: -5.034570693969727
    8. 'count' → logprob: -6.159570693969727
    9. ' cnt' → logprob: -7.034570693969727
    10. 'prefix' → logprob: -7.534570693969727

Token 194: ' Donc' (ID: 88837)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.585671603679657
    2. 'count' → logprob: -1.4606716632843018
    3. 'prefix' → logprob: -2.9606716632843018
    4. ' b' → logprob: -3.2106716632843018
    5. '   ' → logprob: -3.3356716632843018
    6. 'n' → logprob: -3.4606716632843018
    7. ' prefix' → logprob: -4.335671424865723
    8. ' count' → logprob: -4.585671424865723
    9. ' n' → logprob: -4.710671424865723
    10. 'def' → logprob: -5.210671424865723

Token 195: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5258415937423706
    2. 'count' → logprob: -1.5258415937423706
    3. ' count' → logprob: -2.77584171295166
    4. ' res' → logprob: -3.15084171295166
    5. ' n' → logprob: -4.27584171295166
    6. 'left' → logprob: -4.77584171295166
    7. 'res' → logprob: -4.77584171295166
    8. ' j' → logprob: -5.27584171295166
    9. ' left' → logprob: -5.65084171295166
    10. 'n' → logprob: -5.65084171295166

Token 196: ' cherche' (ID: 52345)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.5445204973220825
    2. 'pe' → logprob: -2.794520378112793
    3. 'comp' → logprob: -2.794520378112793
    4. 'continue' → logprob: -3.419520378112793
    5. 'do' → logprob: -3.544520378112793
    6. 'va' → logprob: -3.544520378112793
    7. ' cherche' → logprob: -3.669520378112793
    8. 'veux' → logprob: -3.669520378112793
    9. 'util' → logprob: -3.794520378112793
    10. ' doit' → logprob: -4.169520378112793

Token 197: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9087609648704529
    2. ' à' → logprob: -1.2837610244750977
    3. '   ' → logprob: -2.1587610244750977
    4. 'def' → logprob: -3.4087610244750977
    5. ' une' → logprob: -3.6587610244750977
    6. 'à' → logprob: -3.6587610244750977
    7. ' le' → logprob: -4.033761024475098
    8. ' i' → logprob: -4.283761024475098
    9. ' ' → logprob: -4.908761024475098
    10. ' un' → logprob: -5.033761024475098

Token 198: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.15507644414901733
    2. 'plus' → logprob: -2.405076503753662
    3. ' nombre' → logprob: -3.280076503753662
    4. 'minimum' → logprob: -5.030076503753662
    5. 's' → logprob: -6.530076503753662
    6. 'n' → logprob: -7.155076503753662
    7. 'i' → logprob: -7.280076503753662
    8. 'total' → logprob: -7.405076503753662
    9. 'prefix' → logprob: -7.405076503753662
    10. 'b' → logprob: -7.530076503753662

Token 199: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.106757402420044
    2. 'total' → logprob: -1.231757402420044
    3. 'de' → logprob: -1.481757402420044
    4. ' total' → logprob: -2.231757402420044
    5. '   ' → logprob: -3.731757402420044
    6. ' ' → logprob: -5.356757164001465
    7. 'd' → logprob: -5.606757164001465
    8. ' of' → logprob: -6.106757164001465
    9. 'count' → logprob: -6.356757164001465
    10. ' d' → logprob: -6.981757164001465

Token 200: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5284256339073181
    2. ' sous' → logprob: -1.653425693511963
    3. 'i' → logprob: -2.153425693511963
    4. 'indices' → logprob: -2.903425693511963
    5. ' indices' → logprob: -4.153425693511963
    6. 'sub' → logprob: -4.153425693511963
    7. ' i' → logprob: -5.403425693511963
    8. 'segments' → logprob: -6.028425693511963
    9. 'prefix' → logprob: -6.403425693511963
    10. 'j' → logprob: -6.528425693511963

Token 201: '-table' (ID: 35909)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0105782747268677
    2. 'sé' → logprob: -1.2605782747268677
    3. '_sequences' → logprob: -2.135578155517578
    4. 's' → logprob: -2.135578155517578
    5. '_s' → logprob: -3.135578155517578
    6. '-s' → logprob: -3.760578155517578
    7. 'array' → logprob: -5.010578155517578
    8. 'arrays' → logprob: -5.135578155517578
    9. 'seq' → logprob: -5.510578155517578
    10. '-' → logprob: -5.635578155517578

Token 202: 'aux' (ID: 5454)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0015116469003260136
    2. 'ttes' → logprob: -7.001511573791504
    3. 'ctions' → logprob: -8.626511573791504
    4. 'ques' → logprob: -9.626511573791504
    5. 'aux' → logprob: -9.876511573791504
    6. 'ences' → logprob: -10.251511573791504
    7. 'ces' → logprob: -10.376511573791504
    8. 'q' → logprob: -10.376511573791504
    9. 'qu' → logprob: -10.626511573791504
    10. '   ' → logprob: -10.751511573791504

Token 203: ' cont' (ID: 836)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5930542945861816
    2. ' où' → logprob: -2.0930542945861816
    3. 'i' → logprob: -2.5930542945861816
    4. 'où' → logprob: -2.7180542945861816
    5. 's' → logprob: -3.2180542945861816
    6. ' where' → logprob: -3.9680542945861816
    7. ' avec' → logprob: -4.093054294586182
    8. ' ' → logprob: -4.718054294586182
    9. ',' → logprob: -4.718054294586182
    10. ' with' → logprob: -4.718054294586182

Token 204: 'igus' (ID: 79914)
  Prédit: 'igus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igus' → logprob: -0.003712315345183015
    2. 'in' → logprob: -6.878712177276611
    3. 'inus' → logprob: -7.128712177276611
    4. 'igu' → logprob: -7.253712177276611
    5. 'inu' → logprob: -7.878712177276611
    6. 'ig' → logprob: -8.00371265411377
    7. 'enus' → logprob: -9.50371265411377
    8. 'iguous' → logprob: -9.75371265411377
    9. 'nus' → logprob: -10.12871265411377
    10. 'nu' → logprob: -10.25371265411377

Token 205: ' avec' (ID: 3937)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9215938448905945
    2. 'i' → logprob: -1.2965939044952393
    3. ' où' → logprob: -2.4215939044952393
    4. 'où' → logprob: -2.6715939044952393
    5. ' avec' → logprob: -3.6715939044952393
    6. ',' → logprob: -4.29659366607666
    7. 's' → logprob: -4.29659366607666
    8. '   ' → logprob: -4.54659366607666
    9. ' ' → logprob: -4.67159366607666
    10. 'a' → logprob: -4.79659366607666

Token 206: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.9146164655685425
    2. 'sum' → logprob: -1.2896164655685425
    3. 'b' → logprob: -1.6646164655685425
    4. 'at' → logprob: -3.539616584777832
    5. 's' → logprob: -3.789616584777832
    6. 'a' → logprob: -4.289616584777832
    7. 'la' → logprob: -4.414616584777832
    8. ' au' → logprob: -4.664616584777832
    9. 'bis' → logprob: -4.914616584777832
    10. 'prefix' → logprob: -5.039616584777832

Token 207: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.009743809700012207
    2. 'mo' → logprob: -5.384743690490723
    3. 'plus' → logprob: -6.009743690490723
    4. 'least' → logprob: -7.509743690490723
    5. '```' → logprob: -7.634743690490723
    6. ' moins' → logprob: -7.759743690490723
    7. '   ' → logprob: -7.884743690490723
    8. 'm' → logprob: -8.384743690490723
    9. 'minimum' → logprob: -8.634743690490723
    10. 'min' → logprob: -9.134743690490723

Token 208: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.033686961978673935
    2. ' K' → logprob: -3.408686876296997
    3. 'k' → logprob: -10.158686637878418
    4. '```' → logprob: -14.158686637878418
    5. ' ' → logprob: -14.283686637878418
    6. '`' → logprob: -14.533686637878418
    7. ' k' → logprob: -14.658686637878418
    8. 'un' → logprob: -16.658687591552734
    9. '   ' → logprob: -16.783687591552734
    10. ' ' → logprob: -17.908687591552734

Token 209: ' uns' (ID: 3975)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3431539833545685
    2. ' ' → logprob: -2.343153953552246
    3. ' éléments' → logprob: -2.843153953552246
    4. 'b' → logprob: -3.343153953552246
    5. 'élé' → logprob: -3.593153953552246
    6. ' b' → logprob: -4.218153953552246
    7. 'un' → logprob: -4.468153953552246
    8. ' ones' → logprob: -4.593153953552246
    9. 'ones' → logprob: -5.218153953552246
    10. ' elements' → logprob: -5.218153953552246

Token 210: '.
' (ID: 558)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.2266509085893631
    2. '.' → logprob: -2.6016509532928467
    3. 'dans' → logprob: -2.9766509532928467
    4. '   ' → logprob: -3.4766509532928467
    5. ',' → logprob: -3.7266509532928467
    6. 'def' → logprob: -5.976650714874268
    7. 's' → logprob: -6.101650714874268
    8. ')' → logprob: -6.101650714874268
    9. ' =' → logprob: -6.226650714874268
    10. ' in' → logprob: -6.226650714874268

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06540115177631378
    2. ' prefix' → logprob: -3.065401077270508
    3. 'prefix' → logprob: -5.065401077270508
    4. ' b' → logprob: -5.815401077270508
    5. 'b' → logprob: -6.440401077270508
    6. ' n' → logprob: -6.565401077270508
    7. ' s' → logprob: -7.065401077270508
    8. 'n' → logprob: -7.440401077270508
    9. ' count' → logprob: -7.440401077270508
    10. 'count' → logprob: -7.440401077270508

Token 212: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4013902544975281
    2. 'prefix' → logprob: -1.5263903141021729
    3. ' prefix' → logprob: -3.151390314102173
    4. 'count' → logprob: -3.276390314102173
    5. 'b' (adapté à ' b') → logprob: -4.026390075683594
    6. 'cnt' → logprob: -5.901390075683594
    7. 'n' → logprob: -6.151390075683594
    8. ' b' → logprob: -6.401390075683594
    9. 'def' → logprob: -6.526390075683594
    10. 'counts' → logprob: -6.901390075683594

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519323229789734
    2. ' =' → logprob: -1.5019323825836182
    3. '=[' → logprob: -13.376932144165039
    4. '=[]' → logprob: -13.501932144165039
    5. '[' → logprob: -16.50193214416504
    6. ' =[' → logprob: -16.62693214416504
    7. '＝' → logprob: -17.25193214416504
    8. ',' → logprob: -18.00193214416504
    9. '=b' → logprob: -18.37693214416504
    10. ' ' → logprob: -18.37693214416504

Token 214: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015205175441224128
    2. ' [' → logprob: -9.500151634216309
    3. '[i' → logprob: -10.000151634216309
    4. '[len' → logprob: -11.000151634216309
    5. '[a' → logprob: -11.750151634216309
    6. '[int' → logprob: -12.750151634216309
    7. '[(' → logprob: -12.875151634216309
    8. '[b' → logprob: -14.500151634216309
    9. '[list' → logprob: -14.500151634216309
    10. '[]' → logprob: -16.000152587890625

Token 215: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. 'int' → logprob: -9.875075340270996
    3. '0' → logprob: -10.750075340270996
    4. ' ' → logprob: -13.625075340270996
    5. '(' → logprob: -14.250075340270996
    6. 'a' → logprob: -16.25007438659668
    7. '(int' → logprob: -17.62507438659668
    8. ' int' → logprob: -17.62507438659668
    9. '   ' → logprob: -18.00007438659668
    10. '(a' → logprob: -18.25007438659668

Token 216: ']*(' (ID: 92627)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.371141642332077
    2. 'if' → logprob: -1.6211416721343994
    3. ']' → logprob: -2.2461416721343994
    4. 'for' → logprob: -5.87114143371582
    5. ' for' → logprob: -6.12114143371582
    6. ']*' → logprob: -7.24614143371582
    7. '   ' → logprob: -7.74614143371582
    8. ']*(' → logprob: -8.37114143371582
    9. ']+' → logprob: -9.37114143371582
    10. ' ' → logprob: -10.62114143371582

Token 217: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3425219549390022e-05
    2. 'len' → logprob: -11.25001335144043
    3. ' N' → logprob: -15.37501335144043
    4. 'n' → logprob: -16.50001335144043
    5. '(N' → logprob: -17.12501335144043
    6. '   ' → logprob: -19.25001335144043
    7. '2' → logprob: -20.12501335144043
    8. '	N' → logprob: -20.12501335144043
    9. 'length' → logprob: -20.25001335144043
    10. '(len' → logprob: -21.00001335144043

Token 218: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22129204869270325
    2. '+' → logprob: -2.096292018890381
    3. ')
' → logprob: -2.596292018890381
    4. ' )' → logprob: -7.971292018890381
    5. ' +' → logprob: -8.346292495727539
    6. '
' → logprob: -9.096292495727539
    7. ')+' → logprob: -9.471292495727539
    8. '1' → logprob: -9.596292495727539
    9. '+
' → logprob: -10.096292495727539
    10. '+)' → logprob: -10.221292495727539

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -15.625003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '１' → logprob: -19.500003814697266
    6. '```' → logprob: -19.500003814697266
    7. '
' → logprob: -20.125003814697266
    8. '

' → logprob: -20.625003814697266
    9. '3' → logprob: -21.062503814697266
    10. '0' → logprob: -21.125003814697266

Token 220: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030427174642682076
    2. ')' → logprob: -3.5304272174835205
    3. ')
' → logprob: -7.405426979064941
    4. ' )
' → logprob: -9.905426979064941
    5. ')

' → logprob: -11.155426979064941
    6. '+' → logprob: -13.905426979064941
    7. '
' → logprob: -14.155426979064941
    8. ' )' → logprob: -14.155426979064941
    9. ')b' → logprob: -14.155426979064941
    10. ')`
' → logprob: -15.030426979064941

Token 221: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6961979269981384
    2. 'for' → logprob: -0.6961979269981384
    3. '
' → logprob: -6.696197986602783
    4. '<|end|>' → logprob: -6.946197986602783
    5. '   ' → logprob: -7.321197986602783
    6. '	for' → logprob: -9.071197509765625
    7. ' ' → logprob: -11.696197509765625
    8. '<|end|>' → logprob: -11.821197509765625
    9. 'b' → logprob: -12.071197509765625
    10. '    
' → logprob: -12.071197509765625

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08195939660072327
    2. ' for' → logprob: -2.5819594860076904
    3. 'count' → logprob: -6.081959247589111
    4. 'prefix' → logprob: -7.956959247589111
    5. 'c' → logprob: -8.58195972442627
    6. 'cum' → logprob: -9.83195972442627
    7. 'sum' → logprob: -10.20695972442627
    8. 's' → logprob: -10.45695972442627
    9. 'cnt' → logprob: -10.45695972442627
    10. ' count' → logprob: -11.08195972442627

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141518115997314
    2. ' i' → logprob: -1.7014151811599731
    3. '	i' → logprob: -14.076415061950684
    4. '_i' → logprob: -14.576415061950684
    5. 'I' → logprob: -15.076415061950684
    6. ' ' → logprob: -15.951415061950684
    7. '   ' → logprob: -16.201416015625
    8. 'range' → logprob: -16.701416015625
    9. 'int' → logprob: -16.826416015625
    10. '1' → logprob: -16.951416015625

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06828036904335022
    2. 'in' → logprob: -2.8182804584503174
    3. '1' → logprob: -5.568280220031738
    4. '(' → logprob: -6.818280220031738
    5. ' ' → logprob: -6.943280220031738
    6. '   ' → logprob: -8.443280220031738
    7. '+' → logprob: -9.818280220031738
    8. '  ' → logprob: -10.693280220031738
    9. '    ' → logprob: -10.818280220031738
    10. ')' → logprob: -11.193280220031738

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0297523383051157
    2. ' range' → logprob: -3.529752254486084
    3. '(range' → logprob: -13.654752731323242
    4. ' ' → logprob: -14.904752731323242
    5. '1' → logprob: -16.654752731323242
    6. '   ' → logprob: -16.654752731323242
    7. '	range' → logprob: -17.029752731323242
    8. 'ange' → logprob: -17.404752731323242
    9. 'r' → logprob: -17.529752731323242
    10. '  ' → logprob: -17.779752731323242

Token 226: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0046258182264864445
    2. '(N' → logprob: -5.3796257972717285
    3. '1' → logprob: -12.254626274108887
    4. ' (' → logprob: -15.254626274108887
    5. ' ' → logprob: -15.379626274108887
    6. 'N' → logprob: -16.00462532043457
    7. '(n' → logprob: -16.62962532043457
    8. '(
' → logprob: -16.75462532043457
    9. '(len' → logprob: -17.00462532043457
    10. '   ' → logprob: -18.50462532043457

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4490261375904083
    2. '):' → logprob: -1.074026107788086
    3. '+' → logprob: -3.949026107788086
    4. '1' → logprob: -7.574026107788086
    5. '
' → logprob: -8.699026107788086
    6. '   ' → logprob: -10.074026107788086
    7. '):
' → logprob: -10.574026107788086
    8. ' ):' → logprob: -10.574026107788086
    9. ' ' → logprob: -10.824026107788086
    10. ' +' → logprob: -11.074026107788086

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03857532516121864
    2. 'b' → logprob: -3.9135754108428955
    3. ' b' → logprob: -4.038575172424316
    4. '   ' → logprob: -8.538575172424316
    5. '	b' → logprob: -11.038575172424316
    6. '	   ' → logprob: -11.788575172424316
    7. ',' → logprob: -12.538575172424316
    8. '    ' → logprob: -12.663575172424316
    9. '	' → logprob: -12.663575172424316
    10. ' if' → logprob: -13.038575172424316

Token 229: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.16624902188777924
    2. ' b' → logprob: -2.1662490367889404
    3. '       ' → logprob: -3.5412490367889404
    4. '   ' → logprob: -4.666248798370361
    5. '	b' → logprob: -8.79124927520752
    6. ' ' → logprob: -11.29124927520752
    7. ' if' → logprob: -13.04124927520752
    8. '    ' → logprob: -13.16624927520752
    9. '	' → logprob: -13.91624927520752
    10. '  ' → logprob: -13.91624927520752

Token 230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010831133840838447
    2. '[b' → logprob: -10.00010871887207
    3. 'b' → logprob: -10.25010871887207
    4. '[' → logprob: -11.25010871887207
    5. ' [' → logprob: -11.50010871887207
    6. 'i' → logprob: -14.12510871887207
    7. '[I' → logprob: -14.12510871887207
    8. '=' → logprob: -14.62510871887207
    9. '][' → logprob: -14.62510871887207
    10. '[N' → logprob: -14.62510871887207

Token 231: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022209398448467255
    2. '+' → logprob: -3.897209405899048
    3. ']=' → logprob: -6.897209167480469
    4. '1' → logprob: -7.897209167480469
    5. ' ]' → logprob: -9.147209167480469
    6. '=' → logprob: -9.772209167480469
    7. ']+=' → logprob: -9.897209167480469
    8. ' +' → logprob: -10.147209167480469
    9. ' =' → logprob: -10.897209167480469
    10. ']+' → logprob: -12.522209167480469

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015633940347470343
    2. ' ' → logprob: -8.87515640258789
    3. '   ' → logprob: -11.25015640258789
    4. '```' → logprob: -14.50015640258789
    5. ')' → logprob: -14.62515640258789
    6. 'i' → logprob: -14.68765640258789
    7. '0' → logprob: -15.12515640258789
    8. '       ' → logprob: -15.43765640258789
    9. 'b' → logprob: -15.68765640258789
    10. '  ' → logprob: -15.87515640258789

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17709118127822876
    2. '=' → logprob: -2.177091121673584
    3. ' =' → logprob: -3.552091121673584
    4. ']=' → logprob: -4.177091121673584
    5. ']+=' → logprob: -6.052091121673584
    6. ')' → logprob: -6.427091121673584
    7. '=b' → logprob: -7.427091121673584
    8. 'b' → logprob: -9.427091598510742
    9. ' ]' → logprob: -9.427091598510742
    10. ')=' → logprob: -9.677091598510742

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014198172837495804
    2. ' =' → logprob: -4.264198303222656
    3. '+=' → logprob: -10.639198303222656
    4. '=b' → logprob: -11.889198303222656
    5. ' +=' → logprob: -12.764198303222656
    6. '=int' → logprob: -13.889198303222656
    7. 'b' → logprob: -17.139198303222656
    8. '=a' → logprob: -18.014198303222656
    9. '=(' → logprob: -18.139198303222656
    10. '>' → logprob: -18.264198303222656

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.749814019713085e-06
    2. ' b' → logprob: -12.125006675720215
    3. '1' → logprob: -13.875006675720215
    4. '(b' → logprob: -16.12500762939453
    5. 'int' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.50000762939453
    7. '(' → logprob: -17.12500762939453
    8. '	b' → logprob: -17.87500762939453
    9. 'a' → logprob: -18.75000762939453
    10. ' ' → logprob: -19.25000762939453

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.375
    3. '[I' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. ' [' → logprob: -17.875
    6. '[' → logprob: -18.125
    7. 'b' → logprob: -19.0
    8. '`' → logprob: -19.75
    9. '
' → logprob: -20.25
    10. ' i' → logprob: -20.25

Token 237: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20144695043563843
    2. ' +' → logprob: -1.7014470100402832
    3. '+b' → logprob: -10.701446533203125
    4. ']+' → logprob: -12.076446533203125
    5. ')+' → logprob: -13.576446533203125
    6. '+a' → logprob: -13.576446533203125
    7. ' plus' → logprob: -14.076446533203125
    8. ']' → logprob: -14.326446533203125
    9. 'b' → logprob: -15.201446533203125
    10. ')' → logprob: -15.576446533203125

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04868433251976967
    2. ' +' → logprob: -3.0486843585968018
    3. '+b' → logprob: -9.298684120178223
    4. '+a' → logprob: -12.923684120178223
    5. '+(' → logprob: -13.673684120178223
    6. '+
' → logprob: -14.673684120178223
    7. 'b' → logprob: -15.173684120178223
    8. '+i' → logprob: -15.548684120178223
    9. ' plus' → logprob: -15.673684120178223
    10. '+r' → logprob: -15.923684120178223

Token 239: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22694072127342224
    2. '(' → logprob: -2.101940631866455
    3. '(a' → logprob: -2.726940631866455
    4. '(int' → logprob: -4.351940631866455
    5. '1' → logprob: -6.226940631866455
    6. ' ' → logprob: -8.476941108703613
    7. '   ' → logprob: -8.726941108703613
    8. ' int' → logprob: -10.226941108703613
    9. '(ans' → logprob: -10.726941108703613
    10. '(i' → logprob: -10.851941108703613

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017996503738686442
    2. ' ' → logprob: -6.376799583435059
    3. 'a' → logprob: -9.376799583435059
    4. ' a' → logprob: -11.876799583435059
    5. '(a' → logprob: -12.876799583435059
    6. 'int' → logprob: -13.251799583435059
    7. '(' → logprob: -14.626799583435059
    8. ' int' → logprob: -14.751799583435059
    9. '0' → logprob: -15.501799583435059
    10. ' (' → logprob: -15.626799583435059

Token 241: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008791954256594181
    2. 'if' → logprob: -4.758791923522949
    3. '1' → logprob: -9.25879192352295
    4. 'a' → logprob: -10.25879192352295
    5. ' ' → logprob: -10.63379192352295
    6. ' a' → logprob: -10.88379192352295
    7. '[a' → logprob: -14.00879192352295
    8. 'int' → logprob: -14.38379192352295
    9. '(a' → logprob: -14.38379192352295
    10. ')' → logprob: -14.75879192352295

Token 242: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02975199744105339
    2. ' a' → logprob: -3.529752016067505
    3. '(a' → logprob: -14.279751777648926
    4. ' ' → logprob: -15.029751777648926
    5. '   ' → logprob: -15.154751777648926
    6. '	a' → logprob: -15.279751777648926
    7. '[a' → logprob: -17.529752731323242
    8. '_a' → logprob: -18.029752731323242
    9. '  ' → logprob: -18.404752731323242
    10. ')a' → logprob: -18.654752731323242

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.750004768371582
    3. ' [' → logprob: -13.750004768371582
    4. '[I' → logprob: -16.250003814697266
    5. '[
' → logprob: -16.375003814697266
    6. 'i' → logprob: -16.500003814697266
    7. '[a' → logprob: -17.625003814697266
    8. ' ' → logprob: -17.750003814697266
    9. '```' → logprob: -18.250003814697266
    10. '[j' → logprob: -19.375003814697266

Token 244: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.43247514963150024
    2. '<=' → logprob: -1.0574750900268555
    3. '[i' → logprob: -5.6824750900268555
    4. ']<=' → logprob: -8.307475090026855
    5. '[' → logprob: -9.932475090026855
    6. ')<=' → logprob: -10.557475090026855
    7. ' ' → logprob: -10.932475090026855
    8. '[]' → logprob: -11.307475090026855
    9. ']' → logprob: -12.182475090026855
    10. '[
' → logprob: -13.932475090026855

Token 245: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.08895178884267807
    2. ' <=' → logprob: -2.463951826095581
    3. ')<=' → logprob: -12.21395206451416
    4. ']<=' → logprob: -12.46395206451416
    5. '[' → logprob: -12.96395206451416
    6. ' ' → logprob: -14.33895206451416
    7. ')' → logprob: -15.83895206451416
    8. '≤' → logprob: -16.588951110839844
    9. 'x' → logprob: -16.963951110839844
    10. ' ' → logprob: -17.088951110839844

Token 246: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020667314529419
    2. ' x' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.22520637512207
    4. '	x' → logprob: -17.47520637512207
    5. '(x' → logprob: -20.35020637512207
    6. ')x' → logprob: -20.72520637512207
    7. '"x' → logprob: -20.85020637512207
    8. ' ' → logprob: -21.47520637512207
    9. ''x' → logprob: -21.60020637512207
    10. '_x' → logprob: -21.97520637512207

Token 247: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0012986884685233235
    2. 'else' → logprob: -7.001298904418945
    3. ')' → logprob: -7.876298904418945
    4. ' )' → logprob: -12.501298904418945
    5. '	else' → logprob: -13.001298904418945
    6. ' ' → logprob: -14.126298904418945
    7. '<|end|>' → logprob: -14.376298904418945
    8. '<|end|>' → logprob: -16.876298904418945
    9. ' ' → logprob: -18.251298904418945
    10. '   ' → logprob: -18.376298904418945

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3133053481578827
    2. ' ' → logprob: -1.313305377960205
    3. '0' → logprob: -10.063304901123047
    4. ' ' → logprob: -14.063304901123047
    5. ')' → logprob: -15.438304901123047
    6. ' )' → logprob: -17.500804901123047
    7. '  ' → logprob: -17.750804901123047
    8. ' 
' → logprob: -18.063304901123047
    9. '   ' → logprob: -18.063304901123047
    10. '```' → logprob: -18.250804901123047

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019288709154352546
    2. ' ' → logprob: -6.251928806304932
    3. '1' → logprob: -15.25192928314209
    4. ' ' → logprob: -18.626928329467773
    5. '   ' → logprob: -20.126928329467773
    6. ')' → logprob: -20.626928329467773
    7. '  ' → logprob: -21.001928329467773
    8. '۰' → logprob: -21.751928329467773
    9. '```' → logprob: -22.314428329467773
    10. '０' → logprob: -22.626928329467773

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -13.750022888183594
    4. ')

' → logprob: -16.375022888183594
    5. ')return' → logprob: -17.000022888183594
    6. '))' → logprob: -17.250022888183594
    7. ')
' → logprob: -17.375022888183594
    8. '   ' → logprob: -18.125022888183594
    9. ')`' → logprob: -18.125022888183594
    10. ')#' → logprob: -18.500022888183594

Token 251: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5401996970176697
    2. '   ' → logprob: -0.9151996970176697
    3. '    
' → logprob: -4.1651997566223145
    4. 'count' → logprob: -7.5401997566223145
    5. ' count' → logprob: -8.040199279785156
    6. '  
' → logprob: -9.040199279785156
    7. '
' → logprob: -9.415199279785156
    8. '   
' → logprob: -9.790199279785156
    9. ' 
' → logprob: -9.915199279785156
    10. 'total' → logprob: -10.290199279785156

Token 252: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2900151014328003
    2. '   ' → logprob: -1.4150151014328003
    3. 'res' → logprob: -1.9150151014328003
    4. ' res' → logprob: -2.79001522064209
    5. 'ans' → logprob: -3.04001522064209
    6. '
' → logprob: -3.16501522064209
    7. ' count' → logprob: -3.16501522064209
    8. 'total' → logprob: -3.29001522064209
    9. 'left' → logprob: -3.54001522064209
    10. 'result' → logprob: -3.54001522064209

Token 253: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8010914921760559
    2. 'res' → logprob: -1.4260914325714111
    3. 'ans' → logprob: -2.426091432571411
    4. ' res' → logprob: -2.926091432571411
    5. 'left' → logprob: -3.426091432571411
    6. ' count' → logprob: -3.551091432571411
    7. 'result' → logprob: -3.551091432571411
    8. 'from' → logprob: -3.676091432571411
    9. 'total' → logprob: -4.17609167098999
    10. '   ' → logprob: -4.80109167098999

Token 254: ' compte' (ID: 19657)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14188547432422638
    2. 'left' → logprob: -3.51688551902771
    3. 'def' → logprob: -3.76688551902771
    4. 'ans' → logprob: -3.89188551902771
    5. '   ' → logprob: -4.766885280609131
    6. '=' → logprob: -5.141885280609131
    7. ' count' → logprob: -5.391885280609131
    8. 'cnt' → logprob: -5.516885280609131
    9. ' wants' → logprob: -5.641885280609131
    10. 'res' → logprob: -5.641885280609131

Token 255: ' le' (ID: 505)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.124772071838379
    2. 'res' → logprob: -1.249772071838379
    3. '   ' → logprob: -1.374772071838379
    4. 'result' → logprob: -3.124772071838379
    5. ' ans' → logprob: -3.249772071838379
    6. 'ans' → logprob: -4.124772071838379
    7. ' result' → logprob: -4.124772071838379
    8. ' total' → logprob: -4.999772071838379
    9. 'total' → logprob: -5.624772071838379
    10. 'count' → logprob: -5.999772071838379

Token 256: ' nombre' (ID: 9733)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1217594146728516
    2. 'count' → logprob: -1.3717594146728516
    3. 'result' → logprob: -1.6217594146728516
    4. 'total' → logprob: -2.3717594146728516
    5. 'ans' → logprob: -2.9967594146728516
    6. ' count' → logprob: -4.121759414672852
    7. ' res' → logprob: -4.371759414672852
    8. 'cnt' → logprob: -4.496759414672852
    9. ' total' → logprob: -4.621759414672852
    10. 'nombre' → logprob: -4.871759414672852

Token 257: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0242162942886353
    2. 'total' → logprob: -1.1492162942886353
    3. 'result' → logprob: -2.6492161750793457
    4. ' total' → logprob: -2.8992161750793457
    5. ' =' → logprob: -3.0242161750793457
    6. ' of' → logprob: -3.8992161750793457
    7. 'count' → logprob: -3.8992161750793457
    8. 'res' → logprob: -4.024216175079346
    9. '=' → logprob: -4.399216175079346
    10. 'cnt' → logprob: -4.524216175079346

Token 258: ' p' (ID: 275)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.0598798990249634
    2. 's' → logprob: -1.9348798990249634
    3. 'j' → logprob: -2.059879779815674
    4. 'p' → logprob: -2.309879779815674
    5. ' sous' → logprob: -2.309879779815674
    6. ' j' → logprob: -3.059879779815674
    7. ' p' → logprob: -3.309879779815674
    8. ' sub' → logprob: -3.434879779815674
    9. 'pairs' → logprob: -3.684879779815674
    10. 'i' → logprob: -3.809879779815674

Token 259: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.6554763317108154
    2. 'r' → logprob: -1.5304763317108154
    3. 'refix' → logprob: -2.7804763317108154
    4. 'i' → logprob: -2.9054763317108154
    5. 'j' → logprob: -3.1554763317108154
    6. 'ointers' → logprob: -3.9054763317108154
    7. 'l' → logprob: -4.2804765701293945
    8. 'left' → logprob: -4.5304765701293945
    9. 'pairs' → logprob: -4.5304765701293945
    10. 'aires' → logprob: -4.6554765701293945

Token 260: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5472465753555298
    2. '(i' → logprob: -1.0472465753555298
    3. ' i' → logprob: -2.9222464561462402
    4. 'i' → logprob: -4.42224645614624
    5. ' de' → logprob: -6.42224645614624
    6. '(j' → logprob: -6.67224645614624
    7. 'j' → logprob: -8.172246932983398
    8. ' j' → logprob: -8.422246932983398
    9. 'd' → logprob: -8.547246932983398
    10. '(l' → logprob: -9.047246932983398

Token 261: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20596648752689362
    2. 'j' → logprob: -2.2059664726257324
    3. 'l' → logprob: -3.4559664726257324
    4. 'r' → logprob: -4.330966472625732
    5. ')' → logprob: -4.580966472625732
    6. ' i' → logprob: -5.705966472625732
    7. '(i' → logprob: -5.705966472625732
    8. 'left' → logprob: -5.955966472625732
    9. ' (' → logprob: -6.080966472625732
    10. '(j' → logprob: -6.080966472625732

Token 262: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03887797147035599
    2. ',r' → logprob: -3.2888779640197754
    3. 'r' → logprob: -8.038878440856934
    4. ' ,' → logprob: -8.913878440856934
    5. ',j' → logprob: -9.163878440856934
    6. ',right' → logprob: -9.288878440856934
    7. ',i' → logprob: -10.913878440856934
    8. '   ' → logprob: -11.038878440856934
    9. '=' → logprob: -11.288878440856934
    10. ',q' → logprob: -11.538878440856934

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037753814831376076
    2. ' )' → logprob: -6.253775596618652
    3. ',' → logprob: -6.503775596618652
    4. ',)' → logprob: -8.753775596618652
    5. '),' → logprob: -9.628775596618652
    6. 'for' → logprob: -10.253775596618652
    7. ')
' → logprob: -10.753775596618652
    8. '):' → logprob: -11.003775596618652
    9. ' ,' → logprob: -11.878775596618652
    10. ' ' → logprob: -11.878775596618652

Token 264: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8934306502342224
    2. '   ' → logprob: -1.0184307098388672
    3. ',' → logprob: -2.518430709838867
    4. '
' → logprob: -2.518430709838867
    5. ' with' → logprob: -4.018430709838867
    6. '=' → logprob: -4.643430709838867
    7. ' where' → logprob: -5.143430709838867
    8. ' such' → logprob: -5.143430709838867
    9. ' that' → logprob: -5.268430709838867
    10. 'with' → logprob: -5.518430709838867

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008832485415041447
    2. ' b' → logprob: -5.3838324546813965
    3. 'r' → logprob: -5.7588324546813965
    4. '0' → logprob: -7.5088324546813965
    5. 'l' → logprob: -8.258832931518555
    6. 'p' → logprob: -8.758832931518555
    7. ' r' → logprob: -10.883832931518555
    8. '1' → logprob: -10.883832931518555
    9. '   ' → logprob: -11.008832931518555
    10. ' ' → logprob: -11.633832931518555

Token 266: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.009012545458972454
    2. '[l' → logprob: -5.009012699127197
    3. 'r' → logprob: -6.509012699127197
    4. '[j' → logprob: -7.759012699127197
    5. '[' → logprob: -9.259012222290039
    6. '[i' → logprob: -9.259012222290039
    7. '[p' → logprob: -9.884012222290039
    8. '   ' → logprob: -11.134012222290039
    9. '[b' → logprob: -11.134012222290039
    10. ',r' → logprob: -11.384012222290039

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29997700452804565
    2. ']-' → logprob: -2.5499770641326904
    3. '-' → logprob: -2.9249770641326904
    4. ']>=' → logprob: -2.9249770641326904
    5. ' -' → logprob: -3.0499770641326904
    6. '>=' → logprob: -4.049976825714111
    7. '[' → logprob: -5.799976825714111
    8. ' ' → logprob: -7.424976825714111
    9. '≥' → logprob: -7.424976825714111
    10. ' >=' → logprob: -7.549976825714111

Token 268: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3436468243598938
    2. ' >=' → logprob: -2.218646764755249
    3. ' -' → logprob: -2.343646764755249
    4. '-' → logprob: -3.343646764755249
    5. '[' → logprob: -4.218647003173828
    6. '>' → logprob: -4.343647003173828
    7. '">' → logprob: -4.718647003173828
    8. 'b' → logprob: -6.218647003173828
    9. '≥' → logprob: -6.343647003173828
    10. ' ' → logprob: -6.593647003173828

Token 269: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0059370906092226505
    2. ' b' → logprob: -5.130937099456787
    3. '   ' → logprob: -12.005936622619629
    4. ' ' → logprob: -13.755936622619629
    5. '```' → logprob: -14.880936622619629
    6. '  ' → logprob: -15.630936622619629
    7. '    ' → logprob: -15.755936622619629
    8. '	b' → logprob: -16.130937576293945
    9. '1' → logprob: -16.443437576293945
    10. '       ' → logprob: -16.505937576293945

Token 270: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00042054426739923656
    2. 'l' → logprob: -7.875420570373535
    3. '[' → logprob: -10.750420570373535
    4. ' [' → logprob: -11.625420570373535
    5. '[r' → logprob: -12.875420570373535
    6. '[
' → logprob: -13.875420570373535
    7. '[s' → logprob: -14.000420570373535
    8. '```' → logprob: -14.250420570373535
    9. ']' → logprob: -14.500420570373535
    10. ' l' → logprob: -14.750420570373535

Token 271: ']' (ID: 60)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.95436030626297
    2. '>=' → logprob: -1.0793602466583252
    3. ']' → logprob: -1.8293602466583252
    4. ' >=' → logprob: -2.204360246658325
    5. ')>=' → logprob: -6.204360485076904
    6. ' ' → logprob: -6.829360485076904
    7. ')' → logprob: -7.579360485076904
    8. ' ]' → logprob: -8.579360008239746
    9. '[' → logprob: -8.829360008239746
    10. '≥' → logprob: -9.579360008239746

Token 272: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.13436011970043182
    2. ' >=' → logprob: -2.1343600749969482
    3. ' ' → logprob: -6.634360313415527
    4. '">' → logprob: -6.634360313415527
    5. ']>=' → logprob: -6.634360313415527
    6. '>' → logprob: -6.884360313415527
    7. '   ' → logprob: -7.634360313415527
    8. '    ' → logprob: -7.884360313415527
    9. ')>=' → logprob: -7.884360313415527
    10. '[' → logprob: -8.259360313415527

Token 273: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00023071514442563057
    2. ' K' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.87523078918457
    4. ' ' → logprob: -17.25023078918457
    5. '	K' → logprob: -18.62523078918457
    6. '```' → logprob: -19.00023078918457
    7. '
' → logprob: -19.37523078918457
    8. '  ' → logprob: -20.12523078918457
    9. 'k' → logprob: -20.25023078918457
    10. '`' → logprob: -20.75023078918457

Token 274: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18053898215293884
    2. '
' → logprob: -1.8055390119552612
    3. '    
' → logprob: -8.18053913116455
    4. 'count' → logprob: -8.30553913116455
    5. '
' → logprob: -8.68053913116455
    6. ',' → logprob: -10.55553913116455
    7. '```' → logprob: -11.30553913116455
    8. ' count' → logprob: -11.80553913116455
    9. '  
' → logprob: -11.80553913116455
    10. ',
' → logprob: -12.18053913116455

Token 275: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023200517520308495
    2. ' count' → logprob: -4.898200511932373
    3. ' result' → logprob: -5.398200511932373
    4. 'count' → logprob: -5.648200511932373
    5. 'result' → logprob: -6.398200511932373
    6. ' r' → logprob: -6.648200511932373
    7. ' res' → logprob: -7.023200511932373
    8. ' l' → logprob: -7.398200511932373
    9. ' total' → logprob: -7.648200511932373
    10. ' ans' → logprob: -7.773200511932373

Token 276: '<' (ID: 27)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3302368223667145
    2. ' <' → logprob: -2.4552369117736816
    3. ' =' → logprob: -2.5802369117736816
    4. '<=' → logprob: -2.9552369117736816
    5. '<' → logprob: -3.3302369117736816
    6. 'ess' → logprob: -4.955236911773682
    7. ' <=' → logprob: -5.330236911773682
    8. 'r' → logprob: -5.705236911773682
    9. '=r' → logprob: -5.955236911773682
    10. 'from' → logprob: -6.455236911773682

Token 277: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14354215562343597
    2. ' r' → logprob: -2.0185420513153076
    3. 'N' → logprob: -8.143542289733887
    4. ' N' → logprob: -8.268542289733887
    5. '=r' → logprob: -8.893542289733887
    6. '=' → logprob: -9.518542289733887
    7. ' ' → logprob: -9.893542289733887
    8. ' =' → logprob: -11.518542289733887
    9. '=N' → logprob: -12.143542289733887
    10. 'b' → logprob: -12.143542289733887

Token 278: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006948025897145271
    2. '
' → logprob: -5.006947994232178
    3. 'count' → logprob: -9.131948471069336
    4. '    
' → logprob: -9.506948471069336
    5. '
' → logprob: -10.881948471069336
    6. '```' → logprob: -11.256948471069336
    7. 'cnt' → logprob: -13.131948471069336
    8. ',' → logprob: -13.131948471069336
    9. '       ' → logprob: -13.256948471069336
    10. ',
' → logprob: -13.381948471069336

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05271422863006592
    2. '
' → logprob: -3.0527143478393555
    3. 'count' → logprob: -5.6777143478393555
    4. ' count' → logprob: -7.9277143478393555
    5. '    
' → logprob: -9.052714347839355
    6. '```' → logprob: -9.802714347839355
    7. 'cnt' → logprob: -9.802714347839355
    8. 'def' → logprob: -10.677714347839355
    9. 'from' → logprob: -10.927714347839355
    10. '
' → logprob: -11.552714347839355

Token 280: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12218337506055832
    2. 'count' → logprob: -2.247183322906494
    3. 'res' → logprob: -6.122183322906494
    4. 'from' → logprob: -6.372183322906494
    5. 'total' → logprob: -6.497183322906494
    6. '
' → logprob: -6.622183322906494
    7. 'ans' → logprob: -7.122183322906494
    8. 'cnt' → logprob: -7.622183322906494
    9. ' count' → logprob: -7.872183322906494
    10. 'left' → logprob: -8.122183799743652

Token 281: ' Comme' (ID: 53252)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5875328183174133
    2. 'res' → logprob: -0.9625328183174133
    3. 'from' → logprob: -4.087532997131348
    4. 'ans' → logprob: -4.587532997131348
    5. 'result' → logprob: -4.587532997131348
    6. ' res' → logprob: -4.712532997131348
    7. 'total' → logprob: -4.962532997131348
    8. '   ' → logprob: -5.587532997131348
    9. ' count' → logprob: -6.212532997131348
    10. 'left' → logprob: -6.837532997131348

Token 282: ' b' (ID: 287)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0065808296203613
    2. 'from' → logprob: -1.8815808296203613
    3. 'b' → logprob: -2.3815808296203613
    4. 'left' → logprob: -2.8815808296203613
    5. 'count' → logprob: -3.0065808296203613
    6. 'prefix' → logprob: -3.2565808296203613
    7. 'l' → logprob: -3.3815808296203613
    8. 'q' → logprob: -3.5065808296203613
    9. 'sorted' → logprob: -3.6315808296203613
    10. 'arr' → logprob: -3.7565808296203613

Token 283: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8124573230743408
    2. 'est' → logprob: -2.062457323074341
    3. '.sort' → logprob: -2.062457323074341
    4. 'sort' → logprob: -2.187457323074341
    5. ' est' → logprob: -2.312457323074341
    6. 'is' → logprob: -2.437457323074341
    7. 'sorted' → logprob: -2.437457323074341
    8. ' =' → logprob: -3.312457323074341
    9. '_sorted' → logprob: -3.437457323074341
    10. ' is' → logprob: -3.562457323074341

Token 284: ' cro' (ID: 11270)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.7660350799560547
    2. 'tri' → logprob: -1.7660350799560547
    3. 'strict' → logprob: -1.7660350799560547
    4. 'sorted' → logprob: -2.0160350799560547
    5. 'cro' → logprob: -2.8910350799560547
    6. 'tr' → logprob: -6.516035079956055
    7. 'tris' → logprob: -6.891035079956055
    8. ' tri' → logprob: -7.516035079956055
    9. 'non' → logprob: -7.641035079956055
    10. 'mono' → logprob: -8.516035079956055

Token 285: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.011551013216376305
    2. 'issant' → logprob: -4.6365509033203125
    3. 'iss' → logprob: -7.0115509033203125
    4. 'ite' → logprob: -8.386550903320312
    5. 'ss' → logprob: -9.011550903320312
    6. '[' → logprob: -9.761550903320312
    7. 'issants' → logprob: -9.886550903320312
    8. 'is' → logprob: -10.261550903320312
    9. 'ît' → logprob: -10.386550903320312
    10. 'n' → logprob: -10.636550903320312

Token 286: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011175267398357391
    2. ',
' → logprob: -5.511175155639648
    3. '   ' → logprob: -6.386175155639648
    4. ':' → logprob: -6.511175155639648
    5. 'from' → logprob: -7.386175155639648
    6. 'def' → logprob: -7.636175155639648
    7. ':
' → logprob: -7.886175155639648
    8. ' ,' → logprob: -8.011175155639648
    9. 'import' → logprob: -8.136175155639648
    10. '=' → logprob: -8.636175155639648

Token 287: ' l' (ID: 305)
  Prédit: 'construction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'construction' → logprob: -0.1519608199596405
    2. 'dé' → logprob: -2.026960849761963
    3. ' construction' → logprob: -5.776960849761963
    4. 'construct' → logprob: -6.401960849761963
    5. 'nature' → logprob: -6.776960849761963
    6. 'con' → logprob: -7.151960849761963
    7. 'const' → logprob: -7.651960849761963
    8. '1' → logprob: -7.776960849761963
    9. 'definition' → logprob: -8.276960372924805
    10. '
' → logprob: -8.276960372924805

Token 288: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.926847517490387
    2. 'a' → logprob: -1.0518474578857422
    3. 'for' → logprob: -3.301847457885742
    4. 'o' → logprob: -3.426847457885742
    5. 'r' → logprob: -4.176847457885742
    6. 'à' → logprob: -4.426847457885742
    7. 'i' → logprob: -4.551847457885742
    8. 'oin' → logprob: -4.676847457885742
    9. ''ind' → logprob: -4.801847457885742
    10. 'ue' → logprob: -4.801847457885742

Token 289: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.021922411397099495
    2. 'oute' → logprob: -4.021922588348389
    3. 'outer' → logprob: -6.146922588348389
    4. 'ust' → logprob: -8.02192211151123
    5. 'r' → logprob: -8.14692211151123
    6. 'outs' → logprob: -8.39692211151123
    7. 'b' → logprob: -8.39692211151123
    8. 'outes' → logprob: -8.89692211151123
    9. 'outez' → logprob: -9.14692211151123
    10. 'uste' → logprob: -10.39692211151123

Token 290: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8455877900123596
    2. ' de' → logprob: -1.2205877304077148
    3. 'd' → logprob: -2.220587730407715
    4. 'de' → logprob: -2.470587730407715
    5. 'e' → logprob: -3.345587730407715
    6. ',' → logprob: -4.220587730407715
    7. ' for' → logprob: -5.345587730407715
    8. 'r' → logprob: -5.470587730407715
    9. 'for' → logprob: -6.095587730407715
    10. ' aux' → logprob: -6.345587730407715

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47924914956092834
    2. ' ' → logprob: -2.2292492389678955
    3. 'i' → logprob: -2.8542492389678955
    4. 'r' → logprob: -2.9792492389678955
    5. ' i' → logprob: -2.9792492389678955
    6. ' r' → logprob: -3.6042492389678955
    7. '+' → logprob: -4.354249000549316
    8. ' +' → logprob: -4.479249000549316
    9. 'b' → logprob: -4.729249000549316
    10. '0' → logprob: -4.854249000549316

Token 292: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0881718173623085
    2. 'r' → logprob: -4.08817195892334
    3. 'b' → logprob: -4.33817195892334
    4. 'i' → logprob: -4.46317195892334
    5. 'bis' → logprob: -4.46317195892334
    6. '+' → logprob: -5.21317195892334
    7. ' ' → logprob: -5.21317195892334
    8. '0' → logprob: -5.46317195892334
    9. 'un' → logprob: -5.96317195892334
    10. '[i' → logprob: -6.33817195892334

Token 293: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.657886266708374
    2. ',' → logprob: -1.032886266708374
    3. ' et' → logprob: -3.157886266708374
    4. 'ou' → logprob: -3.282886266708374
    5. ' or' → logprob: -3.782886266708374
    6. 'et' → logprob: -4.907886505126953
    7. ' ,' → logprob: -5.782886505126953
    8. 'r' → logprob: -6.532886505126953
    9. ' and' → logprob: -6.782886505126953
    10. 's' → logprob: -6.907886505126953

Token 294: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028767958283424377
    2. ' ' → logprob: -5.8778767585754395
    3. ' positive' → logprob: -11.002877235412598
    4. 'positive' → logprob: -11.502877235412598
    5. '+' → logprob: -11.627877235412598
    6. '0' → logprob: -11.877877235412598
    7. 'bis' → logprob: -12.127877235412598
    8. 'b' → logprob: -12.377877235412598
    9. ' more' → logprob: -12.377877235412598
    10. '>' → logprob: -12.877877235412598

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '+' → logprob: -14.875025749206543
    4. 'b' → logprob: -15.500025749206543
    5. 'positive' → logprob: -15.875025749206543
    6. '0' → logprob: -16.00002670288086
    7. 'bis' → logprob: -16.25002670288086
    8. '```' → logprob: -16.37502670288086
    9. '
' → logprob: -16.50002670288086
    10. '>' → logprob: -16.81252670288086

Token 296: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4663253724575043
    2. ',' → logprob: -1.0913254022598267
    3. ',
' → logprob: -3.966325283050537
    4. '
' → logprob: -4.216325283050537
    5. ')' → logprob: -7.466325283050537
    6. 'import' → logprob: -7.966325283050537
    7. 'count' → logprob: -8.091325759887695
    8. 'from' → logprob: -8.341325759887695
    9. ':
' → logprob: -8.466325759887695
    10. 'def' → logprob: -8.466325759887695

Token 297: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6665962934494019
    2. 'j' → logprob: -1.7915962934494019
    3. ' j' → logprob: -2.9165964126586914
    4. ' res' → logprob: -3.0415964126586914
    5. 'count' → logprob: -3.1665964126586914
    6. 'from' → logprob: -3.5415964126586914
    7. 'ans' → logprob: -3.7915964126586914
    8. 'import' → logprob: -4.041596412658691
    9. 'r' → logprob: -4.291596412658691
    10. 'left' → logprob: -4.416596412658691

Token 298: ' peut' (ID: 9216)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2079567909240723
    2. 'def' → logprob: -1.5829567909240723
    3. 'r' → logprob: -2.2079567909240723
    4. 'from' → logprob: -2.3329567909240723
    5. 'count' → logprob: -2.4579567909240723
    6. ' j' → logprob: -3.0829567909240723
    7. 'l' → logprob: -3.4579567909240723
    8. '   ' → logprob: -4.332956790924072
    9. ' left' → logprob: -4.457956790924072
    10. 'left' → logprob: -4.457956790924072

Token 299: ' gérer' (ID: 86786)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.32642558217048645
    2. 'use' → logprob: -2.076425552368164
    3. ' use' → logprob: -2.576425552368164
    4. 'import' → logprob: -4.201425552368164
    5. 'from' → logprob: -4.201425552368164
    6. 'count' → logprob: -4.576425552368164
    7. 'for' → logprob: -4.576425552368164
    8. ''utiliser' → logprob: -5.201425552368164
    9. 'util' → logprob: -6.076425552368164
    10. 'def' → logprob: -6.201425552368164

Token 300: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7746034264564514
    2. 'j' → logprob: -1.2746033668518066
    3. ' j' → logprob: -1.8996033668518066
    4. 'l' → logprob: -3.6496033668518066
    5. 'import' → logprob: -3.7746033668518066
    6. 'r' → logprob: -4.024603366851807
    7. '       ' → logprob: -4.524603366851807
    8. ' l' → logprob: -4.774603366851807
    9. 'from' → logprob: -5.024603366851807
    10. 'left' → logprob: -5.774603366851807

Token 301: ' deux' (ID: 10301)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.2876119315624237
    2. 'de' → logprob: -2.162611961364746
    3. ' two' → logprob: -2.787611961364746
    4. ' deux' → logprob: -3.037611961364746
    5. 'bis' → logprob: -4.537611961364746
    6. 'deque' → logprob: -5.412611961364746
    7. 'j' → logprob: -5.537611961364746
    8. 'une' → logprob: -6.412611961364746
    9. 'fen' → logprob: -6.787611961364746
    10. 'ptr' → logprob: -7.787611961364746

Token 302: ' poin' (ID: 37259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016243742778897285
    2. ' pointers' → logprob: -4.766243934631348
    3. 'pointer' → logprob: -5.766243934631348
    4. ' poin' → logprob: -6.016243934631348
    5. 'ptr' → logprob: -7.141243934631348
    6. 'indices' → logprob: -8.016243934631348
    7. ' p' → logprob: -8.516243934631348
    8. '_p' → logprob: -9.016243934631348
    9. '-pointer' → logprob: -9.516243934631348
    10. 'po' → logprob: -9.516243934631348

Token 303: 'teurs' (ID: 77729)
  Prédit: 'ters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ters' → logprob: -0.014995042234659195
    2. 'ter' → logprob: -4.639995098114014
    3. 'teurs' → logprob: -5.764995098114014
    4. 't' → logprob: -6.764995098114014
    5. '```' → logprob: -8.139994621276855
    6. 'trs' → logprob: -8.264994621276855
    7. '   ' → logprob: -8.639994621276855
    8. 'tr' → logprob: -9.389994621276855
    9. '``' → logprob: -10.389994621276855
    10. 'teur' → logprob: -11.389994621276855

Token 304: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02375584840774536
    2. ',' → logprob: -4.39875602722168
    3. '
' → logprob: -5.14875602722168
    4. ',
' → logprob: -6.52375602722168
    5. 'r' → logprob: -6.89875602722168
    6. 'l' → logprob: -7.39875602722168
    7. ' =' → logprob: -7.64875602722168
    8. ' l' → logprob: -7.77375602722168
    9. '    
' → logprob: -8.89875602722168
    10. ' ' → logprob: -9.02375602722168

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006354739889502525
    2. 'count' → logprob: -7.750635623931885
    3. '
' → logprob: -8.875635147094727
    4. ' count' → logprob: -10.375635147094727
    5. '    
' → logprob: -11.750635147094727
    6. '```' → logprob: -11.875635147094727
    7. 'left' → logprob: -12.375635147094727
    8. 'total' → logprob: -12.625635147094727
    9. 'cnt' → logprob: -12.625635147094727
    10. ' left' → logprob: -13.375635147094727

Token 306: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011412895284593105
    2. 'count' → logprob: -5.136413097381592
    3. 'left' → logprob: -6.386413097381592
    4. 'r' → logprob: -6.761413097381592
    5. 'l' → logprob: -7.261413097381592
    6. 'j' → logprob: -7.261413097381592
    7. '
' → logprob: -8.386412620544434
    8. 'right' → logprob: -8.386412620544434
    9. ' left' → logprob: -8.511412620544434
    10. 'res' (adapté à ' res') → logprob: -8.886412620544434

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999379396438599
    2. '=' → logprob: -2.694993734359741
    3. ',' → logprob: -9.81999397277832
    4. ' ' → logprob: -13.19499397277832
    5. '  ' → logprob: -14.44499397277832
    6. ')' → logprob: -15.31999397277832
    7. ' ,' → logprob: -15.81999397277832
    8. '   ' → logprob: -15.94499397277832
    9. ' =
' → logprob: -16.19499397277832
    10. ' ' → logprob: -16.81999397277832

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -21.12500762939453
    4. 'total' → logprob: -22.00000762939453
    5. 'res' → logprob: -22.00000762939453
    6. '```' → logprob: -22.00000762939453
    7. '０' → logprob: -22.00000762939453
    8. '۰' → logprob: -22.12500762939453
    9. 'count' → logprob: -22.37500762939453
    10. '=' → logprob: -22.50000762939453

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '０' → logprob: -21.375
    4. '۰' → logprob: -22.125
    5. '```' → logprob: -22.25
    6. '   ' → logprob: -22.625
    7. 'N' → logprob: -23.0
    8. 'res' → logprob: -23.25
    9. 'int' → logprob: -23.25
    10. 'ans' → logprob: -24.0

Token 310: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009355686604976654
    2. '
' → logprob: -5.009355545043945
    3. ' j' → logprob: -7.259355545043945
    4. 'j' → logprob: -7.884355545043945
    5. ' r' → logprob: -7.884355545043945
    6. 'r' → logprob: -8.259355545043945
    7. ',' → logprob: -8.509355545043945
    8. ' l' → logprob: -8.634355545043945
    9. '    
' → logprob: -9.009355545043945
    10. '```' → logprob: -9.009355545043945

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018904341850429773
    2. 'j' → logprob: -7.001890659332275
    3. ' j' → logprob: -7.626890659332275
    4. 'r' → logprob: -8.876890182495117
    5. ' left' → logprob: -9.626890182495117
    6. 'right' → logprob: -9.751890182495117
    7. ' right' → logprob: -9.876890182495117
    8. 'l' → logprob: -9.876890182495117
    9. 'left' → logprob: -10.126890182495117
    10. ' r' → logprob: -10.251890182495117

Token 312: ' r' (ID: 428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28413164615631104
    2. 'left' → logprob: -2.2841315269470215
    3. 'r' (adapté à ' r') → logprob: -2.5341315269470215
    4. 'l' → logprob: -3.0341315269470215
    5. 'right' → logprob: -4.0341315269470215
    6. ' j' → logprob: -8.53413200378418
    7. ' left' → logprob: -9.65913200378418
    8. 'start' → logprob: -11.15913200378418
    9. 'from' → logprob: -11.65913200378418
    10. 'p' → logprob: -11.65913200378418

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07903145253658295
    2. ' =' → logprob: -2.579031467437744
    3. ',' → logprob: -8.954030990600586
    4. ' ' → logprob: -12.329030990600586
    5. '=r' → logprob: -13.704030990600586
    6. '   ' → logprob: -13.704030990600586
    7. '```' → logprob: -13.829030990600586
    8. ')' → logprob: -14.204030990600586
    9. '  ' → logprob: -14.329030990600586
    10. '=j' → logprob: -14.454030990600586

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018911674851551652
    2. '1' → logprob: -9.250188827514648
    3. 'K' → logprob: -9.375188827514648
    4. ' ' → logprob: -11.750188827514648
    5. ' K' → logprob: -15.875188827514648
    6. 'N' → logprob: -17.37518882751465
    7. '```' → logprob: -17.75018882751465
    8. '   ' → logprob: -18.81268882751465
    9. '2' → logprob: -19.00018882751465
    10. '-' → logprob: -19.56268882751465

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003034074034076184
    2. 'K' → logprob: -8.625303268432617
    3. '1' → logprob: -9.000303268432617
    4. ' ' → logprob: -14.750303268432617
    5. '```' → logprob: -17.250303268432617
    6. ' K' → logprob: -17.500303268432617
    7. 'N' → logprob: -17.875303268432617
    8. 'k' → logprob: -18.000303268432617
    9. '2' → logprob: -18.375303268432617
    10. '[K' → logprob: -18.937803268432617

Token 316: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039819732308387756
    2. '   ' → logprob: -3.4148197174072266
    3. ' for' → logprob: -5.414819717407227
    4. 'for' → logprob: -6.789819717407227
    5. '    
' → logprob: -8.289819717407227
    6. '  
' → logprob: -9.039819717407227
    7. ' 
' → logprob: -9.414819717407227
    8. '
' → logprob: -9.789819717407227
    9. '	for' → logprob: -10.914819717407227
    10. '	
' → logprob: -11.539819717407227

Token 317: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3168487548828125
    2. '
' → logprob: -1.8168487548828125
    3. 'for' → logprob: -2.8168487548828125
    4. '   ' → logprob: -3.0668487548828125
    5. ' 
' → logprob: -7.3168487548828125
    6. '    
' → logprob: -7.4418487548828125
    7. '```' → logprob: -7.5668487548828125
    8. '  
' → logprob: -8.191848754882812
    9. '	for' → logprob: -8.816848754882812
    10. '<|end|>' → logprob: -9.316848754882812

Token 318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018257156480103731
    2. '   ' → logprob: -6.37682580947876
    3. ' for' → logprob: -9.126825332641602
    4. '
' → logprob: -11.501825332641602
    5. '    
' → logprob: -13.001825332641602
    6. '```' → logprob: -13.876825332641602
    7. 'from' → logprob: -14.376825332641602
    8. '	for' → logprob: -14.751825332641602
    9. 'b' → logprob: -16.1268253326416
    10. '  
' → logprob: -16.8768253326416

Token 319: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06995321810245514
    2. ' l' → logprob: -2.694953203201294
    3. 'r' → logprob: -11.194952964782715
    4. '	l' → logprob: -13.444952964782715
    5. ' r' → logprob: -13.944952964782715
    6. '_l' → logprob: -15.319952964782715
    7. '```' → logprob: -15.569952964782715
    8. '   ' → logprob: -15.569952964782715
    9. ' ' → logprob: -16.06995391845703
    10. 'i' → logprob: -16.69495391845703

Token 320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08903685957193375
    2. 'in' → logprob: -2.4640369415283203
    3. ' ' → logprob: -10.33903694152832
    4. ')' → logprob: -11.08903694152832
    5. ',' → logprob: -11.33903694152832
    6. '<|end|>' → logprob: -11.46403694152832
    7. '=' → logprob: -11.71403694152832
    8. '   ' → logprob: -12.71403694152832
    9. '	in' → logprob: -12.71403694152832
    10. '0' → logprob: -13.08903694152832

Token 321: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012057077838107944
    2. ' range' → logprob: -6.751205921173096
    3. '0' → logprob: -10.251205444335938
    4. 'in' → logprob: -16.501205444335938
    5. ' ' → logprob: -17.501205444335938
    6. '(range' → logprob: -17.626205444335938
    7. '```' → logprob: -17.876205444335938
    8. '   ' → logprob: -18.751205444335938
    9. '1' → logprob: -18.751205444335938
    10. '	range' → logprob: -18.876205444335938

Token 322: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009420289658010006
    2. '(' → logprob: -5.009420394897461
    3. 'N' → logprob: -6.009420394897461
    4. '1' → logprob: -8.384420394897461
    5. '   ' → logprob: -12.384420394897461
    6. ',N' → logprob: -12.759420394897461
    7. ' N' → logprob: -12.884420394897461
    8. '	N' → logprob: -13.259420394897461
    9. '(n' → logprob: -13.509420394897461
    10. ' (' → logprob: -13.634420394897461

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01903117261826992
    2. '):
' → logprob: -4.519031047821045
    3. '):' → logprob: -5.144031047821045
    4. ' +' → logprob: -6.269031047821045
    5. '+
' → logprob: -9.269031524658203
    6. '   ' → logprob: -10.394031524658203
    7. '+r' → logprob: -10.644031524658203
    8. ')+' → logprob: -10.894031524658203
    9. ',' → logprob: -11.519031524658203
    10. ')' → logprob: -11.644031524658203

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.375005722045898
    3. '2' → logprob: -14.125005722045898
    4. '+' → logprob: -15.125005722045898
    5. 'N' → logprob: -16.0000057220459
    6. ')' → logprob: -16.1875057220459
    7. '0' → logprob: -16.3750057220459
    8. '
' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.2500057220459
    10. '(' → logprob: -17.6875057220459

Token 325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5253651142120361
    2. '):' → logprob: -0.9003651142120361
    3. ':' → logprob: -6.650364875793457
    4. '   ' → logprob: -7.775364875793457
    5. ',' → logprob: -9.025364875793457
    6. ' ):
' → logprob: -9.275364875793457
    7. ')' → logprob: -9.400364875793457
    8. ' ):' → logprob: -9.650364875793457
    9. ':
' → logprob: -9.900364875793457
    10. '):
' → logprob: -10.400364875793457

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06153925508260727
    2. 'while' → logprob: -2.9365391731262207
    3. ' while' → logprob: -5.061539173126221
    4. '	while' → logprob: -8.686539649963379
    5. '   ' → logprob: -9.061539649963379
    6. '	   ' → logprob: -12.186539649963379
    7. '<|end|>' → logprob: -12.561539649963379
    8. '        
' → logprob: -14.186539649963379
    9. ' ' → logprob: -14.436539649963379
    10. '      ' → logprob: -14.686539649963379

Token 327: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0008632226963527501
    2. ' while' → logprob: -7.500863075256348
    3. '       ' → logprob: -8.250863075256348
    4. '   ' → logprob: -10.000863075256348
    5. '	while' → logprob: -12.500863075256348
    6. 'While' → logprob: -17.375864028930664
    7. '           ' → logprob: -17.750864028930664
    8. '        
' → logprob: -19.375864028930664
    9. '```' → logprob: -19.375864028930664
    10. '     ' → logprob: -19.750864028930664

Token 328: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00038014890742488205
    2. ' r' → logprob: -7.875380039215088
    3. '(r' → logprob: -17.00037956237793
    4. '   ' → logprob: -17.87537956237793
    5. '	r' → logprob: -17.87537956237793
    6. '_r' → logprob: -18.87537956237793
    7. 'b' → logprob: -20.12537956237793
    8. ' ' → logprob: -20.37537956237793
    9. '

' → logprob: -20.50037956237793
    10. 'l' → logprob: -20.75037956237793

Token 329: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08935905247926712
    2. ' <' → logprob: -2.5893590450286865
    3. '<N' → logprob: -5.339359283447266
    4. '<=' → logprob: -5.589359283447266
    5. '<n' → logprob: -6.839359283447266
    6. '<len' → logprob: -7.339359283447266
    7. ' <=' → logprob: -9.464359283447266
    8. '<size' → logprob: -10.839359283447266
    9. '<m' → logprob: -11.339359283447266
    10. '<th' → logprob: -11.714359283447266

Token 330: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7729658540920354e-05
    2. ' N' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. '	N' → logprob: -16.875028610229492
    5. ' ' → logprob: -17.000028610229492
    6. '
' → logprob: -17.125028610229492
    7. 'n' → logprob: -18.875028610229492
    8. '_N' → logprob: -20.125028610229492
    9. 'r' → logprob: -20.250028610229492
    10. '```' → logprob: -20.250028610229492

Token 331: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47410136461257935
    2. 'and' → logprob: -0.9741013646125793
    3. ' ' → logprob: -10.724101066589355
    4. 'b' → logprob: -14.349101066589355
    5. '	and' → logprob: -14.474101066589355
    6. '   ' → logprob: -15.224101066589355
    7. ' и' → logprob: -15.599101066589355
    8. '  ' → logprob: -15.724101066589355
    9. 'r' → logprob: -15.849101066589355
    10. ' or' → logprob: -15.974101066589355

Token 332: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -13.00000286102295
    3. '(b' → logprob: -14.62500286102295
    4. '   ' → logprob: -16.500003814697266
    5. 'r' → logprob: -16.625003814697266
    6. '	b' → logprob: -17.375003814697266
    7. '(' → logprob: -20.000003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '[b' → logprob: -20.625003814697266
    10. '_b' → logprob: -21.000003814697266

Token 333: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.001353329629637301
    2. '[l' → logprob: -6.7513532638549805
    3. 'r' → logprob: -8.62635326385498
    4. '[' → logprob: -12.87635326385498
    5. 'l' → logprob: -14.87635326385498
    6. '[b' → logprob: -15.25135326385498
    7. '	r' → logprob: -15.50135326385498
    8. ' [' → logprob: -16.126354217529297
    9. '

' → logprob: -16.876354217529297
    10. '   ' → logprob: -17.001354217529297

Token 334: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08838333189487457
    2. '-' → logprob: -3.463383436203003
    3. '<' → logprob: -3.588383436203003
    4. ' <' → logprob: -3.713383436203003
    5. ']' → logprob: -7.213383197784424
    6. ')' → logprob: -8.088383674621582
    7. ' ' → logprob: -9.463383674621582
    8. '<b' → logprob: -10.213383674621582
    9. '[' → logprob: -10.713383674621582
    10. '```' → logprob: -11.463383674621582

Token 335: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4450451135635376
    2. '-' → logprob: -1.0700451135635376
    3. '<' → logprob: -4.195044994354248
    4. ' <' → logprob: -6.820044994354248
    5. '<b' → logprob: -10.695045471191406
    6. ' ' → logprob: -11.570045471191406
    7. '-b' → logprob: -11.945045471191406
    8. '```' → logprob: -12.570045471191406
    9. '[' → logprob: -13.070045471191406
    10. '   ' → logprob: -13.945045471191406

Token 336: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.494741632603109e-05
    2. ' b' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '	b' → logprob: -19.375085830688477
    5. ' ' → logprob: -19.750085830688477
    6. '```' → logprob: -20.375085830688477
    7. '  ' → logprob: -21.125085830688477
    8. 'a' → logprob: -21.625085830688477
    9. ')b' → logprob: -21.625085830688477
    10. '    ' → logprob: -21.750085830688477

Token 337: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.01816106028854847
    2. 'l' → logprob: -4.018161296844482
    3. '[' → logprob: -11.518160820007324
    4. ' l' → logprob: -14.518160820007324
    5. '	l' → logprob: -14.518160820007324
    6. ' [' → logprob: -16.26816177368164
    7. '[
' → logprob: -16.51816177368164
    8. '   ' → logprob: -18.01816177368164
    9. '[i' → logprob: -18.26816177368164
    10. ' ' → logprob: -18.64316177368164

Token 338: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.013023629784584045
    2. ' <' → logprob: -4.388023853302002
    3. '<K' → logprob: -7.638023853302002
    4. ')' → logprob: -11.638023376464844
    5. '<b' → logprob: -11.763023376464844
    6. '<n' → logprob: -13.138023376464844
    7. '<N' → logprob: -13.513023376464844
    8. ')<' → logprob: -13.763023376464844
    9. ']' → logprob: -13.888023376464844
    10. '<m' → logprob: -14.013023376464844

Token 339: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08111894875764847
    2. '<K' → logprob: -3.0811190605163574
    3. ' <' → logprob: -3.4561190605163574
    4. '<b' → logprob: -8.4561185836792
    5. '<n' → logprob: -9.5811185836792
    6. '<N' → logprob: -10.0811185836792
    7. '<u' → logprob: -10.9561185836792
    8. '<int' → logprob: -11.2061185836792
    9. '<Q' → logprob: -11.2061185836792
    10. '<m' → logprob: -11.7061185836792

Token 340: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0031802060548216105
    2. ' K' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.503180503845215
    4. ' ' → logprob: -14.003180503845215
    5. '	K' → logprob: -15.503180503845215
    6. '  ' → logprob: -16.7531795501709
    7. 'k' → logprob: -17.5031795501709
    8. '    ' → logprob: -17.5031795501709
    9. ' ' → logprob: -18.1281795501709
    10. '       ' → logprob: -18.7531795501709

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6531533002853394
    2. ':
' → logprob: -0.9031533002853394
    3. '       ' → logprob: -2.778153419494629
    4. '           ' → logprob: -4.653153419494629
    5. 'r' → logprob: -6.528153419494629
    6. '   ' → logprob: -7.528153419494629
    7. '):
' → logprob: -8.278153419494629
    8. '```' → logprob: -8.653153419494629
    9. '):' → logprob: -9.778153419494629
    10. ' r' → logprob: -10.778153419494629

Token 342: '           ' (ID: 352)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.682687520980835
    2. 'r' → logprob: -1.182687520980835
    3. '           ' → logprob: -1.682687520980835
    4. '       ' → logprob: -6.182687759399414
    5. '	       ' → logprob: -8.807687759399414
    6. '```' → logprob: -9.432687759399414
    7. '        ' → logprob: -10.057687759399414
    8. '   ' → logprob: -10.932687759399414
    9. '               ' → logprob: -11.307687759399414
    10. '		' → logprob: -12.057687759399414

Token 343: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -4.56102097814437e-05
    2. ' r' → logprob: -10.000045776367188
    3. '           ' → logprob: -16.750045776367188
    4. '   ' → logprob: -17.250045776367188
    5. '       ' → logprob: -17.500045776367188
    6. '	r' → logprob: -20.125045776367188
    7. '```' → logprob: -21.125045776367188
    8. '++' → logprob: -21.625045776367188
    9. '_r' → logprob: -22.375045776367188
    10. '               ' → logprob: -22.875045776367188

Token 344: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0001605115394340828
    2. ' +=' → logprob: -8.750160217285156
    3. '+' → logprob: -13.750160217285156
    4. ']+=' → logprob: -13.875160217285156
    5. '=' → logprob: -18.625160217285156
    6. '+='' → logprob: -18.875160217285156
    7. '```' → logprob: -18.875160217285156
    8. '+="' → logprob: -19.125160217285156
    9. '++' → logprob: -20.125160217285156
    10. '+=(' → logprob: -20.250160217285156

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.25
    5. '１' → logprob: -22.375
    6. '۱' → logprob: -22.875
    7. '0' → logprob: -23.4375
    8. '  ' → logprob: -23.5
    9. '`' → logprob: -24.0
    10. '``' → logprob: -24.0

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -21.25
    5. '１' → logprob: -22.25
    6. '۱' → logprob: -22.5
    7. '0' → logprob: -22.6875
    8. '2' → logprob: -23.125
    9. '=' → logprob: -23.5625
    10. '﻿' → logprob: -23.8125

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005305142258293927
    2. '   ' → logprob: -8.250530242919922
    3. ' if' → logprob: -8.875530242919922
    4. '<|end|>' → logprob: -9.875530242919922
    5. '```' → logprob: -10.250530242919922
    6. 'if' → logprob: -10.875530242919922
    7. '           ' → logprob: -11.500530242919922
    8. '	' → logprob: -13.000530242919922
    9. '      ' → logprob: -13.375530242919922
    10. '​' → logprob: -13.500530242919922

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016936269821599126
    2. '   ' → logprob: -6.7516937255859375
    3. ' if' → logprob: -7.7516937255859375
    4. 'if' → logprob: -10.126693725585938
    5. '<|end|>' → logprob: -10.876693725585938
    6. '```' → logprob: -11.001693725585938
    7. '           ' → logprob: -11.376693725585938
    8. '	' → logprob: -13.501693725585938
    9. '      ' → logprob: -14.001693725585938
    10. '    ' → logprob: -14.626693725585938

Token 349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0514102466404438
    2. 'res' → logprob: -3.05141019821167
    3. ' if' → logprob: -6.05141019821167
    4. '       ' → logprob: -7.80141019821167
    5. '   ' → logprob: -10.426410675048828
    6. ' res' → logprob: -10.676410675048828
    7. '```' → logprob: -13.176410675048828
    8. '	if' → logprob: -16.051410675048828
    9. '    ' → logprob: -16.176410675048828
    10. '
' → logprob: -16.676410675048828

Token 350: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.064297824399546e-05
    2. ' r' → logprob: -9.625070571899414
    3. '   ' → logprob: -12.500070571899414
    4. 'res' → logprob: -14.125070571899414
    5. '       ' → logprob: -17.500070571899414
    6. '	r' → logprob: -18.000070571899414
    7. ' ' → logprob: -18.375070571899414
    8. '    ' → logprob: -18.625070571899414
    9. '```' → logprob: -18.625070571899414
    10. '           ' → logprob: -19.000070571899414

Token 351: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2403030395507812
    2. '<=' → logprob: -1.2403030395507812
    3. '<' → logprob: -1.6153030395507812
    4. ' <=' → logprob: -1.7403030395507812
    5. '<N' → logprob: -3.1153030395507812
    6. '<n' → logprob: -7.115303039550781
    7. '==' → logprob: -7.240303039550781
    8. ' ==' → logprob: -7.490303039550781
    9. '<len' → logprob: -8.240303039550781
    10. '<size' → logprob: -8.365303039550781

Token 352: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0280383548888494e-06
    2. ' N' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.250001907348633
    4. '	N' → logprob: -19.375001907348633
    5. '```' → logprob: -20.375001907348633
    6. 'l' → logprob: -21.000001907348633
    7. 'n' → logprob: -21.125001907348633
    8. ' ' → logprob: -21.625001907348633
    9. '
' → logprob: -22.000001907348633
    10. '`' → logprob: -22.375001907348633

Token 353: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32555314898490906
    2. ':' → logprob: -1.4505531787872314
    3. ':
' → logprob: -3.2005531787872314
    4. '       ' → logprob: -6.075552940368652
    5. '               ' → logprob: -9.825552940368652
    6. ':return' → logprob: -9.950552940368652
    7. '          ' → logprob: -10.075552940368652
    8. '==' → logprob: -10.200552940368652
    9. ' :' → logprob: -10.325552940368652
    10. ' and' → logprob: -11.075552940368652

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003637097543105483
    2. 'break' → logprob: -8.00036334991455
    3. ' break' → logprob: -11.00036334991455
    4. '		' → logprob: -12.00036334991455
    5. '       ' → logprob: -13.37536334991455
    6. '	break' → logprob: -13.87536334991455
    7. '```' → logprob: -13.87536334991455
    8. '	       ' → logprob: -14.00036334991455
    9. '               ' → logprob: -14.62536334991455
    10. '          ' → logprob: -15.25036334991455

Token 355: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06406968832015991
    2. '           ' → logprob: -2.8140697479248047
    3. ' break' → logprob: -6.189069747924805
    4. '	break' → logprob: -10.064069747924805
    5. '       ' → logprob: -13.689069747924805
    6. '_break' → logprob: -13.689069747924805
    7. '		' → logprob: -14.064069747924805
    8. '               ' → logprob: -14.064069747924805
    9. '```' → logprob: -14.814069747924805
    10. 'return' → logprob: -14.814069747924805

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04360808804631233
    2. '   ' → logprob: -3.1686081886291504
    3. '
' → logprob: -7.54360818862915
    4. ' res' → logprob: -10.543607711791992
    5. 'res' → logprob: -10.668607711791992
    6. '```' → logprob: -11.918607711791992
    7. '           ' → logprob: -12.793607711791992
    8. '        
' → logprob: -12.793607711791992
    9. '<|end|>' → logprob: -12.918607711791992
    10. '    
' → logprob: -13.168607711791992

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760756731033325
    2. '   ' → logprob: -0.8260756731033325
    3. 'res' → logprob: -9.826075553894043
    4. '
' → logprob: -10.201075553894043
    5. '```' → logprob: -10.326075553894043
    6. ' res' → logprob: -11.701075553894043
    7. '    ' → logprob: -14.326075553894043
    8. '      ' → logprob: -14.451075553894043
    9. '           ' → logprob: -14.576075553894043
    10. '     ' → logprob: -14.701075553894043

Token 358: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.010802914388477802
    2. ' res' → logprob: -4.760802745819092
    3. '   ' → logprob: -6.760802745819092
    4. '       ' → logprob: -6.885802745819092
    5. '
' → logprob: -12.63580322265625
    6. '	res' → logprob: -13.76080322265625
    7. '    ' → logprob: -14.51080322265625
    8. '  ' → logprob: -14.88580322265625
    9. '     ' → logprob: -16.13580322265625
    10. ',res' → logprob: -16.51080322265625

Token 359: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47412437200546265
    2. ' +=' → logprob: -0.9741243720054626
    3. '   ' → logprob: -10.22412395477295
    4. '+=(' → logprob: -12.22412395477295
    5. '    ' → logprob: -13.34912395477295
    6. '+' → logprob: -13.34912395477295
    7. '=' → logprob: -13.84912395477295
    8. ']+=' → logprob: -13.97412395477295
    9. '       ' → logprob: -14.59912395477295
    10. '	' → logprob: -15.72412395477295

Token 360: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005546073894947767
    2. '(N' → logprob: -5.2555460929870605
    3. ' N' → logprob: -8.130545616149902
    4. ' (' → logprob: -11.380545616149902
    5. '(' → logprob: -12.755545616149902
    6. '   ' → logprob: -12.880545616149902
    7. ' ' → logprob: -14.755545616149902
    8. '	N' → logprob: -15.380545616149902
    9. '((' → logprob: -16.00554656982422
    10. '1' → logprob: -16.75554656982422

Token 361: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0195211172103882
    2. '+' → logprob: -1.1445211172103882
    3. '-' → logprob: -1.1445211172103882
    4. ' +' → logprob: -6.019521236419678
    5. '-r' → logprob: -10.39452075958252
    6. ' ' → logprob: -12.39452075958252
    7. '-N' → logprob: -12.89452075958252
    8. '-l' → logprob: -13.01952075958252
    9. '   ' → logprob: -13.14452075958252
    10. '```' → logprob: -13.64452075958252

Token 362: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007370850071310997
    2. ' r' → logprob: -7.250737190246582
    3. '(r' → logprob: -10.625737190246582
    4. ' (' → logprob: -13.000737190246582
    5. '   ' → logprob: -15.250737190246582
    6. '    ' → logprob: -16.625736236572266
    7. '+' → logprob: -16.750736236572266
    8. '	r' → logprob: -17.375736236572266
    9. ' ' → logprob: -17.500736236572266
    10. '[r' → logprob: -17.750736236572266

Token 363: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12717671692371368
    2. ' +' → logprob: -2.1271767616271973
    3. '       ' → logprob: -8.877176284790039
    4. '+
' → logprob: -9.752176284790039
    5. '   ' → logprob: -10.752176284790039
    6. '
' → logprob: -10.877176284790039
    7. '```' → logprob: -12.752176284790039
    8. '+l' → logprob: -12.877176284790039
    9. 'return' → logprob: -13.377176284790039
    10. ' +
' → logprob: -14.002176284790039

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '2' → logprob: -12.750003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '+' → logprob: -16.875003814697266
    5. '   ' → logprob: -18.375003814697266
    6. '```' → logprob: -19.125003814697266
    7. '
' → logprob: -19.250003814697266
    8. ' +' → logprob: -20.500003814697266
    9. '

' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.375003814697266

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -15.625
    4. '   ' → logprob: -19.625
    5. '```' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '+' → logprob: -21.375
    8. '  ' → logprob: -22.125
    9. '１' → logprob: -22.625
    10. '۱' → logprob: -23.5

Token 366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039782267063856125
    2. 'return' → logprob: -3.6647822856903076
    3. ' return' → logprob: -4.6647820472717285
    4. '	return' → logprob: -6.1647820472717285
    5. '
' → logprob: -6.5397820472717285
    6. '    
' → logprob: -9.039782524108887
    7. '<|end|>' → logprob: -9.289782524108887
    8. ':return' → logprob: -9.789782524108887
    9. '\n' → logprob: -9.914782524108887
    10. ')' → logprob: -10.664782524108887

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001135454629547894
    2. 'return' → logprob: -6.876135349273682
    3. ' return' → logprob: -9.25113582611084
    4. '	return' → logprob: -12.12613582611084
    5. '```' → logprob: -15.37613582611084
    6. ':return' → logprob: -15.37613582611084
    7. '       ' → logprob: -15.62613582611084
    8. '    
' → logprob: -15.87613582611084
    9. '
' → logprob: -16.501134872436523
    10. ',' → logprob: -16.626134872436523

Token 368: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005817994941025972
    2. 'return' (adapté à ' return') → logprob: -5.255817890167236
    3. ' return' → logprob: -7.630817890167236
    4. '	return' → logprob: -9.380818367004395
    5. ' ' → logprob: -12.755818367004395
    6. '    
' → logprob: -12.755818367004395
    7. '       ' → logprob: -13.255818367004395
    8. '
' → logprob: -13.505818367004395
    9. '```' → logprob: -13.505818367004395
    10. ')' → logprob: -14.130818367004395

Token 369: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0005530327325686812
    2. ' res' → logprob: -7.500553131103516
    3. '	res' → logprob: -20.125553131103516
    4. '(res' → logprob: -20.375553131103516
    5. '   ' → logprob: -20.375553131103516
    6. '$res' → logprob: -21.500553131103516
    7. '
' → logprob: -22.375553131103516
    8. 'int' → logprob: -22.500553131103516
    9. 'r' → logprob: -22.875553131103516
    10. '_res' → logprob: -22.875553131103516

Token 370: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: 'left' (ID: 4530)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5106194019317627
    2. 'left' → logprob: -1.5106194019317627
    3. 'lo' → logprob: -1.7606194019317627
    4. 'def' → logprob: -5.635619163513184
    5. 'l' → logprob: -6.385619163513184
    6. 'min' → logprob: -6.510619163513184
    7. '#' → logprob: -8.885619163513184
    8. 'ok' → logprob: -9.510619163513184
    9. ' lo' → logprob: -10.385619163513184
    10. 'values' → logprob: -10.885619163513184

Token 372: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038942981511354446
    2. '=' → logprob: -3.78894305229187
    3. ',' → logprob: -4.538942813873291
    4. ' ,' → logprob: -5.538942813873291
    5. ' ' → logprob: -7.038942813873291
    6. '_' → logprob: -10.41394329071045
    7. '<|end|>' → logprob: -10.91394329071045
    8. '(' → logprob: -12.03894329071045
    9. '  ' → logprob: -12.16394329071045
    10. '0' → logprob: -12.66394329071045

Token 373: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03804241120815277
    2. ' right' → logprob: -3.2880423069000244
    3. '0' → logprob: -14.288042068481445
    4. '=' → logprob: -15.413042068481445
    5. '	right' → logprob: -16.663042068481445
    6. ',right' → logprob: -16.788042068481445
    7. ' =' → logprob: -17.913042068481445
    8. '[right' → logprob: -18.038042068481445
    9. ' ' → logprob: -18.538042068481445
    10. '10' → logprob: -18.913042068481445

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519356608390808
    2. ' =' → logprob: -1.5019357204437256
    3. ',' → logprob: -12.126935958862305
    4. '=min' → logprob: -14.626935958862305
    5. '=max' → logprob: -15.376935958862305
    6. '=a' → logprob: -15.626935958862305
    7. '=int' → logprob: -16.501935958862305
    8. '＝' → logprob: -16.626935958862305
    9. '=len' → logprob: -17.126935958862305
    10. '=b' → logprob: -17.501935958862305

Token 375: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.025250984355807304
    2. '0' → logprob: -3.7752509117126465
    3. 'max' → logprob: -6.2752509117126465
    4. '10' → logprob: -10.025251388549805
    5. ' min' → logprob: -10.025251388549805
    6. '1' → logprob: -10.525251388549805
    7. '-' → logprob: -12.525251388549805
    8. '[min' → logprob: -14.275251388549805
    9. ' ' → logprob: -14.525251388549805
    10. '(min' → logprob: -14.775251388549805

Token 376: '1' (ID: 16)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04377938061952591
    2. 'max' → logprob: -3.5437793731689453
    3. '0' → logprob: -4.293779373168945
    4. '10' → logprob: -8.668779373168945
    5. ' min' → logprob: -9.293779373168945
    6. '1' → logprob: -11.543779373168945
    7. ' max' → logprob: -13.668779373168945
    8. '(min' → logprob: -13.918779373168945
    9. '[min' → logprob: -14.168779373168945
    10. ' ' → logprob: -14.418779373168945

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00269787828437984
    2. ' ,' → logprob: -6.127697944641113
    3. ',max' → logprob: -7.877697944641113
    4. 'max' → logprob: -9.127697944641113
    5. ',
' → logprob: -12.127697944641113
    6. '0' → logprob: -12.127697944641113
    7. ' max' → logprob: -12.252697944641113
    8. '000' → logprob: -13.377697944641113
    9. '[max' → logprob: -13.502697944641113
    10. '=' → logprob: -14.002697944641113

Token 378: ' N' (ID: 478)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5759963393211365
    2. 'max' → logprob: -0.8259963393211365
    3. 'int' → logprob: -10.075996398925781
    4. ' max' → logprob: -11.200996398925781
    5. 'MAX' → logprob: -14.700996398925781
    6. '100' → logprob: -14.825996398925781
    7. '
' → logprob: -15.950996398925781
    8. ' ' → logprob: -16.20099639892578
    9. '=max' → logprob: -16.82599639892578
    10. '(max' → logprob: -17.07599639892578

Token 379: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07992944121360779
    2. 'max' → logprob: -3.3299293518066406
    3. ' +' → logprob: -3.5799293518066406
    4. '0' → logprob: -5.704929351806641
    5. '100' → logprob: -6.204929351806641
    6. 'a' → logprob: -6.329929351806641
    7. '*' → logprob: -6.704929351806641
    8. '10' → logprob: -6.954929351806641
    9. 'L' → logprob: -7.454929351806641
    10. '_max' → logprob: -7.579929351806641

Token 380: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23310540616512299
    2. 'max' → logprob: -2.108105421066284
    3. 'right' → logprob: -2.733105421066284
    4. 'a' → logprob: -4.358105182647705
    5. '+' → logprob: -5.733105182647705
    6. ' while' → logprob: -6.108105182647705
    7. 'ans' → logprob: -6.858105182647705
    8. 'answer' → logprob: -7.483105182647705
    9. 'left' → logprob: -8.358105659484863
    10. 'amax' → logprob: -8.358105659484863

Token 381: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.017850331962108612
    2. 'left' → logprob: -4.642850399017334
    3. ' True' → logprob: -5.392850399017334
    4. ' right' → logprob: -6.267850399017334
    5. 'True' → logprob: -6.517850399017334
    6. 'right' → logprob: -9.642849922180176
    7. ' lef' → logprob: -10.142849922180176
    8. '	left' → logprob: -11.767849922180176
    9. '(left' → logprob: -12.017849922180176
    10. ' ' → logprob: -12.017849922180176

Token 382: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20278982818126678
    2. '<=' → logprob: -1.7027897834777832
    3. ' <' → logprob: -6.702789783477783
    4. '<' → logprob: -8.827790260314941
    5. ' ' → logprob: -14.952790260314941
    6. ' ≤' → logprob: -15.077790260314941
    7. ' ' → logprob: -15.577790260314941
    8. ')<=' → logprob: -15.702790260314941
    9. '<len' → logprob: -16.452789306640625
    10. '≤' → logprob: -16.452789306640625

Token 383: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.34488746523857117
    2. 'right' → logprob: -1.3448874950408936
    3. '=' → logprob: -3.4698874950408936
    4. ' =' → logprob: -11.844887733459473
    5. '	right' → logprob: -13.344887733459473
    6. ' ' → logprob: -14.344887733459473
    7. '=
' → logprob: -15.469887733459473
    8. ',right' → logprob: -15.719887733459473
    9. '[right' → logprob: -15.719887733459473
    10. '_right' → logprob: -16.469886779785156

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2055893838405609
    2. ':
' → logprob: -1.7055894136428833
    3. '   ' → logprob: -6.580589294433594
    4. ' :' → logprob: -6.705589294433594
    5. ' :
' → logprob: -6.705589294433594
    6. ' ' → logprob: -9.955589294433594
    7. '<|end|>' → logprob: -9.955589294433594
    8. '):
' → logprob: -10.205589294433594
    9. '=' → logprob: -10.580589294433594
    10. ',' → logprob: -10.580589294433594

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32982274889945984
    2. ' mid' → logprob: -1.4548227787017822
    3. 'mid' → logprob: -3.0798227787017822
    4. '```' → logprob: -7.704822540283203
    5. '    
' → logprob: -8.329822540283203
    6. '_mid' → logprob: -8.579822540283203
    7. 'm' → logprob: -9.329822540283203
    8. '(mid' → logprob: -9.329822540283203
    9. ' 
' → logprob: -9.579822540283203
    10. '	m' → logprob: -9.704822540283203

Token 386: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.06252001971006393
    2. ' mid' → logprob: -2.8125200271606445
    3. '   ' → logprob: -7.9375200271606445
    4. 'm' → logprob: -8.562520027160645
    5. 'middle' → logprob: -12.812520027160645
    6. '[mid' → logprob: -14.687520027160645
    7. '_mid' → logprob: -15.437520027160645
    8. ' middle' → logprob: -15.562520027160645
    9. ' m' → logprob: -16.062519073486328
    10. '(mid' → logprob: -16.187519073486328

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001034714630804956
    2. '=' → logprob: -6.876034736633301
    3. '<|end|>' → logprob: -14.2510347366333
    4. ' =(' → logprob: -14.6260347366333
    5. ' ' → logprob: -15.0010347366333
    6. '=int' → logprob: -15.6260347366333
    7. '=(' → logprob: -15.8760347366333
    8. ',' → logprob: -17.001033782958984
    9. '```' → logprob: -17.376033782958984
    10. ')' → logprob: -17.876033782958984

Token 388: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0052680266089737415
    2. ' (' → logprob: -5.255268096923828
    3. '(right' → logprob: -10.380268096923828
    4. ' ' → logprob: -14.130268096923828
    5. '   ' → logprob: -14.255268096923828
    6. '(N' → logprob: -14.880268096923828
    7. '(input' → logprob: -14.880268096923828
    8. '(mid' → logprob: -15.255268096923828
    9. 'left' → logprob: -15.630268096923828
    10. '(len' → logprob: -16.255268096923828

Token 389: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.320199877838604e-07
    2. ' left' → logprob: -15.25
    3. 'right' → logprob: -16.25
    4. 'lef' → logprob: -19.625
    5. '(left' → logprob: -20.125
    6. '[left' → logprob: -20.875
    7. '	left' → logprob: -21.0
    8. ' ' → logprob: -22.125
    9. '   ' → logprob: -22.375
    10. ' lef' → logprob: -22.875

Token 390: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868716359138489
    2. '+' → logprob: -1.136871576309204
    3. 'left' → logprob: -15.136871337890625
    4. '```' → logprob: -16.386871337890625
    5. '[left' → logprob: -16.636871337890625
    6. 'right' → logprob: -17.261871337890625
    7. ' ' → logprob: -17.511871337890625
    8. '[right' → logprob: -17.761871337890625
    9. ' left' → logprob: -18.386871337890625
    10. ' plus' → logprob: -18.511871337890625

Token 391: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.029750604182481766
    2. ' right' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.65475082397461
    4. '	right' → logprob: -17.52975082397461
    5. '   ' → logprob: -18.27975082397461
    6. '(right' → logprob: -18.77975082397461
    7. '[right' → logprob: -18.77975082397461
    8. '
' → logprob: -20.27975082397461
    9. '```' → logprob: -20.77975082397461
    10. '.right' → logprob: -20.77975082397461

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ')//' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.000022888183594
    4. ')>>' → logprob: -15.000022888183594
    5. '+' → logprob: -16.750022888183594
    6. '）' → logprob: -19.125022888183594
    7. ' +' → logprob: -19.500022888183594
    8. ')
' → logprob: -20.000022888183594
    9. ']' → logprob: -21.125022888183594
    10. '//' → logprob: -21.125022888183594

Token 393: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.10484685748815536
    2. '//' → logprob: -3.229846954345703
    3. ')' → logprob: -3.354846954345703
    4. '>>' → logprob: -3.854846954345703
    5. ' >>' → logprob: -6.104846954345703
    6. '```' → logprob: -7.104846954345703
    7. ')//' → logprob: -7.229846954345703
    8. ')>>' → logprob: -10.479846954345703
    9. '2' → logprob: -11.604846954345703
    10. ' ' → logprob: -11.854846954345703

Token 394: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.1250057220459
    4. '=' → logprob: -21.0000057220459
    5. '   ' → logprob: -21.2500057220459
    6. '２' → logprob: -21.3750057220459
    7. '۲' → logprob: -21.5000057220459
    8. '
' → logprob: -21.8750057220459
    9. '  ' → logprob: -23.1250057220459
    10. '
' → logprob: -23.1875057220459

Token 395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '２' → logprob: -20.375001907348633
    6. '۲' → logprob: -20.375001907348633
    7. '२' → logprob: -21.125001907348633
    8. '=' → logprob: -21.375001907348633
    9. '
' → logprob: -21.875001907348633
    10. '২' → logprob: -21.875001907348633

Token 396: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008631035452708602
    2. ' if' → logprob: -7.250863075256348
    3. 'if' → logprob: -8.875863075256348
    4. '    
' → logprob: -11.750863075256348
    5. 'value' → logprob: -14.125863075256348
    6. ' x' → logprob: -14.250863075256348
    7. ' mid' → logprob: -14.375863075256348
    8. '   ' → logprob: -14.750863075256348
    9. 'mid' → logprob: -14.875863075256348
    10. '
' → logprob: -15.000863075256348

Token 398: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49865832924842834
    2. 'val' → logprob: -1.498658299446106
    3. 'cnt' → logprob: -2.1236584186553955
    4. 'count' → logprob: -3.1236584186553955
    5. 'x' → logprob: -5.623658180236816
    6. 'c' (adapté à ' c') → logprob: -7.123658180236816
    7. 'v' → logprob: -8.123658180236816
    8. 'value' → logprob: -8.498658180236816
    9. 'res' → logprob: -8.748658180236816
    10. 'm' → logprob: -9.123658180236816

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2547287344932556
    2. '=' → logprob: -1.8797287940979004
    3. 'ount' → logprob: -2.6297287940979004
    4. '=count' → logprob: -10.004728317260742
    5. ' ' → logprob: -10.129728317260742
    6. 'nt' → logprob: -11.254728317260742
    7. '   ' → logprob: -12.254728317260742
    8. 'count' → logprob: -12.254728317260742
    9. 'ont' → logprob: -12.379728317260742
    10. '  ' → logprob: -12.629728317260742

Token 400: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00021295747137628496
    2. ' count' → logprob: -9.000212669372559
    3. 'a' → logprob: -9.375212669372559
    4. 'mid' → logprob: -13.375212669372559
    5. 'max' → logprob: -14.375212669372559
    6. '(count' → logprob: -14.625212669372559
    7. 'right' → logprob: -15.500212669372559
    8. 'c' → logprob: -15.500212669372559
    9. ' ' → logprob: -15.750212669372559
    10. 'b' → logprob: -15.875212669372559

Token 401: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0005844878032803535
    2. 'sub' → logprob: -7.875584602355957
    3. 'mid' → logprob: -9.000584602355957
    4. '_mid' → logprob: -10.000584602355957
    5. '_' → logprob: -10.750584602355957
    6. '(mid' → logprob: -11.750584602355957
    7. '[mid' → logprob: -13.250584602355957
    8. 'right' → logprob: -13.250584602355957
    9. '
' → logprob: -14.500584602355957
    10. '_
' → logprob: -15.125584602355957

Token 402: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.00016635251813568175
    2. '_sub' → logprob: -9.250165939331055
    3. 'sub' → logprob: -10.500165939331055
    4. 'array' → logprob: -10.875165939331055
    5. 'ar' → logprob: -12.125165939331055
    6. 'counts' → logprob: -12.625165939331055
    7. 'arr' → logprob: -12.750165939331055
    8. ' arrays' → logprob: -13.125165939331055
    9. 'x' → logprob: -13.250165939331055
    10. '(x' → logprob: -13.375165939331055

Token 403: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.00027921271976083517
    2. '(a' → logprob: -8.250279426574707
    3. 'mid' → logprob: -11.875279426574707
    4. '[mid' → logprob: -13.125279426574707
    5. '(b' → logprob: -13.250279426574707
    6. '(' → logprob: -13.375279426574707
    7. '(c' → logprob: -13.500279426574707
    8. '(left' → logprob: -13.625279426574707
    9. '(right' → logprob: -14.250279426574707
    10. '(mi' → logprob: -14.250279426574707

Token 404: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03387701138854027
    2. ')' → logprob: -3.408876895904541
    3. '   ' → logprob: -8.9088773727417
    4. ')
' → logprob: -9.5338773727417
    5. ' )
' → logprob: -10.7838773727417
    6. ' )' → logprob: -14.4088773727417
    7. ')

' → logprob: -14.4088773727417
    8. ')c' → logprob: -14.9088773727417
    9. 'if' → logprob: -15.0338773727417
    10. ')`
' → logprob: -15.1588773727417

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007054337300360203
    2. ' if' → logprob: -5.882054328918457
    3. '
' → logprob: -6.132054328918457
    4. 'if' → logprob: -7.007054328918457
    5. '<|end|>' → logprob: -7.007054328918457
    6. '    
' → logprob: -9.132054328918457
    7. ' 
' → logprob: -10.632054328918457
    8. ' ' → logprob: -10.757054328918457
    9. '<|end|>' → logprob: -10.757054328918457
    10. '  
' → logprob: -10.757054328918457

Token 406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20941898226737976
    2. ' if' → logprob: -1.7094190120697021
    3. '   ' → logprob: -4.834418773651123
    4. 'If' → logprob: -11.459419250488281
    5. '	if' → logprob: -12.334419250488281
    6. ';if' → logprob: -12.834419250488281
    7. '```' → logprob: -13.459419250488281
    8. ' ' → logprob: -14.459419250488281
    9. '[' → logprob: -14.584419250488281
    10. '<|end|>' → logprob: -15.084419250488281

Token 407: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018150877207517624
    2. ' c' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.14315128326416
    4. ' ' → logprob: -16.143150329589844
    5. '	c' → logprob: -16.268150329589844
    6. '  ' → logprob: -17.643150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '    ' → logprob: -18.643150329589844
    9. ')c' → logprob: -19.893150329589844
    10. '$c' → logprob: -20.018150329589844

Token 408: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.004712462425232
    2. '>=' → logprob: -1.254712462425232
    3. ' <' → logprob: -1.629712462425232
    4. ' >=' → logprob: -1.879712462425232
    5. '<int' → logprob: -11.504712104797363
    6. ' ' → logprob: -11.629712104797363
    7. '<N' → logprob: -11.754712104797363
    8. '<num' → logprob: -12.129712104797363
    9. '<c' → logprob: -12.129712104797363
    10. '<n' → logprob: -12.254712104797363

Token 409: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.750436007976532e-05
    2. ' L' → logprob: -10.62503719329834
    3. 'K' → logprob: -11.50003719329834
    4. '1' → logprob: -13.50003719329834
    5. '	L' → logprob: -14.37503719329834
    6. 'c' → logprob: -15.25003719329834
    7. 'mid' → logprob: -15.25003719329834
    8. '   ' → logprob: -15.87503719329834
    9. '
' → logprob: -16.250038146972656
    10. '
' → logprob: -16.875038146972656

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03643021360039711
    2. ':
' → logprob: -3.4114301204681396
    3. ':right' → logprob: -6.786430358886719
    4. '   ' → logprob: -7.161430358886719
    5. ':left' → logprob: -7.161430358886719
    6. ' :' → logprob: -9.661430358886719
    7. ':
' → logprob: -11.786430358886719
    8. '       ' → logprob: -12.286430358886719
    9. 'left' → logprob: -12.286430358886719
    10. '[left' → logprob: -12.536430358886719

Token 411: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.36487725377082825
    2. ' right' → logprob: -1.8648772239685059
    3. '   ' → logprob: -2.114877223968506
    4. '       ' → logprob: -3.989877223968506
    5. 'left' → logprob: -4.864877223968506
    6. ' left' → logprob: -5.989877223968506
    7. '	right' → logprob: -6.614877223968506
    8. '	left' → logprob: -10.114877700805664
    9. ',right' → logprob: -11.114877700805664
    10. '.right' → logprob: -11.864877700805664

Token 412: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0014085668371990323
    2. ' right' → logprob: -7.001408576965332
    3. 'left' → logprob: -7.626408576965332
    4. '   ' → logprob: -12.001408576965332
    5. '	right' → logprob: -13.126408576965332
    6. ' left' → logprob: -14.376408576965332
    7. '
' → logprob: -14.876408576965332
    8. '    
' → logprob: -16.126407623291016
    9. 'r' → logprob: -16.626407623291016
    10. 'Right' → logprob: -17.251407623291016

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. '＝' → logprob: -18.251928329467773
    4. ' ' → logprob: -18.876928329467773
    5. ')' → logprob: -19.501928329467773
    6. '[mid' → logprob: -19.751928329467773
    7. ',' → logprob: -19.876928329467773
    8. ' =
' → logprob: -19.876928329467773
    9. '=end' → logprob: -20.001928329467773
    10. '=line' → logprob: -20.001928329467773

Token 414: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.615255839889869e-05
    2. ' mid' → logprob: -9.250096321105957
    3. '[mid' → logprob: -18.87509536743164
    4. 'middle' → logprob: -19.87509536743164
    5. 'right' → logprob: -20.62509536743164
    6. 'm' → logprob: -21.37509536743164
    7. '_mid' → logprob: -21.50009536743164
    8. '(mid' → logprob: -21.50009536743164
    9. '   ' → logprob: -21.75009536743164
    10. 'midt' → logprob: -23.12509536743164

Token 415: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5760975480079651
    2. ' else' → logprob: -0.8260975480079651
    3. '   ' → logprob: -9.57609748840332
    4. '	else' → logprob: -10.45109748840332
    5. '[mid' → logprob: -10.82609748840332
    6. 'mid' → logprob: -11.20109748840332
    7. '_else' → logprob: -12.07609748840332
    8. '
' → logprob: -12.32609748840332
    9. '=' → logprob: -12.57609748840332
    10. ' mid' → logprob: -12.82609748840332

Token 416: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.034045711159706116
    2. '   ' → logprob: -3.784045696258545
    3. ' else' → logprob: -4.534045696258545
    4. '	else' → logprob: -12.534046173095703
    5. '```' → logprob: -14.909046173095703
    6. '  ' → logprob: -15.034046173095703
    7. 'left' → logprob: -15.409046173095703
    8. ' ' → logprob: -15.534046173095703
    9. '_else' → logprob: -15.909046173095703
    10. '#else' → logprob: -16.284046173095703

Token 417: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03806260600686073
    2. ' else' → logprob: -3.288062572479248
    3. '   ' → logprob: -10.788063049316406
    4. '	else' → logprob: -14.538063049316406
    5. '_else' → logprob: -18.538063049316406
    6. ' ' → logprob: -19.538063049316406
    7. '  ' → logprob: -20.038063049316406
    8. '#else' → logprob: -20.038063049316406
    9. '```' → logprob: -20.413063049316406
    10. 'Else' → logprob: -20.913063049316406

Token 418: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23060421645641327
    2. ' left' → logprob: -1.9806041717529297
    3. 'left' → logprob: -2.9806041717529297
    4. '   ' → logprob: -4.10560417175293
    5. '	left' → logprob: -7.60560417175293
    6. '[left' → logprob: -9.35560417175293
    7. ':left' → logprob: -9.98060417175293
    8. '    ' → logprob: -11.23060417175293
    9. ':' → logprob: -11.35560417175293
    10. ',left' → logprob: -11.35560417175293

Token 419: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005649913102388382
    2. ' left' → logprob: -5.505650043487549
    3. '       ' → logprob: -6.505650043487549
    4. '	left' → logprob: -9.75564956665039
    5. '   ' → logprob: -11.25564956665039
    6. '[left' → logprob: -13.63064956665039
    7. '.left' → logprob: -13.88064956665039
    8. ':left' → logprob: -14.13064956665039
    9. ',left' → logprob: -14.63064956665039
    10. '_left' → logprob: -14.88064956665039

Token 420: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.004078401252627373
    2. ' left' → logprob: -5.504078388214111
    3. '	left' → logprob: -17.879077911376953
    4. '       ' → logprob: -19.629077911376953
    5. '[left' → logprob: -19.754077911376953
    6. '   ' → logprob: -20.004077911376953
    7. '.left' → logprob: -20.629077911376953
    8. ' lef' → logprob: -20.879077911376953
    9. '左' → logprob: -20.879077911376953
    10. 'right' → logprob: -21.004077911376953

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007422991096973419
    2. '=' → logprob: -5.007422924041748
    3. ' +=' → logprob: -7.257422924041748
    4. '+=' → logprob: -13.132423400878906
    5. ' ' → logprob: -14.757423400878906
    6. ' <<=' → logprob: -17.007423400878906
    7. ' =)' → logprob: -17.257423400878906
    8. ' *=' → logprob: -18.882423400878906
    9. ' +' → logprob: -18.882423400878906
    10. '+' → logprob: -19.132423400878906

Token 422: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.008616108447313309
    2. ' mid' → logprob: -4.758615970611572
    3. 'right' → logprob: -13.63361644744873
    4. ' right' → logprob: -16.383615493774414
    5. '[mid' → logprob: -16.383615493774414
    6. 'left' → logprob: -17.008615493774414
    7. '(mid' → logprob: -17.758615493774414
    8. 'middle' → logprob: -18.258615493774414
    9. '   ' → logprob: -18.508615493774414
    10. '_mid' → logprob: -19.133615493774414

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0461738146841526
    2. ' +' → logprob: -3.7961738109588623
    3. ' +=' → logprob: -4.421174049377441
    4. '+=' → logprob: -4.546174049377441
    5. '+
' → logprob: -10.921174049377441
    6. '   ' → logprob: -11.671174049377441
    7. '1' → logprob: -12.046174049377441
    8. '=' → logprob: -13.296174049377441
    9. ' +
' → logprob: -13.296174049377441
    10. '```' → logprob: -14.296174049377441

Token 424: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '=' → logprob: -20.875001907348633
    6. 'def' → logprob: -21.125001907348633
    7. '１' → logprob: -22.375001907348633
    8. '       ' → logprob: -22.500001907348633
    9. '  ' → logprob: -22.625001907348633
    10. '0' → logprob: -22.750001907348633

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -17.875
    4. '１' → logprob: -21.0
    5. '   ' → logprob: -21.125
    6. '۱' → logprob: -21.875
    7. '१' → logprob: -21.9375
    8. '১' → logprob: -22.125
    9. '=' → logprob: -22.1875
    10. '``' → logprob: -22.5

Token 426: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010875897714868188
    2. '
' → logprob: -7.751087665557861
    3. ')
' → logprob: -7.876087665557861
    4. ')' → logprob: -8.626087188720703
    5. ']' → logprob: -10.001087188720703
    6. ' print' → logprob: -10.376087188720703
    7. ']
' → logprob: -11.876087188720703
    8. '```' → logprob: -12.876087188720703
    9. 'right' → logprob: -13.001087188720703
    10. '.print' → logprob: -13.501087188720703

Token 427: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.625
    3. '```' → logprob: -16.0
    4. ' print' → logprob: -16.125
    5. ')
' → logprob: -17.5
    6. 'right' → logprob: -18.75
    7. ')' → logprob: -19.0
    8. '#print' → logprob: -19.75
    9. 'pr' → logprob: -19.875
    10. '``' → logprob: -19.875

Token 428: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.002076028846204281
    2. '(right' → logprob: -6.877076148986816
    3. 'left' → logprob: -6.877076148986816
    4. '(a' → logprob: -12.002076148986816
    5. 'right' → logprob: -12.377076148986816
    6. 'a' → logprob: -14.627076148986816
    7. '(' → logprob: -15.252076148986816
    8. '[left' → logprob: -15.252076148986816
    9. ' left' → logprob: -16.5020751953125
    10. ',left' → logprob: -16.8770751953125

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.625
    4. '+' → logprob: -17.375
    5. '))' → logprob: -17.75
    6. ')#' → logprob: -18.125
    7. ')`' → logprob: -19.0
    8. ')}' → logprob: -19.5
    9. '}' → logprob: -19.75
    10. '*' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 427
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 332
Précision stricte (1ère position): 29.74%
Précision adaptée (1ère position): 32.79%
Précision (top 10): 77.75%
================================================================================
