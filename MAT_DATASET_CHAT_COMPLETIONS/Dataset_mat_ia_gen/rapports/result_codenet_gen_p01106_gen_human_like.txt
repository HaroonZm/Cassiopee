================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys
    sys.setrecursionlimit(10**7)

    def find_sequence(n, i, j):
        if n == 0:
            return ""
        half = 1 << (n - 1)
        if i <= half:
            # marked layer in top half => fold was from left to right 'L'
            if j <= half:
                # marked part in left half
                return "L" + find_sequence(n - 1, i, j)
            else:
                # marked part in right half
                return "L" + find_sequence(n - 1, i, j - half)
        else:
            # marked layer in bottom half => fold was from right to left 'R'
            i -= half
            if j <= half:
                # marked part in left half
                return "R" + find_sequence(n - 1, i, half - j + 1)
            else:
                # marked part in right half
                return "R" + find_sequence(n - 1, i, j - half)

    for line in sys.stdin:
        if not line.strip():
            continue
        n, i, j = map(int, line.strip().split())
        if n == 0 and i == 0 and j == 0:
            break
        print(find_sequence(n, i, j))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0205250978469849
    2. '   ' → logprob: -1.1455250978469849
    3. '\n' → logprob: -1.6455250978469849
    4. '```' → logprob: -2.5205249786376953
    5. '    
' → logprob: -3.7705249786376953
    6. ' 
' → logprob: -5.270524978637695
    7. '
' → logprob: -5.270524978637695
    8. ':' → logprob: -6.145524978637695
    9. '    ' → logprob: -6.645524978637695
    10. '`' → logprob: -6.895524978637695

Token 4: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8133214712142944
    2. '   ' → logprob: -1.9383214712142944
    3. 'x' → logprob: -2.438321590423584
    4. '    ' → logprob: -2.688321590423584
    5. ' ' → logprob: -2.813321590423584
    6. '\n' → logprob: -3.313321590423584
    7. '\' → logprob: -3.563321590423584
    8. ' pass' → logprob: -3.563321590423584
    9. '#' → logprob: -3.938321590423584
    10. 'pass' → logprob: -4.188321590423584

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014229794032871723
    2. ' math' → logprob: -4.264229774475098
    3. ' itertools' → logprob: -10.139229774475098
    4. ' numpy' → logprob: -11.389229774475098
    5. 'sys' → logprob: -12.139229774475098
    6. ' os' → logprob: -12.639229774475098
    7. ' ' → logprob: -13.264229774475098
    8. ' sym' → logprob: -13.389229774475098
    9. ' collections' → logprob: -13.639229774475098
    10. '=sys' → logprob: -14.389229774475098

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8628436326980591
    2. '\' → logprob: -1.362843632698059
    3. '.readline' → logprob: -1.737843632698059
    4. '```' → logprob: -3.3628435134887695
    5. '   ' → logprob: -3.4878435134887695
    6. '.' → logprob: -3.8628435134887695
    7. 'newline' → logprob: -4.1128435134887695
    8. '.stdout' → logprob: -4.3628435134887695
    9. '.stdin' → logprob: -4.3628435134887695
    10. '
' → logprob: -6.2378435134887695

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7748956084251404
    2. '\n' → logprob: -1.5248956680297852
    3. '.readline' → logprob: -2.649895668029785
    4. 'newline' → logprob: -2.649895668029785
    5. '\' → logprob: -3.399895668029785
    6. '
' → logprob: -3.524895668029785
    7. '.' → logprob: -3.774895668029785
    8. 'input' → logprob: -4.024895668029785
    9. '```' → logprob: -4.274895668029785
    10. '    
' → logprob: -4.399895668029785

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3163315951824188
    2. '.readline' → logprob: -2.191331624984741
    3. 'input' → logprob: -3.066331624984741
    4. '```' → logprob: -3.816331624984741
    5. '\n' → logprob: -4.191331386566162
    6. ' readline' → logprob: -4.191331386566162
    7. '.' → logprob: -4.441331386566162
    8. '       ' → logprob: -4.816331386566162
    9. 'newline' → logprob: -4.816331386566162
    10. '    ' → logprob: -5.566331386566162

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11876796931028366
    2. '.stdin' → logprob: -2.8687679767608643
    3. '.stdout' → logprob: -2.9937679767608643
    4. ' .' → logprob: -6.368767738342285
    5. '.exit' → logprob: -6.868767738342285
    6. '.stderr' → logprob: -7.118767738342285
    7. '.readline' → logprob: -7.243767738342285
    8. '.argv' → logprob: -7.368767738342285
    9. '.std' → logprob: -9.618767738342285
    10. '.import' → logprob: -9.868767738342285

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00355124706402421
    2. 'limit' → logprob: -6.378551483154297
    3. '_rec' → logprob: -7.503551483154297
    4. '_limit' → logprob: -7.503551483154297
    5. 'trace' → logprob: -8.378551483154297
    6. 'set' → logprob: -8.753551483154297
    7. ' recursion' → logprob: -8.878551483154297
    8. 'ex' → logprob: -10.628551483154297
    9. '_trace' → logprob: -10.753551483154297
    10. 'execution' → logprob: -10.878551483154297

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00035727277281694114
    2. 'urs' → logprob: -8.125357627868652
    3. 'ur' → logprob: -10.625357627868652
    4. '_' → logprob: -11.375357627868652
    5. 'limit' → logprob: -12.000357627868652
    6. '_limit' → logprob: -12.750357627868652
    7. 'ursor' → logprob: -12.750357627868652
    8. 'usion' → logprob: -12.875357627868652
    9. 'ision' → logprob: -13.500357627868652
    10. 'ursive' → logprob: -13.500357627868652

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.018170546740293503
    2. '_limit' → logprob: -4.018170356750488
    3. ' limit' → logprob: -11.893170356750488
    4. '_depth' → logprob: -11.893170356750488
    5. 'depth' → logprob: -12.268170356750488
    6. '-limit' → logprob: -13.643170356750488
    7. 'lim' → logprob: -14.393170356750488
    8. '.limit' → logprob: -15.768170356750488
    9. '_LIMIT' → logprob: -16.018171310424805
    10. 'Limit' → logprob: -16.018171310424805

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. '((' → logprob: -14.500001907348633
    3. '(
' → logprob: -14.875001907348633
    4. '("("' → logprob: -15.250001907348633
    5. '(

' → logprob: -15.375001907348633
    6. '```' → logprob: -15.625001907348633
    7. '40' → logprob: -16.000001907348633
    8. '('' → logprob: -16.250001907348633
    9. '()' → logprob: -16.250001907348633
    10. ' (' → logprob: -16.250001907348633

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019291093340143561
    2. '100' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.62692928314209
    4. '500' → logprob: -17.376928329467773
    5. '200' → logprob: -17.501928329467773
    6. '300' → logprob: -17.626928329467773
    7. 'int' → logprob: -18.126928329467773
    8. '   ' → logprob: -18.376928329467773
    9. '1' → logprob: -18.501928329467773
    10. '999' → logprob: -19.001928329467773

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5051432847976685
    2. '6' → logprob: -1.1301432847976685
    3. '7' → logprob: -3.505143165588379
    4. '**' → logprob: -3.755143165588379
    5. '000' → logprob: -4.255143165588379
    6. '5' → logprob: -5.630143165588379
    7. '00' → logprob: -6.130143165588379
    8. '```' → logprob: -9.380143165588379
    9. '4' → logprob: -10.005143165588379
    10. ')' → logprob: -11.005143165588379

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001939938636496663
    2. '9' → logprob: -6.25193977355957
    3. '8' → logprob: -11.50193977355957
    4. '6' → logprob: -13.62693977355957
    5. '```' → logprob: -19.25193977355957
    6. '**' → logprob: -20.75193977355957
    7. '``' → logprob: -21.25193977355957
    8. '

' → logprob: -23.00193977355957
    9. '+' → logprob: -23.12693977355957
    10. ')' → logprob: -23.25193977355957

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.500004768371582
    4. '))' → logprob: -16.7500057220459
    5. '   ' → logprob: -17.1250057220459
    6. ')
' → logprob: -18.0000057220459
    7. ')

' → logprob: -18.1250057220459
    8. ' ' → logprob: -18.2500057220459
    9. '`)' → logprob: -18.5000057220459
    10. '),' → logprob: -19.1250057220459

Token 18: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40809065103530884
    2. '   ' → logprob: -1.283090591430664
    3. '    
' → logprob: -3.033090591430664
    4. '\n' → logprob: -5.658090591430664
    5. 'n' → logprob: -6.033090591430664
    6. '```' → logprob: -6.783090591430664
    7. 'newline' → logprob: -7.533090591430664
    8. 'def' → logprob: -7.533090591430664
    9. '\' → logprob: -8.533090591430664
    10. 'a' → logprob: -8.783090591430664

Token 19: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.577157199382782
    2. '   ' → logprob: -0.827157199382782
    3. 'data' → logprob: -8.452157020568848
    4. 'a' → logprob: -8.452157020568848
    5. ' n' → logprob: -8.452157020568848
    6. '```' → logprob: -8.702157020568848
    7. 't' → logprob: -9.202157020568848
    8. '    
' → logprob: -9.577157020568848
    9. 'input' → logprob: -9.702157020568848
    10. 'd' → logprob: -10.452157020568848

Token 20: ' find' (ID: 1646)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0007476831669919193
    2. 'dfs' → logprob: -8.250747680664062
    3. ' f' → logprob: -8.750747680664062
    4. ' solve' → logprob: -9.125747680664062
    5. ' ' → logprob: -9.750747680664062
    6. ' helper' → logprob: -10.000747680664062
    7. ' recurse' → logprob: -10.875747680664062
    8. ' DFS' → logprob: -10.875747680664062
    9. ' back' → logprob: -11.375747680664062
    10. ' main' → logprob: -11.375747680664062

Token 21: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006847269367426634
    2. '(' → logprob: -5.256847381591797
    3. '_parent' → logprob: -7.256847381591797
    4. '_max' → logprob: -8.131847381591797
    5. '_path' → logprob: -9.506847381591797
    6. '_sub' → logprob: -9.756847381591797
    7. '(_' → logprob: -10.006847381591797
    8. '_(' → logprob: -10.131847381591797
    9. '_neighbors' → logprob: -10.256847381591797
    10. ' _' → logprob: -10.381847381591797

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009744709241203964
    2. '_' → logprob: -7.750974655151367
    3. '():' → logprob: -9.000974655151367
    4. '(n' → logprob: -9.625974655151367
    5. '(s' → logprob: -10.125974655151367
    6. '(a' → logprob: -10.375974655151367
    7. '_length' → logprob: -10.625974655151367
    8. 's' → logprob: -11.000974655151367
    9. '(x' → logprob: -11.000974655151367
    10. '(length' → logprob: -11.000974655151367

Token 23: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08406885713338852
    2. ',' → logprob: -2.834068775177002
    3. ')' → logprob: -3.834068775177002
    4. ':' → logprob: -9.58406925201416
    5. 's' → logprob: -9.95906925201416
    6. ' ,' → logprob: -11.08406925201416
    7. '[' → logprob: -11.08406925201416
    8. '):
' → logprob: -11.33406925201416
    9. ' ):' → logprob: -11.33406925201416
    10. '_' → logprob: -11.95906925201416

Token 24: ' i' (ID: 575)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7737105488777161
    2. ' m' → logprob: -1.3987104892730713
    3. 'k' → logprob: -2.5237104892730713
    4. 'm' → logprob: -3.2737104892730713
    5. ' start' → logprob: -3.6487104892730713
    6. ' depth' → logprob: -3.6487104892730713
    7. ' sequence' → logprob: -4.02371072769165
    8. ' a' → logprob: -4.14871072769165
    9. ' seq' → logprob: -4.27371072769165
    10. ' current' → logprob: -4.89871072769165

Token 25: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02205536514520645
    2. ')' → logprob: -4.522055149078369
    3. ',' → logprob: -4.647055149078369
    4. '+' → logprob: -7.022055149078369
    5. '):
' → logprob: -8.272055625915527
    6. ' ):' → logprob: -8.897055625915527
    7. ' ,' → logprob: -11.772055625915527
    8. '=' → logprob: -11.772055625915527
    9. 'n' → logprob: -12.272055625915527
    10. ':' → logprob: -12.272055625915527

Token 26: ' j' (ID: 441)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.0208407640457153
    2. ' m' → logprob: -2.645840644836426
    3. ' seq' → logprob: -2.645840644836426
    4. ' arr' → logprob: -2.770840644836426
    5. ' prev' → logprob: -2.895840644836426
    6. ' current' → logprob: -3.270840644836426
    7. ' k' → logprob: -3.395840644836426
    8. 'arr' → logprob: -3.395840644836426
    9. 'sequence' → logprob: -3.395840644836426
    10. ' visited' → logprob: -3.520840644836426

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04976866394281387
    2. ',' → logprob: -3.0497686862945557
    3. ')' → logprob: -6.799768447875977
    4. ' ):' → logprob: -10.924768447875977
    5. ':' → logprob: -11.049768447875977
    6. '   ' → logprob: -12.049768447875977
    7. '):
' → logprob: -12.174768447875977
    8. ' ,' → logprob: -12.299768447875977
    9. ''):' → logprob: -13.049768447875977
    10. '**' → logprob: -13.299768447875977

Token 28: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22860944271087646
    2. '):' → logprob: -1.7286094427108765
    3. '       ' → logprob: -3.853609561920166
    4. ')' → logprob: -5.978609561920166
    5. '   ' → logprob: -6.853609561920166
    6. ',' → logprob: -7.478609561920166
    7. '<|end|>' → logprob: -7.853609561920166
    8. ' :' → logprob: -8.353609085083008
    9. ':
' → logprob: -8.728609085083008
    10. ':return' → logprob: -8.853609085083008

Token 29: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2902401089668274
    2. ' ' → logprob: -2.0402400493621826
    3. ' if' → logprob: -3.2902400493621826
    4. '        ' → logprob: -3.5402400493621826
    5. '   ' → logprob: -3.6652400493621826
    6. '    ' → logprob: -4.540240287780762
    7. 'if' (adapté à ' if') → logprob: -5.165240287780762
    8. ':' → logprob: -5.665240287780762
    9. '<|end|>' → logprob: -5.665240287780762
    10. '  ' → logprob: -6.665240287780762

Token 30: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.41776904463768005
    2. ' n' → logprob: -1.6677690744400024
    3. 'i' → logprob: -2.042768955230713
    4. 'n' → logprob: -3.792768955230713
    5. ' j' → logprob: -7.792768955230713
    6. 'j' → logprob: -8.917769432067871
    7. ' ' → logprob: -10.667769432067871
    8. ' (' → logprob: -11.542769432067871
    9. '(i' → logprob: -11.667769432067871
    10. ' not' → logprob: -12.042769432067871

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.402566134929657
    2. '==' → logprob: -1.1525661945343018
    3. ' <=' → logprob: -4.527565956115723
    4. '<=' → logprob: -5.402565956115723
    5. '=' → logprob: -9.777565956115723
    6. ' <' → logprob: -9.777565956115723
    7. '   ' → logprob: -10.277565956115723
    8. ' ' → logprob: -10.402565956115723
    9. '<' → logprob: -10.652565956115723
    10. '-' → logprob: -11.152565956115723

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40090233087539673
    2. '0' → logprob: -1.150902271270752
    3. '1' → logprob: -4.275902271270752
    4. '  ' → logprob: -11.52590274810791
    5. '2' → logprob: -11.77590274810791
    6. '   ' → logprob: -11.77590274810791
    7. '-' → logprob: -13.96340274810791
    8. ' ' → logprob: -14.02590274810791
    9. 'i' → logprob: -14.21340274810791
    10. '3' → logprob: -14.27590274810791

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04379592463374138
    2. '1' → logprob: -3.1687958240509033
    3. ' ' → logprob: -7.168796062469482
    4. '2' → logprob: -11.418795585632324
    5. '-' → logprob: -12.168795585632324
    6. ')' → logprob: -13.168795585632324
    7. '   ' → logprob: -13.418795585632324
    8. '  ' → logprob: -13.668795585632324
    9. 'i' → logprob: -13.856295585632324
    10. '3' → logprob: -14.043795585632324

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020504549611359835
    2. ':return' → logprob: -6.502050399780273
    3. ' :' → logprob: -8.002050399780273
    4. ':
' → logprob: -9.502050399780273
    5. ' and' → logprob: -10.002050399780273
    6. '       ' → logprob: -10.002050399780273
    7. ' or' → logprob: -10.627050399780273
    8. '   ' → logprob: -11.127050399780273
    9. ' ' → logprob: -13.002050399780273
    10. ',' → logprob: -13.252050399780273

Token 35: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09240316599607468
    2. ':' → logprob: -2.7174031734466553
    3. '           ' → logprob: -4.592402935028076
    4. ':return' → logprob: -5.092402935028076
    5. ' return' → logprob: -5.342402935028076
    6. ':
' → logprob: -8.092403411865234
    7. 'return' → logprob: -8.092403411865234
    8. '   ' → logprob: -8.467403411865234
    9. ' :' → logprob: -9.467403411865234
    10. '<|end|>' → logprob: -9.967403411865234

Token 36: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03612394630908966
    2. 'return' (adapté à ' return') → logprob: -3.5361239910125732
    3. '       ' → logprob: -5.286123752593994
    4. '           ' → logprob: -7.161123752593994
    5. ' ' → logprob: -8.411124229431152
    6. '   ' → logprob: -9.286124229431152
    7. ':return' → logprob: -9.411124229431152
    8. '        ' → logprob: -10.661124229431152
    9. '[]' → logprob: -11.411124229431152
    10. ' \' → logprob: -11.661124229431152

Token 37: ' ""
' (ID: 18061)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8602089881896973
    2. '[]' → logprob: -1.2352089881896973
    3. '""' → logprob: -2.7352089881896973
    4. '[' → logprob: -3.2352089881896973
    5. ' [' → logprob: -3.3602089881896973
    6. ' ' → logprob: -3.3602089881896973
    7. ' ''' → logprob: -3.4852089881896973
    8. ' ""' → logprob: -3.6102089881896973
    9. '''' → logprob: -3.9852089881896973
    10. '[i' → logprob: -4.360208988189697

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018520381301641464
    2. '\n' → logprob: -4.393520355224609
    3. '<|end|>' → logprob: -6.143520355224609
    4. '        
' → logprob: -6.768520355224609
    5. '
' → logprob: -7.018520355224609
    6. '\' → logprob: -7.893520355224609
    7. '        ' → logprob: -8.01852035522461
    8. '    ' → logprob: -8.26852035522461
    9. '   ' → logprob: -8.76852035522461
    10. ' ' → logprob: -9.14352035522461

Token 39: ' half' (ID: 6375)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09191831201314926
    2. ' ' → logprob: -2.8419182300567627
    3. '        ' → logprob: -3.9669182300567627
    4. '    ' → logprob: -6.091918468475342
    5. '        
' → logprob: -6.466918468475342
    6. '   ' → logprob: -6.591918468475342
    7. ' if' → logprob: -6.716918468475342
    8. '  ' → logprob: -7.466918468475342
    9. '\n' → logprob: -7.466918468475342
    10. ' 
' → logprob: -7.591918468475342

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07057248800992966
    2. '=' → logprob: -3.4455723762512207
    3. '_len' → logprob: -4.070572376251221
    4. '_length' → logprob: -4.320572376251221
    5. '_size' → logprob: -5.820572376251221
    6. '_' → logprob: -6.195572376251221
    7. '-' → logprob: -7.820572376251221
    8. '_n' → logprob: -8.320572853088379
    9. ',' → logprob: -9.945572853088379
    10. '_count' → logprob: -10.195572853088379

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22126901149749756
    2. ' ' → logprob: -2.221269130706787
    3. '1' → logprob: -2.971269130706787
    4. '(' → logprob: -4.221269130706787
    5. ' (' → logprob: -4.346269130706787
    6. '3' → logprob: -5.471269130706787
    7. 'n' → logprob: -5.721269130706787
    8. ' n' → logprob: -6.221269130706787
    9. 'pow' → logprob: -7.596269130706787
    10. '(n' → logprob: -7.721269130706787

Token 42: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07833880931138992
    2. '1' → logprob: -3.328338861465454
    3. 'n' → logprob: -3.453338861465454
    4. '(' → logprob: -5.578338623046875
    5. '3' → logprob: -5.703338623046875
    6. '(n' → logprob: -7.828338623046875
    7. 'pow' → logprob: -9.203338623046875
    8. ' ' → logprob: -9.328338623046875
    9. '4' → logprob: -9.578338623046875
    10. '10' → logprob: -10.578338623046875

Token 43: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.08325498551130295
    2. ' <<' → logprob: -2.7082550525665283
    3. '<' → logprob: -4.583254814147949
    4. '<<(' → logprob: -5.833254814147949
    5. ' <' → logprob: -11.20825481414795
    6. ' ' → logprob: -11.20825481414795
    7. '2' → logprob: -11.45825481414795
    8. '<<<' → logprob: -11.95825481414795
    9. ' ' → logprob: -12.08325481414795
    10. '   ' → logprob: -12.08325481414795

Token 44: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01018914021551609
    2. 'n' → logprob: -5.135189056396484
    3. '(' → logprob: -5.510189056396484
    4. ' (' → logprob: -8.885189056396484
    5. ' n' → logprob: -10.385189056396484
    6. '2' → logprob: -11.635189056396484
    7. ' ' → logprob: -11.635189056396484
    8. '((' → logprob: -12.510189056396484
    9. '{' → logprob: -13.135189056396484
    10. '
' → logprob: -13.260189056396484

Token 45: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023357054218649864
    2. '(n' → logprob: -3.8983571529388428
    3. ' n' → logprob: -6.648356914520264
    4. '2' → logprob: -7.148356914520264
    5. '(' → logprob: -7.273356914520264
    6. ' (' → logprob: -11.398357391357422
    7. ' ' → logprob: -11.648357391357422
    8. '	n' → logprob: -12.148357391357422
    9. ')n' → logprob: -12.648357391357422
    10. '[n' → logprob: -13.398357391357422

Token 46: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012577231042087078
    2. ' -' → logprob: -4.387577056884766
    3. '2' → logprob: -10.262577056884766
    4. ' ' → logprob: -10.887577056884766
    5. '1' → logprob: -12.762577056884766
    6. '   ' → logprob: -12.887577056884766
    7. '[' → logprob: -13.637577056884766
    8. ')' → logprob: -13.637577056884766
    9. '  ' → logprob: -14.262577056884766
    10. '45' → logprob: -14.387577056884766

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045677117304876447
    2. ' ' → logprob: -7.750456809997559
    3. '-' → logprob: -11.375456809997559
    4. '2' → logprob: -11.875456809997559
    5. '   ' → logprob: -12.125456809997559
    6. ' -' → logprob: -14.500456809997559
    7. '  ' → logprob: -14.750456809997559
    8. '```' → logprob: -15.062956809997559
    9. ')' → logprob: -15.625456809997559
    10. '    ' → logprob: -15.875456809997559

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.250040054321289
    3. '2' → logprob: -13.250040054321289
    4. '   ' → logprob: -13.562540054321289
    5. '۱' → logprob: -15.062540054321289
    6. ')' → logprob: -15.125040054321289
    7. '```' → logprob: -15.125040054321289
    8. '

' → logprob: -15.375040054321289
    9. '  ' → logprob: -15.500040054321289
    10. '１' → logprob: -15.687540054321289

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001564586127642542
    2. ' )' → logprob: -8.87515640258789
    3. ')
' → logprob: -11.37515640258789
    4. '`)' → logprob: -13.87515640258789
    5. '<|end|>' → logprob: -14.12515640258789
    6. ')

' → logprob: -14.50015640258789
    7. '')' → logprob: -14.62515640258789
    8. '))' → logprob: -15.00015640258789
    9. ' ' → logprob: -15.37515640258789
    10. '       ' → logprob: -15.37515640258789

Token 50: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7164734601974487
    2. '\n' → logprob: -1.4664734601974487
    3. '<|end|>' → logprob: -1.4664734601974487
    4. '       ' → logprob: -3.9664735794067383
    5. '        
' → logprob: -4.591473579406738
    6. ' 
' → logprob: -4.716473579406738
    7. '  
' → logprob: -5.841473579406738
    8. 'newline' → logprob: -6.341473579406738
    9. '<|end|>' → logprob: -6.716473579406738
    10. ')' → logprob: -6.966473579406738

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22253932058811188
    2. 'if' (adapté à ' if') → logprob: -1.7225393056869507
    3. '       ' → logprob: -4.22253942489624
    4. '        ' → logprob: -6.22253942489624
    5. '<|end|>' → logprob: -6.22253942489624
    6. ' ' → logprob: -6.34753942489624
    7. '[' → logprob: -9.097538948059082
    8. '        
' → logprob: -9.347538948059082
    9. '
' → logprob: -9.847538948059082
    10. 's' → logprob: -10.097538948059082

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07785247266292572
    2. 'j' → logprob: -3.202852487564087
    3. ' i' → logprob: -3.452852487564087
    4. ' j' → logprob: -6.202852249145508
    5. '(i' → logprob: -7.952852249145508
    6. ' (' → logprob: -9.577852249145508
    7. ' ' → logprob: -9.952852249145508
    8. '(' → logprob: -10.890352249145508
    9. '   ' → logprob: -11.077852249145508
    10. '(j' → logprob: -11.452852249145508

Token 53: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3116774559020996
    2. ' <=' → logprob: -1.5616774559020996
    3. '<' → logprob: -3.1866774559020996
    4. '<=' → logprob: -4.6866774559021
    5. ' ' → logprob: -5.8116774559021
    6. ' >' → logprob: -6.4366774559021
    7. ' >=' → logprob: -7.3116774559021
    8. ' ==' → logprob: -7.4366774559021
    9. ' /' → logprob: -7.9366774559021
    10. '==' → logprob: -8.311677932739258

Token 54: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.05497538298368454
    2. ' half' → logprob: -2.9299752712249756
    3. ' ' → logprob: -9.929975509643555
    4. '_half' → logprob: -10.804975509643555
    5. '<|end|>' → logprob: -11.304975509643555
    6. '-half' → logprob: -13.054975509643555
    7. '   ' → logprob: -13.304975509643555
    8. 'hal' → logprob: -13.429975509643555
    9. '    ' → logprob: -13.929975509643555
    10. '  ' → logprob: -13.929975509643555

Token 55: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028061840683221817
    2. ':' → logprob: -3.903061866760254
    3. 'and' → logprob: -5.278061866760254
    4. ' ' → logprob: -6.653061866760254
    5. '<|end|>' → logprob: -7.903061866760254
    6. ' -' → logprob: -8.778061866760254
    7. '<|end|>' → logprob: -9.028061866760254
    8. ' :' → logprob: -9.028061866760254
    9. ':
' → logprob: -9.153061866760254
    10. '-' → logprob: -9.528061866760254

Token 56: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02328135259449482
    2. 'and' → logprob: -4.273281574249268
    3. ' if' → logprob: -5.398281574249268
    4. '           ' → logprob: -5.648281574249268
    5. '       ' → logprob: -7.273281574249268
    6. 'if' → logprob: -9.14828109741211
    7. ' return' → logprob: -9.27328109741211
    8. 'return' → logprob: -9.39828109741211
    9. ':' → logprob: -11.52328109741211
    10. ',' → logprob: -11.64828109741211

Token 57: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.213162362575531
    2. ' return' → logprob: -1.7131624221801758
    3. ' find' → logprob: -5.088162422180176
    4. 'find' → logprob: -5.338162422180176
    5. '           ' → logprob: -8.463162422180176
    6. ' if' → logprob: -8.588162422180176
    7. 'if' → logprob: -8.588162422180176
    8. ' ' → logprob: -10.088162422180176
    9. '       ' → logprob: -10.713162422180176
    10. '   ' → logprob: -11.213162422180176

Token 58: ' marked' (ID: 20779)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21228022873401642
    2. ' return' → logprob: -1.8372802734375
    3. 'if' → logprob: -4.3372802734375
    4. ' if' → logprob: -4.5872802734375
    5. '           ' → logprob: -5.0872802734375
    6. '       ' → logprob: -6.0872802734375
    7. '   ' → logprob: -8.8372802734375
    8. 'j' → logprob: -10.0872802734375
    9. ' ' → logprob: -10.4622802734375
    10. '        ' → logprob: -11.4622802734375

Token 59: ' layer' (ID: 10261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5247907042503357
    2. ' return' → logprob: -1.2747907638549805
    3. ' if' → logprob: -3.2747907638549805
    4. ' ' → logprob: -3.7747907638549805
    5. 'if' → logprob: -4.2747907638549805
    6. '<|end|>' → logprob: -4.5247907638549805
    7. '0' → logprob: -4.6497907638549805
    8. '[' → logprob: -4.7747907638549805
    9. '       ' → logprob: -5.1497907638549805
    10. 'def' → logprob: -5.7747907638549805

Token 60: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6750877499580383
    2. ' return' → logprob: -1.9250876903533936
    3. '       ' → logprob: -2.1750876903533936
    4. '        ' → logprob: -3.0500876903533936
    5. '<|end|>' → logprob: -3.1750876903533936
    6. ' if' → logprob: -3.8000876903533936
    7. '           ' → logprob: -4.050087928771973
    8. '[' → logprob: -4.175087928771973
    9. ',' → logprob: -4.425087928771973
    10. 'return' → logprob: -4.550087928771973

Token 61: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1002259254455566
    2. 'the' → logprob: -1.9752259254455566
    3. ' find' → logprob: -2.3502259254455566
    4. 'find' → logprob: -3.3502259254455566
    5. ' first' → logprob: -3.4752259254455566
    6. '   ' → logprob: -3.6002259254455566
    7. 'def' → logprob: -3.7252259254455566
    8. ' j' → logprob: -3.8502259254455566
    9. ' i' → logprob: -3.9752259254455566
    10. 'i' → logprob: -3.9752259254455566

Token 62: ' half' (ID: 6375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34577658772468567
    2. '\n' → logprob: -2.2207765579223633
    3. '<|end|>' → logprob: -2.2207765579223633
    4. 'return' → logprob: -3.8457765579223633
    5. '           ' → logprob: -4.470776557922363
    6. ' return' → logprob: -4.595776557922363
    7. '<|end|>' → logprob: -5.220776557922363
    8. '
' → logprob: -5.345776557922363
    9. '        ' → logprob: -5.345776557922363
    10. '        
' → logprob: -5.470776557922363

Token 64: ' fold' (ID: 17691)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.531096875667572
    2. ' find' → logprob: -1.4060969352722168
    3. 'return' → logprob: -2.281096935272217
    4. '"' → logprob: -3.406096935272217
    5. 'find' → logprob: -4.156096935272217
    6. '           ' → logprob: -4.781096935272217
    7. ' "' → logprob: -6.031096935272217
    8. ''s' → logprob: -7.531096935272217
    9. ' '' → logprob: -7.656096935272217
    10. ''' → logprob: -7.781096935272217

Token 65: ' was' (ID: 673)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' from' (ID: 591)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.4073983430862427
    2. 'down' → logprob: -1.5323983430862427
    3. ' down' → logprob: -1.9073983430862427
    4. ' on' → logprob: -2.407398223876953
    5. ' bottom' → logprob: -3.157398223876953
    6. 'from' → logprob: -3.282398223876953
    7. ' from' → logprob: -3.407398223876953
    8. ' up' → logprob: -3.657398223876953
    9. 'on' → logprob: -3.657398223876953
    10. ' top' → logprob: -3.782398223876953

Token 67: ' left' (ID: 3561)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.588756263256073
    2. ' bottom' → logprob: -1.4637563228607178
    3. ' the' → logprob: -2.2137563228607178
    4. 'the' → logprob: -2.5887563228607178
    5. 'top' → logprob: -4.213756084442139
    6. 'below' → logprob: -5.338756084442139
    7. ' below' → logprob: -5.838756084442139
    8. ' top' → logprob: -5.963756084442139
    9. 'down' → logprob: -6.213756084442139
    10. ' above' → logprob: -7.713756084442139

Token 68: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6869279742240906
    2. '<|end|>' → logprob: -1.5619280338287354
    3. ' and' → logprob: -2.9369280338287354
    4. ',' → logprob: -3.0619280338287354
    5. ' or' → logprob: -3.1869280338287354
    6. ')' → logprob: -3.3119280338287354
    7. ' side' → logprob: -3.5619280338287354
    8. 'top' → logprob: -4.061927795410156
    9. 'to' → logprob: -4.186927795410156
    10. ' half' → logprob: -4.811927795410156

Token 69: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.11290610581636429
    2. ' right' → logprob: -2.2379062175750732
    3. '	right' → logprob: -11.237906455993652
    4. 'top' → logprob: -11.362906455993652
    5. 'the' → logprob: -11.737906455993652
    6. 'bottom' → logprob: -12.112906455993652
    7. ' ' → logprob: -12.112906455993652
    8. 'left' → logprob: -12.237906455993652
    9. ' the' → logprob: -12.487906455993652
    10. '<|end|>' → logprob: -12.487906455993652

Token 70: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6840343475341797
    2. '<|end|>' → logprob: -1.3090343475341797
    3. '\n' → logprob: -2.1840343475341797
    4. '
' → logprob: -3.0590343475341797
    5. '           ' → logprob: -3.9340343475341797
    6. '<|end|>' → logprob: -4.43403434753418
    7. ')' → logprob: -4.80903434753418
    8. ' and' → logprob: -5.55903434753418
    9. ',' → logprob: -5.80903434753418
    10. 'return' → logprob: -5.93403434753418

Token 71: 'L' (ID: 43)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45640829205513
    2. '\n' → logprob: -1.2064082622528076
    3. '
' → logprob: -2.9564082622528076
    4. '
' → logprob: -4.831408500671387
    5. ''
' → logprob: -5.581408500671387
    6. ')' → logprob: -7.081408500671387
    7. '"' → logprob: -7.706408500671387
    8. ''s' → logprob: -8.206408500671387
    9. ''
' → logprob: -8.206408500671387
    10. '',' → logprob: -8.456408500671387

Token 72: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006808918435126543
    2. '')' → logprob: -5.631808757781982
    3. ''
' → logprob: -6.881808757781982
    4. ''
' → logprob: -7.131808757781982
    5. ')' → logprob: -7.631808757781982
    6. ')'' → logprob: -7.756808757781982
    7. '"' → logprob: -10.00680923461914
    8. 'F' → logprob: -10.25680923461914
    9. ')'
' → logprob: -10.25680923461914
    10. ''s' → logprob: -10.38180923461914

Token 73: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3537217974662781
    2. '       ' → logprob: -1.4787218570709229
    3. '
' → logprob: -3.478721857070923
    4. '<|end|>' → logprob: -3.603721857070923
    5. '           ' → logprob: -5.853721618652344
    6. 'n' → logprob: -5.978721618652344
    7. '\' → logprob: -6.103721618652344
    8. '<|end|>' → logprob: -6.978721618652344
    9. ')' → logprob: -7.103721618652344
    10. ',' → logprob: -7.603721618652344

Token 74: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5684030652046204
    2. ' return' → logprob: -1.1934030055999756
    3. '           ' → logprob: -2.1934030055999756
    4. '       ' → logprob: -4.193403244018555
    5. ' if' → logprob: -7.068403244018555
    6. ' ' → logprob: -7.568403244018555
    7. '               ' → logprob: -7.693403244018555
    8. '   ' → logprob: -7.818403244018555
    9. 'if' (adapté à ' if') → logprob: -7.818403244018555
    10. '<|end|>' → logprob: -7.943403244018555

Token 75: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06407371908426285
    2. 'j' → logprob: -2.8140738010406494
    3. ' i' → logprob: -6.31407356262207
    4. 'i' → logprob: -8.68907356262207
    5. '    ' → logprob: -9.93907356262207
    6. '   ' → logprob: -10.93907356262207
    7. ' ' → logprob: -11.25157356262207
    8. '	j' → logprob: -11.87657356262207
    9. ' not' → logprob: -12.00157356262207
    10. ' (' → logprob: -12.31407356262207

Token 76: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.42894333600997925
    2. '<=' → logprob: -1.053943395614624
    3. ' >' → logprob: -8.928943634033203
    4. '>' → logprob: -10.053943634033203
    5. '<|end|>' → logprob: -10.178943634033203
    6. '==' → logprob: -11.678943634033203
    7. '<|end|>' → logprob: -12.553943634033203
    8. '<' → logprob: -12.553943634033203
    9. ' <' → logprob: -13.053943634033203
    10. '#' → logprob: -13.303943634033203

Token 77: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.47417110204696655
    2. ' half' → logprob: -0.9741711020469666
    3. ' ' → logprob: -9.724170684814453
    4. 'hal' → logprob: -11.599170684814453
    5. '_half' → logprob: -12.224170684814453
    6. '1' → logprob: -12.599170684814453
    7. ' halfway' → logprob: -12.974170684814453
    8. ' i' → logprob: -13.224170684814453
    9. '   ' → logprob: -13.224170684814453
    10. '  ' → logprob: -13.224170684814453

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058062657713890076
    2. '<|end|>' → logprob: -3.5580625534057617
    3. ':
' → logprob: -3.8080625534057617
    4. '<|end|>' → logprob: -5.558062553405762
    5. ' :' → logprob: -7.183062553405762
    6. ':return' → logprob: -8.183062553405762
    7. '):' → logprob: -8.308062553405762
    8. '       ' → logprob: -8.808062553405762
    9. ' and' → logprob: -9.183062553405762
    10. '           ' → logprob: -9.433062553405762

Token 79: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.66358482837677
    2. '               ' → logprob: -1.16358482837677
    3. '<|end|>' → logprob: -2.5385847091674805
    4. ' return' → logprob: -2.9135847091674805
    5. 'return' → logprob: -3.7885847091674805
    6. ' ' → logprob: -5.1635847091674805
    7. '       ' → logprob: -5.9135847091674805
    8. '<|end|>' → logprob: -6.2885847091674805
    9. '            ' → logprob: -6.5385847091674805
    10. ':return' → logprob: -7.2885847091674805

Token 80: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36609378457069397
    2. ' return' → logprob: -1.3660937547683716
    3. '                   ' → logprob: -3.741093873977661
    4. '               ' → logprob: -3.866093873977661
    5. '           ' → logprob: -5.616093635559082
    6. '
' → logprob: -6.616093635559082
    7. '<|end|>' → logprob: -6.991093635559082
    8. '                       ' → logprob: -8.491093635559082
    9. ':return' → logprob: -9.116093635559082
    10. '<|end|>' → logprob: -9.116093635559082

Token 81: ' marked' (ID: 20779)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08965342491865158
    2. ' return' → logprob: -2.464653491973877
    3. '           ' → logprob: -8.089653015136719
    4. 'result' → logprob: -8.339653015136719
    5. '#' → logprob: -10.089653015136719
    6. '               ' → logprob: -10.589653015136719
    7. 'continue' → logprob: -10.964653015136719
    8. '       ' → logprob: -11.214653015136719
    9. '                   ' → logprob: -11.714653015136719
    10. ' ' → logprob: -12.089653015136719

Token 82: ' part' (ID: 997)
  Prédit: ' layer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' layer' → logprob: -0.43467655777931213
    2. 'layer' → logprob: -1.1846765279769897
    3. '<|end|>' → logprob: -4.434676647186279
    4. ' in' → logprob: -5.559676647186279
    5. 'sequence' → logprob: -5.559676647186279
    6. ' ' → logprob: -5.809676647186279
    7. ' sequence' → logprob: -5.934676647186279
    8. 'def' → logprob: -6.059676647186279
    9. '_layer' → logprob: -6.184676647186279
    10. ' =' → logprob: -6.309676647186279

Token 83: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9164522886276245
    2. '               ' → logprob: -1.7914522886276245
    3. 'return' → logprob: -1.9164522886276245
    4. ' =' → logprob: -2.041452407836914
    5. ' return' → logprob: -2.916452407836914
    6. '                   ' → logprob: -3.416452407836914
    7. ':return' → logprob: -4.041452407836914
    8. '<|end|>' → logprob: -4.666452407836914
    9. '=' → logprob: -4.916452407836914
    10. ':' → logprob: -5.166452407836914

Token 84: ' left' (ID: 3561)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.23200438916683197
    2. 'top' → logprob: -1.6070044040679932
    3. ' the' → logprob: -5.482004165649414
    4. 'the' → logprob: -6.607004165649414
    5. ' left' → logprob: -7.857004165649414
    6. ' ' → logprob: -8.357004165649414
    7. 'left' → logprob: -8.482004165649414
    8. ' bottom' → logprob: -9.607004165649414
    9. ' upper' → logprob: -10.607004165649414
    10. 'bottom' → logprob: -10.732004165649414

Token 85: ' half' (ID: 6375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8682861328125
    2. '                   ' → logprob: -1.2432861328125
    3. '           ' → logprob: -2.1182861328125
    4. '<|end|>' → logprob: -2.2432861328125
    5. 'return' → logprob: -3.4932861328125
    6. ' return' → logprob: -3.7432861328125
    7. '                       ' → logprob: -5.1182861328125
    8. '<|end|>' → logprob: -6.2432861328125
    9. ':return' → logprob: -6.4932861328125
    10. ',' → logprob: -7.3682861328125

Token 88: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5977311134338379
    2. ' return' → logprob: -0.8477311134338379
    3. '               ' → logprob: -4.597731113433838
    4. '                   ' → logprob: -4.972731113433838
    5. '           ' → logprob: -5.472731113433838
    6. '   ' → logprob: -9.22273063659668
    7. '       ' → logprob: -9.47273063659668
    8. '                       ' → logprob: -9.97273063659668
    9. '<|end|>' → logprob: -10.34773063659668
    10. ' ' → logprob: -10.59773063659668

Token 89: ' "' (ID: 392)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2523830235004425
    2. ' find' → logprob: -1.5023829936981201
    3. '"' → logprob: -7.877383232116699
    4. '"L' → logprob: -10.0023832321167
    5. '	find' → logprob: -12.2523832321167
    6. ' ' → logprob: -12.3773832321167
    7. 'L' → logprob: -12.5023832321167
    8. ' "' → logprob: -12.6273832321167
    9. '(find' → logprob: -12.8773832321167
    10. ' L' → logprob: -12.8773832321167

Token 90: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005526627413928509
    2. 'find' → logprob: -5.505526542663574
    3. '"' → logprob: -7.005526542663574
    4. '"L' → logprob: -8.380526542663574
    5. ' find' → logprob: -9.130526542663574
    6. '(find' → logprob: -10.005526542663574
    7. ' L' → logprob: -10.130526542663574
    8. 'LR' → logprob: -11.380526542663574
    9. ''L' → logprob: -11.443026542663574
    10. 'R' → logprob: -12.068026542663574

Token 91: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002157399198040366
    2. '"+' → logprob: -6.877157211303711
    3. '")' → logprob: -7.127157211303711
    4. 'L' → logprob: -8.502157211303711
    5. '"L' → logprob: -10.752157211303711
    6. '"
' → logprob: -11.002157211303711
    7. ')' → logprob: -11.627157211303711
    8. '("' → logprob: -11.752157211303711
    9. '")+' → logprob: -11.877157211303711
    10. '+' → logprob: -12.002157211303711

Token 92: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5934888124465942
    2. '+' → logprob: -1.0934888124465942
    3. '<|end|>' → logprob: -2.3434886932373047
    4. '[' → logprob: -4.593488693237305
    5. 'L' → logprob: -5.718488693237305
    6. '(' → logprob: -6.718488693237305
    7. '       ' → logprob: -8.218488693237305
    8. ' else' → logprob: -8.343488693237305
    9. 'else' → logprob: -8.343488693237305
    10. '<|end|>' → logprob: -8.593488693237305

Token 93: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1426943689584732
    2. ' find' → logprob: -2.0176944732666016
    3. '(find' → logprob: -11.517694473266602
    4. '	find' → logprob: -12.517694473266602
    5. ')find' → logprob: -13.392694473266602
    6. 'solve' → logprob: -13.767694473266602
    7. ' ' → logprob: -14.642694473266602
    8. '=find' → logprob: -14.642694473266602
    9. '
' → logprob: -14.767694473266602
    10. 'f' → logprob: -14.892694473266602

Token 94: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.625005722045898
    3. 'sequence' → logprob: -13.125005722045898
    4. '_sequences' → logprob: -15.750005722045898
    5. '(sequence' → logprob: -16.0000057220459
    6. '_SEQUENCE' → logprob: -16.6250057220459
    7. '```' → logprob: -17.1250057220459
    8. '_s' → logprob: -17.3750057220459
    9. '_seq' → logprob: -17.3750057220459
    10. '_solution' → logprob: -17.7500057220459

Token 95: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001696902181720361
    2. '(' → logprob: -8.75016975402832
    3. '<|end|>' → logprob: -12.12516975402832
    4. ' (' → logprob: -13.37516975402832
    5. '```' → logprob: -13.62516975402832
    6. '(
' → logprob: -13.87516975402832
    7. 'n' → logprob: -14.87516975402832
    8. '(nx' → logprob: -16.12516975402832
    9. '<|end|>' → logprob: -16.25016975402832
    10. ')n' → logprob: -16.25016975402832

Token 96: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016121407970786095
    2. ' -' → logprob: -4.1411213874816895
    3. ',' → logprob: -9.391121864318848
    4. ' ' → logprob: -13.516121864318848
    5. ' ,' → logprob: -14.516121864318848
    6. '       ' → logprob: -14.516121864318848
    7. '```' → logprob: -14.641121864318848
    8. '   ' → logprob: -14.891121864318848
    9. '1' → logprob: -16.39112091064453
    10. '
' → logprob: -16.64112091064453

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0053092967718839645
    2. ' ' → logprob: -5.255309104919434
    3. '<|end|>' → logprob: -9.630309104919434
    4. ',' → logprob: -12.380309104919434
    5. '   ' → logprob: -13.880309104919434
    6. '2' → logprob: -14.005309104919434
    7. '<|end|>' → logprob: -14.255309104919434
    8. '    ' → logprob: -14.255309104919434
    9. '-' → logprob: -14.505309104919434
    10. '       ' → logprob: -14.505309104919434

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.000015258789062
    4. '2' → logprob: -15.750015258789062
    5. '```' → logprob: -16.375015258789062
    6. '<|end|>' → logprob: -16.625015258789062
    7. '
' → logprob: -18.000015258789062
    8. '<|end|>' → logprob: -18.812515258789062
    9. '  ' → logprob: -19.125015258789062
    10. '    ' → logprob: -19.375015258789062

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005891349166631699
    2. '(i' → logprob: -5.2558913230896
    3. ' ,' → logprob: -8.005891799926758
    4. ',i' → logprob: -8.630891799926758
    5. '(' → logprob: -9.130891799926758
    6. '(n' → logprob: -10.880891799926758
    7. ',j' → logprob: -12.255891799926758
    8. '   ' → logprob: -12.630891799926758
    9. ')(' → logprob: -12.880891799926758
    10. ')' → logprob: -12.880891799926758

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029912592843174934
    2. ' i' → logprob: -3.5299127101898193
    3. '   ' → logprob: -9.279912948608398
    4. '       ' → logprob: -11.029912948608398
    5. ' ' → logprob: -11.154912948608398
    6. '    ' → logprob: -11.279912948608398
    7. '	i' → logprob: -11.654912948608398
    8. '           ' → logprob: -11.779912948608398
    9. '     ' → logprob: -13.029912948608398
    10. '(i' → logprob: -13.779912948608398

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031633416656404734
    2. ' ,' → logprob: -6.2531633377075195
    3. ',j' → logprob: -6.7531633377075195
    4. '   ' → logprob: -9.87816333770752
    5. '       ' → logprob: -12.00316333770752
    6. '    ' → logprob: -12.62816333770752
    7. '  ' → logprob: -12.75316333770752
    8. ' ' → logprob: -13.50316333770752
    9. '           ' → logprob: -14.50316333770752
    10. '     ' → logprob: -14.87816333770752

Token 102: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012599478475749493
    2. ' j' → logprob: -4.387599468231201
    3. '   ' → logprob: -9.51259994506836
    4. '    ' → logprob: -12.01259994506836
    5. '	j' → logprob: -12.76259994506836
    6. ' ' → logprob: -12.88759994506836
    7. '       ' → logprob: -13.38759994506836
    8. '  ' → logprob: -13.88759994506836
    9. '           ' → logprob: -14.51259994506836
    10. '     ' → logprob: -15.01259994506836

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01841166242957115
    2. ')
' → logprob: -4.018411636352539
    3. '       ' → logprob: -9.018411636352539
    4. ' )' → logprob: -9.393411636352539
    5. ')
' → logprob: -10.143411636352539
    6. ')

' → logprob: -11.768411636352539
    7. ' )
' → logprob: -12.268411636352539
    8. '   ' → logprob: -12.768411636352539
    9. '           ' → logprob: -14.143411636352539
    10. '	' → logprob: -15.018411636352539

Token 104: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09809892624616623
    2. 'else' → logprob: -2.8480989933013916
    3. ' else' → logprob: -3.3480989933013916
    4. '           ' → logprob: -9.098098754882812
    5. '<|end|>' → logprob: -9.098098754882812
    6. '
' → logprob: -10.098098754882812
    7. '	else' → logprob: -10.723098754882812
    8. ')' → logprob: -11.348098754882812
    9. '<|end|>' → logprob: -11.848098754882812
    10. '```' → logprob: -11.973098754882812

Token 105: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5086104273796082
    2. 'else' (adapté à ' else') → logprob: -1.008610486984253
    3. '       ' → logprob: -3.383610486984253
    4. '	else' → logprob: -11.508610725402832
    5. '        ' → logprob: -12.633610725402832
    6. '           ' → logprob: -13.508610725402832
    7. '   ' → logprob: -14.008610725402832
    8. '    ' → logprob: -14.633610725402832
    9. '      ' → logprob: -14.633610725402832
    10. 'elif' → logprob: -14.758610725402832

Token 106: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0751851797103882
    2. '       ' → logprob: -1.4501851797103882
    3. ' return' → logprob: -1.9501851797103882
    4. '           ' → logprob: -2.0751852989196777
    5. '"' → logprob: -2.7001852989196777
    6. ' "' → logprob: -3.9501852989196777
    7. 'return' → logprob: -4.075185298919678
    8. ':' → logprob: -4.575185298919678
    9. '   ' → logprob: -5.075185298919678
    10. ':
' → logprob: -5.450185298919678

Token 107: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13625474274158478
    2. 'return' → logprob: -2.8862547874450684
    3. '               ' → logprob: -3.1362547874450684
    4. '       ' → logprob: -4.386254787445068
    5. '"' → logprob: -4.511254787445068
    6. ' "' → logprob: -6.136254787445068
    7. '           ' → logprob: -6.136254787445068
    8. '   ' → logprob: -9.01125431060791
    9. ' ' → logprob: -9.63625431060791
    10. '        ' → logprob: -10.51125431060791

Token 108: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03894057497382164
    2. 'return' → logprob: -3.288940668106079
    3. '"' → logprob: -7.4139404296875
    4. '               ' → logprob: -9.0389404296875
    5. ' "' → logprob: -10.1639404296875
    6. ' ' → logprob: -10.2889404296875
    7. '       ' → logprob: -10.4139404296875
    8. '           ' → logprob: -10.9139404296875
    9. '   ' → logprob: -11.1639404296875
    10. ' #' → logprob: -11.2889404296875

Token 109: ' marked' (ID: 20779)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02036902867257595
    2. 'return' → logprob: -4.020369052886963
    3. ' marked' → logprob: -7.270369052886963
    4. ' #' → logprob: -7.645369052886963
    5. '#' → logprob: -8.395368576049805
    6. '   ' → logprob: -8.770368576049805
    7. ' ' → logprob: -9.020368576049805
    8. ' i' → logprob: -9.020368576049805
    9. ' find' → logprob: -9.270368576049805
    10. '           ' → logprob: -9.645368576049805

Token 110: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.004862872883677483
    2. 'part' → logprob: -5.5048627853393555
    3. '_part' → logprob: -8.004862785339355
    4. ' layer' → logprob: -8.004862785339355
    5. 'layer' → logprob: -10.879862785339355
    6. ' ' → logprob: -10.879862785339355
    7. ' parts' → logprob: -11.754862785339355
    8. ' i' → logprob: -11.879862785339355
    9. '   ' → logprob: -11.879862785339355
    10. 'i' → logprob: -12.129862785339355

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019739242270588875
    2. 'in' → logprob: -4.019739151000977
    3. '               ' → logprob: -7.269739151000977
    4. '>' → logprob: -8.769739151000977
    5. ' not' → logprob: -8.769739151000977
    6. ' ' → logprob: -9.144739151000977
    7. '           ' → logprob: -9.269739151000977
    8. '=' → logprob: -9.394739151000977
    9. ' (' → logprob: -10.144739151000977
    10. ' >' → logprob: -10.269739151000977

Token 112: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10050846636295319
    2. ' right' → logprob: -2.350508451461792
    3. 'bottom' → logprob: -8.600508689880371
    4. ' bottom' → logprob: -10.725508689880371
    5. 'left' → logprob: -10.850508689880371
    6. 'j' → logprob: -11.100508689880371
    7. 'i' → logprob: -11.225508689880371
    8. 'Right' → logprob: -11.475508689880371
    9. 'half' → logprob: -11.850508689880371
    10. ' j' → logprob: -12.100508689880371

Token 113: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.4288997948169708
    2. ' half' → logprob: -1.0538997650146484
    3. '_half' → logprob: -9.303899765014648
    4. '-half' → logprob: -9.928899765014648
    5. '   ' → logprob: -10.053899765014648
    6. ' part' → logprob: -12.053899765014648
    7. ' ' → logprob: -12.428899765014648
    8. '```' → logprob: -13.928899765014648
    9. '_HALF' → logprob: -14.553899765014648
    10. 'part' → logprob: -14.928899765014648

Token 114: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20570264756679535
    2. 'return' → logprob: -2.455702543258667
    3. '               ' → logprob: -2.455702543258667
    4. '           ' → logprob: -4.455702781677246
    5. '       ' → logprob: -6.580702781677246
    6. '   ' → logprob: -6.955702781677246
    7. ',' → logprob: -9.455702781677246
    8. ' ' → logprob: -9.580702781677246
    9. ':return' → logprob: -10.205702781677246
    10. ')' → logprob: -10.455702781677246

Token 115: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4140082001686096
    2. '               ' → logprob: -1.7890081405639648
    3. 'return' → logprob: -2.164008140563965
    4. '           ' → logprob: -3.039008140563965
    5. '       ' → logprob: -4.914008140563965
    6. '   ' → logprob: -6.789008140563965
    7. ' ' → logprob: -9.039008140563965
    8. '```' → logprob: -9.289008140563965
    9. ':return' → logprob: -9.539008140563965
    10. ')' → logprob: -9.664008140563965

Token 116: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47608649730682373
    2. 'return' (adapté à ' return') → logprob: -0.9760864973068237
    3. '               ' → logprob: -7.101086616516113
    4. '           ' → logprob: -7.351086616516113
    5. '"' → logprob: -8.476086616516113
    6. '   ' → logprob: -8.726086616516113
    7. '       ' → logprob: -9.351086616516113
    8. ' ' → logprob: -10.726086616516113
    9. '                   ' → logprob: -11.226086616516113
    10. '    ' → logprob: -11.851086616516113

Token 117: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20644709467887878
    2. '"L' → logprob: -1.8314471244812012
    3. ' "' → logprob: -3.706447124481201
    4. '"I' → logprob: -7.456447124481201
    5. '"S' → logprob: -8.331446647644043
    6. '"B' → logprob: -8.456446647644043
    7. '"C' → logprob: -8.956446647644043
    8. '"D' → logprob: -9.206446647644043
    9. '"O' → logprob: -9.456446647644043
    10. '"A' → logprob: -9.706446647644043

Token 118: 'L' (ID: 43)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13374221324920654
    2. 'R' → logprob: -2.383742332458496
    3. '"L' → logprob: -3.508742332458496
    4. 'L' → logprob: -6.133742332458496
    5. ''' → logprob: -7.383742332458496
    6. 'find' → logprob: -9.758742332458496
    7. ''L' → logprob: -10.008742332458496
    8. '"S' → logprob: -10.508742332458496
    9. '""' → logprob: -10.758742332458496
    10. '"N' → logprob: -11.758742332458496

Token 119: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01921958290040493
    2. ' +' → logprob: -4.519219398498535
    3. '+' → logprob: -5.894219398498535
    4. '-' → logprob: -6.769219398498535
    5. 'R' → logprob: -7.019219398498535
    6. '"-' → logprob: -7.394219398498535
    7. ' find' → logprob: -7.644219398498535
    8. ' "' → logprob: -8.269219398498535
    9. 'find' → logprob: -8.269219398498535
    10. '"+"' → logprob: -8.394219398498535

Token 120: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20210188627243042
    2. '+' → logprob: -1.9521019458770752
    3. ' else' → logprob: -3.577101945877075
    4. 'else' → logprob: -4.702101707458496
    5. '<|end|>' → logprob: -7.202101707458496
    6. '[' → logprob: -7.452101707458496
    7. '"' → logprob: -7.452101707458496
    8. ' ' → logprob: -7.702101707458496
    9. ' find' → logprob: -8.452101707458496
    10. 'find' → logprob: -8.702101707458496

Token 121: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.47476550936698914
    2. 'find' → logprob: -0.9747655391693115
    3. '"' → logprob: -7.349765300750732
    4. '	find' → logprob: -11.47476577758789
    5. '(find' → logprob: -11.47476577758789
    6. ' "' → logprob: -11.72476577758789
    7. ' ' → logprob: -11.84976577758789
    8. '")' → logprob: -12.84976577758789
    9. 'solve' → logprob: -14.03726577758789
    10. '""' → logprob: -14.16226577758789

Token 122: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.2729995988775045e-06
    2. 'sequence' → logprob: -12.000006675720215
    3. '_sequences' → logprob: -17.2500057220459
    4. '_SEQUENCE' → logprob: -18.0000057220459
    5. 'Sequence' → logprob: -18.2500057220459
    6. '_' → logprob: -18.5000057220459
    7. ' sequence' → logprob: -18.7500057220459
    8. '_s' → logprob: -19.8750057220459
    9. '_seq' → logprob: -20.0000057220459
    10. '(sequence' → logprob: -20.6250057220459

Token 123: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.625028610229492
    3. '<|end|>' → logprob: -13.250028610229492
    4. '(next' → logprob: -14.125028610229492
    5. '```' → logprob: -14.750028610229492
    6. 'n' → logprob: -14.875028610229492
    7. ' (' → logprob: -15.125028610229492
    8. '(end' → logprob: -16.000028610229492
    9. '<|end|>' → logprob: -16.125028610229492
    10. '(nx' → logprob: -16.625028610229492

Token 124: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009763641282916069
    2. ' -' → logprob: -4.634763717651367
    3. '       ' → logprob: -12.509763717651367
    4. '   ' → logprob: -12.884763717651367
    5. ' ' → logprob: -14.134763717651367
    6. '           ' → logprob: -14.634763717651367
    7. ')' → logprob: -17.009763717651367
    8. '  ' → logprob: -17.259763717651367
    9. '1' → logprob: -17.384763717651367
    10. ',' → logprob: -17.384763717651367

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005041812546551228
    2. ' ' → logprob: -8.125504493713379
    3. '2' → logprob: -8.875504493713379
    4. '       ' → logprob: -10.875504493713379
    5. '   ' → logprob: -11.000504493713379
    6. '-' → logprob: -11.000504493713379
    7. '           ' → logprob: -11.250504493713379
    8. '```' → logprob: -13.625504493713379
    9. '               ' → logprob: -15.063004493713379
    10. '
' → logprob: -15.063004493713379

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011509364703670144
    2. '-' → logprob: -7.001151084899902
    3. '       ' → logprob: -9.251151084899902
    4. ' ' → logprob: -9.501151084899902
    5. '           ' → logprob: -10.501151084899902
    6. '   ' → logprob: -10.876151084899902
    7. '2' → logprob: -11.751151084899902
    8. 'j' → logprob: -12.501151084899902
    9. ' -' → logprob: -12.626151084899902
    10. 'i' → logprob: -13.376151084899902

Token 127: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03639906644821167
    2. ',' → logprob: -3.4113991260528564
    3. '(' → logprob: -5.911398887634277
    4. '(n' → logprob: -11.411398887634277
    5. '(
' → logprob: -11.786398887634277
    6. ' (' → logprob: -12.161398887634277
    7. ',i' → logprob: -12.161398887634277
    8. '(j' → logprob: -12.661398887634277
    9. '   ' → logprob: -13.286398887634277
    10. '           ' → logprob: -13.536398887634277

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020666377618908882
    2. ' i' → logprob: -3.8956663608551025
    3. '   ' → logprob: -9.520666122436523
    4. ' ' → logprob: -10.270666122436523
    5. '  ' → logprob: -11.895666122436523
    6. '    ' → logprob: -12.770666122436523
    7. '     ' → logprob: -12.770666122436523
    8. '       ' → logprob: -13.770666122436523
    9. '
' → logprob: -14.145666122436523
    10. '	i' → logprob: -14.520666122436523

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009094370761886239
    2. ' ,' → logprob: -7.750909328460693
    3. ',j' → logprob: -7.875909328460693
    4. ' j' → logprob: -10.250909805297852
    5. ' -' → logprob: -10.500909805297852
    6. '-' → logprob: -11.375909805297852
    7. ' ' → logprob: -11.750909805297852
    8. '   ' → logprob: -12.125909805297852
    9. 'j' → logprob: -12.375909805297852
    10. '       ' → logprob: -13.000909805297852

Token 130: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007668267469853163
    2. ' j' → logprob: -4.882668495178223
    3. ' ' → logprob: -10.507668495178223
    4. '   ' → logprob: -10.632668495178223
    5. '(j' → logprob: -13.007668495178223
    6. '  ' → logprob: -13.257668495178223
    7. '    ' → logprob: -13.382668495178223
    8. ' (' → logprob: -14.257668495178223
    9. '(' → logprob: -14.382668495178223
    10. 'half' → logprob: -14.382668495178223

Token 131: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014288455247879
    2. '-' → logprob: -1.7014288902282715
    3. '-half' → logprob: -11.326428413391113
    4. ' ' → logprob: -13.576428413391113
    5. ')' → logprob: -14.076428413391113
    6. '   ' → logprob: -14.576428413391113
    7. '-hal' → logprob: -15.201428413391113
    8. '	' → logprob: -15.826428413391113
    9. '       ' → logprob: -16.45142936706543
    10. '           ' → logprob: -16.45142936706543

Token 132: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00015955790877342224
    2. ' half' → logprob: -8.75015926361084
    3. ' ' → logprob: -15.00015926361084
    4. 'hal' → logprob: -15.25015926361084
    5. '1' → logprob: -15.37515926361084
    6. '   ' → logprob: -15.75015926361084
    7. 'halve' → logprob: -16.875160217285156
    8. '_half' → logprob: -17.250160217285156
    9. 'halb' → logprob: -18.625160217285156
    10. '0' → logprob: -19.000160217285156

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012166214582975954
    2. ')
' → logprob: -9.6251220703125
    3. '       ' → logprob: -9.8751220703125
    4. ' )' → logprob: -13.1251220703125
    5. '   ' → logprob: -13.8751220703125
    6. '))' → logprob: -15.1251220703125
    7. '")' → logprob: -15.3751220703125
    8. ')`' → logprob: -15.7501220703125
    9. ')return' → logprob: -15.8751220703125
    10. ')

' → logprob: -16.1251220703125

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016241630539298058
    2. 'else' → logprob: -4.766241550445557
    3. ' else' → logprob: -4.891241550445557
    4. '<|end|>' → logprob: -9.891242027282715
    5. '```' → logprob: -11.516242027282715
    6. ')' → logprob: -11.516242027282715
    7. '	else' → logprob: -12.391242027282715
    8. 'elif' → logprob: -12.391242027282715
    9. '   ' → logprob: -13.266242027282715
    10. '
' → logprob: -13.641242027282715

Token 135: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3875376284122467
    2. '       ' → logprob: -1.3875375986099243
    3. ' else' → logprob: -2.637537717819214
    4. '   ' → logprob: -10.637537956237793
    5. 'elif' → logprob: -11.762537956237793
    6. '
' → logprob: -12.387537956237793
    7. '```' → logprob: -12.512537956237793
    8. 'if' → logprob: -12.762537956237793
    9. '	else' → logprob: -12.762537956237793
    10. ')' → logprob: -14.762537956237793

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1287892609834671
    2. ':
' → logprob: -2.128789186477661
    3. '       ' → logprob: -6.75378942489624
    4. '{' → logprob: -7.75378942489624
    5. '<|end|>' → logprob: -9.503788948059082
    6. '           ' → logprob: -10.003788948059082
    7. '{
' → logprob: -10.253788948059082
    8. ' :' → logprob: -10.503788948059082
    9. '```' → logprob: -11.003788948059082
    10. ' :
' → logprob: -11.503788948059082

Token 137: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004015122540295124
    2. '           ' → logprob: -5.75401496887207
    3. 'if' → logprob: -8.12901496887207
    4. ' if' → logprob: -8.50401496887207
    5. '#' → logprob: -8.75401496887207
    6. ' #' → logprob: -10.00401496887207
    7. '        ' → logprob: -10.00401496887207
    8. ' ' → logprob: -10.62901496887207
    9. '   ' → logprob: -10.75401496887207
    10. '               ' → logprob: -11.50401496887207

Token 138: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6895233392715454
    2. '       ' → logprob: -1.3145233392715454
    3. '#' (adapté à ' #') → logprob: -1.5645233392715454
    4. ' if' → logprob: -3.939523220062256
    5. ' #' → logprob: -7.439523220062256
    6. ' ' → logprob: -8.814523696899414
    7. '   ' → logprob: -9.189523696899414
    8. '           ' → logprob: -9.564523696899414
    9. '        ' → logprob: -12.189523696899414
    10. '	if' → logprob: -12.189523696899414

Token 139: ' marked' (ID: 20779)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5847081542015076
    2. 'if' → logprob: -1.7097082138061523
    3. '       ' → logprob: -1.8347082138061523
    4. '           ' → logprob: -3.3347082138061523
    5. 'marked' → logprob: -3.5847082138061523
    6. '   ' → logprob: -4.209708213806152
    7. ' if' → logprob: -4.459708213806152
    8. ' marked' → logprob: -4.709708213806152
    9. ' #' → logprob: -6.209708213806152
    10. ' ' → logprob: -7.334708213806152

Token 140: ' layer' (ID: 10261)
  Prédit: ' layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' layer' → logprob: -0.014290789142251015
    2. 'layer' → logprob: -4.264290809631348
    3. '_layer' → logprob: -9.264290809631348
    4. '   ' → logprob: -11.139290809631348
    5. ' part' → logprob: -11.764290809631348
    6. '	layer' → logprob: -12.389290809631348
    7. '       ' → logprob: -13.264290809631348
    8. ' ' → logprob: -13.764290809631348
    9. '(layer' → logprob: -14.139290809631348
    10. '           ' → logprob: -15.014290809631348

Token 141: ' in' (ID: 306)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6162570714950562
    2. '       ' → logprob: -0.8662570714950562
    3. 'if' → logprob: -3.3662571907043457
    4. ' in' → logprob: -5.991257190704346
    5. '   ' → logprob: -6.866257190704346
    6. '           ' → logprob: -7.866257190704346
    7. ' =' → logprob: -7.991257190704346
    8. ':' → logprob: -8.741256713867188
    9. '=' → logprob: -8.991256713867188
    10. '        ' → logprob: -9.491256713867188

Token 142: ' bottom' (ID: 8725)
  Prédit: ' bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.41034799814224243
    2. 'bottom' → logprob: -1.7853479385375977
    3. ' right' → logprob: -2.5353479385375977
    4. ' left' → logprob: -3.5353479385375977
    5. ' top' → logprob: -3.7853479385375977
    6. 'right' → logprob: -4.285347938537598
    7. 'left' → logprob: -4.535347938537598
    8. 'top' → logprob: -5.410347938537598
    9. ' the' → logprob: -5.910347938537598
    10. ' n' → logprob: -6.160347938537598

Token 143: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.4741089940071106
    2. 'half' → logprob: -0.9741089940071106
    3. '   ' → logprob: -11.599108695983887
    4. '_half' → logprob: -12.099108695983887
    5. ' part' → logprob: -12.599108695983887
    6. '       ' → logprob: -12.724108695983887
    7. ' else' → logprob: -12.724108695983887
    8. 'left' → logprob: -13.224108695983887
    9. 'else' → logprob: -13.724108695983887
    10. ' if' → logprob: -13.849108695983887

Token 144: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3214603662490845
    2. ' if' → logprob: -1.3214603662490845
    3. 'if' → logprob: -4.821460247039795
    4. '           ' → logprob: -9.321460723876953
    5. '```' → logprob: -11.946460723876953
    6. '   ' → logprob: -12.071460723876953
    7. ' ' → logprob: -12.946460723876953
    8. '        ' → logprob: -13.071460723876953
    9. '	if' → logprob: -13.946460723876953
    10. 'If' → logprob: -14.196460723876953

Token 145: ' fold' (ID: 17691)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7124067544937134
    2. 'if' → logprob: -0.9624067544937134
    3. '       ' → logprob: -2.837406635284424
    4. '"' → logprob: -3.337406635284424
    5. '           ' → logprob: -3.962406635284424
    6. 'return' → logprob: -5.462406635284424
    7. ' return' → logprob: -5.962406635284424
    8. ' "' → logprob: -6.212406635284424
    9. '   ' → logprob: -6.587406635284424
    10. 'R' → logprob: -6.587406635284424

Token 146: ' was' (ID: 673)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3458057641983032
    2. ' was' → logprob: -1.4708057641983032
    3. 'from' → logprob: -3.0958056449890137
    4. '       ' → logprob: -4.970805644989014
    5. '           ' → logprob: -4.970805644989014
    6. '   ' → logprob: -6.220805644989014
    7. ' ' → logprob: -7.970805644989014
    8. 'was' → logprob: -8.095806121826172
    9. ' "' → logprob: -8.470806121826172
    10. ' is' → logprob: -8.970806121826172

Token 147: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6810819506645203
    2. 'from' → logprob: -1.056082010269165
    3. '"' → logprob: -2.306082010269165
    4. ''' → logprob: -3.806082010269165
    5. ' "' → logprob: -4.181081771850586
    6. ' '' → logprob: -5.056081771850586
    7. 'R' → logprob: -6.681081771850586
    8. ' R' → logprob: -8.181081771850586
    9. 'From' → logprob: -8.306081771850586
    10. ' ' → logprob: -8.681081771850586

Token 148: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.28423580527305603
    2. '"' → logprob: -1.9092358350753784
    3. 'R' → logprob: -2.909235715866089
    4. ' right' → logprob: -3.409235715866089
    5. 'left' → logprob: -5.409235954284668
    6. ''' → logprob: -5.659235954284668
    7. ' R' → logprob: -7.284235954284668
    8. 'bottom' → logprob: -7.284235954284668
    9. 'r' → logprob: -7.409235954284668
    10. 'Right' → logprob: -8.034235954284668

Token 149: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.05490710586309433
    2. ' to' → logprob: -2.9299070835113525
    3. '_to' → logprob: -10.929906845092773
    4. '   ' → logprob: -13.679906845092773
    5. '<|end|>' → logprob: -13.679906845092773
    6. '       ' → logprob: -13.804906845092773
    7. ' ' → logprob: -14.179906845092773
    8. ')' → logprob: -14.179906845092773
    9. 'To' → logprob: -14.679906845092773
    10. '-to' → logprob: -15.179906845092773

Token 150: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1605345457792282
    2. 'right' → logprob: -1.9105345010757446
    3. ' left' → logprob: -8.535534858703613
    4. 'top' → logprob: -9.660534858703613
    5. ' right' → logprob: -10.035534858703613
    6. 'bottom' → logprob: -12.160534858703613
    7. ' top' → logprob: -15.160534858703613
    8. 'lef' → logprob: -15.285534858703613
    9. '   ' → logprob: -16.035533905029297
    10. '	left' → logprob: -16.160533905029297

Token 151: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13368695974349976
    2. ' if' → logprob: -2.5086870193481445
    3. '           ' → logprob: -3.2586870193481445
    4. 'if' → logprob: -5.2586870193481445
    5. ' ' → logprob: -10.008687019348145
    6. '   ' → logprob: -10.133687019348145
    7. ' (' → logprob: -11.258687019348145
    8. '(' → logprob: -12.133687019348145
    9. '```' → logprob: -12.133687019348145
    10. '<|end|>' → logprob: -12.383687019348145

Token 152: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.008682174608111382
    2. 'L' → logprob: -4.7586822509765625
    3. ''' → logprob: -10.383682250976562
    4. '"' → logprob: -11.008682250976562
    5. ' R' → logprob: -11.508682250976562
    6. ''L' → logprob: -13.258682250976562
    7. '
' → logprob: -13.758682250976562
    8. '"L' → logprob: -13.821182250976562
    9. 'F' → logprob: -14.196182250976562
    10. 'RL' → logprob: -14.696182250976562

Token 153: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013779717264696956
    2. ''
' → logprob: -7.251378059387207
    3. ''' → logprob: -8.126378059387207
    4. '\n' → logprob: -9.376378059387207
    5. '           ' → logprob: -10.126378059387207
    6. ')
' → logprob: -10.251378059387207
    7. '   ' → logprob: -10.251378059387207
    8. '"' → logprob: -10.376378059387207
    9. ')' → logprob: -10.376378059387207
    10. 'def' → logprob: -10.626378059387207

Token 154: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014222975820302963
    2. ' if' → logprob: -4.389223098754883
    3. 'if' → logprob: -7.014223098754883
    4. '           ' → logprob: -7.139223098754883
    5. '   ' → logprob: -11.639223098754883
    6. '```' → logprob: -12.264223098754883
    7. '	   ' → logprob: -13.514223098754883
    8. '	if' → logprob: -13.639223098754883
    9. '<|end|>' → logprob: -13.889223098754883
    10. '        ' → logprob: -14.889223098754883

Token 155: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3325689435005188
    2. ' if' → logprob: -1.332568883895874
    3. '       ' → logprob: -3.957568883895874
    4. '           ' → logprob: -12.207569122314453
    5. ' ' → logprob: -12.457569122314453
    6. '	if' → logprob: -13.332569122314453
    7. '   ' → logprob: -13.582569122314453
    8. '```' → logprob: -15.707569122314453
    9. 'If' → logprob: -15.832569122314453
    10. '        ' → logprob: -16.082569122314453

Token 156: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3644014596939087
    2. ' -=' → logprob: -1.2394014596939087
    3. '=' → logprob: -4.364401340484619
    4. '-' → logprob: -6.239401340484619
    5. ',' → logprob: -7.489401340484619
    6. ' =' → logprob: -8.114401817321777
    7. '_half' → logprob: -9.364401817321777
    8. '_minus' → logprob: -9.989401817321777
    9. '>' → logprob: -10.114401817321777
    10. ' -' → logprob: -10.364401817321777

Token 157: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0024756586644798517
    2. ' half' → logprob: -6.002475738525391
    3. 'hal' → logprob: -17.62747573852539
    4. 'halve' → logprob: -21.37747573852539
    5. ' ' → logprob: -21.62747573852539
    6. '   ' → logprob: -21.87747573852539
    7. '_half' → logprob: -22.25247573852539
    8. '1' → logprob: -22.87747573852539
    9. 'Half' → logprob: -23.50247573852539
    10. 'home' → logprob: -23.87747573852539

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2790672779083252
    2. 'if' → logprob: -1.5290672779083252
    3. ' if' → logprob: -3.654067277908325
    4. '
' → logprob: -7.904067039489746
    5. '           ' → logprob: -7.904067039489746
    6. '<|end|>' → logprob: -9.904067039489746
    7. '   ' → logprob: -10.404067039489746
    8. '	if' → logprob: -11.154067039489746
    9. '```' → logprob: -11.404067039489746
    10. ';if' → logprob: -12.029067039489746

Token 159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3202487528324127
    2. 'if' → logprob: -1.3202487230300903
    3. ' if' → logprob: -5.195248603820801
    4. '           ' → logprob: -6.695248603820801
    5. '   ' → logprob: -8.6952486038208
    6. ' ' → logprob: -11.9452486038208
    7. '	if' → logprob: -12.3202486038208
    8. '```' → logprob: -13.0702486038208
    9. '	   ' → logprob: -13.4452486038208
    10. '
' → logprob: -15.0702486038208

Token 160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000695515947882086
    2. ' if' → logprob: -7.375695705413818
    3. '       ' → logprob: -9.62569522857666
    4. '           ' → logprob: -12.87569522857666
    5. '   ' → logprob: -15.62569522857666
    6. '```' → logprob: -15.62569522857666
    7. '	if' → logprob: -16.750696182250977
    8. ' ' → logprob: -16.875696182250977
    9. 'If' → logprob: -17.500696182250977
    10. 'j' → logprob: -18.375696182250977

Token 161: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020977530628442764
    2. ' j' → logprob: -3.89597749710083
    3. '   ' → logprob: -8.145977973937988
    4. 'i' → logprob: -9.520977973937988
    5. '           ' → logprob: -10.395977973937988
    6. '       ' → logprob: -11.145977973937988
    7. '    ' → logprob: -11.520977973937988
    8. ' i' → logprob: -12.520977973937988
    9. ' ' → logprob: -12.895977973937988
    10. '	j' → logprob: -13.145977973937988

Token 162: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16023612022399902
    2. '<=' → logprob: -1.910236120223999
    3. ' >' → logprob: -12.035236358642578
    4. '>' → logprob: -12.785236358642578
    5. '   ' → logprob: -13.160236358642578
    6. '<|end|>' → logprob: -14.785236358642578
    7. ')<=' → logprob: -15.410236358642578
    8. ' ≤' → logprob: -15.535236358642578
    9. '       ' → logprob: -16.410236358642578
    10. ' ' → logprob: -16.410236358642578

Token 163: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0017035098280757666
    2. ' half' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.251703262329102
    4. ' ' → logprob: -14.876703262329102
    5. 'hal' → logprob: -15.751703262329102
    6. '1' → logprob: -16.2517032623291
    7. '_half' → logprob: -17.1267032623291
    8. '
' → logprob: -17.7517032623291
    9. '  ' → logprob: -18.0017032623291
    10. '0' → logprob: -18.3767032623291

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017134016379714012
    2. ':
' → logprob: -4.142134189605713
    3. '       ' → logprob: -7.767134189605713
    4. ':return' → logprob: -8.267133712768555
    5. '           ' → logprob: -8.642133712768555
    6. '               ' → logprob: -9.267133712768555
    7. '<|end|>' → logprob: -9.267133712768555
    8. ':

' → logprob: -11.142133712768555
    9. '<|end|>' → logprob: -11.517133712768555
    10. ' :' → logprob: -12.017133712768555

Token 165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10194515436887741
    2. 'return' → logprob: -2.351945161819458
    3. ' return' → logprob: -6.476944923400879
    4. '           ' → logprob: -8.601944923400879
    5. '```' → logprob: -12.601944923400879
    6. ':return' → logprob: -12.726944923400879
    7. '       ' → logprob: -13.476944923400879
    8. '	return' → logprob: -13.601944923400879
    9. '{return' → logprob: -13.726944923400879
    10. '   ' → logprob: -14.101944923400879

Token 166: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36933061480522156
    2. 'return' → logprob: -1.369330644607544
    3. ' return' → logprob: -2.994330644607544
    4. '           ' → logprob: -5.494330406188965
    5. '"' → logprob: -8.619330406188965
    6. '	return' → logprob: -10.244330406188965
    7. '   ' → logprob: -10.244330406188965
    8. '       ' → logprob: -10.619330406188965
    9. '                   ' → logprob: -11.244330406188965
    10. 'R' → logprob: -11.744330406188965

Token 167: ' marked' (ID: 20779)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08807544410228729
    2. ' return' → logprob: -2.7130753993988037
    3. '           ' → logprob: -4.088075637817383
    4. '               ' → logprob: -7.213075637817383
    5. '       ' → logprob: -8.588075637817383
    6. 'R' → logprob: -8.963075637817383
    7. '"' → logprob: -9.713075637817383
    8. '   ' → logprob: -9.838075637817383
    9. ' ' → logprob: -11.088075637817383
    10. ' R' → logprob: -11.838075637817383

Token 168: ' part' (ID: 997)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4424874484539032
    2. '"' → logprob: -1.0674874782562256
    3. ' return' → logprob: -4.4424872398376465
    4. 'R' → logprob: -7.4424872398376465
    5. '   ' → logprob: -7.8174872398376465
    6. 'part' → logprob: -8.442487716674805
    7. ' ' → logprob: -8.942487716674805
    8. '"L' → logprob: -9.067487716674805
    9. ' "' → logprob: -9.192487716674805
    10. '#' → logprob: -9.442487716674805

Token 169: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02518891543149948
    2. 'return' → logprob: -4.27518892288208
    3. '           ' → logprob: -5.02518892288208
    4. ' return' → logprob: -5.77518892288208
    5. '       ' → logprob: -8.275188446044922
    6. '(' → logprob: -9.025188446044922
    7. ':' → logprob: -9.025188446044922
    8. '<|end|>' → logprob: -9.150188446044922
    9. ':return' → logprob: -9.275188446044922
    10. ' ' → logprob: -9.650188446044922

Token 170: ' left' (ID: 3561)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14612197875976562
    2. 'half' → logprob: -3.0211219787597656
    3. 'n' → logprob: -3.5211219787597656
    4. 'find' → logprob: -3.6461219787597656
    5. '"L' → logprob: -4.771121978759766
    6. 'j' → logprob: -5.021121978759766
    7. ' find' → logprob: -5.896121978759766
    8. 'bottom' → logprob: -6.021121978759766
    9. 'R' → logprob: -6.271121978759766
    10. 'i' → logprob: -6.396121978759766

Token 171: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.048610758036375046
    2. ' half' → logprob: -3.0486106872558594
    3. '_half' → logprob: -11.04861068725586
    4. '-half' → logprob: -12.79861068725586
    5. '
' → logprob: -13.42361068725586
    6. '```' → logprob: -14.17361068725586
    7. '   ' → logprob: -14.54861068725586
    8. ' ' → logprob: -14.79861068725586
    9. ' part' → logprob: -15.17361068725586
    10. ')' → logprob: -15.42361068725586

Token 172: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038524508476257324
    2. 'return' → logprob: -3.663524627685547
    3. '           ' → logprob: -4.913524627685547
    4. ' return' → logprob: -5.538524627685547
    5. '                   ' → logprob: -7.788524627685547
    6. ':return' → logprob: -8.163524627685547
    7. '<|end|>' → logprob: -9.788524627685547
    8. '   ' → logprob: -10.413524627685547
    9. '```' → logprob: -11.038524627685547
    10. ':
' → logprob: -11.163524627685547

Token 173: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19271770119667053
    2. 'return' → logprob: -1.8177176713943481
    3. ' return' → logprob: -4.442717552185059
    4. '           ' → logprob: -6.942717552185059
    5. '                   ' → logprob: -9.067717552185059
    6. 'R' → logprob: -10.692717552185059
    7. ':return' → logprob: -12.817717552185059
    8. ' R' → logprob: -12.942717552185059
    9. '```' → logprob: -12.942717552185059
    10. '       ' → logprob: -12.942717552185059

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16276365518569946
    2. '               ' → logprob: -2.4127635955810547
    3. ' return' → logprob: -3.2877635955810547
    4. '           ' → logprob: -3.7877635955810547
    5. '"' → logprob: -7.662763595581055
    6. '   ' → logprob: -9.787763595581055
    7. '       ' → logprob: -10.037763595581055
    8. '	return' → logprob: -10.162763595581055
    9. '```' → logprob: -11.037763595581055
    10. 'R' → logprob: -11.162763595581055

Token 175: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014170682057738304
    2. ' "' → logprob: -4.2641706466674805
    3. 'R' → logprob: -13.26417064666748
    4. ' R' → logprob: -13.88917064666748
    5. '"L' → logprob: -14.01417064666748
    6. '"I' → logprob: -14.38917064666748
    7. '
' → logprob: -14.38917064666748
    8. ''' → logprob: -14.76417064666748
    9. ' ' → logprob: -15.01417064666748
    10. '

' → logprob: -15.38917064666748

Token 176: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.179852694272995
    2. '"' → logprob: -1.8048527240753174
    3. ''' → logprob: -9.429852485656738
    4. ' R' → logprob: -11.304852485656738
    5. '""' → logprob: -13.304852485656738
    6. '

' → logprob: -13.429852485656738
    7. '`' → logprob: -13.554852485656738
    8. '
' → logprob: -13.554852485656738
    9. 'find' → logprob: -13.554852485656738
    10. 'L' → logprob: -13.679852485656738

Token 177: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.5776860184123507e-06
    2. '"+' → logprob: -13.87500286102295
    3. ' +' → logprob: -14.00000286102295
    4. ''' → logprob: -14.75000286102295
    5. '+' → logprob: -15.50000286102295
    6. ' "' → logprob: -17.625001907348633
    7. '(find' → logprob: -17.625001907348633
    8. 'find' → logprob: -17.750001907348633
    9. ' find' → logprob: -17.875001907348633
    10. ')' → logprob: -18.000001907348633

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931478977203369
    2. ' +' → logprob: -0.6931478977203369
    3. '+"' → logprob: -15.568147659301758
    4. '"' → logprob: -15.818147659301758
    5. '           ' → logprob: -16.068147659301758
    6. '＋' → logprob: -17.318147659301758
    7. '   ' → logprob: -17.693147659301758
    8. 'find' → logprob: -17.693147659301758
    9. ' ' → logprob: -18.193147659301758
    10. '```' → logprob: -18.193147659301758

Token 179: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3868718445301056
    2. 'find' → logprob: -1.1368718147277832
    3. '(find' → logprob: -14.886872291564941
    4. 'solve' → logprob: -15.636872291564941
    5. '	find' → logprob: -15.886872291564941
    6. ' solve' → logprob: -15.886872291564941
    7. ')find' → logprob: -17.761871337890625
    8. ' ' → logprob: -18.386871337890625
    9. '_find' → logprob: -18.636871337890625
    10. '.find' → logprob: -18.886871337890625

Token 180: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0018063222523778677
    2. 'sequence' → logprob: -6.501806259155273
    3. 'find' → logprob: -8.126806259155273
    4. 'Sequence' → logprob: -12.126806259155273
    5. '(find' → logprob: -13.501806259155273
    6. 'solve' → logprob: -14.376806259155273
    7. ' sequence' → logprob: -15.001806259155273
    8. '(' → logprob: -15.001806259155273
    9. ' find' → logprob: -15.876806259155273
    10. '(sequence' → logprob: -16.376806259155273

Token 181: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.125018119812012
    3. ' (' → logprob: -12.625018119812012
    4. 'n' → logprob: -16.125019073486328
    5. '```' → logprob: -16.125019073486328
    6. '\(' → logprob: -16.375019073486328
    7. 'def' → logprob: -18.250019073486328
    8. '`' → logprob: -18.250019073486328
    9. '   ' → logprob: -18.750019073486328
    10. '(
' → logprob: -19.125019073486328

Token 182: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014482170343399
    2. ' -' → logprob: -1.7014482021331787
    3. ' ' → logprob: -11.826448440551758
    4. '           ' → logprob: -11.951448440551758
    5. '[' → logprob: -12.451448440551758
    6. '```' → logprob: -12.451448440551758
    7. 'def' → logprob: -12.576448440551758
    8. '   ' → logprob: -12.826448440551758
    9. '       ' → logprob: -13.576448440551758
    10. '(' → logprob: -13.826448440551758

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003478593716863543
    2. ' ' → logprob: -8.000348091125488
    3. '   ' → logprob: -12.125348091125488
    4. '           ' → logprob: -13.125348091125488
    5. '       ' → logprob: -14.062848091125488
    6. '```' → logprob: -14.312848091125488
    7. '-' → logprob: -14.625348091125488
    8. '0' → logprob: -14.750348091125488
    9. '(' → logprob: -14.750348091125488
    10. '2' → logprob: -14.937848091125488

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.500097274780273
    3. '2' → logprob: -11.750097274780273
    4. '   ' → logprob: -12.250097274780273
    5. '-' → logprob: -12.750097274780273
    6. 'i' → logprob: -13.000097274780273
    7. '       ' → logprob: -13.937597274780273
    8. '           ' → logprob: -14.187597274780273
    9. '0' → logprob: -14.750097274780273
    10. '```' → logprob: -14.937597274780273

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04518226906657219
    2. '(i' → logprob: -3.170182228088379
    3. '(' → logprob: -6.795182228088379
    4. ',i' → logprob: -7.045182228088379
    5. ' ,' → logprob: -8.920182228088379
    6. '   ' → logprob: -10.420182228088379
    7. ' (' → logprob: -11.670182228088379
    8. ' i' → logprob: -12.295182228088379
    9. ')' → logprob: -12.670182228088379
    10. ',
' → logprob: -12.795182228088379

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002647927321959287
    2. ' i' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.000265121459961
    4. ',' → logprob: -15.125265121459961
    5. '(i' → logprob: -15.500265121459961
    6. ' ' → logprob: -15.750265121459961
    7. '	i' → logprob: -16.00026512145996
    8. ')i' → logprob: -16.37526512145996
    9. ',i' → logprob: -16.62526512145996
    10. '       ' → logprob: -16.87526512145996

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002539632609114051
    2. ',j' → logprob: -6.25253963470459
    3. ' ,' → logprob: -7.62753963470459
    4. '           ' → logprob: -9.87753963470459
    5. '",' → logprob: -10.75253963470459
    6. ' j' → logprob: -11.50253963470459
    7. '               ' → logprob: -11.62753963470459
    8. '       ' → logprob: -12.00253963470459
    9. '   ' → logprob: -12.37753963470459
    10. 'j' → logprob: -12.50253963470459

Token 188: ' half' (ID: 6375)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007112398743629456
    2. ' j' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.125711441040039
    4. '	j' → logprob: -15.500711441040039
    5. '           ' → logprob: -15.625711441040039
    6. '    ' → logprob: -17.00071144104004
    7. '[j' → logprob: -17.50071144104004
    8. ',j' → logprob: -17.62571144104004
    9. '       ' → logprob: -17.75071144104004
    10. ' ' → logprob: -17.75071144104004

Token 189: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45015639066696167
    2. ' -' → logprob: -1.3251564502716064
    3. '-' → logprob: -2.4501564502716064
    4. ',' → logprob: -5.575156211853027
    5. '<|end|>' → logprob: -5.825156211853027
    6. ' +' → logprob: -6.950156211853027
    7. '+' → logprob: -7.075156211853027
    8. ' ' → logprob: -7.825156211853027
    9. '       ' → logprob: -7.950156211853027
    10. ')
' → logprob: -8.200156211853027

Token 190: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00042090186616405845
    2. ' j' → logprob: -8.375420570373535
    3. '1' → logprob: -9.000420570373535
    4. '(j' → logprob: -9.750420570373535
    5. '(' → logprob: -12.625420570373535
    6. ' (' → logprob: -12.875420570373535
    7. '+' → logprob: -13.625420570373535
    8. '   ' → logprob: -14.750420570373535
    9. ' +' → logprob: -15.750420570373535
    10. '	j' → logprob: -15.750420570373535

Token 191: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7200459241867065
    2. ')' → logprob: -1.3450459241867065
    3. ' -' → logprob: -1.7200459241867065
    4. '+' → logprob: -2.970046043395996
    5. ' +' → logprob: -3.845046043395996
    6. ' ' → logprob: -7.595046043395996
    7. '       ' → logprob: -8.720046043395996
    8. '   ' → logprob: -9.845046043395996
    9. ' )' → logprob: -9.845046043395996
    10. '<|end|>' → logprob: -9.845046043395996

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '2' → logprob: -19.750001907348633
    5. '
' → logprob: -20.750001907348633
    6. '```' → logprob: -21.000001907348633
    7. '0' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.500001907348633
    9. '[' → logprob: -21.625001907348633
    10. ')' → logprob: -21.750001907348633

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '2' → logprob: -18.500001907348633
    5. '```' → logprob: -19.375001907348633
    6. '
' → logprob: -19.687501907348633
    7. '１' → logprob: -20.187501907348633
    8. '           ' → logprob: -20.625001907348633
    9. '  ' → logprob: -20.625001907348633
    10. '0' → logprob: -20.625001907348633

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03374989703297615
    2. ')
' → logprob: -3.40874981880188
    3. '       ' → logprob: -9.6587495803833
    4. '   ' → logprob: -11.5337495803833
    5. ')

' → logprob: -11.5337495803833
    6. '")' → logprob: -12.0337495803833
    7. '           ' → logprob: -12.2837495803833
    8. ')
' → logprob: -12.4087495803833
    9. ')\' → logprob: -12.9087495803833
    10. ' )' → logprob: -14.0337495803833

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5657483339309692
    2. '           ' → logprob: -0.9407483339309692
    3. 'else' → logprob: -3.1907482147216797
    4. ' else' → logprob: -7.94074821472168
    5. '   ' → logprob: -9.44074821472168
    6. '	       ' → logprob: -10.06574821472168
    7. '               ' → logprob: -10.19074821472168
    8. '<|end|>' → logprob: -10.81574821472168
    9. ')' → logprob: -11.44074821472168
    10. '          ' → logprob: -11.81574821472168

Token 196: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.007898090407252312
    2. ' else' → logprob: -5.632897853851318
    3. '       ' → logprob: -5.882897853851318
    4. '           ' → logprob: -6.507897853851318
    5. '   ' → logprob: -12.257898330688477
    6. '               ' → logprob: -12.632898330688477
    7. '```' → logprob: -13.882898330688477
    8. '	else' → logprob: -14.132898330688477
    9. 'return' → logprob: -15.007898330688477
    10. 'elif' → logprob: -15.632898330688477

Token 197: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4791490435600281
    2. ':' → logprob: -1.1041491031646729
    3. ':
' → logprob: -3.104149103164673
    4. '           ' → logprob: -5.729148864746094
    5. ':return' → logprob: -7.729148864746094
    6. '```' → logprob: -9.229148864746094
    7. '	           ' → logprob: -10.104148864746094
    8. '	       ' → logprob: -10.104148864746094
    9. '{' → logprob: -10.229148864746094
    10. '		       ' → logprob: -10.354148864746094

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031433310359716415
    2. 'return' → logprob: -3.906433343887329
    3. ' return' → logprob: -4.90643310546875
    4. '           ' → logprob: -5.78143310546875
    5. '"' → logprob: -8.15643310546875
    6. '       ' → logprob: -11.53143310546875
    7. '              ' → logprob: -11.90643310546875
    8. '```' → logprob: -11.90643310546875
    9. '   ' → logprob: -12.03143310546875
    10. '                   ' → logprob: -12.15643310546875

Token 199: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8088711500167847
    2. ' return' → logprob: -1.1838711500167847
    3. '           ' → logprob: -1.6838711500167847
    4. '"' → logprob: -2.933871269226074
    5. '               ' → logprob: -4.808871269226074
    6. '       ' → logprob: -6.933871269226074
    7. '   ' → logprob: -7.933871269226074
    8. ' ' → logprob: -8.933871269226074
    9. '	return' → logprob: -10.808871269226074
    10. 'R' → logprob: -11.683871269226074

Token 200: ' marked' (ID: 20779)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4175499677658081
    2. ' return' → logprob: -1.167549967765808
    3. '"' → logprob: -3.5425500869750977
    4. 'R' → logprob: -7.042550086975098
    5. ' R' → logprob: -8.667550086975098
    6. '           ' → logprob: -8.792550086975098
    7. '       ' → logprob: -11.042550086975098
    8. ''' → logprob: -11.542550086975098
    9. ' j' → logprob: -11.542550086975098
    10. ' "' → logprob: -11.917550086975098

Token 201: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.1607503592967987
    2. 'part' → logprob: -1.910750389099121
    3. '"' → logprob: -9.285750389099121
    4. 'return' → logprob: -9.785750389099121
    5. '_part' → logprob: -9.910750389099121
    6. ' j' → logprob: -10.035750389099121
    7. '   ' → logprob: -10.160750389099121
    8. 'n' → logprob: -10.160750389099121
    9. '(part' → logprob: -10.535750389099121
    10. '```' → logprob: -10.660750389099121

Token 202: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.26308882236480713
    2. ' in' → logprob: -1.6380888223648071
    3. '=' → logprob: -4.013088703155518
    4. 'n' → logprob: -4.638088703155518
    5. '           ' → logprob: -5.513088703155518
    6. '"' → logprob: -6.638088703155518
    7. ' =' → logprob: -6.888088703155518
    8. 'return' → logprob: -7.013088703155518
    9. '               ' → logprob: -8.138089179992676
    10. 'import' → logprob: -8.263089179992676

Token 203: ' right' (ID: 1849)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.0430597066879272
    2. 'find' → logprob: -1.6680597066879272
    3. ' find' → logprob: -2.293059825897217
    4. '"' → logprob: -2.418059825897217
    5. 'j' → logprob: -2.668059825897217
    6. 'n' → logprob: -2.918059825897217
    7. ' j' → logprob: -3.293059825897217
    8. 'half' → logprob: -3.418059825897217
    9. '(n' → logprob: -3.668059825897217
    10. ' R' → logprob: -4.543059825897217

Token 204: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.08029409497976303
    2. ' half' → logprob: -2.580294132232666
    3. '_half' → logprob: -6.580294132232666
    4. '   ' → logprob: -11.830293655395508
    5. '_' → logprob: -13.080293655395508
    6. '```' → logprob: -13.205293655395508
    7. ' j' → logprob: -13.705293655395508
    8. 'j' → logprob: -14.580293655395508
    9. 'hal' → logprob: -14.705293655395508
    10. ' ' → logprob: -14.955293655395508

Token 205: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7125239968299866
    2. 'return' → logprob: -1.2125239372253418
    3. '               ' → logprob: -1.5875239372253418
    4. ' return' → logprob: -4.962523937225342
    5. '       ' → logprob: -7.712523937225342
    6. '```' → logprob: -9.0875244140625
    7. '=' → logprob: -9.5875244140625
    8. ':return' → logprob: -10.4625244140625
    9. '   ' → logprob: -11.4625244140625
    10. ')' → logprob: -11.8375244140625

Token 206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.284565269947052
    2. 'return' → logprob: -1.7845652103424072
    3. '           ' → logprob: -2.6595652103424072
    4. ' return' → logprob: -4.659565448760986
    5. '       ' → logprob: -8.659564971923828
    6. '```' → logprob: -9.159564971923828
    7. '   ' → logprob: -11.534564971923828
    8. 'R' → logprob: -11.659564971923828
    9. '"' → logprob: -12.159564971923828
    10. '                   ' → logprob: -12.284564971923828

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02278810739517212
    2. ' return' → logprob: -3.8977880477905273
    3. '           ' → logprob: -6.272788047790527
    4. '               ' → logprob: -8.022788047790527
    5. '       ' → logprob: -11.647788047790527
    6. '"' → logprob: -11.772788047790527
    7. '   ' → logprob: -11.897788047790527
    8. '	return' → logprob: -13.022788047790527
    9. 'R' → logprob: -13.897788047790527
    10. ' ' → logprob: -13.897788047790527

Token 208: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.8206473871250637e-05
    2. ' "' → logprob: -10.625028610229492
    3. ''' → logprob: -14.125028610229492
    4. '"L' → logprob: -14.125028610229492
    5. 'R' → logprob: -14.375028610229492
    6. '("' → logprob: -14.500028610229492
    7. '   ' → logprob: -15.500028610229492
    8. '")' → logprob: -15.875028610229492
    9. ' ' → logprob: -16.000028610229492
    10. '"I' → logprob: -16.125028610229492

Token 209: 'R' (ID: 49)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133043944835663
    2. 'R' → logprob: -1.3133044242858887
    3. ''' → logprob: -10.68830394744873
    4. 'find' → logprob: -12.43830394744873
    5. 'return' → logprob: -12.68830394744873
    6. '"L' → logprob: -12.93830394744873
    7. '`' → logprob: -13.43830394744873
    8. '```' → logprob: -13.81330394744873
    9. '""' → logprob: -14.06330394744873
    10. ' R' → logprob: -14.06330394744873

Token 210: '"' (ID: 1)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07079219818115234
    2. '+' → logprob: -2.6957921981811523
    3. '"' → logprob: -7.070792198181152
    4. '```' → logprob: -13.445792198181152
    5. '   ' → logprob: -13.820792198181152
    6. '`' → logprob: -14.320792198181152
    7. '"+' → logprob: -14.445792198181152
    8. 'def' → logprob: -14.820792198181152
    9. '[' → logprob: -14.945792198181152
    10. '+"' → logprob: -15.570792198181152

Token 211: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018150178715586662
    2. ' +' → logprob: -4.018150329589844
    3. '>' → logprob: -17.018150329589844
    4. '[' → logprob: -17.018150329589844
    5. '＋' → logprob: -17.393150329589844
    6. '"' → logprob: -17.643150329589844
    7. '```' → logprob: -17.643150329589844
    8. '       ' → logprob: -17.768150329589844
    9. '           ' → logprob: -17.893150329589844
    10. '+"' → logprob: -18.018150329589844

Token 212: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5759456157684326
    2. ' find' → logprob: -0.8259456157684326
    3. 'solve' → logprob: -12.325945854187012
    4. ' solve' → logprob: -14.075945854187012
    5. '(find' → logprob: -14.200945854187012
    6. '	find' → logprob: -15.325945854187012
    7. ' ' → logprob: -17.575944900512695
    8. '=find' → logprob: -18.450944900512695
    9. '```' → logprob: -18.950944900512695
    10. '"' → logprob: -18.950944900512695

Token 213: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.2246291337069124e-05
    2. 'sequence' → logprob: -11.000021934509277
    3. '(n' → logprob: -12.625021934509277
    4. '(' → logprob: -14.125021934509277
    5. 'Sequence' → logprob: -14.250021934509277
    6. 'n' → logprob: -15.000021934509277
    7. '_' → logprob: -15.875021934509277
    8. '_(' → logprob: -16.625022888183594
    9. '(_' → logprob: -17.250022888183594
    10. '```' → logprob: -17.375022888183594

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -13.000004768371582
    3. 'n' → logprob: -13.125004768371582
    4. '```' → logprob: -15.625004768371582
    5. ' (' → logprob: -16.125003814697266
    6. '(
' → logprob: -16.125003814697266
    7. '\(' → logprob: -18.625003814697266
    8. ',n' → logprob: -18.750003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '<n' → logprob: -19.000003814697266

Token 215: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5988947153091431
    2. '(n' → logprob: -0.9738947153091431
    3. ' -' → logprob: -2.7238945960998535
    4. ' (' → logprob: -5.3488945960998535
    5. 'n' → logprob: -6.2238945960998535
    6. '(' → logprob: -7.7238945960998535
    7. '           ' → logprob: -9.973895072937012
    8. '       ' → logprob: -9.973895072937012
    9. ' n' → logprob: -10.348895072937012
    10. '```' → logprob: -11.223895072937012

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '       ' → logprob: -12.625009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '   ' → logprob: -13.125009536743164
    5. '           ' → logprob: -14.125009536743164
    6. '-' → logprob: -14.875009536743164
    7. '```' → logprob: -14.875009536743164
    8. '               ' → logprob: -16.750009536743164
    9. '2' → logprob: -17.250009536743164
    10. '(' → logprob: -17.375009536743164

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023480376228690147
    2. '(n' → logprob: -3.8984804153442383
    3. '(i' → logprob: -6.898480415344238
    4. 'n' → logprob: -7.273480415344238
    5. '(' → logprob: -7.773480415344238
    6. '-' → logprob: -7.898480415344238
    7. 'i' → logprob: -7.898480415344238
    8. ' (' → logprob: -10.898480415344238
    9. ' ' → logprob: -11.773480415344238
    10. '   ' → logprob: -11.898480415344238

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053794775158166885
    2. '(i' → logprob: -3.1787948608398438
    3. '(n' → logprob: -4.928794860839844
    4. '(' → logprob: -5.678794860839844
    5. ',i' → logprob: -10.178794860839844
    6. '   ' → logprob: -11.053794860839844
    7. ',n' → logprob: -11.678794860839844
    8. ' ,' → logprob: -11.928794860839844
    9. ' (' → logprob: -12.428794860839844
    10. '           ' → logprob: -12.803794860839844

Token 219: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005249648820608854
    2. ' i' → logprob: -5.255249500274658
    3. '   ' → logprob: -11.130249977111816
    4. '	i' → logprob: -14.630249977111816
    5. '(i' → logprob: -15.005249977111816
    6. ' ' → logprob: -15.755249977111816
    7. '       ' → logprob: -16.3802490234375
    8. 'n' → logprob: -16.7552490234375
    9. '  ' → logprob: -17.1302490234375
    10. '           ' → logprob: -17.8802490234375

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005660937167704105
    2. ',j' → logprob: -5.3806610107421875
    3. ' ,' → logprob: -8.005661010742188
    4. '           ' → logprob: -8.005661010742188
    5. 'j' → logprob: -9.005661010742188
    6. '       ' → logprob: -9.130661010742188
    7. '   ' → logprob: -9.630661010742188
    8. '               ' → logprob: -10.380661010742188
    9. ' j' → logprob: -10.630661010742188
    10. '         ' → logprob: -12.255661010742188

Token 221: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01108437217772007
    2. ' j' → logprob: -4.51108455657959
    3. '   ' → logprob: -10.76108455657959
    4. 'half' → logprob: -11.63608455657959
    5. ' ' → logprob: -13.13608455657959
    6. '    ' → logprob: -13.38608455657959
    7. '(j' → logprob: -14.01108455657959
    8. '  ' → logprob: -14.13608455657959
    9. '	j' → logprob: -14.76108455657959
    10. ' half' → logprob: -15.26108455657959

Token 222: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023248620331287384
    2. '-' → logprob: -3.7732486724853516
    3. ')' → logprob: -13.023248672485352
    4. ' ' → logprob: -15.023248672485352
    5. '-half' → logprob: -15.523248672485352
    6. '   ' → logprob: -16.27324867248535
    7. ' ' → logprob: -16.52324867248535
    8. '<|end|>' → logprob: -16.89824867248535
    9. '	' → logprob: -17.39824867248535
    10. '       ' → logprob: -17.39824867248535

Token 223: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00012356207298580557
    2. ' half' → logprob: -9.000123977661133
    3. 'hal' → logprob: -16.875123977661133
    4. '   ' → logprob: -18.500123977661133
    5. '_half' → logprob: -18.875123977661133
    6. ' ' → logprob: -19.500123977661133
    7. 'halve' → logprob: -19.500123977661133
    8. 'halb' → logprob: -19.625123977661133
    9. '半' → logprob: -20.375123977661133
    10. '
' → logprob: -20.875123977661133

Token 224: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000508591765537858
    2. ')
' → logprob: -7.625508785247803
    3. '       ' → logprob: -11.375508308410645
    4. ' )' → logprob: -12.500508308410645
    5. '           ' → logprob: -13.750508308410645
    6. '```' → logprob: -13.875508308410645
    7. ')

' → logprob: -14.125508308410645
    8. '   ' → logprob: -14.125508308410645
    9. '[' → logprob: -14.625508308410645
    10. '<|end|>' → logprob: -15.375508308410645

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34264588356018066
    2. 'def' → logprob: -2.5926458835601807
    3. 'for' → logprob: -2.8426458835601807
    4. '```' → logprob: -2.8426458835601807
    5. 'n' → logprob: -3.0926458835601807
    6. 'print' → logprob: -3.7176458835601807
    7. ' for' → logprob: -5.092645645141602
    8. 'return' → logprob: -5.467645645141602
    9. 'result' → logprob: -5.592645645141602
    10. '
' → logprob: -5.592645645141602

Token 226: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1405712217092514
    2. '   ' → logprob: -2.265571117401123
    3. 'def' → logprob: -4.015571117401123
    4. 'N' → logprob: -5.140571117401123
    5. 'import' → logprob: -6.515571117401123
    6. 't' → logprob: -7.140571117401123
    7. 'T' → logprob: -7.765571117401123
    8. '#' → logprob: -8.015571594238281
    9. ' n' → logprob: -8.515571594238281
    10. '```' → logprob: -9.515571594238281

Token 227: ' line' (ID: 2543)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.650724470615387
    2. ' line' → logprob: -1.1507244110107422
    3. '_line' → logprob: -2.400724411010742
    4. ' _' → logprob: -2.775724411010742
    5. 'line' → logprob: -5.150724411010742
    6. '_n' → logprob: -6.525724411010742
    7. ' n' → logprob: -7.025724411010742
    8. 'n' → logprob: -8.275724411010742
    9. '_case' → logprob: -8.525724411010742
    10. '_t' → logprob: -9.400724411010742

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036752521991729736
    2. 'in' → logprob: -5.62867546081543
    3. ' =' → logprob: -10.25367546081543
    4. 's' → logprob: -11.62867546081543
    5. ' ' → logprob: -11.75367546081543
    6. '=' → logprob: -12.00367546081543
    7. '   ' → logprob: -12.50367546081543
    8. '	in' → logprob: -13.12867546081543
    9. '(' → logprob: -13.25367546081543
    10. 'line' → logprob: -13.37867546081543

Token 229: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004082197323441505
    2. ' sys' → logprob: -5.504082202911377
    3. '=sys' → logprob: -13.129081726074219
    4. '(sys' → logprob: -14.254081726074219
    5. 'stdin' → logprob: -14.879081726074219
    6. '	sys' → logprob: -15.004081726074219
    7. 'import' → logprob: -15.129081726074219
    8. '   ' → logprob: -16.87908172607422
    9. 'iter' → logprob: -16.87908172607422
    10. 'input' → logprob: -17.37908172607422

Token 230: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006009306525811553
    2. 'stdin' → logprob: -7.500600814819336
    3. '.readline' → logprob: -10.500600814819336
    4. '(stdin' → logprob: -11.250600814819336
    5. ' stdin' → logprob: -12.625600814819336
    6. 'in' → logprob: -13.625600814819336
    7. '.' → logprob: -13.750600814819336
    8. '.stdout' → logprob: -14.500600814819336
    9. 'input' → logprob: -14.750600814819336
    10. 'import' → logprob: -15.250600814819336

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05782236531376839
    2. '.readline' → logprob: -3.3078224658966064
    3. ':
' → logprob: -4.557822227478027
    4. '():
' → logprob: -5.932822227478027
    5. '():' → logprob: -6.057822227478027
    6. ' in' → logprob: -6.182822227478027
    7. '.readlines' → logprob: -7.182822227478027
    8. '   ' → logprob: -8.307822227478027
    9. '<|end|>' → logprob: -8.557822227478027
    10. '.strip' → logprob: -8.682822227478027

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020068325102329254
    2. ' n' → logprob: -5.020068168640137
    3. 'n' → logprob: -5.145068168640137
    4. '(n' → logprob: -5.770068168640137
    5. ' line' → logprob: -7.020068168640137
    6. ':' → logprob: -7.145068168640137
    7. ',' → logprob: -7.270068168640137
    8. '   ' → logprob: -7.520068168640137
    9. ':
' → logprob: -8.520068168640137
    10. '        
' → logprob: -8.645068168640137

Token 233: ' if' (ID: 538)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.529306173324585
    2. 'n' → logprob: -1.029306173324585
    3. ' line' → logprob: -3.654306173324585
    4. 'line' → logprob: -4.779306411743164
    5. ' if' → logprob: -5.154306411743164
    6. '       ' → logprob: -5.154306411743164
    7. 'if' (adapté à ' if') → logprob: -5.904306411743164
    8. 'x' → logprob: -6.779306411743164
    9. 'k' → logprob: -7.404306411743164
    10. 'N' → logprob: -7.779306411743164

Token 234: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6010173559188843
    2. ' not' → logprob: -1.1010173559188843
    3. 'line' → logprob: -2.601017475128174
    4. ' line' → logprob: -3.101017475128174
    5. '#line' → logprob: -12.351016998291016
    6. '=line' → logprob: -12.976016998291016
    7. '   ' → logprob: -13.101016998291016
    8. ' ' → logprob: -13.476016998291016
    9. '(line' → logprob: -14.101016998291016
    10. '[line' → logprob: -14.851016998291016

Token 235: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06196858361363411
    2. 'line' → logprob: -2.8119685649871826
    3. '(line' → logprob: -14.436968803405762
    4. '	line' → logprob: -14.811968803405762
    5. '=line' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.436967849731445
    7. '[line' → logprob: -17.686967849731445
    8. '#line' → logprob: -17.811967849731445
    9. '   ' → logprob: -19.686967849731445
    10. '_line' → logprob: -20.686967849731445

Token 236: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0021170699037611485
    2. '.' → logprob: -6.752117156982422
    3. '.startswith' → logprob: -7.502117156982422
    4. '.rstrip' → logprob: -8.002117156982422
    5. 'strip' → logprob: -10.752117156982422
    6. ':
' → logprob: -11.127117156982422
    7. ':' → logprob: -11.502117156982422
    8. '_strip' → logprob: -12.502117156982422
    9. ' .' → logprob: -13.377117156982422
    10. '.chomp' → logprob: -13.752117156982422

Token 237: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.4741135239601135
    2. '():' → logprob: -0.9741135239601135
    3. ':' → logprob: -11.099113464355469
    4. '()' → logprob: -11.599113464355469
    5. '():
' → logprob: -11.849113464355469
    6. ':
' → logprob: -12.349113464355469
    7. '():

' → logprob: -14.724113464355469
    8. '()==' → logprob: -16.47411346435547
    9. ' ():' → logprob: -16.84911346435547
    10. '()):
' → logprob: -17.59911346435547

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.682846287731081e-05
    2. '       ' → logprob: -10.000066757202148
    3. '   ' → logprob: -12.000066757202148
    4. ' break' → logprob: -12.000066757202148
    5. ',' → logprob: -13.000066757202148
    6. '<|end|>' → logprob: -13.125066757202148
    7. 'break' → logprob: -13.625066757202148
    8. '	       ' → logprob: -13.750066757202148
    9. '<|end|>' → logprob: -14.500066757202148
    10. '```' → logprob: -15.000066757202148

Token 239: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1368647664785385
    2. ' break' → logprob: -2.13686466217041
    3. '       ' → logprob: -4.63686466217041
    4. '           ' → logprob: -9.51186466217041
    5. 'return' → logprob: -9.63686466217041
    6. '	break' → logprob: -10.26186466217041
    7. '   ' → logprob: -11.13686466217041
    8. '_break' → logprob: -12.26186466217041
    9. ' return' → logprob: -13.13686466217041
    10. '```' → logprob: -13.26186466217041

Token 240: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002369585447013378
    2. '<|end|>' → logprob: -7.377369403839111
    3. '```' → logprob: -7.377369403839111
    4. 'n' → logprob: -8.12736988067627
    5. '        
' → logprob: -9.00236988067627
    6. 'tokens' → logprob: -9.00236988067627
    7. ',' → logprob: -9.00236988067627
    8. '   ' → logprob: -9.12736988067627
    9. ' n' → logprob: -9.37736988067627
    10. 'token' → logprob: -9.37736988067627

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007378002628684044
    2. 'n' → logprob: -8.500738143920898
    3. '   ' → logprob: -8.500738143920898
    4. ' n' → logprob: -9.000738143920898
    5. '```' → logprob: -10.000738143920898
    6. 'tokens' → logprob: -10.125738143920898
    7. 'token' → logprob: -10.500738143920898
    8. '        
' → logprob: -10.750738143920898
    9. '<|end|>' → logprob: -10.875738143920898
    10. ',' → logprob: -11.000738143920898

Token 242: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.008412092924118042
    2. 'N' → logprob: -5.008411884307861
    3. ' n' → logprob: -6.508411884307861
    4. 'parts' → logprob: -9.38341236114502
    5. '```' → logprob: -10.25841236114502
    6. '       ' → logprob: -10.25841236114502
    7. '   ' → logprob: -10.75841236114502
    8. ' parts' → logprob: -11.00841236114502
    9. ' N' → logprob: -13.00841236114502
    10. '	n' → logprob: -13.50841236114502

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014859484508633614
    2. '=' → logprob: -9.50014877319336
    3. ' ,' → logprob: -10.25014877319336
    4. ' =' → logprob: -10.62514877319336
    5. ',n' → logprob: -11.87514877319336
    6. ',num' → logprob: -13.37514877319336
    7. ',int' → logprob: -13.75014877319336
    8. '_,' → logprob: -14.62514877319336
    9. ')' → logprob: -14.75014877319336
    10. ',j' → logprob: -14.87514877319336

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3155103325843811
    2. ' i' → logprob: -1.3155102729797363
    3. 'k' → logprob: -7.815510272979736
    4. ' =' → logprob: -8.190510749816895
    5. 's' → logprob: -8.190510749816895
    6. ' s' → logprob: -8.440510749816895
    7. ' k' → logprob: -8.440510749816895
    8. 'x' → logprob: -9.065510749816895
    9. '=' → logprob: -9.190510749816895
    10. 'a' → logprob: -9.565510749816895

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02689487487077713
    2. '=' → logprob: -3.6518948078155518
    3. ' =' → logprob: -7.776895046234131
    4. ' ,' → logprob: -8.901894569396973
    5. '<|end|>' → logprob: -11.026894569396973
    6. ')' → logprob: -12.526894569396973
    7. '=
' → logprob: -13.151894569396973
    8. ')=' → logprob: -13.276894569396973
    9. '<|end|>' → logprob: -13.401894569396973
    10. ' ' → logprob: -13.526894569396973

Token 246: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000805341056548059
    2. ' j' → logprob: -7.125805377960205
    3. 'k' → logprob: -15.000804901123047
    4. '=j' → logprob: -15.875804901123047
    5. '*j' → logprob: -16.250804901123047
    6. '	j' → logprob: -16.375804901123047
    7. 's' → logprob: -16.500804901123047
    8. '   ' → logprob: -16.500804901123047
    9. 'x' → logprob: -17.500804901123047
    10. '_j' → logprob: -17.750804901123047

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519300878047943
    2. ' =' → logprob: -1.5019301176071167
    3. ',' → logprob: -14.751930236816406
    4. '=
' → logprob: -16.001930236816406
    5. '=line' → logprob: -16.001930236816406
    6. ')' → logprob: -16.376930236816406
    7. '＝' → logprob: -16.501930236816406
    8. ')=' → logprob: -17.001930236816406
    9. '=

' → logprob: -17.001930236816406
    10. '=int' → logprob: -17.251930236816406

Token 248: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692999839782715
    2. ' map' → logprob: -2.126929998397827
    3. '   ' → logprob: -14.001930236816406
    4. '(map' → logprob: -14.251930236816406
    5. 'line' → logprob: -15.001930236816406
    6. '	map' → logprob: -16.001930236816406
    7. '  ' → logprob: -17.501930236816406
    8. ' ' → logprob: -18.126930236816406
    9. ' line' → logprob: -18.251930236816406
    10. '[' → logprob: -18.501930236816406

Token 249: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001462107611587271
    2. 'int' → logprob: -9.00014591217041
    3. '(' → logprob: -11.25014591217041
    4. '(str' → logprob: -11.62514591217041
    5. 'str' → logprob: -15.50014591217041
    6. '[int' → logprob: -15.62514591217041
    7. '<int' → logprob: -15.75014591217041
    8. '```' → logprob: -16.500146865844727
    9. '=int' → logprob: -16.750146865844727
    10. ' int' → logprob: -16.750146865844727

Token 250: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01251424103975296
    2. ',line' → logprob: -4.512514114379883
    3. 'line' → logprob: -7.762514114379883
    4. ',' → logprob: -7.887514114379883
    5. '=line' → logprob: -8.512514114379883
    6. ')' → logprob: -8.512514114379883
    7. '[line' → logprob: -9.137514114379883
    8. ' line' → logprob: -9.512514114379883
    9. '#line' → logprob: -9.762514114379883
    10. '	line' → logprob: -11.387514114379883

Token 251: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0040793512016534805
    2. ' line' → logprob: -5.504079341888428
    3. '(line' → logprob: -14.379079818725586
    4. '=line' → logprob: -16.254079818725586
    5. '#line' → logprob: -16.629079818725586
    6. '	line' → logprob: -16.879079818725586
    7. '[line' → logprob: -16.879079818725586
    8. '   ' → logprob: -17.379079818725586
    9. ')' → logprob: -17.879079818725586
    10. '_line' → logprob: -19.004079818725586

Token 252: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4769779145717621
    2. '().' → logprob: -0.9769779443740845
    3. '.split' → logprob: -5.851977825164795
    4. '.' → logprob: -11.476978302001953
    5. '.rstrip' → logprob: -12.601978302001953
    6. '.readline' → logprob: -12.726978302001953
    7. 'strip' → logprob: -12.726978302001953
    8. ' .' → logprob: -13.101978302001953
    9. '()' → logprob: -14.851978302001953
    10. '   ' → logprob: -16.101978302001953

Token 253: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '.split' → logprob: -13.12500286102295
    3. '()' → logprob: -14.25000286102295
    4. 'split' → logprob: -16.750001907348633
    5. '(' → logprob: -18.625001907348633
    6. ' ().' → logprob: -19.750001907348633
    7. '   ' → logprob: -19.875001907348633
    8. ')' → logprob: -20.250001907348633
    9. '()
' → logprob: -20.250001907348633
    10. '('').' → logprob: -20.375001907348633

Token 254: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -16.125
    3. ' split' → logprob: -17.75
    4. '.split' → logprob: -18.25
    5. ')' → logprob: -20.0
    6. 'rstrip' → logprob: -20.375
    7. 'spl' → logprob: -20.625
    8. 'plit' → logprob: -20.625
    9. '```' → logprob: -21.875
    10. '().' → logprob: -22.0

Token 255: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20124705135822296
    2. ')' → logprob: -2.076246976852417
    3. '(' → logprob: -3.576246976852417
    4. '()' → logprob: -4.201247215270996
    5. '('' → logprob: -4.326247215270996
    6. '(','' → logprob: -7.951247215270996
    7. '("' → logprob: -8.701247215270996
    8. '(',' → logprob: -9.951247215270996
    9. '())
' → logprob: -10.451247215270996
    10. '')' → logprob: -11.076247215270996

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021642940118908882
    2. '<|end|>' → logprob: -3.8966429233551025
    3. '<|end|>' → logprob: -7.896643161773682
    4. 'print' → logprob: -8.646642684936523
    5. '        
' → logprob: -9.021642684936523
    6. '[' → logprob: -9.146642684936523
    7. ',' → logprob: -9.771642684936523
    8. '```' → logprob: -9.771642684936523
    9. '   ' → logprob: -10.021642684936523
    10. ')' → logprob: -10.646642684936523

Token 257: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0354456752538681
    2. '       ' → logprob: -3.7854456901550293
    3. 'result' → logprob: -4.910445690155029
    4. ' print' → logprob: -5.535445690155029
    5. 'sequence' → logprob: -7.410445690155029
    6. 'res' → logprob: -9.785445213317871
    7. 'seq' → logprob: -9.910445213317871
    8. ' result' → logprob: -10.035445213317871
    9. ' sequence' → logprob: -10.285445213317871
    10. 'answer' → logprob: -11.660445213317871

Token 258: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5310707688331604
    2. 'n' → logprob: -1.4060707092285156
    3. ' i' → logprob: -2.2810707092285156
    4. 'i' → logprob: -2.7810707092285156
    5. ' (' → logprob: -7.156070709228516
    6. ' not' → logprob: -7.656070709228516
    7. ' j' → logprob: -7.781070709228516
    8. '(i' → logprob: -8.031070709228516
    9. '(n' → logprob: -8.156070709228516
    10. 'j' → logprob: -8.531070709228516

Token 259: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20101892948150635
    2. '==' → logprob: -1.8260189294815063
    3. '>' → logprob: -4.576018810272217
    4. ' >' → logprob: -4.576018810272217
    5. ':' → logprob: -8.201019287109375
    6. ' <' → logprob: -9.826019287109375
    7. '=' → logprob: -10.826019287109375
    8. ' !=' → logprob: -10.826019287109375
    9. '   ' → logprob: -10.951019287109375
    10. ' <=' → logprob: -11.076019287109375

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '-' → logprob: -15.375204086303711
    4. '(' → logprob: -18.50020408630371
    5. '  ' → logprob: -18.50020408630371
    6. '   ' → logprob: -18.62520408630371
    7. '۰' → logprob: -18.87520408630371
    8. ' -' → logprob: -19.00020408630371
    9. '```' → logprob: -19.25020408630371
    10. '=' → logprob: -19.31270408630371

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '-' → logprob: -13.750014305114746
    4. '   ' → logprob: -17.62501335144043
    5. ' -' → logprob: -18.00001335144043
    6. '  ' → logprob: -18.62501335144043
    7. '=' → logprob: -18.87501335144043
    8. '۰' → logprob: -19.25001335144043
    9. '
' → logprob: -19.93751335144043
    10. '    ' → logprob: -20.18751335144043

Token 262: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4643625020980835
    2. ':
' → logprob: -1.0893625020980835
    3. '           ' → logprob: -3.589362621307373
    4. '       ' → logprob: -4.964362621307373
    5. ' and' → logprob: -8.589362144470215
    6. ':return' → logprob: -9.214362144470215
    7. '   ' → logprob: -9.714362144470215
    8. ',' → logprob: -9.964362144470215
    9. '):
' → logprob: -11.714362144470215
    10. '():
' → logprob: -11.714362144470215

Token 263: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.313262403011322
    2. ' i' → logprob: -1.3132624626159668
    3. '	i' → logprob: -14.688261985778809
    4. '   ' → logprob: -15.063261985778809
    5. ' ' → logprob: -17.188262939453125
    6. '  ' → logprob: -18.063262939453125
    7. ' ' → logprob: -18.313262939453125
    8. 'I' → logprob: -19.313262939453125
    9. '_i' → logprob: -19.313262939453125
    10. '
' → logprob: -20.438262939453125

Token 264: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47408628463745117
    2. ' ==' → logprob: -0.9740862846374512
    3. ' ' → logprob: -12.84908676147461
    4. '=' → logprob: -12.97408676147461
    5. ',' → logprob: -13.47408676147461
    6. '0' → logprob: -13.47408676147461
    7. '<|end|>' → logprob: -14.97408676147461
    8. '===' → logprob: -15.09908676147461
    9. '==
' → logprob: -15.34908676147461
    10. '==-' → logprob: -15.47408676147461

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -22.2500057220459
    4. '  ' → logprob: -24.6250057220459
    5. '<|end|>' → logprob: -24.6250057220459
    6. '   ' → logprob: -24.8750057220459
    7. '０' → logprob: -25.2500057220459
    8. '```' → logprob: -25.6250057220459
    9. '=' → logprob: -25.7500057220459
    10. '
' → logprob: -25.8750057220459

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'and' → logprob: -19.125009536743164
    4. '۰' → logprob: -19.625009536743164
    5. '<|end|>' → logprob: -20.375009536743164
    6. ' and' → logprob: -20.625009536743164
    7. '  ' → logprob: -21.250009536743164
    8. '   ' → logprob: -22.062509536743164
    9. 'i' → logprob: -22.062509536743164
    10. '０' → logprob: -22.125009536743164

Token 267: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00976624246686697
    2. 'and' → logprob: -4.634766101837158
    3. '0' → logprob: -11.634766578674316
    4. ' ' → logprob: -13.759766578674316
    5. ' и' → logprob: -15.759766578674316
    6. ',' → logprob: -16.009765625
    7. '	and' → logprob: -16.259765625
    8. '&&' → logprob: -17.884765625
    9. '<|end|>' → logprob: -17.884765625
    10. ' &&' → logprob: -17.884765625

Token 268: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002613358374219388
    2. ' j' → logprob: -8.250261306762695
    3. '	j' → logprob: -18.375261306762695
    4. '0' → logprob: -18.875261306762695
    5. '   ' → logprob: -19.125261306762695
    6. ' ' → logprob: -20.375261306762695
    7. '  ' → logprob: -20.375261306762695
    8. '    ' → logprob: -23.375261306762695
    9. '_j' → logprob: -23.625261306762695
    10. '$j' → logprob: -24.000261306762695

Token 269: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35102587938308716
    2. ' ==' → logprob: -1.2260258197784424
    3. '0' → logprob: -5.9760260581970215
    4. ' ' → logprob: -10.601025581359863
    5. ')==' → logprob: -12.226025581359863
    6. '=' → logprob: -12.976025581359863
    7. ']==' → logprob: -13.101025581359863
    8. '==
' → logprob: -13.851025581359863
    9. '()==' → logprob: -13.976025581359863
    10. '===' → logprob: -14.226025581359863

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۰' → logprob: -17.875019073486328
    4. '   ' → logprob: -18.125019073486328
    5. '  ' → logprob: -19.125019073486328
    6. '<|end|>' → logprob: -19.250019073486328
    7. '০' → logprob: -19.875019073486328
    8. '०' → logprob: -19.875019073486328
    9. '```' → logprob: -20.125019073486328
    10. '<|end|>' → logprob: -20.125019073486328

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. '<|end|>' → logprob: -18.2500057220459
    5. '۰' → logprob: -18.5000057220459
    6. '  ' → logprob: -18.7500057220459
    7. '```' → logprob: -19.8750057220459
    8. '       ' → logprob: -20.1250057220459
    9. '<|end|>' → logprob: -20.3125057220459
    10. '০' → logprob: -21.0625057220459

Token 272: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40673065185546875
    2. ':' → logprob: -1.5317306518554688
    3. ':
' → logprob: -2.1567306518554688
    4. '       ' → logprob: -6.281730651855469
    5. ':return' → logprob: -8.531730651855469
    6. '():
' → logprob: -9.656730651855469
    7. '<|end|>' → logprob: -10.406730651855469
    8. '   ' → logprob: -10.406730651855469
    9. '<|end|>' → logprob: -10.906730651855469
    10. '               ' → logprob: -11.156730651855469

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.465036105713807e-06
    2. '       ' → logprob: -12.000007629394531
    3. '               ' → logprob: -15.125007629394531
    4. '          ' → logprob: -15.375007629394531
    5. ' break' → logprob: -15.500007629394531
    6. 'break' → logprob: -15.875007629394531
    7. '		' → logprob: -16.25000762939453
    8. '	       ' → logprob: -16.75000762939453
    9. '            
' → logprob: -17.25000762939453
    10. '   ' → logprob: -17.37500762939453

Token 274: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5181692838668823
    2. '           ' → logprob: -1.2681692838668823
    3. ' break' → logprob: -2.268169403076172
    4. 'return' → logprob: -4.018169403076172
    5. '       ' → logprob: -7.018169403076172
    6. ' return' → logprob: -7.518169403076172
    7. '               ' → logprob: -9.643169403076172
    8. '	break' → logprob: -10.143169403076172
    9. '   ' → logprob: -11.893169403076172
    10. '
' → logprob: -12.768169403076172

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019184066914021969
    2. 'print' → logprob: -6.626918315887451
    3. '<|end|>' → logprob: -8.12691879272461
    4. '```' → logprob: -8.75191879272461
    5. '        
' → logprob: -9.50191879272461
    6. '   ' → logprob: -10.50191879272461
    7. ' print' → logprob: -10.62691879272461
    8. '<|end|>' → logprob: -13.00191879272461
    9. '
' → logprob: -13.75191879272461
    10. '           ' → logprob: -13.87691879272461

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023599520791321993
    2. 'print' → logprob: -6.127359867095947
    3. ' print' → logprob: -9.377360343933105
    4. '<|end|>' → logprob: -10.377360343933105
    5. '```' → logprob: -10.502360343933105
    6. '   ' → logprob: -10.752360343933105
    7. '        
' → logprob: -12.377360343933105
    8. 'result' → logprob: -13.127360343933105
    9. 'output' → logprob: -14.502360343933105
    10. 'token' → logprob: -14.627360343933105

Token 277: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2097124606370926
    2. 'result' → logprob: -1.9597125053405762
    3. 'sequence' → logprob: -3.334712505340576
    4. '       ' → logprob: -4.584712505340576
    5. 'seq' → logprob: -6.709712505340576
    6. 'res' → logprob: -7.459712505340576
    7. ' sequence' → logprob: -8.459712028503418
    8. ' print' → logprob: -8.584712028503418
    9. ' result' → logprob: -8.959712028503418
    10. 'answer' → logprob: -9.459712028503418

Token 278: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -7.994086627149954e-05
    2. 'find' → logprob: -9.750080108642578
    3. '(' → logprob: -10.750080108642578
    4. ' find' → logprob: -15.750080108642578
    5. ')find' → logprob: -18.125080108642578
    6. '=find' → logprob: -19.500080108642578
    7. '(f' → logprob: -19.500080108642578
    8. '()' → logprob: -19.875080108642578
    9. '(
' → logprob: -19.875080108642578
    10. '("' → logprob: -20.250080108642578

Token 279: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -4.320199877838604e-07
    2. 'sequence' → logprob: -15.125
    3. '_sequences' → logprob: -17.25
    4. '_SEQUENCE' → logprob: -17.5
    5. 'Sequence' → logprob: -18.125
    6. ')_' → logprob: -19.0
    7. ' sequence' → logprob: -19.25
    8. ')' → logprob: -19.25
    9. '```' → logprob: -19.375
    10. '(sequence' → logprob: -19.5

Token 280: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008369080605916679
    2. '(' → logprob: -7.1258368492126465
    3. ')' → logprob: -11.000837326049805
    4. ')n' → logprob: -12.000837326049805
    5. ')(' → logprob: -12.750837326049805
    6. 'n' → logprob: -12.875837326049805
    7. '(
' → logprob: -13.125837326049805
    8. ' (' → logprob: -13.875837326049805
    9. '(len' → logprob: -15.000837326049805
    10. '(N' → logprob: -15.625837326049805

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00605038134381175
    2. ',i' → logprob: -5.6310505867004395
    3. ',n' → logprob: -6.3810505867004395
    4. '(i' → logprob: -8.131050109863281
    5. ' ,' → logprob: -8.631050109863281
    6. ',j' → logprob: -9.131050109863281
    7. '(n' → logprob: -9.381050109863281
    8. '(' → logprob: -9.506050109863281
    9. '       ' → logprob: -12.881050109863281
    10. ')' → logprob: -13.506050109863281

Token 282: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015043864259496331
    2. ' i' → logprob: -6.501504421234131
    3. '   ' → logprob: -13.126503944396973
    4. '	i' → logprob: -17.37650489807129
    5. '    ' → logprob: -18.37650489807129
    6. '       ' → logprob: -19.00150489807129
    7. ' ' → logprob: -20.12650489807129
    8. ')i' → logprob: -20.12650489807129
    9. '_i' → logprob: -20.50150489807129
    10. '  ' → logprob: -20.50150489807129

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1606115996837616
    2. ',j' → logprob: -1.910611629486084
    3. ' ,' → logprob: -7.910611629486084
    4. 'j' → logprob: -11.410611152648926
    5. '       ' → logprob: -13.035611152648926
    6. ' j' → logprob: -13.285611152648926
    7. ',
' → logprob: -13.785611152648926
    8. ')' → logprob: -14.285611152648926
    9. '   ' → logprob: -14.285611152648926
    10. '           ' → logprob: -14.785611152648926

Token 284: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4855663721391466e-05
    2. ' j' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.375015258789062
    4. '	j' → logprob: -17.500015258789062
    5. '$j' → logprob: -17.500015258789062
    6. '       ' → logprob: -18.625015258789062
    7. '    ' → logprob: -19.750015258789062
    8. '[j' → logprob: -19.750015258789062
    9. '           ' → logprob: -20.125015258789062
    10. ')' → logprob: -20.250015258789062

Token 285: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003190309274941683
    2. ')' → logprob: -5.753190517425537
    3. '))
' → logprob: -11.378190040588379
    4. ')))' → logprob: -14.253190040588379
    5. ' ))' → logprob: -15.503190040588379
    6. '   ' → logprob: -16.003190994262695
    7. ')
' → logprob: -16.503190994262695
    8. '),' → logprob: -16.753190994262695
    9. '       ' → logprob: -17.253190994262695
    10. '()))' → logprob: -17.753190994262695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 283
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 235
Précision stricte (1ère position): 34.63%
Précision adaptée (1ère position): 37.81%
Précision (top 10): 83.04%
================================================================================
