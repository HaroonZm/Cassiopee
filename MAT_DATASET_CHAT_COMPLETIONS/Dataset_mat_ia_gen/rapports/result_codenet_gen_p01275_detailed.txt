================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def min_rotations(k, initial, target):
    # Convert initial and target strings into lists of integers for easier manipulation
    init_nums = list(map(int, initial))
    target_nums = list(map(int, target))
    
    # We keep track of the current state of the dials
    current = init_nums[:]
    rotations = 0
    
    # We process dials from left to right
    # At each position, if the current dial does not match the target,
    # we will rotate a contiguous block of dials starting at this position
    # by the minimal needed amount (either left or right rotation)
    i = 0
    while i < k:
        if current[i] != target_nums[i]:
            # Determine difference in numbers mod 10 in both directions
            diff_right = (current[i] - target_nums[i]) % 10  # rotating right by diff_right steps
            diff_left = (target_nums[i] - current[i]) % 10   # rotating left by diff_left steps
            
            # choose minimal rotation count
            if diff_left <= diff_right:
                rotate_steps = diff_left
                direction = 'left'  # rotating left increases the number
            else:
                rotate_steps = diff_right
                direction = 'right'  # rotating right decreases the number
            
            # Find how far this rotation can extend to the right
            # All adjacent dials that require rotation by the same steps in the same direction
            j = i
            while j < k:
                # calculate the difference for dial j
                curr_val = current[j]
                targ_val = target_nums[j]
                
                d_right = (curr_val - targ_val) % 10
                d_left = (targ_val - curr_val) % 10
                
                if direction == 'left' and d_left == rotate_steps:
                    j += 1
                elif direction == 'right' and d_right == rotate_steps:
                    j += 1
                else:
                    break
            
            # Rotate the dials from i to j-1 in the chosen direction by rotate_steps
            for idx in range(i, j):
                if direction == 'left':
                    # rotating left by i digits means pointing to i-th right number
                    # So number increases by rotate_steps modulo 10
                    current[idx] = (current[idx] + rotate_steps) % 10
                else:
                    # rotating right by i digits means pointing to i-th left number
                    # So number decreases by rotate_steps modulo 10
                    current[idx] = (current[idx] - rotate_steps + 10) % 10
            
            rotations += 1
            i = j  # continue from dial j (first dial not rotated this time)
        else:
            i += 1
    
    return rotations

# Main program to read input and print results
while True:
    k = int(input())
    if k == 0:
        break
    initial, target = input().split()
    print(min_rotations(k, initial, target))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' min' (ID: 1349)
  → Token d'amorce (pas de prédiction)

Token 2: '_rot' (ID: 90451)
  → Token d'amorce (pas de prédiction)

Token 3: 'ations' (ID: 929)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.31353679299354553
    2. '_' → logprob: -1.9385367631912231
    3. 'ation' → logprob: -3.1885368824005127
    4. '(' → logprob: -3.3135368824005127
    5. '```' → logprob: -4.313536643981934
    6. '_:' → logprob: -4.438536643981934
    7. '(a' → logprob: -5.188536643981934
    8. ':' → logprob: -5.563536643981934
    9. '​' → logprob: -6.063536643981934
    10. '(_:' → logprob: -6.188536643981934

Token 4: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01840265281498432
    2. '_' → logprob: -4.518402576446533
    3. '(:' → logprob: -6.393402576446533
    4. '_:' → logprob: -6.393402576446533
    5. '_to' → logprob: -6.518402576446533
    6. '(_:' → logprob: -6.768402576446533
    7. '():' → logprob: -7.768402576446533
    8. '(_' → logprob: -7.893402576446533
    9. '```' → logprob: -8.643403053283691
    10. ':' → logprob: -9.268403053283691

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02518356218934059
    2. ')' → logprob: -3.77518367767334
    3. ',' → logprob: -7.15018367767334
    4. '_' → logprob: -7.52518367767334
    5. 'e' → logprob: -8.77518367767334
    6. 'a' → logprob: -9.27518367767334
    7. ''):' → logprob: -9.52518367767334
    8. ')_' → logprob: -9.65018367767334
    9. ':' → logprob: -10.90018367767334
    10. 's' → logprob: -11.02518367767334

Token 6: ' initial' (ID: 4871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0450642108917236
    2. 's' → logprob: -1.2950642108917236
    3. ' n' → logprob: -1.9200642108917236
    4. ' s' → logprob: -2.1700642108917236
    5. 'arr' → logprob: -3.7950642108917236
    6. 'a' → logprob: -4.0450639724731445
    7. 'lst' → logprob: -4.5450639724731445
    8. ' arr' → logprob: -4.7950639724731445
    9. 'nums' → logprob: -5.2950639724731445
    10. 'l' → logprob: -5.5450639724731445

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04073415324091911
    2. '_' → logprob: -3.540734052658081
    3. ')' → logprob: -5.91573429107666
    4. '_angle' → logprob: -6.41573429107666
    5. ',' → logprob: -7.04073429107666
    6. '_s' → logprob: -7.41573429107666
    7. ''):' → logprob: -7.54073429107666
    8. 's' → logprob: -7.79073429107666
    9. '```' → logprob: -7.79073429107666
    10. '):
' → logprob: -7.79073429107666

Token 8: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.4159510135650635
    2. ' final' → logprob: -1.7909510135650635
    3. 'target' → logprob: -2.2909510135650635
    4. 'final' → logprob: -2.7909510135650635
    5. ' goal' → logprob: -5.665950775146484
    6. ' current' → logprob: -6.040950775146484
    7. 'goal' → logprob: -6.915950775146484
    8. 'desired' → logprob: -7.040950775146484
    9. ' desired' → logprob: -7.290950775146484
    10. 'current' → logprob: -7.415950775146484

Token 9: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032489974051713943
    2. '):' → logprob: -3.6574900150299072
    3. '':' → logprob: -5.407489776611328
    4. '():' → logprob: -7.532489776611328
    5. '`:' → logprob: -7.657489776611328
    6. '":' → logprob: -8.532489776611328
    7. '':'' → logprob: -9.407489776611328
    8. ':**' → logprob: -9.657489776611328
    9. '_:' → logprob: -9.782489776611328
    10. '```' → logprob: -9.907489776611328

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006155004259198904
    2. '   ' → logprob: -5.881155014038086
    3. '':' → logprob: -6.756155014038086
    4. '":' → logprob: -7.256155014038086
    5. ':
' → logprob: -7.506155014038086
    6. '':'' → logprob: -8.881155014038086
    7. '(:' → logprob: -9.256155014038086
    8. '`:' → logprob: -9.256155014038086
    9. '):' → logprob: -9.381155014038086
    10. '():' → logprob: -9.381155014038086

Token 11: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15520261228084564
    2. '   ' → logprob: -2.655202627182007
    3. ''' → logprob: -3.155202627182007
    4. ' ' → logprob: -5.030202388763428
    5. '```' → logprob: -5.405202388763428
    6. '_' → logprob: -5.530202388763428
    7. ':
' → logprob: -5.530202388763428
    8. '"' → logprob: -5.905202388763428
    9. '`' → logprob: -6.530202388763428
    10. 'i' → logprob: -6.655202388763428

Token 12: ' Convert' (ID: 15629)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7711921334266663
    2. ' if' → logprob: -1.0211920738220215
    3. ' n' → logprob: -2.7711920738220215
    4. 'n' → logprob: -3.8961920738220215
    5. ' count' → logprob: -4.1461920738220215
    6. ' return' → logprob: -5.0211920738220215
    7. 'count' → logprob: -5.0211920738220215
    8. 'if' → logprob: -5.1461920738220215
    9. ' pass' → logprob: -5.1461920738220215
    10. ' for' → logprob: -5.1461920738220215

Token 13: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.07403852790594101
    2. 'initial' → logprob: -3.574038505554199
    3. ' set' → logprob: -3.824038505554199
    4. ' list' → logprob: -5.324038505554199
    5. ' target' → logprob: -5.574038505554199
    6. ' to' → logprob: -5.699038505554199
    7. 'set' → logprob: -6.574038505554199
    8. ' k' → logprob: -6.824038505554199
    9. ' ' → logprob: -6.824038505554199
    10. '_initial' → logprob: -7.324038505554199

Token 14: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1161423847079277
    2. '_string' → logprob: -3.2411422729492188
    3. '_state' → logprob: -4.241142272949219
    4. '_to' → logprob: -4.866142272949219
    5. '_matrix' → logprob: -5.366142272949219
    6. '_str' → logprob: -5.616142272949219
    7. '_rot' → logprob: -5.616142272949219
    8. ')' → logprob: -5.741142272949219
    9. '_s' → logprob: -5.866142272949219
    10. 's' → logprob: -5.991142272949219

Token 15: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.14437012374401093
    2. 'target' → logprob: -2.0193700790405273
    3. '   ' → logprob: -6.894370079040527
    4. ' final' → logprob: -8.644370079040527
    5. 'final' → logprob: -8.894370079040527
    6. ' ' → logprob: -9.019370079040527
    7. ' initial' → logprob: -9.519370079040527
    8. '  ' → logprob: -9.769370079040527
    9. ' current' → logprob: -10.519370079040527
    10. '    ' → logprob: -10.894370079040527

Token 16: ' strings' (ID: 18279)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4555094242095947
    2. ' strings' → logprob: -1.7055094242095947
    3. ' arrays' → logprob: -3.3305094242095947
    4. ' states' → logprob: -3.4555094242095947
    5. ' lists' → logprob: -3.4555094242095947
    6. '_' → logprob: -4.080509185791016
    7. ' ' → logprob: -4.330509185791016
    8. '_strings' → logprob: -5.330509185791016
    9. 'to' → logprob: -5.455509185791016
    10. 's' → logprob: -5.455509185791016

Token 17: ' into' (ID: 1511)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04294152185320854
    2. '_to' → logprob: -4.417941570281982
    3. '_' → logprob: -4.542941570281982
    4. ' =' → logprob: -4.792941570281982
    5. 'to' → logprob: -5.542941570281982
    6. ' ' → logprob: -5.792941570281982
    7. ' into' → logprob: -6.667941570281982
    8. '   ' → logprob: -7.042941570281982
    9. 's' → logprob: -7.667941570281982
    10. '_tokens' → logprob: -8.042941093444824

Token 18: ' lists' (ID: 19471)
  Prédit: ' lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.06844614446163177
    2. ' list' → logprob: -3.693446159362793
    3. ' sets' → logprob: -3.693446159362793
    4. ' ' → logprob: -4.818446159362793
    5. ' a' → logprob: -5.568446159362793
    6. 'lists' → logprob: -6.693446159362793
    7. ' integers' → logprob: -6.943446159362793
    8. ' arrays' → logprob: -7.318446159362793
    9. 'list' → logprob: -7.693446159362793
    10. ' set' → logprob: -7.818446159362793

Token 19: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5812500715255737
    2. '   ' → logprob: -1.7062500715255737
    3. '```' → logprob: -2.3312501907348633
    4. ',' → logprob: -3.0812501907348633
    5. ' =' → logprob: -4.206250190734863
    6. ':' → logprob: -4.456250190734863
    7. '[
' → logprob: -4.581250190734863
    8. '[]' → logprob: -4.706250190734863
    9. '``' → logprob: -4.831250190734863
    10. '\' → logprob: -4.956250190734863

Token 20: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.29108890891075134
    2. 'inte' → logprob: -1.6660889387130737
    3. ' characters' → logprob: -4.166089057922363
    4. ' digits' → logprob: -4.541089057922363
    5. 'digits' → logprob: -4.541089057922363
    6. 'int' → logprob: -5.291089057922363
    7. ' lists' → logprob: -5.291089057922363
    8. 'ints' → logprob: -5.416089057922363
    9. 'characters' → logprob: -5.916089057922363
    10. ' ints' → logprob: -5.916089057922363

Token 21: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9482226967811584
    2. ':' → logprob: -1.4482226371765137
    3. '[' → logprob: -1.5732226371765137
    4. '```' → logprob: -2.3232226371765137
    5. '\' → logprob: -4.073222637176514
    6. ',' → logprob: -4.698222637176514
    7. '[
' → logprob: -5.198222637176514
    8. ':
' → logprob: -5.573222637176514
    9. '[i' → logprob: -5.573222637176514
    10. '[]' → logprob: -5.698222637176514

Token 22: ' easier' (ID: 11087)
  Prédit: ' easier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' easier' → logprob: -0.5684468150138855
    2. ' easy' → logprob: -1.8184468746185303
    3. ' i' → logprob: -1.9434468746185303
    4. ' ' → logprob: -2.6934468746185303
    5. ' manipulation' → logprob: -4.068446636199951
    6. ' better' → logprob: -4.818446636199951
    7. ' processing' → logprob: -5.193446636199951
    8. ' calculation' → logprob: -5.318446636199951
    9. ' digit' → logprob: -5.568446636199951
    10. ' rotation' → logprob: -5.818446636199951

Token 23: ' manipulation' (ID: 61519)
  Prédit: ' manipulation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manipulation' → logprob: -0.3839438557624817
    2. ' ' → logprob: -1.383943796157837
    3. ' processing' → logprob: -3.633943796157837
    4. ' to' → logprob: -4.258944034576416
    5. ' handling' → logprob: -5.258944034576416
    6. '   ' → logprob: -5.383944034576416
    7. '_' → logprob: -5.508944034576416
    8. ' space' → logprob: -6.133944034576416
    9. '  ' → logprob: -6.508944034576416
    10. 's' → logprob: -6.633944034576416

Token 24: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1978546380996704
    2. '   ' → logprob: -1.4478546380996704
    3. '```' → logprob: -1.4478546380996704
    4. '\n' → logprob: -2.822854518890381
    5. '
' → logprob: -2.947854518890381
    6. '[' → logprob: -3.572854518890381
    7. '\' → logprob: -3.947854518890381
    8. '    
' → logprob: -4.322854518890381
    9. 'n' → logprob: -4.572854518890381
    10. '  
' → logprob: -5.197854518890381

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4302784204483032
    2. '```' → logprob: -1.5552784204483032
    3. ':' → logprob: -2.6802783012390137
    4. '\n' → logprob: -3.6802783012390137
    5. 'n' → logprob: -4.680278301239014
    6. '
' → logprob: -4.680278301239014
    7. '``' → logprob: -5.555278301239014
    8. '    
' → logprob: -5.555278301239014
    9. ' ' → logprob: -6.305278301239014
    10. ',' → logprob: -6.305278301239014

Token 26: ' init' (ID: 6327)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.603225827217102
    2. '   ' → logprob: -1.603225827217102
    3. '\n' → logprob: -2.2282257080078125
    4. ' initial' → logprob: -2.2282257080078125
    5. '```' → logprob: -2.2282257080078125
    6. 'initial' → logprob: -2.7282257080078125
    7. '
' → logprob: -3.3532257080078125
    8. ' 
' → logprob: -3.4782257080078125
    9. ' i' → logprob: -3.7282257080078125
    10. '\' → logprob: -3.9782257080078125

Token 27: '_nums' (ID: 128266)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.2969410717487335
    2. '_' → logprob: -1.9219410419464111
    3. '_i' → logprob: -2.921941041946411
    4. ' =' → logprob: -3.546941041946411
    5. '_list' → logprob: -4.67194128036499
    6. 'ials' → logprob: -5.42194128036499
    7. 'al' → logprob: -5.42194128036499
    8. 'i' → logprob: -5.67194128036499
    9. '_vals' → logprob: -5.92194128036499
    10. 'ia' → logprob: -6.92194128036499

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892922312021255
    2. '=' → logprob: -2.5789291858673096
    3. ')' → logprob: -10.45392894744873
    4. ']' → logprob: -12.82892894744873
    5. '=[]' → logprob: -13.32892894744873
    6. ',' → logprob: -13.45392894744873
    7. ' ' → logprob: -14.20392894744873
    8. '[' → logprob: -14.20392894744873
    9. '[:]' → logprob: -14.20392894744873
    10. '```' → logprob: -14.70392894744873

Token 29: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.13614603877067566
    2. '[' → logprob: -2.886146068572998
    3. ' list' → logprob: -3.261146068572998
    4. '[list' → logprob: -3.636146068572998
    5. 'list' → logprob: -5.636146068572998
    6. '[int' → logprob: -6.636146068572998
    7. '[k' → logprob: -7.136146068572998
    8. ' initial' → logprob: -8.76114559173584
    9. '[start' → logprob: -8.88614559173584
    10. 'initial' → logprob: -9.01114559173584

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0757620558142662
    2. '(initial' → logprob: -2.8257620334625244
    3. '(map' → logprob: -4.4507622718811035
    4. '(ord' → logprob: -6.7007622718811035
    5. '(int' → logprob: -7.7007622718811035
    6. '(range' → logprob: -8.950761795043945
    7. '(k' → logprob: -9.575761795043945
    8. '()' → logprob: -11.200761795043945
    9. '(en' → logprob: -11.200761795043945
    10. '(str' → logprob: -11.450761795043945

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00021951000962872058
    2. '(' → logprob: -8.625219345092773
    3. '(lambda' → logprob: -10.375219345092773
    4. '(str' → logprob: -12.500219345092773
    5. 'int' → logprob: -12.750219345092773
    6. '(ord' → logprob: -13.500219345092773
    7. '<int' → logprob: -15.000219345092773
    8. '[int' → logprob: -16.000219345092773
    9. '(
' → logprob: -16.375219345092773
    10. '=int' → logprob: -16.500219345092773

Token 32: ',' (ID: 11)
  Prédit: '(initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.02798289991915226
    2. '(k' → logprob: -4.152982711791992
    3. '(' → logprob: -4.527982711791992
    4. ',' → logprob: -7.277982711791992
    5. '))' → logprob: -9.402982711791992
    6. ' (' → logprob: -10.027982711791992
    7. 'initial' → logprob: -10.277982711791992
    8. '(target' → logprob: -10.402982711791992
    9. '(init' → logprob: -10.402982711791992
    10. ')' → logprob: -10.527982711791992

Token 33: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.22053475677967072
    2. 'initial' → logprob: -1.8455348014831543
    3. ' list' → logprob: -3.4705348014831543
    4. 'list' → logprob: -4.845534801483154
    5. '(initial' → logprob: -7.345534801483154
    6. ' k' → logprob: -8.470534324645996
    7. 'k' → logprob: -9.470534324645996
    8. ' ' → logprob: -11.345534324645996
    9. ' init' → logprob: -11.345534324645996
    10. ')' → logprob: -11.595534324645996

Token 34: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006685942644253373
    2. ' ))' → logprob: -8.1256685256958
    3. '))
' → logprob: -8.7506685256958
    4. ')))' → logprob: -9.2506685256958
    5. ''))' → logprob: -10.3756685256958
    6. '[' → logprob: -10.5006685256958
    7. '"))' → logprob: -10.8756685256958
    8. ' ' → logprob: -11.7506685256958
    9. '   ' → logprob: -11.8756685256958
    10. ')' → logprob: -12.1256685256958

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8118885159492493
    2. ')' → logprob: -0.9368885159492493
    3. '<|end|>' → logprob: -2.3118884563446045
    4. '    
' → logprob: -3.8118884563446045
    5. '<|end|>' → logprob: -4.936888694763184
    6. '
' → logprob: -4.936888694763184
    7. ' ' → logprob: -5.061888694763184
    8. ')
' → logprob: -5.811888694763184
    9. 'n' → logprob: -6.061888694763184
    10. '    ' → logprob: -6.186888694763184

Token 36: ' target' (ID: 3783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4723550081253052
    2. ')' → logprob: -1.8473550081253052
    3. 't' → logprob: -1.8473550081253052
    4. 'target' (adapté à ' target') → logprob: -1.8473550081253052
    5. ' ' → logprob: -2.3473548889160156
    6. ' 
' → logprob: -2.5973548889160156
    7. '    
' → logprob: -3.8473548889160156
    8. ' target' → logprob: -4.722354888916016
    9. '<|end|>' → logprob: -4.722354888916016
    10. '    ' → logprob: -4.722354888916016

Token 37: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0005137138650752604
    2. ')' → logprob: -8.625514030456543
    3. '_' → logprob: -9.750514030456543
    4. '_vals' → logprob: -9.875514030456543
    5. '_num' → logprob: -10.125514030456543
    6. '_s' → logprob: -10.375514030456543
    7. '_numbers' → logprob: -10.375514030456543
    8. ')_' → logprob: -10.500514030456543
    9. 'Nums' → logprob: -10.750514030456543
    10. ' _' → logprob: -11.625514030456543

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014176673255860806
    2. '=' → logprob: -4.264176845550537
    3. ')' → logprob: -11.514176368713379
    4. ' ' → logprob: -13.389176368713379
    5. ' =[' → logprob: -14.514176368713379
    6. ' =)' → logprob: -15.139176368713379
    7. '[' → logprob: -15.264176368713379
    8. ' )' → logprob: -15.889176368713379
    9. '=[]' → logprob: -16.139177322387695
    10. '[:]' → logprob: -16.389177322387695

Token 39: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01416398212313652
    2. 'list' → logprob: -4.264163970947266
    3. '(list' → logprob: -14.639163970947266
    4. '=list' → logprob: -17.514163970947266
    5. '	list' → logprob: -19.014163970947266
    6. ' ' → logprob: -19.264163970947266
    7. ':list' → logprob: -20.014163970947266
    8. ' ' → logprob: -20.389163970947266
    9. ' map' → logprob: -20.389163970947266
    10. 'List' → logprob: -20.514163970947266

Token 40: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03440996631979942
    2. '(' → logprob: -3.409409999847412
    3. '(list' → logprob: -7.784409999847412
    4. '(int' → logprob: -8.659409523010254
    5. '(lambda' → logprob: -9.409409523010254
    6. ' (' → logprob: -11.159409523010254
    7. '(
' → logprob: -11.534409523010254
    8. 'map' → logprob: -11.659409523010254
    9. '(target' → logprob: -11.909409523010254
    10. '(mapping' → logprob: -12.409409523010254

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.778209353797138e-05
    2. '(' → logprob: -10.500067710876465
    3. ',int' → logprob: -11.000067710876465
    4. 'int' → logprob: -11.250067710876465
    5. '<int' → logprob: -12.250067710876465
    6. '=int' → logprob: -12.625067710876465
    7. '[int' → logprob: -13.625067710876465
    8. ' (' → logprob: -15.125067710876465
    9. ':int' → logprob: -15.250067710876465
    10. ' int' → logprob: -15.750067710876465

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020652047533076257
    2. ',target' → logprob: -9.25020694732666
    3. ',int' → logprob: -9.37520694732666
    4. '(target' → logprob: -11.87520694732666
    5. '(int' → logprob: -12.00020694732666
    6. 'int' → logprob: -12.00020694732666
    7. ' ,' → logprob: -12.12520694732666
    8. 'target' → logprob: -14.87520694732666
    9. '(' → logprob: -15.00020694732666
    10. '```' → logprob: -16.750205993652344

Token 43: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.028051408007740974
    2. ' target' → logprob: -3.9030513763427734
    3. 'int' → logprob: -4.903051376342773
    4. ' int' → logprob: -10.153051376342773
    5. '(target' → logprob: -11.278051376342773
    6. 't' → logprob: -13.278051376342773
    7. 'str' → logprob: -13.778051376342773
    8. 'lambda' → logprob: -14.153051376342773
    9. 'list' → logprob: -14.153051376342773
    10. '[target' → logprob: -14.528051376342773

Token 44: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004284043679945171
    2. ')' → logprob: -7.875428199768066
    3. '))
' → logprob: -10.750428199768066
    4. ')))' → logprob: -11.000428199768066
    5. '[' → logprob: -12.750428199768066
    6. ' ))' → logprob: -12.875428199768066
    7. '[]' → logprob: -13.750428199768066
    8. '   ' → logprob: -14.125428199768066
    9. ''))' → logprob: -14.500428199768066
    10. ' ' → logprob: -15.125428199768066

Token 45: '    
' (ID: 1944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4422959089279175
    2. '
' → logprob: -1.9422959089279175
    3. '   ' → logprob: -2.317296028137207
    4. ':
' → logprob: -3.442296028137207
    5. '```' → logprob: -3.942296028137207
    6. 'n' → logprob: -4.192296028137207
    7. ',' → logprob: -5.067296028137207
    8. '    
' → logprob: -5.067296028137207
    9. '\n' → logprob: -5.192296028137207
    10. ')' → logprob: -5.192296028137207

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16511912643909454
    2. 'n' → logprob: -2.415119171142578
    3. ' n' → logprob: -2.915119171142578
    4. ' result' → logprob: -5.790119171142578
    5. ' for' → logprob: -6.915119171142578
    6. ' min' → logprob: -7.165119171142578
    7. '```' → logprob: -7.415119171142578
    8. 'result' → logprob: -7.665119171142578
    9. ' rotations' → logprob: -7.790119171142578
    10. ' current' → logprob: -8.040119171142578

Token 47: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22867868840694427
    2. 'min' → logprob: -2.8536787033081055
    3. '   ' → logprob: -3.1036787033081055
    4. ' n' → logprob: -3.6036787033081055
    5. 'total' → logprob: -3.6036787033081055
    6. ' min' → logprob: -3.8536787033081055
    7. ' total' → logprob: -4.3536787033081055
    8. 'result' → logprob: -5.2286787033081055
    9. 'm' → logprob: -6.6036787033081055
    10. ' result' → logprob: -6.7286787033081055

Token 48: ' We' (ID: 1416)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7014737725257874
    2. 'n' → logprob: -1.9514737129211426
    3. ' total' → logprob: -1.9514737129211426
    4. ' min' → logprob: -2.5764737129211426
    5. ' for' → logprob: -3.0764737129211426
    6. ' result' → logprob: -3.9514737129211426
    7. 'total' → logprob: -3.9514737129211426
    8. '   ' → logprob: -4.201473712921143
    9. 'min' → logprob: -4.451473712921143
    10. 'for' → logprob: -5.201473712921143

Token 49: ' keep' (ID: 3357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8585719466209412
    2. ' n' → logprob: -0.8585719466209412
    3. ' ' → logprob: -3.108572006225586
    4. 'n' → logprob: -3.608572006225586
    5. ' =' → logprob: -4.358572006225586
    6. ' min' → logprob: -4.358572006225586
    7. ' need' → logprob: -4.608572006225586
    8. ' total' → logprob: -4.858572006225586
    9. ' max' → logprob: -4.858572006225586
    10. ' can' → logprob: -5.358572006225586

Token 50: ' track' (ID: 5290)
  Prédit: ' track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.5108403563499451
    2. ' a' → logprob: -1.5108404159545898
    3. ' total' → logprob: -2.13584041595459
    4. '   ' → logprob: -3.63584041595459
    5. ' rotations' → logprob: -4.76084041595459
    6. ' the' → logprob: -5.38584041595459
    7. ' count' → logprob: -5.38584041595459
    8. ' two' → logprob: -5.51084041595459
    9. 'total' → logprob: -6.01084041595459
    10. ' min' → logprob: -6.38584041595459

Token 51: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19050444662570953
    2. '_' → logprob: -1.9405044317245483
    3. '(' → logprob: -4.565504550933838
    4. '    ' → logprob: -5.315504550933838
    5. '   ' → logprob: -5.565504550933838
    6. 'of' → logprob: -5.690504550933838
    7. '_of' → logprob: -6.690504550933838
    8. 's' → logprob: -6.815504550933838
    9. ' ' → logprob: -6.940504550933838
    10. ' _' → logprob: -7.065504550933838

Token 52: ' the' (ID: 290)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.07781697809696198
    2. ' min' → logprob: -3.452816963195801
    3. ' the' → logprob: -3.827816963195801
    4. ' rotations' → logprob: -4.827816963195801
    5. 'total' → logprob: -4.827816963195801
    6. ' n' → logprob: -7.077816963195801
    7. ' minimal' → logprob: -7.327816963195801
    8. ' res' → logprob: -7.452816963195801
    9. ' minimum' → logprob: -7.452816963195801
    10. 'min' → logprob: -7.452816963195801

Token 53: ' current' (ID: 2208)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.696401059627533
    2. ' n' → logprob: -1.5714011192321777
    3. ' minimum' → logprob: -2.4464011192321777
    4. ' min' → logprob: -3.0714011192321777
    5. 'n' → logprob: -3.1964011192321777
    6. 'total' → logprob: -3.4464011192321777
    7. ' minimal' → logprob: -3.9464011192321777
    8. 'minimum' → logprob: -4.571401119232178
    9. ' rotations' → logprob: -4.946401119232178
    10. ' result' → logprob: -4.946401119232178

Token 54: ' state' (ID: 2608)
  Prédit: '_rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rot' → logprob: -0.2798028290271759
    2. '_state' → logprob: -2.4048027992248535
    3. '_rotation' → logprob: -2.6548027992248535
    4. 'state' → logprob: -4.6548027992248535
    5. ' rotations' → logprob: -4.6548027992248535
    6. '_' → logprob: -4.6548027992248535
    7. 'rot' → logprob: -5.1548027992248535
    8. '_count' → logprob: -5.4048027992248535
    9. 'rotation' → logprob: -5.6548027992248535
    10. '_min' → logprob: -5.7798027992248535

Token 55: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7219905853271484
    2. '_' → logprob: -1.4719905853271484
    3. '   ' → logprob: -2.3469905853271484
    4. ',' → logprob: -2.7219905853271484
    5. ' =' → logprob: -3.2219905853271484
    6. ' of' → logprob: -4.346990585327148
    7. '_s' → logprob: -4.846990585327148
    8. ' and' → logprob: -4.846990585327148
    9. '  ' → logprob: -4.971990585327148
    10. '    ' → logprob: -5.221990585327148

Token 56: ' the' (ID: 290)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0726412534713745
    2. ' init' → logprob: -1.0726412534713745
    3. ' the' → logprob: -1.1976412534713745
    4. 'the' → logprob: -4.697641372680664
    5. ' a' → logprob: -7.322641372680664
    6. ' initial' → logprob: -7.697641372680664
    7. '_init' → logprob: -7.822641372680664
    8. ' each' → logprob: -7.947641372680664
    9. ' rotations' → logprob: -7.947641372680664
    10. ' current' → logprob: -8.072641372680664

Token 57: ' d' (ID: 272)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.0825974941253662
    2. ' lock' → logprob: -2.332597494125366
    3. 'digits' → logprob: -2.457597494125366
    4. ' wheels' → logprob: -2.707597494125366
    5. 'init' → logprob: -2.832597494125366
    6. 'd' → logprob: -3.332597494125366
    7. 'code' → logprob: -3.457597494125366
    8. ' array' → logprob: -3.582597494125366
    9. 'wheel' → logprob: -3.582597494125366
    10. 'array' → logprob: -3.582597494125366

Token 58: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.4023023843765259
    2. 'igits' → logprob: -1.6523023843765259
    3. 'ial' → logprob: -2.2773022651672363
    4. 'e' → logprob: -4.527302265167236
    5. 'ef' → logprob: -5.027302265167236
    6. 'i' → logprob: -5.402302265167236
    7. 'evice' → logprob: -5.527302265167236
    8. 'igit' → logprob: -5.652302265167236
    9. '[i' → logprob: -6.402302265167236
    10. 'is' → logprob: -7.277302265167236

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8210088014602661
    2. ',' → logprob: -0.9460088014602661
    3. ' =' → logprob: -2.4460086822509766
    4. ' and' → logprob: -3.4460086822509766
    5. ' ,' → logprob: -4.196008682250977
    6. 's' → logprob: -4.446008682250977
    7. '    ' → logprob: -5.321008682250977
    8. '=' → logprob: -5.446008682250977
    9. 'current' → logprob: -5.696008682250977
    10. '    
' → logprob: -6.071008682250977

Token 60: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5551202297210693
    2. '   ' → logprob: -1.3051202297210693
    3. 's' → logprob: -2.5551202297210693
    4. ' ,' → logprob: -3.6801202297210693
    5. ' and' → logprob: -4.055120468139648
    6. '    ' → logprob: -5.055120468139648
    7. 'current' → logprob: -5.430120468139648
    8. ' =' → logprob: -5.555120468139648
    9. ' ' → logprob: -5.555120468139648
    10. '    
' → logprob: -6.180120468139648

Token 61: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04665530100464821
    2. 'current' (adapté à ' current') → logprob: -3.4216554164886475
    3. ' curr' → logprob: -5.546655178070068
    4. ' d' → logprob: -6.046655178070068
    5. 'curr' → logprob: -6.296655178070068
    6. ' state' → logprob: -6.421655178070068
    7. ' cur' → logprob: -6.671655178070068
    8. '   ' → logprob: -7.421655178070068
    9. 'cur' → logprob: -7.796655178070068
    10. ' dial' → logprob: -8.296655654907227

Token 62: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1713208258152008
    2. ' =' → logprob: -2.171320915222168
    3. '_nums' → logprob: -3.921320915222168
    4. '_state' → logprob: -4.796320915222168
    5. '=' → logprob: -5.046320915222168
    6. '_states' → logprob: -5.921320915222168
    7. '_s' → logprob: -6.421320915222168
    8. ' _' → logprob: -6.546320915222168
    9. '_numbers' → logprob: -6.921320915222168
    10. 's' → logprob: -7.046320915222168

Token 63: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.02055368572473526
    2. 'init' → logprob: -3.8955535888671875
    3. ' ' → logprob: -12.395553588867188
    4. '  ' → logprob: -13.145553588867188
    5. '	init' → logprob: -13.520553588867188
    6. '_init' → logprob: -13.520553588867188
    7. ' initial' → logprob: -14.645553588867188
    8. ' [' → logprob: -14.645553588867188
    9. '(init' → logprob: -14.645553588867188
    10. '[:]' → logprob: -14.895553588867188

Token 64: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.0025937308091670275
    2. '_' → logprob: -6.002593517303467
    3. ' _' → logprob: -10.002593994140625
    4. '_num' → logprob: -10.627593994140625
    5. '_vals' → logprob: -11.877593994140625
    6. '_n' → logprob: -11.877593994140625
    7. '```' → logprob: -12.127593994140625
    8. '_i' → logprob: -12.127593994140625
    9. '   ' → logprob: -12.627593994140625
    10. '__' → logprob: -12.877593994140625

Token 65: '[:' (ID: 7808)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9195775389671326
    2. '   ' → logprob: -0.9195775389671326
    3. '    
' → logprob: -2.2945775985717773
    4. '<|end|>' → logprob: -3.4195775985717773
    5. '\n' → logprob: -4.169577598571777
    6. '[' → logprob: -4.794577598571777
    7. '```' → logprob: -4.919577598571777
    8. '<|end|>' → logprob: -5.544577598571777
    9. '[:]' → logprob: -5.669577598571777
    10. '  
' → logprob: -5.794577598571777

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037949695251882076
    2. ']' → logprob: -5.628795146942139
    3. ')
' → logprob: -9.75379467010498
    4. '])' → logprob: -9.87879467010498
    5. ' )' → logprob: -10.00379467010498
    6. ')]' → logprob: -10.75379467010498
    7. ' ' → logprob: -12.37879467010498
    8. '<|end|>' → logprob: -12.87879467010498
    9. ')

' → logprob: -13.12879467010498
    10. '）' → logprob: -13.12879467010498

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33158454298973083
    2. '
' → logprob: -1.7065845727920532
    3. '    
' → logprob: -2.4565844535827637
    4. 'n' → logprob: -5.331584453582764
    5. '\n' → logprob: -6.206584453582764
    6. '   
' → logprob: -6.331584453582764
    7. '\' → logprob: -6.456584453582764
    8. '```' → logprob: -6.456584453582764
    9. '  
' → logprob: -7.081584453582764
    10. ' 
' → logprob: -7.456584453582764

Token 68: ' rotations' (ID: 141136)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6137898564338684
    2. '   ' → logprob: -1.2387897968292236
    3. '
' → logprob: -2.6137897968292236
    4. '    
' → logprob: -3.3637897968292236
    5. '\n' → logprob: -3.7387897968292236
    6. '\' → logprob: -4.863790035247803
    7. 'total' → logprob: -5.113790035247803
    8. ' n' → logprob: -5.738790035247803
    9. ' total' → logprob: -5.738790035247803
    10. 'result' → logprob: -5.738790035247803

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02365805208683014
    2. '=' → logprob: -4.023658275604248
    3. '_' → logprob: -5.648658275604248
    4. '_count' → logprob: -7.023658275604248
    5. ' ' → logprob: -7.648658275604248
    6. '_needed' → logprob: -8.02365779876709
    7. 's' → logprob: -9.77365779876709
    8. ' +=' → logprob: -10.14865779876709
    9. '   ' → logprob: -10.39865779876709
    10. '[' → logprob: -10.64865779876709

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692853808403015
    2. ' ' → logprob: -2.1269285678863525
    3. ' [' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.626928329467773
    5. '[' → logprob: -16.751928329467773
    6. '1' → logprob: -16.876928329467773
    7. '[]' → logprob: -17.001928329467773
    8. '  ' → logprob: -18.001928329467773
    9. '   ' → logprob: -18.251928329467773
    10. ' []' → logprob: -18.814428329467773

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.375015258789062
    3. '[]' → logprob: -13.125015258789062
    4. '[' → logprob: -13.375015258789062
    5. '[]
' → logprob: -17.625015258789062
    6. '000' → logprob: -19.000015258789062
    7. ' [' → logprob: -19.000015258789062
    8. '{}' → logprob: -19.250015258789062
    9. ' []' → logprob: -19.750015258789062
    10. '   ' → logprob: -19.750015258789062

Token 72: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2725750803947449
    2. '   ' → logprob: -2.2725751399993896
    3. '\n' → logprob: -2.7725751399993896
    4. '    
' → logprob: -3.2725751399993896
    5. ' for' → logprob: -4.1475749015808105
    6. ' 
' → logprob: -5.0225749015808105
    7. 'n' → logprob: -6.0225749015808105
    8. '\' → logprob: -6.0225749015808105
    9. '  
' → logprob: -6.1475749015808105
    10. '   
' → logprob: -6.6475749015808105

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.338634192943573
    2. ' for' → logprob: -1.4636342525482178
    3. 'for' → logprob: -3.2136342525482178
    4. 'n' → logprob: -4.463634014129639
    5. '
' → logprob: -5.713634014129639
    6. ' n' → logprob: -7.963634014129639
    7. '\n' → logprob: -8.463634490966797
    8. '    
' → logprob: -8.838634490966797
    9. '```' → logprob: -9.838634490966797
    10. ' ' → logprob: -11.338634490966797

Token 74: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020948344841599464
    2. 'n' → logprob: -3.8959484100341797
    3. ' for' → logprob: -8.39594841003418
    4. '   ' → logprob: -8.64594841003418
    5. ' n' → logprob: -12.89594841003418
    6. 'i' → logprob: -14.02094841003418
    7. '```' → logprob: -14.64594841003418
    8. 'length' → logprob: -14.77094841003418
    9. '	for' → logprob: -15.64594841003418
    10. 'N' → logprob: -15.89594841003418

Token 75: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4418022036552429
    2. 'for' → logprob: -1.0668022632598877
    3. 'n' → logprob: -4.691802024841309
    4. ' n' → logprob: -5.691802024841309
    5. '   ' → logprob: -7.691802024841309
    6. 'For' → logprob: -13.066802024841309
    7. '```' → logprob: -13.066802024841309
    8. 'i' → logprob: -13.316802024841309
    9. ' i' → logprob: -13.441802024841309
    10. 'def' → logprob: -13.566802024841309

Token 76: ' process' (ID: 2273)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3299129009246826
    2. '   ' → logprob: -1.5799129009246826
    3. 'for' → logprob: -2.7049129009246826
    4. ' ' → logprob: -5.954913139343262
    5. ' need' → logprob: -6.829913139343262
    6. ' can' → logprob: -6.954913139343262
    7. ' n' → logprob: -7.079913139343262
    8. '    ' → logprob: -7.579913139343262
    9. ' have' → logprob: -7.704913139343262
    10. '  ' → logprob: -7.954913139343262

Token 77: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7777202129364014
    2. ' each' → logprob: -1.0277202129364014
    3. ' i' → logprob: -2.2777202129364014
    4. ' the' → logprob: -2.7777202129364014
    5. '   ' → logprob: -4.7777204513549805
    6. ' ' → logprob: -5.6527204513549805
    7. 'for' → logprob: -6.0277204513549805
    8. 'each' → logprob: -6.7777204513549805
    9. '    ' → logprob: -7.2777204513549805
    10. ' in' → logprob: -7.9027204513549805

Token 78: 'ials' (ID: 16596)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.14661306142807007
    2. ' in' → logprob: -3.146613121032715
    3. 'e' → logprob: -3.771613121032715
    4. 'for' → logprob: -4.271613121032715
    5. ' current' → logprob: -4.396613121032715
    6. 'i' → logprob: -4.396613121032715
    7. ' i' → logprob: -5.146613121032715
    8. 'f' → logprob: -5.271613121032715
    9. ' for' → logprob: -5.271613121032715
    10. '(current' → logprob: -5.896613121032715

Token 79: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13484078645706177
    2. ' in' → logprob: -2.884840726852417
    3. '   ' → logprob: -3.259840726852417
    4. ' i' → logprob: -4.259840965270996
    5. 'for' → logprob: -4.509840965270996
    6. ' ' → logprob: -6.759840965270996
    7. '[i' → logprob: -7.009840965270996
    8. ':' → logprob: -7.134840965270996
    9. ' to' → logprob: -7.259840965270996
    10. ',' → logprob: -7.259840965270996

Token 80: ' left' (ID: 3561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9559449553489685
    2. '0' → logprob: -1.0809450149536133
    3. ' left' → logprob: -1.3309450149536133
    4. ' i' → logprob: -4.830945014953613
    5. 'left' → logprob: -5.955945014953613
    6. 'i' → logprob: -7.330945014953613
    7. ' index' → logprob: -7.955945014953613
    8. ' the' → logprob: -8.455945014953613
    9. ' range' → logprob: -8.705945014953613
    10. ' right' → logprob: -9.705945014953613

Token 81: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08090941607952118
    2. 'to' → logprob: -2.580909490585327
    3. '   ' → logprob: -6.830909252166748
    4. ')' → logprob: -8.080909729003906
    5. '=' → logprob: -8.580909729003906
    6. ',' → logprob: -8.955909729003906
    7. ' ' → logprob: -9.205909729003906
    8. '_to' → logprob: -10.080909729003906
    9. '0' → logprob: -10.580909729003906
    10. '  ' → logprob: -11.080909729003906

Token 82: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.013098105788230896
    2. ' right' → logprob: -4.388098239898682
    3. 'ight' → logprob: -7.513098239898682
    4. ' ' → logprob: -11.388097763061523
    5. '```' → logprob: -11.763097763061523
    6. '	right' → logprob: -12.013097763061523
    7. 'rightness' → logprob: -12.388097763061523
    8. 'r' → logprob: -12.388097763061523
    9. 'rig' → logprob: -13.013097763061523
    10. '   ' → logprob: -13.763097763061523

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11881793290376663
    2. ' for' → logprob: -2.3688180446624756
    3. ':' → logprob: -4.4938178062438965
    4. '    
' → logprob: -6.3688178062438965
    5. 'for' → logprob: -6.4938178062438965
    6. ',' → logprob: -6.6188178062438965
    7. '
' → logprob: -7.4938178062438965
    8. ' to' → logprob: -8.118818283081055
    9. '  
' → logprob: -8.118818283081055
    10. '  ' → logprob: -8.618818283081055

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07470814138650894
    2. ' for' → logprob: -2.8247082233428955
    3. '
' → logprob: -4.699707984924316
    4. '    
' → logprob: -6.449707984924316
    5. 'for' → logprob: -6.574707984924316
    6. '  
' → logprob: -8.449707984924316
    7. 'n' → logprob: -9.949707984924316
    8. ' to' → logprob: -10.074707984924316
    9. '   
' → logprob: -10.074707984924316
    10. '```' → logprob: -10.074707984924316

Token 85: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2556856572628021
    2. 'for' → logprob: -1.8806856870651245
    3. '   ' → logprob: -2.630685567855835
    4. 'n' → logprob: -7.255685806274414
    5. ' n' → logprob: -7.880685806274414
    6. '```' → logprob: -12.380685806274414
    7. ' i' → logprob: -12.755685806274414
    8. '    
' → logprob: -12.880685806274414
    9. ' range' → logprob: -13.755685806274414
    10. '  ' → logprob: -13.880685806274414

Token 86: ' At' (ID: 3604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32880479097366333
    2. 'for' → logprob: -1.3288047313690186
    3. '   ' → logprob: -4.578804969787598
    4. 'n' → logprob: -5.703804969787598
    5. ' n' → logprob: -6.328804969787598
    6. ' i' → logprob: -11.078804969787598
    7. 'i' → logprob: -11.703804969787598
    8. '```' → logprob: -12.078804969787598
    9. ' range' → logprob: -13.078804969787598
    10. ' ' → logprob: -13.453804969787598

Token 87: ' each' (ID: 2454)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40678200125694275
    2. 'for' → logprob: -2.0317819118499756
    3. ' each' → logprob: -2.1567819118499756
    4. ' ' → logprob: -3.1567819118499756
    5. ' i' → logprob: -4.406782150268555
    6. 'each' → logprob: -4.906782150268555
    7. 'i' → logprob: -5.031782150268555
    8. '   ' → logprob: -5.156782150268555
    9. '    ' → logprob: -5.656782150268555
    10. ' the' → logprob: -5.656782150268555

Token 88: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.942783772945404
    2. ' dial' → logprob: -1.1927838325500488
    3. 'dial' → logprob: -1.6927838325500488
    4. 'i' → logprob: -2.317783832550049
    5. ' index' → logprob: -4.942783832550049
    6. ' step' → logprob: -5.442783832550049
    7. 'index' → logprob: -5.692783832550049
    8. ' for' → logprob: -6.067783832550049
    9. 'd' → logprob: -6.317783832550049
    10. 'for' → logprob: -6.567783832550049

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10485147684812546
    2. '   ' → logprob: -2.479851484298706
    3. ' ,' → logprob: -4.729851245880127
    4. ':' → logprob: -5.854851245880127
    5. ' for' → logprob: -6.104851245880127
    6. ' i' → logprob: -7.729851245880127
    7. '    ' → logprob: -7.729851245880127
    8. ' we' → logprob: -7.854851245880127
    9. 'for' → logprob: -8.729851722717285
    10. ' ' → logprob: -9.604851722717285

Token 90: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8436846733093262
    2. ' we' → logprob: -1.5936846733093262
    3. '   ' → logprob: -2.468684673309326
    4. ' n' → logprob: -2.718684673309326
    5. ' diff' → logprob: -2.843684673309326
    6. '    ' → logprob: -3.093684673309326
    7. 'diff' → logprob: -3.343684673309326
    8. ' if' → logprob: -3.468684673309326
    9. 'for' → logprob: -4.968684673309326
    10. 'n' → logprob: -5.093684673309326

Token 91: ' the' (ID: 290)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.023781340569257736
    2. 'current' → logprob: -3.8987812995910645
    3. ' target' → logprob: -6.7737812995910645
    4. ' the' → logprob: -7.6487812995910645
    5. ' (' → logprob: -7.7737812995910645
    6. ' ' → logprob: -8.023781776428223
    7. '(current' → logprob: -8.273781776428223
    8. ' abs' → logprob: -8.773781776428223
    9. 'abs' → logprob: -9.148781776428223
    10. ' initial' → logprob: -9.273781776428223

Token 92: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3199216425418854
    2. 'current' → logprob: -1.319921612739563
    3. 'difference' → logprob: -5.944921493530273
    4. ' difference' → logprob: -6.944921493530273
    5. 'target' → logprob: -7.069921493530273
    6. ' target' → logprob: -7.194921493530273
    7. '(current' → logprob: -7.319921493530273
    8. 'digit' → logprob: -8.569921493530273
    9. 'desired' → logprob: -8.819921493530273
    10. 'diff' → logprob: -9.569921493530273

Token 93: ' dial' (ID: 25192)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.907576322555542
    2. ' digit' → logprob: -1.282576322555542
    3. '[i' → logprob: -2.282576322555542
    4. ' dial' → logprob: -2.407576322555542
    5. 'dial' → logprob: -2.657576322555542
    6. '[' → logprob: -4.407576560974121
    7. ' number' → logprob: -5.032576560974121
    8. '[current' → logprob: -5.032576560974121
    9. ' !=' → logprob: -5.407576560974121
    10. ' value' → logprob: -5.532576560974121

Token 94: ' does' (ID: 2226)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.449546754360199
    2. ' !=' → logprob: -1.4495468139648438
    3. ' value' → logprob: -2.8245468139648438
    4. '!=' → logprob: -4.199546813964844
    5. ' needs' → logprob: -4.324546813964844
    6. ' does' → logprob: -4.574546813964844
    7. ' differs' → logprob: -5.324546813964844
    8. 'diff' → logprob: -5.449546813964844
    9. 'value' → logprob: -5.449546813964844
    10. ' ' → logprob: -5.574546813964844

Token 95: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4841630160808563
    2. ' not' → logprob: -0.9841630458831787
    3. 'n't' → logprob: -4.6091628074646
    4. 'n' → logprob: -9.734163284301758
    5. 'nt' → logprob: -12.359163284301758
    6. '	not' → logprob: -12.359163284301758
    7. '_not' → logprob: -12.484163284301758
    8. ' ' → logprob: -13.984163284301758
    9. '   ' → logprob: -14.234163284301758
    10. '  ' → logprob: -14.859163284301758

Token 96: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.281488299369812
    2. 'match' → logprob: -1.406488299369812
    3. ' equal' → logprob: -8.531488418579102
    4. 'equal' → logprob: -9.656488418579102
    5. ' math' → logprob: -10.531488418579102
    6. '   ' → logprob: -11.781488418579102
    7. '```' → logprob: -11.781488418579102
    8. ' ' → logprob: -11.781488418579102
    9. '	match' → logprob: -12.031488418579102
    10. 'm' → logprob: -12.406488418579102

Token 97: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1191665530204773
    2. 'target' → logprob: -2.994166612625122
    3. ' target' → logprob: -3.619166612625122
    4. ',' → logprob: -4.494166374206543
    5. 'the' → logprob: -4.494166374206543
    6. ' ' → logprob: -5.369166374206543
    7. '<|end|>' → logprob: -5.744166374206543
    8. ' a' → logprob: -5.869166374206543
    9. ',target' → logprob: -6.994166374206543
    10. ' ,' → logprob: -7.244166374206543

Token 98: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.253796249628067
    2. 'target' → logprob: -1.5037962198257446
    3. ' corresponding' → logprob: -6.628796100616455
    4. 't' → logprob: -7.878796100616455
    5. '   ' → logprob: -9.628796577453613
    6. 'desired' → logprob: -10.503796577453613
    7. ' desired' → logprob: -10.878796577453613
    8. ' ' → logprob: -11.003796577453613
    9. '	target' → logprob: -12.003796577453613
    10. ' targ' → logprob: -12.128796577453613

Token 99: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07779227197170258
    2. ':' → logprob: -2.702792167663574
    3. ' ,' → logprob: -5.827792167663574
    4. '   ' → logprob: -6.577792167663574
    5. '[' → logprob: -6.702792167663574
    6. ' ' → logprob: -7.452792167663574
    7. ''s' → logprob: -7.827792167663574
    8. ':
' → logprob: -8.327792167663574
    9. '[i' → logprob: -9.202792167663574
    10. ' :' → logprob: -9.202792167663574

Token 100: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04390978440642357
    2. ',' → logprob: -4.168909549713135
    3. '    ' → logprob: -4.418909549713135
    4. '   ' → logprob: -4.793909549713135
    5. ' we' → logprob: -5.418909549713135
    6. ':' → logprob: -6.668909549713135
    7. ' ,' → logprob: -7.793909549713135
    8. '     ' → logprob: -8.293910026550293
    9. '        ' → logprob: -8.918910026550293
    10. ' for' → logprob: -9.293910026550293

Token 101: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4865680932998657
    2. '   ' → logprob: -1.6115680932998657
    3. ' we' → logprob: -1.8615680932998657
    4. '    ' → logprob: -3.611567974090576
    5. ' you' → logprob: -7.111567974090576
    6. 'we' → logprob: -7.236567974090576
    7. '        ' → logprob: -7.861567974090576
    8. '     ' → logprob: -7.986567974090576
    9. '      ' → logprob: -8.986568450927734
    10. ',' → logprob: -9.236568450927734

Token 102: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6464617252349854
    2. ' we' → logprob: -1.5214617252349854
    3. ' for' → logprob: -2.3964617252349854
    4. '       ' → logprob: -2.5214617252349854
    5. 'diff' → logprob: -3.2714617252349854
    6. ' diff' → logprob: -4.271461486816406
    7. ' increment' → logprob: -4.771461486816406
    8. ' if' → logprob: -5.146461486816406
    9. '    ' → logprob: -5.271461486816406
    10. ' difference' → logprob: -6.146461486816406

Token 103: ' will' (ID: 738)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.7797458171844482
    2. ' add' → logprob: -2.2797458171844482
    3. '   ' → logprob: -2.4047458171844482
    4. ' can' → logprob: -2.4047458171844482
    5. ' apply' → logprob: -2.4047458171844482
    6. ' rotate' → logprob: -2.4047458171844482
    7. 'diff' → logprob: -2.4047458171844482
    8. ' increment' → logprob: -3.1547458171844482
    9. ' must' → logprob: -3.5297458171844482
    10. ' perform' → logprob: -3.9047458171844482

Token 104: ' rotate' (ID: 31987)
  Prédit: ' rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -1.0478318929672241
    2. ' calculate' → logprob: -1.1728318929672241
    3. ' perform' → logprob: -2.2978320121765137
    4. ' apply' → logprob: -3.1728320121765137
    5. ' try' → logprob: -3.4228320121765137
    6. 'rotate' → logprob: -3.5478320121765137
    7. ' increment' → logprob: -3.6728320121765137
    8. 'calculate' → logprob: -3.6728320121765137
    9. ' add' → logprob: -4.172832012176514
    10. ' determine' → logprob: -4.422832012176514

Token 105: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38310950994491577
    2. 'the' → logprob: -2.3831095695495605
    3. ' current' → logprob: -2.3831095695495605
    4. ' k' → logprob: -3.2581095695495605
    5. 'current' → logprob: -3.7581095695495605
    6. '(' → logprob: -4.1331095695495605
    7. '(current' → logprob: -4.5081095695495605
    8. '(k' → logprob: -4.7581095695495605
    9. ' it' → logprob: -4.8831095695495605
    10. ' (' → logprob: -4.8831095695495605

Token 106: ' contiguous' (ID: 130997)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.04202032834291458
    2. 't' → logprob: -4.667020320892334
    3. '[' → logprob: -5.167020320892334
    4. 's' → logprob: -5.417020320892334
    5. 'l' → logprob: -5.792020320892334
    6. ' ll' → logprob: -5.792020320892334
    7. 'b' → logprob: -6.417020320892334
    8. ' ' → logprob: -6.542020320892334
    9. 'n' → logprob: -6.792020320892334
    10. ' range' → logprob: -6.917020320892334

Token 107: ' block' (ID: 4355)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.6904091835021973
    2. ' block' → logprob: -0.9404091835021973
    3. 'segment' → logprob: -2.9404091835021973
    4. ' sequence' → logprob: -3.1904091835021973
    5. 'block' → logprob: -5.190409183502197
    6. ' group' → logprob: -5.815409183502197
    7. 'sequence' → logprob: -6.190409183502197
    8. ' range' → logprob: -6.940409183502197
    9. '   ' → logprob: -7.940409183502197
    10. ' subset' → logprob: -8.065408706665039

Token 108: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.26580512523651123
    2. '   ' → logprob: -2.140805244445801
    3. ' from' → logprob: -3.140805244445801
    4. ' starting' → logprob: -3.640805244445801
    5. '    ' → logprob: -3.890805244445801
    6. '       ' → logprob: -5.015805244445801
    7. 'from' → logprob: -5.015805244445801
    8. ' to' → logprob: -5.140805244445801
    9. 'of' → logprob: -5.890805244445801
    10. ',' → logprob: -7.265805244445801

Token 109: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4062008857727051
    2. 'k' → logprob: -1.656200885772705
    3. ' d' → logprob: -2.281200885772705
    4. ' k' → logprob: -3.281200885772705
    5. '```' → logprob: -6.656200885772705
    6. 'the' → logprob: -7.781200885772705
    7. 'digits' → logprob: -8.031200408935547
    8. ' the' → logprob: -8.531200408935547
    9. ' ' → logprob: -8.906200408935547
    10. 'dial' → logprob: -9.031200408935547

Token 110: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0713275894522667
    2. '   ' → logprob: -3.4463276863098145
    3. '```' → logprob: -4.9463276863098145
    4. 'ial' → logprob: -5.6963276863098145
    5. '>' → logprob: -6.1338276863098145
    6. 'current' → logprob: -6.2588276863098145
    7. '#' → logprob: -6.3838276863098145
    8. '
' → logprob: -6.4463276863098145
    9. '</' → logprob: -6.6338276863098145
    10. '**' → logprob: -6.7588276863098145

Token 111: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06995788961648941
    2. '       ' → logprob: -4.319957733154297
    3. '[' → logprob: -4.569957733154297
    4. ' from' → logprob: -4.694957733154297
    5. ' for' → logprob: -4.694957733154297
    6. '    ' → logprob: -4.944957733154297
    7. ' to' → logprob: -5.069957733154297
    8. ',' → logprob: -5.444957733154297
    9. 'from' → logprob: -6.569957733154297
    10. '[i' → logprob: -6.819957733154297

Token 112: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4485674202442169
    2. ' at' → logprob: -1.6985673904418945
    3. ' from' → logprob: -2.0735673904418945
    4. 'at' → logprob: -2.9485673904418945
    5. '   ' → logprob: -8.823567390441895
    6. '	from' → logprob: -9.573567390441895
    7. '    ' → logprob: -10.198567390441895
    8. '	at' → logprob: -10.448567390441895
    9. 'with' → logprob: -10.698567390441895
    10. ' ' → logprob: -10.823567390441895

Token 113: ' this' (ID: 495)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6969618797302246
    2. 'i' → logprob: -1.5719618797302246
    3. ' i' → logprob: -1.8219618797302246
    4. ' the' → logprob: -2.4469618797302246
    5. 'that' → logprob: -3.8219618797302246
    6. 'the' → logprob: -4.571961879730225
    7. ' current' → logprob: -4.696961879730225
    8. ' this' → logprob: -6.071961879730225
    9. ' position' → logprob: -7.196961879730225
    10. 'current' → logprob: -7.196961879730225

Token 114: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.1193944588303566
    2. 'position' → logprob: -2.369394540786743
    3. ' i' → logprob: -4.369394302368164
    4. 'i' → logprob: -5.369394302368164
    5. ' index' → logprob: -7.619394302368164
    6. 'index' → logprob: -7.869394302368164
    7. ' ' → logprob: -7.994394302368164
    8. 'pos' → logprob: -8.744394302368164
    9. ' current' → logprob: -9.744394302368164
    10. '   ' → logprob: -9.994394302368164

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009469304233789444
    2. ' for' → logprob: -5.134469509124756
    3. ' to' → logprob: -6.759469509124756
    4. ',' → logprob: -7.384469509124756
    5. '    ' → logprob: -7.759469509124756
    6. '    
' → logprob: -8.009469032287598
    7. 'for' → logprob: -8.259469032287598
    8. '       ' → logprob: -8.759469032287598
    9. ' while' → logprob: -9.134469032287598
    10. ' and' → logprob: -9.384469032287598

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024569875095039606
    2. ' for' → logprob: -6.877457141876221
    3. '    
' → logprob: -7.627457141876221
    4. '    ' → logprob: -8.252456665039062
    5. ',' → logprob: -8.502456665039062
    6. '       ' → logprob: -8.752456665039062
    7. ' to' → logprob: -9.252456665039062
    8. 'for' → logprob: -10.127456665039062
    9. ' ' → logprob: -10.502456665039062
    10. '  ' → logprob: -10.752456665039062

Token 117: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6339022517204285
    2. '   ' → logprob: -0.8839022517204285
    3. 'for' → logprob: -3.1339023113250732
    4. '
' → logprob: -4.883902072906494
    5. 'n' → logprob: -5.508902072906494
    6. '    
' → logprob: -7.633902072906494
    7. '\n' → logprob: -8.383902549743652
    8. ' 
' → logprob: -8.508902549743652
    9. ' n' → logprob: -8.883902549743652
    10. '```' → logprob: -11.008902549743652

Token 118: ' by' (ID: 656)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6284437775611877
    2. '   ' → logprob: -0.8784437775611877
    3. 'for' → logprob: -3.503443717956543
    4. 'n' → logprob: -4.378443717956543
    5. ' n' → logprob: -5.128443717956543
    6. '
' → logprob: -6.003443717956543
    7. '    
' → logprob: -10.503443717956543
    8. '```' → logprob: -10.878443717956543
    9. ' ' → logprob: -11.253443717956543
    10. '\n' → logprob: -11.253443717956543

Token 119: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5122997164726257
    2. '(target' → logprob: -1.0122997760772705
    3. ' target' → logprob: -4.387299537658691
    4. '(' → logprob: -4.762299537658691
    5. 'target' → logprob: -4.887299537658691
    6. ' the' → logprob: -6.262299537658691
    7. '1' → logprob: -6.637299537658691
    8. '((' → logprob: -6.887299537658691
    9. '(k' → logprob: -7.012299537658691
    10. ' ' → logprob: -7.137299537658691

Token 120: ' minimal' (ID: 19957)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.8719797730445862
    2. ' (' → logprob: -1.1219797134399414
    3. 'difference' → logprob: -1.8719797134399414
    4. ' difference' → logprob: -3.7469797134399414
    5. '(' → logprob: -3.7469797134399414
    6. 'target' → logprob: -4.621979713439941
    7. 'diff' → logprob: -4.746979713439941
    8. '   ' → logprob: -5.121979713439941
    9. '(diff' → logprob: -5.371979713439941
    10. '((' → logprob: -5.746979713439941

Token 121: ' needed' (ID: 6118)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.5594939589500427
    2. ' number' → logprob: -1.1844940185546875
    3. 'amount' → logprob: -2.5594940185546875
    4. 'number' → logprob: -3.8094940185546875
    5. ' possible' → logprob: -5.3094940185546875
    6. 'increment' → logprob: -5.4344940185546875
    7. ' increment' → logprob: -5.8094940185546875
    8. 'possible' → logprob: -6.1844940185546875
    9. ' positive' → logprob: -6.5594940185546875
    10. 'distance' → logprob: -6.6844940185546875

Token 122: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.09558701515197754
    2. 'amount' → logprob: -3.3455870151519775
    3. ' number' → logprob: -4.220586776733398
    4. ' increment' → logprob: -4.345586776733398
    5. ' ' → logprob: -4.595586776733398
    6. '_amount' → logprob: -5.470586776733398
    7. ' value' → logprob: -5.970586776733398
    8. 'increment' → logprob: -6.220586776733398
    9. ' step' → logprob: -6.345586776733398
    10. ' rotation' → logprob: -6.595586776733398

Token 123: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020258408039808273
    2. ' ' → logprob: -5.14525842666626
    3. ',' → logprob: -5.39525842666626
    4. '    
' → logprob: -6.02025842666626
    5. ' to' → logprob: -6.77025842666626
    6. '       ' → logprob: -6.89525842666626
    7. '    ' → logprob: -6.89525842666626
    8. '
' → logprob: -7.02025842666626
    9. ' for' → logprob: -7.14525842666626
    10. '.' → logprob: -7.14525842666626

Token 124: 'either' (ID: 105049)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9387490153312683
    2. '(target' → logprob: -1.188749074935913
    3. '(' → logprob: -2.188749074935913
    4. 'target' → logprob: -2.438749074935913
    5. ' to' → logprob: -3.813749074935913
    6. ')' → logprob: -3.938749074935913
    7. ' target' → logprob: -4.063748836517334
    8. '
' → logprob: -4.938748836517334
    9. '(current' → logprob: -5.063748836517334
    10. '   ' → logprob: -5.188748836517334

Token 125: ' left' (ID: 3561)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5816295742988586
    2. ' clockwise' → logprob: -1.2066295146942139
    3. '(' → logprob: -3.081629514694214
    4. ' forward' → logprob: -4.081629753112793
    5. ' positive' → logprob: -4.581629753112793
    6. 'clock' → logprob: -4.956629753112793
    7. ' +' → logprob: -5.081629753112793
    8. '1' → logprob: -5.206629753112793
    9. ' ' → logprob: -5.206629753112793
    10. ' the' → logprob: -5.331629753112793

Token 126: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.020548075437545776
    2. 'or' → logprob: -4.270547866821289
    3. ' ' → logprob: -6.145547866821289
    4. ',' → logprob: -6.645547866821289
    5. ')' → logprob: -6.770547866821289
    6. '+' → logprob: -7.020547866821289
    7. 'ward' → logprob: -8.770547866821289
    8. ' ,' → logprob: -9.395547866821289
    9. 'wards' → logprob: -9.520547866821289
    10. '-' → logprob: -9.520547866821289

Token 127: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.1604062020778656
    2. 'right' → logprob: -1.910406231880188
    3. 'ight' → logprob: -9.285406112670898
    4. ')' → logprob: -10.785406112670898
    5. ' ' → logprob: -11.285406112670898
    6. '	right' → logprob: -11.285406112670898
    7. ',right' → logprob: -11.535406112670898
    8. '_right' → logprob: -11.660406112670898
    9. '.right' → logprob: -12.535406112670898
    10. 'ght' → logprob: -12.660406112670898

Token 128: ' rotation' (ID: 23769)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09527179598808289
    2. ')
' → logprob: -2.4702718257904053
    3. '   ' → logprob: -5.845271587371826
    4. ' to' → logprob: -7.095271587371826
    5. ' )' → logprob: -7.595271587371826
    6. ').' → logprob: -7.845271587371826
    7. ' )
' → logprob: -8.095272064208984
    8. ')
' → logprob: -8.595272064208984
    9. '):
' → logprob: -8.845272064208984
    10. 'def' → logprob: -8.845272064208984

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02101757936179638
    2. ' )' → logprob: -4.146017551422119
    3. ')
' → logprob: -6.396017551422119
    4. '   ' → logprob: -6.396017551422119
    5. ').' → logprob: -7.521017551422119
    6. ' to' → logprob: -7.646017551422119
    7. ',' → logprob: -8.771018028259277
    8. ' )
' → logprob: -8.771018028259277
    9. 'def' → logprob: -10.146018028259277
    10. '.' → logprob: -10.271018028259277

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6541703939437866
    2. '   ' → logprob: -0.9041703939437866
    3. '    
' → logprob: -2.779170513153076
    4. '\n' → logprob: -5.154170513153076
    5. '  
' → logprob: -5.904170513153076
    6. ' 
' → logprob: -6.029170513153076
    7. '   
' → logprob: -6.904170513153076
    8. ' for' → logprob: -8.279170036315918
    9. '<|end|>' → logprob: -8.654170036315918
    10. '    ' → logprob: -8.654170036315918

Token 131: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1076096296310425
    2. '
' → logprob: -1.3576096296310425
    3. '   ' → logprob: -1.3576096296310425
    4. 'for' → logprob: -2.732609748840332
    5. ' 
' → logprob: -3.232609748840332
    6. '    
' → logprob: -3.982609748840332
    7. 'n' → logprob: -3.982609748840332
    8. '\n' → logprob: -4.482609748840332
    9. '  
' → logprob: -7.482609748840332
    10. '   
' → logprob: -7.482609748840332

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46766799688339233
    2. '=' → logprob: -1.092668056488037
    3. ' +=' → logprob: -3.967668056488037
    4. ' ' → logprob: -4.217668056488037
    5. ' <' → logprob: -6.592668056488037
    6. '  ' → logprob: -7.467668056488037
    7. '<|end|>' → logprob: -7.467668056488037
    8. '+' → logprob: -7.717668056488037
    9. '   ' → logprob: -7.842668056488037
    10. '+=' → logprob: -8.842667579650879

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '<|end|>' → logprob: -17.258615493774414
    4. '   ' → logprob: -17.383615493774414
    5. '1' → logprob: -17.821115493774414
    6. '۰' → logprob: -19.008615493774414
    7. '```' → logprob: -19.133615493774414
    8. '  ' → logprob: -19.383615493774414
    9. 'i' → logprob: -19.633615493774414
    10. '=' → logprob: -19.946115493774414

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. '```' → logprob: -17.56250762939453
    5. '[' → logprob: -17.87500762939453
    6. '<|end|>' → logprob: -17.93750762939453
    7. '۰' → logprob: -18.68750762939453
    8. 'def' → logprob: -18.87500762939453
    9. '=' → logprob: -19.25000762939453
    10. 'i' → logprob: -19.50000762939453

Token 135: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05622861534357071
    2. '<|end|>' → logprob: -3.1812286376953125
    3. ' 
' → logprob: -5.6812286376953125
    4. '    
' → logprob: -6.4312286376953125
    5. '\n' → logprob: -6.5562286376953125
    6. '  
' → logprob: -6.8062286376953125
    7. ' while' → logprob: -6.9312286376953125
    8. 'while' → logprob: -7.1812286376953125
    9. ':' → logprob: -7.1812286376953125
    10. '   ' → logprob: -7.3062286376953125

Token 136: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6258859634399414
    2. '<|end|>' → logprob: -1.1258859634399414
    3. ' while' → logprob: -3.1258859634399414
    4. 'while' → logprob: -3.1258859634399414
    5. '   ' → logprob: -3.7508859634399414
    6. ':' → logprob: -5.250885963439941
    7. '\n' → logprob: -5.375885963439941
    8. ' 
' → logprob: -5.500885963439941
    9. '<|end|>' → logprob: -5.750885963439941
    10. '    
' → logprob: -5.875885963439941

Token 137: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.47756293416023254
    2. ' while' → logprob: -0.9775629043579102
    3. 'n' → logprob: -5.72756290435791
    4. '   ' → logprob: -9.22756290435791
    5. ' n' → logprob: -9.72756290435791
    6. '	while' → logprob: -11.10256290435791
    7. '
' → logprob: -11.35256290435791
    8. '    ' → logprob: -11.60256290435791
    9. ' ' → logprob: -12.35256290435791
    10. 'k' → logprob: -12.35256290435791

Token 138: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00015312091272789985
    2. 'i' → logprob: -8.875153541564941
    3. ' ' → logprob: -11.375153541564941
    4. ' k' → logprob: -14.250153541564941
    5. ' n' → logprob: -15.375153541564941
    6. ' (' → logprob: -15.500153541564941
    7. '	i' → logprob: -15.500153541564941
    8. '  ' → logprob: -15.750153541564941
    9. '   ' → logprob: -16.125152587890625
    10. '<|end|>' → logprob: -16.500152587890625

Token 139: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002325221663340926
    2. '<' → logprob: -6.127325057983398
    3. '<len' → logprob: -9.627325057983398
    4. '<n' → logprob: -10.127325057983398
    5. ' ' → logprob: -10.377325057983398
    6. ' <
' → logprob: -13.627325057983398
    7. '<size' → logprob: -14.502325057983398
    8. ')' → logprob: -15.252325057983398
    9. 'k' → logprob: -15.752325057983398
    10. ' <",' → logprob: -16.1273250579834

Token 140: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35505345463752747
    2. ' k' → logprob: -1.230053424835205
    3. ' len' → logprob: -5.605053424835205
    4. 'len' → logprob: -5.855053424835205
    5. 'n' → logprob: -11.355053901672363
    6. '   ' → logprob: -11.605053901672363
    7. ' n' → logprob: -11.855053901672363
    8. ' ' → logprob: -11.980053901672363
    9. '	k' → logprob: -12.480053901672363
    10. '  ' → logprob: -14.730053901672363

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001070323633030057
    2. ':
' → logprob: -6.876070499420166
    3. ' and' → logprob: -10.626070022583008
    4. ' :' → logprob: -11.751070022583008
    5. 'and' → logprob: -13.001070022583008
    6. '):' → logprob: -13.626070022583008
    7. ':

' → logprob: -13.876070022583008
    8. ':**' → logprob: -15.376070022583008
    9. ' :
' → logprob: -16.251070022583008
    10. ',' → logprob: -16.251070022583008

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04587201401591301
    2. ':' → logprob: -3.5458719730377197
    3. ' if' → logprob: -4.545872211456299
    4. '    ' → logprob: -6.420872211456299
    5. ',' → logprob: -7.045872211456299
    6. ':
' → logprob: -7.045872211456299
    7. '   ' → logprob: -7.795872211456299
    8. '        
' → logprob: -8.17087173461914
    9. 'if' → logprob: -8.42087173461914
    10. '<|end|>' → logprob: -8.54587173461914

Token 143: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08342345058917999
    2. '       ' → logprob: -2.958423376083374
    3. 'if' (adapté à ' if') → logprob: -3.583423376083374
    4. '        ' → logprob: -9.208423614501953
    5. ' ' → logprob: -9.833423614501953
    6. '   ' → logprob: -10.333423614501953
    7. '           ' → logprob: -10.458423614501953
    8. '        
' → logprob: -10.458423614501953
    9. 'diff' → logprob: -11.333423614501953
    10. '    ' → logprob: -11.333423614501953

Token 144: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.023247109726071358
    2. 'current' → logprob: -3.773247003555298
    3. '	current' → logprob: -14.398246765136719
    4. '   ' → logprob: -14.523246765136719
    5. '(current' → logprob: -15.523246765136719
    6. 'urrent' → logprob: -16.52324676513672
    7. 'Current' → logprob: -16.64824676513672
    8. ' ' → logprob: -16.77324676513672
    9. 'cur' → logprob: -17.14824676513672
    10. '    ' → logprob: -17.27324676513672

Token 145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008710063993930817
    2. '[' → logprob: -4.758709907531738
    3. ' [' → logprob: -9.383709907531738
    4. '[
' → logprob: -12.133709907531738
    5. ' ' → logprob: -13.633709907531738
    6. '[I' → logprob: -14.008709907531738
    7. '[k' → logprob: -14.133709907531738
    8. '[j' → logprob: -14.508709907531738
    9. '```' → logprob: -14.508709907531738
    10. '[int' → logprob: -14.633709907531738

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014483846724033356
    2. ')' → logprob: -4.88948392868042
    3. '!=' → logprob: -5.26448392868042
    4. ']!=' → logprob: -7.01448392868042
    5. ' !=' → logprob: -7.51448392868042
    6. ' ]' → logprob: -8.889483451843262
    7. ')!=' → logprob: -10.139483451843262
    8. '[' → logprob: -10.764483451843262
    9. ')]' → logprob: -11.764483451843262
    10. ']==' → logprob: -12.264483451843262

Token 147: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7160335779190063
    2. '!=' → logprob: -0.7160335779190063
    3. '==' → logprob: -3.966033458709717
    4. ' ==' → logprob: -5.716033458709717
    5. '=' → logprob: -8.091033935546875
    6. ')' → logprob: -11.091033935546875
    7. ']' → logprob: -11.091033935546875
    8. ' ' → logprob: -11.341033935546875
    9. ' ' → logprob: -11.341033935546875
    10. ']!=' → logprob: -11.591033935546875

Token 148: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.06994698941707611
    2. 'target' → logprob: -2.6949470043182373
    3. ' ' → logprob: -12.194947242736816
    4. '	target' → logprob: -12.944947242736816
    5. 't' → logprob: -13.569947242736816
    6. ' targ' → logprob: -14.694947242736816
    7. ' t' → logprob: -15.194947242736816
    8. '  ' → logprob: -15.444947242736816
    9. '(target' → logprob: -15.569947242736816
    10. ' current' → logprob: -15.569947242736816

Token 149: '_nums' (ID: 128266)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0793682411313057
    2. '_nums' → logprob: -2.5793683528900146
    3. '[' → logprob: -8.704368591308594
    4. '_[' → logprob: -9.579368591308594
    5. '```' → logprob: -9.829368591308594
    6. '[_' → logprob: -10.079368591308594
    7. 'Nums' → logprob: -10.829368591308594
    8. '[
' → logprob: -10.954368591308594
    9. 'nums' → logprob: -10.954368591308594
    10. '_num' → logprob: -11.204368591308594

Token 150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.141186450899113e-05
    2. '[' → logprob: -10.875020980834961
    3. '[
' → logprob: -14.500020980834961
    4. ']' → logprob: -14.875020980834961
    5. ' [' → logprob: -15.000020980834961
    6. ':' → logprob: -15.125020980834961
    7. '```' → logprob: -15.125020980834961
    8. ')' → logprob: -15.750020980834961
    9. '[I' → logprob: -15.875020980834961
    10. 'i' → logprob: -16.00002098083496

Token 151: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.57209712266922
    2. '):
' → logprob: -0.94709712266922
    3. ':' → logprob: -3.572097063064575
    4. ']:' → logprob: -4.322097301483154
    5. ']:
' → logprob: -5.572097301483154
    6. ':
' → logprob: -6.572097301483154
    7. ')' → logprob: -7.822097301483154
    8. '       ' → logprob: -8.572096824645996
    9. ' ):' → logprob: -8.697096824645996
    10. ' ):
' → logprob: -9.072096824645996

Token 152: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2661871016025543
    2. ':
' → logprob: -1.516187071800232
    3. '       ' → logprob: -4.5161871910095215
    4. '           ' → logprob: -6.6411871910095215
    5. '
' → logprob: -6.7661871910095215
    6. '):
' → logprob: -8.766186714172363
    7. ')' → logprob: -9.016186714172363
    8. ',' → logprob: -9.141186714172363
    9. '        ' → logprob: -9.266186714172363
    10. '        
' → logprob: -10.266186714172363

Token 153: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9293765425682068
    2. 'diff' → logprob: -1.4293766021728516
    3. ' diff' → logprob: -1.5543766021728516
    4. '
' → logprob: -2.9293766021728516
    5. '#' (adapté à ' #') → logprob: -3.1793766021728516
    6. ' #' → logprob: -3.4293766021728516
    7. ' delta' → logprob: -5.679376602172852
    8. '            ' → logprob: -5.804376602172852
    9. 'delta' → logprob: -6.054376602172852
    10. 'difference' → logprob: -6.179376602172852

Token 154: ' Determine' (ID: 57076)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.24344784021377563
    2. '#' → logprob: -2.243447780609131
    3. ' diff' → logprob: -2.618447780609131
    4. '           ' → logprob: -3.743447780609131
    5. 'difference' → logprob: -5.118447780609131
    6. 'delta' → logprob: -5.993447780609131
    7. ' #' → logprob: -6.118447780609131
    8. '   ' → logprob: -7.493447780609131
    9. ' difference' → logprob: -8.118448257446289
    10. 'change' → logprob: -8.243448257446289

Token 155: ' difference' (ID: 9809)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.014434853568673134
    2. 'the' → logprob: -5.389434814453125
    3. ' how' → logprob: -5.514434814453125
    4. ' diff' → logprob: -6.889434814453125
    5. ' difference' → logprob: -7.014434814453125
    6. ' forward' → logprob: -7.014434814453125
    7. ' rotation' → logprob: -7.264434814453125
    8. 'diff' → logprob: -7.639434814453125
    9. '   ' → logprob: -7.889434814453125
    10. 'difference' → logprob: -8.264434814453125

Token 156: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6817408800125122
    2. '           ' → logprob: -0.9317408800125122
    3. '=' → logprob: -2.4317407608032227
    4. ':' → logprob: -5.181740760803223
    5. 'diff' → logprob: -6.056740760803223
    6. ',' → logprob: -7.431740760803223
    7. '       ' → logprob: -7.431740760803223
    8. '            ' → logprob: -7.556740760803223
    9. ' in' → logprob: -7.931740760803223
    10. ' between' → logprob: -7.931740760803223

Token 157: ' numbers' (ID: 8663)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.247186303138733
    2. ' value' → logprob: -2.4971861839294434
    3. ' digits' → logprob: -2.4971861839294434
    4. ' rotation' → logprob: -2.6221861839294434
    5. ' rotations' → logprob: -2.8721861839294434
    6. ' direction' → logprob: -2.9971861839294434
    7. '(target' → logprob: -3.2471861839294434
    8. 'rotation' → logprob: -3.4971861839294434
    9. 'target' → logprob: -3.4971861839294434
    10. ' current' → logprob: -3.6221861839294434

Token 158: ' mod' (ID: 1812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10803211480379105
    2. ':' → logprob: -3.6080322265625
    3. '=' → logprob: -3.7330322265625
    4. ' =' → logprob: -4.2330322265625
    5. '
' → logprob: -4.3580322265625
    6. '       ' → logprob: -4.6080322265625
    7. ',' → logprob: -5.9830322265625
    8. '               ' → logprob: -6.1080322265625
    9. '            ' → logprob: -6.2330322265625
    10. '        ' → logprob: -6.4830322265625

Token 159: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760271549224854
    2. '10' → logprob: -0.8260271549224854
    3. '9' → logprob: -9.701026916503906
    4. 'ulo' → logprob: -10.826026916503906
    5. '1' → logprob: -14.076026916503906
    6. 'ular' → logprob: -14.076026916503906
    7. 'ulate' → logprob: -14.076026916503906
    8. '```' → logprob: -14.576026916503906
    9. ' ' → logprob: -15.076026916503906
    10. '  ' → logprob: -15.201026916503906

Token 160: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -15.375000953674316
    4. '   ' → logprob: -18.375001907348633
    5. 'k' → logprob: -18.500001907348633
    6. '`' → logprob: -18.500001907348633
    7. '100' → logprob: -18.875001907348633
    8. '1' → logprob: -19.000001907348633
    9. 't' → logprob: -19.000001907348633
    10. '0' → logprob: -19.000001907348633

Token 161: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7567097544670105
    2. ':' → logprob: -1.8817098140716553
    3. '=' → logprob: -2.2567098140716553
    4. ' =' → logprob: -2.3817098140716553
    5. '
' → logprob: -2.5067098140716553
    6. ':
' → logprob: -3.1317098140716553
    7. '            ' → logprob: -4.131709575653076
    8. ',' → logprob: -5.006709575653076
    9. '            
' → logprob: -5.131709575653076
    10. ' 
' → logprob: -5.381709575653076

Token 162: ' both' (ID: 2973)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.074800729751587
    2. ' range' → logprob: -2.074800729751587
    3. ' either' → logprob: -2.449800729751587
    4. 't' → logprob: -2.574800729751587
    5. ' ' → logprob: -2.699800729751587
    6. ' both' → logprob: -2.824800729751587
    7. ' (' → logprob: -2.949800729751587
    8. ' clockwise' → logprob: -3.449800729751587
    9. 'the' → logprob: -3.699800729751587
    10. ' two' → logprob: -4.074800491333008

Token 163: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.09108098596334457
    2. 'dire' → logprob: -2.466080904006958
    3. ' clockwise' → logprob: -7.466081142425537
    4. ' ' → logprob: -7.591081142425537
    5. '   ' → logprob: -8.341080665588379
    6. ' forward' → logprob: -8.591080665588379
    7. 'clock' → logprob: -8.716080665588379
    8. '10' → logprob: -8.966080665588379
    9. '1' → logprob: -9.341080665588379
    10. 'forward' → logprob: -9.966080665588379

Token 164: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019751865416765213
    2. ':' → logprob: -4.894752025604248
    3. '            ' → logprob: -5.144752025604248
    4. ',' → logprob: -6.394752025604248
    5. '=' → logprob: -6.519752025604248
    6. '            
' → logprob: -7.394752025604248
    7. '
' → logprob: -7.519752025604248
    8. ':
' → logprob: -8.14475154876709
    9. ' =' → logprob: -8.51975154876709
    10. 'd' → logprob: -9.01975154876709

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012597361579537392
    2. '            ' → logprob: -5.387597560882568
    3. '
' → logprob: -5.887597560882568
    4. ',' → logprob: -7.137597560882568
    5. ':' → logprob: -7.512597560882568
    6. '10' → logprob: -7.512597560882568
    7. ' forward' → logprob: -8.01259708404541
    8. '=' → logprob: -8.01259708404541
    9. '+' → logprob: -8.51259708404541
    10. ' left' → logprob: -8.63759708404541

Token 166: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.8270952701568604
    2. 'diff' (adapté à ' diff') → logprob: -1.2020952701568604
    3. ' forward' → logprob: -2.3270952701568604
    4. '
' → logprob: -3.0770952701568604
    5. '           ' → logprob: -3.7020952701568604
    6. ' left' → logprob: -3.8270952701568604
    7. ' clockwise' → logprob: -3.9520952701568604
    8. '            ' → logprob: -4.327095031738281
    9. ' right' → logprob: -4.327095031738281
    10. ' f' → logprob: -5.327095031738281

Token 167: '_right' (ID: 24402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2067616581916809
    2. '_right' → logprob: -2.581761598587036
    3. '_clock' → logprob: -3.456761598587036
    4. '=' → logprob: -3.456761598587036
    5. '_forward' → logprob: -3.706761598587036
    6. '_left' → logprob: -4.331761837005615
    7. '_c' → logprob: -4.706761837005615
    8. '_' → logprob: -7.956761837005615
    9. '_f' → logprob: -8.081761360168457
    10. '_plus' → logprob: -8.706761360168457

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005249768029898405
    2. '=' → logprob: -5.255249977111816
    3. ' ' → logprob: -11.130249977111816
    4. ')' → logprob: -14.755249977111816
    5. ',' → logprob: -14.880249977111816
    6. ' =
' → logprob: -15.255249977111816
    7. 's' → logprob: -16.0052490234375
    8. '```' → logprob: -16.5052490234375
    9. '  ' → logprob: -17.1302490234375
    10. '=int' → logprob: -17.5052490234375

Token 169: ' (' (ID: 350)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.3134203851222992
    2. ' (' → logprob: -1.3134204149246216
    3. '(current' → logprob: -9.938420295715332
    4. '(t' → logprob: -10.063420295715332
    5. '(next' → logprob: -10.688420295715332
    6. '(Target' → logprob: -11.313420295715332
    7. '(' → logprob: -11.688420295715332
    8. '(value' → logprob: -12.938420295715332
    9. '(abs' → logprob: -13.188420295715332
    10. '
' → logprob: -13.313420295715332

Token 170: 'current' (ID: 5804)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.008240435272455215
    2. ' target' → logprob: -4.883240222930908
    3. '(target' → logprob: -7.383240222930908
    4. '10' → logprob: -11.633240699768066
    5. '[target' → logprob: -13.633240699768066
    6. ' (' → logprob: -13.758240699768066
    7. 't' → logprob: -14.633240699768066
    8. ',target' → logprob: -15.883240699768066
    9. '   ' → logprob: -16.00823974609375
    10. '	target' → logprob: -16.00823974609375

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001395711093209684
    2. '[' → logprob: -7.5013957023620605
    3. ')' → logprob: -8.001396179199219
    4. 'i' → logprob: -9.626396179199219
    5. '[
' → logprob: -9.876396179199219
    6. ' ' → logprob: -9.938896179199219
    7. ' [' → logprob: -10.188896179199219
    8. ')[' → logprob: -10.251396179199219
    9. '```' → logprob: -10.626396179199219
    10. ' i' → logprob: -10.751396179199219

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035861756186932325
    2. '[i' → logprob: -6.628586292266846
    3. ']-' → logprob: -6.878586292266846
    4. ' -' → logprob: -7.378586292266846
    5. ' ]' → logprob: -8.128585815429688
    6. '[' → logprob: -9.253585815429688
    7. '-' → logprob: -9.753585815429688
    8. ')' → logprob: -10.753585815429688
    9. ']+' → logprob: -11.066085815429688
    10. ']
' → logprob: -11.191085815429688

Token 173: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18825003504753113
    2. '-' → logprob: -1.8132500648498535
    3. '-target' → logprob: -4.8132500648498535
    4. ' ' → logprob: -8.313249588012695
    5. 'target' → logprob: -9.688249588012695
    6. '+' → logprob: -11.563249588012695
    7. ',' → logprob: -11.813249588012695
    8. ')' → logprob: -12.313249588012695
    9. '
' → logprob: -12.938249588012695
    10. ' target' → logprob: -13.063249588012695

Token 174: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.009763171896338463
    2. ' target' → logprob: -4.634763240814209
    3. '10' → logprob: -12.63476276397705
    4. '(target' → logprob: -14.00976276397705
    5. ' ' → logprob: -14.13476276397705
    6. ')' → logprob: -14.75976276397705
    7. '  ' → logprob: -14.75976276397705
    8. '[target' → logprob: -14.88476276397705
    9. '   ' → logprob: -15.13476276397705
    10. ',target' → logprob: -15.50976276397705

Token 175: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.000822495436295867
    2. '[i' → logprob: -7.1258225440979
    3. 'nums' → logprob: -11.500822067260742
    4. 'Nums' → logprob: -12.125822067260742
    5. '_num' → logprob: -14.375822067260742
    6. '[' → logprob: -14.625822067260742
    7. '_chars' → logprob: -15.625822067260742
    8. '```' → logprob: -15.875822067260742
    9. '(nums' → logprob: -16.000822067260742
    10. '_numbers' → logprob: -16.125822067260742

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003143704670947045
    2. '[' → logprob: -8.125314712524414
    3. ')' → logprob: -12.375314712524414
    4. '_nums' → logprob: -12.625314712524414
    5. ')[' → logprob: -12.875314712524414
    6. 'i' → logprob: -13.250314712524414
    7. '[I' → logprob: -13.625314712524414
    8. '[
' → logprob: -13.625314712524414
    9. ' [' → logprob: -14.000314712524414
    10. '```' → logprob: -14.875314712524414

Token 177: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003234262694604695
    2. ' )' → logprob: -8.875323295593262
    3. '+' → logprob: -9.125323295593262
    4. ' +' → logprob: -10.875323295593262
    5. '})' → logprob: -11.250323295593262
    6. '])' → logprob: -11.375323295593262
    7. '))' → logprob: -11.750323295593262
    8. ']' → logprob: -12.125323295593262
    9. ')%' → logprob: -12.750323295593262
    10. '0' → logprob: -12.875323295593262

Token 178: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006866985349915922
    2. ' )' → logprob: -7.7506866455078125
    3. ')%' → logprob: -8.375686645507812
    4. ' %' → logprob: -11.375686645507812
    5. '%' → logprob: -11.875686645507812
    6. ' +' → logprob: -12.750686645507812
    7. '+' → logprob: -13.250686645507812
    8. ']' → logprob: -14.250686645507812
    9. '0' → logprob: -14.250686645507812
    10. '```' → logprob: -15.500686645507812

Token 179: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03364604339003563
    2. ' ' → logprob: -3.4086461067199707
    3. '```' → logprob: -16.158645629882812
    4. '1' → logprob: -16.658645629882812
    5. '<|end|>' → logprob: -17.283645629882812
    6. '`' → logprob: -18.283645629882812
    7. 's' → logprob: -18.283645629882812
    8. ')' → logprob: -18.346145629882812
    9. 'd' → logprob: -18.533645629882812
    10. '>' → logprob: -18.658645629882812

Token 180: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.000003814697266
    4. '1' → logprob: -19.375003814697266
    5. '`' → logprob: -21.750003814697266
    6. '۱۰' → logprob: -21.875003814697266
    7. '   ' → logprob: -22.125003814697266
    8. '
' → logprob: -22.687503814697266
    9. '{' → logprob: -22.687503814697266
    10. '[' → logprob: -22.750003814697266

Token 181: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.704452633857727
    2. '           ' → logprob: -0.704452633857727
    3. '       ' → logprob: -5.3294525146484375
    4. ')' → logprob: -5.8294525146484375
    5. '        ' → logprob: -7.4544525146484375
    6. ',' → logprob: -7.7044525146484375
    7. '            ' → logprob: -7.8294525146484375
    8. 'diff' → logprob: -7.9544525146484375
    9. ' 
' → logprob: -8.079452514648438
    10. ')
' → logprob: -8.454452514648438

Token 182: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10285461694002151
    2. '       ' → logprob: -2.6028547286987305
    3. '           ' → logprob: -4.3528547286987305
    4. '<|end|>' → logprob: -5.7278547286987305
    5. ')' → logprob: -6.3528547286987305
    6. '        ' → logprob: -6.3528547286987305
    7. '   ' → logprob: -6.9778547286987305
    8. ',' → logprob: -7.2278547286987305
    9. ' ' → logprob: -7.6028547286987305
    10. '10' → logprob: -8.47785472869873

Token 183: ' rotating' (ID: 65441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6966215372085571
    2. ')' → logprob: -1.1966215372085571
    3. '10' → logprob: -2.3216214179992676
    4. '1' → logprob: -3.1966214179992676
    5. ' )' → logprob: -4.446621417999268
    6. '9' → logprob: -5.071621417999268
    7. 'diff' → logprob: -5.321621417999268
    8. '0' → logprob: -5.571621417999268
    9. ' (' → logprob: -5.821621417999268
    10. ' right' → logprob: -6.071621417999268

Token 184: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.42209017276763916
    2. ' left' → logprob: -1.2970901727676392
    3. 'right' → logprob: -3.6720900535583496
    4. ' current' → logprob: -4.17209005355835
    5. 'left' → logprob: -4.92209005355835
    6. ' clockwise' → logprob: -5.17209005355835
    7. ' ' → logprob: -5.29709005355835
    8. '_right' → logprob: -5.67209005355835
    9. ' to' → logprob: -6.17209005355835
    10. ')' → logprob: -6.54709005355835

Token 185: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12344677001237869
    2. '<|end|>' → logprob: -2.4984467029571533
    3. '       ' → logprob: -4.873446941375732
    4. ' +' → logprob: -4.998446941375732
    5. '
' → logprob: -5.123446941375732
    6. ' )' → logprob: -5.623446941375732
    7. '<|end|>' → logprob: -5.873446941375732
    8. '+' → logprob: -6.373446941375732
    9. ' ' → logprob: -6.748446941375732
    10. ')
' → logprob: -7.248446941375732

Token 186: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.428859680891037
    2. 'diff' → logprob: -1.0538597106933594
    3. '10' → logprob: -9.30385971069336
    4. '	diff' → logprob: -10.42885971069336
    5. '(diff' → logprob: -10.80385971069336
    6. ' ' → logprob: -12.05385971069336
    7. '1' → logprob: -12.42885971069336
    8. '```' → logprob: -13.80385971069336
    9. '9' → logprob: -13.92885971069336
    10. '_diff' → logprob: -13.92885971069336

Token 187: '_right' (ID: 24402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40709778666496277
    2. '<|end|>' → logprob: -1.4070978164672852
    3. '<|end|>' → logprob: -2.907097816467285
    4. ' ' → logprob: -4.282097816467285
    5. '    ' → logprob: -5.157097816467285
    6. ' )' → logprob: -5.282097816467285
    7. '       ' → logprob: -6.782097816467285
    8. '        ' → logprob: -6.907097816467285
    9. '+' → logprob: -6.907097816467285
    10. ' +' → logprob: -6.907097816467285

Token 188: ' steps' (ID: 10331)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10871756076812744
    2. '<|end|>' → logprob: -2.358717441558838
    3. '<|end|>' → logprob: -5.233717441558838
    4. ' )' → logprob: -7.108717441558838
    5. '
' → logprob: -7.358717441558838
    6. '       ' → logprob: -7.733717441558838
    7. ')
' → logprob: -7.733717441558838
    8. ' ' → logprob: -8.608717918395996
    9. ']' → logprob: -8.858717918395996
    10. ',' → logprob: -9.233717918395996

Token 189: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44154858589172363
    2. '       ' → logprob: -1.9415485858917236
    3. ')' → logprob: -2.0665485858917236
    4. ' ' → logprob: -3.9415485858917236
    5. '           ' → logprob: -4.1915483474731445
    6. '<|end|>' → logprob: -4.1915483474731445
    7. '        ' → logprob: -4.5665483474731445
    8. '10' → logprob: -4.5665483474731445
    9. ')
' → logprob: -5.9415483474731445
    10. ',' → logprob: -6.1915483474731445

Token 191: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.19235378503799438
    2. ' diff' → logprob: -1.8173537254333496
    3. '           ' → logprob: -4.56735372543335
    4. '	diff' → logprob: -7.06735372543335
    5. '10' → logprob: -7.69235372543335
    6. '1' → logprob: -8.442354202270508
    7. '            ' → logprob: -8.692354202270508
    8. '            
' → logprob: -9.192354202270508
    9. '
' → logprob: -9.692354202270508
    10. '+' → logprob: -10.067354202270508

Token 192: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -9.610702363715973e-06
    2. '_right' → logprob: -12.250009536743164
    3. '_' → logprob: -13.000009536743164
    4. 'left' → logprob: -14.250009536743164
    5. '_Left' → logprob: -14.250009536743164
    6. '_LEFT' → logprob: -14.375009536743164
    7. 'Left' → logprob: -15.375009536743164
    8. ' =' → logprob: -16.250009536743164
    9. '_le' → logprob: -16.375009536743164
    10. ' left' → logprob: -16.750009536743164

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076127792708575726
    2. '=' → logprob: -4.882612705230713
    3. ' ' → logprob: -12.007613182067871
    4. ')' → logprob: -15.132613182067871
    5. ' =(' → logprob: -16.507612228393555
    6. '   ' → logprob: -16.632612228393555
    7. ',' → logprob: -17.132612228393555
    8. ' ' → logprob: -17.132612228393555
    9. '```' → logprob: -17.257612228393555
    10. '<|end|>' → logprob: -18.007612228393555

Token 194: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.37161460518836975
    2. '(target' → logprob: -1.7466145753860474
    3. '(' → logprob: -1.9966145753860474
    4. '10' → logprob: -9.746614456176758
    5. '(t' → logprob: -9.871614456176758
    6. '(Target' → logprob: -10.246614456176758
    7. '(abs' → logprob: -11.121614456176758
    8. '           ' → logprob: -11.371614456176758
    9. '(token' → logprob: -12.246614456176758
    10. '
' → logprob: -12.496614456176758

Token 195: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1935417503118515
    2. '(target' → logprob: -1.8185417652130127
    3. ' target' → logprob: -4.818541526794434
    4. '10' → logprob: -5.443541526794434
    5. ' (' → logprob: -6.943541526794434
    6. '[target' → logprob: -9.318541526794434
    7. '           ' → logprob: -9.568541526794434
    8. '   ' → logprob: -9.943541526794434
    9. '(' → logprob: -10.568541526794434
    10. '-target' → logprob: -10.943541526794434

Token 196: '_nums' (ID: 128266)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07083017379045486
    2. '_nums' → logprob: -2.6958301067352295
    3. 'nums' → logprob: -8.195830345153809
    4. '[' → logprob: -8.820830345153809
    5. 'Nums' → logprob: -8.945830345153809
    6. '<|end|>' → logprob: -9.320830345153809
    7. '_numbers' → logprob: -9.445830345153809
    8. '_num' → logprob: -10.070830345153809
    9. ')' → logprob: -10.445830345153809
    10. '_i' → logprob: -11.195830345153809

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003020961594302207
    2. '[' → logprob: -8.1253023147583
    3. '[
' → logprob: -12.5003023147583
    4. '<|end|>' → logprob: -14.2503023147583
    5. ' [' → logprob: -14.6253023147583
    6. ' ' → logprob: -14.6253023147583
    7. 'i' → logprob: -15.3753023147583
    8. '[I' → logprob: -15.7503023147583
    9. '[j' → logprob: -16.500301361083984
    10. ')' → logprob: -16.500301361083984

Token 198: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001907693105749786
    2. ']' → logprob: -6.626907825469971
    3. '[' → logprob: -7.501907825469971
    4. 'i' → logprob: -11.751907348632812
    5. ')' → logprob: -12.501907348632812
    6. ' ' → logprob: -12.626907348632812
    7. ' -' → logprob: -12.626907348632812
    8. '   ' → logprob: -12.751907348632812
    9. '][' → logprob: -12.751907348632812
    10. '(i' → logprob: -13.501907348632812

Token 199: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12150120735168457
    2. '[i' → logprob: -2.2465012073516846
    3. '-' → logprob: -5.2465009689331055
    4. ' ' → logprob: -5.9965009689331055
    5. '[' → logprob: -7.1215009689331055
    6. ')' → logprob: -9.996500968933105
    7. ' [' → logprob: -11.871500968933105
    8. '<|end|>' → logprob: -12.371500968933105
    9. '[
' → logprob: -12.621500968933105
    10. '   ' → logprob: -12.871500968933105

Token 200: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03805296868085861
    2. ' current' → logprob: -3.288053035736084
    3. '[current' → logprob: -12.288052558898926
    4. '<|end|>' → logprob: -13.038052558898926
    5. '(current' → logprob: -13.163052558898926
    6. '$current' → logprob: -14.038052558898926
    7. '_current' → logprob: -14.163052558898926
    8. ',current' → logprob: -15.038052558898926
    9. '	current' → logprob: -15.163052558898926
    10. ')' → logprob: -15.413052558898926

Token 201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000181372175575234
    2. '[' → logprob: -8.750181198120117
    3. 'i' → logprob: -10.875181198120117
    4. ')' → logprob: -13.625181198120117
    5. ' [' → logprob: -14.125181198120117
    6. '[
' → logprob: -14.250181198120117
    7. '(i' → logprob: -15.125181198120117
    8. ' ' → logprob: -15.500181198120117
    9. '```' → logprob: -15.500181198120117
    10. '[j' → logprob: -16.125181198120117

Token 202: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.966313281329349e-05
    2. ' )' → logprob: -10.000049591064453
    3. '   ' → logprob: -13.250049591064453
    4. '])' → logprob: -13.750049591064453
    5. '))' → logprob: -14.375049591064453
    6. '）' → logprob: -15.750049591064453
    7. '`)' → logprob: -15.750049591064453
    8. '})' → logprob: -16.375049591064453
    9. ')%' → logprob: -16.375049591064453
    10. ' ' → logprob: -17.000049591064453

Token 203: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03663962706923485
    2. '%' → logprob: -3.66163969039917
    3. ')' → logprob: -4.66163969039917
    4. ')%' → logprob: -7.41163969039917
    5. ' ' → logprob: -8.786639213562012
    6. ' )' → logprob: -9.536639213562012
    7. ' ' → logprob: -13.161639213562012
    8. ']' → logprob: -13.661639213562012
    9. ']%' → logprob: -14.286639213562012
    10. '```' → logprob: -14.536639213562012

Token 204: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '```' → logprob: -15.014163970947266
    4. '1' → logprob: -18.264163970947266
    5. ' ' → logprob: -19.389163970947266
    6. '   ' → logprob: -19.576663970947266
    7. '۱۰' → logprob: -19.639163970947266
    8. ')' → logprob: -19.639163970947266
    9. '`' → logprob: -19.826663970947266
    10. '１０' → logprob: -20.014163970947266

Token 205: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -18.000051498413086
    4. '1' → logprob: -19.250051498413086
    5. '۱۰' → logprob: -19.875051498413086
    6. ')' → logprob: -20.000051498413086
    7. '   ' → logprob: -20.125051498413086
    8. '
' → logprob: -20.125051498413086
    9. '１０' → logprob: -20.250051498413086
    10. ',' → logprob: -21.000051498413086

Token 206: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3127307891845703
    2. '           ' → logprob: -1.3127307891845703
    3. '
' → logprob: -1.4377307891845703
    4. '<|end|>' → logprob: -1.9377307891845703
    5. ')' → logprob: -2.9377307891845703
    6. ' ' → logprob: -5.31273078918457
    7. '<|end|>' → logprob: -5.43773078918457
    8. ' 
' → logprob: -5.68773078918457
    9. '            
' → logprob: -5.68773078918457
    10. '   ' → logprob: -6.18773078918457

Token 208: ' rotating' (ID: 65441)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.33664995431900024
    2. 'diff' → logprob: -1.5866498947143555
    3. ' rotating' → logprob: -3.2116498947143555
    4. ' ' → logprob: -4.0866498947143555
    5. 'rot' → logprob: -4.9616498947143555
    6. '1' → logprob: -5.4616498947143555
    7. '            ' → logprob: -5.5866498947143555
    8. '10' → logprob: -6.0866498947143555
    9. ')' → logprob: -6.2116498947143555
    10. ' (' → logprob: -6.7116498947143555

Token 209: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.21336154639720917
    2. 'left' → logprob: -2.3383615016937256
    3. ' diff' → logprob: -2.4633615016937256
    4. 'diff' → logprob: -4.713361740112305
    5. ' right' → logprob: -6.838361740112305
    6. 'right' → logprob: -7.838361740112305
    7. '_left' → logprob: -10.338361740112305
    8. ' ' → logprob: -11.588361740112305
    9. '	left' → logprob: -12.338361740112305
    10. '1' → logprob: -12.838361740112305

Token 210: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.0014534479705616832
    2. 'by' → logprob: -6.626453399658203
    3. ' steps' → logprob: -9.251453399658203
    4. ' ' → logprob: -11.251453399658203
    5. '_by' → logprob: -12.251453399658203
    6. 'steps' → logprob: -12.376453399658203
    7. '<|end|>' → logprob: -12.876453399658203
    8. '_steps' → logprob: -13.251453399658203
    9. ')' → logprob: -13.626453399658203
    10. '           ' → logprob: -14.001453399658203

Token 211: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16022920608520508
    2. ' diff' → logprob: -1.910229206085205
    3. '(diff' → logprob: -13.035228729248047
    4. '	diff' → logprob: -13.035228729248047
    5. ' ' → logprob: -15.535228729248047
    6. '10' → logprob: -15.785228729248047
    7. '_diff' → logprob: -16.285228729248047
    8. '1' → logprob: -16.410228729248047
    9. '.diff' → logprob: -16.785228729248047
    10. 'dif' → logprob: -17.785228729248047

Token 212: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00023035754566080868
    2. '_right' → logprob: -8.50023078918457
    3. 'left' → logprob: -10.75023078918457
    4. '_' → logprob: -12.25023078918457
    5. '_LEFT' → logprob: -15.12523078918457
    6. 'Left' → logprob: -16.62523078918457
    7. '_Left' → logprob: -16.87523078918457
    8. ' _' → logprob: -17.12523078918457
    9. '_le' → logprob: -17.12523078918457
    10. '   ' → logprob: -18.00023078918457

Token 213: ' steps' (ID: 10331)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44894322752952576
    2. '       ' → logprob: -1.4489432573318481
    3. '           ' → logprob: -2.5739431381225586
    4. '<|end|>' → logprob: -3.8239431381225586
    5. ')' → logprob: -4.573943138122559
    6. '<|end|>' → logprob: -5.073943138122559
    7. '   ' → logprob: -6.323943138122559
    8. ',' → logprob: -6.448943138122559
    9. ':
' → logprob: -6.448943138122559
    10. ')
' → logprob: -6.698943138122559

Token 214: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6770800352096558
    2. '           ' → logprob: -0.8020800352096558
    3. '       ' → logprob: -4.177080154418945
    4. '<|end|>' → logprob: -4.677080154418945
    5. '            
' → logprob: -4.927080154418945
    6. '\n' → logprob: -5.677080154418945
    7. '<|end|>' → logprob: -5.802080154418945
    8. '    
' → logprob: -7.177080154418945
    9. ')' → logprob: -7.302080154418945
    10. ',' → logprob: -7.427080154418945

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006531699560582638
    2. '       ' → logprob: -5.506531715393066
    3. ' if' → logprob: -6.631531715393066
    4. '
' → logprob: -7.256531715393066
    5. '            
' → logprob: -9.256531715393066
    6. 'if' → logprob: -9.506531715393066
    7. '   ' → logprob: -10.256531715393066
    8. '               ' → logprob: -10.381531715393066
    9. '```' → logprob: -10.381531715393066
    10. '<|end|>' → logprob: -10.631531715393066

Token 216: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6608622670173645
    2. ' if' → logprob: -0.9108622670173645
    3. '           ' → logprob: -2.5358622074127197
    4. '#' (adapté à ' #') → logprob: -6.285862445831299
    5. 'step' → logprob: -9.53586196899414
    6. ' step' → logprob: -10.16086196899414
    7. 'direction' → logprob: -10.16086196899414
    8. '```' → logprob: -10.16086196899414
    9. ' direction' → logprob: -10.66086196899414
    10. 'rotate' → logprob: -10.78586196899414

Token 217: ' choose' (ID: 5655)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36109182238578796
    2. 'if' → logprob: -1.2360918521881104
    3. '           ' → logprob: -4.611091613769531
    4. '#' → logprob: -6.361091613769531
    5. ' #' → logprob: -7.486091613769531
    6. ' rotate' → logprob: -9.986091613769531
    7. 'rotate' → logprob: -10.361091613769531
    8. '   ' → logprob: -10.736091613769531
    9. 'If' → logprob: -10.736091613769531
    10. ' If' → logprob: -10.861091613769531

Token 218: ' minimal' (ID: 19957)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.5817331075668335
    2. ' the' → logprob: -1.5817331075668335
    3. ' if' → logprob: -2.331733226776123
    4. '           ' → logprob: -3.081733226776123
    5. ' rotation' → logprob: -3.581733226776123
    6. ' direction' → logprob: -4.206733226776123
    7. ' left' → logprob: -4.456733226776123
    8. ' to' → logprob: -4.706733226776123
    9. 'diff' → logprob: -5.081733226776123
    10. ' which' → logprob: -5.581733226776123

Token 219: ' rotation' (ID: 23769)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5521363019943237
    2. 'diff' → logprob: -1.4271363019943237
    3. 'if' → logprob: -2.8021364212036133
    4. ' diff' → logprob: -3.5521364212036133
    5. ' of' → logprob: -3.9271364212036133
    6. '           ' → logprob: -4.177136421203613
    7. '_diff' → logprob: -4.552136421203613
    8. 'steps' → logprob: -4.927136421203613
    9. '_steps' → logprob: -4.927136421203613
    10. ' rotation' → logprob: -5.052136421203613

Token 220: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29576101899147034
    2. '           ' → logprob: -1.420760989189148
    3. 'if' → logprob: -4.5457611083984375
    4. ',' → logprob: -6.7957611083984375
    5. '            ' → logprob: -7.0457611083984375
    6. '
' → logprob: -7.5457611083984375
    7. ' =' → logprob: -7.7957611083984375
    8. '            
' → logprob: -8.170761108398438
    9. ' step' → logprob: -9.170761108398438
    10. 'diff' → logprob: -9.795761108398438

Token 221: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21731513738632202
    2. ' if' → logprob: -1.7173151969909668
    3. ',' → logprob: -4.842315196990967
    4. ' and' → logprob: -6.217315196990967
    5. '            ' → logprob: -6.467315196990967
    6. ' rotation' → logprob: -6.842315196990967
    7. 'if' → logprob: -6.967315196990967
    8. ' =' → logprob: -6.967315196990967
    9. '            
' → logprob: -7.592315196990967
    10. ' step' → logprob: -8.842314720153809

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18396803736686707
    2. ' if' → logprob: -1.8089680671691895
    3. 'if' → logprob: -5.5589680671691895
    4. ' rotation' → logprob: -9.183967590332031
    5. '            ' → logprob: -9.433967590332031
    6. ',' → logprob: -9.808967590332031
    7. ' step' → logprob: -10.183967590332031
    8. 'rotation' → logprob: -10.933967590332031
    9. '            
' → logprob: -11.058967590332031
    10. ' and' → logprob: -11.683967590332031

Token 223: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08801224082708359
    2. 'if' (adapté à ' if') → logprob: -2.588012218475342
    3. '           ' → logprob: -5.088012218475342
    4. ' rotation' → logprob: -6.963012218475342
    5. ' min' → logprob: -7.588012218475342
    6. ' steps' → logprob: -8.0880126953125
    7. 'min' → logprob: -8.2130126953125
    8. ' step' → logprob: -8.2130126953125
    9. 'steps' → logprob: -8.5880126953125
    10. 'rotation' → logprob: -8.9630126953125

Token 224: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.00023298001906368881
    2. 'diff' → logprob: -8.375232696533203
    3. '	diff' → logprob: -13.500232696533203
    4. '(diff' → logprob: -14.125232696533203
    5. ' dif' → logprob: -15.000232696533203
    6. ' ' → logprob: -18.000232696533203
    7. '_diff' → logprob: -18.125232696533203
    8. '    ' → logprob: -19.125232696533203
    9. 'Diff' → logprob: -19.500232696533203
    10. ' ' → logprob: -20.000232696533203

Token 225: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.20142094790935516
    2. '_right' → logprob: -1.7014209032058716
    3. '_' → logprob: -11.826420783996582
    4. '_le' → logprob: -16.5764217376709
    5. '_Left' → logprob: -16.7014217376709
    6. '_LEFT' → logprob: -17.0764217376709
    7. '_up' → logprob: -17.3264217376709
    8. ' _' → logprob: -17.3264217376709
    9. '_RIGHT' → logprob: -17.3264217376709
    10. '_Right' → logprob: -17.5764217376709

Token 226: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09009244292974472
    2. '<' → logprob: -2.840092420578003
    3. ' <=' → logprob: -3.715092420578003
    4. '<=' → logprob: -5.715092658996582
    5. ' ' → logprob: -9.590092658996582
    6. ' <
' → logprob: -12.715092658996582
    7. '<n' → logprob: -12.840092658996582
    8. '<
' → logprob: -13.965092658996582
    9. '<int' → logprob: -14.340092658996582
    10. '<len' → logprob: -14.465092658996582

Token 227: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.018150877207517624
    2. ' diff' → logprob: -4.018150806427002
    3. '	diff' → logprob: -14.26815128326416
    4. '   ' → logprob: -15.76815128326416
    5. ' ' → logprob: -16.643150329589844
    6. '10' → logprob: -16.768150329589844
    7. '(diff' → logprob: -17.643150329589844
    8. 'dif' → logprob: -18.018150329589844
    9. '  ' → logprob: -18.518150329589844
    10. '
' → logprob: -18.518150329589844

Token 228: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00020914296328555793
    2. '_left' → logprob: -9.250208854675293
    3. 'right' → logprob: -9.375208854675293
    4. 'ight' → logprob: -11.500208854675293
    5. '_' → logprob: -12.000208854675293
    6. 'Right' → logprob: -12.125208854675293
    7. '   ' → logprob: -14.000208854675293
    8. '_RIGHT' → logprob: -14.125208854675293
    9. ')' → logprob: -14.500208854675293
    10. ',right' → logprob: -14.750208854675293

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018225446343421936
    2. ':
' → logprob: -4.01822566986084
    3. '):' → logprob: -10.01822566986084
    4. ' :' → logprob: -11.64322566986084
    5. '):
' → logprob: -11.76822566986084
    6. '           ' → logprob: -12.01822566986084
    7. ':
' → logprob: -13.26822566986084
    8. ':

' → logprob: -13.39322566986084
    9. ',' → logprob: -13.51822566986084
    10. ' :
' → logprob: -14.01822566986084

Token 230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12161531299352646
    2. '           ' → logprob: -2.246615409851074
    3. '
' → logprob: -6.246615409851074
    4. '                
' → logprob: -6.621615409851074
    5. '            
' → logprob: -7.121615409851074
    6. '            ' → logprob: -7.121615409851074
    7. ':' → logprob: -7.121615409851074
    8. ' 
' → logprob: -7.621615409851074
    9. ',' → logprob: -7.996615409851074
    10. ':
' → logprob: -8.121615409851074

Token 231: ' rotate' (ID: 31987)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -1.027519702911377
    2. 'steps' → logprob: -1.777519702911377
    3. ' step' → logprob: -2.152519702911377
    4. ' direction' → logprob: -2.402519702911377
    5. ' rotation' → logprob: -2.527519702911377
    6. 'step' → logprob: -3.152519702911377
    7. ' diff' → logprob: -3.527519702911377
    8. 'rotation' → logprob: -3.777519702911377
    9. 'diff' → logprob: -4.277519702911377
    10. 'direction' → logprob: -4.402519702911377

Token 232: '_steps' (ID: 52120)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.3881077170372009
    2. '_left' → logprob: -2.2631077766418457
    3. '_direction' → logprob: -3.0131077766418457
    4. '_amt' → logprob: -3.1381077766418457
    5. ' =' → logprob: -3.5131077766418457
    6. '_dir' → logprob: -3.5131077766418457
    7. '_len' → logprob: -3.7631077766418457
    8. '_count' → logprob: -3.7631077766418457
    9. '_' → logprob: -5.388107776641846
    10. '_steps' → logprob: -5.388107776641846

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010378103470429778
    2. '=' → logprob: -6.87603759765625
    3. ' ' → logprob: -12.25103759765625
    4. ',' → logprob: -15.50103759765625
    5. '    ' → logprob: -17.00103759765625
    6. ' ,' → logprob: -17.12603759765625
    7. 's' → logprob: -17.62603759765625
    8. '   ' → logprob: -18.25103759765625
    9. ' =
' → logprob: -18.62603759765625
    10. ' ' → logprob: -18.62603759765625

Token 234: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.07889056205749512
    2. ' diff' → logprob: -2.578890562057495
    3. '	diff' → logprob: -14.328890800476074
    4. '               ' → logprob: -16.328889846801758
    5. '           ' → logprob: -16.703889846801758
    6. '            ' → logprob: -17.453889846801758
    7. '(diff' → logprob: -17.578889846801758
    8. '                ' → logprob: -18.203889846801758
    9. ' dif' → logprob: -18.328889846801758
    10. '_diff' → logprob: -18.453889846801758

Token 235: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -5.512236498361744e-07
    2. 'left' → logprob: -14.750000953674316
    3. '_LEFT' → logprob: -16.125
    4. '_Left' → logprob: -18.5
    5. '_right' → logprob: -18.75
    6. 'Left' → logprob: -18.75
    7. '_' → logprob: -19.0
    8. '_le' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. '	left' → logprob: -20.875

Token 236: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1856253743171692
    2. '
' → logprob: -2.1856253147125244
    3. '           ' → logprob: -3.1856253147125244
    4. '                
' → logprob: -4.6856255531311035
    5. '            
' → logprob: -5.9356255531311035
    6. ' for' → logprob: -7.1856255531311035
    7. ' 
' → logprob: -7.1856255531311035
    8. '#' → logprob: -7.8106255531311035
    9. ')' → logprob: -8.560625076293945
    10. ',' → logprob: -8.685625076293945

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1018957570195198
    2. '
' → logprob: -2.601895809173584
    3. '                
' → logprob: -3.976895809173584
    4. '           ' → logprob: -6.226895809173584
    5. '            
' → logprob: -6.601895809173584
    6. ' 
' → logprob: -8.476895332336426
    7. ' for' → logprob: -9.101895332336426
    8. ' else' → logprob: -9.601895332336426
    9. ' and' → logprob: -10.351895332336426
    10. ',' → logprob: -10.851895332336426

Token 238: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' (adapté à ' direction') → logprob: -0.002907465910539031
    2. 'for' → logprob: -6.5029072761535645
    3. ' direction' → logprob: -7.3779072761535645
    4. 'rotate' → logprob: -7.3779072761535645
    5. '#' → logprob: -9.752907752990723
    6. 'rotation' → logprob: -10.127907752990723
    7. '           ' → logprob: -11.127907752990723
    8. '   ' → logprob: -11.627907752990723
    9. 'dir' → logprob: -11.752907752990723
    10. 'dire' → logprob: -12.502907752990723

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.511048316955566
    4. ' ='' → logprob: -17.13604736328125
    5. ' =
' → logprob: -17.38604736328125
    6. '='' → logprob: -17.76104736328125
    7. ' ="' → logprob: -18.26104736328125
    8. ',' → logprob: -18.51104736328125
    9. ')' → logprob: -18.51104736328125
    10. 's' → logprob: -19.51104736328125

Token 240: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31211134791374207
    2. '1' → logprob: -1.5621113777160645
    3. '"' → logprob: -3.5621113777160645
    4. '-' → logprob: -4.4371113777160645
    5. ' '' → logprob: -4.5621113777160645
    6. ' ' → logprob: -5.1871113777160645
    7. 'left' → logprob: -6.8121113777160645
    8. ' "' → logprob: -8.187110900878906
    9. ''l' → logprob: -8.312110900878906
    10. ' -' → logprob: -8.562110900878906

Token 241: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -6.64708495605737e-05
    2. 'L' → logprob: -10.250066757202148
    3. ' left' → logprob: -11.500066757202148
    4. 'right' → logprob: -11.875066757202148
    5. '_left' → logprob: -12.000066757202148
    6. 'l' → logprob: -12.250066757202148
    7. 'Left' → logprob: -14.375066757202148
    8. ''' → logprob: -14.375066757202148
    9. 'LEFT' → logprob: -14.375066757202148
    10. '+' → logprob: -15.000066757202148

Token 242: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5760002136230469
    2. ''
' → logprob: -0.8260002136230469
    3. ''
' → logprob: -10.201000213623047
    4. ' '
' → logprob: -11.701000213623047
    5. ' '' → logprob: -11.826000213623047
    6. '   ' → logprob: -12.826000213623047
    7. '           ' → logprob: -13.076000213623047
    8. '       ' → logprob: -13.576000213623047
    9. ''

' → logprob: -14.326000213623047
    10. ')'
' → logprob: -15.326000213623047

Token 243: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005498053040355444
    2. 'else' → logprob: -5.880497932434082
    3. ' else' → logprob: -6.505497932434082
    4. '
' → logprob: -7.255497932434082
    5. '            
' → logprob: -7.880497932434082
    6. '<|end|>' → logprob: -10.380497932434082
    7. '       ' → logprob: -11.630497932434082
    8. '  
' → logprob: -11.630497932434082
    9. '\n' → logprob: -11.755497932434082
    10. '```' → logprob: -12.005497932434082

Token 244: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07069256901741028
    2. 'else' → logprob: -2.820692539215088
    3. ' else' → logprob: -5.070692539215088
    4. '
' → logprob: -6.195692539215088
    5. '            
' → logprob: -8.320693016052246
    6. '       ' → logprob: -10.195693016052246
    7. ':
' → logprob: -10.820693016052246
    8. ' 
' → logprob: -11.570693016052246
    9. '  
' → logprob: -11.695693016052246
    10. '    
' → logprob: -11.945693016052246

Token 245: ' rotating' (ID: 65441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30533766746520996
    2. ''
' → logprob: -2.68033766746521
    3. ''' → logprob: -2.80533766746521
    4. 'else' → logprob: -3.30533766746521
    5. '               ' → logprob: -3.68033766746521
    6. '\n' → logprob: -3.80533766746521
    7. ' else' → logprob: -4.305337905883789
    8. '
' → logprob: -4.430337905883789
    9. ' 
' → logprob: -4.680337905883789
    10. '                
' → logprob: -5.430337905883789

Token 246: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3957085609436035
    2. ' left' → logprob: -1.1457085609436035
    3. 'right' → logprob: -5.6457085609436035
    4. ' the' → logprob: -6.5207085609436035
    5. '_left' → logprob: -6.5207085609436035
    6. 'the' → logprob: -7.0207085609436035
    7. ' right' → logprob: -8.020708084106445
    8. ' '' → logprob: -8.895708084106445
    9. 'block' → logprob: -8.895708084106445
    10. ''' → logprob: -9.145708084106445

Token 247: ' increases' (ID: 21073)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00735530536621809
    2. 'else' → logprob: -5.382355213165283
    3. ' else' → logprob: -6.132355213165283
    4. '       ' → logprob: -9.007355690002441
    5. '<|end|>' → logprob: -9.132355690002441
    6. ' for' → logprob: -9.632355690002441
    7. '\n' → logprob: -9.882355690002441
    8. '            
' → logprob: -9.882355690002441
    9. 'elif' → logprob: -10.382355690002441
    10. '               ' → logprob: -10.882355690002441

Token 248: ' the' (ID: 290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.08863852918148041
    2. ' current' → logprob: -2.8386385440826416
    3. 'the' → logprob: -5.0886383056640625
    4. 'digits' → logprob: -5.2136383056640625
    5. ')' → logprob: -5.3386383056640625
    6. ' the' → logprob: -5.9636383056640625
    7. 'numbers' → logprob: -6.3386383056640625
    8. '<|end|>' → logprob: -7.0886383056640625
    9. '[current' → logprob: -7.2136383056640625
    10. 'd' → logprob: -7.3386383056640625

Token 249: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4059690237045288
    2. 'numbers' → logprob: -1.5309690237045288
    3. 'digits' → logprob: -1.6559690237045288
    4. 'number' → logprob: -1.6559690237045288
    5. 'value' → logprob: -3.4059691429138184
    6. 'digit' → logprob: -3.5309691429138184
    7. ' numbers' → logprob: -3.7809691429138184
    8. 'd' → logprob: -3.9059691429138184
    9. ' current' → logprob: -4.030969142913818
    10. ' number' → logprob: -4.655969142913818

Token 250: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009214677847921848
    2. '
' → logprob: -5.134214878082275
    3. '            
' → logprob: -6.509214878082275
    4. 'else' → logprob: -7.509214878082275
    5. ' else' → logprob: -7.884214878082275
    6. '\n' → logprob: -7.884214878082275
    7. ' 
' → logprob: -8.634214401245117
    8. '                
' → logprob: -9.884214401245117
    9. '    
' → logprob: -10.384214401245117
    10. '  
' → logprob: -10.509214401245117

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005127615295350552
    2. 'else' → logprob: -5.505127429962158
    3. ' else' → logprob: -7.630127429962158
    4. '
' → logprob: -8.005127906799316
    5. '            
' → logprob: -8.880127906799316
    6. '\n' → logprob: -10.005127906799316
    7. '       ' → logprob: -11.005127906799316
    8. ' 
' → logprob: -12.505127906799316
    9. '```' → logprob: -12.505127906799316
    10. '    
' → logprob: -12.755127906799316

Token 252: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13664434850215912
    2. ' else' → logprob: -2.2616443634033203
    3. '       ' → logprob: -3.7616443634033203
    4. '           ' → logprob: -8.26164436340332
    5. '	else' → logprob: -10.76164436340332
    6. '
' → logprob: -11.88664436340332
    7. '   ' → logprob: -12.76164436340332
    8. ':
' → logprob: -13.51164436340332
    9. '```' → logprob: -14.13664436340332
    10. '        ' → logprob: -14.63664436340332

Token 253: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.130965918302536
    2. ':' → logprob: -2.1309659481048584
    3. '               ' → logprob: -5.630965709686279
    4. '           ' → logprob: -8.505966186523438
    5. ' :
' → logprob: -8.755966186523438
    6. '{
' → logprob: -10.505966186523438
    7. ' :' → logprob: -11.255966186523438
    8. '):
' → logprob: -11.755966186523438
    9. '            ' → logprob: -11.880966186523438
    10. ' {
' → logprob: -12.130966186523438

Token 254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4088476598262787
    2. ' rotate' → logprob: -1.408847689628601
    3. 'rotate' → logprob: -2.4088475704193115
    4. '           ' → logprob: -7.158847808837891
    5. 'diff' → logprob: -8.28384780883789
    6. '             ' → logprob: -10.03384780883789
    7. '              ' → logprob: -10.15884780883789
    8. '                ' → logprob: -10.40884780883789
    9. ' diff' → logprob: -10.53384780883789
    10. '            ' → logprob: -10.78384780883789

Token 255: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' (adapté à ' rotate') → logprob: -0.22978678345680237
    2. ' rotate' → logprob: -1.60478675365448
    3. 'direction' → logprob: -6.4797868728637695
    4. ' direction' → logprob: -6.4797868728637695
    5. '               ' → logprob: -6.8547868728637695
    6. 'diff' → logprob: -9.35478687286377
    7. 'rot' → logprob: -10.10478687286377
    8. '           ' → logprob: -11.10478687286377
    9. '   ' → logprob: -11.22978687286377
    10. '                   ' → logprob: -11.60478687286377

Token 256: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -4.0484450437361374e-05
    2. 'steps' → logprob: -11.375040054321289
    3. '_' → logprob: -11.500040054321289
    4. 's' → logprob: -12.125040054321289
    5. '_direction' → logprob: -12.125040054321289
    6. '_right' → logprob: -12.750040054321289
    7. 'direction' → logprob: -13.500040054321289
    8. 'd' → logprob: -13.875040054321289
    9. ' _' → logprob: -14.375040054321289
    10. 'Steps' → logprob: -14.625040054321289

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.701414108276367
    4. ',' → logprob: -17.951414108276367
    5. '   ' → logprob: -18.451414108276367
    6. ' =
' → logprob: -19.451414108276367
    7. '＝' → logprob: -20.451414108276367
    8. 's' → logprob: -20.701414108276367
    9. ')' → logprob: -20.826414108276367
    10. '=
' → logprob: -21.076414108276367

Token 258: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03804149478673935
    2. ' diff' → logprob: -3.288041591644287
    3. '	diff' → logprob: -17.038042068481445
    4. '(diff' → logprob: -19.163042068481445
    5. '_diff' → logprob: -19.663042068481445
    6. '   ' → logprob: -19.663042068481445
    7. ' dif' → logprob: -19.788042068481445
    8. 'd' → logprob: -20.038042068481445
    9. 'dif' → logprob: -20.288042068481445
    10. ''' → logprob: -20.663042068481445

Token 259: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -9.610702363715973e-06
    2. 'right' → logprob: -11.625009536743164
    3. '_' → logprob: -14.500009536743164
    4. ' _' → logprob: -16.500009536743164
    5. 'Right' → logprob: -17.000009536743164
    6. '_RIGHT' → logprob: -17.125009536743164
    7. 's' → logprob: -17.875009536743164
    8. '_left' → logprob: -18.125009536743164
    9. '```' → logprob: -19.125009536743164
    10. '_
' → logprob: -19.250009536743164

Token 260: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022437504958361387
    2. '
' → logprob: -6.252243518829346
    3. '           ' → logprob: -9.002243995666504
    4. 'direction' → logprob: -9.877243995666504
    5. '       ' → logprob: -10.002243995666504
    6. '                ' → logprob: -10.627243995666504
    7. '                
' → logprob: -11.002243995666504
    8. '                   ' → logprob: -11.252243995666504
    9. ' direction' → logprob: -11.502243995666504
    10. '              ' → logprob: -11.627243995666504

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003373694489710033
    2. 'direction' → logprob: -8.625337600708008
    3. ' direction' → logprob: -9.000337600708008
    4. '           ' → logprob: -11.000337600708008
    5. '                ' → logprob: -12.625337600708008
    6. '              ' → logprob: -13.000337600708008
    7. '       ' → logprob: -13.125337600708008
    8. '                   ' → logprob: -13.250337600708008
    9. '
' → logprob: -13.500337600708008
    10. ',' → logprob: -13.500337600708008

Token 262: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' (adapté à ' direction') → logprob: -0.5760104656219482
    2. ' direction' → logprob: -0.8260104656219482
    3. '               ' → logprob: -9.576010704040527
    4. '           ' → logprob: -14.451010704040527
    5. '(direction' → logprob: -15.201010704040527
    6. '   ' → logprob: -15.701010704040527
    7. '                   ' → logprob: -15.701010704040527
    8. '.direction' → logprob: -15.826010704040527
    9. '方向' → logprob: -16.07600975036621
    10. '                ' → logprob: -16.45100975036621

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. '='' → logprob: -15.436967849731445
    4. ' ='' → logprob: -15.686967849731445
    5. ' ' → logprob: -17.311967849731445
    6. 's' → logprob: -19.061967849731445
    7. ' =
' → logprob: -19.186967849731445
    8. '<|end|>' → logprob: -19.186967849731445
    9. ',' → logprob: -19.936967849731445
    10. '="' → logprob: -20.311967849731445

Token 264: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04859054833650589
    2. ' '' → logprob: -3.048590660095215
    3. '"' → logprob: -13.298590660095215
    4. ' right' → logprob: -14.423590660095215
    5. ' ' → logprob: -14.548590660095215
    6. ''s' → logprob: -15.548590660095215
    7. 'right' → logprob: -15.923590660095215
    8. ' ' → logprob: -16.1735897064209
    9. '`' → logprob: -17.4235897064209
    10. ' "' → logprob: -18.0485897064209

Token 265: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10023978352546692
    2. ''' → logprob: -2.3502397537231445
    3. ' right' → logprob: -10.350239753723145
    4. ''r' → logprob: -14.225239753723145
    5. '	right' → logprob: -15.350239753723145
    6. '"' → logprob: -15.975239753723145
    7. 'r' → logprob: -16.85024070739746
    8. '[right' → logprob: -17.10024070739746
    9. ':right' → logprob: -17.35024070739746
    10. ' '' → logprob: -17.35024070739746

Token 266: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010417404118925333
    2. ''
' → logprob: -7.001041889190674
    3. '           ' → logprob: -9.001041412353516
    4. '"' → logprob: -13.001041412353516
    5. '       ' → logprob: -13.626041412353516
    6. ')' → logprob: -13.751041412353516
    7. '')' → logprob: -14.251041412353516
    8. ''#' → logprob: -14.626041412353516
    9. ''
' → logprob: -14.876041412353516
    10. '':
' → logprob: -15.501041412353516

Token 267: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13000035285949707
    2. '           ' → logprob: -2.505000352859497
    3. '            
' → logprob: -3.255000352859497
    4. '\n' → logprob: -7.130000114440918
    5. '  
' → logprob: -8.505000114440918
    6. '    
' → logprob: -8.630000114440918
    7. '        
' → logprob: -9.255000114440918
    8. ' 
' → logprob: -9.505000114440918
    9. '
' → logprob: -9.880000114440918
    10. '           
' → logprob: -10.005000114440918

Token 268: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.58149254322052
    2. '            
' → logprob: -1.45649254322052
    3. '           ' → logprob: -1.58149254322052
    4. '           
' → logprob: -6.9564924240112305
    5. '
            
' → logprob: -8.08149242401123
    6. '        
' → logprob: -8.70649242401123
    7. ' 
' → logprob: -9.08149242401123
    8. '  
' → logprob: -9.08149242401123
    9. '#' → logprob: -9.45649242401123
    10. '

' → logprob: -9.70649242401123

Token 269: ' rotating' (ID: 65441)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9033530354499817
    2. 'right' → logprob: -1.028352975845337
    3. ' right' → logprob: -1.528352975845337
    4. ' '' → logprob: -4.028353214263916
    5. ' rotating' → logprob: -6.778353214263916
    6. 'rotate' → logprob: -8.403352737426758
    7. 'rot' → logprob: -8.653352737426758
    8. ''
' → logprob: -8.903352737426758
    9. ''r' → logprob: -9.528352737426758
    10. ' rotate' → logprob: -9.778352737426758

Token 270: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.31575801968574524
    2. 'right' → logprob: -1.3157579898834229
    3. '<|end|>' → logprob: -6.565758228302002
    4. '_right' → logprob: -6.940758228302002
    5. '	right' → logprob: -10.690757751464844
    6. ' '' → logprob: -10.690757751464844
    7. ' ' → logprob: -11.315757751464844
    8. 'left' → logprob: -11.565757751464844
    9. ''' → logprob: -11.815757751464844
    10. '_' → logprob: -11.940757751464844

Token 271: ' decreases' (ID: 70943)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3764367401599884
    2. '<|end|>' → logprob: -1.376436710357666
    3. '
' → logprob: -4.001436710357666
    4. '            
' → logprob: -4.251436710357666
    5. '       ' → logprob: -4.751436710357666
    6. '<|end|>' → logprob: -5.376436710357666
    7. ' is' → logprob: -6.626436710357666
    8. ')' → logprob: -6.626436710357666
    9. '               ' → logprob: -6.626436710357666
    10. '  
' → logprob: -6.751436710357666

Token 272: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04374684765934944
    2. 'the' → logprob: -3.1687469482421875
    3. '<|end|>' → logprob: -7.2937469482421875
    4. ' current' → logprob: -10.168746948242188
    5. 'current' → logprob: -11.793746948242188
    6. ' ' → logprob: -11.918746948242188
    7. ')' → logprob: -12.293746948242188
    8. '<|end|>' → logprob: -12.793746948242188
    9. ' numbers' → logprob: -13.918746948242188
    10. '_the' → logprob: -14.168746948242188

Token 273: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.14285136759281158
    2. 'number' → logprob: -2.0178513526916504
    3. ' current' → logprob: -9.642851829528809
    4. ' ' → logprob: -10.267851829528809
    5. 'current' → logprob: -11.017851829528809
    6. ' value' → logprob: -11.267851829528809
    7. 'value' → logprob: -11.767851829528809
    8. ' numbers' → logprob: -11.767851829528809
    9. '_number' → logprob: -11.892851829528809
    10. ''' → logprob: -12.392851829528809

Token 274: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8160529136657715
    2. '
' → logprob: -1.0660529136657715
    3. '            
' → logprob: -1.8160529136657715
    4. '<|end|>' → logprob: -3.1910529136657715
    5. '<|end|>' → logprob: -5.5660529136657715
    6. '\n' → logprob: -6.5660529136657715
    7. '  
' → logprob: -6.8160529136657715
    8. ' 
' → logprob: -7.4410529136657715
    9. ',' → logprob: -7.4410529136657715
    10. ':
' → logprob: -8.19105339050293

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05422790348529816
    2. '            
' → logprob: -3.304227828979492
    3. '
' → logprob: -4.179227828979492
    4. '           
' → logprob: -8.929227828979492
    5. ' 
' → logprob: -9.054227828979492
    6. '  
' → logprob: -9.179227828979492
    7. '    
' → logprob: -9.429227828979492
    8. '        
' → logprob: -9.429227828979492
    9. '#' → logprob: -9.429227828979492
    10. '          ' → logprob: -10.554227828979492

Token 276: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5234882235527039
    2. '           ' → logprob: -1.1484882831573486
    3. 'j' → logprob: -3.0234882831573486
    4. 'end' → logprob: -3.5234882831573486
    5. 'length' → logprob: -5.2734880447387695
    6. ' #' → logprob: -5.8984880447387695
    7. ' j' → logprob: -7.0234880447387695
    8. 'for' → logprob: -7.1484880447387695
    9. 'block' → logprob: -7.3984880447387695
    10. 'start' → logprob: -7.8984880447387695

Token 277: ' Find' (ID: 9764)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44646671414375305
    2. 'for' → logprob: -1.1964666843414307
    3. 'end' → logprob: -4.32146692276001
    4. 'length' → logprob: -4.44646692276001
    5. '           ' → logprob: -4.69646692276001
    6. ' for' → logprob: -4.82146692276001
    7. 'if' → logprob: -4.94646692276001
    8. 'j' → logprob: -5.69646692276001
    9. ' #' → logprob: -5.69646692276001
    10. 'block' → logprob: -7.82146692276001

Token 278: ' how' (ID: 1495)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14015112817287445
    2. ' the' → logprob: -2.890151023864746
    3. 'j' → logprob: -3.140151023864746
    4. '   ' → logprob: -4.390151023864746
    5. ' end' → logprob: -4.390151023864746
    6. 'end' → logprob: -5.390151023864746
    7. 'the' → logprob: -7.515151023864746
    8. ' length' → logprob: -7.515151023864746
    9. ' last' → logprob: -8.015151023864746
    10. '#' → logprob: -8.515151023864746

Token 279: ' far' (ID: 4150)
  Prédit: ' far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' far' → logprob: -0.4854186773300171
    2. 'far' → logprob: -0.9854186773300171
    3. '   ' → logprob: -4.735418796539307
    4. '#' → logprob: -7.610418796539307
    5. 'long' → logprob: -7.610418796539307
    6. '           ' → logprob: -7.735418796539307
    7. 'f' → logprob: -8.360418319702148
    8. 'many' → logprob: -8.360418319702148
    9. '```' → logprob: -8.485418319702148
    10. ' many' → logprob: -9.235418319702148

Token 280: ' this' (ID: 495)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.0411550998687744
    2. ' far' → logprob: -1.1661550998687744
    3. ' the' → logprob: -2.2911550998687744
    4. 'we' → logprob: -2.7911550998687744
    5. 'j' → logprob: -2.7911550998687744
    6. 'far' → logprob: -3.2911550998687744
    7. ' j' → logprob: -3.6661550998687744
    8. 'the' → logprob: -4.041154861450195
    9. '   ' → logprob: -4.416154861450195
    10. 'right' → logprob: -5.166154861450195

Token 281: ' rotation' (ID: 23769)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.3088621199131012
    2. ' contiguous' → logprob: -2.1838622093200684
    3. ' can' → logprob: -2.9338622093200684
    4. ' rotation' → logprob: -3.1838622093200684
    5. 'block' → logprob: -4.058862209320068
    6. ' segment' → logprob: -4.433862209320068
    7. 'rotation' → logprob: -5.058862209320068
    8. ' i' → logprob: -5.308862209320068
    9. ' continuous' → logprob: -5.683862209320068
    10. '#' → logprob: -6.683862209320068

Token 282: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7235034704208374
    2. 'can' → logprob: -0.9735034704208374
    3. ' goes' → logprob: -3.598503589630127
    4. 'extends' → logprob: -3.598503589630127
    5. 'go' → logprob: -3.848503589630127
    6. 'should' → logprob: -3.973503589630127
    7. ' extends' → logprob: -4.223503589630127
    8. ' should' → logprob: -4.848503589630127
    9. 'block' → logprob: -5.098503589630127
    10. ' block' → logprob: -5.848503589630127

Token 283: ' extend' (ID: 20239)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.2660147249698639
    2. 'extend' → logprob: -1.7660146951675415
    3. 'reach' → logprob: -3.391014814376831
    4. ' go' → logprob: -4.016014575958252
    5. ' extend' → logprob: -5.016014575958252
    6. ' reach' → logprob: -6.016014575958252
    7. 'stretch' → logprob: -7.766014575958252
    8. ' stretch' → logprob: -7.891014575958252
    9. 'continue' → logprob: -8.26601505279541
    10. 'apply' → logprob: -8.64101505279541

Token 284: ' to' (ID: 316)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2865188717842102
    2. 'j' → logprob: -1.7865188121795654
    3. '           ' → logprob: -2.5365188121795654
    4. ' to' → logprob: -6.9115190505981445
    5. '            
' → logprob: -8.536519050598145
    6. '
' → logprob: -8.911519050598145
    7. ' for' → logprob: -9.286519050598145
    8. ',j' → logprob: -9.286519050598145
    9. ' in' → logprob: -9.536519050598145
    10. '   ' → logprob: -9.661519050598145

Token 285: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2076835334300995
    2. ' j' → logprob: -2.332683563232422
    3. 'j' → logprob: -2.832683563232422
    4. ' k' → logprob: -4.207683563232422
    5. 'k' → logprob: -4.707683563232422
    6. 'the' → logprob: -5.457683563232422
    7. 'i' → logprob: -7.207683563232422
    8. ' i' → logprob: -7.707683563232422
    9. ' include' → logprob: -7.832683563232422
    10. ' right' → logprob: -7.957683563232422

Token 286: ' right' (ID: 1849)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.027768198400735855
    2. 'right' → logprob: -3.902768135070801
    3. ' right' → logprob: -5.652768135070801
    4. 'end' → logprob: -5.902768135070801
    5. ' end' → logprob: -7.527768135070801
    6. ' k' → logprob: -8.1527681350708
    7. 'next' → logprob: -10.0277681350708
    8. 'while' → logprob: -10.9027681350708
    9. '#' → logprob: -11.4027681350708
    10. 'for' → logprob: -11.4027681350708

Token 287: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47747913002967834
    2. ' j' → logprob: -1.477479100227356
    3. 'j' → logprob: -1.977479100227356
    4. '
' → logprob: -5.352478981018066
    5. ',' → logprob: -5.977478981018066
    6. ',j' → logprob: -6.727478981018066
    7. '            
' → logprob: -7.102478981018066
    8. 'end' → logprob: -7.602478981018066
    9. ' =' → logprob: -7.602478981018066
    10. ':' → logprob: -8.102478981018066

Token 288: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4623914659023285
    2. '           ' → logprob: -1.4623914957046509
    3. ' j' → logprob: -2.0873913764953613
    4. 'end' → logprob: -4.337391376495361
    5. ' end' → logprob: -7.587391376495361
    6. '   ' → logprob: -8.96239185333252
    7. '            
' → logprob: -9.33739185333252
    8. '```' → logprob: -9.33739185333252
    9. ' for' → logprob: -9.46239185333252
    10. '
' → logprob: -9.71239185333252

Token 289: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10802516341209412
    2. 'end' → logprob: -2.608025074005127
    3. ' j' → logprob: -3.983025074005127
    4. '   ' → logprob: -4.733025074005127
    5. ' end' → logprob: -7.233025074005127
    6. 'extend' → logprob: -7.983025074005127
    7. 'length' → logprob: -9.733025550842285
    8. ' extend' → logprob: -10.108025550842285
    9. 'extent' → logprob: -10.233025550842285
    10. 'max' → logprob: -10.483025550842285

Token 290: ' All' (ID: 2545)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.41020283102989197
    2. 'end' → logprob: -1.2852028608322144
    3. ' j' → logprob: -3.660202741622925
    4. '   ' → logprob: -3.785202741622925
    5. 'extend' → logprob: -4.910202980041504
    6. ' end' → logprob: -6.285202980041504
    7. ' extend' → logprob: -7.410202980041504
    8. 'extent' → logprob: -7.660202980041504
    9. 'max' → logprob: -7.785202980041504
    10. 'length' → logprob: -8.285202980041504

Token 291: ' adjacent' (ID: 39069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.32185330986976624
    2. ' j' → logprob: -1.4468532800674438
    3. 'd' → logprob: -4.696853160858154
    4. ' d' → logprob: -4.821853160858154
    5. ' for' → logprob: -4.946853160858154
    6. 'for' → logprob: -5.071853160858154
    7. '   ' → logprob: -6.196853160858154
    8. ' positions' → logprob: -6.571853160858154
    9. 'while' → logprob: -7.321853160858154
    10. ' ' → logprob: -7.446853160858154

Token 292: ' d' (ID: 272)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7027037143707275
    2. ' j' → logprob: -0.9527037143707275
    3. 'd' → logprob: -2.3277037143707275
    4. ' d' → logprob: -3.9527037143707275
    5. 'while' → logprob: -7.827703475952148
    6. ' positions' → logprob: -8.202703475952148
    7. 'positions' → logprob: -8.202703475952148
    8. 'indices' → logprob: -8.702703475952148
    9. '=' → logprob: -8.702703475952148
    10. '   ' → logprob: -9.202703475952148

Token 293: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.07626562565565109
    2. '   ' → logprob: -3.701265573501587
    3. 'i' → logprob: -4.076265811920166
    4. 'ial' → logprob: -4.951265811920166
    5. ' i' → logprob: -5.326265811920166
    6. ' d' → logprob: -5.451265811920166
    7. '=' → logprob: -6.076265811920166
    8. 'ef' → logprob: -6.451265811920166
    9. 'd' → logprob: -6.576265811920166
    10. '       ' → logprob: -6.701265811920166

Token 294: ' that' (ID: 484)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.169142246246338
    2. ' are' → logprob: -1.419142246246338
    3. '           ' → logprob: -2.294142246246338
    4. ' j' → logprob: -2.419142246246338
    5. ' that' → logprob: -2.669142246246338
    6. 'j' → logprob: -3.669142246246338
    7. 'while' → logprob: -4.169142246246338
    8. ',' → logprob: -4.419142246246338
    9. ' in' → logprob: -4.544142246246338
    10. '=' → logprob: -4.544142246246338

Token 295: ' require' (ID: 1841)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8907853364944458
    2. ' current' → logprob: -1.3907853364944458
    3. ' can' → logprob: -2.3907852172851562
    4. ' match' → logprob: -2.8907852172851562
    5. 'match' → logprob: -3.1407852172851562
    6. 'have' → logprob: -3.1407852172851562
    7. ' have' → logprob: -3.3907852172851562
    8. 'can' → logprob: -3.6407852172851562
    9. 'need' → logprob: -4.515785217285156
    10. ' are' → logprob: -5.140785217285156

Token 296: ' rotation' (ID: 23769)
  Prédit: ' rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotation' → logprob: -0.3226556181907654
    2. 'rotation' → logprob: -1.5726556777954102
    3. ' adjustment' → logprob: -3.19765567779541
    4. 'the' → logprob: -4.07265567779541
    5. ' the' → logprob: -4.69765567779541
    6. 'adjust' → logprob: -7.69765567779541
    7. ' change' → logprob: -8.44765567779541
    8. 'a' → logprob: -9.07265567779541
    9. 'change' → logprob: -9.19765567779541
    10. ' a' → logprob: -9.19765567779541

Token 297: ' by' (ID: 656)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4418598413467407
    2. 'while' → logprob: -2.066859722137451
    3. '           ' → logprob: -2.191859722137451
    4. 'and' → logprob: -2.316859722137451
    5. ' at' → logprob: -2.691859722137451
    6. ' to' → logprob: -2.816859722137451
    7. ' j' → logprob: -2.816859722137451
    8. ' while' → logprob: -3.066859722137451
    9. 'j' → logprob: -3.316859722137451
    10. ' are' → logprob: -4.066859722137451

Token 298: ' the' (ID: 290)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.13091833889484406
    2. 'the' → logprob: -2.755918264389038
    3. ' rotate' → logprob: -3.130918264389038
    4. ' the' → logprob: -4.380918502807617
    5. 'this' → logprob: -6.630918502807617
    6. ' this' → logprob: -7.380918502807617
    7. 'that' → logprob: -8.505918502807617
    8. ' ' → logprob: -8.505918502807617
    9. 'same' → logprob: -9.005918502807617
    10. ' that' → logprob: -9.380918502807617

Token 299: ' same' (ID: 2684)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.03192587196826935
    2. 'same' → logprob: -3.781925916671753
    3. ' rotate' → logprob: -5.281925678253174
    4. '
' → logprob: -6.531925678253174
    5. ' same' → logprob: -7.281925678253174
    6. 'current' → logprob: -7.281925678253174
    7. 'direction' → logprob: -8.906926155090332
    8. 'next' → logprob: -9.281926155090332
    9. '```' → logprob: -9.281926155090332
    10. '.rotate' → logprob: -9.906926155090332

Token 300: ' steps' (ID: 10331)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.1054643392562866
    2. 'direction' → logprob: -1.3554643392562866
    3. ' direction' → logprob: -1.4804643392562866
    4. ' amount' → logprob: -1.8554643392562866
    5. 'steps' → logprob: -5.105464458465576
    6. 'rotate' → logprob: -5.105464458465576
    7. ' steps' → logprob: -5.730464458465576
    8. 'number' → logprob: -6.230464458465576
    9. 'distance' → logprob: -6.355464458465576
    10. ' number' → logprob: -6.480464458465576

Token 301: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08628661185503006
    2. 'and' → logprob: -3.4612865447998047
    3. ' in' → logprob: -4.086286544799805
    4. ' to' → logprob: -4.711286544799805
    5. '           ' → logprob: -4.836286544799805
    6. ' or' → logprob: -5.086286544799805
    7. ' will' → logprob: -5.836286544799805
    8. ' are' → logprob: -6.586286544799805
    9. ' must' → logprob: -6.836286544799805
    10. '<|end|>' → logprob: -6.961286544799805

Token 302: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2981734871864319
    2. 'this' → logprob: -2.298173427581787
    3. ' the' → logprob: -3.173173427581787
    4. 'that' → logprob: -3.298173427581787
    5. 'direction' → logprob: -3.423173427581787
    6. ' this' → logprob: -4.048173427581787
    7. ' that' → logprob: -4.548173427581787
    8. ' direction' → logprob: -5.423173427581787
    9. 'right' → logprob: -5.423173427581787
    10. 'range' → logprob: -6.048173427581787

Token 303: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.2411258965730667
    2. 'if' → logprob: -2.7411258220672607
    3. 'direction' → logprob: -3.1161258220672607
    4. 'current' → logprob: -3.7411258220672607
    5. 'range' → logprob: -3.7411258220672607
    6. 'rotation' → logprob: -4.61612606048584
    7. ' same' → logprob: -4.61612606048584
    8. 'while' → logprob: -4.61612606048584
    9. 'desired' → logprob: -5.61612606048584
    10. 'needed' → logprob: -5.99112606048584

Token 304: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.002191064180806279
    2. ' direction' → logprob: -6.127191066741943
    3. '
' → logprob: -12.627190589904785
    4. '```' → logprob: -14.252190589904785
    5. '_direction' → logprob: -14.377190589904785
    6. 'rotation' → logprob: -14.877190589904785
    7. '(direction' → logprob: -15.127190589904785
    8. '   ' → logprob: -15.377190589904785
    9. '方向' → logprob: -15.377190589904785
    10. '#' → logprob: -16.5021915435791

Token 305: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2262466549873352
    2. ' j' → logprob: -2.1012465953826904
    3. ' will' → logprob: -3.9762465953826904
    4. 'j' → logprob: -3.9762465953826904
    5. ',' → logprob: -4.7262468338012695
    6. ' to' → logprob: -4.8512468338012695
    7. ' and' → logprob: -4.9762468338012695
    8. ' while' → logprob: -5.4762468338012695
    9. ' are' → logprob: -5.7262468338012695
    10. ' can' → logprob: -5.8512468338012695

Token 306: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0148707628250122
    2. ' to' → logprob: -1.8898707628250122
    3. ' for' → logprob: -2.0148706436157227
    4. '           ' → logprob: -2.5148706436157227
    5. ' will' → logprob: -2.7648706436157227
    6. ' and' → logprob: -2.8898706436157227
    7. ' in' → logprob: -3.1398706436157227
    8. ' are' → logprob: -3.5148706436157227
    9. 'while' → logprob: -4.139870643615723
    10. '       ' → logprob: -4.639870643615723

Token 307: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.06209977716207504
    2. 'end' → logprob: -3.5620996952056885
    3. ' j' → logprob: -4.187099933624268
    4. '           ' → logprob: -4.187099933624268
    5. '   ' → logprob: -7.062099933624268
    6. ' end' → logprob: -8.06209945678711
    7. '```' → logprob: -9.81209945678711
    8. 'extend' → logprob: -10.06209945678711
    9. 'length' → logprob: -10.31209945678711
    10. '       ' → logprob: -11.06209945678711

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698711454868317
    2. ' =' → logprob: -2.1269872188568115
    3. '=i' → logprob: -9.75198745727539
    4. ' ' → logprob: -15.62698745727539
    5. '=j' → logprob: -15.75198745727539
    6. '=int' → logprob: -16.37698745727539
    7. ',' → logprob: -16.37698745727539
    8. '=}' → logprob: -16.50198745727539
    9. ')' → logprob: -16.75198745727539
    10. '=index' → logprob: -17.12698745727539

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.625036239624023
    4. '	i' → logprob: -19.750036239624023
    5. '```' → logprob: -20.500036239624023
    6. 'k' → logprob: -20.625036239624023
    7. '_i' → logprob: -21.125036239624023
    8. '=i' → logprob: -21.250036239624023
    9. 'I' → logprob: -21.625036239624023
    10. ')i' → logprob: -21.750036239624023

Token 310: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02696647122502327
    2. ' +' → logprob: -3.6519665718078613
    3. '<|end|>' → logprob: -8.151966094970703
    4. '
' → logprob: -8.776966094970703
    5. '<|end|>' → logprob: -9.151966094970703
    6. 'while' → logprob: -9.776966094970703
    7. '+
' → logprob: -11.151966094970703
    8. '1' → logprob: -11.276966094970703
    9. '+j' → logprob: -11.526966094970703
    10. ' while' → logprob: -11.901966094970703

Token 311: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41716963052749634
    2. '
' → logprob: -1.6671695709228516
    3. 'while' → logprob: -2.6671695709228516
    4. ' +' → logprob: -2.9171695709228516
    5. ' while' → logprob: -3.6671695709228516
    6. '           ' → logprob: -6.417169570922852
    7. '1' → logprob: -8.292169570922852
    8. '```' → logprob: -8.292169570922852
    9. '<|end|>' → logprob: -8.542169570922852
    10. '+
' → logprob: -8.542169570922852

Token 312: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4743172824382782
    2. ' while' → logprob: -0.9743173122406006
    3. 'j' → logprob: -8.84931755065918
    4. ' j' → logprob: -9.97431755065918
    5. 'k' → logprob: -10.84931755065918
    6. '           ' → logprob: -11.22431755065918
    7. ' k' → logprob: -12.22431755065918
    8. '10' → logprob: -12.34931755065918
    9. '```' → logprob: -12.97431755065918
    10. '
' → logprob: -13.09931755065918

Token 313: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07889661937952042
    2. ' j' → logprob: -2.5788965225219727
    3. '   ' → logprob: -12.453896522521973
    4. '(j' → logprob: -13.703896522521973
    5. ' ' → logprob: -14.703896522521973
    6. '	j' → logprob: -14.953896522521973
    7. '(' → logprob: -15.078896522521973
    8. ' (' → logprob: -15.078896522521973
    9. 'k' → logprob: -15.953896522521973
    10. '$j' → logprob: -16.07889747619629

Token 314: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28460219502449036
    2. '<' → logprob: -1.409602165222168
    3. '+' → logprob: -6.034602165222168
    4. ' +' → logprob: -7.159602165222168
    5. '<len' → logprob: -8.534602165222168
    6. '<n' → logprob: -10.409602165222168
    7. '+k' → logprob: -11.284602165222168
    8. 'k' → logprob: -12.034602165222168
    9. '<K' → logprob: -12.159602165222168
    10. ' ' → logprob: -12.159602165222168

Token 315: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009115827269852161
    2. ' k' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. ' ' → logprob: -18.000911712646484
    5. '	k' → logprob: -18.625911712646484
    6. '
' → logprob: -19.500911712646484
    7. '```' → logprob: -19.500911712646484
    8. '_k' → logprob: -19.750911712646484
    9. ' к' → logprob: -20.125911712646484
    10. '  ' → logprob: -20.250911712646484

Token 316: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868747651576996
    2. 'and' → logprob: -1.136874794960022
    3. '-' → logprob: -13.38687515258789
    4. '   ' → logprob: -14.01187515258789
    5. ' ' → logprob: -14.63687515258789
    6. ' -' → logprob: -15.13687515258789
    7. '    ' → logprob: -15.88687515258789
    8. '           ' → logprob: -16.63687515258789
    9. '      ' → logprob: -16.76187515258789
    10. '          ' → logprob: -16.76187515258789

Token 317: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0045585306361317635
    2. '               ' → logprob: -5.504558563232422
    3. 'and' → logprob: -8.379558563232422
    4. '           ' → logprob: -8.754558563232422
    5. ' ' → logprob: -10.129558563232422
    6. '                
' → logprob: -11.754558563232422
    7. '       ' → logprob: -11.879558563232422
    8. '<|end|>' → logprob: -12.129558563232422
    9. '   ' → logprob: -12.254558563232422
    10. '                ' → logprob: -12.629558563232422

Token 318: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39862096309661865
    2. 'if' → logprob: -1.2736209630966187
    3. ' current' → logprob: -3.898621082305908
    4. '               ' → logprob: -4.148621082305908
    5. 'current' → logprob: -4.398621082305908
    6. '   ' → logprob: -9.02362060546875
    7. '                   ' → logprob: -9.14862060546875
    8. 'diff' → logprob: -9.39862060546875
    9. '                
' → logprob: -9.89862060546875
    10. ' and' → logprob: -9.89862060546875

Token 319: ' calculate' (ID: 17950)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04506034404039383
    2. 'current' → logprob: -3.795060396194458
    3. ' if' → logprob: -4.670060157775879
    4. 'target' → logprob: -4.920060157775879
    5. '   ' → logprob: -6.295060157775879
    6. 'expected' → logprob: -7.420060157775879
    7. 'diff' → logprob: -7.545060157775879
    8. 'curr' → logprob: -7.670060157775879
    9. '                   ' → logprob: -8.170060157775879
    10. ' current' → logprob: -8.170060157775879

Token 320: ' the' (ID: 290)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -1.1022690534591675
    2. 'current' → logprob: -1.7272690534591675
    3. 'if' → logprob: -1.8522690534591675
    4. 'diff' → logprob: -2.477269172668457
    5. 'needed' → logprob: -3.227269172668457
    6. ' expected' → logprob: -3.352269172668457
    7. 'curr' → logprob: -3.477269172668457
    8. ' if' → logprob: -3.727269172668457
    9. 'delta' → logprob: -3.727269172668457
    10. ' current' → logprob: -4.227269172668457

Token 321: ' difference' (ID: 9809)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.6457382440567017
    2. 'if' → logprob: -1.7707382440567017
    3. 'current' → logprob: -2.395738124847412
    4. 'diff' → logprob: -2.895738124847412
    5. 'curr' → logprob: -3.270738124847412
    6. 'desired' → logprob: -3.270738124847412
    7. 'needed' → logprob: -3.645738124847412
    8. 'required' → logprob: -4.395738124847412
    9. ' expected' → logprob: -4.395738124847412
    10. 'delta' → logprob: -5.145738124847412

Token 322: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3594682216644287
    2. '_right' → logprob: -1.7344682216644287
    3. '_left' → logprob: -3.1094682216644287
    4. '=' → logprob: -3.7344682216644287
    5. '_current' → logprob: -3.7344682216644287
    6. '_' → logprob: -4.484468460083008
    7. ' in' → logprob: -5.109468460083008
    8. ' between' → logprob: -5.859468460083008
    9. ' current' → logprob: -6.109468460083008
    10. '_between' → logprob: -6.734468460083008

Token 323: ' dial' (ID: 25192)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.28307250142097473
    2. 'current' → logprob: -1.4080724716186523
    3. 'target' → logprob: -7.158072471618652
    4. ' target' → logprob: -7.658072471618652
    5. ' j' → logprob: -8.408072471618652
    6. ' the' → logprob: -8.533072471618652
    7. 'j' → logprob: -9.033072471618652
    8. 'the' → logprob: -9.408072471618652
    9. 'd' → logprob: -11.408072471618652
    10. ' ' → logprob: -12.533072471618652

Token 324: ' j' (ID: 441)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.48638686537742615
    2. '[j' → logprob: -1.4863868951797485
    3. ' j' → logprob: -2.236386775970459
    4. 'j' → logprob: -3.611386775970459
    5. ' =' → logprob: -4.986386775970459
    6. ' in' → logprob: -5.486386775970459
    7. '=' → logprob: -5.861386775970459
    8. ' current' → logprob: -5.986386775970459
    9. '               ' → logprob: -6.486386775970459
    10. 'current' → logprob: -6.736386775970459

Token 325: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05988847091794014
    2. ' =' → logprob: -4.1848883628845215
    3. '                
' → logprob: -4.3098883628845215
    4. ' current' → logprob: -4.5598883628845215
    5. ' if' → logprob: -5.0598883628845215
    6. '=' → logprob: -5.3098883628845215
    7. 'current' → logprob: -6.1848883628845215
    8. '
' → logprob: -7.1848883628845215
    9. ' in' → logprob: -7.1848883628845215
    10. ',' → logprob: -7.5598883628845215

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0068660941906273365
    2. ' if' → logprob: -5.881865978240967
    3. ' current' → logprob: -6.631865978240967
    4. '                
' → logprob: -6.756865978240967
    5. ' =' → logprob: -7.881865978240967
    6. '=' → logprob: -8.256866455078125
    7. ' in' → logprob: -8.881866455078125
    8. '                ' → logprob: -9.131866455078125
    9. ',' → logprob: -9.131866455078125
    10. '                   ' → logprob: -9.881866455078125

Token 327: ' curr' (ID: 10495)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2559142112731934
    2. 'curr' (adapté à ' curr') → logprob: -1.3809142112731934
    3. ' if' → logprob: -1.8809142112731934
    4. 'cur' → logprob: -2.6309142112731934
    5. 'current' → logprob: -2.6309142112731934
    6. ' curr' → logprob: -2.8809142112731934
    7. '               ' → logprob: -3.0059142112731934
    8. ' current' → logprob: -3.6309142112731934
    9. 'diff' → logprob: -4.130914211273193
    10. ' cur' → logprob: -4.880914211273193

Token 328: '_val' (ID: 13694)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.029020188376307487
    2. '_diff' → logprob: -4.154020309448242
    3. '_j' → logprob: -5.279020309448242
    4. '[j' → logprob: -5.779020309448242
    5. '_num' → logprob: -6.529020309448242
    6. '_val' → logprob: -6.654020309448242
    7. ' =' → logprob: -8.029020309448242
    8. '_value' → logprob: -8.529020309448242
    9. 'diff' → logprob: -8.904020309448242
    10. '_dist' → logprob: -8.904020309448242

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42877379059791565
    2. '=' → logprob: -1.0537737607955933
    3. ',' → logprob: -10.928773880004883
    4. '=
' → logprob: -11.553773880004883
    5. ' ' → logprob: -11.803773880004883
    6. ')' → logprob: -12.053773880004883
    7. '   ' → logprob: -12.178773880004883
    8. '-' → logprob: -12.678773880004883
    9. ' =
' → logprob: -12.678773880004883
    10. ']' → logprob: -12.928773880004883

Token 330: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04865413159132004
    2. ' current' → logprob: -3.048654079437256
    3. '(current' → logprob: -10.048654556274414
    4. '   ' → logprob: -11.298654556274414
    5. ' (' → logprob: -12.423654556274414
    6. 'cur' → logprob: -13.173654556274414
    7. 'curr' → logprob: -13.923654556274414
    8. '(' → logprob: -14.048654556274414
    9. ' ' → logprob: -14.048654556274414
    10. '	current' → logprob: -15.048654556274414

Token 331: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.8206473871250637e-05
    2. '[' → logprob: -10.750028610229492
    3. ' [' → logprob: -13.000028610229492
    4. 'j' → logprob: -13.625028610229492
    5. '[
' → logprob: -13.875028610229492
    6. '[i' → logprob: -14.375028610229492
    7. '```' → logprob: -14.750028610229492
    8. '\[' → logprob: -15.125028610229492
    9. ']' → logprob: -15.750028610229492
    10. '
' → logprob: -15.750028610229492

Token 332: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0079145431518555
    2. ')' → logprob: -1.3829145431518555
    3. ']
' → logprob: -1.7579145431518555
    4. ']' → logprob: -1.8829145431518555
    5. ' )
' → logprob: -3.6329145431518555
    6. ' -' → logprob: -4.5079145431518555
    7. ' )' → logprob: -5.2579145431518555
    8. '               ' → logprob: -5.6329145431518555
    9. '
' → logprob: -6.1329145431518555
    10. '           ' → logprob: -6.1329145431518555

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010045873932540417
    2. 'target' → logprob: -5.385046005249023
    3. ' target' → logprob: -5.510046005249023
    4. ',target' → logprob: -7.510046005249023
    5. '                
' → logprob: -8.885046005249023
    6. 'diff' → logprob: -8.885046005249023
    7. ',' → logprob: -8.885046005249023
    8. '           ' → logprob: -9.885046005249023
    9. '              ' → logprob: -10.135046005249023
    10. '                ' → logprob: -10.260046005249023

Token 334: ' targ' (ID: 133983)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5785009860992432
    2. 'if' → logprob: -1.8285009860992432
    3. ' if' → logprob: -2.078500986099243
    4. ' target' → logprob: -2.453500986099243
    5. '               ' → logprob: -2.953500986099243
    6. ' targ' → logprob: -5.203500747680664
    7. ' tgt' → logprob: -5.453500747680664
    8. '           ' → logprob: -6.078500747680664
    9. 't' → logprob: -6.703500747680664
    10. 'desired' → logprob: -7.328500747680664

Token 335: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.1938072293996811
    2. 'et' → logprob: -1.8188072443008423
    3. '_num' → logprob: -5.443807125091553
    4. '_j' → logprob: -5.943807125091553
    5. 'ent' → logprob: -6.443807125091553
    6. 't' → logprob: -6.443807125091553
    7. 'val' → logprob: -6.568807125091553
    8. ' =' → logprob: -7.068807125091553
    9. '[j' → logprob: -7.943807125091553
    10. 'j' → logprob: -8.443807601928711

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132643401622772
    2. ' =' → logprob: -1.3132643699645996
    3. '               ' → logprob: -13.813263893127441
    4. '[j' → logprob: -14.563263893127441
    5. '=
' → logprob: -15.313263893127441
    6. '                   ' → logprob: -15.563263893127441
    7. '           ' → logprob: -15.688263893127441
    8. '=j' → logprob: -15.813263893127441
    9. ' ' → logprob: -16.188264846801758
    10. '[' → logprob: -16.938264846801758

Token 337: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.04859395697712898
    2. ' target' → logprob: -3.0485939979553223
    3. '[target' → logprob: -12.423593521118164
    4. '(target' → logprob: -13.173593521118164
    5. '	target' → logprob: -15.423593521118164
    6. 'arget' → logprob: -16.173593521118164
    7. 't' → logprob: -16.298593521118164
    8. '               ' → logprob: -16.548593521118164
    9. '   ' → logprob: -16.673593521118164
    10. ',target' → logprob: -16.798593521118164

Token 338: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.02997852861881256
    2. '[j' → logprob: -3.5299785137176514
    3. 'nums' → logprob: -8.77997875213623
    4. 's' → logprob: -11.02997875213623
    5. '[_' → logprob: -11.27997875213623
    6. '_vals' → logprob: -11.77997875213623
    7. 'Nums' → logprob: -12.02997875213623
    8. '_num' → logprob: -12.02997875213623
    9. '```' → logprob: -12.02997875213623
    10. '[' → logprob: -12.27997875213623

Token 339: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.250001907348633
    3. 'j' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.000001907348633
    5. ' [' → logprob: -16.125001907348633
    6. '[i' → logprob: -16.750001907348633
    7. '```' → logprob: -16.875001907348633
    8. '
' → logprob: -17.750001907348633
    9. '[a' → logprob: -19.250001907348633
    10. '[k' → logprob: -19.750001907348633

Token 340: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.11017747968435287
    2. ']' → logprob: -2.860177516937256
    3. ')
' → logprob: -3.360177516937256
    4. '               ' → logprob: -4.860177516937256
    5. ')' → logprob: -5.485177516937256
    6. ']

' → logprob: -8.860177040100098
    7. '           ' → logprob: -9.360177040100098
    8. ']
' → logprob: -9.735177040100098
    9. '])
' → logprob: -9.985177040100098
    10. '])' → logprob: -10.485177040100098

Token 341: '                
' (ID: 13466)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011548658832907677
    2. '                
' → logprob: -4.5115485191345215
    3. ' if' → logprob: -8.26154899597168
    4. '
' → logprob: -9.01154899597168
    5. 'if' → logprob: -10.38654899597168
    6. '                ' → logprob: -11.13654899597168
    7. '              ' → logprob: -11.38654899597168
    8. '                
                
' → logprob: -11.51154899597168
    9. '               
' → logprob: -11.76154899597168
    10. '           ' → logprob: -11.88654899597168

Token 342: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02074519917368889
    2. 'if' → logprob: -4.020745277404785
    3. ' if' → logprob: -6.020745277404785
    4. 'diff' → logprob: -9.520745277404785
    5. '   ' → logprob: -10.270745277404785
    6. '                
' → logprob: -10.770745277404785
    7. '       ' → logprob: -11.145745277404785
    8. '           ' → logprob: -11.395745277404785
    9. ' diff' → logprob: -13.395745277404785
    10. 'difference' → logprob: -13.645745277404785

Token 343: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029583513736724854
    2. 'diff' → logprob: -4.02958345413208
    3. '               ' → logprob: -4.77958345413208
    4. 'curr' → logprob: -6.40458345413208
    5. ' if' → logprob: -7.27958345413208
    6. '#' → logprob: -8.779583930969238
    7. '           ' → logprob: -8.904583930969238
    8. 'left' → logprob: -9.404583930969238
    9. 'current' → logprob: -9.404583930969238
    10. 'difference' → logprob: -9.654583930969238

Token 344: '_right' (ID: 24402)
  Prédit: 'iff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.014416055753827095
    2. 'if' → logprob: -4.264416217803955
    3. ' if' → logprob: -9.514415740966797
    4. 'ifference' → logprob: -9.639415740966797
    5. '_left' → logprob: -10.514415740966797
    6. '_right' → logprob: -10.889415740966797
    7. '           ' → logprob: -11.264415740966797
    8. 'ef' → logprob: -11.639415740966797
    9. '               ' → logprob: -12.264415740966797
    10. '       ' → logprob: -12.264415740966797

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022787988185883
    2. '=' → logprob: -1.91022789478302
    3. ' ' → logprob: -14.16022777557373
    4. '           ' → logprob: -14.41022777557373
    5. ' =(' → logprob: -14.78522777557373
    6. '=(' → logprob: -14.91022777557373
    7. ')' → logprob: -15.03522777557373
    8. 'f' → logprob: -15.16022777557373
    9. '=
' → logprob: -15.28522777557373
    10. ' =
' → logprob: -15.53522777557373

Token 346: ' (' (ID: 350)
  Prédit: '(curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.5788038969039917
    2. ' (' → logprob: -0.8288038969039917
    3. '(c' → logprob: -6.078804016113281
    4. '(cur' → logprob: -7.703804016113281
    5. '(current' → logprob: -9.828804016113281
    6. '               ' → logprob: -11.203804016113281
    7. ' ' → logprob: -11.328804016113281
    8. '   ' → logprob: -11.578804016113281
    9. '  ' → logprob: -12.578804016113281
    10. '(cnt' → logprob: -12.703804016113281

Token 347: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.006178340408951044
    2. '(curr' → logprob: -5.256178379058838
    3. ' curr' → logprob: -7.006178379058838
    4. 'current' → logprob: -10.88117790222168
    5. 'cur' → logprob: -12.13117790222168
    6. '[curr' → logprob: -12.50617790222168
    7. '	curr' → logprob: -12.75617790222168
    8. ' (' → logprob: -13.25617790222168
    9. 'c' → logprob: -13.50617790222168
    10. '(' → logprob: -14.00617790222168

Token 348: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0013822594191879034
    2. '[j' → logprob: -6.626382350921631
    3. 'val' → logprob: -10.626381874084473
    4. '_curr' → logprob: -12.001381874084473
    5. '_vals' → logprob: -12.376381874084473
    6. 'j' → logprob: -12.751381874084473
    7. '[val' → logprob: -12.876381874084473
    8. 'Val' → logprob: -13.251381874084473
    9. '[' → logprob: -13.501381874084473
    10. '[curr' → logprob: -13.501381874084473

Token 349: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038044244050979614
    2. '-' → logprob: -3.2880442142486572
    3. ' ' → logprob: -12.788043975830078
    4. ' ' → logprob: -17.038043975830078
    5. ' -
' → logprob: -18.038043975830078
    6. '```' → logprob: -19.288043975830078
    7. 'd' → logprob: -19.413043975830078
    8. '–' → logprob: -19.413043975830078
    9. '-
' → logprob: -19.413043975830078
    10. ' –' → logprob: -19.913043975830078

Token 350: ' targ' (ID: 133983)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.416665640543215e-05
    2. 'target' → logprob: -11.12503433227539
    3. ' targ' → logprob: -11.25003433227539
    4. '(t' → logprob: -13.00003433227539
    5. ' ' → logprob: -13.87503433227539
    6. '   ' → logprob: -14.25003433227539
    7. '
' → logprob: -14.37503433227539
    8. '	t' → logprob: -14.87503433227539
    9. 'tar' → logprob: -15.12503433227539
    10. ' t' → logprob: -15.12503433227539

Token 351: '_val' (ID: 13694)
  Prédit: 'arget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arget' → logprob: -0.27453815937042236
    2. 'target' → logprob: -1.6495381593704224
    3. '_target' → logprob: -3.399538040161133
    4. '_val' → logprob: -5.399538040161133
    5. '[j' → logprob: -5.649538040161133
    6. 't' → logprob: -6.524538040161133
    7. '[target' → logprob: -6.524538040161133
    8. ' target' → logprob: -7.274538040161133
    9. '(target' → logprob: -7.524538040161133
    10. 'at' → logprob: -8.399538040161133

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')%' → logprob: -12.875006675720215
    4. ')
' → logprob: -17.25000762939453
    5. '")' → logprob: -18.62500762939453
    6. '`)' → logprob: -18.62500762939453
    7. '')' → logprob: -18.75000762939453
    8. '0' → logprob: -19.75000762939453
    9. '）' → logprob: -20.00000762939453
    10. '```' → logprob: -20.12500762939453

Token 353: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034964739461429417
    2. ')%' → logprob: -8.000349998474121
    3. ' )' → logprob: -11.250349998474121
    4. '%' → logprob: -13.875349998474121
    5. ' %' → logprob: -16.500349044799805
    6. ']' → logprob: -17.000349044799805
    7. '```' → logprob: -17.125349044799805
    8. '")' → logprob: -17.125349044799805
    9. '+' → logprob: -17.500349044799805
    10. '%)' → logprob: -17.625349044799805

Token 354: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -15.87508487701416
    4. '`' → logprob: -18.875085830688477
    5. '``' → logprob: -19.250085830688477
    6. '   ' → logprob: -19.375085830688477
    7. '۱۰' → logprob: -19.562585830688477
    8. '[' → logprob: -19.687585830688477
    9. '           ' → logprob: -20.250085830688477
    10. '１０' → logprob: -20.312585830688477

Token 355: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.375000953674316
    4. '
' → logprob: -18.750001907348633
    5. '``' → logprob: -19.375001907348633
    6. '`' → logprob: -20.125001907348633
    7. '[' → logprob: -20.250001907348633
    8. '۱۰' → logprob: -21.000001907348633
    9. '1' → logprob: -21.125001907348633
    10. '{' → logprob: -21.250001907348633

Token 356: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014999501407146454
    2. '
' → logprob: -4.5149993896484375
    3. '                
' → logprob: -5.8899993896484375
    4. '  
' → logprob: -8.639999389648438
    5. '<|end|>' → logprob: -8.639999389648438
    6. ' if' → logprob: -8.764999389648438
    7. ' 
' → logprob: -8.889999389648438
    8. '                ' → logprob: -9.139999389648438
    9. ' and' → logprob: -9.139999389648438
    10. '           ' → logprob: -9.639999389648438

Token 357: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002374938689172268
    2. '                
' → logprob: -6.37737512588501
    3. ' if' → logprob: -8.502374649047852
    4. ' and' → logprob: -8.627374649047852
    5. '                ' → logprob: -8.752374649047852
    6. '<|end|>' → logprob: -10.752374649047852
    7. '              ' → logprob: -10.877374649047852
    8. '           ' → logprob: -11.127374649047852
    9. ' ' → logprob: -11.252374649047852
    10. '
' → logprob: -11.377374649047852

Token 358: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.09948894381523132
    2. ' d' → logprob: -2.5994889736175537
    3. '               ' → logprob: -4.099488735198975
    4. ' if' → logprob: -5.974488735198975
    5. 'if' → logprob: -6.849488735198975
    6. '                
' → logprob: -9.224489212036133
    7. '                ' → logprob: -10.599489212036133
    8. '           ' → logprob: -10.849489212036133
    9. ' ' → logprob: -10.849489212036133
    10. '              ' → logprob: -11.849489212036133

Token 359: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.011373155459296e-05
    2. '_right' → logprob: -10.500030517578125
    3. '_' → logprob: -13.125030517578125
    4. 'left' → logprob: -15.375030517578125
    5. '_Left' → logprob: -16.250030517578125
    6. '_LEFT' → logprob: -16.500030517578125
    7. ' _' → logprob: -16.625030517578125
    8. '_le' → logprob: -17.000030517578125
    9. 'Left' → logprob: -18.500030517578125
    10. '```' → logprob: -18.625030517578125

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.328890800476074
    4. ' =(' → logprob: -16.078889846801758
    5. ')' → logprob: -16.203889846801758
    6. ' ==' → logprob: -16.453889846801758
    7. '=(' → logprob: -16.953889846801758
    8. '==' → logprob: -17.453889846801758
    9. '           ' → logprob: -18.453889846801758
    10. ',' → logprob: -18.453889846801758

Token 361: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.38705700635910034
    2. ' (' → logprob: -1.1370570659637451
    3. '(' → logprob: -8.762057304382324
    4. '(target' → logprob: -10.512057304382324
    5. ' ' → logprob: -13.887057304382324
    6. '   ' → logprob: -15.137057304382324
    7. '(trg' → logprob: -15.262057304382324
    8. '(T' → logprob: -15.637057304382324
    9. '(tok' → logprob: -15.637057304382324
    10. '  ' → logprob: -16.762056350708008

Token 362: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.004143811296671629
    2. 't' → logprob: -5.754143714904785
    3. ' (' → logprob: -7.004143714904785
    4. ' targ' → logprob: -10.754143714904785
    5. '(target' → logprob: -10.879143714904785
    6. 'target' → logprob: -12.254143714904785
    7. '10' → logprob: -12.879143714904785
    8. '(' → logprob: -12.879143714904785
    9. '	t' → logprob: -13.629143714904785
    10. ' ' → logprob: -13.629143714904785

Token 363: 'arg' (ID: 1170)
  Prédit: 'arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.0015122429467737675
    2. 'arget' → logprob: -6.501512050628662
    3. '(arg' → logprob: -12.75151252746582
    4. 'ar' → logprob: -13.00151252746582
    5. 'arge' → logprob: -13.75151252746582
    6. '(' → logprob: -13.87651252746582
    7. '_arg' → logprob: -15.12651252746582
    8. ' targ' → logprob: -15.25151252746582
    9. 'art' → logprob: -15.37651252746582
    10. '(j' → logprob: -15.37651252746582

Token 364: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.787507714354433e-05
    2. '_vals' → logprob: -11.25004768371582
    3. 'arget' → logprob: -11.37504768371582
    4. 'et' → logprob: -11.50004768371582
    5. 'val' → logprob: -13.12504768371582
    6. '_num' → logprob: -13.62504768371582
    7. 'get' → logprob: -13.75004768371582
    8. '_' → logprob: -13.87504768371582
    9. '[val' → logprob: -14.12504768371582
    10. '_right' → logprob: -14.12504768371582

Token 365: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014263291843235493
    2. '-' → logprob: -4.264263153076172
    3. '[j' → logprob: -9.264263153076172
    4. ' ' → logprob: -12.889263153076172
    5. '[' → logprob: -13.139263153076172
    6. ' -
' → logprob: -16.514263153076172
    7. ' –' → logprob: -17.139263153076172
    8. ')' → logprob: -17.264263153076172
    9. '–' → logprob: -17.389263153076172
    10. 'd' → logprob: -17.389263153076172

Token 366: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0031872207764536142
    2. ' curr' → logprob: -5.75318717956543
    3. '[curr' → logprob: -12.25318717956543
    4. '(curr' → logprob: -12.50318717956543
    5. '	curr' → logprob: -14.62818717956543
    6. '_curr' → logprob: -15.50318717956543
    7. 'current' → logprob: -15.62818717956543
    8. 'cur' → logprob: -16.12818717956543
    9. '.curr' → logprob: -17.37818717956543
    10. 'c' → logprob: -18.12818717956543

Token 367: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.31487059593200684
    2. '[j' → logprob: -1.3148705959320068
    3. 'ent' → logprob: -7.814870834350586
    4. 'val' → logprob: -8.064870834350586
    5. 'al' → logprob: -8.189870834350586
    6. 'j' → logprob: -8.439870834350586
    7. 'als' → logprob: -9.939870834350586
    8. '_num' → logprob: -10.189870834350586
    9. '_vals' → logprob: -10.314870834350586
    10. '[' → logprob: -10.439870834350586

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')%' → logprob: -14.625003814697266
    4. '       ' → logprob: -18.750003814697266
    5. '               ' → logprob: -19.000003814697266
    6. '           ' → logprob: -19.250003814697266
    7. '   ' → logprob: -20.000003814697266
    8. ')
' → logprob: -20.125003814697266
    9. '                   ' → logprob: -20.500003814697266
    10. '[' → logprob: -20.500003814697266

Token 369: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3869483470916748
    2. ' %' → logprob: -1.1369483470916748
    3. ')' → logprob: -9.636948585510254
    4. ')%' → logprob: -12.136948585510254
    5. '```' → logprob: -12.511948585510254
    6. ' ' → logprob: -13.761948585510254
    7. ' ' → logprob: -14.636948585510254
    8. '<|end|>' → logprob: -15.386948585510254
    9. '()%' → logprob: -15.511948585510254
    10. '               ' → logprob: -15.636948585510254

Token 370: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -14.250075340270996
    4. '1' → logprob: -18.000076293945312
    5. '
' → logprob: -18.125076293945312
    6. '۱۰' → logprob: -18.500076293945312
    7. '   ' → logprob: -18.875076293945312
    8. '{' → logprob: -19.062576293945312
    9. '[' → logprob: -19.312576293945312
    10. '``' → logprob: -19.437576293945312

Token 371: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' ' → logprob: -16.875
    4. '0' → logprob: -19.375
    5. '1' → logprob: -19.75
    6. '۱۰' → logprob: -20.5
    7. '{' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. 'int' → logprob: -20.875
    10. '१०' → logprob: -21.4375

Token 372: '
                
' (ID: 84151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005631774198263884
    2. '
' → logprob: -5.505631923675537
    3. '                
' → logprob: -6.630631923675537
    4. '<|end|>' → logprob: -9.005631446838379
    5. '                ' → logprob: -10.630631446838379
    6. '  
' → logprob: -10.755631446838379
    7. '              ' → logprob: -11.005631446838379
    8. ' if' → logprob: -11.505631446838379
    9. '           ' → logprob: -12.130631446838379
    10. ' 
' → logprob: -12.380631446838379

Token 373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007012377609498799
    2. '                
' → logprob: -7.500701427459717
    3. ' if' → logprob: -10.375700950622559
    4. '
' → logprob: -10.875700950622559
    5. '                ' → logprob: -11.000700950622559
    6. ' ' → logprob: -11.000700950622559
    7. '```' → logprob: -11.250700950622559
    8. '<|end|>' → logprob: -11.375700950622559
    9. ' 
' → logprob: -11.750700950622559
    10. '   ' → logprob: -12.250700950622559

Token 374: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11537376791238785
    2. ' if' → logprob: -2.7403738498687744
    3. '               ' → logprob: -3.1153738498687744
    4. '                
' → logprob: -10.240373611450195
    5. 'condition' → logprob: -11.740373611450195
    6. 'match' → logprob: -13.240373611450195
    7. 'next' → logprob: -13.240373611450195
    8. 'break' → logprob: -13.365373611450195
    9. '   ' → logprob: -13.490373611450195
    10. '       ' → logprob: -13.865373611450195

Token 375: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.725784957408905
    2. '(direction' → logprob: -1.1007850170135498
    3. ' direction' → logprob: -1.8507850170135498
    4. ' (' → logprob: -4.225784778594971
    5. '(' → logprob: -4.850784778594971
    6. '((' → logprob: -6.350784778594971
    7. '(d' → logprob: -6.850784778594971
    8. '(
' → logprob: -7.475784778594971
    9. ' ' → logprob: -8.850785255432129
    10. '   ' → logprob: -9.100785255432129

Token 376: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10025876015424728
    2. '==' → logprob: -2.3502588272094727
    3. '=='' → logprob: -10.600258827209473
    4. '=' → logprob: -11.600258827209473
    5. ' !=' → logprob: -12.225258827209473
    6. ' =='' → logprob: -12.600258827209473
    7. ')' → logprob: -12.725258827209473
    8. ' ' → logprob: -13.350258827209473
    9. '==
' → logprob: -13.975258827209473
    10. '[' → logprob: -13.975258827209473

Token 377: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025068165268749
    2. ' '' → logprob: -6.002506732940674
    3. '"' → logprob: -10.877507209777832
    4. 'left' → logprob: -11.502507209777832
    5. ' ' → logprob: -13.877507209777832
    6. ''s' → logprob: -14.752507209777832
    7. '   ' → logprob: -14.877507209777832
    8. ' left' → logprob: -15.002507209777832
    9. '
' → logprob: -16.877506256103516
    10. '`' → logprob: -17.752506256103516

Token 378: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002649119414854795
    2. 'right' → logprob: -8.250265121459961
    3. ' left' → logprob: -12.625265121459961
    4. ''' → logprob: -15.875265121459961
    5. '	left' → logprob: -16.37526512145996
    6. '[left' → logprob: -17.50026512145996
    7. 'lef' → logprob: -18.12526512145996
    8. '.left' → logprob: -18.25026512145996
    9. '_left' → logprob: -18.62526512145996
    10. '   ' → logprob: -18.62526512145996

Token 379: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0020032229367643595
    2. 'and' → logprob: -6.377003192901611
    3. ''' → logprob: -8.25200366973877
    4. '               ' → logprob: -11.12700366973877
    5. ':
' → logprob: -11.50200366973877
    6. '':
' → logprob: -12.00200366973877
    7. '           ' → logprob: -12.25200366973877
    8. ':' → logprob: -13.12700366973877
    9. '':' → logprob: -14.12700366973877
    10. ')' → logprob: -14.75200366973877

Token 380: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002509904792532325
    2. 'and' → logprob: -6.002510070800781
    3. '               ' → logprob: -10.877510070800781
    4. ':
' → logprob: -11.752510070800781
    5. '           ' → logprob: -13.002510070800781
    6. '                   ' → logprob: -13.127510070800781
    7. ':' → logprob: -13.377510070800781
    8. ' ' → logprob: -14.502510070800781
    9. '                ' → logprob: -14.752510070800781
    10. '   ' → logprob: -16.50251007080078

Token 381: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02328786998987198
    2. ' d' → logprob: -3.773287773132324
    3. '               ' → logprob: -11.398287773132324
    4. '(d' → logprob: -11.773287773132324
    5. '                   ' → logprob: -12.398287773132324
    6. '           ' → logprob: -12.648287773132324
    7. 'diff' → logprob: -13.023287773132324
    8. '
' → logprob: -13.148287773132324
    9. 'rotate' → logprob: -13.273287773132324
    10. '   ' → logprob: -13.523287773132324

Token 382: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.452426608419046e-05
    2. 'left' → logprob: -10.37503433227539
    3. '_right' → logprob: -13.37503433227539
    4. '_' → logprob: -14.62503433227539
    5. '_LEFT' → logprob: -14.87503433227539
    6. '[left' → logprob: -15.37503433227539
    7. 'eft' → logprob: -15.50003433227539
    8. 'Left' → logprob: -15.62503433227539
    9. '_Left' → logprob: -16.00003433227539
    10. '_le' → logprob: -16.50003433227539

Token 383: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759497284889221
    2. '==' → logprob: -0.8259497284889221
    3. ' !=' → logprob: -12.450949668884277
    4. '!=' → logprob: -13.075949668884277
    5. '=' → logprob: -13.325949668884277
    6. '==
' → logprob: -13.325949668884277
    7. ' ' → logprob: -15.575949668884277
    8. '>' → logprob: -15.700949668884277
    9. '>=' → logprob: -15.825949668884277
    10. ')==' → logprob: -15.950949668884277

Token 384: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.00033713103039190173
    2. ' rotate' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.375337600708008
    4. '
' → logprob: -14.500337600708008
    5. '           ' → logprob: -15.875337600708008
    6. ' ' → logprob: -16.000337600708008
    7. '  ' → logprob: -16.500337600708008
    8. 'rot' → logprob: -16.625337600708008
    9. '       ' → logprob: -16.750337600708008
    10. '               ' → logprob: -16.875337600708008

Token 385: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -2.696889623621246e-06
    2. 'steps' → logprob: -12.87500286102295
    3. 's' → logprob: -16.500001907348633
    4. '_' → logprob: -17.375001907348633
    5. '```' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '_tokens' → logprob: -18.500001907348633
    8. 'Steps' → logprob: -19.500001907348633
    9. '_st' → logprob: -19.625001907348633
    10. '_step' → logprob: -19.750001907348633

Token 386: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.438424676656723
    2. ':' → logprob: -1.1884247064590454
    3. ':
' → logprob: -3.313424587249756
    4. 'and' → logprob: -4.438424587249756
    5. '               ' → logprob: -6.813424587249756
    6. '                   ' → logprob: -7.563424587249756
    7. '   ' → logprob: -9.813425064086914
    8. '                ' → logprob: -9.813425064086914
    9. '           ' → logprob: -10.063425064086914
    10. ' ' → logprob: -10.188425064086914

Token 387: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09543640166521072
    2. ' and' → logprob: -2.7204363346099854
    3. '                   ' → logprob: -4.3454365730285645
    4. '                ' → logprob: -5.3454365730285645
    5. ':' → logprob: -5.4704365730285645
    6. ':
' → logprob: -6.7204365730285645
    7. '                
' → logprob: -6.9704365730285645
    8. '           ' → logprob: -8.845436096191406
    9. '                    
' → logprob: -9.095436096191406
    10. ' or' → logprob: -9.095436096191406

Token 388: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.5837596654891968
    2. ' j' → logprob: -1.0837596654891968
    3. '               ' → logprob: -2.5837597846984863
    4. '                   ' → logprob: -3.5837597846984863
    5. '	j' → logprob: -8.208759307861328
    6. '                       ' → logprob: -8.583759307861328
    7. '   ' → logprob: -9.333759307861328
    8. '       ' → logprob: -10.958759307861328
    9. ' current' → logprob: -11.333759307861328
    10. ',j' → logprob: -11.583759307861328

Token 389: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0898216962814331
    2. '+=' → logprob: -2.4648218154907227
    3. '+' → logprob: -7.339821815490723
    4. ' +' → logprob: -9.339821815490723
    5. '=' → logprob: -10.339821815490723
    6. '                   ' → logprob: -10.589821815490723
    7. ' =' → logprob: -10.714821815490723
    8. '               ' → logprob: -10.839821815490723
    9. '   ' → logprob: -10.964821815490723
    10. '                ' → logprob: -11.714821815490723

Token 390: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.50002670288086
    4. '```' → logprob: -19.12502670288086
    5. '  ' → logprob: -21.12502670288086
    6. '0' → logprob: -21.12502670288086
    7. '۱' → logprob: -21.68752670288086
    8. ' ' → logprob: -22.37502670288086
    9. '=' → logprob: -22.43752670288086
    10. '１' → logprob: -22.50002670288086

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.000003814697266
    4. '   ' → logprob: -18.375003814697266
    5. '0' → logprob: -20.750003814697266
    6. '  ' → logprob: -20.875003814697266
    7. '<|end|>' → logprob: -21.437503814697266
    8. '۱' → logprob: -21.750003814697266
    9. '１' → logprob: -22.250003814697266
    10. '१' → logprob: -22.250003814697266

Token 392: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003907538019120693
    2. 'else' → logprob: -5.628907680511475
    3. ' else' → logprob: -8.128907203674316
    4. 'elif' → logprob: -11.503907203674316
    5. '```' → logprob: -14.503907203674316
    6. '                   ' → logprob: -14.753907203674316
    7. '                
' → logprob: -15.003907203674316
    8. '                ' → logprob: -15.253907203674316
    9. ' elif' → logprob: -15.503907203674316
    10. '			' → logprob: -16.003908157348633

Token 393: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038201489951461554
    2. 'else' → logprob: -5.753819942474365
    3. 'elif' → logprob: -7.753819942474365
    4. ' else' → logprob: -8.503820419311523
    5. ' elif' → logprob: -12.003820419311523
    6. '                   ' → logprob: -13.628820419311523
    7. '           ' → logprob: -13.628820419311523
    8. '                ' → logprob: -14.253820419311523
    9. '                
' → logprob: -15.003820419311523
    10. '              ' → logprob: -15.503820419311523

Token 394: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.484335333108902
    2. 'else' → logprob: -1.7343353033065796
    3. ' else' → logprob: -1.9843353033065796
    4. 'elif' (adapté à ' elif') → logprob: -2.984335422515869
    5. ' elif' → logprob: -3.984335422515869
    6. ' and' → logprob: -7.484335422515869
    7. 'and' → logprob: -9.609334945678711
    8. '                ' → logprob: -10.109334945678711
    9. '           ' → logprob: -10.734334945678711
    10. '                   ' → logprob: -11.109334945678711

Token 395: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.47407716512680054
    2. ' direction' → logprob: -0.9740771651268005
    3. '(direction' → logprob: -15.974077224731445
    4. '方向' → logprob: -17.724077224731445
    5. 'dire' → logprob: -18.474077224731445
    6. 'd' → logprob: -18.599077224731445
    7. '                   ' → logprob: -18.599077224731445
    8. '   ' → logprob: -18.724077224731445
    9. '.direction' → logprob: -18.974077224731445
    10. ' ' → logprob: -18.974077224731445

Token 396: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029762759804725647
    2. '==' → logprob: -3.5297627449035645
    3. '=='' → logprob: -11.404763221740723
    4. ' =='' → logprob: -14.154763221740723
    5. '=' → logprob: -15.904763221740723
    6. '=="' → logprob: -16.154762268066406
    7. ' ==
' → logprob: -17.279762268066406
    8. ' ' → logprob: -17.404762268066406
    9. '==
' → logprob: -17.529762268066406
    10. ' ' → logprob: -17.779762268066406

Token 397: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00013977376511320472
    2. ' '' → logprob: -9.250140190124512
    3. ''r' → logprob: -10.500140190124512
    4. 'right' → logprob: -11.750140190124512
    5. ''s' → logprob: -12.625140190124512
    6. '"' → logprob: -12.875140190124512
    7. '
' → logprob: -14.375140190124512
    8. '	' → logprob: -14.625140190124512
    9. '   ' → logprob: -14.750140190124512
    10. ' ' → logprob: -14.875140190124512

Token 398: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -6.704273118884885e-07
    2. ''' → logprob: -15.000000953674316
    3. ' right' → logprob: -15.125000953674316
    4. '	right' → logprob: -17.625
    5. '[right' → logprob: -17.875
    6. 'left' → logprob: -18.375
    7. '.right' → logprob: -19.875
    8. '_right' → logprob: -20.25
    9. 'rightness' → logprob: -20.375
    10. 'Right' → logprob: -20.75

Token 399: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02324594371020794
    2. 'and' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.273245811462402
    4. '==' → logprob: -16.77324676513672
    5. '   ' → logprob: -17.14824676513672
    6. '```' → logprob: -17.14824676513672
    7. ' &&' → logprob: -17.27324676513672
    8. ' ==' → logprob: -17.39824676513672
    9. '&&' → logprob: -17.64824676513672
    10. ' и' → logprob: -17.89824676513672

Token 400: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04343198984861374
    2. 'and' → logprob: -3.1684319972991943
    3. ' ==' → logprob: -7.918431758880615
    4. '==' → logprob: -9.668432235717773
    5. ' ' → logprob: -13.543432235717773
    6. '```' → logprob: -13.918432235717773
    7. ' &&' → logprob: -14.418432235717773
    8. '&&' → logprob: -14.918432235717773
    9. '               ' → logprob: -15.168432235717773
    10. '   ' → logprob: -15.168432235717773

Token 401: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17974770069122314
    2. ' d' → logprob: -1.8047477006912231
    3. '   ' → logprob: -14.429747581481934
    4. '	d' → logprob: -14.679747581481934
    5. ' ' → logprob: -14.804747581481934
    6. '(d' → logprob: -15.304747581481934
    7. ' ' → logprob: -15.304747581481934
    8. '               ' → logprob: -15.804747581481934
    9. '```' → logprob: -16.17974853515625
    10. '_d' → logprob: -16.17974853515625

Token 402: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0014191613299772143
    2. 'right' → logprob: -6.6264190673828125
    3. '_left' → logprob: -9.376419067382812
    4. 'Right' → logprob: -13.501419067382812
    5. '_' → logprob: -13.626419067382812
    6. '_RIGHT' → logprob: -13.876419067382812
    7. '[right' → logprob: -14.126419067382812
    8. '   ' → logprob: -14.251419067382812
    9. '```' → logprob: -14.501419067382812
    10. ' ' → logprob: -14.751419067382812

Token 403: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326186656951904
    2. '==' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.813261032104492
    4. '==
' → logprob: -17.063261032104492
    5. '=' → logprob: -17.813261032104492
    6. ']==' → logprob: -18.563261032104492
    7. ')==' → logprob: -18.563261032104492
    8. '==(' → logprob: -19.063261032104492
    9. '```' → logprob: -19.188261032104492
    10. ' ' → logprob: -19.313261032104492

Token 404: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0024874303489923477
    2. ' rotate' → logprob: -6.002487659454346
    3. '   ' → logprob: -11.877487182617188
    4. ' ' → logprob: -12.752487182617188
    5. '  ' → logprob: -14.127487182617188
    6. '
' → logprob: -15.002487182617188
    7. 'rot' → logprob: -15.627487182617188
    8. '       ' → logprob: -15.877487182617188
    9. '	' → logprob: -16.002487182617188
    10. '```' → logprob: -16.002487182617188

Token 405: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -8.2994620242971e-06
    2. 'steps' → logprob: -11.750008583068848
    3. 'Steps' → logprob: -15.250008583068848
    4. 'rotate' → logprob: -16.62500762939453
    5. 'rot' → logprob: -17.12500762939453
    6. '_step' → logprob: -18.25000762939453
    7. '```' → logprob: -18.50000762939453
    8. '_' → logprob: -18.75000762939453
    9. ' steps' → logprob: -18.75000762939453
    10. '   ' → logprob: -18.87500762939453

Token 406: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29930198192596436
    2. ':' → logprob: -1.4243019819259644
    3. '                   ' → logprob: -4.049302101135254
    4. '               ' → logprob: -8.049302101135254
    5. '):
' → logprob: -8.799302101135254
    6. ':j' → logprob: -11.299302101135254
    7. '                  ' → logprob: -11.549302101135254
    8. ':
' → logprob: -11.674302101135254
    9. '           ' → logprob: -11.799302101135254
    10. '                       ' → logprob: -12.174302101135254

Token 407: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009152418002486229
    2. ' break' → logprob: -4.759152412414551
    3. ' j' → logprob: -8.38415241241455
    4. '               ' → logprob: -8.63415241241455
    5. 'break' → logprob: -10.00915241241455
    6. '   ' → logprob: -10.50915241241455
    7. '                    ' → logprob: -11.38415241241455
    8. ' ' → logprob: -11.50915241241455
    9. ' ' → logprob: -11.63415241241455
    10. '                       ' → logprob: -11.63415241241455

Token 408: ' j' (ID: 441)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3220520317554474
    2. 'break' → logprob: -1.822052001953125
    3. 'j' (adapté à ' j') → logprob: -2.572052001953125
    4. ' j' → logprob: -3.322052001953125
    5. '                   ' → logprob: -6.822052001953125
    6. '               ' → logprob: -9.572052001953125
    7. '   ' → logprob: -11.697052001953125
    8. '                       ' → logprob: -12.072052001953125
    9. '           ' → logprob: -12.322052001953125
    10. '       ' → logprob: -12.697052001953125

Token 409: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759484171867371
    2. ' +=' → logprob: -0.8259484171867371
    3. '+' → logprob: -11.950948715209961
    4. '   ' → logprob: -13.825948715209961
    5. ' +' → logprob: -14.450948715209961
    6. '    ' → logprob: -15.325948715209961
    7. '       ' → logprob: -16.07594871520996
    8. '           ' → logprob: -16.07594871520996
    9. '  ' → logprob: -16.20094871520996
    10. ' ' → logprob: -16.45094871520996

Token 410: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -17.001033782958984
    4. '   ' → logprob: -17.126033782958984
    5. '
' → logprob: -20.001033782958984
    6. ' ' → logprob: -20.688533782958984
    7. 'j' → logprob: -20.938533782958984
    8. '+' → logprob: -20.938533782958984
    9. '	' → logprob: -20.938533782958984
    10. '  ' → logprob: -21.188533782958984

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.750001907348633
    5. 'j' → logprob: -19.625001907348633
    6. '
' → logprob: -19.750001907348633
    7. '１' → logprob: -20.500001907348633
    8. '+' → logprob: -20.750001907348633
    9. '`' → logprob: -20.937501907348633
    10. '-' → logprob: -21.000001907348633

Token 412: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10041455924510956
    2. 'else' → logprob: -2.475414514541626
    3. ' else' → logprob: -4.475414752960205
    4. '           ' → logprob: -11.975414276123047
    5. '	else' → logprob: -12.225414276123047
    6. '              ' → logprob: -12.850414276123047
    7. '                
' → logprob: -12.975414276123047
    8. '                   ' → logprob: -13.225414276123047
    9. '```' → logprob: -13.475414276123047
    10. '                ' → logprob: -13.725414276123047

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4818881154060364
    2. 'else' → logprob: -0.9818881154060364
    3. ' else' → logprob: -4.856888294219971
    4. '	else' → logprob: -13.356887817382812
    5. '                
' → logprob: -13.731887817382812
    6. 'elif' → logprob: -14.356887817382812
    7. '```' → logprob: -14.356887817382812
    8. '                   ' → logprob: -14.481887817382812
    9. '_else' → logprob: -14.981887817382812
    10. '   ' → logprob: -15.231887817382812

Token 414: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05552889406681061
    2. '               ' → logprob: -3.3055288791656494
    3. ' else' → logprob: -4.0555291175842285
    4. '           ' → logprob: -12.30552864074707
    5. '                
' → logprob: -13.80552864074707
    6. '                   ' → logprob: -13.80552864074707
    7. '	else' → logprob: -14.18052864074707
    8. '   ' → logprob: -14.68052864074707
    9. '                ' → logprob: -14.80552864074707
    10. '              ' → logprob: -15.05552864074707

Token 415: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002880595624446869
    2. '               ' → logprob: -6.377880573272705
    3. ':' → logprob: -7.627880573272705
    4. '           ' → logprob: -7.877880573272705
    5. '   ' → logprob: -9.377881050109863
    6. ' break' → logprob: -9.627881050109863
    7. ':
' → logprob: -10.002881050109863
    8. 'break' → logprob: -10.627881050109863
    9. '		           ' → logprob: -10.627881050109863
    10. '	break' → logprob: -10.877881050109863

Token 416: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021865375339984894
    2. '               ' → logprob: -4.271865367889404
    3. 'break' → logprob: -5.146865367889404
    4. '           ' → logprob: -6.896865367889404
    5. ' break' → logprob: -7.271865367889404
    6. '	break' → logprob: -9.771865844726562
    7. '   ' → logprob: -9.771865844726562
    8. '                       ' → logprob: -11.646865844726562
    9. '                 ' → logprob: -12.271865844726562
    10. '	               ' → logprob: -12.771865844726562

Token 417: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0387575700879097
    2. ' break' → logprob: -3.288757562637329
    3. '               ' → logprob: -7.288757801055908
    4. '                   ' → logprob: -11.03875732421875
    5. '	break' → logprob: -11.03875732421875
    6. '           ' → logprob: -15.78875732421875
    7. '   ' → logprob: -15.91375732421875
    8. '_break' → logprob: -16.03875732421875
    9. 'Break' → logprob: -17.03875732421875
    10. '```' → logprob: -17.16375732421875

Token 418: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23196469247341156
    2. '            
' → logprob: -1.6069647073745728
    3. '
' → logprob: -5.856964588165283
    4. '    
' → logprob: -7.106964588165283
    5. ' current' → logprob: -7.356964588165283
    6. '  
' → logprob: -7.731964588165283
    7. 'current' → logprob: -7.731964588165283
    8. '```' → logprob: -8.356965065002441
    9. '#' → logprob: -8.481965065002441
    10. '        
' → logprob: -8.606965065002441

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0359344445168972
    2. '            
' → logprob: -3.7859344482421875
    3. '
' → logprob: -4.4109344482421875
    4. 'current' → logprob: -9.160934448242188
    5. ' current' → logprob: -9.160934448242188
    6. '#' → logprob: -10.035934448242188
    7. '        
' → logprob: -10.160934448242188
    8. '```' → logprob: -10.285934448242188
    9. '    
' → logprob: -10.535934448242188
    10. '       ' → logprob: -10.785934448242188

Token 420: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005511450115591288
    2. 'for' → logprob: -5.755511283874512
    3. ' for' → logprob: -7.255511283874512
    4. '
' → logprob: -7.380511283874512
    5. '#' (adapté à ' #') → logprob: -7.505511283874512
    6. '            
' → logprob: -8.005511283874512
    7. '       ' → logprob: -10.255511283874512
    8. 'if' → logprob: -10.380511283874512
    9. ' #' → logprob: -10.505511283874512
    10. ' if' → logprob: -12.255511283874512

Token 421: ' Rotate' (ID: 98562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07319919764995575
    2. '#' → logprob: -2.6981992721557617
    3. '           ' → logprob: -6.073199272155762
    4. ' for' → logprob: -7.198199272155762
    5. 'rotation' → logprob: -9.323199272155762
    6. 'if' → logprob: -9.698199272155762
    7. ' #' → logprob: -10.448199272155762
    8. 'For' → logprob: -12.323199272155762
    9. '       ' → logprob: -12.448199272155762
    10. '   ' → logprob: -12.573199272155762

Token 422: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5763904452323914
    2. ' for' → logprob: -0.8263904452323914
    3. '           ' → logprob: -8.451390266418457
    4. '   ' → logprob: -8.576390266418457
    5. 'range' → logprob: -11.076390266418457
    6. '	for' → logprob: -11.576390266418457
    7. '    ' → logprob: -12.201390266418457
    8. ')' → logprob: -13.201390266418457
    9. '               ' → logprob: -13.201390266418457
    10. '       ' → logprob: -13.326390266418457

Token 423: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007435300387442112
    2. 'current' → logprob: -5.507435321807861
    3. ' for' → logprob: -6.632435321807861
    4. 'block' → logprob: -7.257435321807861
    5. '   ' → logprob: -7.632435321807861
    6. 'if' → logprob: -8.257434844970703
    7. 'range' → logprob: -8.507434844970703
    8. 'segment' → logprob: -8.507434844970703
    9. 'd' → logprob: -9.382434844970703
    10. '#' → logprob: -11.257434844970703

Token 424: 'ials' (ID: 16596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.734393298625946
    2. 'current' → logprob: -0.859393298625946
    3. 'ials' → logprob: -2.609393358230591
    4. 'i' → logprob: -4.359393119812012
    5. 'ial' → logprob: -5.109393119812012
    6. 'block' → logprob: -6.984393119812012
    7. '[current' → logprob: -7.234393119812012
    8. ' for' → logprob: -7.734393119812012
    9. '   ' → logprob: -7.734393119812012
    10. '#' → logprob: -7.859393119812012

Token 425: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2664583921432495
    2. '           ' → logprob: -1.7664583921432495
    3. 'for' → logprob: -2.766458511352539
    4. '   ' → logprob: -10.516458511352539
    5. '            
' → logprob: -10.891458511352539
    6. '	for' → logprob: -11.516458511352539
    7. '       ' → logprob: -12.141458511352539
    8. '#' → logprob: -12.391458511352539
    9. '
' → logprob: -12.516458511352539
    10. ',' → logprob: -13.016458511352539

Token 426: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.572941179503687e-05
    2. ' i' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.500045776367188
    4. '           ' → logprob: -18.375045776367188
    5. '```' → logprob: -19.250045776367188
    6. '	i' → logprob: -19.375045776367188
    7. '[i' → logprob: -19.500045776367188
    8. '
' → logprob: -20.250045776367188
    9. '`' → logprob: -20.875045776367188
    10. '       ' → logprob: -21.250045776367188

Token 427: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04907280579209328
    2. 'to' → logprob: -3.049072742462158
    3. '           ' → logprob: -8.674073219299316
    4. 'i' → logprob: -9.424073219299316
    5. ' ' → logprob: -9.799073219299316
    6. ' up' → logprob: -10.424073219299316
    7. 'j' → logprob: -10.549073219299316
    8. ' through' → logprob: -10.674073219299316
    9. '   ' → logprob: -10.799073219299316
    10. ' j' → logprob: -10.799073219299316

Token 428: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804183006286621
    2. ' j' → logprob: -3.288041830062866
    3. '
' → logprob: -15.163042068481445
    4. '   ' → logprob: -15.913042068481445
    5. '(j' → logprob: -16.413042068481445
    6. ' ' → logprob: -17.038042068481445
    7. '[j' → logprob: -17.913042068481445
    8. '	j' → logprob: -17.913042068481445
    9. '$j' → logprob: -18.163042068481445
    10. ',j' → logprob: -19.038042068481445

Token 429: '-' (ID: 12)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3294544816017151
    2. 'for' → logprob: -1.3294544219970703
    3. '           ' → logprob: -4.57945442199707
    4. '   ' → logprob: -5.45445442199707
    5. '-' → logprob: -7.82945442199707
    6. '       ' → logprob: -7.95445442199707
    7. ' ' → logprob: -8.57945442199707
    8. ':' → logprob: -9.07945442199707
    9. '               ' → logprob: -9.32945442199707
    10. ' by' → logprob: -9.32945442199707

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.91732100979425e-05
    2. ' ' → logprob: -10.375039100646973
    3. 'i' → logprob: -12.625039100646973
    4. 'j' → logprob: -12.750039100646973
    5. '   ' → logprob: -13.875039100646973
    6. '```' → logprob: -14.500039100646973
    7. '0' → logprob: -16.50004005432129
    8. '-' → logprob: -17.00004005432129
    9. ' j' → logprob: -17.00004005432129
    10. '`' → logprob: -17.12504005432129

Token 431: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35185495018959045
    2. ' for' → logprob: -1.226854920387268
    3. 'for' → logprob: -5.9768548011779785
    4. '
' → logprob: -7.3518548011779785
    5. '            
' → logprob: -9.101855278015137
    6. '   ' → logprob: -10.226855278015137
    7. '       ' → logprob: -10.601855278015137
    8. '```' → logprob: -11.226855278015137
    9. '	for' → logprob: -11.476855278015137
    10. '          ' → logprob: -12.851855278015137

Token 432: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02374630607664585
    2. ' range' → logprob: -3.7737462520599365
    3. 'current' → logprob: -8.023746490478516
    4. '   ' → logprob: -9.273746490478516
    5. 'the' → logprob: -10.398746490478516
    6. '```' → logprob: -11.523746490478516
    7. 'direction' → logprob: -11.773746490478516
    8. ' current' → logprob: -11.898746490478516
    9. 'for' → logprob: -12.023746490478516
    10. '(range' → logprob: -12.773746490478516

Token 433: ' chosen' (ID: 16180)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22583137452602386
    2. ' range' → logprob: -2.1008312702178955
    3. 'for' → logprob: -3.6008312702178955
    4. 'direction' → logprob: -4.350831508636475
    5. ' for' → logprob: -4.475831508636475
    6. ' direction' → logprob: -4.850831508636475
    7. 'current' → logprob: -5.475831508636475
    8. '           ' → logprob: -5.725831508636475
    9. '   ' → logprob: -6.100831508636475
    10. 'if' → logprob: -6.225831508636475

Token 434: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.5494827032089233
    2. 'direction' → logprob: -1.4244827032089233
    3. 'range' → logprob: -2.049482822418213
    4. ' range' → logprob: -3.049482822418213
    5. 'for' → logprob: -6.174482822418213
    6. '   ' → logprob: -6.674482822418213
    7. ' for' → logprob: -7.174482822418213
    8. 'block' → logprob: -7.424482822418213
    9. ' block' → logprob: -7.799482822418213
    10. '
' → logprob: -7.924482822418213

Token 435: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005700534675270319
    2. '
' → logprob: -5.880700588226318
    3. ' for' → logprob: -6.130700588226318
    4. '            
' → logprob: -7.630700588226318
    5. 'for' → logprob: -8.63070011138916
    6. '               ' → logprob: -11.88070011138916
    7. '\n' → logprob: -12.00570011138916
    8. ',' → logprob: -12.13070011138916
    9. '  
' → logprob: -12.25570011138916
    10. '       ' → logprob: -12.38070011138916

Token 436: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.5759703516960144
    2. ' rotate' → logprob: -0.8259703516960144
    3. '   ' → logprob: -10.825970649719238
    4. '    ' → logprob: -12.825970649719238
    5. '```' → logprob: -12.825970649719238
    6. ' ' → logprob: -13.575970649719238
    7. '.rotate' → logprob: -13.700970649719238
    8. '  ' → logprob: -13.950970649719238
    9. '       ' → logprob: -14.200970649719238
    10. '_rotate' → logprob: -14.825970649719238

Token 437: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -7.896309739408025e-07
    2. 'steps' → logprob: -15.125000953674316
    3. '_' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.125
    5. '```' → logprob: -16.625
    6. '           ' → logprob: -17.5
    7. ' _' → logprob: -18.125
    8. '
' → logprob: -18.125
    9. '       ' → logprob: -18.5
    10. '_step' → logprob: -18.75

Token 438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05676724761724472
    2. '
' → logprob: -3.056767225265503
    3. ' for' → logprob: -4.931767463684082
    4. '            
' → logprob: -7.306767463684082
    5. 'for' → logprob: -8.931767463684082
    6. '  
' → logprob: -9.931767463684082
    7. '    
' → logprob: -11.181767463684082
    8. '\n' → logprob: -11.181767463684082
    9. ' 
' → logprob: -11.681767463684082
    10. '       ' → logprob: -11.681767463684082

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009973994456231594
    2. ' for' → logprob: -4.884974002838135
    3. '
' → logprob: -6.384974002838135
    4. 'for' → logprob: -7.759974002838135
    5. '            
' → logprob: -9.009973526000977
    6. '       ' → logprob: -9.884973526000977
    7. '```' → logprob: -10.384973526000977
    8. '   ' → logprob: -11.009973526000977
    9. '  
' → logprob: -12.134973526000977
    10. ' 
' → logprob: -12.384973526000977

Token 440: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29906877875328064
    2. ' for' → logprob: -1.549068808555603
    3. '           ' → logprob: -3.1740686893463135
    4. 'if' → logprob: -5.674068927764893
    5. ' if' → logprob: -7.174068927764893
    6. '   ' → logprob: -12.424068450927734
    7. '```' → logprob: -12.674068450927734
    8. '	for' → logprob: -13.424068450927734
    9. 'step' → logprob: -13.799068450927734
    10. ' ' → logprob: -14.799068450927734

Token 441: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.45392775535583496
    2. ' idx' → logprob: -1.203927755355835
    3. 'index' → logprob: -3.203927755355835
    4. 'x' → logprob: -3.953927755355835
    5. 'pos' → logprob: -6.078927993774414
    6. ' index' → logprob: -6.203927993774414
    7. ' pos' → logprob: -7.953927993774414
    8. ' x' → logprob: -8.328927993774414
    9. 'd' → logprob: -9.953927993774414
    10. 'm' → logprob: -10.078927993774414

Token 442: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004626052919775248
    2. 'in' → logprob: -5.379626274108887
    3. ' ' → logprob: -13.254626274108887
    4. '	in' → logprob: -13.504626274108887
    5. 'range' → logprob: -13.629626274108887
    6. '   ' → logprob: -15.254626274108887
    7. ',' → logprob: -15.379626274108887
    8. ')' → logprob: -15.504626274108887
    9. '=' → logprob: -15.629626274108887
    10. 's' → logprob: -16.37962532043457

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.00002098083496
    4. ' ' → logprob: -19.87502098083496
    5. '(range' → logprob: -20.50002098083496
    6. '
' → logprob: -20.62502098083496
    7. '	range' → logprob: -20.62502098083496
    8. '  ' → logprob: -20.75002098083496
    9. '    ' → logprob: -22.75002098083496
    10. 'rang' → logprob: -22.75002098083496

Token 444: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011170309036970139
    2. 'i' → logprob: -4.511170387268066
    3. ' i' → logprob: -9.136170387268066
    4. '(' → logprob: -11.261170387268066
    5. ' (' → logprob: -14.011170387268066
    6. '   ' → logprob: -14.261170387268066
    7. '	i' → logprob: -15.636170387268066
    8. '(
' → logprob: -16.13616943359375
    9. ',i' → logprob: -16.76116943359375
    10. '[i' → logprob: -16.88616943359375

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01111183688044548
    2. ',j' → logprob: -4.511111736297607
    3. ' ,' → logprob: -9.761112213134766
    4. ',i' → logprob: -12.761112213134766
    5. ',
' → logprob: -13.636112213134766
    6. 'j' → logprob: -13.636112213134766
    7. '   ' → logprob: -14.261112213134766
    8. ',len' → logprob: -16.136112213134766
    9. ',n' → logprob: -16.511112213134766
    10. ' j' → logprob: -17.011112213134766

Token 446: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.47495681833243e-05
    2. ' j' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.625024795532227
    4. '	j' → logprob: -16.250024795532227
    5. '           ' → logprob: -17.250024795532227
    6. '       ' → logprob: -19.000024795532227
    7. '
' → logprob: -19.250024795532227
    8. '    ' → logprob: -19.625024795532227
    9. '                   ' → logprob: -19.875024795532227
    10. ',j' → logprob: -20.000024795532227

Token 447: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693426251411438
    2. '):' → logprob: -0.693426251411438
    3. ',' → logprob: -8.818426132202148
    4. ':' → logprob: -10.193426132202148
    5. '+' → logprob: -10.568426132202148
    6. '):
' → logprob: -10.693426132202148
    7. '):

' → logprob: -11.568426132202148
    8. ':
' → logprob: -12.068426132202148
    9. '   ' → logprob: -12.193426132202148
    10. ')' → logprob: -12.193426132202148

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20547184348106384
    2. ' if' → logprob: -1.8304718732833862
    3. ' current' → logprob: -4.080471992492676
    4. 'if' → logprob: -5.330471992492676
    5. 'current' → logprob: -5.955471992492676
    6. '```' → logprob: -7.330471992492676
    7. '   ' → logprob: -9.580471992492676
    8. '       ' → logprob: -9.705471992492676
    9. ',' → logprob: -10.080471992492676
    10. '):
' → logprob: -10.330471992492676

Token 449: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25226494669914246
    2. ' if' → logprob: -1.5022649765014648
    3. 'current' → logprob: -8.502264976501465
    4. ' current' → logprob: -9.502264976501465
    5. '               ' → logprob: -10.377264976501465
    6. '           ' → logprob: -10.752264976501465
    7. '   ' → logprob: -12.627264976501465
    8. '       ' → logprob: -14.002264976501465
    9. '```' → logprob: -14.252264976501465
    10. '                   ' → logprob: -14.627264976501465

Token 450: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.07889111340045929
    2. ' direction' → logprob: -2.5788910388946533
    3. '   ' → logprob: -13.828890800476074
    4. '(direction' → logprob: -15.078890800476074
    5. '  ' → logprob: -17.32889175415039
    6. ' ' → logprob: -18.07889175415039
    7. '    ' → logprob: -18.45389175415039
    8. 'dire' → logprob: -18.70389175415039
    9. '           ' → logprob: -19.20389175415039
    10. '.direction' → logprob: -19.45389175415039

Token 451: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197742745280266
    2. '==' → logprob: -2.8119773864746094
    3. '=='' → logprob: -13.06197738647461
    4. ')' → logprob: -13.56197738647461
    5. ' ' → logprob: -13.56197738647461
    6. '=' → logprob: -13.56197738647461
    7. '==
' → logprob: -14.18697738647461
    8. '```' → logprob: -14.56197738647461
    9. ' =' → logprob: -14.93697738647461
    10. ' =='' → logprob: -15.18697738647461

Token 452: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004088493529707193
    2. ' '' → logprob: -5.504088401794434
    3. '"' → logprob: -12.129088401794434
    4. 'left' → logprob: -12.504088401794434
    5. ' left' → logprob: -15.129088401794434
    6. ' ' → logprob: -15.254088401794434
    7. '   ' → logprob: -15.629088401794434
    8. ''s' → logprob: -15.754088401794434
    9. '
' → logprob: -18.37908935546875
    10. '`' → logprob: -18.75408935546875

Token 453: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00021152703266125172
    2. 'right' → logprob: -8.500211715698242
    3. ' left' → logprob: -11.750211715698242
    4. '	left' → logprob: -17.125211715698242
    5. ''' → logprob: -17.875211715698242
    6. '_left' → logprob: -18.750211715698242
    7. '.left' → logprob: -18.750211715698242
    8. 'Left' → logprob: -18.875211715698242
    9. '[left' → logprob: -19.750211715698242
    10. '左' → logprob: -19.875211715698242

Token 454: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.03762183338403702
    2. '':' → logprob: -3.5376217365264893
    3. ':' → logprob: -5.162621974945068
    4. ':
' → logprob: -6.412621974945068
    5. '):
' → logprob: -8.53762149810791
    6. '':
' → logprob: -9.41262149810791
    7. ''' → logprob: -9.53762149810791
    8. ''):
' → logprob: -10.41262149810791
    9. '':

' → logprob: -10.41262149810791
    10. '__':
' → logprob: -10.91262149810791

Token 455: '                   ' (ID: 699)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2253449559211731
    2. ' current' → logprob: -1.7253448963165283
    3. '               ' → logprob: -3.8503448963165283
    4. '                   ' → logprob: -6.225345134735107
    5. '   ' → logprob: -8.47534465789795
    6. '           ' → logprob: -9.10034465789795
    7. ',current' → logprob: -11.22534465789795
    8. '(current' → logprob: -11.35034465789795
    9. '```' → logprob: -11.35034465789795
    10. '[current' → logprob: -11.47534465789795

Token 456: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0011709370883181691
    2. ' current' → logprob: -6.751171112060547
    3. '                   ' → logprob: -14.376171112060547
    4. '   ' → logprob: -16.751171112060547
    5. '(current' → logprob: -17.126171112060547
    6. '	current' → logprob: -17.876171112060547
    7. ',current' → logprob: -17.876171112060547
    8. '[current' → logprob: -18.126171112060547
    9. '               ' → logprob: -18.501171112060547
    10. ' ' → logprob: -19.626171112060547

Token 457: ' rotating' (ID: 65441)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020401719666551799
    2. ' current' → logprob: -8.500204086303711
    3. '                   ' → logprob: -14.500204086303711
    4. '   ' → logprob: -18.12520408630371
    5. '               ' → logprob: -19.50020408630371
    6. '(current' → logprob: -19.62520408630371
    7. '```' → logprob: -19.62520408630371
    8. '[current' → logprob: -19.87520408630371
    9. '	current' → logprob: -19.87520408630371
    10. ' ' → logprob: -20.62520408630371

Token 458: ' left' (ID: 3561)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.47447332739830017
    2. ' current' → logprob: -0.9744733572006226
    3. '                   ' → logprob: -8.474472999572754
    4. '(current' → logprob: -8.849472999572754
    5. '               ' → logprob: -10.599472999572754
    6. '[current' → logprob: -12.599472999572754
    7. ' (' → logprob: -12.724472999572754
    8. '                       ' → logprob: -12.724472999572754
    9. '   ' → logprob: -13.224472999572754
    10. '	current' → logprob: -13.474472999572754

Token 459: ' by' (ID: 656)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2897947430610657
    2. ' current' → logprob: -1.664794683456421
    3. '               ' → logprob: -3.789794683456421
    4. '                   ' → logprob: -3.914794683456421
    5. ':' → logprob: -5.414794921875
    6. ':
' → logprob: -5.414794921875
    7. ' +=' → logprob: -6.414794921875
    8. '):
' → logprob: -6.414794921875
    9. ')' → logprob: -6.539794921875
    10. '(current' → logprob: -6.789794921875

Token 460: ' i' (ID: 575)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.015464420430362225
    2. ' rotate' → logprob: -4.2654643058776855
    3. '(' → logprob: -6.7654643058776855
    4. ' (' → logprob: -9.140464782714844
    5. '((' → logprob: -11.015464782714844
    6. '   ' → logprob: -11.890464782714844
    7. '
' → logprob: -12.515464782714844
    8. ' ' → logprob: -13.015464782714844
    9. '.rotate' → logprob: -13.015464782714844
    10. '10' → logprob: -13.890464782714844

Token 461: ' digits' (ID: 37806)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0020790016278624535
    2. 'dx' → logprob: -7.377079010009766
    3. ' rotate' → logprob: -7.502079010009766
    4. 'idx' → logprob: -7.752079010009766
    5. 'n' → logprob: -9.002079010009766
    6. '_rotate' → logprob: -9.627079010009766
    7. 'x' → logprob: -9.627079010009766
    8. 'nd' → logprob: -9.877079010009766
    9. '   ' → logprob: -10.002079010009766
    10. '.rotate' → logprob: -10.127079010009766

Token 462: ' means' (ID: 4748)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7235682010650635
    2. '                   ' → logprob: -1.3485682010650635
    3. '+=' → logprob: -2.9735682010650635
    4. '               ' → logprob: -3.2235682010650635
    5. 'rotate' → logprob: -3.2235682010650635
    6. ' =' → logprob: -3.5985682010650635
    7. '=' → logprob: -3.8485682010650635
    8. 'idx' → logprob: -4.098567962646484
    9. '+' → logprob: -4.473567962646484
    10. '[idx' → logprob: -4.848567962646484

Token 463: ' pointing' (ID: 45521)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1786728799343109
    2. '(current' → logprob: -1.9286729097366333
    3. ' current' → logprob: -4.053672790527344
    4. '                   ' → logprob: -7.428672790527344
    5. ' (' → logprob: -8.428672790527344
    6. '(' → logprob: -9.678672790527344
    7. '   ' → logprob: -11.303672790527344
    8. '                       ' → logprob: -11.428672790527344
    9. '               ' → logprob: -11.803672790527344
    10. '[current' → logprob: -12.053672790527344

Token 464: ' to' (ID: 316)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7040767073631287
    2. ' current' → logprob: -1.7040767669677734
    3. ' to' → logprob: -2.0790767669677734
    4. '(current' → logprob: -2.2040767669677734
    5. 'to' → logprob: -4.079076766967773
    6. ' +=' → logprob: -4.454076766967773
    7. ' =' → logprob: -4.454076766967773
    8. ' (' → logprob: -4.454076766967773
    9. '+=' → logprob: -4.579076766967773
    10. '=' → logprob: -5.079076766967773

Token 465: ' i' (ID: 575)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.034111492335796356
    2. ' (' → logprob: -3.409111499786377
    3. '(curr' → logprob: -8.784111022949219
    4. '(idx' → logprob: -9.284111022949219
    5. '(index' → logprob: -10.159111022949219
    6. '((' → logprob: -10.534111022949219
    7. '(next' → logprob: -10.784111022949219
    8. '
' → logprob: -11.159111022949219
    9. '(' → logprob: -11.159111022949219
    10. '(value' → logprob: -11.409111022949219

Token 466: '-th' (ID: 14928)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.728639543056488
    2. 'idx' → logprob: -2.103639602661133
    3. '[idx' → logprob: -2.728639602661133
    4. '_steps' → logprob: -2.853639602661133
    5. ' =' → logprob: -3.353639602661133
    6. '(idx' → logprob: -3.478639602661133
    7. 'x' → logprob: -3.603639602661133
    8. '_idx' → logprob: -3.853639602661133
    9. ' idx' → logprob: -3.853639602661133
    10. 'n' → logprob: -4.103639602661133

Token 467: ' right' (ID: 1849)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.5085982084274292
    2. ' (' → logprob: -2.1335983276367188
    3. '(idx' → logprob: -2.1335983276367188
    4. 'idx' → logprob: -2.5085983276367188
    5. '(next' → logprob: -2.6335983276367188
    6. '((' → logprob: -2.6335983276367188
    7. 'steps' → logprob: -3.1335983276367188
    8. ' steps' → logprob: -3.5085983276367188
    9. 'next' → logprob: -4.008598327636719
    10. ' idx' → logprob: -4.133598327636719

Token 468: ' number' (ID: 2086)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8179540634155273
    2. ')' → logprob: -2.1929540634155273
    3. '+' → logprob: -2.5679540634155273
    4. '(' → logprob: -2.5679540634155273
    5. ' (' → logprob: -3.3179540634155273
    6. 'idx' → logprob: -3.8179540634155273
    7. 'rotate' → logprob: -3.9429540634155273
    8. 'steps' → logprob: -4.067954063415527
    9. '_steps' → logprob: -4.067954063415527
    10. '   ' → logprob: -4.067954063415527

Token 469: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2443194389343262
    2. ' =' → logprob: -1.9943194389343262
    3. ' +' → logprob: -2.369319438934326
    4. '+' → logprob: -2.494319438934326
    5. 's' → logprob: -2.494319438934326
    6. ' +=' → logprob: -2.494319438934326
    7. '(current' → logprob: -3.369319438934326
    8. '[idx' → logprob: -3.619319438934326
    9. 'current' → logprob: -4.119319438934326
    10. '
' → logprob: -4.494319438934326

Token 470: '                   ' (ID: 699)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.1774967908859253
    2. '(current' → logprob: -1.1774967908859253
    3. ' current' → logprob: -1.3024967908859253
    4. '                   ' → logprob: -2.802496910095215
    5. ' (' → logprob: -4.302496910095215
    6. '[current' → logprob: -4.302496910095215
    7. ' =' → logprob: -4.677496910095215
    8. '               ' → logprob: -5.177496910095215
    9. '=current' → logprob: -6.427496910095215
    10. ' +=' → logprob: -6.802496910095215

Token 471: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011091449297964573
    2. ' current' → logprob: -4.511091232299805
    3. '                   ' → logprob: -10.761091232299805
    4. '(current' → logprob: -10.761091232299805
    5. '[current' → logprob: -14.886091232299805
    6. '   ' → logprob: -15.261091232299805
    7. ',current' → logprob: -15.261091232299805
    8. '               ' → logprob: -16.136091232299805
    9. '                       ' → logprob: -16.261091232299805
    10. '	current' → logprob: -16.511091232299805

Token 472: ' So' (ID: 2632)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004080062732100487
    2. ' current' → logprob: -5.504080295562744
    3. '                   ' → logprob: -13.379079818725586
    4. '   ' → logprob: -16.379079818725586
    5. '(current' → logprob: -17.379079818725586
    6. '	current' → logprob: -17.629079818725586
    7. ' ' → logprob: -18.004079818725586
    8. '               ' → logprob: -18.129079818725586
    9. '```' → logprob: -18.754079818725586
    10. '
' → logprob: -19.504079818725586

Token 473: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014196882955729961
    2. ' current' → logprob: -4.264196872711182
    3. '                   ' → logprob: -10.38919734954834
    4. '(current' → logprob: -14.01419734954834
    5. '   ' → logprob: -14.38919734954834
    6. '	current' → logprob: -15.01419734954834
    7. '               ' → logprob: -15.13919734954834
    8. '                       ' → logprob: -15.38919734954834
    9. ',current' → logprob: -15.63919734954834
    10. ' ' → logprob: -15.76419734954834

Token 474: ' increases' (ID: 21073)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3353462815284729
    2. ' =' → logprob: -1.9603462219238281
    3. '[current' → logprob: -3.460346221923828
    4. 'current' → logprob: -3.585346221923828
    5. '                   ' → logprob: -3.960346221923828
    6. '               ' → logprob: -4.335346221923828
    7. ' current' → logprob: -4.460346221923828
    8. 's' → logprob: -4.585346221923828
    9. '[idx' → logprob: -4.585346221923828
    10. '(current' → logprob: -5.460346221923828

Token 475: ' by' (ID: 656)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5802785158157349
    2. ' current' → logprob: -0.9552785158157349
    3. '(current' → logprob: -3.5802783966064453
    4. '                   ' → logprob: -4.205278396606445
    5. '[current' → logprob: -5.955278396606445
    6. '               ' → logprob: -6.330278396606445
    7. '=current' → logprob: -6.455278396606445
    8. ' +=' → logprob: -6.705278396606445
    9. '=' → logprob: -6.830278396606445
    10. '+=' → logprob: -6.830278396606445

Token 476: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.006716079078614712
    2. ' rotate' → logprob: -5.006716251373291
    3. '(' → logprob: -15.131715774536133
    4. '   ' → logprob: -15.506715774536133
    5. '1' → logprob: -16.131715774536133
    6. ' ' → logprob: -16.506715774536133
    7. '.rotate' → logprob: -17.006715774536133
    8. ' (' → logprob: -17.881715774536133
    9. 'rot' → logprob: -18.381715774536133
    10. '_rotate' → logprob: -18.881715774536133

Token 477: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -3.531315314830863e-06
    2. 'steps' → logprob: -13.125003814697266
    3. '_' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.500003814697266
    5. ' _' → logprob: -16.000003814697266
    6. '_tokens' → logprob: -16.875003814697266
    7. 's' → logprob: -17.750003814697266
    8. ' steps' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. '
' → logprob: -18.125003814697266

Token 478: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0817151069641113
    2. ' current' → logprob: -2.0817151069641113
    3. ' =' → logprob: -2.2067151069641113
    4. '                   ' → logprob: -2.4567151069641113
    5. ':
' → logprob: -2.5817151069641113
    6. 'current' → logprob: -2.7067151069641113
    7. '               ' → logprob: -2.9567151069641113
    8. '):
' → logprob: -3.0817151069641113
    9. ' :
' → logprob: -3.2067151069641113
    10. '(current' → logprob: -3.3317151069641113

Token 479: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.875335693359375
    4. '100' → logprob: -18.125335693359375
    5. '   ' → logprob: -18.250335693359375
    6. '
' → logprob: -18.750335693359375
    7. '(' → logprob: -19.875335693359375
    8. '`' → logprob: -20.125335693359375
    9. '1' → logprob: -20.375335693359375
    10. '0' → logprob: -20.500335693359375

Token 480: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.750001907348633
    4. '100' → logprob: -21.125001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '`' → logprob: -22.500001907348633
    7. '۱۰' → logprob: -23.375001907348633
    8. '
' → logprob: -23.750001907348633
    9. '1' → logprob: -24.125001907348633
    10. '0' → logprob: -24.125001907348633

Token 481: '
' (ID: 198)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.7322705388069153
    2. 'current' → logprob: -0.8572705388069153
    3. '               ' → logprob: -3.1072704792022705
    4. '                   ' → logprob: -3.3572704792022705
    5. ':
' → logprob: -5.48227071762085
    6. '):
' → logprob: -6.10727071762085
    7. '(current' → logprob: -6.48227071762085
    8. ',current' → logprob: -6.48227071762085
    9. ',' → logprob: -6.73227071762085
    10. ':' → logprob: -6.85727071762085

Token 482: '                   ' (ID: 699)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.24817214906215668
    2. 'current' → logprob: -1.6231721639633179
    3. '               ' → logprob: -4.248172283172607
    4. '                   ' → logprob: -4.873172283172607
    5. '(current' → logprob: -8.87317180633545
    6. '           ' → logprob: -9.12317180633545
    7. '                       ' → logprob: -9.37317180633545
    8. ',current' → logprob: -9.62317180633545
    9. '[current' → logprob: -9.74817180633545
    10. '=current' → logprob: -11.37317180633545

Token 483: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.008619658648967743
    2. ' current' → logprob: -4.758619785308838
    3. '                   ' → logprob: -12.38361930847168
    4. '(current' → logprob: -15.13361930847168
    5. '```' → logprob: -15.63361930847168
    6. '                       ' → logprob: -16.13361930847168
    7. '$current' → logprob: -16.38361930847168
    8. '[current' → logprob: -16.38361930847168
    9. '   ' → logprob: -16.63361930847168
    10. '               ' → logprob: -16.75861930847168

Token 484: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. 'idx' → logprob: -15.375000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[index' → logprob: -16.375
    5. '```' → logprob: -16.875
    6. '[current' → logprob: -17.5
    7. '[id' → logprob: -18.0
    8. '[
' → logprob: -18.125
    9. '
' → logprob: -18.375
    10. '[i' → logprob: -18.5

Token 485: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04086703062057495
    2. '=' → logprob: -3.2908670902252197
    3. ' =' → logprob: -6.665866851806641
    4. ']=' → logprob: -6.665866851806641
    5. ']+=' → logprob: -8.79086685180664
    6. ']=(' → logprob: -9.66586685180664
    7. ')' → logprob: -10.16586685180664
    8. ' ]' → logprob: -11.54086685180664
    9. '+=' → logprob: -13.04086685180664
    10. '=(' → logprob: -13.41586685180664

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026205103495158255
    2. ' =' → logprob: -8.250262260437012
    3. '+=' → logprob: -14.125262260437012
    4. '=(' → logprob: -19.500261306762695
    5. '=
' → logprob: -19.750261306762695
    6. '=

' → logprob: -19.875261306762695
    7. '＝' → logprob: -20.125261306762695
    8. ' +=' → logprob: -20.125261306762695
    9. '.=' → logprob: -20.500261306762695
    10. ')=' → logprob: -21.375261306762695

Token 487: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.011087673716247082
    2. ' (' → logprob: -4.511087894439697
    3. '(cur' → logprob: -11.136087417602539
    4. '(original' → logprob: -11.511087417602539
    5. '(curr' → logprob: -12.261087417602539
    6. '   ' → logprob: -13.511087417602539
    7. '(' → logprob: -13.636087417602539
    8. '(next' → logprob: -13.636087417602539
    9. '(previous' → logprob: -14.011087417602539
    10. '(updated' → logprob: -14.011087417602539

Token 488: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -8.280175097752362e-05
    2. '(current' → logprob: -9.500082969665527
    3. ' current' → logprob: -11.750082969665527
    4. 'cur' → logprob: -17.50008201599121
    5. '[current' → logprob: -17.50008201599121
    6. 'curr' → logprob: -18.25008201599121
    7. '   ' → logprob: -18.50008201599121
    8. '$current' → logprob: -19.12508201599121
    9. '
' → logprob: -19.75008201599121
    10. '	current' → logprob: -19.87508201599121

Token 489: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.5597102396423e-05
    2. 'idx' → logprob: -10.250035285949707
    3. '[
' → logprob: -16.375036239624023
    4. ' idx' → logprob: -16.875036239624023
    5. '_idx' → logprob: -17.000036239624023
    6. '	idx' → logprob: -17.000036239624023
    7. '(idx' → logprob: -17.750036239624023
    8. '```' → logprob: -19.000036239624023
    9. '[current' → logprob: -19.125036239624023
    10. '
' → logprob: -19.250036239624023

Token 490: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16054154932498932
    2. '[idx' → logprob: -2.160541534423828
    3. '+' → logprob: -3.410541534423828
    4. '[' → logprob: -11.035541534423828
    5. ' ' → logprob: -12.785541534423828
    6. '+[' → logprob: -12.785541534423828
    7. 'idx' → logprob: -13.035541534423828
    8. '```' → logprob: -13.410541534423828
    9. ' idx' → logprob: -13.660541534423828
    10. '[
' → logprob: -13.785541534423828

Token 491: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326204538345337
    2. ' +' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.063262939453125
    4. '+
' → logprob: -16.438262939453125
    5. ' plus' → logprob: -16.813262939453125
    6. ' ' → logprob: -16.813262939453125
    7. ' +
' → logprob: -17.813262939453125
    8. '＋' → logprob: -17.938262939453125
    9. '+[' → logprob: -18.063262939453125
    10. '```' → logprob: -18.688262939453125

Token 492: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.029751067981123924
    2. ' rotate' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.40475082397461
    4. '   ' → logprob: -15.40475082397461
    5. 'rot' → logprob: -16.77975082397461
    6. '.rotate' → logprob: -17.40475082397461
    7. '  ' → logprob: -17.65475082397461
    8. '    ' → logprob: -18.15475082397461
    9. '_rotate' → logprob: -18.40475082397461
    10. '           ' → logprob: -19.40475082397461

Token 493: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -2.339278580620885e-06
    2. 'steps' → logprob: -13.000001907348633
    3. 'Steps' → logprob: -19.000001907348633
    4. '```' → logprob: -19.375001907348633
    5. ' steps' → logprob: -20.625001907348633
    6. '_' → logprob: -21.125001907348633
    7. '_tokens' → logprob: -21.375001907348633
    8. '_step' → logprob: -21.625001907348633
    9. '_st' → logprob: -21.750001907348633
    10. 's' → logprob: -21.750001907348633

Token 494: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.906711546937004e-05
    2. ')%' → logprob: -10.500048637390137
    3. ' )' → logprob: -10.750048637390137
    4. ')
' → logprob: -17.625049591064453
    5. '   ' → logprob: -19.250049591064453
    6. ']' → logprob: -19.250049591064453
    7. '）' → logprob: -19.375049591064453
    8. '```' → logprob: -19.375049591064453
    9. '`)' → logprob: -20.000049591064453
    10. '           ' → logprob: -20.000049591064453

Token 495: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04875575006008148
    2. '%' → logprob: -3.048755645751953
    3. ')' → logprob: -8.798755645751953
    4. ')%' → logprob: -11.048755645751953
    5. '
' → logprob: -14.298755645751953
    6. ' ' → logprob: -15.298755645751953
    7. '```' → logprob: -15.298755645751953
    8. ' ' → logprob: -15.798755645751953
    9. ' )' → logprob: -16.423755645751953
    10. ']' → logprob: -16.548755645751953

Token 496: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -21.375001907348633
    4. '   ' → logprob: -23.500001907348633
    5. '۱۰' → logprob: -23.625001907348633
    6. '１０' → logprob: -24.750001907348633
    7. '0' → logprob: -25.250001907348633
    8. '1' → logprob: -25.375001907348633
    9. '100' → logprob: -25.500001907348633
    10. '`' → logprob: -25.625001907348633

Token 497: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '```' → logprob: -19.125
    4. '100' → logprob: -22.375
    5. '   ' → logprob: -23.0
    6. '0' → logprob: -23.0
    7. '۱۰' → logprob: -23.0
    8. '`' → logprob: -23.5
    9. '{' → logprob: -23.5
    10. '``' → logprob: -23.75

Token 498: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004090035799890757
    2. '<|end|>' → logprob: -5.754089832305908
    3. ')' → logprob: -8.004090309143066
    4. 'else' → logprob: -8.129090309143066
    5. 'elif' → logprob: -8.754090309143066
    6. ' else' → logprob: -9.879090309143066
    7. '           ' → logprob: -10.629090309143066
    8. '       ' → logprob: -11.629090309143066
    9. '```' → logprob: -11.629090309143066
    10. ' elif' → logprob: -11.754090309143066

Token 499: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007887827814556658
    2. 'else' → logprob: -7.500788688659668
    3. ' else' → logprob: -9.250788688659668
    4. '<|end|>' → logprob: -9.750788688659668
    5. 'elif' → logprob: -9.875788688659668
    6. ' elif' → logprob: -12.000788688659668
    7. '```' → logprob: -12.000788688659668
    8. ')' → logprob: -12.625788688659668
    9. '
' → logprob: -12.625788688659668
    10. '           ' → logprob: -12.875788688659668

Token 500: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1355866938829422
    2. ' else' → logprob: -2.135586738586426
    3. '               ' → logprob: -4.885586738586426
    4. 'elif' → logprob: -7.510586738586426
    5. '           ' → logprob: -7.635586738586426
    6. ' elif' → logprob: -10.635586738586426
    7. '       ' → logprob: -11.635586738586426
    8. '	else' → logprob: -13.510586738586426
    9. '```' → logprob: -14.010586738586426
    10. '   ' → logprob: -14.385586738586426

Token 501: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3115518391132355
    2. ':' → logprob: -1.436551809310913
    3. '                   ' → logprob: -3.936551809310913
    4. '               ' → logprob: -5.186552047729492
    5. '{
' → logprob: -5.561552047729492
    6. '{' → logprob: -7.561552047729492
    7. '           ' → logprob: -8.686552047729492
    8. '   ' → logprob: -9.061552047729492
    9. '                  ' → logprob: -9.686552047729492
    10. '                ' → logprob: -10.436552047729492

Token 502: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22179676592350006
    2. ' current' → logprob: -2.346796751022339
    3. '(current' → logprob: -3.096796751022339
    4. '               ' → logprob: -3.221796751022339
    5. ' (' → logprob: -4.596796989440918
    6. 'current' → logprob: -4.971796989440918
    7. '(' → logprob: -8.221796989440918
    8. '                ' → logprob: -8.471796989440918
    9. '                  ' → logprob: -8.721796989440918
    10. '           ' → logprob: -9.096796989440918

Token 503: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20145729184150696
    2. ' current' → logprob: -1.7014572620391846
    3. '(current' → logprob: -10.326457023620605
    4. '                   ' → logprob: -11.451457023620605
    5. '               ' → logprob: -15.951457023620605
    6. '	current' → logprob: -16.326457977294922
    7. '   ' → logprob: -16.326457977294922
    8. '[current' → logprob: -16.576457977294922
    9. '$current' → logprob: -16.701457977294922
    10. '_current' → logprob: -16.701457977294922

Token 504: ' rotating' (ID: 65441)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019301822176203132
    2. ' current' → logprob: -6.251930236816406
    3. '                   ' → logprob: -13.751930236816406
    4. '(current' → logprob: -15.376930236816406
    5. '   ' → logprob: -16.376930236816406
    6. '	current' → logprob: -16.751930236816406
    7. '[current' → logprob: -16.876930236816406
    8. '               ' → logprob: -17.001930236816406
    9. ' ' → logprob: -17.501930236816406
    10. ',current' → logprob: -18.001930236816406

Token 505: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5303595662117004
    2. 'current' → logprob: -1.0303595066070557
    3. ' current' → logprob: -3.0303595066070557
    4. ' right' → logprob: -5.155359745025635
    5. '(current' → logprob: -8.155359268188477
    6. 'left' → logprob: -9.155359268188477
    7. '[current' → logprob: -9.155359268188477
    8. '_right' → logprob: -9.780359268188477
    9. ' ' → logprob: -10.905359268188477
    10. 'the' → logprob: -11.780359268188477

Token 506: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.25259554386138916
    2. 'by' → logprob: -1.5025955438613892
    3. '                   ' → logprob: -8.127595901489258
    4. '               ' → logprob: -8.502595901489258
    5. '[idx' → logprob: -9.627595901489258
    6. '=' → logprob: -10.502595901489258
    7. '           ' → logprob: -10.877595901489258
    8. '   ' → logprob: -11.252595901489258
    9. ' ' → logprob: -11.627595901489258
    10. '_by' → logprob: -12.752595901489258

Token 507: ' i' (ID: 575)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.03372315689921379
    2. ' rotate' → logprob: -3.4087231159210205
    3. '(' → logprob: -9.783722877502441
    4. ' (' → logprob: -11.658722877502441
    5. 'idx' → logprob: -12.908722877502441
    6. ' ' → logprob: -12.908722877502441
    7. '   ' → logprob: -13.283722877502441
    8. '```' → logprob: -13.533722877502441
    9. 'rot' → logprob: -13.908722877502441
    10. ' idx' → logprob: -14.283722877502441

Token 508: ' digits' (ID: 37806)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.7994044423103333
    2. 'digits' → logprob: -1.0494043827056885
    3. 'idx' → logprob: -2.6744043827056885
    4. '_digits' → logprob: -3.0494043827056885
    5. 'steps' → logprob: -3.7994043827056885
    6. ' digits' → logprob: -4.049404621124268
    7. ' idx' → logprob: -4.049404621124268
    8. '_tokens' → logprob: -4.799404621124268
    9. ' ' → logprob: -5.174404621124268
    10. '   ' → logprob: -5.674404621124268

Token 509: ' means' (ID: 4748)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5261717438697815
    2. ' current' → logprob: -2.0261716842651367
    3. '               ' → logprob: -2.4011716842651367
    4. '=' → logprob: -2.6511716842651367
    5. ' =' → logprob: -2.6511716842651367
    6. ':
' → logprob: -4.151171684265137
    7. 'current' → logprob: -4.401171684265137
    8. ':' → logprob: -5.276171684265137
    9. '=current' → logprob: -5.401171684265137
    10. ' means' → logprob: -6.401171684265137

Token 510: ' pointing' (ID: 45521)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.1553504914045334
    2. ' (' → logprob: -2.03035044670105
    3. ' current' → logprob: -4.530350685119629
    4. 'current' → logprob: -6.405350685119629
    5. '(' → logprob: -10.405350685119629
    6. ' decreasing' → logprob: -10.530350685119629
    7. ' ' → logprob: -11.030350685119629
    8. 'de' → logprob: -11.155350685119629
    9. '(de' → logprob: -11.155350685119629
    10. ' subtract' → logprob: -11.280350685119629

Token 511: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3873072564601898
    2. ' to' → logprob: -1.1373072862625122
    3. ' current' → logprob: -8.262307167053223
    4. 'current' → logprob: -9.137307167053223
    5. '(current' → logprob: -10.137307167053223
    6. '               ' → logprob: -11.762307167053223
    7. '                   ' → logprob: -12.012307167053223
    8. ' (' → logprob: -12.262307167053223
    9. ' ' → logprob: -13.387307167053223
    10. '           ' → logprob: -13.387307167053223

Token 512: ' i' (ID: 575)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.002478985348716378
    2. ' (' → logprob: -6.002479076385498
    3. '(curr' → logprob: -12.87747859954834
    4. '(cur' → logprob: -15.25247859954834
    5. '10' → logprob: -15.75247859954834
    6. '(idx' → logprob: -16.252479553222656
    7. ' ' → logprob: -16.377479553222656
    8. '(' → logprob: -16.877479553222656
    9. '   ' → logprob: -17.377479553222656
    10. '
' → logprob: -17.877479553222656

Token 513: '-th' (ID: 14928)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0402995347976685
    2. ' (' → logprob: -1.5402995347976685
    3. '(idx' → logprob: -2.415299415588379
    4. '[idx' → logprob: -2.540299415588379
    5. ')' → logprob: -2.915299415588379
    6. 'current' → logprob: -3.540299415588379
    7. 'idx' → logprob: -3.540299415588379
    8. '(current' → logprob: -3.665299415588379
    9. ' -' → logprob: -3.790299415588379
    10. '(' → logprob: -4.040299415588379

Token 514: ' left' (ID: 3561)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.031207336112856865
    2. '(' → logprob: -5.03120756149292
    3. ' (' → logprob: -5.03120756149292
    4. 'right' → logprob: -5.28120756149292
    5. 'current' → logprob: -5.90620756149292
    6. ' current' → logprob: -6.03120756149292
    7. 'rotate' → logprob: -6.28120756149292
    8. ' right' → logprob: -7.03120756149292
    9. '(right' → logprob: -7.03120756149292
    10. ' ' → logprob: -7.65620756149292

Token 515: ' number' (ID: 2086)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.48293596506118774
    2. ' (' → logprob: -1.107935905456543
    3. '_steps' → logprob: -3.982935905456543
    4. '(' → logprob: -4.107935905456543
    5. ' number' → logprob: -5.357935905456543
    6. ')' → logprob: -5.607935905456543
    7. 'number' → logprob: -6.232935905456543
    8. ' current' → logprob: -6.482935905456543
    9. 'current' → logprob: -6.857935905456543
    10. '(rotation' → logprob: -7.732935905456543

Token 516: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20526926219463348
    2. 'current' → logprob: -1.95526921749115
    3. ' current' → logprob: -3.5802693367004395
    4. '(current' → logprob: -4.4552693367004395
    5. '               ' → logprob: -5.7052693367004395
    6. '
' → logprob: -7.8302693367004395
    7. '   ' → logprob: -8.205268859863281
    8. '[current' → logprob: -8.705268859863281
    9. '           ' → logprob: -9.705268859863281
    10. ',current' → logprob: -9.955268859863281

Token 517: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7460353970527649
    2. ' current' → logprob: -1.1210353374481201
    3. 'current' → logprob: -1.6210353374481201
    4. '               ' → logprob: -6.621035575866699
    5. '(current' → logprob: -7.371035575866699
    6. '   ' → logprob: -9.7460355758667
    7. '[current' → logprob: -10.7460355758667
    8. '           ' → logprob: -10.7460355758667
    9. ',current' → logprob: -11.6210355758667
    10. '                  ' → logprob: -12.1210355758667

Token 518: ' #' (ID: 1069)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3956855237483978
    2. 'current' → logprob: -1.1456855535507202
    3. '                   ' → logprob: -4.77068567276001
    4. '(current' → logprob: -8.895685195922852
    5. '               ' → logprob: -9.020685195922852
    6. '   ' → logprob: -11.270685195922852
    7. '           ' → logprob: -12.020685195922852
    8. '
' → logprob: -12.520685195922852
    9. '$current' → logprob: -12.645685195922852
    10. '	current' → logprob: -12.895685195922852

Token 519: ' So' (ID: 2632)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20157977938652039
    2. 'current' → logprob: -1.7015798091888428
    3. '                   ' → logprob: -9.201580047607422
    4. '(current' → logprob: -9.701580047607422
    5. '               ' → logprob: -13.826580047607422
    6. ' ' → logprob: -14.326580047607422
    7. '   ' → logprob: -14.701580047607422
    8. '```' → logprob: -14.701580047607422
    9. '[current' → logprob: -15.076580047607422
    10. '_current' → logprob: -15.326580047607422

Token 520: ' number' (ID: 2086)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06197104603052139
    2. ' current' → logprob: -2.8119709491729736
    3. '                   ' → logprob: -12.936970710754395
    4. '   ' → logprob: -15.061970710754395
    5. ' ' → logprob: -15.686970710754395
    6. '	current' → logprob: -16.06197166442871
    7. '               ' → logprob: -16.06197166442871
    8. '(current' → logprob: -16.06197166442871
    9. '[current' → logprob: -16.81197166442871
    10. '           ' → logprob: -17.06197166442871

Token 521: ' decreases' (ID: 70943)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.020530100911855698
    2. '[current' → logprob: -4.5205302238464355
    3. '=' → logprob: -6.2705302238464355
    4. ' decreases' → logprob: -6.6455302238464355
    5. '                   ' → logprob: -7.0205302238464355
    6. 'de' → logprob: -7.0205302238464355
    7. 'idx' → logprob: -7.1455302238464355
    8. 'current' → logprob: -7.1455302238464355
    9. 's' → logprob: -7.2705302238464355
    10. '(idx' → logprob: -7.5205302238464355

Token 522: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5760444402694702
    2. ' by' → logprob: -0.8260444402694702
    3. '                   ' → logprob: -9.451044082641602
    4. ' (' → logprob: -11.576044082641602
    5. '               ' → logprob: -12.326044082641602
    6. '=' → logprob: -12.576044082641602
    7. '(current' → logprob: -12.951044082641602
    8. ' ' → logprob: -13.201044082641602
    9. '   ' → logprob: -14.201044082641602
    10. ')' → logprob: -14.201044082641602

Token 523: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.018152514472603798
    2. ' rotate' → logprob: -4.018152713775635
    3. '(' → logprob: -13.768152236938477
    4. 'rot' → logprob: -14.143152236938477
    5. ' ' → logprob: -15.268152236938477
    6. ' (' → logprob: -15.518152236938477
    7. '   ' → logprob: -16.268152236938477
    8. ' ' → logprob: -16.268152236938477
    9. '.rotate' → logprob: -16.268152236938477
    10. 'rote' → logprob: -17.018152236938477

Token 524: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -3.128163257315464e-07
    2. 'steps' → logprob: -15.625
    3. 'Steps' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. 'rotate' → logprob: -18.0
    6. ' ' → logprob: -18.875
    7. '_' → logprob: -19.25
    8. '1' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. '_step' → logprob: -20.375

Token 525: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6093199849128723
    2. ')' → logprob: -2.2343199253082275
    3. '                   ' → logprob: -2.2343199253082275
    4. ' (' → logprob: -2.2343199253082275
    5. '               ' → logprob: -3.3593199253082275
    6. '(current' → logprob: -3.3593199253082275
    7. ' by' → logprob: -3.9843199253082275
    8. '%' → logprob: -4.109320163726807
    9. ' current' → logprob: -4.734320163726807
    10. ')%' → logprob: -5.109320163726807

Token 526: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04864981397986412
    2. ' ' → logprob: -3.048649787902832
    3. 'rotate' → logprob: -9.798649787902832
    4. ' rotate' → logprob: -12.048649787902832
    5. '```' → logprob: -14.423649787902832
    6. '   ' → logprob: -15.048649787902832
    7. '1' → logprob: -16.79865074157715
    8. '(' → logprob: -16.92365074157715
    9. '``' → logprob: -16.92365074157715
    10. '  ' → logprob: -17.29865074157715

Token 527: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'rotate' → logprob: -14.87501049041748
    4. '```' → logprob: -17.375011444091797
    5. 'rotation' → logprob: -17.625011444091797
    6. 'rot' → logprob: -17.750011444091797
    7. '
' → logprob: -18.875011444091797
    8. '   ' → logprob: -19.500011444091797
    9. '1' → logprob: -20.000011444091797
    10. '0' → logprob: -20.375011444091797

Token 528: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9744542241096497
    2. 'current' → logprob: -1.3494541645050049
    3. ' current' → logprob: -1.3494541645050049
    4. '(current' → logprob: -2.474454164505005
    5. '               ' → logprob: -4.974454402923584
    6. '[current' → logprob: -5.474454402923584
    7. '
' → logprob: -6.349454402923584
    8. '=current' → logprob: -6.474454402923584
    9. ' =' → logprob: -6.974454402923584
    10. ',current' → logprob: -7.099454402923584

Token 529: '                   ' (ID: 699)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.16524332761764526
    2. 'current' → logprob: -2.04024338722229
    3. '                   ' → logprob: -3.91524338722229
    4. '(current' → logprob: -6.290243148803711
    5. '               ' → logprob: -8.665243148803711
    6. '   ' → logprob: -9.165243148803711
    7. '           ' → logprob: -9.790243148803711
    8. '[current' → logprob: -10.040243148803711
    9. ',current' → logprob: -10.415243148803711
    10. '	current' → logprob: -10.790243148803711

Token 530: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0008684676722623408
    2. ' current' → logprob: -7.250868320465088
    3. '(current' → logprob: -8.750868797302246
    4. '                   ' → logprob: -17.37586784362793
    5. '(' → logprob: -17.62586784362793
    6. '[current' → logprob: -18.62586784362793
    7. '   ' → logprob: -19.12586784362793
    8. ' (' → logprob: -19.12586784362793
    9. '$current' → logprob: -19.25086784362793
    10. '               ' → logprob: -19.75086784362793

Token 531: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.512236498361744e-07
    2. '[current' → logprob: -15.500000953674316
    3. 'idx' → logprob: -16.0
    4. '[index' → logprob: -16.875
    5. '[' → logprob: -17.375
    6. '[
' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '[id' → logprob: -18.75
    9. '[ind' → logprob: -19.125
    10. ' [' → logprob: -19.125

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0747557133436203
    2. '[idx' → logprob: -2.6997556686401367
    3. '=' → logprob: -6.074755668640137
    4. ')' → logprob: -6.699755668640137
    5. ']=' → logprob: -6.949755668640137
    6. '   ' → logprob: -9.574755668640137
    7. '[' → logprob: -9.699755668640137
    8. ' =' → logprob: -9.949755668640137
    9. 'idx' → logprob: -10.199755668640137
    10. ')]' → logprob: -10.699755668640137

Token 533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024758970830589533
    2. ' =' → logprob: -6.002475738525391
    3. '-=' → logprob: -15.75247573852539
    4. ')' → logprob: -16.75247573852539
    5. '=(' → logprob: -17.62747573852539
    6. '=
' → logprob: -17.62747573852539
    7. ' -=' → logprob: -18.25247573852539
    8. '-' → logprob: -18.37747573852539
    9. ' ' → logprob: -18.62747573852539
    10. '   ' → logprob: -18.87747573852539

Token 534: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.3133552074432373
    2. ' (' → logprob: -1.3133552074432373
    3. '(curr' → logprob: -9.938355445861816
    4. '(cur' → logprob: -10.063355445861816
    5. '(original' → logprob: -14.688355445861816
    6. '(' → logprob: -14.813355445861816
    7. ' ' → logprob: -14.813355445861816
    8. '(Current' → logprob: -15.063355445861816
    9. '(previous' → logprob: -15.938355445861816
    10. '   ' → logprob: -16.1883544921875

Token 535: 'current' (ID: 5804)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.10026070475578308
    2. 'current' → logprob: -2.3502607345581055
    3. ' current' → logprob: -10.600260734558105
    4. ' (' → logprob: -11.225260734558105
    5. '[current' → logprob: -11.225260734558105
    6. ',current' → logprob: -13.475260734558105
    7. '=current' → logprob: -15.225260734558105
    8. '10' → logprob: -15.475260734558105
    9. '$current' → logprob: -15.475260734558105
    10. '
' → logprob: -16.22525978088379

Token 536: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.4987974029500037e-05
    2. 'idx' → logprob: -10.625024795532227
    3. '_idx' → logprob: -14.875024795532227
    4. '(idx' → logprob: -16.250024795532227
    5. '	idx' → logprob: -16.250024795532227
    6. '```' → logprob: -17.250024795532227
    7. ' idx' → logprob: -17.375024795532227
    8. '[
' → logprob: -18.000024795532227
    9. '[' → logprob: -18.375024795532227
    10. '[id' → logprob: -18.500024795532227

Token 537: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1925124078989029
    2. '-' → logprob: -2.4425125122070312
    3. '[idx' → logprob: -2.4425125122070312
    4. ']' → logprob: -7.692512512207031
    5. ' ' → logprob: -8.567512512207031
    6. ')' → logprob: -8.692512512207031
    7. '[' → logprob: -8.817512512207031
    8. '+' → logprob: -9.442512512207031
    9. ' idx' → logprob: -9.942512512207031
    10. 'idx' → logprob: -10.192512512207031

Token 538: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3869421184062958
    2. '-' → logprob: -1.1369421482086182
    3. ' ' → logprob: -9.636941909790039
    4. '-remove' → logprob: -13.386941909790039
    5. '+' → logprob: -13.511941909790039
    6. ')' → logprob: -14.761941909790039
    7. '-ex' → logprob: -14.886941909790039
    8. '-wrap' → logprob: -15.636941909790039
    9. '-answer' → logprob: -16.01194190979004
    10. ' +' → logprob: -16.13694190979004

Token 539: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.2014138251543045
    2. ' rotate' → logprob: -1.701413869857788
    3. 'rot' → logprob: -15.701414108276367
    4. '_rotate' → logprob: -16.201414108276367
    5. '.rotate' → logprob: -16.326414108276367
    6. '                   ' → logprob: -16.826414108276367
    7. ' ' → logprob: -17.076414108276367
    8. 'rote' → logprob: -17.951414108276367
    9. '```' → logprob: -18.201414108276367
    10. '               ' → logprob: -18.451414108276367

Token 540: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: 0.0
    2. 'steps' → logprob: -17.375
    3. '_' → logprob: -20.125
    4. 'Steps' → logprob: -20.25
    5. ' steps' → logprob: -21.5
    6. '_step' → logprob: -21.625
    7. 's' → logprob: -21.75
    8. '```' → logprob: -22.375
    9. '_tokens' → logprob: -22.5
    10. ' Steps' → logprob: -22.875

Token 541: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.534558552724775e-05
    2. ')%' → logprob: -11.125025749206543
    3. ' )' → logprob: -11.500025749206543
    4. '+' → logprob: -16.250024795532227
    5. '```' → logprob: -17.000024795532227
    6. ']' → logprob: -17.000024795532227
    7. '}' → logprob: -17.375024795532227
    8. '   ' → logprob: -17.500024795532227
    9. '`)' → logprob: -18.000024795532227
    10. '）' → logprob: -18.250024795532227

Token 542: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -20.000024795532227
    4. '100' → logprob: -20.000024795532227
    5. '```' → logprob: -20.375024795532227
    6. ')' → logprob: -20.875024795532227
    7. '۱۰' → logprob: -21.625024795532227
    8. '  ' → logprob: -23.000024795532227
    9. '１０' → logprob: -23.687524795532227
    10. '1' → logprob: -23.687524795532227

Token 543: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '100' → logprob: -18.375
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.75
    6. ')' → logprob: -21.875
    7. '[' → logprob: -22.375
    8. '۱۰' → logprob: -23.375
    9. '20' → logprob: -24.0
    10. '1' → logprob: -24.0

Token 544: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.2987729102605954e-05
    2. ')%' → logprob: -10.375042915344238
    3. ' )' → logprob: -11.375042915344238
    4. '   ' → logprob: -15.625042915344238
    5. '```' → logprob: -16.375043869018555
    6. '                   ' → logprob: -17.875043869018555
    7. '           ' → logprob: -18.250043869018555
    8. '       ' → logprob: -18.250043869018555
    9. '               ' → logprob: -18.625043869018555
    10. '）' → logprob: -18.750043869018555

Token 545: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7491751909255981
    2. ')' → logprob: -0.8741751909255981
    3. '%' → logprob: -2.3741750717163086
    4. ')%' → logprob: -4.124175071716309
    5. '```' → logprob: -7.999175071716309
    6. ' )' → logprob: -8.874175071716309
    7. '   ' → logprob: -9.374175071716309
    8. '           ' → logprob: -9.374175071716309
    9. '                   ' → logprob: -10.499175071716309
    10. ' ' → logprob: -10.874175071716309

Token 546: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -15.875001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '``' → logprob: -20.500001907348633
    6. '`' → logprob: -21.375001907348633
    7. '۱۰' → logprob: -22.875001907348633
    8. '１０' → logprob: -23.500001907348633
    9. '  ' → logprob: -23.750001907348633
    10. '
' → logprob: -23.875001907348633

Token 547: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. ' ' → logprob: -20.5
    4. '0' → logprob: -23.125
    5. '``' → logprob: -23.875
    6. '۱۰' → logprob: -25.0
    7. '`' → logprob: -25.25
    8. '100' → logprob: -25.375
    9. '   ' → logprob: -25.375
    10. '１０' → logprob: -26.125

Token 548: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2966419756412506
    2. '           ' → logprob: -1.6716419458389282
    3. '            
' → logprob: -3.2966420650482178
    4. '    
' → logprob: -3.6716420650482178
    5. '        
' → logprob: -6.171641826629639
    6. '  
' → logprob: -6.546641826629639
    7. ' 
' → logprob: -7.046641826629639
    8. '\n' → logprob: -7.421641826629639
    9. '   
' → logprob: -7.796641826629639
    10. '       ' → logprob: -8.421642303466797

Token 549: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22866208851337433
    2. '           ' → logprob: -1.728662133216858
    3. '    
' → logprob: -4.853662014007568
    4. '            
' → logprob: -4.978662014007568
    5. '   ' → logprob: -5.353662014007568
    6. '       ' → logprob: -5.978662014007568
    7. 'rot' → logprob: -6.353662014007568
    8. ' rotations' → logprob: -6.728662014007568
    9. '```' → logprob: -7.228662014007568
    10. '        
' → logprob: -7.353662014007568

Token 550: ' rotations' (ID: 141136)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0291922092437744
    2. 'rot' → logprob: -1.1541922092437744
    3. ' rotations' → logprob: -1.1541922092437744
    4. '
' → logprob: -4.904191970825195
    5. '   ' → logprob: -5.779191970825195
    6. '       ' → logprob: -7.279191970825195
    7. '            
' → logprob: -7.404191970825195
    8. ' rot' → logprob: -8.904191970825195
    9. '```' → logprob: -10.154191970825195
    10. '    
' → logprob: -10.904191970825195

Token 551: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22552688419818878
    2. ' +=' → logprob: -1.6005269289016724
    3. ']+=' → logprob: -9.725526809692383
    4. '   ' → logprob: -10.475526809692383
    5. '```' → logprob: -11.475526809692383
    6. '+' → logprob: -12.225526809692383
    7. '    ' → logprob: -13.225526809692383
    8. '           ' → logprob: -13.600526809692383
    9. '=' → logprob: -13.600526809692383
    10. '+=(' → logprob: -13.975526809692383

Token 552: ' ' (ID: 220)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -3.054500666621607e-06
    2. ' rotate' → logprob: -12.75000286102295
    3. '1' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.500003814697266
    5. 'rot' → logprob: -18.125003814697266
    6. '       ' → logprob: -19.875003814697266
    7. ' ' → logprob: -20.125003814697266
    8. '```' → logprob: -20.375003814697266
    9. '
' → logprob: -20.625003814697266
    10. '(' → logprob: -20.875003814697266

Token 553: '1' (ID: 16)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -1.2664456789934775e-06
    2. ' rotate' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '1' → logprob: -17.875001907348633
    5. '       ' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.625001907348633
    7. '
' → logprob: -18.875001907348633
    8. 'rot' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.875001907348633

Token 554: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17315226793289185
    2. '           ' → logprob: -2.298152208328247
    3. '    
' → logprob: -3.673152208328247
    4. '  
' → logprob: -5.173152446746826
    5. '        
' → logprob: -5.298152446746826
    6. '<|end|>' → logprob: -5.673152446746826
    7. '   ' → logprob: -5.798152446746826
    8. '            
' → logprob: -5.798152446746826
    9. '       ' → logprob: -5.798152446746826
    10. ' 
' → logprob: -5.923152446746826

Token 555: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6115475296974182
    2. '   ' → logprob: -1.4865474700927734
    3. '           ' → logprob: -1.6115474700927734
    4. '       ' → logprob: -3.9865474700927734
    5. ' i' → logprob: -4.361547470092773
    6. '```' → logprob: -8.486547470092773
    7. ' ' → logprob: -9.236547470092773
    8. '  ' → logprob: -10.236547470092773
    9. '	i' → logprob: -10.361547470092773
    10. '
' → logprob: -10.361547470092773

Token 556: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -3.1424973713001236e-05
    2. ' i' → logprob: -10.500031471252441
    3. '           ' → logprob: -13.250031471252441
    4. '   ' → logprob: -13.250031471252441
    5. '       ' → logprob: -15.875031471252441
    6. '```' → logprob: -16.500030517578125
    7. '	i' → logprob: -16.875030517578125
    8. '
' → logprob: -18.125030517578125
    9. '            
' → logprob: -19.375030517578125
    10. '  ' → logprob: -19.625030517578125

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06358207762241364
    2. '+=' → logprob: -2.813582181930542
    3. ' +=' → logprob: -7.063581943511963
    4. ' =' → logprob: -7.188581943511963
    5. '+' → logprob: -13.813582420349121
    6. '=j' → logprob: -14.188582420349121
    7. '=
' → logprob: -15.563582420349121
    8. '.=' → logprob: -15.688582420349121
    9. '=i' → logprob: -16.313581466674805
    10. '+="' → logprob: -17.688581466674805

Token 558: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.1689596148207784e-05
    2. ' j' → logprob: -9.875051498413086
    3. '$j' → logprob: -16.375051498413086
    4. '	j' → logprob: -17.500051498413086
    5. '[j' → logprob: -18.000051498413086
    6. '   ' → logprob: -18.875051498413086
    7. '=j' → logprob: -19.250051498413086
    8. ':j' → logprob: -20.125051498413086
    9. '*j' → logprob: -20.250051498413086
    10. '_j' → logprob: -20.250051498413086

Token 559: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003140401327982545
    2. 'else' → logprob: -6.128140449523926
    3. ' else' → logprob: -7.003140449523926
    4. '   ' → logprob: -10.878140449523926
    5. '```' → logprob: -10.878140449523926
    6. '<|end|>' → logprob: -12.253140449523926
    7. '	else' → logprob: -13.753140449523926
    8. '
' → logprob: -14.753140449523926
    9. '        
' → logprob: -15.128140449523926
    10. '           ' → logprob: -15.378140449523926

Token 560: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013385030440986156
    2. 'else' → logprob: -4.388384819030762
    3. ' else' → logprob: -7.138384819030762
    4. '<|end|>' → logprob: -9.888384819030762
    5. '   ' → logprob: -11.013384819030762
    6. 'return' → logprob: -12.638384819030762
    7. '```' → logprob: -12.638384819030762
    8. '	else' → logprob: -13.263384819030762
    9. '
' → logprob: -13.888384819030762
    10. ')' → logprob: -14.138384819030762

Token 561: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1353224515914917
    2. 'else' → logprob: -2.1353225708007812
    3. 'continue' → logprob: -5.010322570800781
    4. ' else' → logprob: -6.635322570800781
    5. ' continue' → logprob: -8.385322570800781
    6. '   ' → logprob: -8.885322570800781
    7. '
' → logprob: -11.885322570800781
    8. '```' → logprob: -14.010322570800781
    9. ' ' → logprob: -14.135322570800781
    10. '	continue' → logprob: -14.260322570800781

Token 562: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.512050449848175
    2. 'else' → logprob: -1.7620503902435303
    3. '<|end|>' → logprob: -1.8870503902435303
    4. '+' → logprob: -3.3870503902435303
    5. ' else' → logprob: -3.7620503902435303
    6. '   ' → logprob: -4.762050628662109
    7. '
' → logprob: -5.637050628662109
    8. '```' → logprob: -6.262050628662109
    9. '        
' → logprob: -6.512050628662109
    10. '    
' → logprob: -6.887050628662109

Token 563: ' dial' (ID: 25192)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007052799221128225
    2. 'i' → logprob: -5.007052898406982
    3. ' j' → logprob: -8.132052421569824
    4. ' i' → logprob: -11.007052421569824
    5. 'the' → logprob: -11.007052421569824
    6. 'here' → logprob: -12.132052421569824
    7. 'next' → logprob: -13.132052421569824
    8. '   ' → logprob: -13.882052421569824
    9. ' the' → logprob: -14.382052421569824
    10. 'where' → logprob: -14.882052421569824

Token 564: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1920611411333084
    2. 'i' → logprob: -1.817061185836792
    3. ' j' → logprob: -4.942060947418213
    4. ' i' → logprob: -6.192060947418213
    5. 's' → logprob: -6.442060947418213
    6. 'index' → logprob: -7.192060947418213
    7. 'position' → logprob: -8.442061424255371
    8. '[j' → logprob: -9.067061424255371
    9. '```' → logprob: -9.567061424255371
    10. '   ' → logprob: -9.817061424255371

Token 565: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012230859138071537
    2. '<|end|>' → logprob: -7.626223087310791
    3. '   ' → logprob: -8.126222610473633
    4. 'else' → logprob: -8.251222610473633
    5. ' else' → logprob: -9.126222610473633
    6. '```' → logprob: -10.376222610473633
    7. '        
' → logprob: -11.626222610473633
    8. ')' → logprob: -11.751222610473633
    9. 'return' → logprob: -12.126222610473633
    10. '    
' → logprob: -13.001222610473633

Token 566: 'first' (ID: 7743)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056720390915870667
    2. '<|end|>' → logprob: -3.056720495223999
    3. 'else' → logprob: -5.43172025680542
    4. '```' → logprob: -6.93172025680542
    5. '       ' → logprob: -7.43172025680542
    6. '<|end|>' → logprob: -7.68172025680542
    7. ' else' → logprob: -8.306720733642578
    8. '0' → logprob: -8.306720733642578
    9. ')
' → logprob: -8.681720733642578
    10. ' )' → logprob: -8.681720733642578

Token 567: ' dial' (ID: 25192)
  Prédit: 'dial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dial' → logprob: -0.24857395887374878
    2. 'un' → logprob: -2.3735740184783936
    3. 'm' → logprob: -2.8735740184783936
    4. 'not' → logprob: -3.4985740184783936
    5. 'incorrect' → logprob: -4.8735737800598145
    6. 'different' → logprob: -5.1235737800598145
    7. 'unal' → logprob: -5.2485737800598145
    8. ' dial' → logprob: -5.3735737800598145
    9. ' mism' → logprob: -6.2485737800598145
    10. 'token' → logprob: -6.4985737800598145

Token 568: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5886707901954651
    2. ' not' → logprob: -1.7136707305908203
    3. 'that' → logprob: -1.8386707305908203
    4. ' that' → logprob: -2.3386707305908203
    5. 'after' → logprob: -5.71367073059082
    6. ' after' → logprob: -6.21367073059082
    7. ')' → logprob: -6.33867073059082
    8. 'without' → logprob: -7.21367073059082
    9. 'position' → logprob: -8.08867073059082
    10. 'un' → logprob: -8.33867073059082

Token 569: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.056201908737421036
    2. 'equal' → logprob: -4.181201934814453
    3. 'yet' → logprob: -4.681201934814453
    4. 'processed' → logprob: -4.806201934814453
    5. 'already' → logprob: -5.556201934814453
    6. 'fixed' → logprob: -5.681201934814453
    7. 'matched' → logprob: -5.681201934814453
    8. 'correct' → logprob: -5.806201934814453
    9. 'matching' → logprob: -6.056201934814453
    10. 'covered' → logprob: -6.556201934814453

Token 570: ' this' (ID: 495)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021434780210256577
    2. ')
' → logprob: -6.752143383026123
    3. ' yet' → logprob: -7.627143383026123
    4. ' or' → logprob: -9.002143859863281
    5. ' by' → logprob: -9.127143859863281
    6. 'by' → logprob: -9.377143859863281
    7. 'yet' → logprob: -9.627143859863281
    8. 'or' → logprob: -9.877143859863281
    9. ' )' → logprob: -11.627143859863281
    10. 'if' → logprob: -12.127143859863281

Token 571: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.6003553867340088
    2. 'round' → logprob: -0.8503553867340088
    3. 'iteration' → logprob: -3.975355386734009
    4. ' round' → logprob: -5.60035514831543
    5. ' time' → logprob: -7.35035514831543
    6. 'turn' → logprob: -8.10035514831543
    7. ' iteration' → logprob: -8.72535514831543
    8. 'way' → logprob: -8.72535514831543
    9. 'position' → logprob: -9.10035514831543
    10. ')' → logprob: -9.35035514831543

Token 572: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007717482279986143
    2. 'else' → logprob: -5.132717609405518
    3. '   ' → logprob: -6.507717609405518
    4. ' else' → logprob: -8.25771713256836
    5. 'return' → logprob: -11.13271713256836
    6. '```' → logprob: -11.38271713256836
    7. '<|end|>' → logprob: -12.13271713256836
    8. ')' → logprob: -13.88271713256836
    9. '        
' → logprob: -14.13271713256836
    10. '           ' → logprob: -14.25771713256836

Token 574: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4146491289138794
    2. '       ' → logprob: -1.6646491289138794
    3. ' else' → logprob: -1.9146491289138794
    4. '   ' → logprob: -5.91464900970459
    5. '	else' → logprob: -10.03964900970459
    6. '```' → logprob: -10.66464900970459
    7. '
' → logprob: -13.03964900970459
    8. '    
' → logprob: -13.41464900970459
    9. '_else' → logprob: -13.78964900970459
    10. '     ' → logprob: -14.41464900970459

Token 575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08897676318883896
    2. ':
' → logprob: -2.4639768600463867
    3. '       ' → logprob: -10.963976860046387
    4. '   ' → logprob: -12.338976860046387
    5. '```' → logprob: -12.338976860046387
    6. '):
' → logprob: -12.838976860046387
    7. ':i' → logprob: -13.713976860046387
    8. '           ' → logprob: -13.713976860046387
    9. '<|end|>' → logprob: -13.838976860046387
    10. ':

' → logprob: -13.963976860046387

Token 576: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10168752819299698
    2. '           ' → logprob: -2.601687431335449
    3. '   ' → logprob: -4.601687431335449
    4. 'i' → logprob: -4.726687431335449
    5. ' i' → logprob: -5.726687431335449
    6. '
' → logprob: -8.10168743133545
    7. '	       ' → logprob: -10.35168743133545
    8. '	   ' → logprob: -10.72668743133545
    9. '	i' → logprob: -11.22668743133545
    10. '        
' → logprob: -12.22668743133545

Token 577: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03837078809738159
    2. '       ' → logprob: -3.5383708477020264
    3. ' i' → logprob: -4.788370609283447
    4. '   ' → logprob: -8.288371086120605
    5. '	i' → logprob: -12.538371086120605
    6. '           ' → logprob: -13.288371086120605
    7. '
' → logprob: -15.163371086120605
    8. '        
' → logprob: -16.91337013244629
    9. '_i' → logprob: -17.03837013244629
    10. ' ' → logprob: -17.03837013244629

Token 578: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006725079845637083
    2. ' +=' → logprob: -5.006725311279297
    3. '+' → logprob: -11.631725311279297
    4. '=' → logprob: -15.006725311279297
    5. ']+=' → logprob: -15.006725311279297
    6. '   ' → logprob: -16.631725311279297
    7. '+="' → logprob: -16.631725311279297
    8. '+='' → logprob: -17.131725311279297
    9. '+=(' → logprob: -19.006725311279297
    10. '    ' → logprob: -19.631725311279297

Token 579: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -21.500001907348633
    6. '  ' → logprob: -22.375001907348633
    7. '۱' → logprob: -22.875001907348633
    8. '
' → logprob: -23.250001907348633
    9. '    ' → logprob: -23.375001907348633
    10. '       ' → logprob: -23.875001907348633

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -21.75
    4. '   ' → logprob: -22.625
    5. '۱' → logprob: -24.125
    6. '１' → logprob: -24.25
    7. '0' → logprob: -24.625
    8. '१' → logprob: -24.75
    9. '<|end|>' → logprob: -25.0
    10. '১' → logprob: -25.0

Token 581: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1271144598722458
    2. 'return' → logprob: -2.1271145343780518
    3. ' return' → logprob: -9.127114295959473
    4. '    
' → logprob: -10.252114295959473
    5. '```' → logprob: -10.877114295959473
    6. '
' → logprob: -11.127114295959473
    7. '	return' → logprob: -12.377114295959473
    8. ':return' → logprob: -13.002114295959473
    9. '<|end|>' → logprob: -14.002114295959473
    10. '       ' → logprob: -14.252114295959473

Token 582: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38692376017570496
    2. '   ' → logprob: -1.1369237899780273
    3. ' return' → logprob: -9.886923789978027
    4. '```' → logprob: -13.261923789978027
    5. '	return' → logprob: -16.63692283630371
    6. '    
' → logprob: -17.13692283630371
    7. '{return' → logprob: -17.51192283630371
    8. '
' → logprob: -17.51192283630371
    9. '       ' → logprob: -18.51192283630371
    10. ':return' → logprob: -19.63692283630371

Token 583: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038083385676145554
    2. '   ' → logprob: -3.28808331489563
    3. ' return' → logprob: -10.28808307647705
    4. '```' → logprob: -11.78808307647705
    5. '	return' → logprob: -16.038084030151367
    6. '{return' → logprob: -16.288084030151367
    7. ':return' → logprob: -18.163084030151367
    8. '
' → logprob: -18.413084030151367
    9. '       ' → logprob: -18.538084030151367
    10. '  ' → logprob: -19.038084030151367

Token 584: ' rotations' (ID: 141136)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0007099286303855479
    2. ' rotations' → logprob: -7.2507100105285645
    3. ' rot' → logprob: -17.500709533691406
    4. '   ' → logprob: -17.875709533691406
    5. '```' → logprob: -18.625709533691406
    6. '_rot' → logprob: -19.125709533691406
    7. '(rot' → logprob: -19.250709533691406
    8. 'rotation' → logprob: -19.250709533691406
    9. 'rots' → logprob: -19.500709533691406
    10. 'Rot' → logprob: -21.875709533691406

Token 585: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 587: ' Main' (ID: 7956)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9323261976242065
    2. '#' → logprob: -1.0573261976242065
    3. '<|end|>' → logprob: -1.4323261976242065
    4. ')' → logprob: -4.432326316833496
    5. 'def' → logprob: -6.182326316833496
    6. '<|end|>' → logprob: -6.307326316833496
    7. '[' → logprob: -6.807326316833496
    8. '(' → logprob: -6.932326316833496
    9. '\' → logprob: -7.557326316833496
    10. 'a' → logprob: -8.307326316833496

Token 588: ' program' (ID: 2193)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07026606798171997
    2. 'def' → logprob: -2.945266008377075
    3. '_' → logprob: -5.070266246795654
    4. '(' → logprob: -5.195266246795654
    5. ' code' → logprob: -6.820266246795654
    6. '_code' → logprob: -7.945266246795654
    7. ' def' → logprob: -8.195265769958496
    8. '():' → logprob: -8.320265769958496
    9. 'if' → logprob: -8.695265769958496
    10. '```' → logprob: -8.945265769958496

Token 589: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4841587543487549
    2. 'n' → logprob: -1.2341587543487549
    3. 'k' → logprob: -3.359158754348755
    4. 'def' → logprob: -3.359158754348755
    5. '```' → logprob: -4.109158515930176
    6. '<|end|>' → logprob: -5.484158515930176
    7. '

' → logprob: -7.734158515930176
    8. '\n' → logprob: -7.734158515930176
    9. ' 
' → logprob: -7.859158515930176
    10. 'import' → logprob: -8.109158515930176

Token 590: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.032614827156066895
    2. ' read' → logprob: -4.032614707946777
    3. 'run' → logprob: -5.032614707946777
    4. '```' → logprob: -6.407614707946777
    5. 'solve' → logprob: -6.532614707946777
    6. 'process' → logprob: -7.157614707946777
    7. 'calculate' → logprob: -7.407614707946777
    8. 'test' → logprob: -7.782614707946777
    9. 'if' → logprob: -7.782614707946777
    10. 'get' → logprob: -8.032614707946777

Token 591: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3694953918457031
    2. ' k' → logprob: -1.4944953918457031
    3. ' input' → logprob: -1.4944953918457031
    4. 'k' → logprob: -2.494495391845703
    5. ' inputs' → logprob: -2.869495391845703
    6. '```' → logprob: -2.994495391845703
    7. 'def' → logprob: -3.119495391845703
    8. 'input' → logprob: -3.619495391845703
    9. ' code' → logprob: -5.494495391845703
    10. '()' → logprob: -5.494495391845703

Token 592: ' and' (ID: 326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07344943284988403
    2. 'k' → logprob: -3.1984493732452393
    3. '
' → logprob: -4.073449611663818
    4. 'def' → logprob: -5.073449611663818
    5. '```' → logprob: -5.198449611663818
    6. 'if' → logprob: -7.698449611663818
    7. '(n' → logprob: -9.07344913482666
    8. '

' → logprob: -9.19844913482666
    9. '\n' → logprob: -9.32344913482666
    10. 'import' → logprob: -9.44844913482666

Token 593: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32888638973236084
    2. ' output' → logprob: -1.8288863897323608
    3. 'output' → logprob: -2.8288865089416504
    4. 'write' → logprob: -3.7038865089416504
    5. ' print' → logprob: -3.9538865089416504
    6. 'execute' → logprob: -5.20388650894165
    7. 'process' → logprob: -5.70388650894165
    8. 'compute' → logprob: -6.07888650894165
    9. ' compute' → logprob: -7.20388650894165
    10. 'produce' → logprob: -7.32888650894165

Token 594: ' results' (ID: 4376)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6834065318107605
    2. '(' → logprob: -1.6834065914154053
    3. '(
' → logprob: -1.9334065914154053
    4. '(k' → logprob: -2.5584065914154053
    5. 'def' → logprob: -3.0584065914154053
    6. '()' → logprob: -3.4334065914154053
    7. 'result' → logprob: -6.558406352996826
    8. 'k' → logprob: -7.058406352996826
    9. '("""' → logprob: -7.058406352996826
    10. '()
' → logprob: -7.433406352996826

Token 595: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3360023498535156
    2. 'n' → logprob: -1.3360023498535156
    3. 'k' → logprob: -3.9610023498535156
    4. '```' → logprob: -6.461002349853516
    5. '

' → logprob: -7.336002349853516
    6. 'def' → logprob: -7.711002349853516
    7. '\n' → logprob: -8.086002349853516
    8. 'if' → logprob: -8.086002349853516
    9. 'import' → logprob: -10.086002349853516
    10. '  
' → logprob: -10.336002349853516

Token 596: 'while' (ID: 7032)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6990243196487427
    2. 'n' → logprob: -0.6990243196487427
    3. 'if' → logprob: -5.699024200439453
    4. ' k' → logprob: -6.949024200439453
    5. ' n' → logprob: -7.199024200439453
    6. 'def' → logprob: -7.574024200439453
    7. '```' → logprob: -9.074024200439453
    8. 'import' → logprob: -9.324024200439453
    9. ' if' → logprob: -10.074024200439453
    10. 't' → logprob: -10.699024200439453

Token 597: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0011715330183506012
    2. 'True' → logprob: -6.751171588897705
    3. '(True' → logprob: -14.001171112060547
    4. ' ' → logprob: -14.751171112060547
    5. '=True' → logprob: -16.251171112060547
    6. ' ' → logprob: -18.751171112060547
    7. '_' → logprob: -18.751171112060547
    8. ' input' → logprob: -18.876171112060547
    9. '_true' → logprob: -19.001171112060547
    10. ' true' → logprob: -19.126171112060547

Token 598: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009302830439992249
    2. '():' → logprob: -7.375930309295654
    3. ':
' → logprob: -8.500929832458496
    4. ' :' → logprob: -10.500929832458496
    5. ',' → logprob: -10.500929832458496
    6. '):' → logprob: -10.875929832458496
    7. '():
' → logprob: -11.625929832458496
    8. ':**' → logprob: -12.375929832458496
    9. '.' → logprob: -12.750929832458496
    10. '(' → logprob: -12.875929832458496

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02797698974609375
    2. ' try' → logprob: -3.6529769897460938
    3. 'try' → logprob: -6.402976989746094
    4. '	try' → logprob: -11.652976989746094
    5. '```' → logprob: -12.402976989746094
    6. '   ' → logprob: -12.652976989746094
    7. ' line' → logprob: -14.152976989746094
    8. '       ' → logprob: -14.152976989746094
    9. 'Try' → logprob: -15.152976989746094
    10. ' input' → logprob: -15.527976989746094

Token 600: ' k' (ID: 372)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.0738639831542969
    2. ' line' → logprob: -1.3238639831542969
    3. ' try' → logprob: -1.3238639831542969
    4. 'line' → logprob: -2.073863983154297
    5. 'n' → logprob: -8.823863983154297
    6. 's' → logprob: -8.823863983154297
    7. '   ' → logprob: -10.073863983154297
    8. 'l' → logprob: -10.948863983154297
    9. ' s' → logprob: -11.698863983154297
    10. ' input' → logprob: -11.698863983154297

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602708250284195
    2. ' =' → logprob: -1.9102708101272583
    3. '=input' → logprob: -10.660270690917969
    4. ',' → logprob: -11.285270690917969
    5. '=int' → logprob: -12.785270690917969
    6. 's' → logprob: -13.285270690917969
    7. 'input' → logprob: -13.410270690917969
    8. ' ' → logprob: -13.535270690917969
    9. '>' → logprob: -14.410270690917969
    10. '_input' → logprob: -14.410270690917969

Token 602: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014346949756145477
    2. 'input' → logprob: -4.514347076416016
    3. ' int' → logprob: -5.764347076416016
    4. ' input' → logprob: -8.764347076416016
    5. '=int' → logprob: -16.514347076416016
    6. '[int' → logprob: -17.639347076416016
    7. 'len' → logprob: -17.889347076416016
    8. '(int' → logprob: -18.014347076416016
    9. '<int' → logprob: -18.264347076416016
    10. '```' → logprob: -18.389347076416016

Token 603: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.590104698669165e-05
    2. 'input' → logprob: -9.500085830688477
    3. '(' → logprob: -11.500085830688477
    4. '()' → logprob: -14.000085830688477
    5. '=input' → logprob: -17.125085830688477
    6. ' input' → logprob: -17.375085830688477
    7. '(
' → logprob: -18.375085830688477
    8. ',input' → logprob: -19.875085830688477
    9. '<input' → logprob: -20.750085830688477
    10. '(in' → logprob: -20.750085830688477

Token 604: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -4.417976379045285e-05
    2. '())
' → logprob: -10.875043869018555
    3. '()' → logprob: -11.000043869018555
    4. '().' → logprob: -11.750043869018555
    5. ' ())' → logprob: -15.125043869018555
    6. '())

' → logprob: -15.625043869018555
    7. ')' → logprob: -16.750043869018555
    8. '(' → logprob: -16.875043869018555
    9. '();)' → logprob: -17.750043869018555
    10. '()
' → logprob: -18.125043869018555

Token 605: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20326906442642212
    2. 'if' → logprob: -1.7032690048217773
    3. '   ' → logprob: -6.578269004821777
    4. '<|end|>' → logprob: -7.703269004821777
    5. '	if' → logprob: -11.953269004821777
    6. '<|end|>' → logprob: -13.828269004821777
    7. ' ' → logprob: -14.078269004821777
    8. '    ' → logprob: -14.078269004821777
    9. '  ' → logprob: -14.328269004821777
    10. 'If' → logprob: -14.453269004821777

Token 606: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10024776309728622
    2. ' if' → logprob: -2.350247859954834
    3. '<|end|>' → logprob: -10.350247383117676
    4. '   ' → logprob: -11.725247383117676
    5. '	if' → logprob: -15.600247383117676
    6. 'i' → logprob: -15.725247383117676
    7. 'ifra' → logprob: -16.225248336791992
    8. 'break' → logprob: -16.225248336791992
    9. 'If' → logprob: -16.350248336791992
    10. ';if' → logprob: -16.350248336791992

Token 607: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2014150768518448
    2. 'k' → logprob: -1.7014150619506836
    3. ' not' → logprob: -13.701415061950684
    4. '	k' → logprob: -15.076415061950684
    5. '(k' → logprob: -16.076416015625
    6. '_k' → logprob: -16.576416015625
    7. ' ' → logprob: -16.951416015625
    8. '=k' → logprob: -17.076416015625
    9. ' к' → logprob: -17.201416015625
    10. '/k' → logprob: -17.451416015625

Token 608: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04863482713699341
    2. ' ==' → logprob: -3.0486347675323486
    3. '=' → logprob: -10.29863452911377
    4. '<=' → logprob: -11.54863452911377
    5. '===' → logprob: -13.42363452911377
    6. ')==' → logprob: -13.92363452911377
    7. '()==' → logprob: -14.42363452911377
    8. '==-' → logprob: -14.54863452911377
    9. ']==' → logprob: -15.67363452911377
    10. ')' → logprob: -15.67363452911377

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -21.50002098083496
    4. '```' → logprob: -22.12502098083496
    5. '=' → logprob: -22.50002098083496
    6. ')' → logprob: -23.87502098083496
    7. '-' → logprob: -23.87502098083496
    8. '０' → logprob: -24.37502098083496
    9. '   ' → logprob: -24.37502098083496
    10. '٠' → logprob: -24.37502098083496

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -18.25
    4. '```' → logprob: -19.625
    5. '۰' → logprob: -21.875
    6. '#' → logprob: -22.125
    7. '=' → logprob: -22.125
    8. '00' → logprob: -22.625
    9. '`' → logprob: -22.75
    10. '000' → logprob: -22.875

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049219559878110886
    2. ':
' → logprob: -3.0492196083068848
    3. '   ' → logprob: -7.424219608306885
    4. '	break' → logprob: -11.799219131469727
    5. ' break' → logprob: -12.299219131469727
    6. ':return' → logprob: -12.299219131469727
    7. 'break' → logprob: -12.674219131469727
    8. '):' → logprob: -12.924219131469727
    9. '       ' → logprob: -13.049219131469727
    10. ')' → logprob: -13.049219131469727

Token 612: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002094349591061473
    2. '       ' → logprob: -6.377094268798828
    3. ' break' → logprob: -8.252094268798828
    4. 'break' → logprob: -9.377094268798828
    5. '	break' → logprob: -10.377094268798828
    6. '   ' → logprob: -11.252094268798828
    7. ' ' → logprob: -13.877094268798828
    8. '```' → logprob: -14.627094268798828
    9. '  ' → logprob: -15.627094268798828
    10. '     ' → logprob: -15.752094268798828

Token 613: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005296008195728064
    2. ' break' → logprob: -5.255296230316162
    3. '   ' → logprob: -10.005295753479004
    4. '	break' → logprob: -11.005295753479004
    5. '       ' → logprob: -15.255295753479004
    6. '    
' → logprob: -16.63029670715332
    7. '_break' → logprob: -16.63029670715332
    8. '
' → logprob: -17.00529670715332
    9. '```' → logprob: -17.25529670715332
    10. 'b' → logprob: -18.50529670715332

Token 614: '
' (ID: 198)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.19375449419021606
    2. '   ' → logprob: -1.8187544345855713
    3. ' initial' → logprob: -4.31875467300415
    4. '	initial' → logprob: -7.69375467300415
    5. '```' → logprob: -10.068754196166992
    6. '    
' → logprob: -10.568754196166992
    7. '_initial' → logprob: -11.068754196166992
    8. '(initial' → logprob: -11.318754196166992
    9. '  ' → logprob: -11.318754196166992
    10. ' ' → logprob: -11.443754196166992

Token 615: '   ' (ID: 271)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.34091809391975403
    2. '   ' → logprob: -1.5909180641174316
    3. ' initial' → logprob: -2.4659180641174316
    4. '	initial' → logprob: -8.96591854095459
    5. '```' → logprob: -10.46591854095459
    6. ' ' → logprob: -11.34091854095459
    7. '  ' → logprob: -11.46591854095459
    8. '_initial' → logprob: -11.46591854095459
    9. '(initial' → logprob: -11.46591854095459
    10. '.initial' → logprob: -12.59091854095459

Token 616: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' (adapté à ' initial') → logprob: -0.0013040454359725118
    2. ' initial' → logprob: -7.0013041496276855
    3. '   ' → logprob: -7.8763041496276855
    4. '	initial' → logprob: -11.501303672790527
    5. 'init' → logprob: -13.251303672790527
    6. '_initial' → logprob: -14.626303672790527
    7. '(initial' → logprob: -15.751303672790527
    8. '.initial' → logprob: -16.251304626464844
    9. '```' → logprob: -16.251304626464844
    10. '  ' → logprob: -16.751304626464844

Token 617: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11760111153125763
    2. ',' → logprob: -2.367601156234741
    3. '=' → logprob: -4.117600917816162
    4. ' ,' → logprob: -6.992600917816162
    5. ' ' → logprob: -11.11760139465332
    6. '=input' → logprob: -11.11760139465332
    7. ',input' → logprob: -12.11760139465332
    8. ',k' → logprob: -12.74260139465332
    9. ',target' → logprob: -13.49260139465332
    10. ')' → logprob: -14.86760139465332

Token 618: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.03804149478673935
    2. ' target' → logprob: -3.288041591644287
    3. '	target' → logprob: -17.538042068481445
    4. ' =' → logprob: -18.413042068481445
    5. ' ' → logprob: -19.038042068481445
    6. '_target' → logprob: -19.163042068481445
    7. '   ' → logprob: -19.913042068481445
    8. ',target' → logprob: -19.913042068481445
    9. '(target' → logprob: -20.038042068481445
    10. '=' → logprob: -20.288042068481445

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141489803791046
    2. ' =' → logprob: -1.701414942741394
    3. '=input' → logprob: -13.326415061950684
    4. ' ' → logprob: -17.326414108276367
    5. ',' → logprob: -17.701414108276367
    6. '_' → logprob: -18.576414108276367
    7. ')' → logprob: -18.826414108276367
    8. 'input' → logprob: -19.201414108276367
    9. ')=' → logprob: -19.701414108276367
    10. '＝' → logprob: -19.951414108276367

Token 620: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '[input' → logprob: -18.506715774536133
    4. '=input' → logprob: -19.756715774536133
    5. '(input' → logprob: -20.131715774536133
    6. 'map' → logprob: -21.256715774536133
    7. '   ' → logprob: -21.631715774536133
    8. '	input' → logprob: -22.006715774536133
    9. '<input' → logprob: -22.131715774536133
    10. ',input' → logprob: -22.881715774536133

Token 621: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6405310816480778e-05
    2. '()' → logprob: -11.375016212463379
    3. '.' → logprob: -13.125016212463379
    4. ' ().' → logprob: -14.000016212463379
    5. '.split' → logprob: -14.125016212463379
    6. 'split' → logprob: -14.875016212463379
    7. '()).' → logprob: -14.875016212463379
    8. '('').' → logprob: -15.625016212463379
    9. '("").' → logprob: -15.875016212463379
    10. '(),' → logprob: -16.125017166137695

Token 622: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001242772996192798
    2. 'strip' → logprob: -9.000123977661133
    3. 'rstrip' → logprob: -14.250123977661133
    4. ' split' → logprob: -15.625123977661133
    5. '(split' → logprob: -17.000123977661133
    6. 'spl' → logprob: -17.750123977661133
    7. '_split' → logprob: -19.625123977661133
    8. 'plit' → logprob: -19.750123977661133
    9. '```' → logprob: -19.750123977661133
    10. '.split' → logprob: -20.750123977661133

Token 623: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.12258882028982e-05
    2. '()
' → logprob: -10.25006103515625
    3. '(' → logprob: -10.87506103515625
    4. '<|end|>' → logprob: -12.87506103515625
    5. '();' → logprob: -13.87506103515625
    6. '()\' → logprob: -14.00006103515625
    7. ' ()' → logprob: -14.50006103515625
    8. '())' → logprob: -14.50006103515625
    9. ')' → logprob: -15.00006103515625
    10. '()<' → logprob: -15.50006103515625

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47459954023361206
    2. 'print' → logprob: -0.9745995402336121
    3. ' print' → logprob: -7.849599361419678
    4. '```' → logprob: -9.099599838256836
    5. 'result' → logprob: -11.099599838256836
    6. '<|end|>' → logprob: -13.099599838256836
    7. '``' → logprob: -13.974599838256836
    8. '	print' → logprob: -14.099599838256836
    9. '
' → logprob: -14.349599838256836
    10. '    
' → logprob: -14.474599838256836

Token 625: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00043734462815336883
    2. 'result' → logprob: -7.750437259674072
    3. '   ' → logprob: -12.37543773651123
    4. ' print' → logprob: -13.25043773651123
    5. 'res' → logprob: -14.50043773651123
    6. '```' → logprob: -16.250436782836914
    7. 'answer' → logprob: -17.125436782836914
    8. 'results' → logprob: -17.875436782836914
    9. 'prints' → logprob: -18.250436782836914
    10. 'ans' → logprob: -18.500436782836914

Token 626: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -5.512236498361744e-07
    2. 'min' → logprob: -14.750000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' min' → logprob: -20.5
    5. '=min' → logprob: -20.5
    6. ',min' → logprob: -21.0
    7. '[min' → logprob: -21.75
    8. '(max' → logprob: -21.75
    9. '(m' → logprob: -22.125
    10. '	min' → logprob: -22.75

Token 627: '_rot' (ID: 90451)
  Prédit: '_rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rot' → logprob: 0.0
    2. '_rotation' → logprob: -17.125
    3. '_' → logprob: -17.75
    4. 'rot' → logprob: -19.625
    5. '_rotate' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '_ro' → logprob: -20.0
    8. ')_' → logprob: -21.25
    9. '_ros' → logprob: -21.375
    10. ''_' → logprob: -22.0

Token 628: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -9.329167369287461e-05
    2. 'ot' → logprob: -10.000093460083008
    3. ' rotations' → logprob: -10.125093460083008
    4. 'otions' → logprob: -12.000093460083008
    5. 's' → logprob: -15.000093460083008
    6. 't' → logprob: -15.250093460083008
    7. '   ' → logprob: -15.500093460083008
    8. 'a' → logprob: -15.875093460083008
    9. 'lations' → logprob: -16.250093460083008
    10. 'c' → logprob: -16.250093460083008

Token 629: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -9.875052452087402
    3. ')' → logprob: -14.750052452087402
    4. ')(' → logprob: -14.875052452087402
    5. ' (' → logprob: -15.375052452087402
    6. '(
' → logprob: -17.25005340576172
    7. '(K' → logprob: -18.87505340576172
    8. '(n' → logprob: -19.50005340576172
    9. '((' → logprob: -19.75005340576172
    10. '(len' → logprob: -20.00005340576172

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9361264946837764e-07
    2. ' ,' → logprob: -16.875
    3. ',
' → logprob: -18.25
    4. '(' → logprob: -18.25
    5. ',k' → logprob: -19.625
    6. '‌,' → logprob: -19.625
    7. ')' → logprob: -19.875
    8. '(initial' → logprob: -20.0
    9. ',input' → logprob: -20.125
    10. '(),' → logprob: -20.625

Token 631: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.003178071230649948
    2. ' initial' → logprob: -5.753178119659424
    3. '(initial' → logprob: -15.503177642822266
    4. '	initial' → logprob: -16.878177642822266
    5. '   ' → logprob: -17.253177642822266
    6. '.initial' → logprob: -17.378177642822266
    7. '_initial' → logprob: -18.378177642822266
    8. ')' → logprob: -18.628177642822266
    9. ' ' → logprob: -18.878177642822266
    10. '  ' → logprob: -20.378177642822266

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.786196975852363e-05
    2. ',target' → logprob: -10.500038146972656
    3. ' ,' → logprob: -11.500038146972656
    4. ',
' → logprob: -16.250038146972656
    5. ')' → logprob: -17.625038146972656
    6. ',input' → logprob: -18.125038146972656
    7. ',current' → logprob: -18.125038146972656
    8. '   ' → logprob: -18.500038146972656
    9. '```' → logprob: -18.750038146972656
    10. '),' → logprob: -18.750038146972656

Token 633: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.10020678490400314
    2. ' target' → logprob: -2.3502068519592285
    3. ' ' → logprob: -17.47520637512207
    4. '   ' → logprob: -17.72520637512207
    5. '(target' → logprob: -18.10020637512207
    6. '	target' → logprob: -18.22520637512207
    7. '    ' → logprob: -18.60020637512207
    8. '[target' → logprob: -18.85020637512207
    9. ',target' → logprob: -18.85020637512207
    10. 'arget' → logprob: -18.97520637512207

Token 634: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759401917457581
    2. '))' → logprob: -0.8259401917457581
    3. ')))' → logprob: -14.450940132141113
    4. '))
' → logprob: -17.07594108581543
    5. ' ))' → logprob: -17.07594108581543
    6. ' )' → logprob: -17.07594108581543
    7. '})' → logprob: -17.57594108581543
    8. ')
' → logprob: -17.95094108581543
    9. ')}' → logprob: -18.07594108581543
    10. '())' → logprob: -18.07594108581543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 632
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 246
Tokens correctement prédits (top 10): 472
Précision stricte (1ère position): 34.65%
Précision adaptée (1ère position): 38.92%
Précision (top 10): 74.68%
================================================================================
