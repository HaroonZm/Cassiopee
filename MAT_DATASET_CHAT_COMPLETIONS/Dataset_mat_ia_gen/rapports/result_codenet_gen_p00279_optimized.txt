================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:53:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def cross(a, b, c):
    # cross product of AB and AC vectors
    return (b[0]-a[0])*(c[1]-a[1])-(b[1]-a[1])*(c[0]-a[0])

def convex_hull(points):
    ps = sorted(points, key=lambda x:(x[0], x[1]))
    lower = []
    for p in ps:
        while len(lower)>=2 and cross(lower[-2],lower[-1],p)<=0:
            lower.pop()
        lower.append(p)
    upper = []
    for p in reversed(ps):
        while len(upper)>=2 and cross(upper[-2],upper[-1],p)<=0:
            upper.pop()
        upper.append(p)
    # remove last since it's duplicate
    hull = lower[:-1]+upper[:-1]
    return hull

def polygon_area(poly):
    area = 0
    n = len(poly)
    for i in range(n):
        x1,y1 = poly[i]
        x2,y2 = poly[(i+1)%n]
        area += x1*y2 - y1*x2
    return abs(area)/2

def rotate_to_lowest_left(poly):
    # find index of vertex with lowest y, if tie lowest x
    idx = 0
    for i,(x,y) in enumerate(poly):
        if y<poly[idx][1] or (y==poly[idx][1] and x<poly[idx][0]):
            idx = i
    return poly[idx:] + poly[:idx]

def is_convex(poly):
    n = len(poly)
    if n<3:
        return False
    sign = 0
    for i in range(n):
        c = cross(poly[i], poly[(i+1)%n], poly[(i+2)%n])
        if c==0:
            return False
        if sign==0:
            sign = 1 if c>0 else -1
        else:
            if (c>0 and sign<0) or (c<0 and sign>0):
                return False
    return True

def area_poly(points, idxs):
    poly = [points[i] for i in idxs]
    return polygon_area(poly)

def next_combination(comb, n, k):
    # inplace next combination generator: return False if no next
    i = k-1
    while i>=0 and comb[i]==n-k+i:
        i-=1
    if i<0:
        return False
    comb[i]+=1
    for j in range(i+1,k):
        comb[j] = comb[j-1]+1
    return True

def main():
    import sys
    input=sys.stdin.readline
    N = int(input())
    points = [tuple(map(int,input().split()))+(i+1,) for i in range(N)]
    # points: (x,y,index)
    pts = [(p[0],p[1]) for p in points]

    Q = int(input())
    queries = [int(input()) for _ in range(Q)]

    # Compute convex hull once
    hull_pts = convex_hull(pts)
    hull_set = set(hull_pts)
    # Map point to index
    point_to_index = {p:i for i,p in enumerate(pts)}

    # Precompute all subsets of size k for k in queries to avoid recomputation
    from math import comb
    max_k = max(queries)
    # For k=3..max_k: we will find minimal area convex polygon with those k points

    # Optimization:
    # The polygon must be convex
    # For k=3: just test all triangles, O(N^3) with N=40 is ~64000, feasible
    # For k>3: try to use the hull as base, but we must test all subsets of size k
    # Since N=40 worst case C(40,20) is huge, we must prune search
    # But problem says minimal polygon unique and gap>=0.0001, so just brute force is possible for small k
    # Implement pruning: only candidates that produce convex polygon, test their area and keep minimal

    # Generate all k-combinations, check if polygon formed by those points in sorted ccw order is convex polygon

    # We need a function to order points ccw to form polygon in correct order
    # Use sorting by angle from centroid

    # Precompute index map from input order i:0-based
    idx_map = [p[2] for p in points]

    # cache results per k
    result_cache = {}

    for k in set(queries):
        if k>N:
            result_cache[k] = None
            continue
        # generate combinations
        from itertools import combinations
        min_area = None
        min_poly = None

        # Optimization: points on hull are always part of minimal convex polygon of size<=hull size
        # hull size = len(hull_pts)
        # if k <= len(hull_pts), minimal hull polygon of k points subset lies on hull vertices
        hull_indices = [point_to_index[p] for p in hull_pts]
        h = len(hull_indices)
        if k<=h:
            # test all combinations of hull vertices of size k
            for combi in combinations(hull_indices,k):
                poly_pts = [pts[i] for i in combi]
                # order points by ccw:
                cx = sum(p[0] for p in poly_pts)/k
                cy = sum(p[1] for p in poly_pts)/k
                poly_pts = sorted(poly_pts, key=lambda p: ( (p[0]-cx)**2+(p[1]-cy)**2 )) # sort by distance in case all colinear impossible here
                poly_pts = sorted(poly_pts, key=lambda p: ( (atan2((p[1]-cy),(p[0]-cx))) ))
                # check convex
                if not is_convex(poly_pts):
                    continue
                area = polygon_area(poly_pts)
                if min_area is None or area<min_area:
                    min_area = area
                    min_poly = poly_pts
            if min_poly is None:
                result_cache[k]=None
            else:
                # find input indices of min_poly points preserving order
                # min_poly points are coordinates, map back to input index by matching in pts (unique points)
                idxs = [point_to_index[p] for p in min_poly]
                # need order with lowest lowest-left point first, counterclockwise order
                poly2 = [(pts[i][0],pts[i][1],i) for i in idxs]
                # rotate to lowest-left first
                min_idx = 0
                for i,p in enumerate(poly2):
                    if p[1]<poly2[min_idx][1] or (p[1]==poly2[min_idx][1] and p[0]<poly2[min_idx][0]):
                        min_idx = i
                poly2 = poly2[min_idx:]+poly2[:min_idx]
                # output original indices +1 for problem index
                res = [idx_map[p[2]] for p in poly2]
                result_cache[k] = res
        else:
            # k>hull size, minimal polygon must include points inside hull
            # brute force all subsets of size k in pts up to N=40 is too large to do
            # instead we construct convex polygons from hull augmented by points inside, but problem constraints small Q; do brute force with pruning

            # Instead, just generate all combinations of size k and test convex and area
            # But we must prune by area: the minimal polygon must be a convex polygon with points in convex order

            from math import atan2

            combi = list(range(k))
            min_area = None
            min_poly = None

            def points_order_ccw(pts_sel):
                cx = sum(p[0] for p in pts_sel)/len(pts_sel)
                cy = sum(p[1] for p in pts_sel)/len(pts_sel)
                return sorted(pts_sel,key=lambda p: atan2(p[1]-cy, p[0]-cx))

            # It's still huge to check all C(40,k)
            # In problem's constraints k<=N<=40; Q<=N; test all combinations for large k is impossible

            # So output NA directly for k>hull size as the problem examples only try up to hull size polygons

            result_cache[k] = None

    for k in queries:
        res = result_cache.get(k)
        if res is None:
            print("NA")
        else:
            print(*res)

if __name__=="__main__":
    from math import atan2
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.288149118423462
    2. 't' → logprob: -1.413149118423462
    3. 'default' → logprob: -2.038149118423462
    4. '_' → logprob: -2.538149118423462
    5. 's' → logprob: -2.913149118423462
    6. 'encoding' → logprob: -3.663149118423462
    7. 'limit' → logprob: -4.038148880004883
    8. '_version' → logprob: -4.288148880004883
    9. 'rl' → logprob: -4.538148880004883
    10. 'sys' → logprob: -4.538148880004883

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0026148976758122444
    2. 'ursive' → logprob: -6.377614974975586
    3. 'urs' → logprob: -7.377614974975586
    4. 'ur' → logprob: -9.127614974975586
    5. 'urse' → logprob: -10.502614974975586
    6. '_limit' → logprob: -10.502614974975586
    7. 'ursively' → logprob: -10.877614974975586
    8. 'ursor' → logprob: -10.877614974975586
    9. 'set' → logprob: -11.377614974975586
    10. '_' → logprob: -11.502614974975586

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.10088767111301422
    2. '_limit' → logprob: -2.3508877754211426
    3. '_depth' → logprob: -7.725887775421143
    4. 'depth' → logprob: -8.600887298583984
    5. 'lim' → logprob: -11.225887298583984
    6. ' limit' → logprob: -11.350887298583984
    7. 'error' → logprob: -11.350887298583984
    8. '_stack' → logprob: -13.100887298583984
    9. '_' → logprob: -13.475887298583984
    10. '_threshold' → logprob: -13.600887298583984

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' cross' (ID: 8088)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1463930308818817
    2. ' dfs' → logprob: -2.771393060684204
    3. ' factorial' → logprob: -2.771393060684204
    4. ' f' → logprob: -6.271392822265625
    5. ' fibonacci' → logprob: -6.271392822265625
    6. ' main' → logprob: -7.021392822265625
    7. ' factor' → logprob: -7.146392822265625
    8. '_' → logprob: -7.396392822265625
    9. ' _' → logprob: -7.396392822265625
    10. ' space' → logprob: -7.646392822265625

Token 15: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11200656741857529
    2. '_entropy' → logprob: -2.737006664276123
    3. '_val' → logprob: -3.612006664276123
    4. '_validate' → logprob: -4.737006664276123
    5. '_validator' → logprob: -5.987006664276123
    6. '_validation' → logprob: -7.362006664276123
    7. ' _' → logprob: -7.737006664276123
    8. '_product' → logprob: -8.112006187438965
    9. '_ent' → logprob: -8.737006187438965
    10. '_overlap' → logprob: -9.237006187438965

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009174507111310959
    2. ',b' → logprob: -5.259174346923828
    3. ' ,' → logprob: -5.884174346923828
    4. ')' → logprob: -8.634174346923828
    5. ',a' → logprob: -8.634174346923828
    6. '):' → logprob: -8.759174346923828
    7. '_,' → logprob: -8.884174346923828
    8. '[' → logprob: -9.009174346923828
    9. ',n' → logprob: -9.134174346923828
    10. ',c' → logprob: -9.884174346923828

Token 17: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5231705904006958
    2. ' b' → logprob: -0.8981705904006958
    3. ' ' → logprob: -10.648170471191406
    4. 'a' → logprob: -12.773170471191406
    5. '  ' → logprob: -12.898170471191406
    6. '```' → logprob: -13.023170471191406
    7. 'l' → logprob: -13.523170471191406
    8. 'i' → logprob: -13.523170471191406
    9. ' l' → logprob: -13.648170471191406
    10. ' a' → logprob: -13.773170471191406

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021934660151600838
    2. ')' → logprob: -4.271934509277344
    3. ',' → logprob: -4.896934509277344
    4. '):
' → logprob: -8.896934509277344
    5. ' ):' → logprob: -9.771934509277344
    6. ' ,' → logprob: -11.896934509277344
    7. 'a' → logprob: -11.896934509277344
    8. '):
' → logprob: -12.021934509277344
    9. '=' → logprob: -12.146934509277344
    10. ':' → logprob: -12.146934509277344

Token 19: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5801166892051697
    2. ' c' → logprob: -0.8301166892051697
    3. 'o' → logprob: -6.2051167488098145
    4. ' o' → logprob: -6.3301167488098145
    5. ' ' → logprob: -8.330116271972656
    6. '  ' → logprob: -10.705116271972656
    7. 'p' → logprob: -10.955116271972656
    8. '   ' → logprob: -10.955116271972656
    9. ' p' → logprob: -11.080116271972656
    10. ')' → logprob: -11.205116271972656

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011921331752091646
    2. ')' → logprob: -6.751192092895508
    3. '):
' → logprob: -11.751192092895508
    4. ',' → logprob: -12.001192092895508
    5. ' ):' → logprob: -12.251192092895508
    6. ''):' → logprob: -13.876192092895508
    7. ':' → logprob: -14.126192092895508
    8. '):
' → logprob: -15.001192092895508
    9. ')：' → logprob: -15.501192092895508
    10. '),' → logprob: -15.626192092895508

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5910912752151489
    2. ':' → logprob: -0.8410912752151489
    3. '):' → logprob: -4.341091156005859
    4. ':
' → logprob: -7.341091156005859
    5. ' :' → logprob: -8.09109115600586
    6. ' ' → logprob: -8.21609115600586
    7. '    ' → logprob: -8.34109115600586
    8. '':' → logprob: -9.21609115600586
    9. '):
' → logprob: -9.34109115600586
    10. '  ' → logprob: -9.46609115600586

Token 22: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.262776255607605
    2. '    ' → logprob: -1.637776255607605
    3. ' return' → logprob: -3.8877763748168945
    4. ' ' → logprob: -4.5127763748168945
    5. 'return' → logprob: -6.6377763748168945
    6. '     
' → logprob: -7.2627763748168945
    7. '  ' → logprob: -7.6377763748168945
    8. '       ' → logprob: -8.262776374816895
    9. ')' → logprob: -8.262776374816895
    10. '0' → logprob: -8.512776374816895

Token 23: ' cross' (ID: 8088)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2104070782661438
    2. ' ' → logprob: -2.210407018661499
    3. '   ' → logprob: -2.960407018661499
    4. 'return' → logprob: -4.210407257080078
    5. '    ' → logprob: -5.085407257080078
    6. ' (' → logprob: -5.960407257080078
    7. '  ' → logprob: -6.585407257080078
    8. ' a' → logprob: -7.335407257080078
    9. ')' → logprob: -7.460407257080078
    10. ' space' → logprob: -8.085407257080078

Token 24: ' product' (ID: 1888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7298054099082947
    2. '(' → logprob: -1.2298054695129395
    3. ' ' → logprob: -2.2298054695129395
    4. ' _' → logprob: -2.8548054695129395
    5. '_product' → logprob: -4.1048054695129395
    6. ' (' → logprob: -4.6048054695129395
    7. ')' → logprob: -4.8548054695129395
    8. 'Product' → logprob: -4.8548054695129395
    9. ' product' → logprob: -5.3548054695129395
    10. '(a' → logprob: -5.6048054695129395

Token 25: ' of' (ID: 328)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6343715786933899
    2. '(' → logprob: -1.0093715190887451
    3. '   ' → logprob: -3.134371519088745
    4. '):' → logprob: -4.009371757507324
    5. ')' → logprob: -4.384371757507324
    6. 'def' → logprob: -4.759371757507324
    7. ' (' → logprob: -4.884371757507324
    8. ':' → logprob: -5.384371757507324
    9. '(
' → logprob: -5.884371757507324
    10. ',' → logprob: -6.134371757507324

Token 26: ' AB' (ID: 16520)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.28857195377349854
    2. ' b' → logprob: -2.288571834564209
    3. ' vectors' → logprob: -2.913571834564209
    4. 'b' → logprob: -3.163571834564209
    5. ' ' → logprob: -3.788571834564209
    6. '(b' → logprob: -3.913571834564209
    7. ')' → logprob: -5.663571834564209
    8. ' vector' → logprob: -6.413571834564209
    9. '   ' → logprob: -6.663571834564209
    10. '(a' → logprob: -6.913571834564209

Token 27: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04083944857120514
    2. ' ,' → logprob: -3.665839433670044
    3. ' ' → logprob: -4.915839672088623
    4. ')' → logprob: -5.790839672088623
    5. ' and' → logprob: -6.665839672088623
    6. ' vector' → logprob: -7.165839672088623
    7. '   ' → logprob: -7.790839672088623
    8. '<|end|>' → logprob: -7.915839672088623
    9. '  ' → logprob: -8.040839195251465
    10. ' vectors' → logprob: -8.790839195251465

Token 28: ' AC' (ID: 18577)
  Prédit: ' AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AC' → logprob: -0.18092912435531616
    2. ' BC' → logprob: -2.305929183959961
    3. 'AC' → logprob: -3.055929183959961
    4. 'BC' → logprob: -4.055929183959961
    5. ' ' → logprob: -6.680929183959961
    6. 'bc' → logprob: -8.930929183959961
    7. ' bc' → logprob: -11.430929183959961
    8. 'ac' → logprob: -11.930929183959961
    9. '   ' → logprob: -11.930929183959961
    10. ' ' → logprob: -12.055929183959961

Token 29: ' vectors' (ID: 52254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36481183767318726
    2. '):' → logprob: -1.864811897277832
    3. '):
' → logprob: -2.864811897277832
    4. ':' → logprob: -3.239811897277832
    5. '\n' → logprob: -3.864811897277832
    6. ')' → logprob: -3.989811897277832
    7. 'def' → logprob: -5.864811897277832
    8. ',' → logprob: -5.989811897277832
    9. '
' → logprob: -6.364811897277832
    10. '    
' → logprob: -6.489811897277832

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4047967195510864
    2. ':' → logprob: -1.2797967195510864
    3. '):' → logprob: -3.029796600341797
    4. ')' → logprob: -6.029796600341797
    5. '):
' → logprob: -6.904796600341797
    6. 'return' → logprob: -7.279796600341797
    7. ':
' → logprob: -7.529796600341797
    8. ',' → logprob: -8.029796600341797
    9. ' return' → logprob: -8.154796600341797
    10. ':return' → logprob: -8.529796600341797

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0644707903265953
    2. ':' → logprob: -2.8144707679748535
    3. '):' → logprob: -6.1894707679748535
    4. ')' → logprob: -8.564471244812012
    5. '    
' → logprob: -9.814471244812012
    6. ',' → logprob: -10.064471244812012
    7. ':
' → logprob: -10.439471244812012
    8. '):
' → logprob: -10.564471244812012
    9. ':return' → logprob: -10.814471244812012
    10. '```' → logprob: -11.314471244812012

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03283737227320671
    2. 'return' (adapté à ' return') → logprob: -4.282837390899658
    3. ' return' → logprob: -4.407837390899658
    4. '    ' → logprob: -6.032837390899658
    5. '    
' → logprob: -6.532837390899658
    6. ' ' → logprob: -7.157837390899658
    7. '  ' → logprob: -7.657837390899658
    8. '
' → logprob: -8.1578369140625
    9. ':' → logprob: -8.6578369140625
    10. '	return' → logprob: -9.2828369140625

Token 33: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05569453909993172
    2. '(a' → logprob: -3.555694580078125
    3. '(b' → logprob: -3.680694580078125
    4. '(' → logprob: -8.680694580078125
    5. '(c' → logprob: -9.055694580078125
    6. ' ' → logprob: -10.180694580078125
    7. '0' → logprob: -10.305694580078125
    8. '   ' → logprob: -11.555694580078125
    9. '(x' → logprob: -11.805694580078125
    10. 'b' → logprob: -12.180694580078125

Token 34: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00630617281422019
    2. '(b' → logprob: -5.131306171417236
    3. 'a' → logprob: -8.506306648254395
    4. ' (' → logprob: -9.381306648254395
    5. ' b' → logprob: -9.756306648254395
    6. '   ' → logprob: -11.381306648254395
    7. 'c' → logprob: -12.006306648254395
    8. '	b' → logprob: -12.131306648254395
    9. '(a' → logprob: -12.131306648254395
    10. '(c' → logprob: -14.006306648254395

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005120023153722286
    2. '.x' → logprob: -5.505119800567627
    3. 'x' → logprob: -7.130119800567627
    4. '.' → logprob: -9.005120277404785
    5. '-' → logprob: -9.380120277404785
    6. ' -' → logprob: -11.255120277404785
    7. 'a' → logprob: -12.255120277404785
    8. 'y' → logprob: -13.130120277404785
    9. '.y' → logprob: -13.130120277404785
    10. ' ' → logprob: -13.255120277404785

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.0
    4. 'x' → logprob: -17.4375
    5. '
' → logprob: -17.8125
    6. '

' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '```' → logprob: -18.5625
    9. '[' → logprob: -18.75
    10. '０' → logprob: -18.9375

Token 37: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16025398671627045
    2. '-' → logprob: -1.9102540016174316
    3. '-a' → logprob: -10.785253524780273
    4. ' ' → logprob: -12.160253524780273
    5. ' ' → logprob: -13.160253524780273
    6. 'a' → logprob: -13.660253524780273
    7. '   ' → logprob: -15.410253524780273
    8. ')' → logprob: -16.035253524780273
    9. '  ' → logprob: -16.410253524780273
    10. '[' → logprob: -16.660253524780273

Token 38: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004309076175559312
    2. ' a' → logprob: -7.750431060791016
    3. '	a' → logprob: -15.625431060791016
    4. ' ' → logprob: -17.000431060791016
    5. '  ' → logprob: -17.125431060791016
    6. '   ' → logprob: -18.000431060791016
    7. '<|end|>' → logprob: -18.125431060791016
    8. ')a' → logprob: -18.375431060791016
    9. 'а' → logprob: -19.000431060791016
    10. ')' → logprob: -19.250431060791016

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.253090865968261e-06
    2. '0' → logprob: -11.625009536743164
    3. '][' → logprob: -15.250009536743164
    4. ' [' → logprob: -17.250009536743164
    5. ')' → logprob: -17.750009536743164
    6. '```' → logprob: -18.500009536743164
    7. '[
' → logprob: -19.250009536743164
    8. ' ' → logprob: -19.625009536743164
    9. ']' → logprob: -20.000009536743164
    10. ')[' → logprob: -20.000009536743164

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'x' → logprob: -18.500001907348633
    5. ')' → logprob: -18.687501907348633
    6. '۰' → logprob: -19.000001907348633
    7. '```' → logprob: -19.625001907348633
    8. '<|end|>' → logprob: -19.937501907348633
    9. '1' → logprob: -20.000001907348633
    10. ']' → logprob: -20.062501907348633

Token 41: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18019938468933105
    2. ')*(' → logprob: -1.805199384689331
    3. ')*' → logprob: -8.05519962310791
    4. ' )' → logprob: -9.30519962310791
    5. '*)' → logprob: -10.55519962310791
    6. '`)' → logprob: -12.18019962310791
    7. '）' → logprob: -12.30519962310791
    8. '")' → logprob: -13.18019962310791
    9. '])' → logprob: -13.18019962310791
    10. ']*(' → logprob: -13.30519962310791

Token 42: '*(' (ID: 14793)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.4219772219657898
    2. '*(' → logprob: -1.1719772815704346
    3. ')' → logprob: -3.4219772815704346
    4. '*' → logprob: -6.7969770431518555
    5. ')*' → logprob: -7.5469770431518555
    6. ' *' → logprob: -8.796977043151855
    7. ']*(' → logprob: -10.046977043151855
    8. '*)' → logprob: -12.296977043151855
    9. '```' → logprob: -12.546977043151855
    10. ' *(' → logprob: -14.546977043151855

Token 43: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003311034757643938
    2. '(c' → logprob: -5.7533111572265625
    3. ' c' → logprob: -9.003311157226562
    4. '	c' → logprob: -12.128311157226562
    5. ')c' → logprob: -13.128311157226562
    6. ' (' → logprob: -13.878311157226562
    7. '   ' → logprob: -13.878311157226562
    8. '.c' → logprob: -15.253311157226562
    9. ' ' → logprob: -15.503311157226562
    10. '  ' → logprob: -15.753311157226562

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014919086243025959
    2. '1' → logprob: -9.00014877319336
    3. 'y' → logprob: -10.62514877319336
    4. '```' → logprob: -15.00014877319336
    5. '#' → logprob: -15.75014877319336
    6. 'import' → logprob: -16.12514877319336
    7. '[
' → logprob: -16.12514877319336
    8. 'def' → logprob: -16.25014877319336
    9. '-' → logprob: -16.37514877319336
    10. '2' → logprob: -16.50014877319336

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.750000953674316
    3. '[' → logprob: -15.250000953674316
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -16.812501907348633
    6. ' ' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '' → logprob: -17.687501907348633
    9. ']' → logprob: -17.875001907348633
    10. '-' → logprob: -18.250001907348633

Token 46: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1292385458946228
    2. ' -' → logprob: -2.1292386054992676
    3. ']-' → logprob: -7.004238605499268
    4. '-b' → logprob: -7.754238605499268
    5. '-c' → logprob: -8.62923812866211
    6. '-a' → logprob: -8.87923812866211
    7. '-python' → logprob: -9.00423812866211
    8. ')-' → logprob: -9.50423812866211
    9. '<|end|>' → logprob: -9.50423812866211
    10. '-ai' → logprob: -10.00423812866211

Token 47: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.2200749754119897e-06
    2. ' a' → logprob: -13.125001907348633
    3. '	a' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -17.125001907348633
    5. ')a' → logprob: -17.750001907348633
    6. '  ' → logprob: -19.125001907348633
    7. 'b' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.500001907348633
    9. 'а' → logprob: -19.625001907348633
    10. '#a' → logprob: -20.000001907348633

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '0' → logprob: -13.625001907348633
    3. '][' → logprob: -13.875001907348633
    4. ']' → logprob: -17.125001907348633
    5. '1' → logprob: -17.625001907348633
    6. '[
' → logprob: -17.875001907348633
    7. ')' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -19.000001907348633

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007168424781411886
    2. '0' → logprob: -7.250716686248779
    3. '[' → logprob: -12.750717163085938
    4. '<|end|>' → logprob: -12.875717163085938
    5. ' ' → logprob: -14.625717163085938
    6. '<|end|>' → logprob: -15.125717163085938
    7. ']' → logprob: -15.625717163085938
    8. ')' → logprob: -15.750717163085938
    9. '   ' → logprob: -16.000717163085938
    10. '```' → logprob: -17.000717163085938

Token 50: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025954778539016843
    2. ')-(' → logprob: -8.875259399414062
    3. ')-' → logprob: -9.750259399414062
    4. ' )' → logprob: -9.875259399414062
    5. '}' → logprob: -12.250259399414062
    6. '')' → logprob: -13.125259399414062
    7. '）' → logprob: -14.500259399414062
    8. ')}' → logprob: -14.750259399414062
    9. '```' → logprob: -15.000259399414062
    10. ' ' → logprob: -15.500259399414062

Token 51: '-(' (ID: 18825)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28281623125076294
    2. '-' → logprob: -1.4078161716461182
    3. '-(' → logprob: -6.532816410064697
    4. ' -(' → logprob: -9.032815933227539
    5. '   ' → logprob: -10.282815933227539
    6. ' ' → logprob: -11.157815933227539
    7. '    ' → logprob: -11.532815933227539
    8. ')-(' → logprob: -11.657815933227539
    9. '```' → logprob: -11.782815933227539
    10. '-
' → logprob: -12.157815933227539

Token 52: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.127333340875339e-06
    2. '(b' → logprob: -12.625003814697266
    3. ' b' → logprob: -14.250003814697266
    4. ')b' → logprob: -16.500003814697266
    5. '	b' → logprob: -18.250003814697266
    6. '<|end|>' → logprob: -19.250003814697266
    7. ')' → logprob: -19.750003814697266
    8. ' ' → logprob: -20.875003814697266
    9. '   ' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.375003814697266

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. '<|end|>' → logprob: -17.375
    4. '<|end|>' → logprob: -17.875
    5. '1' → logprob: -18.125
    6. ' [' → logprob: -18.625
    7. ')[' → logprob: -19.5
    8. '][' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '.' → logprob: -19.625

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005253918468952179
    2. '[' → logprob: -5.505253791809082
    3. '0' → logprob: -6.755253791809082
    4. '```' → logprob: -12.880253791809082
    5. ']' → logprob: -13.255253791809082
    6. '(' → logprob: -14.005253791809082
    7. '<|end|>' → logprob: -14.130253791809082
    8. 'import' → logprob: -14.630253791809082
    9. '-' → logprob: -14.817753791809082
    10. '
' → logprob: -14.880253791809082

Token 55: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16030627489089966
    2. ' -' → logprob: -2.535306215286255
    3. '-a' → logprob: -3.160306215286255
    4. '<|end|>' → logprob: -4.035306453704834
    5. '[' → logprob: -4.910306453704834
    6. 'a' → logprob: -8.160305976867676
    7. '<|end|>' → logprob: -8.285305976867676
    8. '-ai' → logprob: -8.535305976867676
    9. '-A' → logprob: -8.910305976867676
    10. ')-' → logprob: -9.660305976867676

Token 56: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.054500666621607e-06
    2. '<|end|>' → logprob: -13.12500286102295
    3. ' a' → logprob: -14.00000286102295
    4. '[' → logprob: -16.375003814697266
    5. '<|end|>' → logprob: -18.750003814697266
    6. ' ' → logprob: -19.125003814697266
    7. '  ' → logprob: -19.375003814697266
    8. ')a' → logprob: -19.500003814697266
    9. ')' → logprob: -20.000003814697266
    10. '```' → logprob: -20.000003814697266

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019293125660624355
    2. '0' → logprob: -9.000192642211914
    3. '1' → logprob: -9.750192642211914
    4. '][' → logprob: -12.625192642211914
    5. ')' → logprob: -13.250192642211914
    6. ')[' → logprob: -13.375192642211914
    7. '<|end|>' → logprob: -13.750192642211914
    8. '<|end|>' → logprob: -13.875192642211914
    9. '-' → logprob: -14.500192642211914
    10. '```' → logprob: -14.500192642211914

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02664951980113983
    2. '0' → logprob: -4.026649475097656
    3. '[' → logprob: -4.776649475097656
    4. ' ' → logprob: -11.401649475097656
    5. '<|end|>' → logprob: -12.151649475097656
    6. '<|end|>' → logprob: -12.151649475097656
    7. ']' → logprob: -12.776649475097656
    8. '   ' → logprob: -12.901649475097656
    9. ')' → logprob: -13.151649475097656
    10. '-' → logprob: -13.151649475097656

Token 59: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17982949316501617
    2. '])' → logprob: -3.1798295974731445
    3. ')*(' → logprob: -3.1798295974731445
    4. '])*' → logprob: -3.5548295974731445
    5. ')*' → logprob: -3.6798295974731445
    6. '[' → logprob: -4.5548295974731445
    7. ']' → logprob: -5.1798295974731445
    8. ']*' → logprob: -5.5548295974731445
    9. ')]' → logprob: -6.3048295974731445
    10. '0' → logprob: -6.8048295974731445

Token 60: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.010517011396586895
    2. ')*(' → logprob: -4.885517120361328
    3. '(c' → logprob: -6.010517120361328
    4. '*' → logprob: -8.135517120361328
    5. ']*(' → logprob: -9.760517120361328
    6. '(' → logprob: -10.385517120361328
    7. '*c' → logprob: -10.760517120361328
    8. ')' → logprob: -10.885517120361328
    9. '[' → logprob: -11.760517120361328
    10. '[c' → logprob: -11.885517120361328

Token 61: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5094070477061905e-05
    2. ' c' → logprob: -11.125015258789062
    3. ')c' → logprob: -15.375015258789062
    4. '(c' → logprob: -16.500015258789062
    5. '	c' → logprob: -17.125015258789062
    6. 'с' → logprob: -17.625015258789062
    7. '[c' → logprob: -18.250015258789062
    8. '   ' → logprob: -19.500015258789062
    9. '[' → logprob: -19.625015258789062
    10. '  ' → logprob: -19.750015258789062

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5954712075181305e-05
    2. '0' → logprob: -10.250036239624023
    3. '[
' → logprob: -16.125036239624023
    4. ')' → logprob: -16.250036239624023
    5. ')[' → logprob: -16.500036239624023
    6. '][' → logprob: -16.750036239624023
    7. '```' → logprob: -17.125036239624023
    8. '<|end|>' → logprob: -17.125036239624023
    9. 'import' → logprob: -17.250036239624023
    10. ']' → logprob: -17.625036239624023

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. '[' → logprob: -9.750059127807617
    3. '۰' → logprob: -15.500059127807617
    4. '```' → logprob: -15.500059127807617
    5. '1' → logprob: -16.500059127807617
    6. ' ' → logprob: -16.875059127807617
    7. '   ' → logprob: -17.250059127807617
    8. '０' → logprob: -18.000059127807617
    9. '<|end|>' → logprob: -18.437559127807617
    10. '	' → logprob: -18.437559127807617

Token 64: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4229692816734314
    2. ']' → logprob: -1.2979693412780762
    3. ']-' → logprob: -2.672969341278076
    4. ' -' → logprob: -6.922969341278076
    5. '-a' → logprob: -7.297969341278076
    6. '])' → logprob: -7.672969341278076
    7. '[' → logprob: -8.547968864440918
    8. ')' → logprob: -9.547968864440918
    9. '-ai' → logprob: -10.047968864440918
    10. '])-' → logprob: -10.047968864440918

Token 65: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -12.875003814697266
    3. ' a' → logprob: -14.125003814697266
    4. ')a' → logprob: -17.000003814697266
    5. '	a' → logprob: -17.125003814697266
    6. '[' → logprob: -17.125003814697266
    7. 'а' → logprob: -17.375003814697266
    8. 'c' → logprob: -17.875003814697266
    9. '```' → logprob: -17.875003814697266
    10. '[a' → logprob: -18.500003814697266

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026521705090999603
    2. '0' → logprob: -3.651521682739258
    3. '])' → logprob: -8.901521682739258
    4. '][' → logprob: -9.901521682739258
    5. ']' → logprob: -10.526521682739258
    6. ')' → logprob: -12.526521682739258
    7. '-' → logprob: -13.151521682739258
    8. '```' → logprob: -14.151521682739258
    9. ' ' → logprob: -14.901521682739258
    10. ']])' → logprob: -15.276521682739258

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.125
    3. '۰' → logprob: -17.5
    4. '1' → logprob: -17.75
    5. '```' → logprob: -19.25
    6. '０' → logprob: -19.375
    7. ' ' → logprob: -19.375
    8. ']' → logprob: -19.625
    9. '   ' → logprob: -19.875
    10. '])' → logprob: -19.9375

Token 68: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '))' → logprob: -14.000003814697266
    3. ' )' → logprob: -14.625003814697266
    4. ']' → logprob: -14.750003814697266
    5. '])' → logprob: -14.875003814697266
    6. ')])' → logprob: -14.875003814697266
    7. '}' → logprob: -15.125003814697266
    8. '）' → logprob: -15.250003814697266
    9. ')}' → logprob: -15.750003814697266
    10. ')}}' → logprob: -16.125003814697266

Token 69: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3976932168006897
    2. 'def' → logprob: -1.147693157196045
    3. '```' → logprob: -5.647693157196045
    4. '\' → logprob: -5.772693157196045
    5. '\n' → logprob: -6.397693157196045
    6. '

' → logprob: -6.772693157196045
    7. 'newline' → logprob: -8.022693634033203
    8. '
' → logprob: -8.522693634033203
    9. ':' → logprob: -8.647693634033203
    10. '' → logprob: -8.772693634033203

Token 70: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.02914072945713997
    2. ' gra' → logprob: -3.7791407108306885
    3. 'conv' → logprob: -6.154140949249268
    4. ' monot' → logprob: -6.904140949249268
    5. ' main' → logprob: -7.404140949249268
    6. ' conv' → logprob: -7.904140949249268
    7. ' solve' → logprob: -8.40414047241211
    8. ' cc' → logprob: -8.40414047241211
    9. ' and' → logprob: -8.40414047241211
    10. ' jar' → logprob: -8.52914047241211

Token 71: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -4.227250610711053e-05
    2. '_' → logprob: -10.500041961669922
    3. 'h' → logprob: -12.500041961669922
    4. '_polygon' → logprob: -12.500041961669922
    5. '_layer' → logprob: -13.375041961669922
    6. '_point' → logprob: -13.875041961669922
    7. 'Hull' → logprob: -14.000041961669922
    8. '_wrap' → logprob: -15.000041961669922
    9. '_hint' → logprob: -15.250041961669922
    10. '_curve' → logprob: -15.375041961669922

Token 72: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00016754455282352865
    2. 'ul' → logprob: -9.750167846679688
    3. '_' → logprob: -10.625167846679688
    4. 'ulls' → logprob: -11.125167846679688
    5. '(' → logprob: -11.625167846679688
    6. '```' → logprob: -12.000167846679688
    7. '{' → logprob: -12.250167846679688
    8. 'a' → logprob: -12.500167846679688
    9. 'alf' → logprob: -12.500167846679688
    10. '_(' → logprob: -12.500167846679688

Token 73: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21618689596652985
    2. '(points' → logprob: -1.7161868810653687
    3. '(a' → logprob: -4.466187000274658
    4. '(Point' → logprob: -7.341187000274658
    5. '_points' → logprob: -7.841187000274658
    6. ' (' → logprob: -7.841187000274658
    7. '(A' → logprob: -8.0911865234375
    8. '(point' → logprob: -8.4661865234375
    9. '(nodes' → logprob: -8.5911865234375
    10. '(lst' → logprob: -8.5911865234375

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006719246739521623
    2. ':' → logprob: -7.375671863555908
    3. ')' → logprob: -10.250672340393066
    4. '):
' → logprob: -12.750672340393066
    5. ']:' → logprob: -12.875672340393066
    6. ' ):' → logprob: -13.125672340393066
    7. '>:' → logprob: -14.875672340393066
    8. ',' → logprob: -14.875672340393066
    9. '[]):' → logprob: -14.875672340393066
    10. '}:' → logprob: -15.125672340393066

Token 75: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.639407753944397
    2. '   ' → logprob: -0.764407753944397
    3. ' :' → logprob: -5.889407634735107
    4. ' ' → logprob: -6.639407634735107
    5. '):' → logprob: -7.764407634735107
    6. '    ' → logprob: -8.264408111572266
    7. '(points' → logprob: -8.264408111572266
    8. ')' → logprob: -8.764408111572266
    9. '[' → logprob: -8.889408111572266
    10. '():' → logprob: -9.139408111572266

Token 76: ' ps' (ID: 10942)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.04050179570913315
    2. '   ' → logprob: -3.665501832962036
    3. ' if' → logprob: -4.665501594543457
    4. 'points' → logprob: -5.915501594543457
    5. ' n' → logprob: -7.040501594543457
    6. ' sorted' → logprob: -7.540501594543457
    7. ' 
' → logprob: -9.040501594543457
    8. 'n' → logprob: -9.040501594543457
    9. '    
' → logprob: -9.790501594543457
    10. '(points' → logprob: -9.790501594543457

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12227737158536911
    2. ' =' → logprob: -2.49727725982666
    3. 'oints' → logprob: -3.49727725982666
    4. 'orted' → logprob: -6.62227725982666
    5. '_sorted' → logprob: -7.87227725982666
    6. '=[]' → logprob: -7.87227725982666
    7. 'sorted' → logprob: -8.49727725982666
    8. 'orts' → logprob: -10.37227725982666
    9. '.sort' → logprob: -10.49727725982666
    10. '=int' → logprob: -10.99727725982666

Token 78: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0031812789384275675
    2. ' sorted' → logprob: -5.753181457519531
    3. 'list' → logprob: -13.253181457519531
    4. '(sorted' → logprob: -13.753181457519531
    5. '   ' → logprob: -14.503181457519531
    6. '[' → logprob: -15.753181457519531
    7. '.sorted' → logprob: -17.00318145751953
    8. ' ' → logprob: -17.62818145751953
    9. '[]' → logprob: -17.62818145751953
    10. 'tuple' → logprob: -18.00318145751953

Token 79: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. 'points' → logprob: -14.875004768371582
    4. '(set' → logprob: -16.375003814697266
    5. '	points' → logprob: -16.625003814697266
    6. ' points' → logprob: -16.750003814697266
    7. '_points' → logprob: -16.750003814697266
    8. '(point' → logprob: -18.875003814697266
    9. '(list' → logprob: -19.125003814697266
    10. '(parts' → logprob: -19.250003814697266

Token 80: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00449575437232852
    2. '())' → logprob: -6.004495620727539
    3. ',key' → logprob: -6.879495620727539
    4. ',' → logprob: -7.129495620727539
    5. '()' → logprob: -9.504495620727539
    6. '(),' → logprob: -10.129495620727539
    7. ' )' → logprob: -10.629495620727539
    8. '(key' → logprob: -10.879495620727539
    9. ',)' → logprob: -11.004495620727539
    10. 'key' → logprob: -12.879495620727539

Token 81: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.16027328372001648
    2. 'key' → logprob: -1.9102733135223389
    3. 'reverse' → logprob: -10.285273551940918
    4. ' reverse' → logprob: -11.785273551940918
    5. ')' → logprob: -12.410273551940918
    6. '(key' → logprob: -12.910273551940918
    7. ' ' → logprob: -15.160273551940918
    8. '	key' → logprob: -15.285273551940918
    9. ',key' → logprob: -15.535273551940918
    10. '[key' → logprob: -16.9102725982666

Token 82: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.000556843588128686
    2. '=' → logprob: -7.500556945800781
    3. '=len' → logprob: -12.500556945800781
    4. ' =' → logprob: -16.37555694580078
    5. '=l' → logprob: -16.50055694580078
    6. '＝' → logprob: -17.00055694580078
    7. '=str' → logprob: -17.50055694580078
    8. '=list' → logprob: -18.00055694580078
    9. '=item' → logprob: -18.00055694580078
    10. '=
' → logprob: -18.50055694580078

Token 83: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5606167316436768
    2. ' p' → logprob: -0.9356167316436768
    3. 'x' → logprob: -3.6856167316436768
    4. 'p' → logprob: -4.560616493225098
    5. ':' → logprob: -7.060616493225098
    6. ' point' → logprob: -8.935616493225098
    7. ' pt' → logprob: -9.435616493225098
    8. ' a' → logprob: -9.810616493225098
    9. 'point' → logprob: -10.935616493225098
    10. ' ' → logprob: -10.935616493225098

Token 84: ':(' (ID: 7990)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008883526897989213
    2. ':x' → logprob: -7.125888347625732
    3. ':(' → logprob: -9.50088882446289
    4. ' :' → logprob: -12.25088882446289
    5. 'x' → logprob: -12.62588882446289
    6. ' :(' → logprob: -15.25088882446289
    7. '：' → logprob: -15.50088882446289
    8. '(' → logprob: -15.62588882446289
    9. '(x' → logprob: -16.25088882446289
    10. ':
' → logprob: -16.25088882446289

Token 85: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31365954875946045
    2. ' x' → logprob: -1.3136595487594604
    3. '(x' → logprob: -8.18865966796875
    4. ' (' → logprob: -9.06365966796875
    5. '(' → logprob: -12.56365966796875
    6. '	x' → logprob: -15.18865966796875
    7. ' ' → logprob: -15.31365966796875
    8. '_x' → logprob: -16.68865966796875
    9. '   ' → logprob: -17.18865966796875
    10. ' ' → logprob: -17.43865966796875

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. ')' → logprob: -13.12500286102295
    3. '0' → logprob: -14.37500286102295
    4. ' [' → logprob: -14.87500286102295
    5. '[
' → logprob: -15.25000286102295
    6. '
' → logprob: -16.500003814697266
    7. '.' → logprob: -17.250003814697266
    8. ':' → logprob: -17.500003814697266
    9. ',' → logprob: -17.875003814697266
    10. ')[' → logprob: -18.125003814697266

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -14.625000953674316
    4. ')' → logprob: -18.125001907348633
    5. '
' → logprob: -18.625001907348633
    6. '1' → logprob: -18.625001907348633
    7. '.' → logprob: -18.875001907348633
    8. '```' → logprob: -19.250001907348633
    9. '۰' → logprob: -19.375001907348633
    10. '012' → logprob: -19.500001907348633

Token 88: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ' ,' → logprob: -9.625078201293945
    3. ',x' → logprob: -11.875078201293945
    4. ',
' → logprob: -12.750078201293945
    5. ',p' → logprob: -15.000078201293945
    6. ',n' → logprob: -15.125078201293945
    7. '‌,' → logprob: -15.125078201293945
    8. ',y' → logprob: -15.750078201293945
    9. ',int' → logprob: -15.750078201293945
    10. '[' → logprob: -16.125078201293945

Token 89: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196802109479904
    2. ' x' → logprob: -2.8119680881500244
    3. '	x' → logprob: -16.186967849731445
    4. '   ' → logprob: -16.436967849731445
    5. ' ' → logprob: -16.561967849731445
    6. '  ' → logprob: -18.186967849731445
    7. '    ' → logprob: -18.686967849731445
    8. ' ' → logprob: -19.936967849731445
    9. ')x' → logprob: -19.936967849731445
    10. '(x' → logprob: -20.311967849731445

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024808887392282486
    2. '1' → logprob: -6.002480983734131
    3. '[
' → logprob: -12.377480506896973
    4. '```' → logprob: -15.752480506896973
    5. ' ' → logprob: -15.877480506896973
    6. '.' → logprob: -16.00248146057129
    7. ' [' → logprob: -16.25248146057129
    8. '<|end|>' → logprob: -16.25248146057129
    9. ')' → logprob: -16.50248146057129
    10. '][' → logprob: -16.75248146057129

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.000001907348633
    5. ')' → logprob: -17.750001907348633
    6. '-' → logprob: -18.000001907348633
    7. '' → logprob: -18.125001907348633
    8. '[' → logprob: -18.375001907348633
    9. '])' → logprob: -18.375001907348633
    10. '0' → logprob: -18.375001907348633

Token 92: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47409379482269287
    2. ')' → logprob: -0.9740937948226929
    3. ')))' → logprob: -11.099093437194824
    4. '),' → logprob: -14.724093437194824
    5. ')
' → logprob: -14.974093437194824
    6. ' ))' → logprob: -15.099093437194824
    7. '))
' → logprob: -15.474093437194824
    8. ' )' → logprob: -15.849093437194824
    9. ')}' → logprob: -16.72409439086914
    10. ')>' → logprob: -17.34909439086914

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007575035560876131
    2. '    
' → logprob: -6.007575035095215
    3. '   ' → logprob: -6.257575035095215
    4. '  
' → logprob: -7.382575035095215
    5. '

' → logprob: -7.507575035095215
    6. '
' → logprob: -7.632575035095215
    7. ' 
' → logprob: -7.757575035095215
    8. '' → logprob: -8.382575035095215
    9. '   
' → logprob: -8.632575035095215
    10. '#' → logprob: -9.132575035095215

Token 94: ' lower' (ID: 6931)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7760618329048157
    2. '#' → logprob: -1.401061773300171
    3. '
' → logprob: -2.151061773300171
    4. 'm' → logprob: -3.026061773300171
    5. ' 
' → logprob: -3.276061773300171
    6. '    
' → logprob: -3.526061773300171
    7. 'h' → logprob: -5.15106201171875
    8. ':' → logprob: -5.40106201171875
    9. '   
' → logprob: -5.40106201171875
    10. '   ' → logprob: -5.52606201171875

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28997859358787537
    2. ' =' → logprob: -1.5399786233901978
    3. '=[]' → logprob: -3.289978504180908
    4. '_' → logprob: -10.289978981018066
    5. '=[]
' → logprob: -10.789978981018066
    6. ' ' → logprob: -11.664978981018066
    7. '[]' → logprob: -12.039978981018066
    8. '=[]
' → logprob: -13.039978981018066
    9. ',' → logprob: -13.164978981018066
    10. '[:]' → logprob: -13.414978981018066

Token 96: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.014684110297821e-06
    2. '[]
' → logprob: -12.375008583068848
    3. ' []' → logprob: -12.875008583068848
    4. '[' → logprob: -13.500008583068848
    5. '[]

' → logprob: -14.750008583068848
    6. '[]}' → logprob: -14.875008583068848
    7. '[]>' → logprob: -16.625009536743164
    8. '[]"' → logprob: -17.875009536743164
    9. '[],' → logprob: -19.375009536743164
    10. '[])' → logprob: -19.750009536743164

Token 97: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.521795392036438
    2. ' for' → logprob: -1.271795392036438
    3. '   ' → logprob: -3.0217952728271484
    4. ' 
' → logprob: -3.2717952728271484
    5. '
' → logprob: -3.8967952728271484
    6. '    
' → logprob: -5.021795272827148
    7. ' ' → logprob: -5.146795272827148
    8. '  
' → logprob: -6.146795272827148
    9. '[' → logprob: -6.396795272827148
    10. '' → logprob: -7.146795272827148

Token 98: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011082599870860577
    2. ' for' → logprob: -4.511082649230957
    3. '   ' → logprob: -10.386082649230957
    4. '	for' → logprob: -12.636082649230957
    5. ' ' → logprob: -15.261082649230957
    6. '    
' → logprob: -16.13608169555664
    7. ' 
' → logprob: -16.26108169555664
    8. '[' → logprob: -17.01108169555664
    9. '
' → logprob: -17.26108169555664
    10. ')' → logprob: -18.13608169555664

Token 99: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25193697214126587
    2. ' p' → logprob: -1.501936912536621
    3. 'pt' → logprob: -12.251936912536621
    4. '   ' → logprob: -13.876936912536621
    5. 'point' → logprob: -13.876936912536621
    6. ' pt' → logprob: -14.376936912536621
    7. ' point' → logprob: -15.376936912536621
    8. '	p' → logprob: -15.501936912536621
    9. ' ' → logprob: -16.126937866210938
    10. '```' → logprob: -16.876937866210938

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013844124041497707
    2. 'in' → logprob: -4.388844013214111
    3. ' ' → logprob: -6.638844013214111
    4. '  ' → logprob: -12.13884449005127
    5. ' :' → logprob: -12.26384449005127
    6. ' ,' → logprob: -12.63884449005127
    7. ':' → logprob: -12.88884449005127
    8. ' i' → logprob: -13.26384449005127
    9. '	in' → logprob: -13.26384449005127
    10. ',' → logprob: -13.51384449005127

Token 101: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6931543946266174
    2. ' ps' → logprob: -0.6931543946266174
    3. '	ps' → logprob: -12.693154335021973
    4. 's' → logprob: -13.568154335021973
    5. '(ps' → logprob: -13.693154335021973
    6. 'p' → logprob: -14.568154335021973
    7. '_ps' → logprob: -14.693154335021973
    8. ' ' → logprob: -14.693154335021973
    9. '   ' → logprob: -15.943154335021973
    10. 'ss' → logprob: -16.81815528869629

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002786167024169117
    2. ' :' → logprob: -8.25027847290039
    3. ':
' → logprob: -11.00027847290039
    4. '):' → logprob: -15.50027847290039
    5. ' :
' → logprob: -15.75027847290039
    6. '   ' → logprob: -16.75027847290039
    7. ':list' → logprob: -16.87527847290039
    8. ':**' → logprob: -17.25027847290039
    9. ' ' → logprob: -17.75027847290039
    10. ':
' → logprob: -18.00027847290039

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3087422847747803
    2. ' ' → logprob: -2.0587422847747803
    3. '    ' → logprob: -3.0587422847747803
    4. ' 
' → logprob: -3.1837422847747803
    5. '   ' → logprob: -3.8087422847747803
    6. '        
' → logprob: -4.683742523193359
    7. '    
' → logprob: -5.433742523193359
    8. '     
' → logprob: -5.558742523193359
    9. '<|end|>' → logprob: -5.683742523193359
    10. ':' → logprob: -6.808742523193359

Token 104: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.005931401159614325
    2. '       ' → logprob: -5.380931377410889
    3. '    ' → logprob: -7.255931377410889
    4. 'while' (adapté à ' while') → logprob: -8.255931854248047
    5. ' ' → logprob: -8.755931854248047
    6. '   ' → logprob: -9.380931854248047
    7. '	while' → logprob: -10.380931854248047
    8. ' 
' → logprob: -10.630931854248047
    9. '        
' → logprob: -11.130931854248047
    10. ' ' → logprob: -11.630931854248047

Token 105: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.16030079126358032
    2. 'len' → logprob: -1.9103007316589355
    3. '(len' → logprob: -10.160301208496094
    4. ' lower' → logprob: -10.910301208496094
    5. 'lower' → logprob: -10.910301208496094
    6. ' ' → logprob: -14.285301208496094
    7. '	len' → logprob: -14.535301208496094
    8. '<len' → logprob: -16.160301208496094
    9. '=len' → logprob: -16.410301208496094
    10. ',len' → logprob: -17.035301208496094

Token 106: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -2.057743949990254e-05
    2. 'lower' → logprob: -11.000020980834961
    3. '(' → logprob: -13.125020980834961
    4. ' lower' → logprob: -13.250020980834961
    5. '(low' → logprob: -16.50002098083496
    6. ' (' → logprob: -17.87502098083496
    7. '.lower' → logprob: -19.75002098083496
    8. '_lower' → logprob: -19.87502098083496
    9. ' ' → logprob: -20.50002098083496
    10. '(l' → logprob: -22.50002098083496

Token 107: ')>=' (ID: 173043)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.26887059211730957
    2. ' >=' → logprob: -2.0188705921173096
    3. '>' → logprob: -2.3938705921173096
    4. ' >' → logprob: -4.6438703536987305
    5. 'and' → logprob: -6.8938703536987305
    6. ')>=' → logprob: -7.2688703536987305
    7. ' and' → logprob: -8.39387035369873
    8. ' ' → logprob: -10.01887035369873
    9. ']>=' → logprob: -10.39387035369873
    10. '≥' → logprob: -11.14387035369873

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. '

' → logprob: -17.000911712646484
    5. '  ' → logprob: -17.125911712646484
    6. '```' → logprob: -17.625911712646484
    7. '２' → logprob: -17.750911712646484
    8. '۲' → logprob: -17.875911712646484
    9. '
' → logprob: -18.438411712646484
    10. ' ' → logprob: -19.000911712646484

Token 109: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.126929372549057
    2. 'and' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.00192928314209
    4. '    ' → logprob: -15.62692928314209
    5. '   ' → logprob: -16.251930236816406
    6. '	and' → logprob: -16.501930236816406
    7. ' и' → logprob: -17.751930236816406
    8. '  ' → logprob: -17.876930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '        ' → logprob: -18.876930236816406

Token 110: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4740775227546692
    2. ' cross' → logprob: -0.9740775227546692
    3. '   ' → logprob: -15.599077224731445
    4. ' ' → logprob: -15.974077224731445
    5. '0' → logprob: -16.349077224731445
    6. 'c' → logprob: -16.849077224731445
    7. '.cross' → logprob: -17.099077224731445
    8. '_cross' → logprob: -17.474077224731445
    9. ' ' → logprob: -17.724077224731445
    10. '
' → logprob: -18.099077224731445

Token 111: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.125006675720215
    3. '(low' → logprob: -14.375006675720215
    4. 'lower' → logprob: -15.125006675720215
    5. ' lower' → logprob: -16.2500057220459
    6. '.lower' → logprob: -18.0000057220459
    7. '(
' → logprob: -19.3750057220459
    8. ' (' → logprob: -19.8750057220459
    9. '(l' → logprob: -20.1250057220459
    10. '(last' → logprob: -20.2500057220459

Token 112: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.125
    3. ' [-' → logprob: -16.875
    4. '][-' → logprob: -17.25
    5. '[' → logprob: -17.75
    6. '(-' → logprob: -18.625
    7. '
' → logprob: -18.875
    8. '[len' → logprob: -19.0
    9. '[:-' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. '1' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.625004768371582
    4. '3' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '

' → logprob: -17.250003814697266
    7. '２' → logprob: -18.000003814697266
    8. '```' → logprob: -18.000003814697266
    9. '' → logprob: -18.625003814697266
    10. '(' → logprob: -18.687503814697266

Token 114: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.17998822033405304
    2. ',' → logprob: -1.8049882650375366
    3. ' ,' → logprob: -9.429987907409668
    4. ']' → logprob: -9.929987907409668
    5. 'lower' → logprob: -9.929987907409668
    6. ' ],' → logprob: -10.804987907409668
    7. '],[' → logprob: -11.179987907409668
    8. '>,' → logprob: -11.804987907409668
    9. '],
' → logprob: -12.554987907409668
    10. '.lower' → logprob: -12.804987907409668

Token 115: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.01818951405584812
    2. ' lower' → logprob: -4.018189430236816
    3. '(lower' → logprob: -10.268189430236816
    4. '.lower' → logprob: -12.393189430236816
    5. '<|end|>' → logprob: -14.268189430236816
    6. '_lower' → logprob: -16.393190383911133
    7. 'p' → logprob: -18.018190383911133
    8. 'Lower' → logprob: -18.268190383911133
    9. 'upper' → logprob: -18.393190383911133
    10. ' ' → logprob: -18.518190383911133

Token 116: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.000000953674316
    3. ' [-' → logprob: -16.75
    4. '][-' → logprob: -18.5
    5. '   ' → logprob: -19.625
    6. '[' → logprob: -19.875
    7. '[
' → logprob: -19.875
    8. '(-' → logprob: -20.25
    9. '2' → logprob: -20.25
    10. '```' → logprob: -20.25

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '2' → logprob: -12.000016212463379
    3. ' ' → logprob: -12.312516212463379
    4. '```' → logprob: -14.062516212463379
    5. '   ' → logprob: -14.312516212463379
    6. ']' → logprob: -14.875016212463379
    7. '  ' → logprob: -15.125016212463379
    8. '۱' → logprob: -15.312516212463379
    9. '[' → logprob: -15.562516212463379
    10. '<|end|>' → logprob: -15.687516212463379

Token 118: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20180125534534454
    2. ',p' → logprob: -1.7018013000488281
    3. ' ,' → logprob: -7.951801300048828
    4. ',c' → logprob: -11.451801300048828
    5. '),' → logprob: -11.576801300048828
    6. 'p' → logprob: -12.951801300048828
    7. ',n' → logprob: -13.451801300048828
    8. ',l' → logprob: -13.451801300048828
    9. ',q' → logprob: -13.826801300048828
    10. ',new' → logprob: -13.951801300048828

Token 119: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018151583150029182
    2. ' p' → logprob: -4.018151760101318
    3. ')' → logprob: -13.76815128326416
    4. ')p' → logprob: -14.51815128326416
    5. '(p' → logprob: -16.268152236938477
    6. ' ' → logprob: -16.643152236938477
    7. ''p' → logprob: -17.143152236938477
    8. '	p' → logprob: -17.768152236938477
    9. ' )' → logprob: -18.268152236938477
    10. '   ' → logprob: -18.518152236938477

Token 120: ')<=' (ID: 176862)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011209682561457157
    2. ')<=' → logprob: -4.636209487915039
    3. ')<' → logprob: -7.136209487915039
    4. ' )' → logprob: -7.761209487915039
    5. ')>=' → logprob: -8.386209487915039
    6. ')>' → logprob: -13.511209487915039
    7. '<=' → logprob: -13.886209487915039
    8. ']<=' → logprob: -15.386209487915039
    9. '）' → logprob: -16.01120948791504
    10. ')`' → logprob: -16.76120948791504

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -20.875001907348633
    4. '  ' → logprob: -23.250001907348633
    5. '   ' → logprob: -24.125001907348633
    6. '<|end|>' → logprob: -24.375001907348633
    7. '```' → logprob: -24.375001907348633
    8. '０' → logprob: -24.625001907348633
    9. '०' → logprob: -24.750001907348633
    10. '٠' → logprob: -25.500001907348633

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001998704159632325
    2. ':
' → logprob: -6.2519989013671875
    3. ' :' → logprob: -10.251998901367188
    4. '):' → logprob: -11.001998901367188
    5. '):
' → logprob: -12.001998901367188
    6. ' :
' → logprob: -12.751998901367188
    7. '.lower' → logprob: -12.876998901367188
    8. ')' → logprob: -13.126998901367188
    9. ':
' → logprob: -13.626998901367188
    10. '   ' → logprob: -14.126998901367188

Token 123: '           ' (ID: 352)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.007892770692706108
    2. 'lower' → logprob: -4.882892608642578
    3. '(lower' → logprob: -9.132892608642578
    4. '   ' → logprob: -9.507892608642578
    5. '.lower' → logprob: -9.632892608642578
    6. '_lower' → logprob: -10.757892608642578
    7. '    ' → logprob: -12.257892608642578
    8. '       ' → logprob: -12.382892608642578
    9. 'Lower' → logprob: -13.257892608642578
    10. ' ' → logprob: -13.507892608642578

Token 124: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.12693189084529877
    2. 'lower' (adapté à ' lower') → logprob: -2.12693190574646
    3. '(lower' → logprob: -13.126932144165039
    4. '.lower' → logprob: -13.501932144165039
    5. '
' → logprob: -15.376932144165039
    6. '_lower' → logprob: -15.751932144165039
    7. 'Lower' → logprob: -16.00193214416504
    8. '```' → logprob: -19.12693214416504
    9. '    ' → logprob: -19.37693214416504
    10. ' lowers' → logprob: -20.00193214416504

Token 125: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -5.848420551046729e-05
    2. '.' → logprob: -9.7500581741333
    3. 'pop' → logprob: -16.500059127807617
    4. ' .' → logprob: -17.500059127807617
    5. '.Pop' → logprob: -18.250059127807617
    6. '.remove' → logprob: -19.125059127807617
    7. '	pop' → logprob: -19.250059127807617
    8. '.p' → logprob: -19.750059127807617
    9. ').' → logprob: -20.000059127807617
    10. '​.' → logprob: -20.125059127807617

Token 126: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.511406809295295e-06
    2. '()
' → logprob: -12.125006675720215
    3. '()

' → logprob: -14.750006675720215
    4. '(' → logprob: -15.750006675720215
    5. '()-' → logprob: -16.0000057220459
    6. '()`' → logprob: -16.0000057220459
    7. '()]' → logprob: -16.3750057220459
    8. '()\' → logprob: -17.3750057220459
    9. '()</' → logprob: -17.5000057220459
    10. '()"' → logprob: -17.6250057220459

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002501343551557511
    2. '   ' → logprob: -9.125249862670898
    3. ' lower' → logprob: -10.125249862670898
    4. '
' → logprob: -10.375249862670898
    5. '        
' → logprob: -10.625249862670898
    6. ')' → logprob: -11.500249862670898
    7. '	' → logprob: -12.125249862670898
    8. 'lower' → logprob: -12.625249862670898
    9. '      ' → logprob: -12.750249862670898
    10. ',' → logprob: -12.750249862670898

Token 128: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.4169897437095642
    2. ' lower' → logprob: -1.166989803314209
    3. '   ' → logprob: -3.791989803314209
    4. '       ' → logprob: -5.041989803314209
    5. '.lower' → logprob: -8.29198932647705
    6. '(lower' → logprob: -8.29198932647705
    7. ' ' → logprob: -10.04198932647705
    8. '  ' → logprob: -10.16698932647705
    9. '    ' → logprob: -10.91698932647705
    10. '        
' → logprob: -11.16698932647705

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005398084758780897
    2. '.' → logprob: -7.625539779663086
    3. '.app' → logprob: -10.500539779663086
    4. ' .' → logprob: -11.375539779663086
    5. '.ap' → logprob: -11.875539779663086
    6. '.push' → logprob: -12.875539779663086
    7. '.add' → logprob: -13.875539779663086
    8. '.extend' → logprob: -14.000539779663086
    9. ').' → logprob: -15.125539779663086
    10. '.pop' → logprob: -15.375539779663086

Token 130: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0019287518225610256
    2. '(' → logprob: -6.251928806304932
    3. '(
' → logprob: -17.251928329467773
    4. '((' → logprob: -17.376928329467773
    5. '(P' → logprob: -18.126928329467773
    6. ' (' → logprob: -19.001928329467773
    7. 'p' → logprob: -19.626928329467773
    8. '()' → logprob: -20.126928329467773
    9. '(x' → logprob: -20.126928329467773
    10. '(

' → logprob: -21.001928329467773

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008090290939435363
    2. ')
' → logprob: -7.125809192657471
    3. '   ' → logprob: -13.000808715820312
    4. ' )' → logprob: -13.250808715820312
    5. ')return' → logprob: -15.375808715820312
    6. ')

' → logprob: -16.125808715820312
    7. ')
' → logprob: -16.250808715820312
    8. ' ' → logprob: -16.750808715820312
    9. '
' → logprob: -17.125808715820312
    10. ')n' → logprob: -17.625808715820312

Token 132: '   ' (ID: 271)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.6678088903427124
    2. '   ' → logprob: -1.4178088903427124
    3. ' upper' → logprob: -1.4178088903427124
    4. '    
' → logprob: -6.292809009552002
    5. '
' → logprob: -7.292809009552002
    6. '```' → logprob: -9.542808532714844
    7. '_upper' → logprob: -10.792808532714844
    8. '.upper' → logprob: -10.917808532714844
    9. '  
' → logprob: -11.542808532714844
    10. ' ' → logprob: -12.042808532714844

Token 133: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.16048873960971832
    2. ' upper' → logprob: -1.9104887247085571
    3. '   ' → logprob: -8.285489082336426
    4. '    
' → logprob: -11.910489082336426
    5. '.upper' → logprob: -13.160489082336426
    6. 'uper' → logprob: -14.035489082336426
    7. '_upper' → logprob: -14.035489082336426
    8. '
' → logprob: -14.660489082336426
    9. ' 
' → logprob: -14.660489082336426
    10. '```' → logprob: -14.660489082336426

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859543219208717
    2. '=' → logprob: -3.048595428466797
    3. '=[]' → logprob: -11.798595428466797
    4. '=[]
' → logprob: -14.923595428466797
    5. ' ' → logprob: -16.798595428466797
    6. '   ' → logprob: -17.298595428466797
    7. ' =
' → logprob: -17.423595428466797
    8. ' ' → logprob: -17.548595428466797
    9. ' =[' → logprob: -17.673595428466797
    10. '  ' → logprob: -18.548595428466797

Token 135: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001205946202389896
    2. '[]
' → logprob: -6.751205921173096
    3. ' []' → logprob: -10.251206398010254
    4. '[]

' → logprob: -15.251206398010254
    5. ' []
' → logprob: -16.251205444335938
    6. '[' → logprob: -18.126205444335938
    7. '[]}' → logprob: -18.126205444335938
    8. '[]"' → logprob: -18.751205444335938
    9. '[]>' → logprob: -19.251205444335938
    10. '[
' → logprob: -21.376205444335938

Token 136: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18172523379325867
    2. ' for' → logprob: -2.181725263595581
    3. '   ' → logprob: -2.931725263595581
    4. '	for' → logprob: -11.30672550201416
    5. '    
' → logprob: -12.55672550201416
    6. ' ' → logprob: -14.30672550201416
    7. ' 
' → logprob: -14.68172550201416
    8. '
' → logprob: -14.68172550201416
    9. '  
' → logprob: -15.68172550201416
    10. '  ' → logprob: -15.93172550201416

Token 137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.25
    3. '   ' → logprob: -20.375
    4. 'from' → logprob: -24.0
    5. '    
' → logprob: -24.625
    6. '	for' → logprob: -25.25
    7. ' ' → logprob: -26.0
    8. '```' → logprob: -26.375
    9. '
' → logprob: -26.875
    10. 'reverse' → logprob: -27.0

Token 138: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07888978719711304
    2. ' p' → logprob: -2.578889846801758
    3. '	p' → logprob: -16.953889846801758
    4. ' ' → logprob: -17.828889846801758
    5. '   ' → logprob: -17.953889846801758
    6. '_p' → logprob: -18.578889846801758
    7. 'ps' → logprob: -19.328889846801758
    8. 'pt' → logprob: -19.703889846801758
    9. 'pp' → logprob: -19.703889846801758
    10. '  ' → logprob: -20.203889846801758

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076379855163395405
    2. 'in' → logprob: -4.882637977600098
    3. 's' → logprob: -10.632637977600098
    4. ' ' → logprob: -12.007637977600098
    5. 'n' → logprob: -14.882637977600098
    6. ' i' → logprob: -15.132637977600098
    7. 'i' → logprob: -15.507637977600098
    8. ' ' → logprob: -15.632637977600098
    9. 'import' → logprob: -15.882637977600098
    10. '   ' → logprob: -16.132638931274414

Token 140: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.07775024324655533
    2. ' reversed' → logprob: -2.9527502059936523
    3. 'ps' → logprob: -3.9527502059936523
    4. ' ps' → logprob: -5.702750205993652
    5. '   ' → logprob: -10.702750205993652
    6. 'rev' → logprob: -11.452750205993652
    7. ' ' → logprob: -11.452750205993652
    8. 'reverse' → logprob: -11.702750205993652
    9. '[::-' → logprob: -12.202750205993652
    10. 'sorted' → logprob: -12.577750205993652

Token 141: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -4.723352049040841e-06
    2. 'ps' → logprob: -12.375004768371582
    3. '	ps' → logprob: -15.125004768371582
    4. '(' → logprob: -17.000003814697266
    5. '_ps' → logprob: -17.500003814697266
    6. 'Ps' → logprob: -18.000003814697266
    7. ' ps' → logprob: -18.750003814697266
    8. 'PS' → logprob: -18.875003814697266
    9. '.ps' → logprob: -19.000003814697266
    10. ' (' → logprob: -19.500003814697266

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016142464010044932
    2. '):
' → logprob: -6.501614093780518
    3. ' ):' → logprob: -9.501614570617676
    4. ':' → logprob: -10.501614570617676
    5. ')' → logprob: -11.876614570617676
    6. '   ' → logprob: -14.126614570617676
    7. '):
' → logprob: -14.376614570617676
    8. ']:' → logprob: -14.876614570617676
    9. '}:' → logprob: -15.126614570617676
    10. '():' → logprob: -15.501614570617676

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17490652203559875
    2. '   ' → logprob: -2.4249064922332764
    3. ' while' → logprob: -2.6749064922332764
    4. 'while' → logprob: -6.0499067306518555
    5. ' ' → logprob: -8.049906730651855
    6. '    ' → logprob: -9.799906730651855
    7. '	while' → logprob: -9.924906730651855
    8. '
' → logprob: -9.924906730651855
    9. ':
' → logprob: -10.299906730651855
    10. ':' → logprob: -10.424906730651855

Token 144: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3871825933456421
    2. 'while' (adapté à ' while') → logprob: -1.137182593345642
    3. '       ' → logprob: -8.137182235717773
    4. '   ' → logprob: -11.637182235717773
    5. '	while' → logprob: -11.637182235717773
    6. ' ' → logprob: -14.012182235717773
    7. 'While' → logprob: -15.262182235717773
    8. '    ' → logprob: -15.387182235717773
    9. '  ' → logprob: -17.262182235717773
    10. ' if' → logprob: -17.887182235717773

Token 145: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.011054190807044506
    2. 'len' → logprob: -4.511054039001465
    3. '(len' → logprob: -12.011054039001465
    4. '[len' → logprob: -15.511054039001465
    5. '	len' → logprob: -16.76105499267578
    6. ' ' → logprob: -17.26105499267578
    7. '=len' → logprob: -18.38605499267578
    8. '<len' → logprob: -18.38605499267578
    9. ',len' → logprob: -19.51105499267578
    10. '.len' → logprob: -21.26105499267578

Token 146: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'upper' → logprob: -15.875
    3. '(lower' → logprob: -18.625
    4. ' (' → logprob: -19.25
    5. ' upper' → logprob: -20.0
    6. '.upper' → logprob: -20.625
    7. '[' → logprob: -21.375
    8. ' ' → logprob: -22.0
    9. '(up' → logprob: -22.75
    10. '>' → logprob: -22.75

Token 147: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.00014919086243025959
    2. '(' → logprob: -9.12514877319336
    3. ' upper' → logprob: -10.12514877319336
    4. '.upper' → logprob: -16.00014877319336
    5. 'uper' → logprob: -17.37514877319336
    6. 'uppercase' → logprob: -18.00014877319336
    7. '_upper' → logprob: -18.25014877319336
    8. 'upp' → logprob: -19.00014877319336
    9. '<|end|>' → logprob: -19.12514877319336
    10. '[' → logprob: -19.25014877319336

Token 148: ')>=' (ID: 173043)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.015487544238567352
    2. ')>=' → logprob: -4.2654876708984375
    3. ']>=' → logprob: -7.0154876708984375
    4. ' >=' → logprob: -7.7654876708984375
    5. ')' → logprob: -14.640487670898438
    6. '≥' → logprob: -14.765487670898438
    7. '<|end|>' → logprob: -14.890487670898438
    8. '[' → logprob: -16.265487670898438
    9. '   ' → logprob: -16.890487670898438
    10. '  ' → logprob: -18.515487670898438

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.250036239624023
    4. '<|end|>' → logprob: -18.000036239624023
    5. '۲' → logprob: -18.500036239624023
    6. '```' → logprob: -18.625036239624023
    7. '  ' → logprob: -18.937536239624023
    8. '２' → logprob: -19.187536239624023
    9. '२' → logprob: -19.500036239624023
    10. 'two' → logprob: -19.687536239624023

Token 150: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014164329506456852
    2. 'and' → logprob: -4.264164447784424
    3. '<|end|>' → logprob: -14.139163970947266
    4. ' ' → logprob: -16.639163970947266
    5. ' ' → logprob: -17.639163970947266
    6. ')' → logprob: -18.639163970947266
    7. ',' → logprob: -18.889163970947266
    8. '```' → logprob: -19.014163970947266
    9. '	and' → logprob: -19.264163970947266
    10. ' &&' → logprob: -19.764163970947266

Token 151: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.07889000326395035
    2. 'cross' → logprob: -2.578890085220337
    3. '.cross' → logprob: -16.203889846801758
    4. ' ' → logprob: -16.578889846801758
    5. '_cross' → logprob: -17.828889846801758
    6. 'c' → logprob: -18.078889846801758
    7. ' ' → logprob: -19.203889846801758
    8. 'Cross' → logprob: -19.328889846801758
    9. '-cross' → logprob: -20.078889846801758
    10. '
' → logprob: -20.953889846801758

Token 152: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(lower' → logprob: -18.5
    3. 'upper' → logprob: -18.625
    4. ' (' → logprob: -19.0
    5. '<|end|>' → logprob: -20.125
    6. '(
' → logprob: -21.5
    7. '((' → logprob: -22.0
    8. ' upper' → logprob: -22.75
    9. '.upper' → logprob: -23.125
    10. '(up' → logprob: -23.375

Token 153: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.004340037237852812
    2. '(' → logprob: -5.504340171813965
    3. ' upper' → logprob: -8.254340171813965
    4. '.upper' → logprob: -14.254340171813965
    5. '<|end|>' → logprob: -14.629340171813965
    6. '_upper' → logprob: -15.754340171813965
    7. ')' → logprob: -17.00433921813965
    8. 'uppercase' → logprob: -17.12933921813965
    9. 'lower' → logprob: -17.50433921813965
    10. 'Upper' → logprob: -17.62933921813965

Token 154: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '(-' → logprob: -16.0
    3. '-' → logprob: -17.25
    4. '[' → logprob: -17.625
    5. '[:-' → logprob: -18.0
    6. '([-' → logprob: -18.25
    7. ' [-' → logprob: -18.375
    8. '][-' → logprob: -19.25
    9. '```' → logprob: -20.25
    10. ' ' → logprob: -20.875

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.000008583068848
    3. '1' → logprob: -14.125008583068848
    4. '   ' → logprob: -14.625008583068848
    5. '-' → logprob: -15.187508583068848
    6. '```' → logprob: -16.00000762939453
    7. '[' → logprob: -16.43750762939453
    8. '۲' → logprob: -16.62500762939453
    9. '  ' → logprob: -17.06250762939453
    10. ' -' → logprob: -17.06250762939453

Token 156: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.435139898210764e-05
    2. ' ,' → logprob: -9.875083923339844
    3. '),' → logprob: -10.750083923339844
    4. '<|end|>' → logprob: -11.750083923339844
    5. ')' → logprob: -13.500083923339844
    6. '],' → logprob: -13.625083923339844
    7. '‌,' → logprob: -15.250083923339844
    8. '>,' → logprob: -16.500083923339844
    9. ',
' → logprob: -16.625083923339844
    10. ',

' → logprob: -16.750083923339844

Token 157: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0002776630863081664
    2. ' upper' → logprob: -8.625277519226074
    3. '<|end|>' → logprob: -9.250277519226074
    4. '.upper' → logprob: -14.125277519226074
    5. 'uper' → logprob: -15.000277519226074
    6. '_upper' → logprob: -15.375277519226074
    7. '-upper' → logprob: -16.12527847290039
    8. ' ' → logprob: -16.25027847290039
    9. 'upp' → logprob: -16.25027847290039
    10. 'uppercase' → logprob: -16.37527847290039

Token 158: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0430319607257843
    2. '-' → logprob: -3.168031930923462
    3. '][-' → logprob: -11.043031692504883
    4. ' [-' → logprob: -12.543031692504883
    5. '(-' → logprob: -12.543031692504883
    6. ' -' → logprob: -12.668031692504883
    7. ',-' → logprob: -13.293031692504883
    8. '[:-' → logprob: -13.793031692504883
    9. '<|end|>' → logprob: -14.043031692504883
    10. '[' → logprob: -14.043031692504883

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. '[' → logprob: -11.000030517578125
    3. '<|end|>' → logprob: -11.875030517578125
    4. ' ' → logprob: -12.250030517578125
    5. '```' → logprob: -14.937530517578125
    6. ']' → logprob: -15.625030517578125
    7. '2' → logprob: -15.875030517578125
    8. '<|end|>' → logprob: -15.937530517578125
    9. '   ' → logprob: -16.062530517578125
    10. '[-' → logprob: -16.625030517578125

Token 160: '],' (ID: 2155)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.023304060101509094
    2. ',' → logprob: -3.773303985595703
    3. ' ,' → logprob: -10.023303985595703
    4. '),' → logprob: -12.023303985595703
    5. ',c' → logprob: -12.523303985595703
    6. 'p' → logprob: -12.898303985595703
    7. '],' → logprob: -14.523303985595703
    8. '`,' → logprob: -14.898303985595703
    9. ',q' → logprob: -15.648303985595703
    10. '},' → logprob: -15.898303985595703

Token 161: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.860340752406046e-05
    2. ' p' → logprob: -9.7500581741333
    3. ')p' → logprob: -16.125059127807617
    4. '<|end|>' → logprob: -17.250059127807617
    5. ''p' → logprob: -17.500059127807617
    6. '_p' → logprob: -18.000059127807617
    7. ')' → logprob: -18.250059127807617
    8. '<p' → logprob: -18.375059127807617
    9. '	p' → logprob: -18.750059127807617
    10. '(p' → logprob: -19.125059127807617

Token 162: ')<=' (ID: 176862)
  Prédit: ')<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<=' → logprob: -0.005257595330476761
    2. ')' → logprob: -5.255257606506348
    3. ' )' → logprob: -10.880257606506348
    4. ']<=' → logprob: -13.005257606506348
    5. ')<' → logprob: -13.630257606506348
    6. '<=' → logprob: -13.755257606506348
    7. ')>=' → logprob: -15.380257606506348
    8. ')
' → logprob: -18.00525665283203
    9. ')==' → logprob: -18.13025665283203
    10. ')<<' → logprob: -18.25525665283203

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -19.125024795532227
    4. '<|end|>' → logprob: -19.375024795532227
    5. '۰' → logprob: -19.625024795532227
    6. '０' → logprob: -21.625024795532227
    7. '  ' → logprob: -22.125024795532227
    8. '```' → logprob: -22.937524795532227
    9. '   ' → logprob: -23.000024795532227
    10. '[' → logprob: -23.187524795532227

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.528186559677124
    2. ':
' → logprob: -0.903186559677124
    3. '       ' → logprob: -5.403186798095703
    4. '           ' → logprob: -8.153186798095703
    5. '):
' → logprob: -8.653186798095703
    6. '   ' → logprob: -10.528186798095703
    7. ',' → logprob: -11.028186798095703
    8. ':

' → logprob: -11.778186798095703
    9. ':
' → logprob: -11.778186798095703
    10. '):' → logprob: -11.903186798095703

Token 165: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05389903858304024
    2. ' upper' → logprob: -3.178899049758911
    3. '           ' → logprob: -4.678898811340332
    4. 'upper' → logprob: -6.553898811340332
    5. '.upper' → logprob: -10.053898811340332
    6. '   ' → logprob: -10.178898811340332
    7. '
' → logprob: -11.928898811340332
    8. '	' → logprob: -12.053898811340332
    9. 'Upper' → logprob: -12.053898811340332
    10. ' ' → logprob: -12.178898811340332

Token 166: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.4740773141384125
    2. ' upper' → logprob: -0.9740773439407349
    3. '.upper' → logprob: -15.224077224731445
    4. '_upper' → logprob: -18.224077224731445
    5. 'Upper' → logprob: -18.474077224731445
    6. 'uppercase' → logprob: -19.349077224731445
    7. '   ' → logprob: -19.724077224731445
    8. ' верх' → logprob: -19.724077224731445
    9. 'uper' → logprob: -20.224077224731445
    10. '           ' → logprob: -20.349077224731445

Token 167: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.001258326112292707
    2. '.append' → logprob: -6.751258373260498
    3. '.' → logprob: -9.37625789642334
    4. ' .' → logprob: -13.00125789642334
    5. 'pop' → logprob: -14.50125789642334
    6. '.push' → logprob: -15.12625789642334
    7. '.p' → logprob: -15.50125789642334
    8. ').' → logprob: -17.126258850097656
    9. '.Pop' → logprob: -17.251258850097656
    10. '.remove' → logprob: -17.501258850097656

Token 168: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018154388293623924
    2. '()
' → logprob: -4.018154621124268
    3. '()

' → logprob: -12.89315414428711
    4. '()
' → logprob: -13.26815414428711
    5. '(' → logprob: -16.01815414428711
    6. ')' → logprob: -16.01815414428711
    7. '()`' → logprob: -17.14315414428711
    8. '()\' → logprob: -17.51815414428711
    9. '()


' → logprob: -18.01815414428711
    10. '(
' → logprob: -18.39315414428711

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005678961053490639
    2. '   ' → logprob: -5.255679130554199
    3. 'upper' → logprob: -8.2556791305542
    4. ' upper' → logprob: -8.7556791305542
    5. '      ' → logprob: -12.2556791305542
    6. '.upper' → logprob: -12.2556791305542
    7. '	' → logprob: -12.5056791305542
    8. 'Upper' → logprob: -13.1306791305542
    9. ',' → logprob: -13.3806791305542
    10. ' ' → logprob: -13.6306791305542

Token 170: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.012516127899289131
    2. ' upper' → logprob: -4.387516021728516
    3. '   ' → logprob: -12.262516021728516
    4. '.upper' → logprob: -13.512516021728516
    5. '       ' → logprob: -15.637516021728516
    6. ' ' → logprob: -16.637516021728516
    7. 'u' → logprob: -17.137516021728516
    8. 'Upper' → logprob: -17.137516021728516
    9. 'uppercase' → logprob: -17.512516021728516
    10. '  ' → logprob: -17.512516021728516

Token 171: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003044802288059145
    2. '.' → logprob: -8.125304222106934
    3. ' .' → logprob: -11.875304222106934
    4. 'append' → logprob: -13.750304222106934
    5. '.app' → logprob: -16.12530517578125
    6. '.Append' → logprob: -17.25030517578125
    7. '.extend' → logprob: -17.25030517578125
    8. '.ap' → logprob: -17.25030517578125
    9. '.push' → logprob: -17.50030517578125
    10. '.setdefault' → logprob: -17.50030517578125

Token 172: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.125
    3. ' (' → logprob: -21.25
    4. 'p' → logprob: -21.375
    5. '(point' → logprob: -21.75
    6. '(ps' → logprob: -23.375
    7. '(points' → logprob: -23.375
    8. '(pl' → logprob: -24.25
    9. '(pt' → logprob: -24.25
    10. '(P' → logprob: -24.25

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008069452829658985
    2. ')
' → logprob: -4.8830695152282715
    3. ')p' → logprob: -8.008069038391113
    4. 'p' → logprob: -9.508069038391113
    5. ' )' → logprob: -11.008069038391113
    6. ')

' → logprob: -11.133069038391113
    7. ')return' → logprob: -12.133069038391113
    8. '   ' → logprob: -12.258069038391113
    9. '(p' → logprob: -12.383069038391113
    10. ')
' → logprob: -12.758069038391113

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029947061091661453
    2. ' return' → logprob: -4.279947280883789
    3. 'return' → logprob: -4.654947280883789
    4. '[:-' → logprob: -5.404947280883789
    5. '[' → logprob: -7.029947280883789
    6. '    
' → logprob: -8.154947280883789
    7. ' ' → logprob: -9.279947280883789
    8. 'lower' → logprob: -9.529947280883789
    9. '[]' → logprob: -10.279947280883789
    10. '    ' → logprob: -10.279947280883789

Token 175: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3878985047340393
    2. ' return' → logprob: -1.1378984451293945
    3. '   ' → logprob: -7.3878984451293945
    4. 'lower' → logprob: -8.512898445129395
    5. '#' (adapté à ' #') → logprob: -8.637898445129395
    6. ' lower' → logprob: -11.137898445129395
    7. '
' → logprob: -11.637898445129395
    8. ' #' → logprob: -12.387898445129395
    9. '	return' → logprob: -14.137898445129395
    10. '    
' → logprob: -14.137898445129395

Token 176: ' remove' (ID: 6234)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43108370900154114
    2. ' return' → logprob: -1.0560836791992188
    3. 'lower' → logprob: -6.556083679199219
    4. '#' → logprob: -7.306083679199219
    5. ' lower' → logprob: -8.431083679199219
    6. ' #' → logprob: -10.431083679199219
    7. 'upper' → logprob: -11.181083679199219
    8. 'Return' → logprob: -11.556083679199219
    9. ' Combine' → logprob: -12.806083679199219
    10. ' upper' → logprob: -13.181083679199219

Token 177: ' last' (ID: 2174)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.5362239480018616
    2. ' the' → logprob: -1.7862238883972168
    3. ' upper' → logprob: -1.9112238883972168
    4. 'lower' → logprob: -2.786223888397217
    5. ' last' → logprob: -3.786223888397217
    6. 'upper' → logprob: -4.411223888397217
    7. 'the' → logprob: -6.161223888397217
    8. 'last' → logprob: -7.411223888397217
    9. '(lower' → logprob: -8.911224365234375
    10. ' ' → logprob: -9.411224365234375

Token 178: ' since' (ID: 3630)
  Prédit: '(lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.59145188331604
    2. ' lower' → logprob: -1.71645188331604
    3. 'lower' → logprob: -1.71645188331604
    4. ' upper' → logprob: -3.71645188331604
    5. '(' → logprob: -4.091451644897461
    6. '<|end|>' → logprob: -4.216451644897461
    7. ' ' → logprob: -4.341451644897461
    8. 'upper' → logprob: -4.966451644897461
    9. '()' → logprob: -5.341451644897461
    10. '   ' → logprob: -5.966451644897461

Token 179: ' it's' (ID: 4275)
  Prédit: ' upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.5836259126663208
    2. ' lower' → logprob: -1.2086259126663208
    3. 'lower' → logprob: -2.5836257934570312
    4. 'upper' → logprob: -2.7086257934570312
    5. '   ' → logprob: -7.208625793457031
    6. '(lower' → logprob: -7.583625793457031
    7. ' return' → logprob: -9.958625793457031
    8. ' to' → logprob: -11.208625793457031
    9. ' the' → logprob: -11.208625793457031
    10. ' one' → logprob: -11.708625793457031

Token 180: ' duplicate' (ID: 41010)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11529430747032166
    2. 'the' → logprob: -2.7402942180633545
    3. ' identical' → logprob: -3.6152942180633545
    4. ' a' → logprob: -4.615294456481934
    5. ' redundant' → logprob: -5.990294456481934
    6. 'same' → logprob: -7.240294456481934
    7. 'a' → logprob: -7.240294456481934
    8. ' equal' → logprob: -7.240294456481934
    9. ' same' → logprob: -7.365294456481934
    10. ' duplicated' → logprob: -7.490294456481934

Token 181: '
' (ID: 198)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.23063924908638
    2. 'lower' → logprob: -1.7306392192840576
    3. '(lower' → logprob: -4.105639457702637
    4. ' of' → logprob: -5.230639457702637
    5. ' return' → logprob: -5.355639457702637
    6. '   ' → logprob: -6.980639457702637
    7. 'return' → logprob: -7.105639457702637
    8. '[:-' → logprob: -8.730639457702637
    9. '.lower' → logprob: -8.855639457702637
    10. ' upper' → logprob: -9.355639457702637

Token 182: '   ' (ID: 271)
  Prédit: '(lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.8360364437103271
    2. ' lower' → logprob: -0.9610364437103271
    3. 'lower' → logprob: -2.086036443710327
    4. ' of' → logprob: -3.461036443710327
    5. '<|end|>' → logprob: -4.336036682128906
    6. ' return' → logprob: -5.086036682128906
    7. '   ' → logprob: -5.086036682128906
    8. 'return' → logprob: -6.961036682128906
    9. '.lower' → logprob: -7.836036682128906
    10. ' from' → logprob: -8.336036682128906

Token 183: ' hull' (ID: 74912)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.15685297548770905
    2. 'return' → logprob: -2.656852960586548
    3. ' lower' → logprob: -2.906852960586548
    4. ' return' → logprob: -4.031853199005127
    5. 'upper' → logprob: -6.281853199005127
    6. ' upper' → logprob: -7.656853199005127
    7. '(lower' → logprob: -8.656852722167969
    8. '   ' → logprob: -9.406852722167969
    9. '.lower' → logprob: -12.156852722167969
    10. '_lower' → logprob: -13.031852722167969

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759420990943909
    2. '=' → logprob: -0.8259420990943909
    3. '[:-' → logprob: -13.700942039489746
    4. ' =
' → logprob: -15.200942039489746
    5. ' ' → logprob: -15.450942039489746
    6. '=h' → logprob: -15.700942039489746
    7. '=
' → logprob: -15.950942039489746
    8. 'lower' → logprob: -15.950942039489746
    9. '.' → logprob: -16.075942993164062
    10. '＝' → logprob: -16.325942993164062

Token 185: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0015036711702123284
    2. ' lower' → logprob: -6.5015034675598145
    3. '(lower' → logprob: -13.751503944396973
    4. '   ' → logprob: -15.626503944396973
    5. 'upper' → logprob: -16.376502990722656
    6. ' ' → logprob: -17.251502990722656
    7. 'list' → logprob: -17.376502990722656
    8. '.lower' → logprob: -18.626502990722656
    9. '_lower' → logprob: -19.376502990722656
    10. '```' → logprob: -19.876502990722656

Token 186: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.00012403888104017824
    2. '+' → logprob: -9.000123977661133
    3. ' +' → logprob: -14.750123977661133
    4. '[' → logprob: -16.375123977661133
    5. '[:]' → logprob: -16.375123977661133
    6. '[-' → logprob: -18.625123977661133
    7. '
' → logprob: -19.000123977661133
    8. '[::-' → logprob: -20.500123977661133
    9. '+[' → logprob: -21.125123977661133
    10. '[:' → logprob: -21.125123977661133

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.625
    3. '１' → logprob: -18.125
    4. ' ' → logprob: -19.0
    5. '
' → logprob: -19.375
    6. '   ' → logprob: -19.875
    7. '```' → logprob: -20.25
    8. '

' → logprob: -21.25
    9. '  ' → logprob: -21.375
    10. '0' → logprob: -22.1875

Token 188: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0115394601598382
    2. ']+' → logprob: -4.511539459228516
    3. ' ]' → logprob: -7.636539459228516
    4. '+' → logprob: -11.636539459228516
    5. ' ' → logprob: -17.011539459228516
    6. ']+=' → logprob: -17.261539459228516
    7. '+]' → logprob: -17.636539459228516
    8. ' +' → logprob: -17.761539459228516
    9. ']+\' → logprob: -18.011539459228516
    10. '1' → logprob: -18.386539459228516

Token 189: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.011047814972698689
    2. ' upper' → logprob: -4.511047840118408
    3. '.upper' → logprob: -18.26104736328125
    4. 'uppercase' → logprob: -18.63604736328125
    5. '   ' → logprob: -19.01104736328125
    6. 'Upper' → logprob: -19.38604736328125
    7. '_upper' → logprob: -19.51104736328125
    8. 'upp' → logprob: -20.26104736328125
    9. 'up' → logprob: -20.26104736328125
    10. ' ' → logprob: -20.51104736328125

Token 190: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.001170460251159966
    2. '[' → logprob: -6.751170635223389
    3. '[-' → logprob: -15.12617015838623
    4. '1' → logprob: -17.376171112060547
    5. '[:' → logprob: -18.251171112060547
    6. '```' → logprob: -19.876171112060547
    7. '[::-' → logprob: -20.501171112060547
    8. '
' → logprob: -22.001171112060547
    9. '-' → logprob: -22.251171112060547
    10. '0' → logprob: -22.876171112060547

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.500001907348633
    3. '-' → logprob: -14.625001907348633
    4. '11' → logprob: -14.750001907348633
    5. '(' → logprob: -16.000001907348633
    6. '１' → logprob: -16.500001907348633
    7. '۱' → logprob: -16.812501907348633
    8. '```' → logprob: -16.812501907348633
    9. '<|end|>' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.562501907348633

Token 192: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013249876908957958
    2. ']' → logprob: -4.51324987411499
    3. ')
' → logprob: -6.13824987411499
    4. ']
' → logprob: -11.263250350952148
    5. '   ' → logprob: -12.013250350952148
    6. ')return' → logprob: -12.138250350952148
    7. ' )' → logprob: -12.388250350952148
    8. 'return' → logprob: -12.513250350952148
    9. '）' → logprob: -12.888250350952148
    10. '])' → logprob: -13.638250350952148

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3585871160030365
    2. 'return' → logprob: -1.6085871458053589
    3. '
' → logprob: -2.6085870265960693
    4. ' return' → logprob: -3.6085870265960693
    5. '    
' → logprob: -7.983587265014648
    6. '	return' → logprob: -10.233587265014648
    7. ' 
' → logprob: -10.983587265014648
    8. '
' → logprob: -11.108587265014648
    9. '  
' → logprob: -11.233587265014648
    10. ':return' → logprob: -12.358587265014648

Token 194: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024814847856760025
    2. '   ' → logprob: -6.252481460571289
    3. ' return' → logprob: -7.502481460571289
    4. '	return' → logprob: -14.377481460571289
    5. '
' → logprob: -15.127481460571289
    6. '    
' → logprob: -17.12748146057129
    7. ' ' → logprob: -17.25248146057129
    8. ':return' → logprob: -18.00248146057129
    9. '  ' → logprob: -18.50248146057129
    10. '_return' → logprob: -18.62748146057129

Token 195: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.000431861262768507
    2. ' hull' → logprob: -7.750432014465332
    3. 'hul' → logprob: -14.625432014465332
    4. 'list' → logprob: -14.875432014465332
    5. '	h' → logprob: -15.375432014465332
    6. ' list' → logprob: -17.000431060791016
    7. '   ' → logprob: -17.000431060791016
    8. ' ' → logprob: -17.250431060791016
    9. '[h' → logprob: -17.250431060791016
    10. '(h' → logprob: -17.750431060791016

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.128543883562088
    2. '<|end|>' → logprob: -2.1285438537597656
    3. 'def' → logprob: -7.253543853759766
    4. '

' → logprob: -8.128543853759766
    5. '\n' → logprob: -8.253543853759766
    6. '<|end|>' → logprob: -9.003543853759766
    7. '```' → logprob: -9.503543853759766
    8. '#' → logprob: -10.503543853759766
    9. '  
' → logprob: -10.628543853759766
    10. 'newline' → logprob: -10.878543853759766

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03274635225534439
    2. '
' → logprob: -3.6577463150024414
    3. '<|end|>' → logprob: -5.407746315002441
    4. '#' → logprob: -6.532746315002441
    5. '<|end|>' → logprob: -9.157746315002441
    6. ' def' → logprob: -9.532746315002441
    7. '```' → logprob: -9.657746315002441
    8. '\n' → logprob: -10.157746315002441
    9. 'n' → logprob: -10.532746315002441
    10. '\' → logprob: -10.657746315002441

Token 198: ' polygon' (ID: 65081)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15117689967155457
    2. ' diameter' → logprob: -2.526176929473877
    3. ' area' → logprob: -3.901176929473877
    4. ' rotating' → logprob: -4.651176929473877
    5. ' perimeter' → logprob: -4.901176929473877
    6. ' minimal' → logprob: -5.151176929473877
    7. ' max' → logprob: -5.776176929473877
    8. 'main' → logprob: -6.151176929473877
    9. ' is' → logprob: -6.276176929473877
    10. ' minimum' → logprob: -6.276176929473877

Token 199: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.00026574634830467403
    2. '_points' → logprob: -8.625266075134277
    3. '(points' → logprob: -10.625266075134277
    4. '_vertices' → logprob: -11.250266075134277
    5. '_' → logprob: -11.375266075134277
    6. '_per' → logprob: -11.875266075134277
    7. '_point' → logprob: -13.000266075134277
    8. '_cent' → logprob: -13.125266075134277
    9. '_are' → logprob: -13.250266075134277
    10. '_center' → logprob: -13.250266075134277

Token 200: '(poly' (ID: 175644)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.5388491153717041
    2. '(p' → logprob: -1.038849115371704
    3. '(poly' → logprob: -3.538849115371704
    4. '(' → logprob: -4.038848876953125
    5. '(pol' → logprob: -4.788848876953125
    6. '(h' → logprob: -5.038848876953125
    7. '(vertices' → logprob: -6.788848876953125
    8. ' (' → logprob: -9.788848876953125
    9. '(point' → logprob: -10.038848876953125
    10. '(coords' → logprob: -11.538848876953125

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003430912329349667
    2. '):
' → logprob: -8.000343322753906
    3. ')' → logprob: -12.000343322753906
    4. ' ):' → logprob: -14.375343322753906
    5. '):
' → logprob: -14.625343322753906
    6. '):

' → logprob: -15.875343322753906
    7. ':' → logprob: -16.125343322753906
    8. 's' → logprob: -17.625343322753906
    9. '   ' → logprob: -17.875343322753906
    10. '():' → logprob: -17.875343322753906

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02140655368566513
    2. '0' → logprob: -3.896406650543213
    3. '
' → logprob: -7.771406650543213
    4. ' ' → logprob: -8.771406173706055
    5. 'area' → logprob: -9.271406173706055
    6. '    
' → logprob: -9.646406173706055
    7. 'def' → logprob: -10.771406173706055
    8. '  ' → logprob: -11.021406173706055
    9. '    ' → logprob: -11.021406173706055
    10. ' area' → logprob: -11.021406173706055

Token 203: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.13860037922859192
    2. '   ' → logprob: -2.5136003494262695
    3. ' area' → logprob: -3.1386003494262695
    4. 'n' → logprob: -5.6386003494262695
    5. ' n' → logprob: -6.7636003494262695
    6. 's' → logprob: -9.51360034942627
    7. ' ' → logprob: -9.51360034942627
    8. 'a' → logprob: -10.01360034942627
    9. 'ans' → logprob: -10.13860034942627
    10. '0' → logprob: -10.26360034942627

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142045617103577
    2. ' =' → logprob: -1.7014204263687134
    3. '=sum' → logprob: -12.951420783996582
    4. '_' → logprob: -13.826420783996582
    5. '＝' → logprob: -14.826420783996582
    6. '(' → logprob: -14.826420783996582
    7. '_=' → logprob: -14.826420783996582
    8. ',' → logprob: -14.951420783996582
    9. ' ' → logprob: -14.951420783996582
    10. ' =
' → logprob: -15.201420783996582

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'abs' → logprob: -16.375030517578125
    4. '   ' → logprob: -17.250030517578125
    5. ' ' → logprob: -18.750030517578125
    6. '=' → logprob: -20.375030517578125
    7. '
' → logprob: -20.750030517578125
    8. '  ' → logprob: -20.750030517578125
    9. ' abs' → logprob: -20.750030517578125
    10. '０' → logprob: -21.125030517578125

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'abs' → logprob: -14.87500286102295
    4. '   ' → logprob: -16.750003814697266
    5. '
' → logprob: -17.250003814697266
    6. 'sum' → logprob: -17.625003814697266
    7. 'float' → logprob: -19.000003814697266
    8. '.' → logprob: -19.375003814697266
    9. ' ' → logprob: -19.750003814697266
    10. '

' → logprob: -19.750003814697266

Token 207: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6748524308204651
    2. '   ' → logprob: -0.7998524308204651
    3. 'for' → logprob: -3.6748523712158203
    4. ' for' → logprob: -4.92485237121582
    5. '<|end|>' → logprob: -5.42485237121582
    6. '    
' → logprob: -6.17485237121582
    7. '  
' → logprob: -7.67485237121582
    8. '' → logprob: -7.79985237121582
    9. ',' → logprob: -8.42485237121582
    10. ' ' → logprob: -8.54985237121582

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03653032332658768
    2. '
' → logprob: -3.4115302562713623
    3. ' for' → logprob: -6.536530494689941
    4. 'n' → logprob: -7.161530494689941
    5. 'for' → logprob: -8.161530494689941
    6. '    
' → logprob: -9.036530494689941
    7. ',' → logprob: -10.161530494689941
    8. ' n' → logprob: -10.411530494689941
    9. ' ' → logprob: -10.661530494689941
    10. '  ' → logprob: -10.661530494689941

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5769862532615662
    2. 'for' → logprob: -0.8269862532615662
    3. ' for' → logprob: -7.326986312866211
    4. '   ' → logprob: -8.576986312866211
    5. 'len' → logprob: -8.951986312866211
    6. ' n' → logprob: -9.701986312866211
    7. '
' → logprob: -12.701986312866211
    8. 'i' → logprob: -13.576986312866211
    9. 'l' → logprob: -13.701986312866211
    10. '1' → logprob: -13.951986312866211

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.205224871635437
    2. ' =' → logprob: -1.705224871635437
    3. '=len' → logprob: -5.580224990844727
    4. '<|end|>' → logprob: -10.705224990844727
    5. 'for' → logprob: -13.205224990844727
    6. ' ' → logprob: -13.455224990844727
    7. '=int' → logprob: -13.580224990844727
    8. ')' → logprob: -13.705224990844727
    9. ',' → logprob: -14.705224990844727
    10. '   ' → logprob: -14.955224990844727

Token 211: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012356207298580557
    2. ' len' → logprob: -9.000123977661133
    3. '(len' → logprob: -16.750123977661133
    4. '=len' → logprob: -20.125123977661133
    5. '[len' → logprob: -21.000123977661133
    6. '	len' → logprob: -21.875123977661133
    7. '   ' → logprob: -23.500123977661133
    8. '```' → logprob: -23.500123977661133
    9. ',len' → logprob: -23.750123977661133
    10. '<len' → logprob: -24.125123977661133

Token 212: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -4.632542913896032e-05
    2. 'poly' → logprob: -10.000046730041504
    3. '(' → logprob: -14.125046730041504
    4. '(pol' → logprob: -16.125045776367188
    5. ' poly' → logprob: -16.250045776367188
    6. '(py' → logprob: -20.000045776367188
    7. '(p' → logprob: -20.375045776367188
    8. '_poly' → logprob: -20.625045776367188
    9. '/poly' → logprob: -20.625045776367188
    10. '.poly' → logprob: -21.250045776367188

Token 213: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006721178535372019
    2. ')
' → logprob: -5.006721019744873
    3. ' )' → logprob: -12.506721496582031
    4. '   ' → logprob: -13.631721496582031
    5. ')

' → logprob: -15.131721496582031
    6. ')
' → logprob: -16.00672149658203
    7. ' ' → logprob: -16.13172149658203
    8. ' )
' → logprob: -16.38172149658203
    9. 'def' → logprob: -16.75672149658203
    10. ')n' → logprob: -16.88172149658203

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016066748648881912
    2. 'for' → logprob: -4.266066551208496
    3. ' for' → logprob: -6.266066551208496
    4. '    
' → logprob: -13.891066551208496
    5. '	for' → logprob: -14.266066551208496
    6. '
' → logprob: -15.516066551208496
    7. '   ' → logprob: -17.266067504882812
    8. ',' → logprob: -17.391067504882812
    9. '       ' → logprob: -18.266067504882812
    10. ' ' → logprob: -18.891067504882812

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014319690875709057
    2. ' for' → logprob: -4.264319896697998
    3. '   ' → logprob: -8.76431941986084
    4. '	for' → logprob: -17.139320373535156
    5. '
' → logprob: -18.514320373535156
    6. ' ' → logprob: -19.514320373535156
    7. 'i' → logprob: -20.264320373535156
    8. '    
' → logprob: -21.014320373535156
    9. ' ' → logprob: -21.514320373535156
    10. '  ' → logprob: -22.014320373535156

Token 216: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804149478673935
    2. ' i' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.663042068481445
    4. '	i' → logprob: -17.663042068481445
    5. '_i' → logprob: -18.288042068481445
    6. 'range' → logprob: -19.163042068481445
    7. '   ' → logprob: -19.163042068481445
    8. '(i' → logprob: -19.788042068481445
    9. 'I' → logprob: -20.038042068481445
    10. '  ' → logprob: -20.413042068481445

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054898761212825775
    2. 'in' → logprob: -2.929898738861084
    3. ' ' → logprob: -12.304899215698242
    4. '   ' → logprob: -12.429899215698242
    5. 'n' → logprob: -12.929899215698242
    6. '	in' → logprob: -13.679899215698242
    7. '  ' → logprob: -13.804899215698242
    8. ',' → logprob: -14.429899215698242
    9. '0' → logprob: -14.804899215698242
    10. '_' → logprob: -15.054899215698242

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -21.750911712646484
    4. '	range' → logprob: -21.750911712646484
    5. '0' → logprob: -22.375911712646484
    6. '   ' → logprob: -23.000911712646484
    7. ' ' → logprob: -23.375911712646484
    8. '  ' → logprob: -24.375911712646484
    9. '```' → logprob: -25.000911712646484
    10. 'r' → logprob: -25.000911712646484

Token 219: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00032521432149223983
    2. '(' → logprob: -8.125325202941895
    3. 'n' → logprob: -10.500325202941895
    4. '(len' → logprob: -13.875325202941895
    5. ' n' → logprob: -14.500325202941895
    6. ' (' → logprob: -16.25032615661621
    7. '	n' → logprob: -17.37532615661621
    8. '(
' → logprob: -17.75032615661621
    9. '1' → logprob: -19.12532615661621
    10. '   ' → logprob: -19.25032615661621

Token 220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16045422852039337
    2. '):' → logprob: -1.910454273223877
    3. '):
' → logprob: -8.660453796386719
    4. '   ' → logprob: -10.285453796386719
    5. '-' → logprob: -11.535453796386719
    6. ')' → logprob: -12.660453796386719
    7. ':' → logprob: -12.910453796386719
    8. ' ):
' → logprob: -12.910453796386719
    9. ' ' → logprob: -13.285453796386719
    10. ' ):' → logprob: -13.785453796386719

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009765060618519783
    2. ' (' → logprob: -5.259765148162842
    3. '(poly' → logprob: -7.009765148162842
    4. '(' → logprob: -7.134765148162842
    5. '+' → logprob: -7.509765148162842
    6. '
' → logprob: -8.134764671325684
    7. '(area' → logprob: -8.259764671325684
    8. ' area' → logprob: -8.259764671325684
    9. ' poly' → logprob: -8.509764671325684
    10. '    ' → logprob: -9.009764671325684

Token 222: ' x' (ID: 1215)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.5759264230728149
    2. 'x' (adapté à ' x') → logprob: -1.200926423072815
    3. 'j' → logprob: -2.7009263038635254
    4. ' area' → logprob: -3.2009263038635254
    5. '   ' → logprob: -4.450926303863525
    6. ' x' → logprob: -4.450926303863525
    7. ' j' → logprob: -5.200926303863525
    8. '(area' → logprob: -9.325926780700684
    9. 'a' → logprob: -10.450926780700684
    10. '
' → logprob: -11.325926780700684

Token 223: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31403040885925293
    2. ',' → logprob: -1.939030408859253
    3. ' =' → logprob: -2.314030408859253
    4. '   ' → logprob: -5.689030647277832
    5. ']' → logprob: -5.814030647277832
    6. ')' → logprob: -5.814030647277832
    7. '[' → logprob: -5.939030647277832
    8. 'i' → logprob: -5.939030647277832
    9. 'poly' → logprob: -6.189030647277832
    10. '[i' → logprob: -6.564030647277832

Token 224: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013365513877943158
    2. ',y' → logprob: -7.251336574554443
    3. '=' → logprob: -7.876336574554443
    4. ',x' → logprob: -8.501336097717285
    5. ' ,' → logprob: -10.626336097717285
    6. ' =' → logprob: -11.501336097717285
    7. '   ' → logprob: -13.376336097717285
    8. ',
' → logprob: -13.501336097717285
    9. ',i' → logprob: -13.876336097717285
    10. ',p' → logprob: -14.001336097717285

Token 225: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016909711062908173
    2. ' =' → logprob: -4.516909599304199
    3. '=i' → logprob: -6.016909599304199
    4. '1' → logprob: -6.891909599304199
    5. ',' → logprob: -6.891909599304199
    6. ',i' → logprob: -7.141909599304199
    7. 'i' → logprob: -8.0169095993042
    8. '=p' → logprob: -10.1419095993042
    9. '_i' → logprob: -10.1419095993042
    10. '   ' → logprob: -10.2669095993042

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38725078105926514
    2. ' =' → logprob: -1.1372507810592651
    3. ',' → logprob: -7.887250900268555
    4. '   ' → logprob: -13.887250900268555
    5. '=
' → logprob: -13.887250900268555
    6. ' =
' → logprob: -15.137250900268555
    7. ',p' → logprob: -15.262250900268555
    8. ' ,' → logprob: -15.262250900268555
    9. ' ' → logprob: -15.512250900268555
    10. ' poly' → logprob: -15.637250900268555

Token 227: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.001170225441455841
    2. ' poly' → logprob: -6.7511701583862305
    3. '(poly' → logprob: -18.501171112060547
    4. 'pol' → logprob: -18.751171112060547
    5. 'py' → logprob: -20.376171112060547
    6. 'polygon' → logprob: -20.876171112060547
    7. '_poly' → logprob: -22.751171112060547
    8. '   ' → logprob: -24.001171112060547
    9. '-poly' → logprob: -24.126171112060547
    10. '.poly' → logprob: -24.376171112060547

Token 228: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -15.000000953674316
    3. '[' → logprob: -15.125000953674316
    4. 'i' → logprob: -15.625000953674316
    5. 'poly' → logprob: -16.625001907348633
    6. ' [' → logprob: -16.875001907348633
    7. '
' → logprob: -17.625001907348633
    8. '[n' → logprob: -17.625001907348633
    9. '[
' → logprob: -18.250001907348633
    10. ' =' → logprob: -18.250001907348633

Token 229: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03807878866791725
    2. ']' → logprob: -3.288078784942627
    3. ']
' → logprob: -10.288079261779785
    4. '][' → logprob: -13.288079261779785
    5. ']

' → logprob: -13.913079261779785
    6. ' ]
' → logprob: -14.913079261779785
    7. '];' → logprob: -16.28807830810547
    8. ' ]' → logprob: -16.78807830810547
    9. ' ' → logprob: -16.91307830810547
    10. '
' → logprob: -16.91307830810547

Token 230: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052037835121154785
    2. '
' → logprob: -3.5520377159118652
    3. '<|end|>' → logprob: -5.302037715911865
    4. '    
' → logprob: -5.552037715911865
    5. ' 
' → logprob: -5.802037715911865
    6. '  
' → logprob: -6.052037715911865
    7. 'x' → logprob: -6.302037715911865
    8. ' ' → logprob: -6.677037715911865
    9. ' x' → logprob: -7.052037715911865
    10. '       ' → logprob: -7.427037715911865

Token 231: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0237731896340847
    2. ' x' → logprob: -3.773773193359375
    3. '       ' → logprob: -7.773773193359375
    4. '   ' → logprob: -9.148773193359375
    5. '	x' → logprob: -14.648773193359375
    6. '    ' → logprob: -16.773773193359375
    7. '  ' → logprob: -17.648773193359375
    8. ' ' → logprob: -17.773773193359375
    9. '(x' → logprob: -17.773773193359375
    10. '     ' → logprob: -18.148773193359375

Token 232: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6378827691078186
    2. '1' → logprob: -1.0128827095031738
    3. ',' → logprob: -2.762882709503174
    4. ',y' → logprob: -3.887882709503174
    5. '[i' → logprob: -5.137882709503174
    6. ',i' → logprob: -5.137882709503174
    7. 'i' → logprob: -5.262882709503174
    8. '][' → logprob: -6.262882709503174
    9. '
' → logprob: -6.512882709503174
    10. '[' → logprob: -6.512882709503174

Token 233: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.07931339740753174
    2. ',' → logprob: -2.579313278198242
    3. ',x' → logprob: -8.079313278198242
    4. ',
' → logprob: -9.579313278198242
    5. ' ,' → logprob: -10.579313278198242
    6. ',p' → logprob: -11.329313278198242
    7. ',user' → logprob: -13.329313278198242
    8. '
' → logprob: -13.579313278198242
    9. ',next' → logprob: -14.454313278198242
    10. ',n' → logprob: -14.579313278198242

Token 234: '2' (ID: 17)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09119993448257446
    2. '1' → logprob: -3.0911998748779297
    3. '[' → logprob: -4.09119987487793
    4. '[(' → logprob: -4.34119987487793
    5. '[n' → logprob: -5.09119987487793
    6. 'poly' → logprob: -5.46619987487793
    7. 'i' → logprob: -7.46619987487793
    8. 'n' → logprob: -8.46619987487793
    9. '(poly' → logprob: -9.09119987487793
    10. '[
' → logprob: -9.09119987487793

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ',' → logprob: -15.82641315460205
    4. ' =
' → logprob: -16.451414108276367
    5. '=
' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.701414108276367
    7. ' ' → logprob: -18.076414108276367
    8. '=

' → logprob: -20.326414108276367
    9. '＝' → logprob: -20.701414108276367
    10. ')' → logprob: -20.701414108276367

Token 236: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.023245712742209435
    2. ' poly' → logprob: -3.7732458114624023
    3. '(poly' → logprob: -16.773244857788086
    4. 'pol' → logprob: -16.898244857788086
    5. 'py' → logprob: -19.398244857788086
    6. '/poly' → logprob: -20.398244857788086
    7. '-poly' → logprob: -20.398244857788086
    8. '_poly' → logprob: -20.648244857788086
    9. 'polygon' → logprob: -20.898244857788086
    10. '.poly' → logprob: -21.148244857788086

Token 237: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00016039233014453202
    2. '[i' → logprob: -8.750160217285156
    3. '[' → logprob: -13.500160217285156
    4. '(i' → logprob: -14.625160217285156
    5. '[
' → logprob: -18.000160217285156
    6. '((' → logprob: -18.500160217285156
    7. '[next' → logprob: -19.125160217285156
    8. '(' → logprob: -19.750160217285156
    9. '[((' → logprob: -20.375160217285156
    10. '(poly' → logprob: -20.500160217285156

Token 238: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006716317031532526
    2. '(i' → logprob: -5.006716251373291
    3. ' i' → logprob: -14.25671672821045
    4. '{i' → logprob: -15.75671672821045
    5. ' (' → logprob: -17.131715774536133
    6. '_i' → logprob: -17.256715774536133
    7. '   ' → logprob: -17.256715774536133
    8. '	i' → logprob: -19.256715774536133
    9. ')i' → logprob: -19.631715774536133
    10. '```' → logprob: -19.756715774536133

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00616033561527729
    2. '1' → logprob: -6.006160259246826
    3. '(i' → logprob: -6.506160259246826
    4. '+i' → logprob: -6.506160259246826
    5. ' +' → logprob: -8.006160736083984
    6. 'i' → logprob: -8.006160736083984
    7. '(' → logprob: -11.256160736083984
    8. '{i' → logprob: -12.256160736083984
    9. '```' → logprob: -13.506160736083984
    10. '+(' → logprob: -14.006160736083984

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '```' → logprob: -16.875
    5. '(i' → logprob: -17.375
    6. '(' → logprob: -18.375
    7. '   ' → logprob: -18.75
    8. '
' → logprob: -19.25
    9. ')' → logprob: -19.25
    10. '``' → logprob: -19.5

Token 241: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931664943695068
    2. ')%' → logprob: -0.6931664943695068
    3. '%n' → logprob: -11.568166732788086
    4. ')n' → logprob: -12.568166732788086
    5. ')
' → logprob: -12.818166732788086
    6. ' )' → logprob: -12.943166732788086
    7. ')i' → logprob: -14.943166732788086
    8. '%i' → logprob: -15.193166732788086
    9. ']%' → logprob: -15.818166732788086
    10. '）' → logprob: -16.193166732788086

Token 242: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. ' n' → logprob: -13.750000953674316
    3. '	n' → logprob: -22.125001907348633
    4. ')n' → logprob: -23.625001907348633
    5. '   ' → logprob: -24.875001907348633
    6. '(n' → logprob: -25.125001907348633
    7. '$n' → logprob: -25.250001907348633
    8. '```' → logprob: -25.375001907348633
    9. '_n' → logprob: -26.250001907348633
    10. '%n' → logprob: -27.000001907348633

Token 243: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06207849085330963
    2. ']
' → logprob: -2.8120784759521484
    3. ']
' → logprob: -9.812078475952148
    4. '][' → logprob: -10.812078475952148
    5. ')]' → logprob: -11.437078475952148
    6. ' ]' → logprob: -11.437078475952148
    7. ')' → logprob: -11.812078475952148
    8. ']

' → logprob: -12.562078475952148
    9. ' ]
' → logprob: -13.312078475952148
    10. '])' → logprob: -14.187078475952148

Token 244: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022270360961556435
    2. '       ' → logprob: -4.147270202636719
    3. ' area' → logprob: -5.647270202636719
    4. '
' → logprob: -6.522270202636719
    5. 'area' → logprob: -7.147270202636719
    6. '    
' → logprob: -8.397270202636719
    7. '        
' → logprob: -9.897270202636719
    8. ',' → logprob: -10.272270202636719
    9. '<|end|>' → logprob: -10.397270202636719
    10. '  
' → logprob: -10.647270202636719

Token 245: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.03294361010193825
    2. ' area' → logprob: -3.5329437255859375
    3. '   ' → logprob: -5.7829437255859375
    4. '       ' → logprob: -9.157943725585938
    5. '
' → logprob: -12.907943725585938
    6. ' ' → logprob: -15.157943725585938
    7. '  ' → logprob: -16.157943725585938
    8. '    ' → logprob: -16.657943725585938
    9. '(area' → logprob: -17.032943725585938
    10. '           ' → logprob: -17.657943725585938

Token 246: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4927060306072235
    2. ' +=' → logprob: -0.9927060604095459
    3. '+=(' → logprob: -3.992706060409546
    4. '+' → logprob: -12.742706298828125
    5. ']+=' → logprob: -12.867706298828125
    6. '+='' → logprob: -14.242706298828125
    7. '+="' → logprob: -14.742706298828125
    8. ' ' → logprob: -15.992706298828125
    9. '=' → logprob: -16.117706298828125
    10. ' -=' → logprob: -17.117706298828125

Token 247: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.0722858102526516e-05
    2. ' x' → logprob: -10.500041007995605
    3. '(x' → logprob: -11.250041007995605
    4. '   ' → logprob: -17.25004005432129
    5. ' (' → logprob: -18.12504005432129
    6. '(' → logprob: -18.87504005432129
    7. '	x' → logprob: -19.50004005432129
    8. ' ' → logprob: -20.62504005432129
    9. '```' → logprob: -21.62504005432129
    10. '  ' → logprob: -22.25004005432129

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.0
    3. '```' → logprob: -19.375
    4. '[i' → logprob: -19.75
    5. '[' → logprob: -21.0
    6. '１' → logprob: -21.375
    7. '১' → logprob: -23.0
    8. '१' → logprob: -23.5625
    9. '[](' → logprob: -23.6875
    10. '[
' → logprob: -23.9375

Token 249: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.0005056116497144103
    2. '*' → logprob: -7.750505447387695
    3. ' *' → logprob: -9.500505447387695
    4. '*x' → logprob: -15.750505447387695
    5. '**' → logprob: -17.500505447387695
    6. '*(' → logprob: -19.250505447387695
    7. '*z' → logprob: -19.250505447387695
    8. '*p' → logprob: -19.375505447387695
    9. '"*' → logprob: -19.375505447387695
    10. 'y' → logprob: -19.625505447387695

Token 250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '
' → logprob: -16.75
    5. '۲' → logprob: -17.5
    6. '২' → logprob: -18.375
    7. '<|end|>' → logprob: -19.0
    8. '२' → logprob: -19.0
    9. '

' → logprob: -19.5625
    10. '[next' → logprob: -19.625

Token 251: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014542669057846
    2. '-' → logprob: -1.7014542818069458
    3. '-
' → logprob: -11.076454162597656
    4. '-x' → logprob: -11.326454162597656
    5. ' -
' → logprob: -11.451454162597656
    6. '   ' → logprob: -13.701454162597656
    7. ' ' → logprob: -14.826454162597656
    8. '```' → logprob: -15.076454162597656
    9. '-area' → logprob: -15.451454162597656
    10. '-
' → logprob: -15.826454162597656

Token 252: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2731597125530243
    2. 'y' → logprob: -1.5231597423553467
    3. ' y' → logprob: -4.023159503936768
    4. ' x' → logprob: -5.773159503936768
    5. '	y' → logprob: -15.398159980773926
    6. '<|end|>' → logprob: -16.02315902709961
    7. '   ' → logprob: -16.14815902709961
    8. '	x' → logprob: -16.64815902709961
    9. '1' → logprob: -16.77315902709961
    10. ' ' → logprob: -17.14815902709961

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. 'x' → logprob: -12.750005722045898
    3. '2' → logprob: -12.875005722045898
    4. '[' → logprob: -15.500005722045898
    5. '[i' → logprob: -16.3750057220459
    6. 'i' → logprob: -16.4375057220459
    7. '```' → logprob: -17.1250057220459
    8. ' x' → logprob: -18.0000057220459
    9. '<|end|>' → logprob: -18.3125057220459
    10. 'ields' → logprob: -18.3750057220459

Token 254: '*x' (ID: 46987)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002036595979006961
    2. ' x' → logprob: -8.500204086303711
    3. '*x' → logprob: -16.12520408630371
    4. '	x' → logprob: -17.75020408630371
    5. ',x' → logprob: -18.00020408630371
    6. '[x' → logprob: -18.50020408630371
    7. ''x' → logprob: -18.75020408630371
    8. '>x' → logprob: -18.75020408630371
    9. '```' → logprob: -19.25020408630371
    10. ')x' → logprob: -19.50020408630371

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. '[i' → logprob: -16.5
    4. '1' → logprob: -16.75
    5. '+' → logprob: -17.0
    6. '₂' → logprob: -17.625
    7. '۲' → logprob: -17.875
    8. '```' → logprob: -18.25
    9. 'x' → logprob: -18.875
    10. '[next' → logprob: -19.0

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2829569876194
    2. '
' → logprob: -1.4079569578170776
    3. ' area' → logprob: -7.657957077026367
    4. ' return' → logprob: -7.782957077026367
    5. '    
' → logprob: -7.907957077026367
    6. 'return' → logprob: -8.407957077026367
    7. '
' → logprob: -8.907957077026367
    8. 'area' → logprob: -9.907957077026367
    9. '  
' → logprob: -9.907957077026367
    10. ' 
' → logprob: -10.782957077026367

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001261845463886857
    2. '
' → logprob: -9.625125885009766
    3. ' return' → logprob: -10.250125885009766
    4. 'return' → logprob: -11.125125885009766
    5. ' area' → logprob: -12.250125885009766
    6. '    
' → logprob: -12.625125885009766
    7. ' ' → logprob: -13.875125885009766
    8. 'area' → logprob: -15.000125885009766
    9. '	return' → logprob: -15.625125885009766
    10. '   ' → logprob: -15.750125885009766

Token 258: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40874436497688293
    2. 'return' (adapté à ' return') → logprob: -1.4087443351745605
    3. '   ' → logprob: -2.4087443351745605
    4. ' area' → logprob: -7.4087443351745605
    5. 'area' → logprob: -8.158744812011719
    6. '
' → logprob: -8.408744812011719
    7. '	return' → logprob: -11.283744812011719
    8. '0' → logprob: -12.533744812011719
    9. ' ' → logprob: -13.283744812011719
    10. ' 
' → logprob: -13.908744812011719

Token 259: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.018411308526992798
    2. ' abs' → logprob: -4.018411159515381
    3. 'area' → logprob: -8.393411636352539
    4. '0' → logprob: -11.018411636352539
    5. ' area' → logprob: -11.018411636352539
    6. '(abs' → logprob: -13.518411636352539
    7. '   ' → logprob: -14.768411636352539
    8. ' ' → logprob: -14.893411636352539
    9. '
' → logprob: -16.01841163635254
    10. '.abs' → logprob: -17.51841163635254

Token 260: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -3.054500666621607e-06
    2. 'area' → logprob: -13.25000286102295
    3. '(' → logprob: -13.62500286102295
    4. '(angle' → logprob: -19.875003814697266
    5. '(amount' → logprob: -20.250003814697266
    6. ' area' → logprob: -20.375003814697266
    7. '.area' → logprob: -20.750003814697266
    8. '_area' → logprob: -21.375003814697266
    9. '-area' → logprob: -21.500003814697266
    10. '(axis' → logprob: -21.875003814697266

Token 261: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029506313148885965
    2. ')//' → logprob: -8.37529468536377
    3. ')/' → logprob: -10.50029468536377
    4. ' )' → logprob: -11.25029468536377
    5. '()' → logprob: -11.87529468536377
    6. '0' → logprob: -12.00029468536377
    7. ')>>' → logprob: -12.75029468536377
    8. ')return' → logprob: -13.25029468536377
    9. '   ' → logprob: -13.75029468536377
    10. '())' → logprob: -14.00029468536377

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '２' → logprob: -19.25
    4. '۲' → logprob: -20.875
    5. '
' → logprob: -21.0
    6. '   ' → logprob: -22.0
    7. '```' → logprob: -22.375
    8. '২' → logprob: -23.375
    9. '२' → logprob: -23.375
    10. '٢' → logprob: -23.5

Token 263: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6509832739830017
    2. '
' → logprob: -0.9009832739830017
    3. '<|end|>' → logprob: -3.0259833335876465
    4. '

' → logprob: -3.7759833335876465
    5. '\n' → logprob: -8.275982856750488
    6. '```' → logprob: -8.400982856750488
    7. '\' → logprob: -9.150982856750488
    8. '  
' → logprob: -9.150982856750488
    9. '<|end|>' → logprob: -9.900982856750488
    10. '    
' → logprob: -10.775982856750488

Token 264: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007148433942347765
    2. 'n' → logprob: -5.757148265838623
    3. 'if' → logprob: -6.007148265838623
    4. '#' → logprob: -7.257148265838623
    5. 'points' → logprob: -7.757148265838623
    6. '```' → logprob: -8.882148742675781
    7. '
' → logprob: -9.382148742675781
    8. 'import' → logprob: -10.507148742675781
    9. 'point' → logprob: -11.132148742675781
    10. '<|end|>' → logprob: -11.257148742675781

Token 265: ' rotate' (ID: 31987)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0019260174594819546
    2. 'main' → logprob: -6.376925945281982
    3. ' solve' → logprob: -8.75192642211914
    4. ' max' → logprob: -10.12692642211914
    5. 'solve' → logprob: -12.00192642211914
    6. '	main' → logprob: -12.50192642211914
    7. ' maximum' → logprob: -12.75192642211914
    8. 'max' → logprob: -12.75192642211914
    9. ' diameter' → logprob: -13.37692642211914
    10. ' maximal' → logprob: -13.62692642211914

Token 266: '_to' (ID: 5089)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.6572664380073547
    2. '_point' → logprob: -1.65726637840271
    3. '(' → logprob: -2.40726637840271
    4. '(point' → logprob: -2.65726637840271
    5. '(poly' → logprob: -3.15726637840271
    6. '_points' → logprob: -3.40726637840271
    7. '_polygon' → logprob: -4.407266616821289
    8. '_vector' → logprob: -4.907266616821289
    9. '(angle' → logprob: -5.157266616821289
    10. '_' → logprob: -5.407266616821289

Token 267: '_low' (ID: 55528)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3015831410884857
    2. '(poly' → logprob: -2.3015830516815186
    3. '_start' → logprob: -3.8015830516815186
    4. '_first' → logprob: -3.9265830516815186
    5. '_points' → logprob: -4.051583290100098
    6. 'left' → logprob: -4.051583290100098
    7. '_right' → logprob: -4.176583290100098
    8. 'poly' → logprob: -4.301583290100098
    9. '_min' → logprob: -4.551583290100098
    10. '_front' → logprob: -4.676583290100098

Token 268: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -4.894790981779806e-05
    2. 'er' → logprob: -10.000048637390137
    3. 'erm' → logprob: -14.000048637390137
    4. 'erst' → logprob: -14.125048637390137
    5. '(est' → logprob: -14.125048637390137
    6. 'left' → logprob: -14.750048637390137
    7. '(' → logprob: -16.250049591064453
    8. 'st' → logprob: -16.375049591064453
    9. 'poly' → logprob: -16.750049591064453
    10. 'point' → logprob: -16.750049591064453

Token 269: '_left' (ID: 22189)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.10062187910079956
    2. '(poly' → logprob: -3.3506219387054443
    3. '(points' → logprob: -4.100621700286865
    4. '_index' → logprob: -4.350621700286865
    5. '_x' → logprob: -4.600621700286865
    6. 'est' → logprob: -4.850621700286865
    7. 'x' → logprob: -5.100621700286865
    8. '(pol' → logprob: -5.850621700286865
    9. 'point' → logprob: -6.225621700286865
    10. '_idx' → logprob: -7.850621700286865

Token 270: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.07239096611738205
    2. '_point' → logprob: -3.5723910331726074
    3. '(points' → logprob: -3.6973910331726074
    4. '(pol' → logprob: -4.822391033172607
    5. '(point' → logprob: -5.072391033172607
    6. 'most' → logprob: -7.447391033172607
    7. '(pt' → logprob: -7.447391033172607
    8. 'point' → logprob: -7.572391033172607
    9. '_corner' → logprob: -8.19739055633545
    10. '(' → logprob: -9.32239055633545

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012137088924646378
    2. '(poly' → logprob: -4.637136936187744
    3. '):
' → logprob: -6.137136936187744
    4. ')' → logprob: -8.762137413024902
    5. '):
' → logprob: -10.512137413024902
    6. '(p' → logprob: -10.762137413024902
    7. '(pol' → logprob: -12.137137413024902
    8. 'poly' → logprob: -13.012137413024902
    9. ' ):' → logprob: -13.387137413024902
    10. ' poly' → logprob: -14.512137413024902

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11075444519519806
    2. ' min' → logprob: -2.6107544898986816
    3. 'min' → logprob: -3.9857544898986816
    4. ' n' → logprob: -5.485754489898682
    5. ' idx' → logprob: -5.610754489898682
    6. 'idx' → logprob: -6.485754489898682
    7. 'n' → logprob: -6.485754489898682
    8. 'm' → logprob: -7.610754489898682
    9. ' m' → logprob: -7.735754489898682
    10. ' poly' → logprob: -8.485754013061523

Token 273: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.056683894246816635
    2. 'n' → logprob: -3.1816837787628174
    3. '   ' → logprob: -5.1816840171813965
    4. 'idx' → logprob: -5.9316840171813965
    5. ' min' → logprob: -5.9316840171813965
    6. 'm' → logprob: -6.8066840171813965
    7. ' n' → logprob: -7.3066840171813965
    8. 'if' → logprob: -7.6816840171813965
    9. 'i' → logprob: -9.056683540344238
    10. 'lowest' → logprob: -9.056683540344238

Token 274: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13870373368263245
    2. ' min' → logprob: -2.6387038230895996
    3. 'idx' → logprob: -3.6387038230895996
    4. 'n' → logprob: -4.1387038230896
    5. ' idx' → logprob: -5.3887038230896
    6. 'lowest' → logprob: -5.7637038230896
    7. ' n' → logprob: -5.8887038230896
    8. '   ' → logprob: -6.0137038230896
    9. 'm' → logprob: -6.7637038230896
    10. 'if' → logprob: -7.7637038230896

Token 275: ' index' (ID: 3472)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03674016892910004
    2. 'idx' → logprob: -3.5367400646209717
    3. 'index' → logprob: -5.286740303039551
    4. 'lowest' → logprob: -7.036740303039551
    5. 'i' → logprob: -7.286740303039551
    6. ' min' → logprob: -8.66174030303955
    7. 'poly' → logprob: -9.03674030303955
    8. ' idx' → logprob: -10.66174030303955
    9. '(min' → logprob: -12.03674030303955
    10. 'pos' → logprob: -12.16174030303955

Token 276: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.351988673210144
    2. ' =' → logprob: -1.351988673210144
    3. 'of' → logprob: -1.601988673210144
    4. 'min' → logprob: -2.2269887924194336
    5. ' of' → logprob: -2.7269887924194336
    6. '_' → logprob: -3.1019887924194336
    7. '(' → logprob: -3.4769887924194336
    8. '_of' → logprob: -4.226988792419434
    9. '_min' → logprob: -4.976988792419434
    10. '0' → logprob: -6.226988792419434

Token 277: ' vertex' (ID: 25363)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008796085603535175
    2. ' min' → logprob: -4.758796215057373
    3. 'poly' → logprob: -9.008795738220215
    4. '(min' → logprob: -10.508795738220215
    5. 'lowest' → logprob: -10.633795738220215
    6. ' poly' → logprob: -12.133795738220215
    7. '[min' → logprob: -14.383795738220215
    8. 'point' → logprob: -14.508795738220215
    9. 'minimum' → logprob: -14.758795738220215
    10. '	min' → logprob: -15.758795738220215

Token 278: ' with' (ID: 483)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.019399529322981834
    2. 'lowest' → logprob: -4.519399642944336
    3. 'imin' → logprob: -5.519399642944336
    4. ' min' → logprob: -7.019399642944336
    5. 'i' → logprob: -7.144399642944336
    6. '   ' → logprob: -7.519399642944336
    7. '0' → logprob: -7.894399642944336
    8. 'idx' → logprob: -7.894399642944336
    9. 'minimum' → logprob: -8.519399642944336
    10. '	min' → logprob: -8.519399642944336

Token 279: ' lowest' (ID: 23120)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14001329243183136
    2. 'minimum' → logprob: -2.1400132179260254
    3. 'lowest' → logprob: -4.390013217926025
    4. 'minimal' → logprob: -7.640013217926025
    5. ' minimum' → logprob: -9.765013694763184
    6. 'the' → logprob: -10.765013694763184
    7. '(min' → logprob: -10.890013694763184
    8. ' min' → logprob: -11.015013694763184
    9. 'small' → logprob: -13.640013694763184
    10. 'poly' → logprob: -13.640013694763184

Token 280: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.41045019030570984
    2. 'x' → logprob: -1.1604502201080322
    3. ' y' → logprob: -3.9104502201080322
    4. 'poly' → logprob: -6.535449981689453
    5. ' x' → logprob: -6.910449981689453
    6. ' poly' → logprob: -7.660449981689453
    7. '[' → logprob: -8.035449981689453
    8. '(poly' → logprob: -11.535449981689453
    9. 'p' → logprob: -12.035449981689453
    10. 'py' → logprob: -12.285449981689453

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28022533655166626
    2. '_' → logprob: -2.2802252769470215
    3. '<|end|>' → logprob: -3.0302252769470215
    4. ' and' → logprob: -3.2802252769470215
    5. ' or' → logprob: -3.9052252769470215
    6. 'and' → logprob: -4.7802252769470215
    7. ')' → logprob: -5.0302252769470215
    8. ' ,' → logprob: -5.1552252769470215
    9. '=' → logprob: -5.5302252769470215
    10. '_,' → logprob: -5.7802252769470215

Token 282: ' if' (ID: 538)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.857654333114624
    2. 'x' → logprob: -0.982654333114624
    3. ' then' → logprob: -1.857654333114624
    4. 'then' → logprob: -3.607654333114624
    5. 'and' → logprob: -4.607654571533203
    6. ' lowest' → logprob: -5.732654571533203
    7. ' and' → logprob: -6.482654571533203
    8. '   ' → logprob: -6.482654571533203
    9. ' x' → logprob: -6.732654571533203
    10. 'min' → logprob: -8.232654571533203

Token 283: ' tie' (ID: 22244)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -1.092204213142395
    2. 'there' → logprob: -1.842204213142395
    3. 'tie' → logprob: -1.842204213142395
    4. 'poly' → logprob: -2.0922040939331055
    5. 'y' → logprob: -2.7172040939331055
    6. ' there' → logprob: -3.4672040939331055
    7. 't' → logprob: -3.9672040939331055
    8. ' poly' → logprob: -3.9672040939331055
    9. ' multiple' → logprob: -4.0922040939331055
    10. '0' → logprob: -4.2172040939331055

Token 284: ' lowest' (ID: 23120)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6103426218032837
    2. ',' → logprob: -0.9853426218032837
    3. 'y' → logprob: -3.610342502593994
    4. 'break' → logprob: -3.985342502593994
    5. ' ,' → logprob: -5.360342502593994
    6. ' then' → logprob: -5.360342502593994
    7. '_break' → logprob: -5.610342502593994
    8. 'and' → logprob: -5.610342502593994
    9. '-break' → logprob: -5.735342502593994
    10. ' break' → logprob: -6.110342502593994

Token 285: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08201497048139572
    2. ' x' → logprob: -2.582015037536621
    3. '[' → logprob: -5.832015037536621
    4. '_x' → logprob: -9.582015037536621
    5. '<|end|>' → logprob: -10.207015037536621
    6. 'index' → logprob: -10.582015037536621
    7. ' ' → logprob: -11.207015037536621
    8. '_' → logprob: -11.332015037536621
    9. ' index' → logprob: -11.707015037536621
    10. ',' → logprob: -12.457015037536621

Token 286: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33562082052230835
    2. ' =' → logprob: -1.4606208801269531
    3. ',' → logprob: -4.210620880126953
    4. ':' → logprob: -4.335620880126953
    5. ')' → logprob: -5.835620880126953
    6. '_idx' → logprob: -5.835620880126953
    7. '   ' → logprob: -6.335620880126953
    8. '):' → logprob: -6.460620880126953
    9. 'def' → logprob: -6.460620880126953
    10. ':
' → logprob: -6.460620880126953

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026171982288360596
    2. '
' → logprob: -4.526172161102295
    3. 'idx' → logprob: -5.026172161102295
    4. 'index' → logprob: -5.401172161102295
    5. 'n' → logprob: -7.151172161102295
    6. '(' → logprob: -7.276172161102295
    7. '    
' → logprob: -7.526172161102295
    8. ')' → logprob: -8.276171684265137
    9. '  
' → logprob: -8.276171684265137
    10. ':' → logprob: -8.651171684265137

Token 288: ' idx' (ID: 14016)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5660368204116821
    2. 'min' → logprob: -1.3160368204116821
    3. ' idx' → logprob: -2.1910367012023926
    4. 'idx' (adapté à ' idx') → logprob: -3.0660367012023926
    5. 'index' → logprob: -6.941036701202393
    6. ' n' → logprob: -6.941036701202393
    7. 'n' → logprob: -6.941036701202393
    8. '   ' → logprob: -7.066036701202393
    9. ' index' → logprob: -7.316036701202393
    10. 'lowest' → logprob: -7.691036701202393

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327301263809204
    2. ' =' → logprob: -1.3132729530334473
    3. ',' → logprob: -11.688273429870605
    4. '=int' → logprob: -13.313273429870605
    5. ' =
' → logprob: -14.938273429870605
    6. ' ' → logprob: -15.938273429870605
    7. '=
' → logprob: -15.938273429870605
    8. '=np' → logprob: -16.06327247619629
    9. '=len' → logprob: -16.18827247619629
    10. '=max' → logprob: -16.31327247619629

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009719726629555225
    2. 'min' → logprob: -4.7597198486328125
    3. ' min' → logprob: -7.3847198486328125
    4. ' ' → logprob: -7.6347198486328125
    5. '
' → logprob: -15.759719848632812
    6. '	min' → logprob: -15.884719848632812
    7. 'poly' → logprob: -16.509719848632812
    8. '  ' → logprob: -16.759719848632812
    9. '   ' → logprob: -16.884719848632812
    10. 'None' → logprob: -17.634719848632812

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06198034808039665
    2. 'min' → logprob: -2.8119802474975586
    3. ' min' → logprob: -11.436980247497559
    4. ' ' → logprob: -13.561980247497559
    5. 'None' → logprob: -15.311980247497559
    6. 'poly' → logprob: -15.686980247497559
    7. '	min' → logprob: -16.436981201171875
    8. '.min' → logprob: -17.186981201171875
    9. 'mini' → logprob: -17.436981201171875
    10. '
' → logprob: -17.811981201171875

Token 292: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1381843388080597
    2. 'for' → logprob: -2.2631843090057373
    3. ' for' → logprob: -3.7631843090057373
    4. '   ' → logprob: -6.763184547424316
    5. 'n' → logprob: -7.763184547424316
    6. '<|end|>' → logprob: -8.513184547424316
    7. '	for' → logprob: -11.138184547424316
    8. '
' → logprob: -12.013184547424316
    9. ' 
' → logprob: -12.138184547424316
    10. 'while' → logprob: -12.638184547424316

Token 293: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5879440903663635
    2. ' for' → logprob: -0.8379440903663635
    3. '   ' → logprob: -4.962944030761719
    4. '
' → logprob: -5.837944030761719
    5. 'n' → logprob: -6.587944030761719
    6. 'min' → logprob: -7.712944030761719
    7. ' ymin' → logprob: -9.587944030761719
    8. '	for' → logprob: -10.087944030761719
    9. 'y' → logprob: -10.837944030761719
    10. ' n' → logprob: -11.087944030761719

Token 294: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0029794832225888968
    2. 'min' → logprob: -6.002979278564453
    3. 'n' → logprob: -8.752979278564453
    4. ' for' → logprob: -8.752979278564453
    5. 'lowest' → logprob: -8.877979278564453
    6. '   ' → logprob: -10.002979278564453
    7. 'm' → logprob: -13.877979278564453
    8. 'y' → logprob: -14.502979278564453
    9. 'low' → logprob: -14.502979278564453
    10. 'minimum' → logprob: -15.127979278564453

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015023599844425917
    2. ' i' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.001502990722656
    4. '	i' → logprob: -18.626502990722656
    5. '  ' → logprob: -20.626502990722656
    6. '   ' → logprob: -21.001502990722656
    7. '_i' → logprob: -21.876502990722656
    8. '
' → logprob: -22.001502990722656
    9. 'I' → logprob: -22.251502990722656
    10. ' ' → logprob: -23.501502990722656

Token 296: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023502269759774208
    2. 'in' → logprob: -3.7735023498535156
    3. ',' → logprob: -8.398502349853516
    4. ' ' → logprob: -10.523502349853516
    5. ' ,' → logprob: -12.773502349853516
    6. ',in' → logprob: -14.273502349853516
    7. '	in' → logprob: -14.648502349853516
    8. 'range' → logprob: -15.648502349853516
    9. '1' → logprob: -15.898502349853516
    10. '  ' → logprob: -16.398502349853516

Token 297: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.596781946020201e-05
    2. 'y' → logprob: -10.000045776367188
    3. '_x' → logprob: -15.000045776367188
    4. 'poly' → logprob: -16.750045776367188
    5. 'px' → logprob: -17.000045776367188
    6. '(x' → logprob: -17.250045776367188
    7. ' x' → logprob: -18.000045776367188
    8. '_,' → logprob: -19.375045776367188
    9. '```' → logprob: -20.000045776367188
    10. 'vx' → logprob: -20.125045776367188

Token 298: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.20142094790935516
    2. ',' → logprob: -1.7014209032058716
    3. ' ,' → logprob: -12.076420783996582
    4. 'y' → logprob: -13.826420783996582
    5. ',x' → logprob: -15.326420783996582
    6. ',
' → logprob: -15.701420783996582
    7. ',_' → logprob: -16.2014217376709
    8. ',i' → logprob: -16.3264217376709
    9. ',user' → logprob: -16.4514217376709
    10. ',v' → logprob: -16.9514217376709

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ' )' → logprob: -12.000008583068848
    3. 'in' → logprob: -12.875008583068848
    4. ')
' → logprob: -16.875009536743164
    5. ',)' → logprob: -17.125009536743164
    6. ' in' → logprob: -17.375009536743164
    7. '),' → logprob: -18.500009536743164
    8. '）' → logprob: -18.750009536743164
    9. '))' → logprob: -19.000009536743164
    10. '   ' → logprob: -19.125009536743164

Token 300: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868737816810608
    2. ' in' → logprob: -1.136873722076416
    3. ')' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.136874198913574
    5. 'import' → logprob: -15.136874198913574
    6. ',' → logprob: -15.636874198913574
    7. '
' → logprob: -16.261873245239258
    8. '_in' → logprob: -16.386873245239258
    9. 'n' → logprob: -16.761873245239258
    10. '	in' → logprob: -17.011873245239258

Token 301: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015023599844425917
    2. ' enumerate' → logprob: -6.501502513885498
    3. 'en' → logprob: -18.626502990722656
    4. 'enum' → logprob: -19.251502990722656
    5. '
' → logprob: -20.001502990722656
    6. 'Enumer' → logprob: -21.376502990722656
    7. '```' → logprob: -21.626502990722656
    8. '(en' → logprob: -21.751502990722656
    9. 'enqueue' → logprob: -21.876502990722656
    10. '.enumer' → logprob: -22.251502990722656

Token 302: '(poly' (ID: 175644)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.00047809764510020614
    2. '(poly' → logprob: -8.12547779083252
    3. ' poly' → logprob: -8.62547779083252
    4. 'enumer' → logprob: -13.00047779083252
    5. 'pol' → logprob: -16.250478744506836
    6. '_poly' → logprob: -16.375478744506836
    7. '/poly' → logprob: -17.375478744506836
    8. ' enumerate' → logprob: -17.500478744506836
    9. 'Poly' → logprob: -17.750478744506836
    10. ')' → logprob: -18.000478744506836

Token 303: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008621666580438614
    2. '):
' → logprob: -4.758621692657471
    3. '):
' → logprob: -12.633621215820312
    4. ':' → logprob: -13.133621215820312
    5. '   ' → logprob: -14.383621215820312
    6. '):

' → logprob: -14.383621215820312
    7. ' ):' → logprob: -14.883621215820312
    8. ')' → logprob: -15.133621215820312
    9. '):(' → logprob: -17.008621215820312
    10. '):-' → logprob: -17.258621215820312

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014965300215408206
    2. '   ' → logprob: -7.501496315002441
    3. ' if' → logprob: -7.751496315002441
    4. '<|end|>' → logprob: -8.501496315002441
    5. ',' → logprob: -8.626496315002441
    6. '	   ' → logprob: -10.376496315002441
    7. '1' → logprob: -11.376496315002441
    8. '```' → logprob: -11.376496315002441
    9. ':' → logprob: -11.501496315002441
    10. ' ' → logprob: -11.876496315002441

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4245883524417877
    2. 'if' (adapté à ' if') → logprob: -1.1745883226394653
    3. '       ' → logprob: -3.299588441848755
    4. '   ' → logprob: -9.174588203430176
    5. '
' → logprob: -12.799588203430176
    6. '    ' → logprob: -12.924588203430176
    7. '	if' → logprob: -13.174588203430176
    8. 'x' → logprob: -13.299588203430176
    9. 'y' → logprob: -13.674588203430176
    10. '           ' → logprob: -14.424588203430176

Token 306: ' y' (ID: 342)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.1612602025270462
    2. 'y' → logprob: -1.9112602472305298
    3. ' y' → logprob: -7.41126012802124
    4. ' (' → logprob: -7.91126012802124
    5. '(' → logprob: -10.161260604858398
    6. '(x' → logprob: -12.036260604858398
    7. '   ' → logprob: -12.411260604858398
    8. '	y' → logprob: -13.411260604858398
    9. '(py' → logprob: -13.411260604858398
    10. ' ' → logprob: -13.473760604858398

Token 307: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6329857110977173
    2. ' <' → logprob: -0.7579857110977173
    3. '[' → logprob: -8.507986068725586
    4. '<|end|>' → logprob: -9.882986068725586
    5. '<int' → logprob: -10.507986068725586
    6. ' ' → logprob: -10.632986068725586
    7. '<com' → logprob: -11.757986068725586
    8. '<
' → logprob: -11.757986068725586
    9. '<num' → logprob: -12.257986068725586
    10. '<n' → logprob: -12.382986068725586

Token 308: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -2.7968066206085496e-05
    2. ' poly' → logprob: -10.500027656555176
    3. '_poly' → logprob: -15.500027656555176
    4. '(poly' → logprob: -16.000028610229492
    5. 'pol' → logprob: -17.500028610229492
    6. '-poly' → logprob: -18.750028610229492
    7. 'py' → logprob: -19.125028610229492
    8. 'Poly' → logprob: -20.000028610229492
    9. '0' → logprob: -20.625028610229492
    10. 'polygon' → logprob: -21.000028610229492

Token 309: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0007304243044927716
    2. '[i' → logprob: -7.375730514526367
    3. '[' → logprob: -9.250730514526367
    4. '[len' → logprob: -12.750730514526367
    5. 'idx' → logprob: -13.000730514526367
    6. '[-' → logprob: -14.250730514526367
    7. '   ' → logprob: -14.375730514526367
    8. '[
' → logprob: -15.375730514526367
    9. '(idx' → logprob: -15.750730514526367
    10. '[index' → logprob: -15.875730514526367

Token 310: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34974291920661926
    2. '[' → logprob: -1.4747428894042969
    3. '][' → logprob: -2.849742889404297
    4. '[idx' → logprob: -4.849742889404297
    5. '1' → logprob: -8.349742889404297
    6. 'i' → logprob: -8.599742889404297
    7. '[-' → logprob: -10.474742889404297
    8. 'idx' → logprob: -10.724742889404297
    9. ' [' → logprob: -10.849742889404297
    10. '   ' → logprob: -11.349742889404297

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -12.000008583068848
    3. ' ' → logprob: -14.562508583068848
    4. '
' → logprob: -14.625008583068848
    5. '   ' → logprob: -15.187508583068848
    6. '

' → logprob: -15.312508583068848
    7. '```' → logprob: -15.375008583068848
    8. '[' → logprob: -17.00000762939453
    9. '<|end|>' → logprob: -17.00000762939453
    10. 'y' → logprob: -17.00000762939453

Token 312: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.048681724816560745
    2. 'or' → logprob: -3.0486817359924316
    3. ')' → logprob: -9.298681259155273
    4. '	or' → logprob: -14.548681259155273
    5. '   ' → logprob: -14.673681259155273
    6. ']' → logprob: -15.048681259155273
    7. ':' → logprob: -15.048681259155273
    8. ' ' → logprob: -15.173681259155273
    9. '
' → logprob: -15.298681259155273
    10. ',' → logprob: -15.673681259155273

Token 313: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.006717743817716837
    2. 'or' → logprob: -5.006717681884766
    3. '	or' → logprob: -14.006717681884766
    4. ' ' → logprob: -14.131717681884766
    5. '   ' → logprob: -14.631717681884766
    6. '    ' → logprob: -15.631717681884766
    7. '       ' → logprob: -17.756717681884766
    8. ')' → logprob: -18.006717681884766
    9. ' orun' → logprob: -18.006717681884766
    10. 'y' → logprob: -18.006717681884766

Token 314: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -2.3319124011322856e-05
    2. '(' → logprob: -11.500022888183594
    3. ' (' → logprob: -11.625022888183594
    4. '(x' → logprob: -12.500022888183594
    5. 'y' → logprob: -15.000022888183594
    6. '
' → logprob: -17.000022888183594
    7. '(
' → logprob: -17.125022888183594
    8. '(abs' → logprob: -17.250022888183594
    9. '(year' → logprob: -17.750022888183594
    10. '(py' → logprob: -17.750022888183594

Token 315: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.848420551046729e-05
    2. ' y' → logprob: -9.7500581741333
    3. '(y' → logprob: -16.000059127807617
    4. ' (' → logprob: -18.000059127807617
    5. ''y' → logprob: -19.625059127807617
    6. '(' → logprob: -19.875059127807617
    7. ')y' → logprob: -20.375059127807617
    8. '
' → logprob: -20.500059127807617
    9. '	y' → logprob: -20.500059127807617
    10. 'y's' → logprob: -20.625059127807617

Token 316: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.83138108253479
    2. '[' → logprob: -1.58138108253479
    3. '==' → logprob: -1.58138108253479
    4. '[i' → logprob: -2.33138108253479
    5. '[idx' → logprob: -3.70638108253479
    6. ' ==' → logprob: -4.081380844116211
    7. ' <' → logprob: -4.456380844116211
    8. ' ' → logprob: -7.331380844116211
    9. '<i' → logprob: -7.956380844116211
    10. '>' → logprob: -8.331380844116211

Token 317: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -6.704273118884885e-07
    2. ' poly' → logprob: -14.250000953674316
    3. 'pol' → logprob: -18.75
    4. '(poly' → logprob: -19.0
    5. 'py' → logprob: -19.25
    6. '_poly' → logprob: -22.75
    7. '-poly' → logprob: -23.125
    8. '
' → logprob: -23.875
    9. 'idx' → logprob: -24.375
    10. '0' → logprob: -25.0

Token 318: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0022133004385977983
    2. '[i' → logprob: -6.127213478088379
    3. 'idx' → logprob: -10.502213478088379
    4. '[' → logprob: -15.377213478088379
    5. '(idx' → logprob: -16.127212524414062
    6. '	idx' → logprob: -16.127212524414062
    7. '```' → logprob: -17.002212524414062
    8. ' idx' → logprob: -17.502212524414062
    9. '[len' → logprob: -17.502212524414062
    10. '
' → logprob: -17.627212524414062

Token 319: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25296932458877563
    2. '][' → logprob: -1.5029692649841309
    3. '1' → logprob: -7.502969264984131
    4. ')[' → logprob: -8.002969741821289
    5. ''][' → logprob: -9.627969741821289
    6. '"][' → logprob: -11.252969741821289
    7. '}[' → logprob: -11.252969741821289
    8. ']' → logprob: -11.377969741821289
    9. '>[' → logprob: -11.627969741821289
    10. '')[' → logprob: -12.002969741821289

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -13.500005722045898
    3. '
' → logprob: -13.500005722045898
    4. '0' → logprob: -14.000005722045898
    5. '[' → logprob: -14.000005722045898
    6. '   ' → logprob: -14.000005722045898
    7. 'i' → logprob: -15.812505722045898
    8. 'poly' → logprob: -15.875005722045898
    9. '

' → logprob: -16.3750057220459
    10. '-' → logprob: -16.5000057220459

Token 321: ']' (ID: 60)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759608745574951
    2. ' and' → logprob: -0.8259608745574951
    3. '   ' → logprob: -11.450961112976074
    4. ')' → logprob: -12.325961112976074
    5. '	and' → logprob: -13.325961112976074
    6. '    ' → logprob: -13.575961112976074
    7. 'x' → logprob: -14.450961112976074
    8. ' ' → logprob: -14.450961112976074
    9. '       ' → logprob: -14.825961112976074
    10. 'a' → logprob: -15.075961112976074

Token 322: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47408226132392883
    2. ' and' → logprob: -0.9740822315216064
    3. '   ' → logprob: -12.599081993103027
    4. '    ' → logprob: -14.224081993103027
    5. '	and' → logprob: -14.349081993103027
    6. ' ' → logprob: -15.599081993103027
    7. '       ' → logprob: -16.224082946777344
    8. 'x' → logprob: -16.349082946777344
    9. '```' → logprob: -17.099082946777344
    10. ' и' → logprob: -17.474082946777344

Token 323: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '	x' → logprob: -19.00001335144043
    4. '$x' → logprob: -20.75001335144043
    5. '"x' → logprob: -21.12501335144043
    6. ')x' → logprob: -21.25001335144043
    7. ''x' → logprob: -22.87501335144043
    8. '
' → logprob: -23.12501335144043
    9. '   ' → logprob: -23.50001335144043
    10. '_x' → logprob: -23.75001335144043

Token 324: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0025798205751925707
    2. ' <' → logprob: -6.002579689025879
    3. '<x' → logprob: -9.377579689025879
    4. '<p' → logprob: -11.752579689025879
    5. '>' → logprob: -12.752579689025879
    6. '<int' → logprob: -13.502579689025879
    7. '<len' → logprob: -13.627579689025879
    8. ')<' → logprob: -14.127579689025879
    9. '<i' → logprob: -14.252579689025879
    10. '<arr' → logprob: -14.377579689025879

Token 325: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.0280383548888494e-06
    2. ' poly' → logprob: -14.000000953674316
    3. '(poly' → logprob: -16.750001907348633
    4. 'py' → logprob: -18.125001907348633
    5. 'pol' → logprob: -18.250001907348633
    6. '_poly' → logprob: -21.375001907348633
    7. '-poly' → logprob: -22.000001907348633
    8. '.poly' → logprob: -22.875001907348633
    9. 'ploy' → logprob: -22.875001907348633
    10. '
' → logprob: -23.125001907348633

Token 326: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.029777687042951584
    2. '[i' → logprob: -3.529777765274048
    3. 'idx' → logprob: -10.529777526855469
    4. '[' → logprob: -15.904777526855469
    5. '(idx' → logprob: -15.904777526855469
    6. 'poly' → logprob: -16.77977752685547
    7. ' idx' → logprob: -16.77977752685547
    8. '	idx' → logprob: -16.90477752685547
    9. 'i' → logprob: -17.52977752685547
    10. '[index' → logprob: -17.65477752685547

Token 327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05261741951107979
    2. '0' → logprob: -3.177617311477661
    3. '[' → logprob: -5.17761754989624
    4. 'idx' → logprob: -6.30261754989624
    5. '[i' → logprob: -6.92761754989624
    6. 'i' → logprob: -7.92761754989624
    7. '1' → logprob: -8.677617073059082
    8. '[idx' → logprob: -8.927617073059082
    9. ')[' → logprob: -9.052617073059082
    10. '   ' → logprob: -9.302617073059082

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003809833142440766
    2. 'i' → logprob: -8.000380516052246
    3. 'idx' → logprob: -10.125380516052246
    4. '1' → logprob: -14.000380516052246
    5. 'x' → logprob: -14.000380516052246
    6. '[' → logprob: -14.000380516052246
    7. '[i' → logprob: -14.000380516052246
    8. ' ' → logprob: -14.375380516052246
    9. '[idx' → logprob: -14.875380516052246
    10. '   ' → logprob: -15.250380516052246

Token 329: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005775323137640953
    2. '):
' → logprob: -5.380775451660156
    3. ')' → logprob: -6.880775451660156
    4. ']):' → logprob: -9.755775451660156
    5. ':' → logprob: -10.005775451660156
    6. ' ):' → logprob: -12.005775451660156
    7. '>):' → logprob: -12.505775451660156
    8. ')):' → logprob: -12.630775451660156
    9. '):

' → logprob: -12.755775451660156
    10. '   ' → logprob: -13.380775451660156

Token 330: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05871663987636566
    2. ' idx' → logprob: -3.6837165355682373
    3. 'idx' → logprob: -4.183716773986816
    4. ':' → logprob: -5.058716773986816
    5. '   ' → logprob: -5.933716773986816
    6. '	idx' → logprob: -5.933716773986816
    7. '[idx' → logprob: -6.058716773986816
    8. ':
' → logprob: -6.433716773986816
    9. '_idx' → logprob: -7.933716773986816
    10. '
' → logprob: -8.058716773986816

Token 331: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.018237974494695663
    2. ' idx' → logprob: -4.018238067626953
    3. '	idx' → logprob: -9.893238067626953
    4. '       ' → logprob: -10.518238067626953
    5. '   ' → logprob: -12.393238067626953
    6. '
' → logprob: -13.143238067626953
    7. '[idx' → logprob: -13.393238067626953
    8. '_idx' → logprob: -13.518238067626953
    9. '           ' → logprob: -13.893238067626953
    10. '(idx' → logprob: -15.143238067626953

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.260528028011322
    2. '=' → logprob: -1.5105280876159668
    3. '=i' → logprob: -4.760528087615967
    4. ' =
' → logprob: -15.385527610778809
    5. '=
' → logprob: -15.760527610778809
    6. ' ' → logprob: -16.010528564453125
    7. '=int' → logprob: -16.010528564453125
    8. ' i' → logprob: -16.510528564453125
    9. '=index' → logprob: -16.635528564453125
    10. '＝' → logprob: -16.885528564453125

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024756586644798517
    2. ' i' → logprob: -6.002475738525391
    3. '	i' → logprob: -19.62747573852539
    4. ' ' → logprob: -20.62747573852539
    5. '   ' → logprob: -22.00247573852539
    6. '_i' → logprob: -23.12747573852539
    7. ')i' → logprob: -24.50247573852539
    8. '=i' → logprob: -24.87747573852539
    9. ' ' → logprob: -25.25247573852539
    10. '
' → logprob: -25.25247573852539

Token 334: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011936791706830263
    2. '
' → logprob: -6.751193523406982
    3. '    
' → logprob: -11.00119400024414
    4. ' return' → logprob: -12.37619400024414
    5. ',' → logprob: -14.37619400024414
    6. '       ' → logprob: -14.87619400024414
    7. '<|end|>' → logprob: -15.00119400024414
    8. '  
' → logprob: -15.62619400024414
    9. '   ' → logprob: -16.00119400024414
    10. 'return' → logprob: -16.00119400024414

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029613598599098623
    2. ' return' → logprob: -8.625296592712402
    3. 'return' → logprob: -9.375296592712402
    4. '
' → logprob: -10.750296592712402
    5. '    
' → logprob: -12.500296592712402
    6. '       ' → logprob: -13.000296592712402
    7. '<|end|>' → logprob: -13.875296592712402
    8. '	return' → logprob: -14.375296592712402
    9. '   ' → logprob: -14.875296592712402
    10. ',' → logprob: -15.125296592712402

Token 336: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6818132400512695
    2. 'return' (adapté à ' return') → logprob: -1.0568132400512695
    3. '   ' → logprob: -1.9318132400512695
    4. 'poly' → logprob: -6.8068132400512695
    5. ' poly' → logprob: -7.4318132400512695
    6. '
' → logprob: -9.30681324005127
    7. ' rotated' → logprob: -10.30681324005127
    8. '	return' → logprob: -10.80681324005127
    9. 'rot' → logprob: -12.93181324005127
    10. ' if' → logprob: -13.30681324005127

Token 337: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.038043100386857986
    2. ' poly' → logprob: -3.2880430221557617
    3. '(poly' → logprob: -13.413043022155762
    4. ' ' → logprob: -17.663043975830078
    5. 'Poly' → logprob: -17.663043975830078
    6. '-poly' → logprob: -17.788043975830078
    7. '[' → logprob: -18.038043975830078
    8. 'py' → logprob: -18.913043975830078
    9. '/poly' → logprob: -18.913043975830078
    10. '_poly' → logprob: -19.038043975830078

Token 338: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.011379299685359001
    2. 'idx' → logprob: -5.136379241943359
    3. 'poly' → logprob: -5.261379241943359
    4. ' poly' → logprob: -9.38637924194336
    5. ' idx' → logprob: -9.38637924194336
    6. '[' → logprob: -10.01137924194336
    7. '(idx' → logprob: -11.51137924194336
    8. '[:' → logprob: -11.63637924194336
    9. '[:]' → logprob: -12.63637924194336
    10. '[i' → logprob: -12.88637924194336

Token 339: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0031803252641111612
    2. ':' → logprob: -5.753180503845215
    3. 'idx' → logprob: -14.003180503845215
    4. '+' → logprob: -14.128180503845215
    5. ']' → logprob: -14.878180503845215
    6. '%' → logprob: -15.753180503845215
    7. ' :]' → logprob: -15.753180503845215
    8. '[idx' → logprob: -16.0031795501709
    9. ':],' → logprob: -16.2531795501709
    10. ':].' → logprob: -16.2531795501709

Token 340: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019297054968774319
    2. ' +' → logprob: -6.251929759979248
    3. '[idx' → logprob: -14.87692928314209
    4. '+
' → logprob: -15.25192928314209
    5. '+xml' → logprob: -15.62692928314209
    6. 'poly' → logprob: -15.87692928314209
    7. '```' → logprob: -16.626930236816406
    8. '+i' → logprob: -16.876930236816406
    9. '+p' → logprob: -17.251930236816406
    10. '＋' → logprob: -17.251930236816406

Token 341: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.00033546582562848926
    2. ' poly' → logprob: -8.000335693359375
    3. 'pol' → logprob: -18.750335693359375
    4. '(poly' → logprob: -21.500335693359375
    5. 'Poly' → logprob: -22.000335693359375
    6. '_poly' → logprob: -24.375335693359375
    7. '-poly' → logprob: -24.625335693359375
    8. 'p' → logprob: -25.500335693359375
    9. '.poly' → logprob: -26.000335693359375
    10. 'py' → logprob: -26.250335693359375

Token 342: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -6.659005157416686e-05
    2. ':' → logprob: -9.625066757202148
    3. '[' → logprob: -15.500066757202148
    4. '[:]' → logprob: -15.875066757202148
    5. '][:' → logprob: -15.875066757202148
    6. '[:-' → logprob: -17.37506675720215
    7. '0' → logprob: -18.25006675720215
    8. '[idx' → logprob: -18.87506675720215
    9. '{:' → logprob: -19.37506675720215
    10. ' :' → logprob: -19.37506675720215

Token 343: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.128163257315464e-07
    2. ' idx' → logprob: -15.125
    3. '	idx' → logprob: -18.0
    4. '_idx' → logprob: -19.75
    5. '(idx' → logprob: -20.375
    6. 'index' → logprob: -22.0
    7. '[idx' → logprob: -22.125
    8. '   ' → logprob: -22.625
    9. '.idx' → logprob: -23.0
    10. ' ' → logprob: -23.25

Token 344: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001483564410591498
    2. ')' → logprob: -8.87514877319336
    3. ' ]' → logprob: -12.62514877319336
    4. '}' → logprob: -13.00014877319336
    5. ']
' → logprob: -13.75014877319336
    6. '<|end|>' → logprob: -14.12514877319336
    7. '])' → logprob: -15.00014877319336
    8. '']' → logprob: -15.25014877319336
    9. '(' → logprob: -15.75014877319336
    10. '   ' → logprob: -16.00014877319336

Token 345: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001222966704517603
    2. '<|end|>' → logprob: -6.751223087310791
    3. '#' → logprob: -11.001222610473633
    4. 'if' → logprob: -11.251222610473633
    5. '(' → logprob: -12.001222610473633
    6. 'import' → logprob: -12.501222610473633
    7. '  
' → logprob: -13.251222610473633
    8. '```' → logprob: -13.501222610473633
    9. ' def' → logprob: -13.876222610473633
    10. '<|end|>' → logprob: -14.001222610473633

Token 346: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7070553302764893
    2. 'main' → logprob: -0.7070553302764893
    3. 'is' → logprob: -5.20705509185791
    4. ' is' → logprob: -6.45705509185791
    5. 'compare' → logprob: -7.33205509185791
    6. ' compare' → logprob: -7.45705509185791
    7. 'merge' → logprob: -7.45705509185791
    8. 'minimal' → logprob: -7.45705509185791
    9. ' mink' → logprob: -7.83205509185791
    10. 'solve' → logprob: -7.95705509185791

Token 347: '_conv' (ID: 58653)
  Prédit: '_conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conv' → logprob: -0.45961159467697144
    2. '_point' → logprob: -1.8346116542816162
    3. '_inside' → logprob: -2.334611654281616
    4. '_polygon' → logprob: -3.834611654281616
    5. '_in' → logprob: -3.959611654281616
    6. '_' → logprob: -4.209611415863037
    7. '_cc' → logprob: -4.334611415863037
    8. '_empty' → logprob: -4.834611415863037
    9. '_clock' → logprob: -4.959611415863037
    10. '_counter' → logprob: -4.959611415863037

Token 348: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.069664333248511e-05
    2. 'exp' → logprob: -11.125020980834961
    3. 'er' → logprob: -13.000020980834961
    4. '
' → logprob: -14.125020980834961
    5. '```' → logprob: -14.125020980834961
    6. 'ext' → logprob: -14.375020980834961
    7. 'exit' → logprob: -14.750020980834961
    8. 'exe' → logprob: -15.500020980834961
    9. 'ert' → logprob: -15.625020980834961
    10. '_ex' → logprob: -16.00002098083496

Token 349: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.32271742820739746
    2. '(' → logprob: -2.3227174282073975
    3. '_polygon' → logprob: -2.5727174282073975
    4. '_poly' → logprob: -3.1977174282073975
    5. '(pol' → logprob: -3.8227174282073975
    6. '(p' → logprob: -4.197717666625977
    7. '(points' → logprob: -4.197717666625977
    8. '(point' → logprob: -6.197717666625977
    9. '_pol' → logprob: -6.447717666625977
    10. '_point' → logprob: -6.572717666625977

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009817477315664291
    2. '):
' → logprob: -4.634817600250244
    3. '):
' → logprob: -10.134817123413086
    4. ')' → logprob: -11.009817123413086
    5. '(poly' → logprob: -13.009817123413086
    6. '):

' → logprob: -14.384817123413086
    7. ',' → logprob: -14.509817123413086
    8. ' ):' → logprob: -14.634817123413086
    9. ':' → logprob: -15.134817123413086
    10. 'poly' → logprob: -15.259817123413086

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04466016963124275
    2. 'n' → logprob: -3.2946600914001465
    3. ' n' → logprob: -5.0446600914001465
    4. ' for' → logprob: -9.169660568237305
    5. 'for' → logprob: -11.169660568237305
    6. ' if' → logprob: -11.294660568237305
    7. '
' → logprob: -11.419660568237305
    8. 'if' → logprob: -11.919660568237305
    9. 'def' → logprob: -13.169660568237305
    10. '	n' → logprob: -13.544660568237305

Token 352: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5939722061157227
    2. 'n' (adapté à ' n') → logprob: -1.0939722061157227
    3. '   ' → logprob: -2.3439722061157227
    4. ' if' → logprob: -4.343972206115723
    5. 'if' → logprob: -5.968972206115723
    6. ' def' → logprob: -7.093972206115723
    7. 'def' → logprob: -7.343972206115723
    8. ' for' → logprob: -11.468972206115723
    9. '	n' → logprob: -12.343972206115723
    10. 'for' → logprob: -12.718972206115723

Token 353: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06207602098584175
    2. ' =' → logprob: -2.8120760917663574
    3. '=len' → logprob: -10.1870756149292
    4. '<' → logprob: -10.4370756149292
    5. '>=' → logprob: -10.8120756149292
    6. ' <' → logprob: -11.0620756149292
    7. '=<' → logprob: -12.9370756149292
    8. ' >=' → logprob: -13.9370756149292
    9. '==' → logprob: -14.3120756149292
    10. '   ' → logprob: -14.4370756149292

Token 354: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005234002135694027
    2. ' len' → logprob: -5.2552337646484375
    3. '(len' → logprob: -15.505233764648438
    4. '=len' → logprob: -17.630233764648438
    5. '[len' → logprob: -19.255233764648438
    6. '   ' → logprob: -19.630233764648438
    7. '	len' → logprob: -19.880233764648438
    8. ',len' → logprob: -21.005233764648438
    9. ' ' → logprob: -22.005233764648438
    10. '<len' → logprob: -22.130233764648438

Token 355: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -3.7697225252486533e-06
    2. 'poly' → logprob: -12.500003814697266
    3. '(pol' → logprob: -17.625003814697266
    4. ' poly' → logprob: -19.375003814697266
    5. '(' → logprob: -19.875003814697266
    6. '_poly' → logprob: -21.125003814697266
    7. 'Poly' → logprob: -22.000003814697266
    8. '/poly' → logprob: -22.000003814697266
    9. '(py' → logprob: -22.875003814697266
    10. '.poly' → logprob: -23.500003814697266

Token 356: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3132686913013458
    2. ')' → logprob: -1.3132686614990234
    3. ')
' → logprob: -12.813268661499023
    4. '   ' → logprob: -13.063268661499023
    5. 'def' → logprob: -13.688268661499023
    6. ')

' → logprob: -14.688268661499023
    7. ' )
' → logprob: -15.438268661499023
    8. '):
' → logprob: -16.063268661499023
    9. ' )' → logprob: -16.563268661499023
    10. 'poly' → logprob: -17.063268661499023

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008270933292806149
    2. ' for' → logprob: -4.883270740509033
    3. 'for' → logprob: -7.383270740509033
    4. ' if' → logprob: -11.133271217346191
    5. '
' → logprob: -11.258271217346191
    6. '	for' → logprob: -11.758271217346191
    7. 'if' → logprob: -13.008271217346191
    8. '    
' → logprob: -13.383271217346191
    9. 'def' → logprob: -14.133271217346191
    10. '  ' → logprob: -14.383271217346191

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5782217979431152
    2. 'for' → logprob: -0.8282217979431152
    3. ' if' → logprob: -6.953221797943115
    4. '   ' → logprob: -7.453221797943115
    5. ' for' → logprob: -8.078222274780273
    6. 'sign' → logprob: -8.203222274780273
    7. 'def' → logprob: -9.828222274780273
    8. 'z' → logprob: -10.078222274780273
    9. 'prev' → logprob: -10.703222274780273
    10. 'dire' → logprob: -10.953222274780273

Token 359: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014177292585373
    2. ' n' → logprob: -1.7014176845550537
    3. '	n' → logprob: -12.826417922973633
    4. ' ' → logprob: -14.076417922973633
    5. 'poly' → logprob: -15.201417922973633
    6. '
' → logprob: -15.326417922973633
    7. '   ' → logprob: -15.576417922973633
    8. '  ' → logprob: -16.326417922973633
    9. '(n' → logprob: -16.826417922973633
    10. ' poly' → logprob: -17.076417922973633

Token 360: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.003627865808084607
    2. ' <' → logprob: -5.628627777099609
    3. '3' → logprob: -11.37862777709961
    4. '<n' → logprob: -12.75362777709961
    5. '<num' → logprob: -13.12862777709961
    6. '<len' → logprob: -13.62862777709961
    7. '<=' → logprob: -13.75362777709961
    8. '<int' → logprob: -13.87862777709961
    9. '<
' → logprob: -14.00362777709961
    10. '<size' → logprob: -14.00362777709961

Token 361: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06202392280101776
    2. '4' → logprob: -2.812023878097534
    3. ' ' → logprob: -9.937024116516113
    4. '=' → logprob: -11.812024116516113
    5. '
' → logprob: -14.937024116516113
    6. '   ' → logprob: -17.062023162841797
    7. '_' → logprob: -17.937023162841797
    8. '>' → logprob: -18.062023162841797
    9. '

' → logprob: -18.187023162841797
    10. '  ' → logprob: -18.312023162841797

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4809940755367279
    2. ':
' → logprob: -0.9809941053390503
    3. ':return' → logprob: -4.98099422454834
    4. ' :' → logprob: -11.98099422454834
    5. ' :
' → logprob: -11.98099422454834
    6. '   ' → logprob: -12.10599422454834
    7. ' or' → logprob: -12.60599422454834
    8. ':
' → logprob: -13.35599422454834
    9. 'return' → logprob: -13.48099422454834
    10. ' ' → logprob: -14.98099422454834

Token 363: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05906582996249199
    2. 'return' → logprob: -3.309065818786621
    3. ' return' → logprob: -4.309065818786621
    4. '       ' → logprob: -4.934065818786621
    5. '
' → logprob: -9.059065818786621
    6. '	return' → logprob: -10.684065818786621
    7. 'False' → logprob: -12.059065818786621
    8. '  ' → logprob: -12.434065818786621
    9. ':return' → logprob: -12.559065818786621
    10. ' ' → logprob: -12.559065818786621

Token 364: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015070419758558273
    2. ' return' → logprob: -4.26507043838501
    3. '   ' → logprob: -7.01507043838501
    4. '
' → logprob: -12.265069961547852
    5. '	return' → logprob: -13.390069961547852
    6. 'False' → logprob: -13.515069961547852
    7. ' ' → logprob: -16.01506996154785
    8. '  ' → logprob: -16.01506996154785
    9. 'eturn' → logprob: -16.26506996154785
    10. ' 
' → logprob: -16.51506996154785

Token 365: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01815485768020153
    2. ' False' → logprob: -4.018154621124268
    3. 'True' → logprob: -12.268155097961426
    4. ' True' → logprob: -15.143155097961426
    5. '(False' → logprob: -17.51815414428711
    6. '
' → logprob: -19.76815414428711
    7. '=False' → logprob: -19.89315414428711
    8. 'F' → logprob: -20.14315414428711
    9. 'None' → logprob: -21.14315414428711
    10. '   ' → logprob: -21.76815414428711

Token 366: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028869023080915213
    2. '   ' → logprob: -6.502886772155762
    3. '    
' → logprob: -7.252886772155762
    4. '\n' → logprob: -7.877886772155762
    5. '  
' → logprob: -8.752886772155762
    6. ' 
' → logprob: -9.377886772155762
    7. '   
' → logprob: -10.877886772155762
    8. '	
' → logprob: -11.752886772155762
    9. '
' → logprob: -11.877886772155762
    10. '<|end|>' → logprob: -12.252886772155762

Token 367: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0054714977741241455
    2. '  
' → logprob: -6.255471706390381
    3. ' 
' → logprob: -6.630471706390381
    4. '   ' → logprob: -7.005471706390381
    5. '    
' → logprob: -7.130471706390381
    6. '\n' → logprob: -8.630471229553223
    7. '   
' → logprob: -8.755471229553223
    8. '	
' → logprob: -9.255471229553223
    9. '
' → logprob: -10.130471229553223
    10. '' → logprob: -12.005471229553223

Token 368: ' sign' (ID: 2232)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19274544715881348
    2. '   ' → logprob: -2.0677454471588135
    3. 'sign' (adapté à ' sign') → logprob: -3.9427454471588135
    4. 'prev' → logprob: -3.9427454471588135
    5. ' for' → logprob: -5.692745208740234
    6. 'direction' → logprob: -5.817745208740234
    7. 'dir' → logprob: -6.067745208740234
    8. 'z' → logprob: -7.442745208740234
    9. 'dire' → logprob: -8.192745208740234
    10. 'def' → logprob: -8.817745208740234

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05914650857448578
    2. ' =' → logprob: -3.0591464042663574
    3. 's' → logprob: -4.559146404266357
    4. '=None' → logprob: -10.809146881103516
    5. '=-' → logprob: -12.684146881103516
    6. '=
' → logprob: -12.934146881103516
    7. '_=' → logprob: -13.184146881103516
    8. 'def' → logprob: -14.059146881103516
    9. '=[]' → logprob: -14.934146881103516
    10. 'um' → logprob: -15.184146881103516

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006868940312415361
    2. 'None' → logprob: -5.006868839263916
    3. ' ' → logprob: -9.006869316101074
    4. ' None' → logprob: -10.381869316101074
    5. '   ' → logprob: -17.381868362426758
    6. '1' → logprob: -17.756868362426758
    7. ' ' → logprob: -18.881868362426758
    8. 'none' → logprob: -19.756868362426758
    9. 'N' → logprob: -19.881868362426758
    10. '  ' → logprob: -20.256868362426758

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008616461418569088
    2. 'None' → logprob: -4.7586164474487305
    3. ' None' → logprob: -13.63361644744873
    4. ' ' → logprob: -14.25861644744873
    5. '   ' → logprob: -18.633617401123047
    6. '1' → logprob: -18.883617401123047
    7. 'N' → logprob: -19.133617401123047
    8. 'none' → logprob: -19.383617401123047
    9. '```' → logprob: -19.383617401123047
    10. 'False' → logprob: -20.508617401123047

Token 372: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12820543348789215
    2. '   ' → logprob: -2.1282055377960205
    3. ' for' → logprob: -7.753205299377441
    4. '<|end|>' → logprob: -7.753205299377441
    5. '    
' → logprob: -8.378205299377441
    6. '  
' → logprob: -9.378205299377441
    7. 'for' → logprob: -10.253205299377441
    8. '   
' → logprob: -11.003205299377441
    9. ' 
' → logprob: -11.128205299377441
    10. ',
' → logprob: -11.753205299377441

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5789114236831665
    2. '
' → logprob: -0.8289114236831665
    3. ' for' → logprob: -6.828911304473877
    4. '    
' → logprob: -7.453911304473877
    5. '  
' → logprob: -7.578911304473877
    6. '<|end|>' → logprob: -7.828911304473877
    7. ' 
' → logprob: -8.453911781311035
    8. '   
' → logprob: -9.453911781311035
    9. '  ' → logprob: -10.703911781311035
    10. 'for' → logprob: -11.078911781311035

Token 374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01827835664153099
    2. ' for' → logprob: -4.018278121948242
    3. '   ' → logprob: -9.018278121948242
    4. 'n' → logprob: -11.893278121948242
    5. '	for' → logprob: -15.393278121948242
    6. ' n' → logprob: -16.643278121948242
    7. ' ' → logprob: -17.268278121948242
    8. 'def' → logprob: -17.393278121948242
    9. '
' → logprob: -19.143278121948242
    10. 'i' → logprob: -19.518278121948242

Token 375: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023245712742209435
    2. 'i' → logprob: -3.7732458114624023
    3. '	i' → logprob: -15.773245811462402
    4. ' ' → logprob: -16.148244857788086
    5. '  ' → logprob: -19.648244857788086
    6. '(i' → logprob: -19.898244857788086
    7. '   ' → logprob: -20.023244857788086
    8. ' ' → logprob: -20.773244857788086
    9. '_i' → logprob: -22.273244857788086
    10. '[i' → logprob: -22.273244857788086

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004622372332960367
    2. 'in' → logprob: -5.379622459411621
    3. ' ' → logprob: -13.379622459411621
    4. '	in' → logprob: -15.629622459411621
    5. '  ' → logprob: -16.129621505737305
    6. '   ' → logprob: -16.379621505737305
    7. 'n' → logprob: -16.504621505737305
    8. 'In' → logprob: -16.879621505737305
    9. ',' → logprob: -17.129621505737305
    10. 'i' → logprob: -17.754621505737305

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132616877555847
    2. ' range' → logprob: -1.3132617473602295
    3. '(range' → logprob: -18.438261032104492
    4. '	range' → logprob: -19.938261032104492
    5. ' ' → logprob: -21.063261032104492
    6. '   ' → logprob: -21.438261032104492
    7. '0' → logprob: -21.563261032104492
    8. '  ' → logprob: -22.313261032104492
    9. ' xrange' → logprob: -23.438261032104492
    10. '_range' → logprob: -23.438261032104492

Token 378: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.053623951971530914
    2. '(n' → logprob: -3.053623914718628
    3. ' n' → logprob: -5.303624153137207
    4. '(' → logprob: -9.928624153137207
    5. '1' → logprob: -14.553624153137207
    6. '	n' → logprob: -14.678624153137207
    7. ' (' → logprob: -15.303624153137207
    8. '3' → logprob: -15.428624153137207
    9. ',n' → logprob: -15.928624153137207
    10. ' ' → logprob: -17.05362319946289

Token 379: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018249334767460823
    2. '):' → logprob: -4.01824951171875
    3. '):
' → logprob: -9.89324951171875
    4. '   ' → logprob: -10.76824951171875
    5. ' ' → logprob: -11.76824951171875
    6. ')' → logprob: -12.39324951171875
    7. '+' → logprob: -12.39324951171875
    8. '3' → logprob: -12.76824951171875
    9. '):

' → logprob: -13.39324951171875
    10. ':
' → logprob: -13.39324951171875

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03747693821787834
    2. '   ' → logprob: -3.5374770164489746
    3. ' x' → logprob: -5.412477016448975
    4. ' a' → logprob: -6.037477016448975
    5. 'a' → logprob: -7.537477016448975
    6. '    ' → logprob: -8.912476539611816
    7. ',' → logprob: -9.912476539611816
    8. ' p' → logprob: -10.537476539611816
    9. 'x' → logprob: -10.537476539611816
    10. '```' → logprob: -11.037476539611816

Token 381: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07358045876026154
    2. ' a' → logprob: -2.823580503463745
    3. '   ' → logprob: -4.698580265045166
    4. 'x' → logprob: -6.573580265045166
    5. 'p' → logprob: -7.698580265045166
    6. ' x' → logprob: -8.198580741882324
    7. ' p' → logprob: -9.323580741882324
    8. 'prev' → logprob: -9.448580741882324
    9. 'o' → logprob: -10.073580741882324
    10. '	a' → logprob: -10.698580741882324

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31862664222717285
    2. ' =' → logprob: -1.3186266422271729
    3. 'urrent' → logprob: -5.568626403808594
    4. 'ur' → logprob: -6.943626403808594
    5. 'urr' → logprob: -8.943626403808594
    6. 'poly' → logprob: -9.568626403808594
    7. 'd' → logprob: -10.068626403808594
    8. '   ' → logprob: -10.318626403808594
    9. 'p' → logprob: -10.568626403808594
    10. '  ' → logprob: -10.693626403808594

Token 383: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4740804135799408
    2. ' cross' → logprob: -0.9740804433822632
    3. 'ross' → logprob: -12.974080085754395
    4. '.cross' → logprob: -14.349080085754395
    5. 'poly' → logprob: -15.849080085754395
    6. '_cross' → logprob: -15.849080085754395
    7. ' ' → logprob: -16.72408103942871
    8. 'c' → logprob: -16.84908103942871
    9. '   ' → logprob: -17.84908103942871
    10. ' poly' → logprob: -18.34908103942871

Token 384: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -9.014684110297821e-06
    2. 'poly' → logprob: -11.750008583068848
    3. '(' → logprob: -14.000008583068848
    4. '(pol' → logprob: -15.500008583068848
    5. ' poly' → logprob: -16.750009536743164
    6. '(
' → logprob: -17.625009536743164
    7. '((' → logprob: -18.625009536743164
    8. '/poly' → logprob: -19.000009536743164
    9. '(py' → logprob: -19.375009536743164
    10. '.poly' → logprob: -20.000009536743164

Token 385: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005618501454591751
    2. '[(' → logprob: -7.500561714172363
    3. '[' → logprob: -11.750561714172363
    4. '[n' → logprob: -14.875561714172363
    5. '(i' → logprob: -15.625561714172363
    6. ' [' → logprob: -16.50056266784668
    7. '[
' → logprob: -16.75056266784668
    8. 'i' → logprob: -17.00056266784668
    9. '[p' → logprob: -17.00056266784668
    10. '[-' → logprob: -17.62556266784668

Token 386: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00022213248303160071
    2. '%' → logprob: -9.250222206115723
    3. '],
' → logprob: -9.375222206115723
    4. '],[' → logprob: -11.750222206115723
    5. ' ],' → logprob: -12.000222206115723
    6. '%n' → logprob: -12.000222206115723
    7. ']' → logprob: -12.125222206115723
    8. ' %' → logprob: -12.500222206115723
    9. '-' → logprob: -12.625222206115723
    10. '[(' → logprob: -13.125222206115723

Token 387: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.12693440914154053
    2. ' poly' → logprob: -2.12693452835083
    3. '(poly' → logprob: -12.126934051513672
    4. 'pol' → logprob: -14.751934051513672
    5. ' ' → logprob: -15.251934051513672
    6. 'py' → logprob: -15.501934051513672
    7. '   ' → logprob: -17.251934051513672
    8. '
' → logprob: -17.626934051513672
    9. '.poly' → logprob: -17.876934051513672
    10. '/poly' → logprob: -18.126934051513672

Token 388: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002534640720114112
    2. '[(' → logprob: -6.002534866333008
    3. '[i' → logprob: -9.877534866333008
    4. '(n' → logprob: -12.877534866333008
    5. ' (' → logprob: -13.002534866333008
    6. '(' → logprob: -14.377534866333008
    7. '(index' → logprob: -14.627534866333008
    8. '(next' → logprob: -15.002534866333008
    9. '(ii' → logprob: -15.002534866333008
    10. '(mod' → logprob: -15.627534866333008

Token 389: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.676292231422849e-05
    2. ' (' → logprob: -11.625017166137695
    3. 'i' → logprob: -11.875017166137695
    4. '   ' → logprob: -14.750017166137695
    5. '[i' → logprob: -16.250017166137695
    6. '{i' → logprob: -16.250017166137695
    7. '(' → logprob: -16.625017166137695
    8. '(I' → logprob: -17.500017166137695
    9. '(
' → logprob: -18.000017166137695
    10. '
' → logprob: -18.000017166137695

Token 390: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.016666237264871597
    2. '+' → logprob: -4.266666412353516
    3. 'i' → logprob: -6.516666412353516
    4. '1' → logprob: -7.891666412353516
    5. ' (' → logprob: -8.016666412353516
    6. '[i' → logprob: -9.141666412353516
    7. '(' → logprob: -9.391666412353516
    8. '   ' → logprob: -9.891666412353516
    9. ' +' → logprob: -10.641666412353516
    10. '{i' → logprob: -10.641666412353516

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. '(' → logprob: -17.8750057220459
    5. 'i' → logprob: -17.8750057220459
    6. '{' → logprob: -18.1250057220459
    7. '2' → logprob: -18.1250057220459
    8. '
' → logprob: -18.4375057220459
    9. '```' → logprob: -18.8125057220459
    10. '  ' → logprob: -19.0000057220459

Token 392: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.20998278260231018
    2. '%i' → logprob: -2.2099828720092773
    3. ')' → logprob: -3.3349828720092773
    4. ')i' → logprob: -3.8349828720092773
    5. '%n' → logprob: -4.834982872009277
    6. ']%' → logprob: -5.209982872009277
    7. ')],' → logprob: -6.084982872009277
    8. '%' → logprob: -6.334982872009277
    9. 'i' → logprob: -6.834982872009277
    10. '1' → logprob: -7.084982872009277

Token 393: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.961759259458631e-06
    2. ' n' → logprob: -12.250004768371582
    3. 'poly' → logprob: -17.6250057220459
    4. '%n' → logprob: -18.3750057220459
    5. '   ' → logprob: -18.5000057220459
    6. '``' → logprob: -19.5000057220459
    7. '```' → logprob: -19.5000057220459
    8. '	n' → logprob: -20.5000057220459
    9. '{' → logprob: -20.7500057220459
    10. '(n' → logprob: -21.2500057220459

Token 394: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -9.253090865968261e-06
    2. ' ],' → logprob: -11.875009536743164
    3. ']' → logprob: -13.875009536743164
    4. '),' → logprob: -14.750009536743164
    5. '],
' → logprob: -15.500009536743164
    6. '%' → logprob: -15.625009536743164
    7. '()],' → logprob: -15.875009536743164
    8. 'n' → logprob: -16.375009536743164
    9. '   ' → logprob: -16.875009536743164
    10. ' ' → logprob: -17.250009536743164

Token 395: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.03807695209980011
    2. ' poly' → logprob: -3.288076877593994
    3. '(poly' → logprob: -10.288077354431152
    4. 'pol' → logprob: -14.413077354431152
    5. ' ' → logprob: -14.663077354431152
    6. '   ' → logprob: -15.038077354431152
    7. '  ' → logprob: -17.038076400756836
    8. ' (' → logprob: -17.288076400756836
    9. 'py' → logprob: -17.288076400756836
    10. '    ' → logprob: -17.413076400756836

Token 396: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0206720617134124e-05
    2. '((' → logprob: -11.75001049041748
    3. '[i' → logprob: -13.00001049041748
    4. '   ' → logprob: -17.250009536743164
    5. '(i' → logprob: -18.125009536743164
    6. '[((' → logprob: -18.125009536743164
    7. '([(' → logprob: -19.375009536743164
    8. '[' → logprob: -19.500009536743164
    9. '[
' → logprob: -19.625009536743164
    10. ' ' → logprob: -20.250009536743164

Token 397: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002256475854665041
    2. 'i' → logprob: -6.127256393432617
    3. ' (' → logprob: -9.752256393432617
    4. '   ' → logprob: -12.252256393432617
    5. '[i' → logprob: -12.502256393432617
    6. '{i' → logprob: -13.252256393432617
    7. '     ' → logprob: -13.877256393432617
    8. '           ' → logprob: -14.377256393432617
    9. '       ' → logprob: -14.627256393432617
    10. ' ' → logprob: -15.502256393432617

Token 398: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16026830673217773
    2. '+' → logprob: -1.9102683067321777
    3. '
' → logprob: -10.535268783569336
    4. '   ' → logprob: -11.785268783569336
    5. ' ' → logprob: -12.535268783569336
    6. '-' → logprob: -13.285268783569336
    7. '```' → logprob: -13.910268783569336
    8. '(' → logprob: -14.410268783569336
    9. '

' → logprob: -14.410268783569336
    10. '  ' → logprob: -14.410268783569336

Token 399: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '
' → logprob: -19.125
    4. '(' → logprob: -19.5
    5. '1' → logprob: -19.75
    6. 'i' → logprob: -20.125
    7. '   ' → logprob: -20.375
    8. '-' → logprob: -21.375
    9. '

' → logprob: -21.5
    10. '２' → logprob: -21.625

Token 400: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0240128543227911
    2. '%i' → logprob: -4.399013042449951
    3. '%n' → logprob: -5.149013042449951
    4. ']%' → logprob: -5.649013042449951
    5. ')i' → logprob: -6.774013042449951
    6. ')' → logprob: -7.649013042449951
    7. '(i' → logprob: -8.649012565612793
    8. '%d' → logprob: -9.024012565612793
    9. '   ' → logprob: -10.149012565612793
    10. 'i' → logprob: -10.524012565612793

Token 401: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -16.0
    3. ')n' → logprob: -17.125
    4. '``' → logprob: -17.75
    5. '```' → logprob: -17.75
    6. '(n' → logprob: -17.75
    7. '%n' → logprob: -18.25
    8. 'i' → logprob: -18.625
    9. '	n' → logprob: -18.75
    10. ')' → logprob: -19.0

Token 402: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00321205728687346
    2. '])
' → logprob: -5.753211975097656
    3. ')' → logprob: -10.753211975097656
    4. ']' → logprob: -11.878211975097656
    5. ' ])' → logprob: -12.753211975097656
    6. '])
' → logprob: -14.128211975097656
    7. ')
' → logprob: -14.878211975097656
    8. '])

' → logprob: -15.253211975097656
    9. ' ' → logprob: -15.253211975097656
    10. ')]' → logprob: -15.628211975097656

Token 403: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2359006404876709
    2. '<|end|>' → logprob: -1.860900640487671
    3. '       ' → logprob: -4.23590087890625
    4. '
' → logprob: -4.23590087890625
    5. '  ' → logprob: -4.98590087890625
    6. '  
' → logprob: -5.23590087890625
    7. ' ' → logprob: -5.86090087890625
    8. '<|end|>' → logprob: -6.36090087890625
    9. ' 
' → logprob: -6.61090087890625
    10. '   
' → logprob: -6.73590087890625

Token 404: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15784044563770294
    2. 'if' (adapté à ' if') → logprob: -2.1578404903411865
    3. '       ' → logprob: -3.6578404903411865
    4. '   ' → logprob: -5.407840251922607
    5. '
' → logprob: -9.532840728759766
    6. ' ' → logprob: -9.907840728759766
    7. '  ' → logprob: -11.032840728759766
    8. '    ' → logprob: -11.782840728759766
    9. '	if' → logprob: -11.782840728759766
    10. '           ' → logprob: -11.782840728759766

Token 405: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023247340694069862
    2. ' c' → logprob: -3.773247241973877
    3. '	c' → logprob: -14.023247718811035
    4. ' ' → logprob: -14.273247718811035
    5. '   ' → logprob: -15.523247718811035
    6. '  ' → logprob: -16.14824676513672
    7. 'sign' → logprob: -16.39824676513672
    8. '(c' → logprob: -16.64824676513672
    9. '
' → logprob: -17.27324676513672
    10. ')c' → logprob: -17.89824676513672

Token 406: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05187271535396576
    2. ' !=' → logprob: -3.801872730255127
    3. '>' → logprob: -3.926872730255127
    4. '==' → logprob: -5.801872730255127
    5. '<' → logprob: -5.926872730255127
    6. ')!=' → logprob: -6.926872730255127
    7. '<>' → logprob: -7.301872730255127
    8. '0' → logprob: -8.301872253417969
    9. ':' → logprob: -8.426872253417969
    10. '<|end|>' → logprob: -8.801872253417969

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -20.625179290771484
    4. '  ' → logprob: -21.000179290771484
    5. '<|end|>' → logprob: -21.500179290771484
    6. ')' → logprob: -22.125179290771484
    7. '   ' → logprob: -22.125179290771484
    8. '０' → logprob: -22.250179290771484
    9. '```' → logprob: -22.500179290771484
    10. '=' → logprob: -22.625179290771484

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19862526655197144
    2. ':
' → logprob: -2.448625326156616
    3. ' continue' → logprob: -2.948625326156616
    4. '           ' → logprob: -3.448625326156616
    5. ' continues' → logprob: -5.573625087738037
    6. 'continue' → logprob: -6.323625087738037
    7. '       ' → logprob: -6.448625087738037
    8. '	continue' → logprob: -6.448625087738037
    9. ':return' → logprob: -8.448625564575195
    10. ',' → logprob: -8.573625564575195

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13954506814479828
    2. ' continue' → logprob: -2.26454496383667
    3. 'continue' → logprob: -3.76454496383667
    4. '       ' → logprob: -5.88954496383667
    5. '   ' → logprob: -9.014545440673828
    6. '               ' → logprob: -9.514545440673828
    7. '
' → logprob: -9.764545440673828
    8. '	continue' → logprob: -10.014545440673828
    9. ',' → logprob: -10.264545440673828
    10. ' continues' → logprob: -10.514545440673828

Token 410: ' return' (ID: 622)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.03838570788502693
    2. 'continue' → logprob: -3.2883856296539307
    3. '           ' → logprob: -8.038385391235352
    4. '	continue' → logprob: -11.538385391235352
    5. ' return' → logprob: -13.163385391235352
    6. 'contin' → logprob: -13.288385391235352
    7. '       ' → logprob: -13.538385391235352
    8. '
' → logprob: -13.913385391235352
    9. 'continu' → logprob: -13.913385391235352
    10. '               ' → logprob: -14.038385391235352

Token 411: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004419935867190361
    2. ' False' → logprob: -7.750442028045654
    3. 'True' → logprob: -11.875441551208496
    4. 'None' → logprob: -12.375441551208496
    5. 'false' → logprob: -16.250442504882812
    6. '0' → logprob: -17.250442504882812
    7. '(False' → logprob: -19.000442504882812
    8. ' ' → logprob: -19.250442504882812
    9. ' True' → logprob: -19.625442504882812
    10. 'continue' → logprob: -19.875442504882812

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004500023555010557
    2. '<|end|>' → logprob: -5.879499912261963
    3. '   ' → logprob: -7.129499912261963
    4. '
' → logprob: -7.254499912261963
    5. '	' → logprob: -9.879500389099121
    6. ',' → logprob: -10.379500389099121
    7. '<|end|>' → logprob: -11.379500389099121
    8. '        
' → logprob: -11.379500389099121
    9. ' ' → logprob: -11.504500389099121
    10. '  
' → logprob: -11.629500389099121

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5762821435928345
    2. '       ' → logprob: -0.9512821435928345
    3. '<|end|>' → logprob: -3.076282024383545
    4. '    
' → logprob: -6.326282024383545
    5. '  
' → logprob: -7.326282024383545
    6. '  ' → logprob: -7.326282024383545
    7. ' ' → logprob: -7.951282024383545
    8. ' 
' → logprob: -7.951282024383545
    9. '```' → logprob: -8.076282501220703
    10. '
' → logprob: -8.201282501220703

Token 414: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14870017766952515
    2. 'if' (adapté à ' if') → logprob: -2.02370023727417
    3. '   ' → logprob: -5.39870023727417
    4. '       ' → logprob: -7.14870023727417
    5. 'elif' → logprob: -8.523699760437012
    6. ' elif' → logprob: -8.648699760437012
    7. ' current' → logprob: -9.773699760437012
    8. ' next' → logprob: -9.898699760437012
    9. 'current' → logprob: -10.148699760437012
    10. 't' → logprob: -10.523699760437012

Token 415: ' sign' (ID: 2232)
  Prédit: ' sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sign' → logprob: -0.4742853343486786
    2. 'sign' → logprob: -0.974285364151001
    3. ' c' → logprob: -8.599285125732422
    4. '(sign' → logprob: -11.349285125732422
    5. 'c' → logprob: -11.724285125732422
    6. '	sign' → logprob: -12.599285125732422
    7. ' ' → logprob: -14.974285125732422
    8. '.sign' → logprob: -15.849285125732422
    9. '  ' → logprob: -16.224285125732422
    10. ' s' → logprob: -16.474285125732422

Token 416: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028601549565792084
    2. ' ==' → logprob: -5.877860069274902
    3. '=' → logprob: -9.877860069274902
    4. '0' → logprob: -12.877860069274902
    5. ')==' → logprob: -14.252860069274902
    6. '===' → logprob: -15.377860069274902
    7. '==
' → logprob: -15.627860069274902
    8. ']==' → logprob: -15.752860069274902
    9. '==-' → logprob: -15.877860069274902
    10. '<' → logprob: -16.75286102294922

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.750045776367188
    4. '  ' → logprob: -18.875045776367188
    5. '۰' → logprob: -19.375045776367188
    6. '    ' → logprob: -20.687545776367188
    7. '	' → logprob: -21.125045776367188
    8. '

' → logprob: -21.375045776367188
    9. '     ' → logprob: -21.375045776367188
    10. '
' → logprob: -21.437545776367188

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18004168570041656
    2. '=' → logprob: -2.305041790008545
    3. ':
' → logprob: -2.805041790008545
    4. '           ' → logprob: -5.930041790008545
    5. ' =' → logprob: -7.305041790008545
    6. '       ' → logprob: -7.555041790008545
    7. '   ' → logprob: -8.805041313171387
    8. '<|end|>' → logprob: -9.180041313171387
    9. ',' → logprob: -9.305041313171387
    10. 'and' → logprob: -10.305041313171387

Token 419: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' (adapté à ' sign') → logprob: -0.0009265877306461334
    2. ' sign' → logprob: -7.000926494598389
    3. '           ' → logprob: -11.500926971435547
    4. '               ' → logprob: -12.750926971435547
    5. '(sign' → logprob: -13.500926971435547
    6. '	sign' → logprob: -14.375926971435547
    7. '.sign' → logprob: -15.750926971435547
    8. '_sign' → logprob: -17.125926971435547
    9. ' signo' → logprob: -18.625926971435547
    10. '                   ' → logprob: -18.875926971435547

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38716620206832886
    2. ' =' → logprob: -1.1371662616729736
    3. '=c' → logprob: -8.137166023254395
    4. '=int' → logprob: -13.512166023254395
    5. '=i' → logprob: -15.887166023254395
    6. '=com' → logprob: -16.01216697692871
    7. '<' → logprob: -16.26216697692871
    8. '=v' → logprob: -16.38716697692871
    9. '=cut' → logprob: -16.38716697692871
    10. '=s' → logprob: -16.51216697692871

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016946998657658696
    2. 'c' → logprob: -6.626694679260254
    3. '(' → logprob: -8.376694679260254
    4. ' ' → logprob: -9.001694679260254
    5. '(c' → logprob: -11.376694679260254
    6. ' c' → logprob: -13.376694679260254
    7. ' (' → logprob: -13.501694679260254
    8. '-' → logprob: -15.376694679260254
    9. 'int' → logprob: -15.376694679260254
    10. '
' → logprob: -16.25169563293457

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037877275608479977
    2. 'c' → logprob: -5.753787517547607
    3. '(' → logprob: -7.503787517547607
    4. '(c' → logprob: -10.253787994384766
    5. ' ' → logprob: -10.753787994384766
    6. ' (' → logprob: -14.503787994384766
    7. 'int' → logprob: -14.503787994384766
    8. ' c' → logprob: -14.753787994384766
    9. '-' → logprob: -15.253787994384766
    10. '+' → logprob: -16.253787994384766

Token 424: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.005297077354043722
    2. 'if' → logprob: -5.2552971839904785
    3. '
' → logprob: -10.88029670715332
    4. 'elif' → logprob: -11.13029670715332
    5. ' elif' → logprob: -11.25529670715332
    6. '<|end|>' → logprob: -11.25529670715332
    7. '       ' → logprob: -13.75529670715332
    8. '	if' → logprob: -13.88029670715332
    9. '<|end|>' → logprob: -14.13029670715332
    10. '*' → logprob: -14.50529670715332

Token 425: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005233763717114925
    2. ' c' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.505233764648438
    4. '	c' → logprob: -19.755233764648438
    5. '(c' → logprob: -20.380233764648438
    6. ')c' → logprob: -20.380233764648438
    7. '<c' → logprob: -22.005233764648438
    8. '
' → logprob: -22.130233764648438
    9. 'cross' → logprob: -22.130233764648438
    10. '```' → logprob: -22.505233764648438

Token 426: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0001398929744027555
    2. ' >' → logprob: -8.875140190124512
    3. ' ' → logprob: -17.500139236450195
    4. '()>' → logprob: -17.500139236450195
    5. '>

' → logprob: -18.625139236450195
    6. '>
' → logprob: -18.625139236450195
    7. '＞' → logprob: -18.750139236450195
    8. '>`' → logprob: -19.000139236450195
    9. '&gt' → logprob: -19.250139236450195
    10. '">' → logprob: -19.625139236450195

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '
' → logprob: -17.625431060791016
    4. ' ' → logprob: -18.500431060791016
    5. '   ' → logprob: -18.500431060791016
    6. '>' → logprob: -19.000431060791016
    7. '```' → logprob: -19.000431060791016
    8. '1' → logprob: -19.125431060791016
    9. '<|end|>' → logprob: -19.125431060791016
    10. '  ' → logprob: -19.312931060791016

Token 428: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0009125363430939615
    2. 'else' → logprob: -7.000912666320801
    3. ' ' → logprob: -14.2509126663208
    4. '	else' → logprob: -15.1259126663208
    5. ' elif' → logprob: -15.7509126663208
    6. '<|end|>' → logprob: -16.375911712646484
    7. 'elif' → logprob: -18.500911712646484
    8. '_else' → logprob: -19.875911712646484
    9. ' ' → logprob: -20.125911712646484
    10. '
' → logprob: -20.625911712646484

Token 429: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '−' → logprob: -20.62509536743164
    4. ' ' → logprob: -21.12509536743164
    5. '   ' → logprob: -22.37509536743164
    6. '  ' → logprob: -23.25009536743164
    7. '```' → logprob: -23.62509536743164
    8. '0' → logprob: -23.75009536743164
    9. '–' → logprob: -24.12509536743164
    10. '(-' → logprob: -24.37509536743164

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '0' → logprob: -18.000001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. '-' → logprob: -20.000001907348633
    6. '```' → logprob: -20.250001907348633
    7. ' -' → logprob: -22.062501907348633
    8. '۱' → logprob: -22.187501907348633
    9. '１' → logprob: -22.187501907348633
    10. '<|end|>' → logprob: -22.250001907348633

Token 431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35640472173690796
    2. '<|end|>' → logprob: -1.2314047813415527
    3. '<|end|>' → logprob: -6.106404781341553
    4. '   ' → logprob: -6.731404781341553
    5. ' else' → logprob: -6.856404781341553
    6. 'elif' → logprob: -6.856404781341553
    7. '
' → logprob: -6.856404781341553
    8. 'else' → logprob: -7.481404781341553
    9. ' elif' → logprob: -8.356404304504395
    10. '```' → logprob: -8.356404304504395

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012644085101783276
    2. '<|end|>' → logprob: -5.012644290924072
    3. 'elif' → logprob: -5.887644290924072
    4. ' elif' → logprob: -6.512644290924072
    5. '   ' → logprob: -7.262644290924072
    6. ' else' → logprob: -7.887644290924072
    7. '```' → logprob: -8.512643814086914
    8. 'else' → logprob: -8.637643814086914
    9. '<|end|>' → logprob: -9.637643814086914
    10. '	elif' → logprob: -9.637643814086914

Token 433: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13213329017162323
    2. 'elif' → logprob: -2.8821332454681396
    3. ' elif' → logprob: -3.0071332454681396
    4. ' else' → logprob: -4.382133483886719
    5. 'else' (adapté à ' else') → logprob: -5.632133483886719
    6. '<|end|>' → logprob: -6.632133483886719
    7. '   ' → logprob: -7.507133483886719
    8. '	elif' → logprob: -8.257133483886719
    9. '```' → logprob: -10.257133483886719
    10. '<|end|>' → logprob: -10.507133483886719

Token 434: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007573142647743225
    2. 'if' → logprob: -5.632573127746582
    3. '           ' → logprob: -6.132573127746582
    4. '       ' → logprob: -6.882573127746582
    5. ':' → logprob: -7.757573127746582
    6. '<|end|>' → logprob: -9.007573127746582
    7. '   ' → logprob: -9.757573127746582
    8. ':
' → logprob: -9.882573127746582
    9. '        ' → logprob: -10.382573127746582
    10. 'If' → logprob: -11.257573127746582

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.541691243648529
    2. ' if' → logprob: -1.0416913032531738
    3. 'if' → logprob: -2.791691303253174
    4. '       ' → logprob: -6.166691303253174
    5. '
' → logprob: -7.791691303253174
    6. '<|end|>' → logprob: -7.916691303253174
    7. '   ' → logprob: -8.041690826416016
    8. ' ' → logprob: -8.666690826416016
    9. '	       ' → logprob: -8.916690826416016
    10. '               ' → logprob: -9.041690826416016

Token 436: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7405848503112793
    2. ' if' → logprob: -0.7405848503112793
    3. '           ' → logprob: -3.1155848503112793
    4. '               ' → logprob: -6.365584850311279
    5. '
' → logprob: -8.990585327148438
    6. 'If' → logprob: -10.365585327148438
    7. '   ' → logprob: -10.615585327148438
    8. 'return' → logprob: -10.615585327148438
    9. ' return' → logprob: -11.115585327148438
    10. ' ' → logprob: -11.365585327148438

Token 437: ' (' (ID: 350)
  Prédit: '(sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sign' → logprob: -0.41974812746047974
    2. '(c' → logprob: -1.919748067855835
    3. 'sign' → logprob: -2.169748067855835
    4. 'c' → logprob: -3.544748067855835
    5. ' (' → logprob: -3.544748067855835
    6. '(' → logprob: -4.294748306274414
    7. ' c' → logprob: -4.794748306274414
    8. ' sign' → logprob: -6.169748306274414
    9. ' ' → logprob: -9.669748306274414
    10. '(s' → logprob: -10.044748306274414

Token 438: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.167636439204216
    2. 'sign' → logprob: -1.9176363945007324
    3. ' c' → logprob: -5.167636394500732
    4. '(sign' → logprob: -6.667636394500732
    5. '(c' → logprob: -8.16763687133789
    6. ' sign' → logprob: -9.29263687133789
    7. ' (' → logprob: -11.54263687133789
    8. ' ' → logprob: -11.66763687133789
    9. '(' → logprob: -11.91763687133789
    10. '   ' → logprob: -12.16763687133789

Token 439: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7536338567733765
    2. '>' → logprob: -0.8786338567733765
    3. ' *' → logprob: -2.378633975982666
    4. '*' → logprob: -3.878633975982666
    5. ' ' → logprob: -8.253633499145508
    6. '<' → logprob: -8.753633499145508
    7. ')*' → logprob: -9.753633499145508
    8. '>*' → logprob: -9.753633499145508
    9. ' <' → logprob: -10.503633499145508
    10. ')' → logprob: -10.503633499145508

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.375085830688477
    4. '  ' → logprob: -18.687585830688477
    5. ')' → logprob: -19.000085830688477
    6. 'import' → logprob: -19.375085830688477
    7. '۰' → logprob: -19.437585830688477
    8. '```' → logprob: -20.062585830688477
    9. '<|end|>' → logprob: -20.125085830688477
    10. 'sign' → logprob: -20.250085830688477

Token 441: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013544879853725433
    2. ' and' → logprob: -5.138545036315918
    3. ')!=' → logprob: -5.138545036315918
    4. 'and' → logprob: -6.888545036315918
    5. ' )' → logprob: -7.388545036315918
    6. ')!' → logprob: -9.513545036315918
    7. ')^' → logprob: -12.638545036315918
    8. '!=' → logprob: -12.888545036315918
    9. ')==' → logprob: -13.513545036315918
    10. ' !=' → logprob: -14.638545036315918

Token 442: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.00015860427811276168
    2. ' sign' → logprob: -8.750158309936523
    3. '(sign' → logprob: -16.875158309936523
    4. '	sign' → logprob: -18.375158309936523
    5. '
' → logprob: -19.625158309936523
    6. ' ' → logprob: -20.250158309936523
    7. 'sig' → logprob: -20.500158309936523
    8. '   ' → logprob: -21.500158309936523
    9. '  ' → logprob: -21.500158309936523
    10. '.sign' → logprob: -21.625158309936523

Token 443: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0004967942950315773
    2. ' <' → logprob: -8.000496864318848
    3. '==-' → logprob: -8.750496864318848
    4. '==' → logprob: -13.000496864318848
    5. '!=' → logprob: -15.000496864318848
    6. ' ==' → logprob: -15.625496864318848
    7. ')<' → logprob: -16.37549591064453
    8. ')' → logprob: -18.00049591064453
    9. '()<' → logprob: -18.50049591064453
    10. '＜' → logprob: -18.50049591064453

Token 444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '=' → logprob: -15.50000286102295
    4. '   ' → logprob: -19.375003814697266
    5. '```' → logprob: -19.375003814697266
    6. '1' → logprob: -19.500003814697266
    7. '۰' → logprob: -19.750003814697266
    8. '
' → logprob: -20.375003814697266
    9. '  ' → logprob: -20.937503814697266
    10. '(' → logprob: -21.312503814697266

Token 445: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ' )' → logprob: -11.375015258789062
    3. '           ' → logprob: -12.625015258789062
    4. '               ' → logprob: -15.625015258789062
    5. '):' → logprob: -17.625015258789062
    6. '            ' → logprob: -17.750015258789062
    7. ' or' → logprob: -17.750015258789062
    8. '       ' → logprob: -18.125015258789062
    9. '          ' → logprob: -18.500015258789062
    10. ')\
' → logprob: -18.625015258789062

Token 446: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31910786032676697
    2. '               ' → logprob: -1.3191078901290894
    3. 'or' → logprob: -5.944108009338379
    4. '           ' → logprob: -6.194108009338379
    5. ':' → logprob: -7.069108009338379
    6. '              ' → logprob: -9.194108009338379
    7. ':return' → logprob: -9.694108009338379
    8. '            ' → logprob: -9.819108009338379
    9. ':
' → logprob: -10.819108009338379
    10. ' return' → logprob: -11.069108009338379

Token 447: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06197340786457062
    2. ' (' → logprob: -2.8119733333587646
    3. '(' → logprob: -12.936973571777344
    4. '  ' → logprob: -13.186973571777344
    5. '   ' → logprob: -14.561973571777344
    6. '           ' → logprob: -15.061973571777344
    7. ' ' → logprob: -15.061973571777344
    8. '       ' → logprob: -15.936973571777344
    9. '          ' → logprob: -15.936973571777344
    10. '    ' → logprob: -16.936973571777344

Token 448: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018152866512537003
    2. ' c' → logprob: -4.018152713775635
    3. '(c' → logprob: -12.768153190612793
    4. ')c' → logprob: -16.893152236938477
    5. '	c' → logprob: -17.768152236938477
    6. ' (' → logprob: -17.768152236938477
    7. '   ' → logprob: -19.393152236938477
    8. ' ' → logprob: -19.393152236938477
    9. '
' → logprob: -20.143152236938477
    10. '_c' → logprob: -20.518152236938477

Token 449: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -3.0948158382670954e-05
    2. '0' → logprob: -11.250030517578125
    3. ' <' → logprob: -11.500030517578125
    4. '[' → logprob: -12.125030517578125
    5. 'c' → logprob: -13.750030517578125
    6. ')<' → logprob: -14.375030517578125
    7. '>' → logprob: -15.125030517578125
    8. ' ' → logprob: -16.250030517578125
    9. '<=' → logprob: -16.500030517578125
    10. '```' → logprob: -17.000030517578125

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -17.000001907348633
    4. '=' → logprob: -17.250001907348633
    5. '>' → logprob: -18.750001907348633
    6. '```' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.250001907348633
    8. ')' → logprob: -19.625001907348633
    9. '

' → logprob: -19.875001907348633
    10. '  ' → logprob: -21.375001907348633

Token 451: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10026728361845016
    2. 'and' → logprob: -2.350267171859741
    3. '):' → logprob: -10.22526741027832
    4. ')' → logprob: -10.85026741027832
    5. ' ):' → logprob: -12.97526741027832
    6. ' ' → logprob: -14.10026741027832
    7. '):
' → logprob: -14.85026741027832
    8. '	and' → logprob: -14.97526741027832
    9. 'sign' → logprob: -15.10026741027832
    10. ' )' → logprob: -15.35026741027832

Token 452: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.023245712742209435
    2. ' sign' → logprob: -3.7732458114624023
    3. '(sign' → logprob: -15.648245811462402
    4. '	sign' → logprob: -16.773244857788086
    5. ' ' → logprob: -18.023244857788086
    6. '
' → logprob: -18.648244857788086
    7. '   ' → logprob: -19.273244857788086
    8. 'sig' → logprob: -19.773244857788086
    9. '.sign' → logprob: -20.023244857788086
    10. '_sign' → logprob: -20.648244857788086

Token 453: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -2.6895233531831764e-05
    2. ')>' → logprob: -11.25002670288086
    3. ' >' → logprob: -11.25002670288086
    4. ')' → logprob: -15.00002670288086
    5. '()>' → logprob: -15.87502670288086
    6. '0' → logprob: -16.12502670288086
    7. '1' → logprob: -16.25002670288086
    8. ']>' → logprob: -16.87502670288086
    9. '```' → logprob: -17.00002670288086
    10. '>
' → logprob: -17.37502670288086

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. ')' → logprob: -15.875000953674316
    4. '۰' → logprob: -17.875001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. '=' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '):
' → logprob: -19.375001907348633
    9. '  ' → logprob: -19.687501907348633
    10. '```' → logprob: -19.875001907348633

Token 455: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06852807104587555
    2. ':
' → logprob: -2.818528175354004
    3. '           ' → logprob: -5.943528175354004
    4. '       ' → logprob: -6.443528175354004
    5. ':' → logprob: -6.693528175354004
    6. '):' → logprob: -7.443528175354004
    7. ' ):
' → logprob: -8.443528175354004
    8. ' :
' → logprob: -9.193528175354004
    9. '               ' → logprob: -9.443528175354004
    10. ':return' → logprob: -10.318528175354004

Token 456: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14062011241912842
    2. '               ' → logprob: -2.140620231628418
    3. ' return' → logprob: -4.890620231628418
    4. 'return' → logprob: -5.390620231628418
    5. '       ' → logprob: -6.640620231628418
    6. '   ' → logprob: -8.890620231628418
    7. '	return' → logprob: -11.140620231628418
    8. '
' → logprob: -11.515620231628418
    9. '	       ' → logprob: -11.765620231628418
    10. '          ' → logprob: -12.015620231628418

Token 457: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07962025701999664
    2. 'return' (adapté à ' return') → logprob: -2.579620361328125
    3. '               ' → logprob: -7.954620361328125
    4. '           ' → logprob: -8.954620361328125
    5. '   ' → logprob: -9.329620361328125
    6. '                   ' → logprob: -9.579620361328125
    7. '       ' → logprob: -9.704620361328125
    8. '
' → logprob: -10.954620361328125
    9. '	return' → logprob: -11.454620361328125
    10. ' ' → logprob: -13.829620361328125

Token 458: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. 'True' → logprob: -20.375045776367188
    4. '(False' → logprob: -21.625045776367188
    5. 'false' → logprob: -23.875045776367188
    6. '=False' → logprob: -24.125045776367188
    7. 'F' → logprob: -24.625045776367188
    8. '
' → logprob: -25.125045776367188
    9. '_false' → logprob: -25.375045776367188
    10. '   ' → logprob: -25.750045776367188

Token 459: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024512779782526195
    2. '
' → logprob: -8.500245094299316
    3. 'return' → logprob: -10.500245094299316
    4. ' return' → logprob: -12.125245094299316
    5. '    
' → logprob: -12.500245094299316
    6. '       ' → logprob: -13.000245094299316
    7. '	return' → logprob: -13.625245094299316
    8. 'continue' → logprob: -14.375245094299316
    9. '<|end|>' → logprob: -15.250245094299316
    10. '           ' → logprob: -16.125246047973633

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.7385154428193346e-05
    2. '       ' → logprob: -11.25003719329834
    3. 'return' → logprob: -12.00003719329834
    4. '	return' → logprob: -12.12503719329834
    5. ' return' → logprob: -12.62503719329834
    6. '    
' → logprob: -13.00003719329834
    7. '
' → logprob: -13.25003719329834
    8. '<|end|>' → logprob: -13.50003719329834
    9. 'continue' → logprob: -13.75003719329834
    10. '```' → logprob: -14.00003719329834

Token 461: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030261928215622902
    2. ' return' → logprob: -3.780261993408203
    3. '   ' → logprob: -5.030261993408203
    4. '
' → logprob: -7.905261993408203
    5. '	return' → logprob: -9.530261993408203
    6. ':return' → logprob: -12.280261993408203
    7. ' ' → logprob: -12.530261993408203
    8. 'eturn' → logprob: -13.905261993408203
    9. '```' → logprob: -14.030261993408203
    10. '    
' → logprob: -14.405261993408203

Token 462: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004307884373702109
    2. ' True' → logprob: -7.750430583953857
    3. 'sign' → logprob: -16.000431060791016
    4. '(True' → logprob: -21.375431060791016
    5. 'true' → logprob: -22.375431060791016
    6. 'Tr' → logprob: -22.625431060791016
    7. '1' → logprob: -23.500431060791016
    8. '   ' → logprob: -23.625431060791016
    9. '=True' → logprob: -24.000431060791016
    10. 'False' → logprob: -24.375431060791016

Token 463: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1311214119195938
    2. '<|end|>' → logprob: -2.1311213970184326
    3. '<|end|>' → logprob: -6.256121635437012
    4. '
' → logprob: -6.881121635437012
    5. '#' → logprob: -8.131121635437012
    6. 'n' → logprob: -8.256121635437012
    7. 'for' → logprob: -8.381121635437012
    8. 'import' → logprob: -9.006121635437012
    9. '```' → logprob: -9.256121635437012
    10. '\' → logprob: -9.506121635437012

Token 465: ' area' (ID: 3624)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.26077309250831604
    2. 'main' → logprob: -3.010773181915283
    3. ' is' → logprob: -3.135773181915283
    4. ' mink' → logprob: -3.510773181915283
    5. ' convex' → logprob: -3.760773181915283
    6. ' monot' → logprob: -4.510773181915283
    7. 'is' → logprob: -4.510773181915283
    8. ' polygon' → logprob: -4.885773181915283
    9. ' point' → logprob: -5.385773181915283
    10. ' minimal' → logprob: -5.635773181915283

Token 466: '_poly' (ID: 99075)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.9185006022453308
    2. '(poly' → logprob: -1.2935006618499756
    3. '_diff' → logprob: -2.4185006618499756
    4. '(' → logprob: -3.0435006618499756
    5. '_equals' → logprob: -3.5435006618499756
    6. '_compare' → logprob: -3.5435006618499756
    7. '_of' → logprob: -3.9185006618499756
    8. '(p' → logprob: -4.1685004234313965
    9. '_equal' → logprob: -4.5435004234313965
    10. '_overlap' → logprob: -4.5435004234313965

Token 467: '(points' (ID: 72131)
  Prédit: 'gon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gon' → logprob: -0.0008714404539205134
    2. 'g' → logprob: -7.875871658325195
    3. '(g' → logprob: -8.250871658325195
    4. '(poly' → logprob: -9.125871658325195
    5. '(p' → logprob: -10.250871658325195
    6. '(points' → logprob: -10.500871658325195
    7. 'gone' → logprob: -10.875871658325195
    8. 'go' → logprob: -11.750871658325195
    9. 'gom' → logprob: -11.750871658325195
    10. '(pol' → logprob: -11.875871658325195

Token 468: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001345946453511715
    2. '):
' → logprob: -6.626346111297607
    3. ')' → logprob: -11.62634563446045
    4. ':' → logprob: -12.50134563446045
    5. ' ):' → logprob: -13.12634563446045
    6. ',' → logprob: -13.25134563446045
    7. '):
' → logprob: -13.25134563446045
    8. '):

' → logprob: -14.75134563446045
    9. '(poly' → logprob: -15.37634563446045
    10. '(p' → logprob: -15.37634563446045

Token 469: ' idx' (ID: 14016)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.7492331862449646
    2. 'conv' → logprob: -1.9992332458496094
    3. 'polygon' → logprob: -2.7492332458496094
    4. 'h' → logprob: -2.9992332458496094
    5. 'points' → logprob: -2.9992332458496094
    6. ' poly' → logprob: -3.3742332458496094
    7. 'is' → logprob: -4.124233245849609
    8. ' points' → logprob: -4.249233245849609
    9. ' polygon' → logprob: -4.374233245849609
    10. ')' → logprob: -4.374233245849609

Token 470: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3695003390312195
    2. 's' → logprob: -1.2445003986358643
    3. 'es' → logprob: -4.744500160217285
    4. '):
' → logprob: -4.869500160217285
    5. ',' → logprob: -6.494500160217285
    6. 'ex' → logprob: -6.494500160217285
    7. '_list' → logprob: -7.619500160217285
    8. 'x' → logprob: -7.744500160217285
    9. 'list' → logprob: -9.119500160217285
    10. ')' → logprob: -9.369500160217285

Token 471: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01838907226920128
    2. '):
' → logprob: -4.0183892250061035
    3. ')' → logprob: -8.643388748168945
    4. '):
' → logprob: -10.268388748168945
    5. ',' → logprob: -11.643388748168945
    6. ' ):' → logprob: -11.893388748168945
    7. ':' → logprob: -12.393388748168945
    8. 's' → logprob: -12.518388748168945
    9. '):

' → logprob: -13.893388748168945
    10. '   ' → logprob: -14.018388748168945

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.618001053633634e-05
    2. ' poly' → logprob: -11.750025749206543
    3. '(poly' → logprob: -11.875025749206543
    4. ':' → logprob: -13.125025749206543
    5. 'poly' → logprob: -13.375025749206543
    6. '    
' → logprob: -13.625025749206543
    7. ':
' → logprob: -13.750025749206543
    8. ' points' → logprob: -13.750025749206543
    9. '(points' → logprob: -13.875025749206543
    10. '):
' → logprob: -13.875025749206543

Token 473: ' poly' (ID: 14600)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04759462922811508
    2. ' poly' → logprob: -3.6725945472717285
    3. 'poly' (adapté à ' poly') → logprob: -4.0475945472717285
    4. ' pts' → logprob: -6.2975945472717285
    5. ' selected' → logprob: -7.2975945472717285
    6. 'pts' → logprob: -8.047595024108887
    7. 'selected' → logprob: -8.172595024108887
    8. 'sub' → logprob: -9.797595024108887
    9. ' polygon' → logprob: -9.797595024108887
    10. 'p' → logprob: -10.422595024108887

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576495349407196
    2. '=' → logprob: -0.826495349407196
    3. '=[]' → logprob: -8.201495170593262
    4. '=[' → logprob: -8.451495170593262
    5. '_points' → logprob: -10.326495170593262
    6. '   ' → logprob: -10.951495170593262
    7. ' =[' → logprob: -12.076495170593262
    8. ' ' → logprob: -12.576495170593262
    9. 'points' → logprob: -12.701495170593262
    10. '=[]
' → logprob: -13.201495170593262

Token 475: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4759455621242523
    2. ' [' → logprob: -0.9759455919265747
    3. '[p' → logprob: -7.100945472717285
    4. '[c' → logprob: -7.475945472717285
    5. '[list' → logprob: -8.975945472717285
    6. '   ' → logprob: -9.850945472717285
    7. '[idx' → logprob: -10.100945472717285
    8. '[ind' → logprob: -10.100945472717285
    9. '[array' → logprob: -10.975945472717285
    10. '[next' → logprob: -11.100945472717285

Token 476: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.018158959224820137
    2. ' points' → logprob: -4.018158912658691
    3. '(points' → logprob: -11.768158912658691
    4. '   ' → logprob: -14.268158912658691
    5. '	points' → logprob: -14.268158912658691
    6. '.points' → logprob: -17.143159866333008
    7. 'point' → logprob: -18.393159866333008
    8. '_points' → logprob: -18.768159866333008
    9. 'Points' → logprob: -19.018159866333008
    10. ' ' → logprob: -19.643159866333008

Token 477: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[idx' → logprob: -13.500001907348633
    3. '[j' → logprob: -17.000001907348633
    4. '[id' → logprob: -17.125001907348633
    5. '[index' → logprob: -18.000001907348633
    6. '[x' → logprob: -18.500001907348633
    7. '[ix' → logprob: -19.625001907348633
    8. '[k' → logprob: -19.750001907348633
    9. '[' → logprob: -20.125001907348633
    10. '[_' → logprob: -20.250001907348633

Token 478: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.080963092041202e-06
    2. ' ]' → logprob: -12.375004768371582
    3. 'for' → logprob: -14.625004768371582
    4. ']
' → logprob: -16.3750057220459
    5. ')' → logprob: -16.3750057220459
    6. ' for' → logprob: -16.5000057220459
    7. '[' → logprob: -17.3750057220459
    8. ']]' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.8750057220459
    10. '   ' → logprob: -19.5000057220459

Token 479: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10027135908603668
    2. 'for' → logprob: -2.350271463394165
    3. ']' → logprob: -9.975271224975586
    4. ' ' → logprob: -11.350271224975586
    5. '	for' → logprob: -12.350271224975586
    6. ')' → logprob: -13.975271224975586
    7. '   ' → logprob: -14.725271224975586
    8. '```' → logprob: -15.600271224975586
    9. '[' → logprob: -15.725271224975586
    10. '
' → logprob: -15.850271224975586

Token 480: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3887942135334015
    2. ' idx' → logprob: -1.138794183731079
    3. 'i' → logprob: -6.888794422149658
    4. ' i' → logprob: -7.013794422149658
    5. '	idx' → logprob: -13.6387939453125
    6. '_idxs' → logprob: -14.7637939453125
    7. 'ix' → logprob: -15.0137939453125
    8. 'id' → logprob: -15.1387939453125
    9. ' ' → logprob: -15.5137939453125
    10. '   ' → logprob: -16.0137939453125

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03463579714298248
    2. 'in' → logprob: -3.4096357822418213
    3. 'n' → logprob: -7.1596360206604
    4. 's' → logprob: -9.534635543823242
    5. 'x' → logprob: -9.534635543823242
    6. ' ' → logprob: -10.284635543823242
    7. ']' → logprob: -10.659635543823242
    8. 'idx' → logprob: -13.034635543823242
    9. 'd' → logprob: -13.659635543823242
    10. '  ' → logprob: -14.034635543823242

Token 482: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019310165662318468
    2. ' idx' → logprob: -6.251931190490723
    3. '[idx' → logprob: -13.251931190490723
    4. '   ' → logprob: -15.251931190490723
    5. '_idxs' → logprob: -15.376931190490723
    6. '	idx' → logprob: -16.251930236816406
    7. '[' → logprob: -17.501930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '
' → logprob: -17.626930236816406
    10. '(idx' → logprob: -17.751930236816406

Token 483: 's' (ID: 82)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -1.0103838443756104
    2. 'ds' → logprob: -1.2603838443756104
    3. 'x' → logprob: -1.7603838443756104
    4. 's' → logprob: -1.8853838443756104
    5. 'idx' → logprob: -4.135383605957031
    6. 'dx' → logprob: -5.760383605957031
    7. '   ' → logprob: -6.010383605957031
    8. 'ks' → logprob: -6.635383605957031
    9. 'cs' → logprob: -6.760383605957031
    10. '_idxs' → logprob: -6.760383605957031

Token 484: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.167648876318708e-05
    2. ']
' → logprob: -10.375041961669922
    3. ' ]' → logprob: -11.875041961669922
    4. '   ' → logprob: -12.750041961669922
    5. ')' → logprob: -14.875041961669922
    6. ']
' → logprob: -16.500041961669922
    7. ')]' → logprob: -16.500041961669922
    8. ']

' → logprob: -17.750041961669922
    9. '])' → logprob: -18.500041961669922
    10. '()]' → logprob: -19.500041961669922

Token 485: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08174685388803482
    2. '   ' → logprob: -2.581746816635132
    3. '    
' → logprob: -6.331747055053711
    4. '  
' → logprob: -7.706747055053711
    5. ' 
' → logprob: -8.206747055053711
    6. '
' → logprob: -8.831747055053711
    7. '   
' → logprob: -9.706747055053711
    8. '<|end|>' → logprob: -10.581747055053711
    9. '\n' → logprob: -10.706747055053711
    10. ')' → logprob: -11.081747055053711

Token 486: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1113160103559494
    2. '   ' → logprob: -2.486315965652466
    3. ' return' → logprob: -4.486316204071045
    4. 'if' → logprob: -5.361316204071045
    5. 'poly' → logprob: -5.486316204071045
    6. 'area' → logprob: -6.861316204071045
    7. ' if' → logprob: -7.486316204071045
    8. ' poly' → logprob: -8.486315727233887
    9. '
' → logprob: -9.861315727233887
    10. ' area' → logprob: -9.986315727233887

Token 487: ' polygon' (ID: 65081)
  Prédit: ' polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.6931542754173279
    2. 'polygon' → logprob: -0.6931542754173279
    3. 'poly' → logprob: -12.568154335021973
    4. 'conv' → logprob: -13.068154335021973
    5. ' convex' → logprob: -14.318154335021973
    6. 'pol' → logprob: -14.443154335021973
    7. '_polygon' → logprob: -16.193153381347656
    8. ' poly' → logprob: -16.818153381347656
    9. 'polar' → logprob: -16.943153381347656
    10. 'round' → logprob: -16.943153381347656

Token 488: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. '_' → logprob: -17.25
    3. '_poly' → logprob: -17.75
    4. '_angle' → logprob: -20.0
    5. '_size' → logprob: -20.125
    6. 'area' → logprob: -20.375
    7. ' _' → logprob: -20.75
    8. '_AREA' → logprob: -20.75
    9. '_polygon' → logprob: -21.125
    10. 'Area' → logprob: -21.625

Token 489: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -2.8087270038668066e-05
    2. '(pol' → logprob: -10.625027656555176
    3. '(' → logprob: -13.000027656555176
    4. '(p' → logprob: -13.875027656555176
    5. '(py' → logprob: -15.000027656555176
    6. 'poly' → logprob: -16.625028610229492
    7. ' (' → logprob: -17.250028610229492
    8. '(po' → logprob: -18.250028610229492
    9. '(
' → logprob: -18.500028610229492
    10. '/poly' → logprob: -18.500028610229492

Token 490: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')
' → logprob: -15.250003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '))' → logprob: -15.625003814697266
    6. ' ' → logprob: -17.000003814697266
    7. ')return' → logprob: -17.625003814697266
    8. '[' → logprob: -17.750003814697266
    9. ')}' → logprob: -17.750003814697266
    10. '())' → logprob: -18.000003814697266

Token 491: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017502688569948077
    2. '<|end|>' → logprob: -6.501750469207764
    3. '
' → logprob: -8.876749992370605
    4. '#' → logprob: -10.001749992370605
    5. '```' → logprob: -10.751749992370605
    6. '<|end|>' → logprob: -11.126749992370605
    7. ' def' → logprob: -12.001749992370605
    8. 'for' → logprob: -12.001749992370605
    9. '\' → logprob: -12.501749992370605
    10. 'import' → logprob: -13.001749992370605

Token 492: ' next' (ID: 2613)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1900680512189865
    2. 'main' → logprob: -3.190068006515503
    3. ' area' → logprob: -3.315068006515503
    4. ' convex' → logprob: -3.565068006515503
    5. ' max' → logprob: -4.565068244934082
    6. ' is' → logprob: -4.565068244934082
    7. 'max' → logprob: -5.065068244934082
    8. 'area' → logprob: -5.190068244934082
    9. ' polygon' → logprob: -5.690068244934082
    10. ' largest' → logprob: -5.940068244934082

Token 493: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.644760012626648
    2. '_subset' → logprob: -1.144760012626648
    3. '_per' → logprob: -2.1447601318359375
    4. '_idx' → logprob: -4.6447601318359375
    5. '_token' → logprob: -4.8947601318359375
    6. '_indices' → logprob: -5.3947601318359375
    7. '_index' → logprob: -5.6447601318359375
    8. '_sub' → logprob: -5.8947601318359375
    9. '_point' → logprob: -6.2697601318359375
    10. '_idxs' → logprob: -6.2697601318359375

Token 494: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.000990176573395729
    2. 'def' → logprob: -8.25098991394043
    3. 'in' → logprob: -8.87598991394043
    4. 'inations' → logprob: -8.87598991394043
    5. 'inator' → logprob: -9.25098991394043
    6. '(n' → logprob: -9.50098991394043
    7. 'INATION' → logprob: -9.62598991394043
    8. 'inition' → logprob: -9.62598991394043
    9. 'inação' → logprob: -10.75098991394043
    10. '(next' → logprob: -10.87598991394043

Token 495: '(com' (ID: 27868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3243074417114258
    2. '(n' → logprob: -1.3243074417114258
    3. '(idx' → logprob: -2.199307441711426
    4. '(id' → logprob: -2.324307441711426
    5. '(s' → logprob: -2.699307441711426
    6. '(indices' → logprob: -2.949307441711426
    7. '(arr' → logprob: -3.324307441711426
    8. '(i' → logprob: -3.949307441711426
    9. '(iter' → logprob: -4.449307441711426
    10. '(index' → logprob: -4.449307441711426

Token 496: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10070736706256866
    2. 'bination' → logprob: -2.3507072925567627
    3. '(b' → logprob: -8.100707054138184
    4. 'bs' → logprob: -9.475707054138184
    5. '>b' → logprob: -10.975707054138184
    6. '(idx' → logprob: -11.100707054138184
    7. 'binations' → logprob: -11.475707054138184
    8. '```' → logprob: -11.600707054138184
    9. ')b' → logprob: -11.600707054138184
    10. 'bine' → logprob: -11.850707054138184

Token 497: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4418153762817383
    2. 'ination' → logprob: -1.1918153762817383
    3. '):
' → logprob: -3.1918153762817383
    4. 'ation' → logprob: -5.566815376281738
    5. ')' → logprob: -5.816815376281738
    6. ',' → logprob: -6.066815376281738
    7. '[' → logprob: -6.316815376281738
    8. 'n' → logprob: -8.316815376281738
    9. '):

' → logprob: -8.816815376281738
    10. '[]):' → logprob: -8.816815376281738

Token 498: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6868466138839722
    2. ' n' → logprob: -0.8118466138839722
    3. 'k' → logprob: -3.8118467330932617
    4. ' k' → logprob: -4.311846733093262
    5. 'length' → logprob: -5.686846733093262
    6. 'arr' → logprob: -5.811846733093262
    7. 'r' → logprob: -6.186846733093262
    8. 'max' → logprob: -6.436846733093262
    9. 'start' → logprob: -6.686846733093262
    10. 'nums' → logprob: -7.061846733093262

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000584249384701252
    2. '):' → logprob: -7.500584125518799
    3. ' ,' → logprob: -11.000584602355957
    4. ',k' → logprob: -11.375584602355957
    5. '):
' → logprob: -13.250584602355957
    6. ',i' → logprob: -15.125584602355957
    7. ',j' → logprob: -16.00058364868164
    8. '   ' → logprob: -16.37558364868164
    9. '_,' → logprob: -16.37558364868164
    10. ',n' → logprob: -16.75058364868164

Token 500: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03454529121518135
    2. ' k' → logprob: -3.5345451831817627
    3. 'r' → logprob: -5.409545421600342
    4. ' r' → logprob: -8.159544944763184
    5. ' ' → logprob: -11.534544944763184
    6. '   ' → logprob: -12.159544944763184
    7. 'length' → logprob: -12.659544944763184
    8. 'm' → logprob: -13.534544944763184
    9. ' length' → logprob: -13.909544944763184
    10. 't' → logprob: -14.034544944763184

Token 501: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003178273618686944
    2. '):
' → logprob: -8.125317573547363
    3. ')' → logprob: -10.875317573547363
    4. '):
' → logprob: -13.000317573547363
    5. ' ):' → logprob: -15.000317573547363
    6. ',' → logprob: -15.875317573547363
    7. '):

' → logprob: -17.12531852722168
    8. '   ' → logprob: -17.25031852722168
    9. ':' → logprob: -17.62531852722168
    10. ''):' → logprob: -18.00031852722168

Token 502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038598617538809776
    2. 'for' → logprob: -8.500386238098145
    3. ' for' → logprob: -9.625386238098145
    4. 'i' → logprob: -9.625386238098145
    5. ' i' → logprob: -10.125386238098145
    6. '	i' → logprob: -11.875386238098145
    7. '	for' → logprob: -13.000386238098145
    8. '```' → logprob: -14.375386238098145
    9. '   ' → logprob: -14.750386238098145
    10. 'j' → logprob: -15.625386238098145

Token 503: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40465492010116577
    2. 'i' → logprob: -1.1546549797058105
    3. '   ' → logprob: -4.1546549797058105
    4. 'j' → logprob: -6.6546549797058105
    5. ' for' → logprob: -7.4046549797058105
    6. ' i' → logprob: -10.654654502868652
    7. 'last' → logprob: -12.654654502868652
    8. 'idx' → logprob: -12.904654502868652
    9. 'pos' → logprob: -13.029654502868652
    10. '    
' → logprob: -13.154654502868652

Token 504: ' inplace' (ID: 100946)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3702068626880646
    2. 'i' → logprob: -1.2452068328857422
    3. 'j' → logprob: -4.120206832885742
    4. ' for' → logprob: -5.620206832885742
    5. 't' → logprob: -8.120206832885742
    6. ' i' → logprob: -8.495206832885742
    7. '"""
' → logprob: -8.495206832885742
    8. 'pos' → logprob: -8.745206832885742
    9. '   ' → logprob: -8.870206832885742
    10. 'm' → logprob: -8.995206832885742

Token 505: ' next' (ID: 2613)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5021389722824097
    2. 'def' → logprob: -1.3771389722824097
    3. ' for' → logprob: -3.002139091491699
    4. ' comb' → logprob: -3.002139091491699
    5. '
' → logprob: -4.627139091491699
    6. 'for' → logprob: -5.502139091491699
    7. ' =' → logprob: -5.502139091491699
    8. ' i' → logprob: -5.627139091491699
    9. '   ' → logprob: -5.877139091491699
    10. ' 
' → logprob: -5.877139091491699

Token 506: ' combination' (ID: 14083)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.6276471614837646
    2. '_comb' → logprob: -0.8776471614837646
    3. ' combination' → logprob: -3.8776471614837646
    4. 'def' → logprob: -4.002647399902344
    5. 'com' → logprob: -4.877647399902344
    6. '_com' → logprob: -6.752647399902344
    7. ' comb' → logprob: -7.002647399902344
    8. ' def' → logprob: -7.877647399902344
    9. 'index' → logprob: -8.002647399902344
    10. ' permutation' → logprob: -9.127647399902344

Token 507: ' generator' (ID: 23989)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.248993918299675
    2. ' for' → logprob: -2.6239938735961914
    3. 'i' → logprob: -2.7489938735961914
    4. ' i' → logprob: -3.1239938735961914
    5. 'for' → logprob: -3.4989938735961914
    6. '
' → logprob: -5.748993873596191
    7. 'def' → logprob: -5.873993873596191
    8. ':
' → logprob: -7.498993873596191
    9. ':' → logprob: -7.748993873596191
    10. 'idx' → logprob: -8.248993873596191

Token 508: ':' (ID: 25)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15115906298160553
    2. '   ' → logprob: -2.1511590480804443
    3. 'for' → logprob: -4.651159286499023
    4. ' i' → logprob: -4.776159286499023
    5. ' for' → logprob: -5.151159286499023
    6. 'j' → logprob: -8.901159286499023
    7. '
' → logprob: -11.276159286499023
    8. '	i' → logprob: -12.526159286499023
    9. 'def' → logprob: -13.026159286499023
    10. '    
' → logprob: -13.026159286499023

Token 509: ' return' (ID: 622)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06165480613708496
    2. '   ' → logprob: -3.936654806137085
    3. 'for' → logprob: -4.186655044555664
    4. ' i' → logprob: -4.186655044555664
    5. ' for' → logprob: -4.936655044555664
    6. 'j' → logprob: -5.936655044555664
    7. ' j' → logprob: -10.186655044555664
    8. '    
' → logprob: -11.811655044555664
    9. 't' → logprob: -12.186655044555664
    10. '	i' → logprob: -12.811655044555664

Token 510: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0067890239879488945
    2. 'False' → logprob: -5.006789207458496
    3. ' True' → logprob: -9.631789207458496
    4. 'bool' → logprob: -11.881789207458496
    5. '
' → logprob: -14.756789207458496
    6. ' False' → logprob: -15.006789207458496
    7. '```' → logprob: -15.381789207458496
    8. 'Tr' → logprob: -16.50678825378418
    9. 'next' → logprob: -16.75678825378418
    10. '   ' → logprob: -16.88178825378418

Token 511: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023296024650335312
    2. 'if' → logprob: -3.7732961177825928
    3. 'True' → logprob: -11.398296356201172
    4. 'False' → logprob: -11.398296356201172
    5. ' or' → logprob: -11.648296356201172
    6. ',' → logprob: -12.023296356201172
    7. ' True' → logprob: -12.773296356201172
    8. '
' → logprob: -13.023296356201172
    9. ' for' → logprob: -13.148296356201172
    10. 'If' → logprob: -13.398296356201172

Token 512: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06705474108457565
    2. 'False' → logprob: -3.0670547485351562
    3. ' not' → logprob: -4.067054748535156
    4. 'True' → logprob: -7.192054748535156
    5. 'no' → logprob: -7.942054748535156
    6. ' False' → logprob: -10.192054748535156
    7. ' no' → logprob: -11.442054748535156
    8. 'next' → logprob: -11.567054748535156
    9. '
' → logprob: -13.692054748535156
    10. ' True' → logprob: -13.692054748535156

Token 513: ' next' (ID: 2613)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6337687373161316
    2. ' True' → logprob: -0.7587687373161316
    3. ' more' → logprob: -7.258768558502197
    4. ' next' → logprob: -9.133769035339355
    5. 'more' → logprob: -9.258769035339355
    6. '(True' → logprob: -9.758769035339355
    7. '```' → logprob: -9.758769035339355
    8. '=True' → logprob: -10.008769035339355
    9. ' ' → logprob: -10.633769035339355
    10. '<|end|>' → logprob: -10.758769035339355

Token 514: '
' (ID: 198)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.18648216128349304
    2. ' True' → logprob: -2.0614821910858154
    3. 'comb' → logprob: -4.311481952667236
    4. '(True' → logprob: -4.436481952667236
    5. '_comb' → logprob: -5.061481952667236
    6. '
' → logprob: -5.936481952667236
    7. '=True' → logprob: -6.061481952667236
    8. ' ' → logprob: -6.186481952667236
    9. '_' → logprob: -7.311481952667236
    10. '(com' → logprob: -7.436481952667236

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00645375857129693
    2. ' for' → logprob: -5.506453990936279
    3. ' i' → logprob: -6.131453990936279
    4. 'i' → logprob: -9.506453514099121
    5. 'for' → logprob: -9.631453514099121
    6. '
' → logprob: -10.881453514099121
    7. '    
' → logprob: -12.131453514099121
    8. '	i' → logprob: -12.506453514099121
    9. '    ' → logprob: -12.631453514099121
    10. '	for' → logprob: -12.631453514099121

Token 516: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.044233500957489014
    2. 'for' → logprob: -3.294233560562134
    3. 'j' → logprob: -6.044233322143555
    4. ' i' → logprob: -6.169233322143555
    5. ' for' → logprob: -6.669233322143555
    6. '   ' → logprob: -7.919233322143555
    7. 'm' → logprob: -9.919233322143555
    8. 't' → logprob: -11.919233322143555
    9. ' j' → logprob: -12.294233322143555
    10. 'pos' → logprob: -12.419233322143555

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2300075888633728
    2. '=' → logprob: -1.6050076484680176
    3. '=len' → logprob: -5.480007648468018
    4. '=n' → logprob: -8.60500717163086
    5. 'n' → logprob: -8.98000717163086
    6. '=k' → logprob: -10.48000717163086
    7. '=-' → logprob: -10.98000717163086
    8. 'nt' → logprob: -11.48000717163086
    9. ' ' → logprob: -11.48000717163086
    10. 'nd' → logprob: -11.60500717163086

Token 518: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0028890406247228384
    2. 'len' → logprob: -6.377889156341553
    3. ' k' → logprob: -6.752889156341553
    4. ' len' → logprob: -11.127888679504395
    5. '-' → logprob: -13.627888679504395
    6. '	k' → logprob: -13.877888679504395
    7. '-k' → logprob: -14.502888679504395
    8. '{k' → logprob: -14.627888679504395
    9. ' -' → logprob: -14.877888679504395
    10. '[k' → logprob: -16.25288963317871

Token 519: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. '1' → logprob: -17.250261306762695
    4. '\-' → logprob: -19.250261306762695
    5. '()-' → logprob: -19.500261306762695
    6. '−' → logprob: -19.750261306762695
    7. ' ' → logprob: -20.875261306762695
    8. '
' → logprob: -21.125261306762695
    9. '2' → logprob: -21.250261306762695
    10. '0' → logprob: -21.375261306762695

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '
' → logprob: -15.625007629394531
    4. '2' → logprob: -16.12500762939453
    5. '

' → logprob: -18.06250762939453
    6. '   ' → logprob: -18.25000762939453
    7. '  ' → logprob: -19.50000762939453
    8. '```' → logprob: -19.81250762939453
    9. '11' → logprob: -19.87500762939453
    10. 'from' → logprob: -20.00000762939453

Token 521: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024424651637673378
    2. '<|end|>' → logprob: -3.8994245529174805
    3. '  
' → logprob: -7.2744245529174805
    4. '+' → logprob: -7.2744245529174805
    5. 'while' → logprob: -7.5244245529174805
    6. '<|end|>' → logprob: -7.7744245529174805
    7. ' 
' → logprob: -8.02442455291748
    8. '    
' → logprob: -8.52442455291748
    9. '
' → logprob: -8.64942455291748
    10. '1' → logprob: -9.14942455291748

Token 522: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0032494855113327503
    2. '<|end|>' → logprob: -6.628249645233154
    3. ' 
' → logprob: -7.378249645233154
    4. '  
' → logprob: -7.503249645233154
    5. '   ' → logprob: -7.878249645233154
    6. '    
' → logprob: -8.878249168395996
    7. '   
' → logprob: -10.003249168395996
    8. '
' → logprob: -10.628249168395996
    9. 'while' → logprob: -10.628249168395996
    10. '<|end|>' → logprob: -10.878249168395996

Token 523: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.25594234466552734
    2. 'while' (adapté à ' while') → logprob: -1.5059423446655273
    3. '   ' → logprob: -5.755942344665527
    4. '
' → logprob: -8.005942344665527
    5. '	while' → logprob: -8.005942344665527
    6. '<|end|>' → logprob: -9.755942344665527
    7. ' i' → logprob: -10.380942344665527
    8. ' comb' → logprob: -11.005942344665527
    9. 'i' → logprob: -11.380942344665527
    10. 'While' → logprob: -11.380942344665527

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03806742653250694
    2. ' i' → logprob: -3.28806734085083
    3. 'comb' → logprob: -11.038067817687988
    4. ' comb' → logprob: -11.663067817687988
    5. '(i' → logprob: -14.163067817687988
    6. '	i' → logprob: -14.788067817687988
    7. 'com' → logprob: -16.913066864013672
    8. '
' → logprob: -17.038066864013672
    9. '[i' → logprob: -17.163066864013672
    10. '{i' → logprob: -17.538066864013672

Token 525: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.18263939023017883
    2. ' >=' → logprob: -1.8076393604278564
    3. '>' → logprob: -6.0576395988464355
    4. ' >' → logprob: -8.307639122009277
    5. '>-' → logprob: -9.057639122009277
    6. ')>=' → logprob: -10.057639122009277
    7. '[' → logprob: -10.307639122009277
    8. '0' → logprob: -10.432639122009277
    9. ']>=' → logprob: -10.432639122009277
    10. '<|end|>' → logprob: -11.682639122009277

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '
' → logprob: -18.250036239624023
    4. '-' → logprob: -20.500036239624023
    5. '۰' → logprob: -20.687536239624023
    6. '00' → logprob: -21.187536239624023
    7. '   ' → logprob: -21.500036239624023
    8. ' -' → logprob: -21.625036239624023
    9. '1' → logprob: -21.625036239624023
    10. '```' → logprob: -21.687536239624023

Token 527: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026306919753551483
    2. 'and' → logprob: -3.6513068675994873
    3. ':
' → logprob: -12.151307106018066
    4. ' ' → logprob: -14.151307106018066
    5. '	and' → logprob: -14.901307106018066
    6. '   ' → logprob: -16.02630615234375
    7. ':' → logprob: -16.27630615234375
    8. '1' → logprob: -17.40130615234375
    9. ' :
' → logprob: -17.52630615234375
    10. '<|end|>' → logprob: -17.90130615234375

Token 528: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0031790214125066996
    2. ' comb' → logprob: -5.75317907333374
    3. 'com' → logprob: -13.878178596496582
    4. '(com' → logprob: -15.378178596496582
    5. 'Comb' → logprob: -17.3781795501709
    6. 'c' → logprob: -17.5031795501709
    7. 'combine' → logprob: -18.1281795501709
    8. 'compl' → logprob: -18.1281795501709
    9. 'cmb' → logprob: -18.1281795501709
    10. '
' → logprob: -18.3781795501709

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.25
    3. '
' → logprob: -16.375
    4. '[' → logprob: -17.0
    5. '[-' → logprob: -18.125
    6. 'i' → logprob: -18.75
    7. '```' → logprob: -19.25
    8. '[I' → logprob: -19.875
    9. '\[' → logprob: -19.875
    10. '[j' → logprob: -20.125

Token 530: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0035063496325165033
    2. '>=' → logprob: -6.378506183624268
    3. ' ==' → logprob: -6.628506183624268
    4. ']==' → logprob: -7.753506183624268
    5. '=' → logprob: -10.503506660461426
    6. '==
' → logprob: -11.128506660461426
    7. ')==' → logprob: -12.878506660461426
    8. ']>=' → logprob: -13.253506660461426
    9. '+' → logprob: -13.503506660461426
    10. '===' → logprob: -13.753506660461426

Token 531: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005266957450658083
    2. ' n' → logprob: -5.255267143249512
    3. 'i' → logprob: -10.630267143249512
    4. '(n' → logprob: -12.630267143249512
    5. '	n' → logprob: -12.880267143249512
    6. '
' → logprob: -14.130267143249512
    7. '[n' → logprob: -14.505267143249512
    8. ' ' → logprob: -15.005267143249512
    9. '<n' → logprob: -15.005267143249512
    10. ' i' → logprob: -15.630267143249512

Token 532: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3013884425163269
    2. ' -' → logprob: -1.5513885021209717
    3. '-k' → logprob: -3.0513885021209717
    4. '-(' → logprob: -7.676388263702393
    5. '-i' → logprob: -7.676388263702393
    6. '-
' → logprob: -10.42638874053955
    7. 'k' → logprob: -13.05138874053955
    8. '
' → logprob: -13.17638874053955
    9. '-n' → logprob: -14.17638874053955
    10. '−' → logprob: -15.80138874053955

Token 533: '+i' (ID: 49691)
  Prédit: '+i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -8.625866030342877e-05
    2. ' +' → logprob: -10.000085830688477
    3. '+' → logprob: -10.125085830688477
    4. ' ' → logprob: -15.000085830688477
    5. '+
' → logprob: -15.375085830688477
    6. '
' → logprob: -16.375085830688477
    7. 'i' → logprob: -17.000085830688477
    8. '```' → logprob: -17.875085830688477
    9. ' i' → logprob: -18.875085830688477
    10. '+j' → logprob: -19.250085830688477

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1428259313106537
    2. ':
' → logprob: -2.0178258419036865
    3. '):' → logprob: -9.767826080322266
    4. '):
' → logprob: -9.892826080322266
    5. ':return' → logprob: -11.642826080322266
    6. ':i' → logprob: -11.767826080322266
    7. ']:' → logprob: -12.267826080322266
    8. ':

' → logprob: -12.267826080322266
    9. ']:
' → logprob: -12.767826080322266
    10. ':
' → logprob: -13.142826080322266

Token 535: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7040581107139587
    2. ' i' → logprob: -0.9540581107139587
    3. '-' → logprob: -2.9540581703186035
    4. 'i' → logprob: -3.0790581703186035
    5. '[i' → logprob: -4.5790581703186035
    6. ' -' → logprob: -5.8290581703186035
    7. '       ' → logprob: -5.9540581703186035
    8. ' -=' → logprob: -6.9540581703186035
    9. '(i' → logprob: -7.0790581703186035
    10. '1' → logprob: -7.3290581703186035

Token 536: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02324722334742546
    2. ' i' → logprob: -3.773247241973877
    3. '	i' → logprob: -13.523246765136719
    4. '
' → logprob: -15.023246765136719
    5. '   ' → logprob: -17.52324676513672
    6. '-' → logprob: -18.14824676513672
    7. '-i' → logprob: -18.52324676513672
    8. ' 
' → logprob: -18.52324676513672
    9. '[i' → logprob: -19.14824676513672
    10. '{i' → logprob: -19.39824676513672

Token 537: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.004986593499779701
    2. '-' → logprob: -5.504986763000488
    3. ' -=' → logprob: -7.004986763000488
    4. '+=' → logprob: -15.129986763000488
    5. '−' → logprob: -16.629985809326172
    6. '```' → logprob: -17.254985809326172
    7. '=' → logprob: -17.754985809326172
    8. '>-' → logprob: -18.129985809326172
    9. ' -' → logprob: -18.629985809326172
    10. '=-' → logprob: -20.379985809326172

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.3750057220459
    4. '<|end|>' → logprob: -17.6250057220459
    5. '
' → logprob: -18.2500057220459
    6. '۱' → logprob: -19.5000057220459
    7. '   ' → logprob: -20.3125057220459
    8. '１' → logprob: -20.5625057220459
    9. '0' → logprob: -20.7500057220459
    10. '-' → logprob: -20.8125057220459

Token 539: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6747826933860779
    2. '1' → logprob: -1.2997827529907227
    3. '[i' → logprob: -2.6747827529907227
    4. '
' → logprob: -2.7997827529907227
    5. ' 
' → logprob: -3.5497827529907227
    6. ' i' → logprob: -4.424782752990723
    7. '    
' → logprob: -4.549782752990723
    8. 'i' → logprob: -5.049782752990723
    9. ' ' → logprob: -5.174782752990723
    10. '  
' → logprob: -5.174782752990723

Token 540: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6228072643280029
    2. '   ' → logprob: -1.747807264328003
    3. '1' → logprob: -2.372807264328003
    4. '[i' → logprob: -2.497807264328003
    5. '```' → logprob: -2.872807264328003
    6. '+' → logprob: -3.747807264328003
    7. ' i' → logprob: -3.872807264328003
    8. '[' → logprob: -5.997807502746582
    9. 'if' → logprob: -6.122807502746582
    10. '++' → logprob: -6.372807502746582

Token 541: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018312297761440277
    2. ' if' → logprob: -4.018312454223633
    3. 'i' → logprob: -9.018312454223633
    4. '   ' → logprob: -10.393312454223633
    5. '
' → logprob: -12.893312454223633
    6. '1' → logprob: -13.268312454223633
    7. ' i' → logprob: -13.393312454223633
    8. '[i' → logprob: -14.018312454223633
    9. ' ' → logprob: -14.518312454223633
    10. '0' → logprob: -14.643312454223633

Token 542: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061967797577381134
    2. ' i' → logprob: -2.8119678497314453
    3. '	i' → logprob: -15.811967849731445
    4. '-' → logprob: -17.311967849731445
    5. ' -' → logprob: -18.436967849731445
    6. ' ' → logprob: -19.061967849731445
    7. '   ' → logprob: -19.186967849731445
    8. '
' → logprob: -19.186967849731445
    9. ',i' → logprob: -19.811967849731445
    10. ' ' → logprob: -19.811967849731445

Token 543: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.010547100566327572
    2. ' <' → logprob: -4.635547161102295
    3. '==' → logprob: -8.635546684265137
    4. '<n' → logprob: -8.760546684265137
    5. '0' → logprob: -9.010546684265137
    6. '>=' → logprob: -9.260546684265137
    7. '=' → logprob: -9.760546684265137
    8. '<i' → logprob: -9.760546684265137
    9. ' ==' → logprob: -10.385546684265137
    10. '<len' → logprob: -10.635546684265137

Token 544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.125009536743164
    4. '
' → logprob: -21.125009536743164
    5. '０' → logprob: -21.375009536743164
    6. 'zero' → logprob: -21.500009536743164
    7. '=' → logprob: -21.875009536743164
    8. '00' → logprob: -21.875009536743164
    9. '০' → logprob: -22.812509536743164
    10. '<|end|>' → logprob: -23.125009536743164

Token 545: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2538972496986389
    2. ':' → logprob: -1.5038971900939941
    3. ':return' → logprob: -6.253897190093994
    4. '   ' → logprob: -11.253897666931152
    5. '
' → logprob: -11.378897666931152
    6. '):
' → logprob: -12.128897666931152
    7. ':
' → logprob: -12.503897666931152
    8. 'False' → logprob: -13.253897666931152
    9. 'return' → logprob: -13.378897666931152
    10. '=False' → logprob: -13.878897666931152

Token 546: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07739251106977463
    2. '       ' → logprob: -2.827392578125
    3. 'return' → logprob: -4.827392578125
    4. ' return' → logprob: -5.077392578125
    5. 'False' → logprob: -7.077392578125
    6. ' False' → logprob: -8.577392578125
    7. '	return' → logprob: -11.202392578125
    8. '    ' → logprob: -11.577392578125
    9. '  ' → logprob: -12.952392578125
    10. ' ' → logprob: -13.202392578125

Token 547: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09451816976070404
    2. ' return' → logprob: -2.5945181846618652
    3. '       ' → logprob: -4.344518184661865
    4. '   ' → logprob: -6.344518184661865
    5. 'False' → logprob: -7.219518184661865
    6. ' False' → logprob: -10.594517707824707
    7. '	return' → logprob: -11.344517707824707
    8. 'false' → logprob: -13.594517707824707
    9. '    ' → logprob: -13.969517707824707
    10. '           ' → logprob: -14.344517707824707

Token 548: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'None' → logprob: -19.875001907348633
    4. '(False' → logprob: -21.625001907348633
    5. 'True' → logprob: -22.875001907348633
    6. '   ' → logprob: -23.125001907348633
    7. 'false' → logprob: -23.625001907348633
    8. '=False' → logprob: -25.125001907348633
    9. '[]' → logprob: -25.250001907348633
    10. '0' → logprob: -25.625001907348633

Token 549: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03046545200049877
    2. '   ' → logprob: -4.405465602874756
    3. ' 
' → logprob: -4.530465602874756
    4. '  
' → logprob: -5.905465602874756
    5. '    
' → logprob: -5.905465602874756
    6. '   
' → logprob: -7.155465602874756
    7. '	
' → logprob: -7.780465602874756
    8. '\n' → logprob: -8.405465126037598
    9. '[i' → logprob: -9.780465126037598
    10. '\t' → logprob: -11.155465126037598

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006108098896220326
    2. '
' → logprob: -8.0006103515625
    3. '    
' → logprob: -8.6256103515625
    4. ' comb' → logprob: -10.0006103515625
    5. 'comb' → logprob: -10.8756103515625
    6. '  
' → logprob: -11.8756103515625
    7. '   
' → logprob: -11.8756103515625
    8. '```' → logprob: -12.1256103515625
    9. '  ' → logprob: -12.2506103515625
    10. 'i' → logprob: -13.2506103515625

Token 551: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -0.011179503984749317
    2. '   ' → logprob: -4.511179447174072
    3. ' comb' → logprob: -9.01117992401123
    4. '       ' → logprob: -11.63617992401123
    5. '```' → logprob: -14.88617992401123
    6. 'j' → logprob: -15.88617992401123
    7. '    ' → logprob: -16.636178970336914
    8. '	' → logprob: -16.636178970336914
    9. '           ' → logprob: -17.011178970336914
    10. 'Comb' → logprob: -17.011178970336914

Token 552: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -17.625
    3. '```' → logprob: -19.125
    4. '_i' → logprob: -19.875
    5. '[I' → logprob: -20.125
    6. '\[' → logprob: -20.375
    7. '
' → logprob: -20.375
    8. '[
' → logprob: -20.75
    9. '[' → logprob: -21.0
    10. '[index' → logprob: -22.25

Token 553: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004503823351114988
    2. ' +=' → logprob: -5.8795037269592285
    3. ']+=' → logprob: -6.3795037269592285
    4. '=' → logprob: -13.754504203796387
    5. '+=(' → logprob: -15.629504203796387
    6. '+='' → logprob: -16.62950325012207
    7. '```' → logprob: -16.75450325012207
    8. ')' → logprob: -16.87950325012207
    9. '+' → logprob: -16.87950325012207
    10. '[' → logprob: -17.00450325012207

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۱' → logprob: -23.25
    4. '```' → logprob: -23.25
    5. '   ' → logprob: -23.375
    6. '１' → logprob: -23.75
    7. '१' → logprob: -25.25
    8. '১' → logprob: -25.25
    9. '
' → logprob: -25.75
    10. '`' → logprob: -25.875

Token 555: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8913969397544861
    2. '   ' → logprob: -1.0163969993591309
    3. ' for' → logprob: -1.6413969993591309
    4. '
' → logprob: -3.641396999359131
    5. 'i' → logprob: -5.516396999359131
    6. '	for' → logprob: -5.766396999359131
    7. '    
' → logprob: -8.641396522521973
    8. '```' → logprob: -8.641396522521973
    9. ' i' → logprob: -8.766396522521973
    10. ',i' → logprob: -8.891396522521973

Token 556: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7370259165763855
    2. ' for' → logprob: -1.3620259761810303
    3. '
' → logprob: -1.8620259761810303
    4. '   ' → logprob: -2.8620259761810303
    5. '	for' → logprob: -3.1120259761810303
    6. 'i' → logprob: -5.362025737762451
    7. '    
' → logprob: -7.112025737762451
    8. '```' → logprob: -7.612025737762451
    9. '<|end|>' → logprob: -8.23702621459961
    10. 'import' → logprob: -8.23702621459961

Token 557: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4498052223643754e-05
    2. 'i' → logprob: -11.250014305114746
    3. ' for' → logprob: -13.500014305114746
    4. '	for' → logprob: -16.875015258789062
    5. 'j' → logprob: -17.875015258789062
    6. '
' → logprob: -18.125015258789062
    7. '```' → logprob: -18.750015258789062
    8. 'return' → logprob: -19.250015258789062
    9. 'diff' → logprob: -19.625015258789062
    10. '   ' → logprob: -19.625015258789062

Token 558: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. ' j' → logprob: -11.750007629394531
    3. '	j' → logprob: -18.75000762939453
    4. '_j' → logprob: -19.25000762939453
    5. '$j' → logprob: -21.25000762939453
    6. '[j' → logprob: -23.12500762939453
    7. '(j' → logprob: -24.50000762939453
    8. '-j' → logprob: -25.00000762939453
    9. ':j' → logprob: -25.25000762939453
    10. ',j' → logprob: -25.62500762939453

Token 559: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132993280887604
    2. ' in' → logprob: -1.313299298286438
    3. 'range' → logprob: -10.438299179077148
    4. ' ' → logprob: -12.688299179077148
    5. 'i' → logprob: -13.063299179077148
    6. '  ' → logprob: -14.563299179077148
    7. '```' → logprob: -14.563299179077148
    8. '   ' → logprob: -14.688299179077148
    9. 'j' → logprob: -14.938299179077148
    10. '	in' → logprob: -15.563299179077148

Token 560: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -22.000059127807617
    4. 'r' → logprob: -23.625059127807617
    5. '	range' → logprob: -23.750059127807617
    6. 'rang' → logprob: -24.500059127807617
    7. '   ' → logprob: -25.625059127807617
    8. ' ' → logprob: -26.125059127807617
    9. 'ran' → logprob: -26.500059127807617
    10. '  ' → logprob: -27.000059127807617

Token 561: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040995352901518345
    2. '(i' → logprob: -5.504099369049072
    3. ' i' → logprob: -10.87909984588623
    4. '	i' → logprob: -13.12909984588623
    5. '_i' → logprob: -16.504098892211914
    6. '{i' → logprob: -16.629098892211914
    7. '   ' → logprob: -17.129098892211914
    8. '=i' → logprob: -17.379098892211914
    9. ',i' → logprob: -17.629098892211914
    10. '$i' → logprob: -18.629098892211914

Token 562: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.1928003813372925e-05
    2. ' +' → logprob: -9.875051498413086
    3. '+i' → logprob: -15.500051498413086
    4. '+j' → logprob: -15.625051498413086
    5. '1' → logprob: -16.250051498413086
    6. '＋' → logprob: -17.500051498413086
    7. 'i' → logprob: -17.625051498413086
    8. 'j' → logprob: -18.875051498413086
    9. '()+' → logprob: -19.250051498413086
    10. ']+' → logprob: -20.625051498413086

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '
' → logprob: -22.0
    4. '   ' → logprob: -23.125
    5. ',' → logprob: -23.375
    6. 'j' → logprob: -23.625
    7. '```' → logprob: -23.875
    8. '１' → logprob: -25.375
    9. '0' → logprob: -25.5
    10. ' j' → logprob: -26.0

Token 564: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.16779762506484985
    2. ',' → logprob: -1.917797565460205
    3. 'k' → logprob: -4.917797565460205
    4. ',j' → logprob: -8.792798042297363
    5. ' k' → logprob: -9.542798042297363
    6. ' ,' → logprob: -12.292798042297363
    7. 'j' → logprob: -14.042798042297363
    8. ',i' → logprob: -15.792798042297363
    9. '   ' → logprob: -15.917798042297363
    10. '(k' → logprob: -16.792797088623047

Token 565: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008941899985074997
    2. '):' → logprob: -4.883942127227783
    3. ',' → logprob: -7.008942127227783
    4. ',n' → logprob: -8.258941650390625
    5. ',k' → logprob: -9.258941650390625
    6. '):
' → logprob: -10.633941650390625
    7. ':
' → logprob: -11.258941650390625
    8. ',j' → logprob: -11.508941650390625
    9. '   ' → logprob: -11.633941650390625
    10. ':' → logprob: -12.133941650390625

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0721237659454346
    2. 'comb' → logprob: -1.0721237659454346
    3. ' comb' → logprob: -1.1971237659454346
    4. '   ' → logprob: -4.4471235275268555
    5. 'com' → logprob: -6.6971235275268555
    6. '(com' → logprob: -8.697123527526855
    7. '_comb' → logprob: -9.447123527526855
    8. '```' → logprob: -10.197123527526855
    9. '        
' → logprob: -10.322123527526855
    10. '	com' → logprob: -10.447123527526855

Token 567: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -0.0005556552205234766
    2. ' comb' → logprob: -7.500555515289307
    3. 'com' → logprob: -13.125555992126465
    4. '       ' → logprob: -15.375555992126465
    5. '   ' → logprob: -15.625555992126465
    6. '           ' → logprob: -16.50055503845215
    7. '_comb' → logprob: -16.62555503845215
    8. '
' → logprob: -17.12555503845215
    9. '```' → logprob: -17.50055503845215
    10. 'combine' → logprob: -17.87555503845215

Token 568: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.630610641877865e-06
    2. 'j' → logprob: -12.250006675720215
    3. '```' → logprob: -14.000006675720215
    4. '[' → logprob: -14.500006675720215
    5. '[i' → logprob: -15.875006675720215
    6. ' [' → logprob: -16.6250057220459
    7. '\[' → logprob: -16.6250057220459
    8. 's' → logprob: -17.7500057220459
    9. '
' → logprob: -17.8750057220459
    10. '[
' → logprob: -17.8750057220459

Token 569: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858839511871338
    2. ' =' → logprob: -3.048588275909424
    3. '=com' → logprob: -14.423588752746582
    4. '=c' → logprob: -15.423588752746582
    5. ']=' → logprob: -16.423587799072266
    6. '=
' → logprob: -16.798587799072266
    7. '＝' → logprob: -16.798587799072266
    8. '=int' → logprob: -17.423587799072266
    9. ')=' → logprob: -17.923587799072266
    10. ')' → logprob: -18.423587799072266

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001222966704517603
    2. ' =' → logprob: -6.751223087310791
    3. '=com' → logprob: -9.876222610473633
    4. '=c' → logprob: -13.751222610473633
    5. '＝' → logprob: -16.876222610473633
    6. '=int' → logprob: -16.876222610473633
    7. '=cut' → logprob: -17.501222610473633
    8. '=num' → logprob: -17.626222610473633
    9. '=
' → logprob: -17.751222610473633
    10. '=n' → logprob: -18.501222610473633

Token 571: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.0206720617134124e-05
    2. ' comb' → logprob: -11.50001049041748
    3. 'com' → logprob: -19.375009536743164
    4. 'Comb' → logprob: -21.500009536743164
    5. 'combine' → logprob: -21.750009536743164
    6. 'cmb' → logprob: -22.250009536743164
    7. 'comm' → logprob: -22.375009536743164
    8. 'combined' → logprob: -22.625009536743164
    9. 'compl' → logprob: -23.000009536743164
    10. '_comb' → logprob: -23.625009536743164

Token 572: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00043102685594931245
    2. '[i' → logprob: -7.750431060791016
    3. '[' → logprob: -14.750431060791016
    4. 'j' → logprob: -18.125431060791016
    5. '```' → logprob: -18.750431060791016
    6. '[-' → logprob: -19.125431060791016
    7. '[js' → logprob: -19.125431060791016
    8. '[
' → logprob: -20.375431060791016
    9. 's' → logprob: -20.375431060791016
    10. '[user' → logprob: -20.625431060791016

Token 573: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.160305455327034
    2. '[i' → logprob: -1.9103055000305176
    3. 'j' → logprob: -9.66030502319336
    4. '-' → logprob: -11.28530502319336
    5. 'i' → logprob: -12.78530502319336
    6. '[' → logprob: -14.28530502319336
    7. '```' → logprob: -14.28530502319336
    8. '[
' → logprob: -14.78530502319336
    9. ']' → logprob: -15.91030502319336
    10. '{i' → logprob: -16.53530502319336

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.375
    4. '0' → logprob: -18.0
    5. '   ' → logprob: -18.25
    6. '+' → logprob: -18.9375
    7. '-' → logprob: -19.3125
    8. '' → logprob: -19.9375
    9. '  ' → logprob: -20.0
    10. '۱' → logprob: -20.25

Token 575: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0020045305136591196
    2. ' +' → logprob: -6.252004623413086
    3. '1' → logprob: -9.502004623413086
    4. ']+' → logprob: -13.877004623413086
    5. '+
' → logprob: -16.377004623413086
    6. '+j' → logprob: -17.002004623413086
    7. ' plus' → logprob: -17.127004623413086
    8. ')+' → logprob: -17.127004623413086
    9. '()+' → logprob: -17.377004623413086
    10. '```' → logprob: -18.002004623413086

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -22.0
    4. '۱' → logprob: -22.75
    5. '
' → logprob: -24.25
    6. '   ' → logprob: -24.25
    7. '১' → logprob: -24.75
    8. '१' → logprob: -25.0
    9. '１' → logprob: -25.125
    10. '<|end|>' → logprob: -25.25

Token 577: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7132759690284729
    2. '
' → logprob: -1.2132759094238281
    3. 'return' → logprob: -1.7132759094238281
    4. ' return' → logprob: -3.838275909423828
    5. '	return' → logprob: -5.463275909423828
    6. '<|end|>' → logprob: -5.963275909423828
    7. '    
' → logprob: -6.588275909423828
    8. '  
' → logprob: -6.713275909423828
    9. ' 
' → logprob: -7.713275909423828
    10. ':return' → logprob: -8.338275909423828

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5156713724136353
    2. 'return' → logprob: -1.0156713724136353
    3. ' return' → logprob: -3.7656712532043457
    4. '	return' → logprob: -4.140671253204346
    5. '
' → logprob: -7.390671253204346
    6. ':return' → logprob: -7.765671253204346
    7. '```' → logprob: -7.765671253204346
    8. '{return' → logprob: -9.015671730041504
    9. ' ' → logprob: -11.015671730041504
    10. '@return' → logprob: -11.515671730041504

Token 579: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6159851551055908
    2. '   ' → logprob: -0.8659851551055908
    3. ' return' → logprob: -3.365985155105591
    4. '	return' → logprob: -5.365984916687012
    5. '
' → logprob: -10.115984916687012
    6. '    
' → logprob: -12.490984916687012
    7. '{return' → logprob: -12.490984916687012
    8. '\t' → logprob: -13.740984916687012
    9. ' ' → logprob: -13.740984916687012
    10. ':return' → logprob: -14.115984916687012

Token 580: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.306760805164231e-05
    2. ' True' → logprob: -11.25001335144043
    3. '(True' → logprob: -20.87501335144043
    4. 'true' → logprob: -22.75001335144043
    5. '=True' → logprob: -22.87501335144043
    6. 'Tr' → logprob: -24.25001335144043
    7. '[' → logprob: -24.50001335144043
    8. '[]' → logprob: -25.00001335144043
    9. 'False' → logprob: -25.12501335144043
    10. 'Truth' → logprob: -25.62501335144043

Token 581: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: 'def' (ID: 1314)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5808035731315613
    2. 'def' → logprob: -0.8308035731315613
    3. 'import' → logprob: -5.330803394317627
    4. ' from' → logprob: -11.705803871154785
    5. '```' → logprob: -13.580803871154785
    6. '#' → logprob: -13.955803871154785
    7. '<|end|>' → logprob: -14.205803871154785
    8. ' def' → logprob: -15.455803871154785
    9. 'class' → logprob: -15.580803871154785
    10. 'for' → logprob: -15.830803871154785

Token 583: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6870041489601135
    2. 'main' → logprob: -0.8120041489601135
    3. 'max' → logprob: -3.5620040893554688
    4. 'largest' → logprob: -4.812004089355469
    5. ' max' → logprob: -5.187004089355469
    6. ' find' → logprob: -6.062004089355469
    7. 'maximum' → logprob: -6.687004089355469
    8. 'find' → logprob: -6.937004089355469
    9. ' maximal' → logprob: -6.937004089355469
    10. ' largest' → logprob: -7.062004089355469

Token 584: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.88418151892256e-05
    2. '():
' → logprob: -10.000059127807617
    3. ' ():' → logprob: -11.250059127807617
    4. '()' → logprob: -15.000059127807617
    5. '():
' → logprob: -17.625059127807617
    6. '(' → logprob: -18.375059127807617
    7. '():

' → logprob: -19.250059127807617
    8. '().' → logprob: -20.125059127807617
    9. '_' → logprob: -20.375059127807617
    10. '()>' → logprob: -20.375059127807617

Token 585: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.372210294008255
    2. '   ' → logprob: -1.3722102642059326
    3. 'n' → logprob: -2.9972102642059326
    4. ' import' → logprob: -5.372210502624512
    5. ' input' → logprob: -6.622210502624512
    6. 'import' → logprob: -6.997210502624512
    7. '	n' → logprob: -8.497210502624512
    8. ' t' → logprob: -9.872210502624512
    9. ',n' → logprob: -9.997210502624512
    10. ' readline' → logprob: -10.372210502624512

Token 586: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15674099326133728
    2. ' n' → logprob: -2.53174090385437
    3. 'N' → logprob: -3.53174090385437
    4. '   ' → logprob: -3.90674090385437
    5. ' input' → logprob: -5.281741142272949
    6. 'input' → logprob: -5.531741142272949
    7. 'import' (adapté à ' import') → logprob: -5.656741142272949
    8. ' N' → logprob: -5.781741142272949
    9. ' import' → logprob: -7.531741142272949
    10. 't' → logprob: -11.78174114227295

Token 587: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.024430347606539726
    2. 'sys' → logprob: -3.774430274963379
    3. ' math' → logprob: -6.774430274963379
    4. 'math' → logprob: -10.149430274963379
    5. '=sys' → logprob: -13.524430274963379
    6. ' itertools' → logprob: -14.024430274963379
    7. '_' → logprob: -17.024431228637695
    8. '(sys' → logprob: -17.149431228637695
    9. 'collections' → logprob: -17.274431228637695
    10. '	sys' → logprob: -17.274431228637695

Token 588: '
' (ID: 198)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6732549071311951
    2. '   ' → logprob: -1.0482549667358398
    3. 'input' → logprob: -2.04825496673584
    4. ' readline' → logprob: -4.67325496673584
    5. ' n' → logprob: -7.54825496673584
    6. 'n' → logprob: -8.29825496673584
    7. 'data' → logprob: -9.04825496673584
    8. '    ' → logprob: -10.04825496673584
    9. ' data' → logprob: -10.29825496673584
    10. ' lines' → logprob: -10.29825496673584

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.231223002076149
    2. ' input' → logprob: -1.8562229871749878
    3. 'input' → logprob: -3.2312231063842773
    4. ' readline' → logprob: -4.606223106384277
    5. ' n' → logprob: -8.231223106384277
    6. 'n' → logprob: -8.231223106384277
    7. 'data' → logprob: -9.981223106384277
    8. ' lines' → logprob: -10.106223106384277
    9. ' data' → logprob: -10.481223106384277
    10. 'read' → logprob: -12.106223106384277

Token 590: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.19008953869342804
    2. '   ' → logprob: -2.190089464187622
    3. ' input' → logprob: -3.690089464187622
    4. 'N' → logprob: -3.815089464187622
    5. 'n' → logprob: -4.315089702606201
    6. 'data' → logprob: -8.190089225769043
    7. 'read' → logprob: -8.315089225769043
    8. ' N' → logprob: -9.065089225769043
    9. ' n' → logprob: -9.690089225769043
    10. ' readline' → logprob: -9.690089225769043

Token 591: '=sys' (ID: 149200)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8437675833702087
    2. '()' → logprob: -1.0937676429748535
    3. ' =' → logprob: -2.0937676429748535
    4. '_line' → logprob: -2.7187676429748535
    5. '_data' → logprob: -3.4687676429748535
    6. '_' → logprob: -5.2187676429748535
    7. '().' → logprob: -5.9687676429748535
    8. '(' → logprob: -6.3437676429748535
    9. '_lines' → logprob: -6.4687676429748535
    10. '.' → logprob: -7.2187676429748535

Token 592: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7636072635650635
    2. '.stdin' → logprob: -1.1386072635650635
    3. '.readline' → logprob: -1.6386072635650635
    4. '().' → logprob: -4.013607025146484
    5. '()' → logprob: -7.388607025146484
    6. '.stdout' → logprob: -7.638607025146484
    7. '(stdin' → logprob: -9.388607025146484
    8. '.argv' → logprob: -10.388607025146484
    9. '.setdefault' → logprob: -10.388607025146484
    10. '()
' → logprob: -10.513607025146484

Token 593: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.38769152760505676
    2. 'read' → logprob: -1.1376914978027344
    3. '.readlines' → logprob: -8.512691497802734
    4. ' readline' → logprob: -8.637691497802734
    5. 'rea' → logprob: -8.762691497802734
    6. '.read' → logprob: -8.887691497802734
    7. '_read' → logprob: -9.387691497802734
    8. 'buffer' → logprob: -11.262691497802734
    9. '	read' → logprob: -11.387691497802734
    10. '<|end|>' → logprob: -12.012691497802734

Token 594: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014066596049815416
    2. '
' → logprob: -7.626406669616699
    3. 'n' → logprob: -8.0014066696167
    4. '()' → logprob: -8.1264066696167
    5. '    
' → logprob: -9.0014066696167
    6. '(n' → logprob: -9.6264066696167
    7. '()
' → logprob: -9.7514066696167
    8. '().' → logprob: -11.5014066696167
    9. ' n' → logprob: -12.0014066696167
    10. '	n' → logprob: -12.2514066696167

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016553020104765892
    2. 'n' → logprob: -6.501655101776123
    3. '    
' → logprob: -10.126655578613281
    4. ' n' → logprob: -10.126655578613281
    5. '	n' → logprob: -10.126655578613281
    6. '
' → logprob: -10.751655578613281
    7. '(n' → logprob: -12.376655578613281
    8. 't' → logprob: -12.876655578613281
    9. 'N' → logprob: -13.876655578613281
    10. '  ' → logprob: -14.376655578613281

Token 596: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.765898585319519
    2. 'n' → logprob: -1.015898585319519
    3. '   ' → logprob: -1.765898585319519
    4. 't' → logprob: -7.015898704528809
    5. 'T' → logprob: -7.515898704528809
    6. ' n' → logprob: -8.390898704528809
    7. ' N' → logprob: -8.390898704528809
    8. 'Q' → logprob: -10.765898704528809
    9. 'k' → logprob: -11.390898704528809
    10. ' ' → logprob: -11.515898704528809

Token 597: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26045599579811096
    2. ' =' → logprob: -1.5104559659957886
    3. ',' → logprob: -4.885456085205078
    4. '=int' → logprob: -7.135456085205078
    5. ' ,' → logprob: -10.135456085205078
    6. ',N' → logprob: -10.635456085205078
    7. '=input' → logprob: -10.635456085205078
    8. ',n' → logprob: -11.010456085205078
    9. ' ' → logprob: -11.260456085205078
    10. '=N' → logprob: -12.010456085205078

Token 598: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '(int' → logprob: -18.251502990722656
    4. ' ' → logprob: -18.376502990722656
    5. '10' → logprob: -18.876502990722656
    6. '[int' → logprob: -19.751502990722656
    7. '=int' → logprob: -19.876502990722656
    8. '	int' → logprob: -20.251502990722656
    9. 'len' → logprob: -20.751502990722656
    10. '  ' → logprob: -20.751502990722656

Token 599: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0026327306404709816
    2. '(sys' → logprob: -6.0026326179504395
    3. '(' → logprob: -9.002633094787598
    4. 'input' → logprob: -10.377633094787598
    5. '()' → logprob: -13.002633094787598
    6. 'sys' → logprob: -14.877633094787598
    7. '(
' → logprob: -16.12763214111328
    8. ' (' → logprob: -16.25263214111328
    9. ' input' → logprob: -16.25263214111328
    10. '=input' → logprob: -17.62763214111328

Token 600: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009301958605647087
    2. '()' → logprob: -5.259302139282227
    3. '().' → logprob: -5.509302139282227
    4. '())
' → logprob: -11.759302139282227
    5. ' ())' → logprob: -13.634302139282227
    6. '(' → logprob: -14.384302139282227
    7. ')' → logprob: -14.884302139282227
    8. '();)' → logprob: -15.009302139282227
    9. '()
' → logprob: -15.259302139282227
    10. '())

' → logprob: -15.509302139282227

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4664856791496277
    2. ' points' → logprob: -1.0914857387542725
    3. 'points' → logprob: -3.3414857387542725
    4. '	points' → logprob: -8.091485977172852
    5. '    
' → logprob: -8.466485977172852
    6. '(points' → logprob: -8.591485977172852
    7. ' pts' → logprob: -8.966485977172852
    8. '_points' → logprob: -8.966485977172852
    9. ' P' → logprob: -9.216485977172852
    10. 'P' → logprob: -9.216485977172852

Token 602: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.0012659442145377398
    2. 'pts' → logprob: -7.001266002655029
    3. ' points' → logprob: -8.501265525817871
    4. 'P' → logprob: -9.876265525817871
    5. 'coords' → logprob: -10.626265525817871
    6. 'A' → logprob: -11.001265525817871
    7. 'S' → logprob: -11.251265525817871
    8. 'K' → logprob: -11.626265525817871
    9. 'M' → logprob: -11.751265525817871
    10. 'point' → logprob: -12.126265525817871

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697777152061462
    2. '=' → logprob: -2.1269776821136475
    3. '=[]' → logprob: -10.126977920532227
    4. ' =[' → logprob: -12.251977920532227
    5. '[' → logprob: -13.751977920532227
    6. '=[' → logprob: -13.876977920532227
    7. '[:]' → logprob: -14.001977920532227
    8. '[]' → logprob: -14.126977920532227
    9. ',' → logprob: -14.251977920532227
    10. '.append' → logprob: -15.626977920532227

Token 604: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004554134793579578
    2. '[int' → logprob: -6.254554271697998
    3. '[array' → logprob: -7.754554271697998
    4. '[p' → logprob: -8.00455379486084
    5. '[input' → logprob: -8.12955379486084
    6. '[N' → logprob: -8.37955379486084
    7. '[i' → logprob: -8.62955379486084
    8. '[ip' → logprob: -8.87955379486084
    9. '[index' → logprob: -9.62955379486084
    10. '[n' → logprob: -9.62955379486084

Token 605: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00012451570364646614
    2. ' tuple' → logprob: -9.00012493133545
    3. '(tuple' → logprob: -13.75012493133545
    4. 'list' → logprob: -17.750123977661133
    5. '   ' → logprob: -20.500123977661133
    6. '
' → logprob: -20.875123977661133
    7. 'tu' → logprob: -21.000123977661133
    8. 'map' → logprob: -21.250123977661133
    9. 'Tuple' → logprob: -21.875123977661133
    10. '_tuple' → logprob: -22.000123977661133

Token 606: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.246537173457909e-06
    2. 'map' → logprob: -12.625003814697266
    3. '(int' → logprob: -14.000003814697266
    4. '(' → logprob: -16.875003814697266
    5. ' map' → logprob: -18.750003814697266
    6. '(input' → logprob: -19.125003814697266
    7. '_map' → logprob: -19.875003814697266
    8. '	map' → logprob: -19.875003814697266
    9. '(
' → logprob: -20.000003814697266
    10. '.map' → logprob: -20.125003814697266

Token 607: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16024728119373322
    2. 'int' → logprob: -1.9102473258972168
    3. '[int' → logprob: -11.410246849060059
    4. '   ' → logprob: -12.410246849060059
    5. ',int' → logprob: -12.785246849060059
    6. ' int' → logprob: -13.035246849060059
    7. '<int' → logprob: -13.785246849060059
    8. ']int' → logprob: -14.410246849060059
    9. '=int' → logprob: -14.910246849060059
    10. 'map' → logprob: -15.535246849060059

Token 608: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.05368214100599289
    2. ',' → logprob: -3.3036820888519287
    3. '(input' → logprob: -4.553682327270508
    4. 'input' → logprob: -5.303682327270508
    5. ' input' → logprob: -11.678682327270508
    6. ' ,' → logprob: -12.428682327270508
    7. '   ' → logprob: -13.178682327270508
    8. '=input' → logprob: -14.053682327270508
    9. '[input' → logprob: -14.553682327270508
    10. '(' → logprob: -14.678682327270508

Token 609: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.readline' → logprob: -14.75
    3. '()' → logprob: -16.875
    4. '()))' → logprob: -18.75
    5. '(' → logprob: -18.875
    6. ' ().' → logprob: -18.875
    7. '.split' → logprob: -20.125
    8. '.' → logprob: -20.125
    9. '.strip' → logprob: -21.875
    10. 'split' → logprob: -22.0

Token 610: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011415011249482632
    2. 'strip' → logprob: -4.511415004730225
    3. 'rstrip' → logprob: -8.011415481567383
    4. 'read' → logprob: -10.386415481567383
    5. ' split' → logprob: -13.261415481567383
    6. '(split' → logprob: -13.636415481567383
    7. '().' → logprob: -14.011415481567383
    8. 'sys' → logprob: -15.136415481567383
    9. ' strip' → logprob: -15.886415481567383
    10. '.readline' → logprob: -16.011415481567383

Token 611: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0006055758567526937
    2. '))' → logprob: -8.000605583190918
    3. '()' → logprob: -8.625605583190918
    4. '()))
' → logprob: -10.000605583190918
    5. '().' → logprob: -10.125605583190918
    6. '(' → logprob: -13.000605583190918
    7. '())' → logprob: -13.750605583190918
    8. '())))' → logprob: -14.000605583190918
    9. '()
' → logprob: -14.500605583190918
    10. '()));' → logprob: -15.500605583190918

Token 612: '+(' (ID: 31717)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071382587775588036
    2. ' for' → logprob: -5.757138252258301
    3. '()' → logprob: -6.007138252258301
    4. ')]' → logprob: -7.257138252258301
    5. '   ' → logprob: -7.632138252258301
    6. 'for' → logprob: -8.6321382522583
    7. ']' → logprob: -9.2571382522583
    8. ' ' → logprob: -11.8821382522583
    9. ')
' → logprob: -12.6321382522583
    10. '())' → logprob: -12.8821382522583

Token 613: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034204511903226376
    2. '0' → logprob: -6.378420352935791
    3. ')' → logprob: -7.253420352935791
    4. '(i' → logprob: -8.25342082977295
    5. ' i' → logprob: -8.25342082977295
    6. 'idx' → logprob: -8.87842082977295
    7. '_i' → logprob: -9.50342082977295
    8. 'index' → logprob: -9.50342082977295
    9. ')i' → logprob: -10.00342082977295
    10. '(' → logprob: -10.62842082977295

Token 614: '+' (ID: 10)
  Prédit: ',)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',)' → logprob: -7.040457421680912e-05
    2. ',' → logprob: -10.250070571899414
    3. ',)
' → logprob: -10.625070571899414
    4. ')' → logprob: -11.625070571899414
    5. ',),' → logprob: -14.625070571899414
    6. '[' → logprob: -14.625070571899414
    7. ',:)' → logprob: -15.125070571899414
    8. ',
' → logprob: -16.000070571899414
    9. ' ,' → logprob: -16.125070571899414
    10. ',))
' → logprob: -16.500070571899414

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013428091071546078
    2. '0' → logprob: -4.388428211212158
    3. ' ' → logprob: -7.013428211212158
    4. ')' → logprob: -11.513427734375
    5. '(' → logprob: -12.263427734375
    6. ' (' → logprob: -13.388427734375
    7. '
' → logprob: -14.638427734375
    8. ' )' → logprob: -14.763427734375
    9. ',' → logprob: -15.263427734375
    10. '=' → logprob: -15.638427734375

Token 616: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.006734438240528107
    2. ')' → logprob: -5.006734371185303
    3. ',' → logprob: -11.256734848022461
    4. ',)
' → logprob: -12.131734848022461
    5. ' )' → logprob: -14.756734848022461
    6. ' ,' → logprob: -15.756734848022461
    7. ',),' → logprob: -16.50673484802246
    8. ',:)' → logprob: -16.50673484802246
    9. ')
' → logprob: -18.13173484802246
    10. '),' → logprob: -18.38173484802246

Token 617: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5038893818855286
    2. ')' → logprob: -1.2538893222808838
    3. '<|end|>' → logprob: -2.878889322280884
    4. 'for' → logprob: -3.628889322280884
    5. '
' → logprob: -4.128889560699463
    6. '<|end|>' → logprob: -5.378889560699463
    7. '	for' → logprob: -6.003889560699463
    8. '   ' → logprob: -6.378889560699463
    9. ' ' → logprob: -6.753889560699463
    10. ' )' → logprob: -7.378889560699463

Token 618: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2758944630622864
    2. '_' → logprob: -1.5258944034576416
    3. ' range' → logprob: -3.7758944034576416
    4. '_range' → logprob: -7.275894641876221
    5. 'i' → logprob: -9.900894165039062
    6. 'in' → logprob: -11.900894165039062
    7. ' _' → logprob: -12.025894165039062
    8. '_i' → logprob: -12.650894165039062
    9. '_in' → logprob: -13.525894165039062
    10. ' in' → logprob: -13.650894165039062

Token 619: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269468188285828
    2. 'in' → logprob: -2.0176947116851807
    3. 'range' → logprob: -11.392694473266602
    4. 'n' → logprob: -13.142694473266602
    5. 'N' → logprob: -13.767694473266602
    6. ' range' → logprob: -14.142694473266602
    7. '_' → logprob: -14.267694473266602
    8. ' ' → logprob: -14.267694473266602
    9. 's' → logprob: -14.392694473266602
    10. '_in' → logprob: -14.892694473266602

Token 620: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '
' → logprob: -20.875017166137695
    4. '(range' → logprob: -21.000017166137695
    5. 'rang' → logprob: -21.500017166137695
    6. '	range' → logprob: -21.625017166137695
    7. 'r' → logprob: -22.125017166137695
    8. 'N' → logprob: -22.375017166137695
    9. '0' → logprob: -23.250017166137695
    10. '   ' → logprob: -23.625017166137695

Token 621: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014166445471346378
    2. 'N' → logprob: -4.264166355133057
    3. '(' → logprob: -13.014166831970215
    4. '	N' → logprob: -14.764166831970215
    5. '(
' → logprob: -15.639166831970215
    6. ' N' → logprob: -16.5141658782959
    7. '   ' → logprob: -16.7641658782959
    8. '
' → logprob: -17.5141658782959
    9. '<N' → logprob: -17.6391658782959
    10. ',N' → logprob: -18.1391658782959

Token 622: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44116753339767456
    2. ')]' → logprob: -1.1911675930023193
    3. ')' → logprob: -2.9411675930023193
    4. ' ]' → logprob: -10.691167831420898
    5. '   ' → logprob: -11.441167831420898
    6. '])' → logprob: -13.066167831420898
    7. '`]' → logprob: -13.191167831420898
    8. ' ' → logprob: -13.316167831420898
    9. ']
' → logprob: -13.816167831420898
    10. ' )' → logprob: -13.941167831420898

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00883579347282648
    2. '
' → logprob: -5.758835792541504
    3. '<|end|>' → logprob: -6.133835792541504
    4. ' points' → logprob: -6.508835792541504
    5. 'indices' → logprob: -7.258835792541504
    6. 'points' → logprob: -8.008835792541504
    7. '    
' → logprob: -8.133835792541504
    8. ' indices' → logprob: -8.508835792541504
    9. ' comb' → logprob: -9.758835792541504
    10. 'idx' → logprob: -10.133835792541504

Token 624: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.42467987537384033
    2. ' points' → logprob: -1.6746798753738403
    3. 'h' → logprob: -3.049679756164551
    4. '   ' → logprob: -3.924679756164551
    5. 'conv' → logprob: -3.924679756164551
    6. '#' (adapté à ' #') → logprob: -4.049679756164551
    7. 'ps' → logprob: -5.049679756164551
    8. 'idx' → logprob: -5.174679756164551
    9. ' #' → logprob: -5.674679756164551
    10. 'if' → logprob: -6.049679756164551

Token 625: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4114736020565033
    2. ' points' → logprob: -2.536473512649536
    3. 'h' → logprob: -2.786473512649536
    4. 'conv' → logprob: -3.161473512649536
    5. '#' → logprob: -3.536473512649536
    6. 'for' → logprob: -3.786473512649536
    7. 'idx' → logprob: -4.661473751068115
    8. 'if' → logprob: -4.786473751068115
    9. 'ps' → logprob: -4.911473751068115
    10. ' hull' → logprob: -5.161473751068115

Token 626: ':' (ID: 25)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0387122668325901
    2. ' =' → logprob: -3.5387122631073
    3. '=' → logprob: -5.038712501525879
    4. '_sorted' → logprob: -6.538712501525879
    5. '<|end|>' → logprob: -8.038712501525879
    6. ',' → logprob: -9.038712501525879
    7. 'sorted' → logprob: -9.038712501525879
    8. ')' → logprob: -9.288712501525879
    9. 'sort' → logprob: -9.663712501525879
    10. 'points' → logprob: -9.913712501525879

Token 627: ' (' (ID: 350)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.5223161578178406
    2. '[(' → logprob: -1.7723162174224854
    3. 'points' → logprob: -2.0223162174224854
    4. ' [(' → logprob: -2.7723162174224854
    5. '(points' → logprob: -4.272315979003906
    6. '[i' → logprob: -5.522315979003906
    7. ' sorted' → logprob: -5.772315979003906
    8. 'sorted' → logprob: -5.897315979003906
    9. ' [' → logprob: -6.022315979003906
    10. ' coordinates' → logprob: -6.397315979003906

Token 628: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003874166286550462
    2. ' x' → logprob: -8.250387191772461
    3. '0' → logprob: -9.125387191772461
    4. 'points' → logprob: -11.500387191772461
    5. 'int' → logprob: -12.250387191772461
    6. ' points' → logprob: -13.875387191772461
    7. ' ' → logprob: -14.375387191772461
    8. '   ' → logprob: -14.750387191772461
    9. ')' → logprob: -15.875387191772461
    10. ')x' → logprob: -16.50038719177246

Token 629: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006824774201959372
    2. ',y' → logprob: -5.006824970245361
    3. ' ,' → logprob: -9.131824493408203
    4. ' y' → logprob: -14.631824493408203
    5. '[' → logprob: -15.381824493408203
    6. '0' → logprob: -15.756824493408203
    7. 'y' → logprob: -15.881824493408203
    8. ',
' → logprob: -16.131824493408203
    9. ',Y' → logprob: -16.381824493408203
    10. ',int' → logprob: -16.506824493408203

Token 630: ',index' (ID: 88068)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06325526535511017
    2. ',index' → logprob: -2.8132553100585938
    3. ',i' → logprob: -7.938255310058594
    4. ',)' → logprob: -8.188255310058594
    5. ',id' → logprob: -8.438255310058594
    6. ',n' → logprob: -8.938255310058594
    7. ')' → logprob: -9.313255310058594
    8. 'index' → logprob: -9.313255310058594
    9. ',label' → logprob: -9.938255310058594
    10. ',num' → logprob: -11.563255310058594

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.602024900028482e-05
    2. ')
' → logprob: -10.125085830688477
    3. '   ' → logprob: -11.000085830688477
    4. ' )' → logprob: -11.000085830688477
    5. '<|end|>' → logprob: -12.250085830688477
    6. ',' → logprob: -12.375085830688477
    7. '),' → logprob: -14.250085830688477
    8. ')

' → logprob: -14.500085830688477
    9. '<|end|>' → logprob: -15.000085830688477
    10. '))' → logprob: -15.250085830688477

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505883693695068
    2. '
' → logprob: -1.4255883693695068
    3. ' points' → logprob: -2.300588369369507
    4. 'points' → logprob: -3.550588369369507
    5. '    
' → logprob: -5.050588607788086
    6. 'conv' → logprob: -5.050588607788086
    7. ' comb' → logprob: -5.175588607788086
    8. ' 
' → logprob: -5.175588607788086
    9. ' used' → logprob: -5.675588607788086
    10. ' for' → logprob: -5.800588607788086

Token 633: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9735317230224609
    2. ' points' → logprob: -1.348531723022461
    3. 'conv' → logprob: -2.598531723022461
    4. 'h' → logprob: -2.973531723022461
    5. 'ps' → logprob: -3.848531723022461
    6. 'idx' → logprob: -3.973531723022461
    7. '   ' → logprob: -3.973531723022461
    8. 'poly' → logprob: -4.098531723022461
    9. ' hull' → logprob: -4.223531723022461
    10. 'comb' → logprob: -4.348531723022461

Token 634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08928720653057098
    2. ' =' → logprob: -2.464287281036377
    3. 'points' → logprob: -9.714286804199219
    4. '=[' → logprob: -9.839286804199219
    5. '_points' → logprob: -9.839286804199219
    6. 'sorted' → logprob: -9.839286804199219
    7. '=[]' → logprob: -10.464286804199219
    8. '_sorted' → logprob: -10.464286804199219
    9. '.sort' → logprob: -10.839286804199219
    10. 's' → logprob: -11.589286804199219

Token 635: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3748067617416382
    2. '[' → logprob: -1.3748067617416382
    3. '[p' → logprob: -3.1248068809509277
    4. ' [' → logprob: -4.624806880950928
    5. '[list' → logprob: -5.874806880950928
    6. '[s' → logprob: -6.624806880950928
    7. 'sorted' → logprob: -7.374806880950928
    8. ' [(' → logprob: -7.624806880950928
    9. '[x' → logprob: -8.62480640411377
    10. '[i' → logprob: -8.87480640411377

Token 636: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2520858645439148
    2. 'x' → logprob: -1.5020859241485596
    3. 'pt' → logprob: -8.87708568572998
    4. 'points' → logprob: -11.25208568572998
    5. 'point' → logprob: -13.25208568572998
    6. 'px' → logprob: -13.37708568572998
    7. ' p' → logprob: -14.25208568572998
    8. ' x' → logprob: -15.75208568572998
    9. 'pts' → logprob: -16.502086639404297
    10. 'a' → logprob: -16.752086639404297

Token 637: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1517960956552997e-05
    2. '0' → logprob: -11.375011444091797
    3. '
' → logprob: -18.250011444091797
    4. '[:' → logprob: -18.625011444091797
    5. '[:-' → logprob: -19.750011444091797
    6. '][' → logprob: -20.125011444091797
    7. '=' → logprob: -20.250011444091797
    8. '1' → logprob: -20.250011444091797
    9. '[
' → logprob: -20.375011444091797
    10. '#' → logprob: -20.500011444091797

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -17.125
    4. '[' → logprob: -18.625
    5. '   ' → logprob: -18.625
    6. '#' → logprob: -20.125
    7. '۰' → logprob: -20.3125
    8. '０' → logprob: -20.5
    9. ':' → logprob: -20.75
    10. '1' → logprob: -20.875

Token 639: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.12185827642679214
    2. ',p' → logprob: -2.2468583583831787
    3. ',' → logprob: -4.8718581199646
    4. '[' → logprob: -7.1218581199646
    5. '][' → logprob: -8.121858596801758
    6. '0' → logprob: -9.371858596801758
    7. 'p' → logprob: -9.746858596801758
    8. '},' → logprob: -10.371858596801758
    9. ':p' → logprob: -11.121858596801758
    10. ']' → logprob: -11.496858596801758

Token 640: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031777136027812958
    2. ' p' → logprob: -5.753177642822266
    3. '<p' → logprob: -19.003177642822266
    4. '	p' → logprob: -19.253177642822266
    5. ')p' → logprob: -19.503177642822266
    6. ' ' → logprob: -19.753177642822266
    7. '
' → logprob: -19.753177642822266
    8. '   ' → logprob: -20.128177642822266
    9. ' ' → logprob: -20.378177642822266
    10. '0' → logprob: -20.753177642822266

Token 641: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028065370861440897
    2. '[' → logprob: -5.877806663513184
    3. '   ' → logprob: -14.002806663513184
    4. '
' → logprob: -14.377806663513184
    5. ' ' → logprob: -15.502806663513184
    6. '(' → logprob: -16.752805709838867
    7. '```' → logprob: -17.877805709838867
    8. '][' → logprob: -18.627805709838867
    9. ')' → logprob: -19.127805709838867
    10. '  ' → logprob: -19.252805709838867

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -16.75
    4. '   ' → logprob: -17.75
    5. '```' → logprob: -18.375
    6. ')' → logprob: -18.5
    7. '<|end|>' → logprob: -18.75
    8. '[' → logprob: -18.75
    9. ']' → logprob: -18.875
    10. '' → logprob: -19.3125

Token 643: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019324433524161577
    2. ')]' → logprob: -6.501932621002197
    3. ',p' → logprob: -8.126932144165039
    4. ',' → logprob: -9.876932144165039
    5. ' )' → logprob: -10.251932144165039
    6. ',i' → logprob: -11.126932144165039
    7. ')p' → logprob: -11.876932144165039
    8. '[:-' → logprob: -12.251932144165039
    9. ')
' → logprob: -12.501932144165039
    10. ']' → logprob: -12.501932144165039

Token 644: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.54060959815979
    2. 'for' → logprob: -1.16560959815979
    3. ')' → logprob: -2.54060959815979
    4. ',' → logprob: -4.040609359741211
    5. ',p' → logprob: -4.790609359741211
    6. ' )' → logprob: -8.040609359741211
    7. ' ,' → logprob: -8.415609359741211
    8. '
' → logprob: -8.665609359741211
    9. ',)' → logprob: -9.290609359741211
    10. ']' → logprob: -9.790609359741211

Token 645: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04858759790658951
    2. ' p' → logprob: -3.0485875606536865
    3. ')p' → logprob: -16.548587799072266
    4. '	p' → logprob: -17.298587799072266
    5. '<p' → logprob: -17.423587799072266
    6. '_p' → logprob: -17.423587799072266
    7. 'points' → logprob: -17.548587799072266
    8. '
' → logprob: -17.673587799072266
    9. 'pt' → logprob: -17.923587799072266
    10. ' points' → logprob: -18.048587799072266

Token 646: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1270742565393448
    2. 'in' → logprob: -2.1270742416381836
    3. 'p' → logprob: -9.002074241638184
    4. ' p' → logprob: -10.752074241638184
    5. ' ' → logprob: -14.627074241638184
    6. 'i' → logprob: -15.002074241638184
    7. '
' → logprob: -15.627074241638184
    8. 's' → logprob: -16.1270751953125
    9. 'oints' → logprob: -16.5020751953125
    10. '(p' → logprob: -16.7520751953125

Token 647: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.003179855877533555
    2. ' points' → logprob: -5.753180027008057
    3. 'p' → logprob: -13.753179550170898
    4. 'pts' → logprob: -14.503179550170898
    5. '(points' → logprob: -14.878179550170898
    6. 'point' → logprob: -16.2531795501709
    7. '	points' → logprob: -16.5031795501709
    8. 'pt' → logprob: -17.7531795501709
    9. 'oints' → logprob: -18.7531795501709
    10. '[' → logprob: -19.0031795501709

Token 648: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004857530351728201
    2. ' ]' → logprob: -6.129857540130615
    3. '   ' → logprob: -6.504857540130615
    4. ')' → logprob: -7.129857540130615
    5. '
' → logprob: -8.379857063293457
    6. ']
' → logprob: -9.754857063293457
    7. ')]' → logprob: -10.129857063293457
    8. '<|end|>' → logprob: -11.004857063293457
    9. ' ' → logprob: -12.254857063293457
    10. ' )' → logprob: -12.629857063293457

Token 649: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.334303081035614
    2. 'k' → logprob: -1.4593031406402588
    3. ' k' → logprob: -3.459303140640259
    4. '
' → logprob: -4.58430290222168
    5. 'K' → logprob: -6.08430290222168
    6. ' if' → logprob: -6.83430290222168
    7. ' for' → logprob: -7.08430290222168
    8. 'if' → logprob: -7.33430290222168
    9. 'max' → logprob: -7.33430290222168
    10. ' K' → logprob: -7.45930290222168

Token 650: ' Q' (ID: 1486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7089163064956665
    2. 'h' → logprob: -2.208916187286377
    3. 'if' → logprob: -2.583916187286377
    4. 'k' → logprob: -2.708916187286377
    5. 'ans' → logprob: -2.708916187286377
    6. 'from' → logprob: -2.833916187286377
    7. 'K' → logprob: -2.958916187286377
    8. 'max' → logprob: -3.083916187286377
    9. 'used' → logprob: -3.208916187286377
    10. 'conv' → logprob: -3.208916187286377

Token 651: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12764404714107513
    2. '=' → logprob: -2.1276440620422363
    3. '=int' → logprob: -7.252644062042236
    4. '   ' → logprob: -12.502643585205078
    5. ' ' → logprob: -13.752643585205078
    6. '  ' → logprob: -14.127643585205078
    7. ',' → logprob: -14.752643585205078
    8. '=sys' → logprob: -14.752643585205078
    9. '=query' → logprob: -15.377643585205078
    10. '=[]' → logprob: -15.502643585205078

Token 652: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007100477814674377
    2. ' int' → logprob: -7.2507100105285645
    3. '[int' → logprob: -17.125709533691406
    4. '10' → logprob: -17.250709533691406
    5. '   ' → logprob: -17.375709533691406
    6. ' ' → logprob: -17.750709533691406
    7. '  ' → logprob: -18.250709533691406
    8. '
' → logprob: -18.375709533691406
    9. '0' → logprob: -18.500709533691406
    10. '(int' → logprob: -18.625709533691406

Token 653: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.0629870858974755e-05
    2. 'input' → logprob: -10.25006103515625
    3. '()' → logprob: -10.62506103515625
    4. '(sys' → logprob: -14.75006103515625
    5. '(' → logprob: -15.62506103515625
    6. '=input' → logprob: -15.62506103515625
    7. ' input' → logprob: -16.00006103515625
    8. '()
' → logprob: -17.25006103515625
    9. '(
' → logprob: -18.00006103515625
    10. ' (' → logprob: -18.62506103515625

Token 654: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06815899908542633
    2. ')' → logprob: -3.3181591033935547
    3. '()' → logprob: -3.5681591033935547
    4. '())
' → logprob: -6.568159103393555
    5. '()
' → logprob: -10.068159103393555
    6. ')
' → logprob: -11.818159103393555
    7. ' ())' → logprob: -12.568159103393555
    8. '())
' → logprob: -14.068159103393555
    9. ' )' → logprob: -14.318159103393555
    10. '(' → logprob: -14.318159103393555

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703689634799957
    2. ' for' → logprob: -1.8953689336776733
    3. 'for' → logprob: -2.520369052886963
    4. 'queries' → logprob: -6.020369052886963
    5. '<|end|>' → logprob: -6.645369052886963
    6. 'answers' → logprob: -7.270369052886963
    7. ' queries' → logprob: -7.645369052886963
    8. 'query' → logprob: -8.145368576049805
    9. 'indices' → logprob: -8.520368576049805
    10. 'comb' → logprob: -8.645368576049805

Token 656: ' queries' (ID: 32122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006134323193691671
    2. ' for' → logprob: -7.500613212585449
    3. 'queries' (adapté à ' queries') → logprob: -10.75061321258545
    4. '   ' → logprob: -11.37561321258545
    5. 'answers' → logprob: -11.37561321258545
    6. 'comb' → logprob: -11.62561321258545
    7. 'results' → logprob: -12.62561321258545
    8. 'query' → logprob: -13.12561321258545
    9. 'idx' → logprob: -15.00061321258545
    10. 'answer' → logprob: -15.12561321258545

Token 657: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933768391609192
    2. ' =' → logprob: -0.6933768391609192
    3. '=[]' → logprob: -8.443376541137695
    4. ' =[' → logprob: -11.693376541137695
    5. ',' → logprob: -13.818376541137695
    6. '[' → logprob: -13.943376541137695
    7. '=[' → logprob: -14.193376541137695
    8. '[]' → logprob: -14.318376541137695
    9. '[:]' → logprob: -14.443376541137695
    10. ' ' → logprob: -14.818376541137695

Token 658: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1460115611553192
    2. '[int' → logprob: -2.1460115909576416
    3. ' [' → logprob: -4.6460113525390625
    4. '[]' → logprob: -5.6460113525390625
    5. '[t' → logprob: -5.8960113525390625
    6. '[q' → logprob: -6.3960113525390625
    7. '[input' → logprob: -8.771011352539062
    8. '[p' → logprob: -8.896011352539062
    9. '[list' → logprob: -9.396011352539062
    10. '[k' → logprob: -9.521011352539062

Token 659: 'int' (ID: 491)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.001372849685139954
    2. 'list' → logprob: -6.751372814178467
    3. ' tuple' → logprob: -8.876373291015625
    4. '[]' → logprob: -10.751373291015625
    5. 'int' → logprob: -11.126373291015625
    6. '(tuple' → logprob: -11.501373291015625
    7. '[]
' → logprob: -11.751373291015625
    8. '[' → logprob: -12.501373291015625
    9. '
' → logprob: -13.376373291015625
    10. ']' → logprob: -13.501373291015625

Token 660: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0020051265601068735
    2. '()' → logprob: -6.252005100250244
    3. '()]' → logprob: -10.127005577087402
    4. 'input' → logprob: -11.127005577087402
    5. '(' → logprob: -11.627005577087402
    6. ' (' → logprob: -12.377005577087402
    7. '(
' → logprob: -13.002005577087402
    8. '()
' → logprob: -13.127005577087402
    9. '=input' → logprob: -13.877005577087402
    10. '
' → logprob: -14.127005577087402

Token 661: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16511467099189758
    2. ')' → logprob: -2.165114641189575
    3. '()' → logprob: -3.290114641189575
    4. '().' → logprob: -9.290114402770996
    5. '()
' → logprob: -9.790114402770996
    6. '())
' → logprob: -10.790114402770996
    7. '()]' → logprob: -10.915114402770996
    8. ' ())' → logprob: -11.165114402770996
    9. '
' → logprob: -12.665114402770996
    10. ' )' → logprob: -12.790114402770996

Token 662: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05970869958400726
    2. 'for' → logprob: -2.934708595275879
    3. ')' → logprob: -5.559708595275879
    4. ']' → logprob: -7.934708595275879
    5. '   ' → logprob: -8.059708595275879
    6. ' ' → logprob: -8.809708595275879
    7. '	for' → logprob: -9.684708595275879
    8. '<|end|>' → logprob: -10.559708595275879
    9. ' )' → logprob: -11.434708595275879
    10. ' ]' → logprob: -11.684708595275879

Token 663: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36723804473876953
    2. '_' → logprob: -1.3672380447387695
    3. ' range' → logprob: -2.9922380447387695
    4. 'in' → logprob: -6.7422380447387695
    5. '_range' → logprob: -7.2422380447387695
    6. ' in' → logprob: -7.9922380447387695
    7. '
' → logprob: -9.61723804473877
    8. '_in' → logprob: -10.61723804473877
    9. 'i' → logprob: -11.24223804473877
    10. '_i' → logprob: -11.49223804473877

Token 664: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.9743012671824545e-05
    2. ' range' → logprob: -11.125020027160645
    3. 'in' → logprob: -12.375020027160645
    4. '(range' → logprob: -14.625020027160645
    5. 'Q' → logprob: -16.000019073486328
    6. 'ange' → logprob: -16.625019073486328
    7. '(' → logprob: -17.000019073486328
    8. '0' → logprob: -18.375019073486328
    9. '[' → logprob: -18.500019073486328
    10. ')' → logprob: -18.750019073486328

Token 665: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.935296834039036e-06
    2. ' range' → logprob: -12.75000286102295
    3. 'Q' → logprob: -20.375003814697266
    4. '
' → logprob: -22.000003814697266
    5. '(range' → logprob: -22.000003814697266
    6. '	range' → logprob: -24.625003814697266
    7. 'query' → logprob: -24.750003814697266
    8. 'r' → logprob: -25.125003814697266
    9. '[' → logprob: -25.250003814697266
    10. 'ranges' → logprob: -25.375003814697266

Token 666: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.006715370807796717
    2. 'Q' → logprob: -5.006715297698975
    3. '	Q' → logprob: -17.881715774536133
    4. '(' → logprob: -18.256715774536133
    5. ' Q' → logprob: -18.256715774536133
    6. ',Q' → logprob: -19.131715774536133
    7. '<Q' → logprob: -19.756715774536133
    8. '   ' → logprob: -19.881715774536133
    9. '_Q' → logprob: -20.631715774536133
    10. '
' → logprob: -20.631715774536133

Token 667: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03598780184984207
    2. ')' → logprob: -4.035987854003906
    3. ']' → logprob: -4.035987854003906
    4. '])' → logprob: -12.410987854003906
    5. '()]' → logprob: -13.285987854003906
    6. ')])' → logprob: -13.285987854003906
    7. ' ]' → logprob: -13.785987854003906
    8. ')],' → logprob: -14.035987854003906
    9. ' )' → logprob: -14.785987854003906
    10. '])]' → logprob: -14.910987854003906

Token 668: '   ' (ID: 271)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.9067089557647705
    2. 'max' → logprob: -1.6567089557647705
    3. '   ' → logprob: -1.7817089557647705
    4. 'answer' → logprob: -2.5317089557647705
    5. ' answers' → logprob: -3.6567089557647705
    6. 'results' → logprob: -3.7817089557647705
    7. 'idx' → logprob: -4.156708717346191
    8. 'for' → logprob: -4.281708717346191
    9. 'res' → logprob: -4.406708717346191
    10. 'ans' → logprob: -4.656708717346191

Token 669: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2603025436401367
    2. 'max' → logprob: -2.1353025436401367
    3. 'conv' → logprob: -2.2603025436401367
    4. 'for' → logprob: -2.5103025436401367
    5. 'dp' → logprob: -2.6353025436401367
    6. 'from' → logprob: -3.1353025436401367
    7. 'idx' → logprob: -3.3853025436401367
    8. '#' (adapté à ' #') → logprob: -3.5103025436401367
    9. 'answers' → logprob: -3.6353025436401367
    10. '   ' → logprob: -3.7603025436401367

Token 670: ' Compute' (ID: 45438)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1676892787218094
    2. 'for' → logprob: -2.792689323425293
    3. 'max' → logprob: -3.542689323425293
    4. '#' → logprob: -3.542689323425293
    5. 'ch' → logprob: -5.167689323425293
    6. 'from' → logprob: -5.167689323425293
    7. 'points' → logprob: -5.792689323425293
    8. 'conv' → logprob: -5.792689323425293
    9. 'ps' → logprob: -6.042689323425293
    10. '   ' → logprob: -6.167689323425293

Token 671: ' convex' (ID: 142423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.035726964473724365
    2. 'all' → logprob: -4.160727024078369
    3. 'max' → logprob: -4.535727024078369
    4. 'ch' → logprob: -5.535727024078369
    5. 'full' → logprob: -6.785727024078369
    6. 'conv' → logprob: -6.785727024078369
    7. 'min' → logprob: -7.910727024078369
    8. 'answer' → logprob: -8.035726547241211
    9. 'unique' → logprob: -8.410726547241211
    10. '#' → logprob: -8.410726547241211

Token 672: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04023685306310654
    2. '_h' → logprob: -3.2902369499206543
    3. ' hull' → logprob: -6.165236949920654
    4. 'hul' → logprob: -9.915236473083496
    5. 'points' → logprob: -11.040236473083496
    6. 'layers' → logprob: -12.290236473083496
    7. '_points' → logprob: -12.540236473083496
    8. '-h' → logprob: -12.665236473083496
    9. '_' → logprob: -12.790236473083496
    10. '	h' → logprob: -13.415236473083496

Token 673: ' once' (ID: 4730)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5827676057815552
    2. '   ' → logprob: -0.9577676057815552
    3. ' hull' → logprob: -4.332767486572266
    4. 'points' → logprob: -4.707767486572266
    5. 'all' → logprob: -4.957767486572266
    6. 'ch' → logprob: -5.332767486572266
    7. 'full' → logprob: -5.457767486572266
    8. 'conv' → logprob: -5.707767486572266
    9. 'for' → logprob: -5.832767486572266
    10. ' =' → logprob: -6.207767486572266

Token 674: '
' (ID: 198)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06403425335884094
    2. '   ' → logprob: -3.4390342235565186
    3. 'full' → logprob: -4.314034461975098
    4. 'ch' → logprob: -5.064034461975098
    5. ' hull' → logprob: -5.314034461975098
    6. 'all' → logprob: -6.189034461975098
    7. 'conv' → logprob: -6.689034461975098
    8. ' full' → logprob: -7.189034461975098
    9. 'pts' → logprob: -8.564034461975098
    10. 'for' → logprob: -8.689034461975098

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6364195942878723
    2. 'h' → logprob: -0.8864195942878723
    3. 'full' → logprob: -3.5114195346832275
    4. ' full' → logprob: -4.636419773101807
    5. 'ch' → logprob: -5.011419773101807
    6. 'all' → logprob: -5.386419773101807
    7. ' hull' → logprob: -5.761419773101807
    8. 'conv' → logprob: -7.011419773101807
    9. ' all' → logprob: -7.386419773101807
    10. ' for' → logprob: -7.386419773101807

Token 676: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005244072061032057
    2. 'ch' → logprob: -5.380244255065918
    3. '   ' → logprob: -8.130244255065918
    4. 'ps' → logprob: -9.380244255065918
    5. ' hull' → logprob: -9.755244255065918
    6. 'pts' → logprob: -10.005244255065918
    7. 'conv' → logprob: -10.130244255065918
    8. 'points' → logprob: -10.880244255065918
    9. 'hs' → logprob: -11.255244255065918
    10. 'full' → logprob: -11.505244255065918

Token 677: '_pts' (ID: 111072)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194188952445984
    2. ' =' → logprob: -1.5019419193267822
    3. '_points' → logprob: -11.501941680908203
    4. 'points' → logprob: -13.626941680908203
    5. '_pts' → logprob: -15.501941680908203
    6. '=[]' → logprob: -15.626941680908203
    7. '   ' → logprob: -15.751941680908203
    8. 's' → logprob: -16.126941680908203
    9. ' points' → logprob: -16.251941680908203
    10. ',' → logprob: -16.376941680908203

Token 678: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132633566856384
    2. '=' → logprob: -1.3132634162902832
    3. 's' → logprob: -15.188262939453125
    4. '_points' → logprob: -15.188262939453125
    5. '=_' → logprob: -15.813262939453125
    6. '=[' → logprob: -15.938262939453125
    7. '_indices' → logprob: -15.938262939453125
    8. '_idx' → logprob: -15.938262939453125
    9. ' ' → logprob: -16.438262939453125
    10. '_' → logprob: -16.438262939453125

Token 679: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.008373082615435123
    2. '[' → logprob: -5.008373260498047
    3. '[(' → logprob: -7.008373260498047
    4. ' convex' → logprob: -7.508373260498047
    5. 'cross' → logprob: -9.383373260498047
    6. '[c' → logprob: -10.633373260498047
    7. ' [' → logprob: -10.633373260498047
    8. '[p' → logprob: -10.883373260498047
    9. '(conv' → logprob: -11.258373260498047
    10. '[h' → logprob: -12.133373260498047

Token 680: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0003000696888193488
    2. 'h' → logprob: -8.125300407409668
    3. '(h' → logprob: -13.250300407409668
    4. '(points' → logprob: -14.000300407409668
    5. '_points' → logprob: -14.125300407409668
    6. '_pts' → logprob: -14.875300407409668
    7. 'points' → logprob: -16.12529945373535
    8. '_' → logprob: -16.75029945373535
    9. ' hull' → logprob: -17.37529945373535
    10. 's' → logprob: -17.75029945373535

Token 681: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00016349162615370005
    2. 'h' → logprob: -9.000163078308105
    3. '_h' → logprob: -11.125163078308105
    4. 'all' → logprob: -11.750163078308105
    5. 'ul' → logprob: -12.250163078308105
    6. 'ulls' → logprob: -12.875163078308105
    7. '[' → logprob: -13.625163078308105
    8. 'ill' → logprob: -14.250163078308105
    9. '_' → logprob: -14.250163078308105
    10. '(h' → logprob: -14.375163078308105

Token 682: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014225680381059647
    2. '([(' → logprob: -4.639225482940674
    3. '([' → logprob: -5.514225482940674
    4. '((' → logprob: -8.514225959777832
    5. '(ps' → logprob: -8.639225959777832
    6. '(pt' → logprob: -10.889225959777832
    7. '[(' → logprob: -11.264225959777832
    8. '(points' → logprob: -11.764225959777832
    9. 'pts' → logprob: -12.514225959777832
    10. '(list' → logprob: -13.264225959777832

Token 683: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.0008647724171169102
    2. 'ps' → logprob: -7.8758649826049805
    3. '[(' → logprob: -8.12586498260498
    4. ' pts' → logprob: -8.87586498260498
    5. '[' → logprob: -10.25086498260498
    6. 'pt' → logprob: -11.62586498260498
    7. 'points' → logprob: -13.75086498260498
    8. '(' → logprob: -13.87586498260498
    9. '   ' → logprob: -14.25086498260498
    10. '_pts' → logprob: -14.50086498260498

Token 684: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024793429765850306
    2. ')
' → logprob: -6.002479553222656
    3. ')

' → logprob: -13.127479553222656
    4. '   ' → logprob: -14.877479553222656
    5. ' )' → logprob: -15.002479553222656
    6. ')
' → logprob: -15.002479553222656
    7. '()' → logprob: -15.377479553222656
    8. ')#' → logprob: -16.127479553222656
    9. '())' → logprob: -16.377479553222656
    10. ')[' → logprob: -16.627479553222656

Token 685: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4102189540863037
    2. '   ' → logprob: -1.2852189540863037
    3. 'idx' → logprob: -4.035219192504883
    4. ' hull' → logprob: -4.285219192504883
    5. '#' → logprob: -5.410219192504883
    6. 'for' → logprob: -5.535219192504883
    7. ' for' → logprob: -5.535219192504883
    8. 'index' → logprob: -6.035219192504883
    9. 'indices' → logprob: -6.535219192504883
    10. 'conv' → logprob: -7.035219192504883

Token 686: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10884886980056763
    2. 'for' → logprob: -3.858848810195923
    3. 'idx' → logprob: -4.233849048614502
    4. '   ' → logprob: -4.233849048614502
    5. ' hull' → logprob: -4.483849048614502
    6. 'if' → logprob: -5.483849048614502
    7. '#' → logprob: -5.483849048614502
    8. 'index' → logprob: -5.483849048614502
    9. 'area' → logprob: -5.608849048614502
    10. 'point' → logprob: -5.733849048614502

Token 687: '_set' (ID: 5451)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.66544508934021
    2. '_pts' → logprob: -1.79044508934021
    3. ' =' → logprob: -1.91544508934021
    4. '_points' → logprob: -2.79044508934021
    5. '_set' → logprob: -3.41544508934021
    6. '_idxs' → logprob: -3.79044508934021
    7. '_ids' → logprob: -4.165445327758789
    8. '_indices' → logprob: -4.290445327758789
    9. ',' → logprob: -5.040445327758789
    10. '_' → logprob: -5.290445327758789

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707229495048523
    2. '=' → logprob: -1.1370723247528076
    3. '=set' → logprob: -8.512072563171387
    4. ' ={' → logprob: -16.88707160949707
    5. '={' → logprob: -17.26207160949707
    6. '={}' → logprob: -17.51207160949707
    7. ' =
' → logprob: -17.63707160949707
    8. '＝' → logprob: -17.63707160949707
    9. 's' → logprob: -17.88707160949707
    10. '={"' → logprob: -18.01207160949707

Token 689: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -5.796184723294573e-06
    2. '{' → logprob: -12.750005722045898
    3. ' set' → logprob: -12.750005722045898
    4. '=set' → logprob: -20.6250057220459
    5. '	set' → logprob: -20.8750057220459
    6. '(set' → logprob: -21.3750057220459
    7. ' {' → logprob: -23.6250057220459
    8. '{s' → logprob: -24.3750057220459
    9. '{
' → logprob: -25.3750057220459
    10. ')set' → logprob: -25.7500057220459

Token 690: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0003112711710855365
    2. '((' → logprob: -8.125310897827148
    3. '(p' → logprob: -11.875310897827148
    4. 'h' → logprob: -12.750310897827148
    5. '(' → logprob: -12.875310897827148
    6. '([(' → logprob: -13.750310897827148
    7. '([' → logprob: -14.000310897827148
    8. '(tuple' → logprob: -15.500310897827148
    9. '(map' → logprob: -15.750310897827148
    10. '()' → logprob: -16.50031089782715

Token 691: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.000746736885048449
    2. '(' → logprob: -8.375746726989746
    3. 'ul' → logprob: -9.125746726989746
    4. '(h' → logprob: -9.250746726989746
    5. '([' → logprob: -9.625746726989746
    6. 'h' → logprob: -10.375746726989746
    7. 'ulls' → logprob: -10.875746726989746
    8. ' hull' → logprob: -11.125746726989746
    9. '(u' → logprob: -11.250746726989746
    10. '(p' → logprob: -11.250746726989746

Token 692: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -8.41866585687967e-06
    2. '_pt' → logprob: -12.625008583068848
    3. 'pts' → logprob: -13.000008583068848
    4. ')' → logprob: -13.500008583068848
    5. '_points' → logprob: -15.125008583068848
    6. '(' → logprob: -15.500008583068848
    7. 'Pts' → logprob: -15.875008583068848
    8. '```' → logprob: -16.37500762939453
    9. '[(' → logprob: -16.50000762939453
    10. '((' → logprob: -16.75000762939453

Token 693: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.750004768371582
    3. '())' → logprob: -13.875004768371582
    4. '   ' → logprob: -14.625004768371582
    5. ' )' → logprob: -14.750004768371582
    6. '()' → logprob: -15.875004768371582
    7. '<|end|>' → logprob: -16.7500057220459
    8. '))' → logprob: -17.1250057220459
    9. ')}' → logprob: -17.1250057220459
    10. '),' → logprob: -17.5000057220459

Token 694: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1556557416915894
    2. 'answers' → logprob: -1.5306557416915894
    3. 'index' → logprob: -2.280655860900879
    4. '   ' → logprob: -2.280655860900879
    5. 'answer' → logprob: -2.530655860900879
    6. 'h' → logprob: -3.655655860900879
    7. '#' → logprob: -3.655655860900879
    8. 'for' → logprob: -3.780655860900879
    9. 'point' → logprob: -4.155655860900879
    10. 'area' → logprob: -4.655655860900879

Token 695: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7764893770217896
    2. 'index' → logprob: -2.2764892578125
    3. 'answer' → logprob: -2.7764892578125
    4. 'answers' → logprob: -2.9014892578125
    5. 'for' → logprob: -3.2764892578125
    6. 'point' → logprob: -3.2764892578125
    7. 'inside' → logprob: -3.2764892578125
    8. 'h' → logprob: -3.5264892578125
    9. '#' (adapté à ' #') → logprob: -3.6514892578125
    10. 'res' → logprob: -4.0264892578125

Token 696: ' Map' (ID: 7343)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0479862689971924
    2. 'for' → logprob: -2.0479862689971924
    3. 'inside' → logprob: -2.0479862689971924
    4. '#' → logprob: -2.4229862689971924
    5. 'idx' → logprob: -2.4229862689971924
    6. 'dp' → logprob: -3.2979862689971924
    7. 'inner' → logprob: -3.5479862689971924
    8. 'from' → logprob: -3.7979862689971924
    9. 'max' → logprob: -4.672986030578613
    10. 'non' → logprob: -4.672986030578613

Token 697: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.0746128559112549
    2. 'pt' → logprob: -1.5746128559112549
    3. 'idx' → logprob: -2.324612855911255
    4. 'from' → logprob: -2.574612855911255
    5. ' point' → logprob: -2.949612855911255
    6. ' pt' → logprob: -3.074612855911255
    7. ' idx' → logprob: -3.074612855911255
    8. 'index' → logprob: -3.074612855911255
    9. ' from' → logprob: -3.324612855911255
    10. 'p' → logprob: -4.199612617492676

Token 698: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9376519322395325
    2. 'to' → logprob: -1.3126518726348877
    3. 's' → logprob: -1.5626518726348877
    4. 'indices' → logprob: -2.8126518726348877
    5. '_indices' → logprob: -4.062652111053467
    6. '_to' → logprob: -4.187652111053467
    7. ' indices' → logprob: -4.312652111053467
    8. 'index' → logprob: -5.437652111053467
    9. '_idx' → logprob: -5.437652111053467
    10. 'idx' → logprob: -5.562652111053467

Token 699: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.20573322474956512
    2. 'point' → logprob: -2.330733299255371
    3. 'points' → logprob: -3.330733299255371
    4. 'p' → logprob: -4.330733299255371
    5. 'idx' → logprob: -4.330733299255371
    6. 'its' → logprob: -4.455733299255371
    7. 'h' → logprob: -5.080733299255371
    8. 'indices' → logprob: -5.955733299255371
    9. 'lambda' → logprob: -6.580733299255371
    10. 'their' → logprob: -7.080733299255371

Token 700: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.3659240007400513
    2. 'point' → logprob: -1.7409240007400513
    3. ' =' → logprob: -1.8659240007400513
    4. '   ' → logprob: -2.1159238815307617
    5. ' idx' → logprob: -2.2409238815307617
    6. 'pt' → logprob: -2.8659238815307617
    7. 'index' → logprob: -3.4909238815307617
    8. 'points' → logprob: -4.240923881530762
    9. 'indices' → logprob: -4.365923881530762
    10. ' point' → logprob: -4.615923881530762

Token 701: '   ' (ID: 271)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.10710151493549347
    2. '   ' → logprob: -3.1071014404296875
    3. 'idx' → logprob: -3.4821014404296875
    4. 'index' → logprob: -4.7321014404296875
    5. 'for' → logprob: -5.2321014404296875
    6. 'pt' → logprob: -5.6071014404296875
    7. 'p' → logprob: -6.1071014404296875
    8. 'mapping' → logprob: -6.6071014404296875
    9. ' point' → logprob: -6.7321014404296875
    10. ' for' → logprob: -6.7321014404296875

Token 702: ' point' (ID: 2438)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.7548027038574219
    2. 'point' (adapté à ' point') → logprob: -0.7548027038574219
    3. 'p' → logprob: -3.129802703857422
    4. ' pt' → logprob: -5.379802703857422
    5. 'idx' → logprob: -5.504802703857422
    6. ' point' → logprob: -5.504802703857422
    7. 'index' → logprob: -6.254802703857422
    8. 'pts' → logprob: -8.004802703857422
    9. ' p' → logprob: -8.254802703857422
    10. 'pos' → logprob: -8.254802703857422

Token 703: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00816984660923481
    2. '_idx' → logprob: -5.508169651031494
    3. '_index' → logprob: -6.008169651031494
    4. '_map' → logprob: -6.633169651031494
    5. '_indices' → logprob: -8.758170127868652
    6. 's' → logprob: -10.008170127868652
    7. '_id' → logprob: -10.258170127868652
    8. '2' → logprob: -10.508170127868652
    9. 'to' → logprob: -10.633170127868652
    10. '_dict' → logprob: -11.508170127868652

Token 704: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0031989887356758118
    2. 'idx' → logprob: -5.753199100494385
    3. ' index' → logprob: -10.878198623657227
    4. '_index' → logprob: -13.378198623657227
    5. ' idx' → logprob: -15.628198623657227
    6. '_idx' → logprob: -15.753198623657227
    7. 'i' → logprob: -15.878198623657227
    8. 'indices' → logprob: -16.253198623657227
    9. 'id' → logprob: -16.378198623657227
    10. 'point' → logprob: -16.503198623657227

Token 705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698091566562653
    2. '=' → logprob: -2.126981019973755
    3. '={' → logprob: -10.001980781555176
    4. '={}' → logprob: -12.751980781555176
    5. '={(' → logprob: -12.876980781555176
    6. '=dict' → logprob: -14.001980781555176
    7. ' ={' → logprob: -14.501980781555176
    8. '={}
' → logprob: -14.876980781555176
    9. '={"' → logprob: -16.501981735229492
    10. '={
' → logprob: -16.626981735229492

Token 706: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0001438266917830333
    2. '{x' → logprob: -9.500144004821777
    3. '{i' → logprob: -10.000144004821777
    4. ' {' → logprob: -11.250144004821777
    5. '{}' → logprob: -13.000144004821777
    6. ' {(' → logprob: -13.000144004821777
    7. '{}
' → logprob: -13.000144004821777
    8. '{k' → logprob: -13.625144004821777
    9. '{s' → logprob: -13.750144004821777
    10. 'dict' → logprob: -14.250144004821777

Token 707: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00634454982355237
    2. '(pt' → logprob: -5.631344318389893
    3. 'p' → logprob: -6.256344318389893
    4. ' (' → logprob: -7.506344318389893
    5. 'pt' → logprob: -8.50634479522705
    6. '(' → logprob: -10.50634479522705
    7. '(x' → logprob: -10.63134479522705
    8. '(point' → logprob: -11.88134479522705
    9. 'point' → logprob: -13.13134479522705
    10. 'tuple' → logprob: -13.25634479522705

Token 708: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11631452292203903
    2. ':p' → logprob: -2.36631441116333
    3. ':h' → logprob: -4.24131441116333
    4. ' :' → logprob: -7.36631441116333
    5. ':i' → logprob: -8.116314888000488
    6. '[' → logprob: -8.741314888000488
    7. ':[' → logprob: -8.866314888000488
    8. '[:' → logprob: -9.741314888000488
    9. ':k' → logprob: -9.866314888000488
    10. ':(' → logprob: -9.866314888000488

Token 709: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28132590651512146
    2. 'for' → logprob: -1.4063259363174438
    3. ':' → logprob: -9.656326293945312
    4. '   ' → logprob: -10.281326293945312
    5. '[' → logprob: -11.406326293945312
    6. '+' → logprob: -11.781326293945312
    7. '	for' → logprob: -11.781326293945312
    8. 'p' → logprob: -11.906326293945312
    9. '(p' → logprob: -11.906326293945312
    10. '(points' → logprob: -12.281326293945312

Token 710: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04458265379071236
    2. 'p' → logprob: -3.1695826053619385
    3. ' i' → logprob: -6.669582843780518
    4. ' p' → logprob: -8.66958236694336
    5. 'range' → logprob: -10.04458236694336
    6. 'enumer' → logprob: -10.16958236694336
    7. ',' → logprob: -10.66958236694336
    8. ',i' → logprob: -11.54458236694336
    9. ' range' → logprob: -11.79458236694336
    10. 'pt' → logprob: -13.16958236694336

Token 711: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.5275694727897644
    2. ',' → logprob: -0.9025694727897644
    3. 'in' → logprob: -5.90256929397583
    4. ',i' → logprob: -6.90256929397583
    5. 'p' → logprob: -8.152569770812988
    6. ',x' → logprob: -9.152569770812988
    7. 'enumer' → logprob: -10.027569770812988
    8. ' in' → logprob: -10.277569770812988
    9. ',s' → logprob: -10.402569770812988
    10. 'points' → logprob: -10.402569770812988

Token 712: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0699412152171135
    2. ' in' → logprob: -2.694941282272339
    3. 'enumer' → logprob: -13.819941520690918
    4. '<|end|>' → logprob: -13.819941520690918
    5. '```' → logprob: -14.569941520690918
    6. 'import' → logprob: -14.944941520690918
    7. ',' → logprob: -15.194941520690918
    8. '
' → logprob: -15.444941520690918
    9. '	in' → logprob: -15.569941520690918
    10. ')' → logprob: -15.694941520690918

Token 713: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.001502598519437015
    2. ' enumerate' → logprob: -6.501502513885498
    3. '```' → logprob: -16.126502990722656
    4. '
' → logprob: -16.126502990722656
    5. 'points' → logprob: -17.751502990722656
    6. 'en' → logprob: -18.001502990722656
    7. 'enum' → logprob: -18.876502990722656
    8. 'zip' → logprob: -20.126502990722656
    9. 'import' → logprob: -20.626502990722656
    10. 'Enumer' → logprob: -21.001502990722656

Token 714: '(' (ID: 7)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.33473581075668335
    2. 'pts' → logprob: -1.3347358703613281
    3. '(points' → logprob: -4.584735870361328
    4. '(' → logprob: -4.709735870361328
    5. ' points' → logprob: -7.084735870361328
    6. ' pts' → logprob: -7.834735870361328
    7. 'h' → logprob: -7.834735870361328
    8. '(h' → logprob: -8.209735870361328
    9. 'ps' → logprob: -10.334735870361328
    10. 'pt' → logprob: -10.334735870361328

Token 715: 'pts' (ID: 24040)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4295334815979004
    2. 'pts' → logprob: -1.0545334815979004
    3. ' points' → logprob: -7.6795334815979
    4. ' pts' → logprob: -8.429533004760742
    5. 'pt' → logprob: -10.179533004760742
    6. 'ps' → logprob: -10.304533004760742
    7. 'h' → logprob: -10.804533004760742
    8. '   ' → logprob: -11.179533004760742
    9. '	points' → logprob: -11.304533004760742
    10. 'point' → logprob: -12.054533004760742

Token 716: ')}

' (ID: 184554)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0001507405104348436
    2. ')}' → logprob: -9.000150680541992
    3. ' }' → logprob: -10.875150680541992
    4. ')' → logprob: -12.000150680541992
    5. '})' → logprob: -13.500150680541992
    6. '}
' → logprob: -14.875150680541992
    7. '   ' → logprob: -15.250150680541992
    8. '}}' → logprob: -16.625150680541992
    9. ' ' → logprob: -16.875150680541992
    10. ',' → logprob: -17.250150680541992

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.422302484512329
    2. 'for' → logprob: -1.422302484512329
    3. 'answer' → logprob: -1.547302484512329
    4. 'answers' → logprob: -1.922302484512329
    5. 'idx' → logprob: -3.297302484512329
    6. 'max' → logprob: -3.922302484512329
    7. 'selected' → logprob: -4.17230224609375
    8. '#' → logprob: -4.29730224609375
    9. 'res' → logprob: -4.67230224609375
    10. 'ans' → logprob: -4.79730224609375

Token 718: ' #' (ID: 1069)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.8191457986831665
    2. 'answers' → logprob: -1.8191457986831665
    3. 'for' → logprob: -2.069145679473877
    4. 'answer' → logprob: -2.194145679473877
    5. 'dp' → logprob: -2.319145679473877
    6. 'idx' → logprob: -2.819145679473877
    7. 'res' → logprob: -2.944145679473877
    8. '#' (adapté à ' #') → logprob: -3.069145679473877
    9. 'max' → logprob: -3.944145679473877
    10. 'ans' → logprob: -4.194145679473877

Token 719: ' Pre' (ID: 4659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3392419815063477
    2. 'h' → logprob: -1.4642419815063477
    3. 'for' → logprob: -2.4642419815063477
    4. 'answers' → logprob: -2.8392419815063477
    5. 'inside' → logprob: -2.9642419815063477
    6. '#' → logprob: -3.0892419815063477
    7. 'answer' → logprob: -3.2142419815063477
    8. 'idx' → logprob: -3.4642419815063477
    9. 'max' → logprob: -3.4642419815063477
    10. 'res' → logprob: -3.7142419815063477

Token 720: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.11558841913938522
    2. 'pare' → logprob: -2.365588426589966
    3. 'process' → logprob: -4.865588188171387
    4. 'dict' → logprob: -5.615588188171387
    5. 'serve' → logprob: -6.490588188171387
    6. 'fix' → logprob: -7.115588188171387
    7. ' compute' → logprob: -7.740588188171387
    8. 'sum' → logprob: -8.365588188171387
    9. 'computed' → logprob: -8.365588188171387
    10. 'calculate' → logprob: -8.865588188171387

Token 721: ' all' (ID: 722)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.769781231880188
    2. 'dp' → logprob: -1.894781231880188
    3. 'h' → logprob: -2.2697811126708984
    4. ' hull' → logprob: -2.2697811126708984
    5. 'max' → logprob: -2.3947811126708984
    6. ' dp' → logprob: -2.7697811126708984
    7. ' from' → logprob: -3.2697811126708984
    8. ' answers' → logprob: -3.6447811126708984
    9. ' answer' → logprob: -3.7697811126708984
    10. 'from' → logprob: -3.7697811126708984

Token 722: ' subsets' (ID: 165377)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2425618171691895
    2. 'sub' → logprob: -1.3675618171691895
    3. ' subsets' → logprob: -1.4925618171691895
    4. 'conv' → logprob: -2.2425618171691895
    5. 'k' → logprob: -2.9925618171691895
    6. 'possible' → logprob: -4.8675618171691895
    7. 'subset' → logprob: -4.9925618171691895
    8. ' convex' → logprob: -4.9925618171691895
    9. ' hull' → logprob: -5.2425618171691895
    10. 'com' → logprob: -5.3675618171691895

Token 723: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13007058203220367
    2. 'of' → logprob: -3.005070686340332
    3. '   ' → logprob: -4.130070686340332
    4. 'k' → logprob: -4.505070686340332
    5. ' for' → logprob: -4.630070686340332
    6. 'from' → logprob: -5.255070686340332
    7. ' k' → logprob: -5.380070686340332
    8. ',' → logprob: -5.380070686340332
    9. ' with' → logprob: -5.630070686340332
    10. '[' → logprob: -6.005070686340332

Token 724: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6428388953208923
    2. 'h' → logprob: -1.142838954925537
    3. 'points' → logprob: -2.517838954925537
    4. ' size' → logprob: -3.767838954925537
    5. 'sizes' → logprob: -4.392838954925537
    6. 'k' → logprob: -4.892838954925537
    7. 'range' → logprob: -5.017838954925537
    8. 'pts' → logprob: -5.017838954925537
    9. ' hull' → logprob: -5.392838954925537
    10. '[' → logprob: -5.892838954925537

Token 725: ' k' (ID: 372)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008461152203381062
    2. '4' → logprob: -5.633460998535156
    3. ' ' → logprob: -5.883460998535156
    4. 'k' → logprob: -7.383460998535156
    5. '
' → logprob: -7.758460998535156
    6. '1' → logprob: -7.883460998535156
    7. 'from' → logprob: -9.258460998535156
    8. '```' → logprob: -9.383460998535156
    9. 'len' → logprob: -9.383460998535156
    10. 'def' → logprob: -9.883460998535156

Token 726: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5131065249443054
    2. '<|end|>' → logprob: -1.5131065845489502
    3. 'for' → logprob: -3.13810658454895
    4. ',' → logprob: -3.13810658454895
    5. 'from' → logprob: -3.63810658454895
    6. ' from' → logprob: -3.63810658454895
    7. 'k' → logprob: -4.388106346130371
    8. ' k' → logprob: -5.013106346130371
    9. '   ' → logprob: -5.263106346130371
    10. '=' → logprob: -6.013106346130371

Token 727: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008752011694014072
    2. ' k' → logprob: -4.75875186920166
    3. 'each' → logprob: -10.00875186920166
    4. 'all' → logprob: -10.63375186920166
    5. '1' → logprob: -11.00875186920166
    6. '3' → logprob: -11.50875186920166
    7. '2' → logprob: -12.00875186920166
    8. 'range' → logprob: -12.13375186920166
    9. ' each' → logprob: -12.63375186920166
    10. 'K' → logprob: -12.63375186920166

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47851821780204773
    2. 'in' → logprob: -0.9785182476043701
    3. 'from' → logprob: -5.853518009185791
    4. '=' → logprob: -7.103518009185791
    5. '1' → logprob: -7.728518009185791
    6. ' =' → logprob: -9.60351848602295
    7. ' ' → logprob: -9.72851848602295
    8. '2' → logprob: -10.35351848602295
    9. ' from' → logprob: -10.47851848602295
    10. '3' → logprob: -10.97851848602295

Token 729: ' queries' (ID: 32122)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009227314963936806
    2. ' range' → logprob: -4.759227275848389
    3. '[' → logprob: -7.634227275848389
    4. '{' → logprob: -10.509227752685547
    5. '3' → logprob: -11.009227752685547
    6. 'set' → logprob: -11.009227752685547
    7. '1' → logprob: -11.134227752685547
    8. '2' → logprob: -11.634227752685547
    9. 'sorted' → logprob: -11.759227752685547
    10. '(range' → logprob: -12.134227752685547

Token 730: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03864460438489914
    2. '<|end|>' → logprob: -3.913644552230835
    3. '
' → logprob: -4.788644790649414
    4. ',' → logprob: -5.288644790649414
    5. ' for' → logprob: -6.538644790649414
    6. '    
' → logprob: -6.913644790649414
    7. '<|end|>' → logprob: -7.913644790649414
    8. ' and' → logprob: -8.163644790649414
    9. ':' → logprob: -8.163644790649414
    10. 'import' → logprob: -8.413644790649414

Token 731: ' avoid' (ID: 8397)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.7559211254119873
    2. 'check' → logprob: -2.5059211254119873
    3. 'solve' → logprob: -2.5059211254119873
    4. 'answer' → logprob: -2.7559211254119873
    5. 'set' → logprob: -2.7559211254119873
    6. 'import' → logprob: -3.1309211254119873
    7. 'build' → logprob: -3.3809211254119873
    8. 'cover' → logprob: -3.5059211254119873
    9. 'find' → logprob: -3.7559211254119873
    10. ' process' → logprob: -4.505921363830566

Token 732: ' recom' (ID: 19119)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8672026991844177
    2. ' recom' → logprob: -1.3672027587890625
    3. ' redundant' → logprob: -2.1172027587890625
    4. 'redu' → logprob: -2.2422027587890625
    5. ' redundancy' → logprob: -3.6172027587890625
    6. ' repeated' → logprob: -3.7422027587890625
    7. ' T' → logprob: -4.6172027587890625
    8. ' recal' → logprob: -4.9922027587890625
    9. 'T' → logprob: -5.1172027587890625
    10. ' duplicates' → logprob: -5.6172027587890625

Token 733: 'putation' (ID: 47913)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.03142337128520012
    2. 'nd' → logprob: -4.656423568725586
    3. 'n' → logprob: -5.781423568725586
    4. 'm' → logprob: -6.406423568725586
    5. 't' → logprob: -6.781423568725586
    6. 'b' → logprob: -6.906423568725586
    7. '[]' → logprob: -6.906423568725586
    8. '```' → logprob: -6.906423568725586
    9. 'None' → logprob: -6.906423568725586
    10. 'ation' → logprob: -7.031423568725586

Token 734: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5152984261512756
    2. '<|end|>' → logprob: -1.1402983665466309
    3. '   ' → logprob: -2.640298366546631
    4. '<|end|>' → logprob: -5.390298366546631
    5. '    
' → logprob: -5.890298366546631
    6. ',' → logprob: -6.515298366546631
    7. ' for' → logprob: -7.140298366546631
    8. '.' → logprob: -7.390298366546631
    9. '  
' → logprob: -8.390298843383789
    10. ':' → logprob: -9.015298843383789

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4959191381931305
    2. '<|end|>' → logprob: -0.9959191083908081
    3. ' for' → logprob: -4.995919227600098
    4. '
' → logprob: -5.620919227600098
    5. ' subsets' → logprob: -5.620919227600098
    6. '<|end|>' → logprob: -5.870919227600098
    7. 'import' → logprob: -7.495919227600098
    8. ',' → logprob: -7.495919227600098
    9. ' from' → logprob: -7.495919227600098
    10. 'from' → logprob: -7.620919227600098

Token 736: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.0917450189590454
    2. 'from' (adapté à ' from') → logprob: -1.3417450189590454
    3. '   ' → logprob: -1.8417450189590454
    4. 'max' → logprob: -2.716744899749756
    5. ' subsets' → logprob: -2.716744899749756
    6. ' for' → logprob: -3.591744899749756
    7. ' max' → logprob: -3.966744899749756
    8. ' k' → logprob: -4.841744899749756
    9. 'subset' → logprob: -4.841744899749756
    10. ' subset' → logprob: -4.966744899749756

Token 737: ' math' (ID: 13324)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0004977479111403227
    2. 'it' → logprob: -9.000497817993164
    3. 'math' → logprob: -9.000497817993164
    4. 'bis' → logprob: -9.250497817993164
    5. ' collections' → logprob: -9.250497817993164
    6. ' itertools' → logprob: -9.750497817993164
    7. 'heap' → logprob: -15.375497817993164
    8. ' math' → logprob: -16.000497817993164
    9. 'sys' → logprob: -16.000497817993164
    10. 'import' → logprob: -17.125497817993164

Token 738: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04557674378156662
    2. ' import' → logprob: -3.420576810836792
    3. '<|end|>' → logprob: -4.545576572418213
    4. '	import' → logprob: -8.170577049255371
    5. '<|end|>' → logprob: -8.420577049255371
    6. '```' → logprob: -8.420577049255371
    7. 'from' → logprob: -8.670577049255371
    8. '_import' → logprob: -9.420577049255371
    9. '#import' → logprob: -9.920577049255371
    10. 'Import' → logprob: -11.045577049255371

Token 739: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0021230189595371485
    2. 'com' → logprob: -6.50212287902832
    3. ' comb' → logprob: -7.50212287902832
    4. 'ceil' → logprob: -9.75212287902832
    5. 'factor' → logprob: -12.25212287902832
    6. 'sqrt' → logprob: -12.50212287902832
    7. 'is' → logprob: -14.12712287902832
    8. 'inf' → logprob: -14.87712287902832
    9. 'log' → logprob: -15.50212287902832
    10. 'combine' → logprob: -15.62712287902832

Token 740: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7625654339790344
    2. 'from' → logprob: -0.7625654339790344
    3. '<|end|>' → logprob: -3.5125653743743896
    4. 'import' → logprob: -4.137565612792969
    5. ',' → logprob: -4.887565612792969
    6. ' from' → logprob: -5.387565612792969
    7. '   ' → logprob: -5.887565612792969
    8. '<|end|>' → logprob: -6.512565612792969
    9. 'for' → logprob: -6.637565612792969
    10. '    
' → logprob: -7.512565612792969

Token 742: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2669992446899414
    2. 'from' → logprob: -3.3919992446899414
    3. 'answer' → logprob: -3.6419992446899414
    4. 'dp' → logprob: -3.6419992446899414
    5. 'answers' → logprob: -3.8919992446899414
    6. 'res' → logprob: -4.141999244689941
    7. 'for' → logprob: -4.141999244689941
    8. 'result' → logprob: -4.266999244689941
    9. 'results' → logprob: -4.266999244689941
    10. 'subset' → logprob: -4.266999244689941

Token 743: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.01379803754389286
    2. 'k' → logprob: -4.888798236846924
    3. '_q' → logprob: -5.888798236846924
    4. '_' → logprob: -7.138798236846924
    5. '_query' → logprob: -7.513798236846924
    6. '_size' → logprob: -7.638798236846924
    7. 'K' → logprob: -7.763798236846924
    8. '(' → logprob: -8.013797760009766
    9. '_n' → logprob: -8.388797760009766
    10. '_len' → logprob: -9.138797760009766

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06495719403028488
    2. ' =' → logprob: -2.8149571418762207
    3. '=max' → logprob: -5.814957141876221
    4. '=query' → logprob: -13.689957618713379
    5. '=int' → logprob: -14.064957618713379
    6. '=k' → logprob: -15.314957618713379
    7. '=len' → logprob: -16.064956665039062
    8. '=
' → logprob: -16.814956665039062
    9. '=

' → logprob: -17.189956665039062
    10. '=}' → logprob: -17.314956665039062

Token 745: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.001504982472397387
    2. ' max' → logprob: -6.501504898071289
    3. 'N' → logprob: -13.501504898071289
    4. '   ' → logprob: -14.626504898071289
    5. 'min' → logprob: -15.251504898071289
    6. '=max' → logprob: -15.501504898071289
    7. '0' → logprob: -15.751504898071289
    8. '(max' → logprob: -16.25150489807129
    9. '	max' → logprob: -17.62650489807129
    10. '[max' → logprob: -17.75150489807129

Token 746: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.686778503237292e-05
    2. 'queries' → logprob: -9.250097274780273
    3. '(Q' → logprob: -14.750097274780273
    4. 'Q' → logprob: -15.875097274780273
    5. '(
' → logprob: -16.625097274780273
    6. '(k' → logprob: -17.500097274780273
    7. '([' → logprob: -17.875097274780273
    8. ' queries' → logprob: -18.375097274780273
    9. '(q' → logprob: -18.500097274780273
    10. '(query' → logprob: -18.625097274780273

Token 747: 'queries' (ID: 63909)
  Prédit: 'queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.00018399098189547658
    2. '(' → logprob: -8.875184059143066
    3. ' queries' → logprob: -10.125184059143066
    4. '[' → logprob: -13.625184059143066
    5. 'query' → logprob: -13.875184059143066
    6. 'quer' → logprob: -14.250184059143066
    7. '   ' → logprob: -15.000184059143066
    8. 'questions' → logprob: -15.250184059143066
    9. 'requests' → logprob: -15.375184059143066
    10. '([' → logprob: -16.37518310546875

Token 748: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15203075110912323
    2. '+' → logprob: -2.2770307064056396
    3. ')+' → logprob: -3.5270307064056396
    4. ' +' → logprob: -5.402030944824219
    5. '<|end|>' → logprob: -6.027030944824219
    6. ' )' → logprob: -6.402030944824219
    7. '<|end|>' → logprob: -9.027030944824219
    8. '
' → logprob: -9.277030944824219
    9. ' ' → logprob: -9.402030944824219
    10. ' if' → logprob: -9.652030944824219

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06208980455994606
    2. ' subsets' → logprob: -3.9370899200439453
    3. '    
' → logprob: -4.312089920043945
    4. '
' → logprob: -4.812089920043945
    5. ' comb' → logprob: -5.812089920043945
    6. ' for' → logprob: -5.937089920043945
    7. ' results' → logprob: -6.937089920043945
    8. ' pre' → logprob: -7.062089920043945
    9. 'k' → logprob: -7.312089920043945
    10. ' all' → logprob: -7.437089920043945

Token 750: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5992652177810669
    2. 'subset' → logprob: -2.7242650985717773
    3. 'memo' → logprob: -2.8492650985717773
    4. 'from' → logprob: -2.8492650985717773
    5. 'for' → logprob: -3.4742650985717773
    6. 'res' → logprob: -3.5992650985717773
    7. 'all' → logprob: -3.5992650985717773
    8. '   ' → logprob: -3.7242650985717773
    9. 'answer' → logprob: -3.8492650985717773
    10. 'cache' → logprob: -3.9742650985717773

Token 751: ' For' (ID: 2214)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8575191497802734
    2. 'subset' → logprob: -1.6075191497802734
    3. 'sub' → logprob: -2.7325191497802734
    4. 'from' → logprob: -2.7325191497802734
    5. 'memo' → logprob: -2.9825191497802734
    6. 'for' → logprob: -3.3575191497802734
    7. 'pre' → logprob: -3.9825191497802734
    8. 'res' → logprob: -4.107519149780273
    9. 'comb' → logprob: -4.107519149780273
    10. 'all' → logprob: -4.357519149780273

Token 752: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4302753210067749
    2. ' k' → logprob: -1.055275321006775
    3. '_k' → logprob: -8.305274963378906
    4. '_' → logprob: -8.555274963378906
    5. ' p' → logprob: -8.930274963378906
    6. ' _' → logprob: -9.180274963378906
    7. 'p' → logprob: -9.430274963378906
    8. 'subset' → logprob: -9.680274963378906
    9. ' subset' → logprob: -9.930274963378906
    10. ' pts' → logprob: -9.930274963378906

Token 753: '=' (ID: 28)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6332095265388489
    2. ' in' → logprob: -0.7582095265388489
    3. 'k' → logprob: -8.383209228515625
    4. '=' → logprob: -8.883209228515625
    5. ' =' → logprob: -9.633209228515625
    6. 'from' → logprob: -10.133209228515625
    7. 's' → logprob: -10.508209228515625
    8. ' ' → logprob: -11.133209228515625
    9. '
' → logprob: -11.258209228515625
    10. 'import' → logprob: -11.383209228515625

Token 754: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8089712262153625
    2. '1' → logprob: -1.1839711666107178
    3. 'max' → logprob: -1.8089711666107178
    4. '2' → logprob: -2.5589711666107178
    5. 'range' → logprob: -5.808971405029297
    6. 'k' → logprob: -6.058971405029297
    7. ' ' → logprob: -7.433971405029297
    8. ' max' → logprob: -7.683971405029297
    9. '0' → logprob: -8.058971405029297
    10. 'N' → logprob: -8.433971405029297

Token 755: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.001236915588379
    2. ':' → logprob: -1.001236915588379
    3. '   ' → logprob: -1.626236915588379
    4. ' to' → logprob: -3.626236915588379
    5. 'to' → logprob: -4.001236915588379
    6. ':
' → logprob: -4.126236915588379
    7. 'and' → logprob: -6.501236915588379
    8. 'for' → logprob: -6.501236915588379
    9. ' and' → logprob: -7.126236915588379
    10. '
' → logprob: -7.376236915588379

Token 756: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0033620083704590797
    2. ' max' → logprob: -5.75336217880249
    3. '
' → logprob: -9.378361701965332
    4. 'N' → logprob: -10.128361701965332
    5. 'for' → logprob: -11.378361701965332
    6. '(max' → logprob: -11.628361701965332
    7. 'range' → logprob: -12.003361701965332
    8. 'min' → logprob: -12.003361701965332
    9. '...' → logprob: -12.503361701965332
    10. '=max' → logprob: -12.503361701965332

Token 757: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.012666566297411919
    2. 'k' → logprob: -4.387666702270508
    3. '   ' → logprob: -9.387666702270508
    4. 'for' → logprob: -10.387666702270508
    5. '
' → logprob: -11.762666702270508
    6. ' k' → logprob: -12.137666702270508
    7. '_n' → logprob: -12.512666702270508
    8. 'max' → logprob: -12.887666702270508
    9. '\' → logprob: -13.262666702270508
    10. '=' → logprob: -13.387666702270508

Token 758: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.599101185798645
    2. ':' → logprob: -1.474101185798645
    3. ' for' → logprob: -2.5991010665893555
    4. 'for' → logprob: -3.0991010665893555
    5. ':
' → logprob: -3.2241010665893555
    6. '   ' → logprob: -3.5991010665893555
    7. '
' → logprob: -3.7241010665893555
    8. 'range' → logprob: -5.7241010665893555
    9. ' range' → logprob: -6.5991010665893555
    10. ',
' → logprob: -6.5991010665893555

Token 759: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06631302088499069
    2. ' for' → logprob: -3.1913130283355713
    3. 'for' → logprob: -4.941312789916992
    4. '<|end|>' → logprob: -5.066312789916992
    5. ' subsets' → logprob: -5.566312789916992
    6. ' pass' → logprob: -6.066312789916992
    7. 'pass' → logprob: -7.191312789916992
    8. 'k' → logprob: -8.066312789916992
    9. '    
' → logprob: -8.441312789916992
    10. 'sub' → logprob: -8.566312789916992

Token 760: ' will' (ID: 738)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45196375250816345
    2. ' for' → logprob: -1.2019637823104858
    3. 'continue' → logprob: -4.826963901519775
    4. ' continue' → logprob: -4.951963901519775
    5. ' will' → logprob: -4.951963901519775
    6. 'will' → logprob: -5.326963901519775
    7. ' can' → logprob: -5.576963901519775
    8. '   ' → logprob: -5.826963901519775
    9. '```' → logprob: -5.826963901519775
    10. '
' → logprob: -5.951963901519775

Token 761: ' find' (ID: 1646)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pre' → logprob: -1.4486808776855469
    2. 'pre' → logprob: -1.6986808776855469
    3. '   ' → logprob: -1.9486808776855469
    4. 'generate' → logprob: -2.073680877685547
    5. 'store' → logprob: -2.573680877685547
    6. 'import' → logprob: -2.948680877685547
    7. ' process' → logprob: -3.323680877685547
    8. ' store' → logprob: -3.573680877685547
    9. 'process' → logprob: -3.698680877685547
    10. 'for' → logprob: -3.698680877685547

Token 762: ' minimal' (ID: 19957)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.2544984817504883
    2. 'h' → logprob: -1.5044984817504883
    3. ' all' → logprob: -1.5044984817504883
    4. 'conv' → logprob: -3.3794984817504883
    5. 'k' → logprob: -3.5044984817504883
    6. 'max' → logprob: -3.7544984817504883
    7. 'the' → logprob: -4.129498481750488
    8. ' the' → logprob: -4.254498481750488
    9. 'valid' → logprob: -4.254498481750488
    10. 'best' → logprob: -4.504498481750488

Token 763: ' area' (ID: 3624)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -1.1514893770217896
    2. 'area' → logprob: -1.2764893770217896
    3. ' areas' → logprob: -2.2764892578125
    4. ' area' → logprob: -2.4014892578125
    5. 'h' → logprob: -3.2764892578125
    6. 'per' → logprob: -3.4014892578125
    7. '_area' → logprob: -3.9014892578125
    8. 'poly' → logprob: -4.2764892578125
    9. 'pol' → logprob: -4.2764892578125
    10. 'polygon' → logprob: -4.4014892578125

Token 764: ' convex' (ID: 142423)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23830024898052216
    2. '   ' → logprob: -1.9883002042770386
    3. ' for' → logprob: -3.863300323486328
    4. ',' → logprob: -4.988300323486328
    5. 'areas' → logprob: -5.238300323486328
    6. 'for' → logprob: -5.363300323486328
    7. '    
' → logprob: -5.613300323486328
    8. ' areas' → logprob: -5.738300323486328
    9. ' subsets' → logprob: -5.863300323486328
    10. '
' → logprob: -6.113300323486328

Token 765: ' polygon' (ID: 65081)
  Prédit: ' hull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hull' → logprob: -0.8408138751983643
    2. '_h' → logprob: -1.0908138751983643
    3. 'h' → logprob: -2.3408138751983643
    4. 'poly' → logprob: -3.0908138751983643
    5. 'polygon' → logprob: -3.8408138751983643
    6. '_k' → logprob: -3.9658138751983643
    7. ' polygon' → logprob: -4.590813636779785
    8. '_' → logprob: -4.965813636779785
    9. ' polygons' → logprob: -5.465813636779785
    10. 'subset' → logprob: -5.590813636779785

Token 766: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5335127115249634
    2. ' for' → logprob: -1.1585127115249634
    3. '
' → logprob: -3.783512592315674
    4. 'for' → logprob: -3.783512592315674
    5. 'result' → logprob: -5.158512592315674
    6. 'results' → logprob: -5.658512592315674
    7. 'areas' → logprob: -5.658512592315674
    8. ' subsets' → logprob: -5.658512592315674
    9. ' areas' → logprob: -5.783512592315674
    10. 'import' → logprob: -6.033512592315674

Token 767: ' those' (ID: 2617)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7866040468215942
    2. 'points' → logprob: -1.4116040468215942
    3. 'max' → logprob: -2.9116039276123047
    4. 'h' → logprob: -2.9116039276123047
    5. 'the' → logprob: -3.1616039276123047
    6. ' k' → logprob: -3.6616039276123047
    7. 'vertices' → logprob: -4.161603927612305
    8. 'that' → logprob: -4.536603927612305
    9. '```' → logprob: -4.536603927612305
    10. 'all' → logprob: -4.786603927612305

Token 768: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8202053904533386
    2. 'points' → logprob: -1.0702054500579834
    3. '#' → logprob: -2.5702054500579834
    4. ' points' → logprob: -3.0702054500579834
    5. 'for' → logprob: -3.1952054500579834
    6. ' for' → logprob: -4.320205211639404
    7. ' k' → logprob: -4.445205211639404
    8. ' subsets' → logprob: -4.820205211639404
    9. 'vertices' → logprob: -5.195205211639404
    10. 'sub' → logprob: -5.695205211639404

Token 769: ' points' (ID: 5571)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6427852511405945
    2. 's' → logprob: -2.2677853107452393
    3. ' subsets' → logprob: -2.5177853107452393
    4. '#' → logprob: -3.0177853107452393
    5. 'for' → logprob: -3.1427853107452393
    6. '   ' → logprob: -3.5177853107452393
    7. ' areas' → logprob: -3.7677853107452393
    8. 'areas' → logprob: -4.01778507232666
    9. ' polygons' → logprob: -4.01778507232666
    10. ' s' → logprob: -4.14278507232666

Token 770: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.305717796087265
    2. '<|end|>' → logprob: -2.180717706680298
    3. '   ' → logprob: -2.305717706680298
    4. ' for' → logprob: -3.805717706680298
    5. '    
' → logprob: -5.305717945098877
    6. '<|end|>' → logprob: -5.555717945098877
    7. ',' → logprob: -5.805717945098877
    8. 'for' → logprob: -6.180717945098877
    9. ' subsets' → logprob: -6.305717945098877
    10. '#' → logprob: -6.430717945098877

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28226438164711
    2. 'dp' → logprob: -2.532264471054077
    3. 'for' → logprob: -3.907264471054077
    4. 'result' → logprob: -4.032264232635498
    5. '#' → logprob: -4.032264232635498
    6. 'answer' → logprob: -4.157264232635498
    7. 'min' → logprob: -4.407264232635498
    8. 'answers' → logprob: -4.407264232635498
    9. ' for' → logprob: -4.657264232635498
    10. ' minimal' → logprob: -5.032264232635498

Token 772: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5053383111953735
    2. 'res' → logprob: -3.005338191986084
    3. 'min' → logprob: -3.005338191986084
    4. 'answer' → logprob: -3.130338191986084
    5. 'from' → logprob: -3.255338191986084
    6. 'memo' → logprob: -3.505338191986084
    7. 'answers' → logprob: -3.505338191986084
    8. 'for' → logprob: -3.755338191986084
    9. 'results' → logprob: -3.880338191986084
    10. 'result' → logprob: -3.880338191986084

Token 773: ' Optimization' (ID: 78012)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49544620513916016
    2. 'for' → logprob: -2.24544620513916
    3. 'from' → logprob: -2.87044620513916
    4. 'memo' → logprob: -2.87044620513916
    5. 'res' → logprob: -3.62044620513916
    6. 'sub' → logprob: -3.74544620513916
    7. 'subset' → logprob: -3.87044620513916
    8. 'result' → logprob: -3.99544620513916
    9. 'best' → logprob: -4.62044620513916
    10. 'min' → logprob: -4.87044620513916

Token 774: ':
' (ID: 734)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7662524580955505
    2. ' #' → logprob: -2.1412525177001953
    3. '
' → logprob: -2.2662525177001953
    4. '#' → logprob: -2.8912525177001953
    5. ' if' → logprob: -3.2662525177001953
    6. '   ' → logprob: -3.5162525177001953
    7. ':' → logprob: -3.5162525177001953
    8. ' from' → logprob: -3.6412525177001953
    9. ' used' → logprob: -3.8912525177001953
    10. ' 
' → logprob: -4.016252517700195

Token 775: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3954236507415771
    2. '   ' → logprob: -1.7704236507415771
    3. ' #' → logprob: -2.145423650741577
    4. ' used' → logprob: -2.270423650741577
    5. ' for' → logprob: -2.645423650741577
    6. ' from' → logprob: -3.020423650741577
    7. 'from' → logprob: -3.020423650741577
    8. 'import' → logprob: -3.520423650741577
    9. ' if' → logprob: -3.770423650741577
    10. ' selected' → logprob: -3.770423650741577

Token 776: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9947089552879333
    2. '#' (adapté à ' #') → logprob: -1.2447090148925781
    3. 'import' → logprob: -2.369709014892578
    4. 'h' → logprob: -2.619709014892578
    5. 'for' → logprob: -3.994709014892578
    6. 'dp' → logprob: -4.119709014892578
    7. 'memo' → logprob: -4.244709014892578
    8. 'point' → logprob: -4.369709014892578
    9. 'all' → logprob: -4.619709014892578
    10. 'subset' → logprob: -4.744709014892578

Token 777: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2114057540893555
    2. 'dp' → logprob: -1.7114057540893555
    3. 'from' → logprob: -1.9614057540893555
    4. 'h' → logprob: -2.2114057540893555
    5. 'for' → logprob: -2.9614057540893555
    6. 'import' → logprob: -3.2114057540893555
    7. 'memo' → logprob: -3.5864057540893555
    8. 'used' → logprob: -3.9614057540893555
    9. 'selected' → logprob: -4.2114057540893555
    10. 'subset' → logprob: -4.5864057540893555

Token 778: ' polygon' (ID: 65081)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5944792628288269
    2. 'h' → logprob: -0.9694792628288269
    3. 'for' → logprob: -3.8444793224334717
    4. 'import' → logprob: -4.469479084014893
    5. 'from' → logprob: -4.594479084014893
    6. 'def' → logprob: -5.344479084014893
    7. 'conv' → logprob: -5.344479084014893
    8. ' #' → logprob: -5.594479084014893
    9. 'all' → logprob: -6.219479084014893
    10. ' for' → logprob: -6.594479084014893

Token 779: ' must' (ID: 2804)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.1672828197479248
    2. 'points' → logprob: -1.4172828197479248
    3. '_points' → logprob: -1.7922828197479248
    4. ' will' → logprob: -2.542282819747925
    5. ' can' → logprob: -3.167282819747925
    6. ' is' → logprob: -3.417282819747925
    7. '#' → logprob: -3.542282819747925
    8. 'vertices' → logprob: -4.292283058166504
    9. '_vertices' → logprob: -4.417283058166504
    10. ' should' → logprob: -4.542283058166504

Token 780: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.42782628536224365
    2. 'be' → logprob: -1.6778262853622437
    3. 'include' → logprob: -2.802826404571533
    4. ' lie' → logprob: -3.302826404571533
    5. ' consist' → logprob: -4.177826404571533
    6. ' include' → logprob: -4.302826404571533
    7. 'use' → logprob: -4.552826404571533
    8. ' have' → logprob: -5.302826404571533
    9. ' use' → logprob: -5.677826404571533
    10. ' only' → logprob: -5.677826404571533

Token 781: ' convex' (ID: 142423)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14034445583820343
    2. 'conv' → logprob: -3.3903443813323975
    3. 'subset' → logprob: -3.6403443813323975
    4. ' a' → logprob: -3.7653443813323975
    5. 'formed' → logprob: -4.515344619750977
    6. 'contained' → logprob: -4.640344619750977
    7. 'on' → logprob: -5.015344619750977
    8. 'made' → logprob: -5.265344619750977
    9. 'com' → logprob: -6.140344619750977
    10. 'constructed' → logprob: -6.390344619750977

Token 782: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39729052782058716
    2. '
' → logprob: -1.5222904682159424
    3. ' and' → logprob: -3.3972904682159424
    4. '#' → logprob: -3.3972904682159424
    5. ',' → logprob: -4.2722907066345215
    6. '.' → logprob: -4.7722907066345215
    7. '    
' → logprob: -4.7722907066345215
    8. 'and' → logprob: -5.1472907066345215
    9. ' for' → logprob: -6.5222907066345215
    10. '<|end|>' → logprob: -6.6472907066345215

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23285704851150513
    2. '#' → logprob: -1.6078569889068604
    3. ' and' → logprob: -5.8578572273254395
    4. '
' → logprob: -6.3578572273254395
    5. 'and' → logprob: -6.8578572273254395
    6. '<|end|>' → logprob: -6.9828572273254395
    7. '    
' → logprob: -7.8578572273254395
    8. ' #' → logprob: -8.982856750488281
    9. ',' → logprob: -9.232856750488281
    10. 'import' → logprob: -9.607856750488281

Token 784: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5524879097938538
    2. '#' (adapté à ' #') → logprob: -0.9274879097938538
    3. '<|end|>' → logprob: -4.177487850189209
    4. '
' → logprob: -4.802487850189209
    5. '    
' → logprob: -6.177487850189209
    6. ' and' → logprob: -6.927487850189209
    7. 'and' → logprob: -7.427487850189209
    8. 'import' → logprob: -8.052488327026367
    9. ' #' → logprob: -8.177488327026367
    10. '<|end|>' → logprob: -8.427488327026367

Token 785: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23680374026298523
    2. '   ' → logprob: -1.6118037700653076
    3. 'for' → logprob: -5.2368035316467285
    4. ' #' → logprob: -6.8618035316467285
    5. 'answer' → logprob: -7.6118035316467285
    6. ' for' → logprob: -7.6118035316467285
    7. '
' → logprob: -7.7368035316467285
    8. '    
' → logprob: -7.7368035316467285
    9. 'from' → logprob: -7.9868035316467285
    10. 'import' → logprob: -8.236804008483887

Token 786: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.017657222226262093
    2. ' k' → logprob: -4.642657279968262
    3. 'each' → logprob: -6.267657279968262
    4. 'the' → logprob: -6.892657279968262
    5. 'all' → logprob: -7.142657279968262
    6. 'p' → logprob: -7.267657279968262
    7. 'small' → logprob: -7.767657279968262
    8. '#' → logprob: -7.892657279968262
    9. 'points' → logprob: -8.392657279968262
    10. 'rest' → logprob: -8.517657279968262

Token 787: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3362044394016266
    2. ' =' → logprob: -1.8362044095993042
    3. '3' → logprob: -2.9612045288085938
    4. ' in' → logprob: -3.5862045288085938
    5. ' ' → logprob: -4.086204528808594
    6. ' <' → logprob: -4.586204528808594
    7. '<' → logprob: -5.211204528808594
    8. '<=' → logprob: -5.961204528808594
    9. ' <=' → logprob: -6.336204528808594
    10. '>' → logprob: -6.461204528808594

Token 788: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06575014442205429
    2. 'max' → logprob: -3.1907501220703125
    3. '4' → logprob: -4.0657501220703125
    4. 'len' → logprob: -5.9407501220703125
    5. ' ' → logprob: -7.1907501220703125
    6. 'N' → logprob: -7.5657501220703125
    7. 'min' → logprob: -7.9407501220703125
    8. '1' → logprob: -8.190750122070312
    9. '0' → logprob: -8.565750122070312
    10. '
' → logprob: -8.815750122070312

Token 789: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1613319218158722
    2. ',' → logprob: -2.66133189201355
    3. ':
' → logprob: -3.28633189201355
    4. '   ' → logprob: -3.41133189201355
    5. ' to' → logprob: -5.911332130432129
    6. '...' → logprob: -6.286332130432129
    7. ' and' → logprob: -6.536332130432129
    8. '..' → logprob: -7.536332130432129
    9. 'and' → logprob: -8.161332130432129
    10. 'to' → logprob: -8.286332130432129

Token 790: ' just' (ID: 1327)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0202125310897827
    2. '   ' → logprob: -1.5202125310897827
    3. '#' → logprob: -2.5202126502990723
    4. ' minimal' → logprob: -2.5202126502990723
    5. ' pass' → logprob: -3.0202126502990723
    6. 'for' → logprob: -3.0202126502990723
    7. ' #' → logprob: -3.3952126502990723
    8. ' if' → logprob: -4.020212650299072
    9. ' print' → logprob: -4.145212650299072
    10. 'pass' → logprob: -4.645212650299072

Token 791: ' test' (ID: 1746)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10054619610309601
    2. ' print' → logprob: -3.35054612159729
    3. 'output' → logprob: -3.97554612159729
    4. 'min' → logprob: -4.475546360015869
    5. 'compute' → logprob: -5.475546360015869
    6. 'find' → logprob: -5.600546360015869
    7. ' output' → logprob: -5.600546360015869
    8. '   ' → logprob: -5.725546360015869
    9. 'for' → logprob: -6.600546360015869
    10. 'check' → logprob: -6.850546360015869

Token 792: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.17045024037361145
    2. 'all' → logprob: -1.920450210571289
    3. ' combinations' → logprob: -5.795450210571289
    4. ' triangles' → logprob: -6.170450210571289
    5. ' triples' → logprob: -7.170450210571289
    6. ' subsets' → logprob: -7.295450210571289
    7. ' trip' → logprob: -7.420450210571289
    8. 'trip' → logprob: -7.795450210571289
    9. ' points' → logprob: -7.795450210571289
    10. ' the' → logprob: -7.920450210571289

Token 793: ' triangles' (ID: 92927)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.3884992599487305
    2. 'points' → logprob: -1.5134992599487305
    3. ' subsets' → logprob: -1.5134992599487305
    4. ' combinations' → logprob: -2.1384992599487305
    5. ')' → logprob: -3.7634992599487305
    6. ' k' → logprob: -3.8884992599487305
    7. ' triples' → logprob: -3.8884992599487305
    8. 'com' → logprob: -4.0134992599487305
    9. ' valid' → logprob: -4.5134992599487305
    10. '<|end|>' → logprob: -4.5134992599487305

Token 794: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04473632946610451
    2. '    
' → logprob: -3.794736385345459
    3. '
' → logprob: -4.169736385345459
    4. ' for' → logprob: -6.294736385345459
    5. 'for' → logprob: -7.044736385345459
    6. ',' → logprob: -7.294736385345459
    7. '<|end|>' → logprob: -7.294736385345459
    8. '.' → logprob: -7.544736385345459
    9. '   
' → logprob: -8.6697359085083
    10. ')' → logprob: -8.9197359085083

Token 795: ' O' (ID: 532)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7248092889785767
    2. 'k' → logprob: -2.224809169769287
    3. '#' → logprob: -2.349809169769287
    4. ' for' → logprob: -2.349809169769287
    5. 'for' → logprob: -2.474809169769287
    6. '<|end|>' → logprob: -3.349809169769287
    7. 'return' → logprob: -3.724809169769287
    8. ' k' → logprob: -4.474809169769287
    9. '
' → logprob: -4.724809169769287
    10. ' ' → logprob: -5.224809169769287

Token 796: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.13742861151695251
    2. '(' → logprob: -2.6374285221099854
    3. 'N' → logprob: -3.7624285221099854
    4. ' N' → logprob: -4.2624287605285645
    5. '(n' → logprob: -5.2624287605285645
    6. '(
' → logprob: -6.0124287605285645
    7. '
' → logprob: -6.0124287605285645
    8. ' (' → logprob: -6.3874287605285645
    9. ' ' → logprob: -7.1374287605285645
    10. '()
' → logprob: -7.1374287605285645

Token 797: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4110668897628784
    2. ')' → logprob: -1.1610668897628784
    3. '^' → logprob: -4.411067008972168
    4. ' )' → logprob: -5.536067008972168
    5. '*' → logprob: -6.036067008972168
    6. ' **' → logprob: -6.536067008972168
    7. '**)' → logprob: -6.536067008972168
    8. '
' → logprob: -7.286067008972168
    9. '//' → logprob: -8.286067008972168
    10. ')
' → logprob: -8.536067008972168

Token 798: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001351306913420558
    2. ' ' → logprob: -7.001351356506348
    3. '3' → logprob: -8.376351356506348
    4. '6' → logprob: -9.376351356506348
    5. '4' → logprob: -10.876351356506348
    6. '7' → logprob: -10.876351356506348
    7. '²' → logprob: -11.001351356506348
    8. '```' → logprob: -11.251351356506348
    9. '^' → logprob: -11.376351356506348
    10. '
' → logprob: -11.626351356506348

Token 799: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009339710813947022
    2. ' )' → logprob: -7.87593412399292
    3. ')
' → logprob: -8.250933647155762
    4. ')...' → logprob: -8.375933647155762
    5. '...)' → logprob: -11.625933647155762
    6. '...' → logprob: -12.125933647155762
    7. '),' → logprob: -12.125933647155762
    8. ').' → logprob: -12.375933647155762
    9. ')

' → logprob: -12.500933647155762
    10. '*' → logprob: -13.125933647155762

Token 800: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08104794472455978
    2. '
' → logprob: -3.581048011779785
    3. ' for' → logprob: -4.206048011779785
    4. '    
' → logprob: -4.456048011779785
    5. 'k' → logprob: -5.456048011779785
    6. '.' → logprob: -5.706048011779785
    7. ',' → logprob: -5.956048011779785
    8. '#' → logprob: -5.956048011779785
    9. 'for' → logprob: -6.081048011779785
    10. ' if' → logprob: -6.331048011779785

Token 801: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3028073012828827
    2. 'k' → logprob: -1.802807331085205
    3. 'sys' → logprob: -4.052807331085205
    4. ' N' → logprob: -4.427807331085205
    5. 'max' → logprob: -4.427807331085205
    6. 'some' → logprob: -4.802807331085205
    7. 'import' → logprob: -5.052807331085205
    8. 'possible' → logprob: -5.427807331085205
    9. 'com' → logprob: -5.677807331085205
    10. 'comments' → logprob: -5.802807331085205

Token 802: '=' (ID: 28)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7766641974449158
    2. '=' → logprob: -1.1516642570495605
    3. ')' → logprob: -2.0266642570495605
    4. '
' → logprob: -3.1516642570495605
    5. ' =' → logprob: -4.5266642570495605
    6. '<=' → logprob: -4.7766642570495605
    7. '```' → logprob: -4.9016642570495605
    8. '>=' → logprob: -5.1516642570495605
    9. '-' → logprob: -5.5266642570495605
    10. '#' → logprob: -6.4016642570495605

Token 803: '40' (ID: 1723)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -0.9629160165786743
    2. '20' → logprob: -1.7129160165786743
    3. '100' → logprob: -1.9629160165786743
    4. '15' → logprob: -2.2129158973693848
    5. '10' → logprob: -2.5879158973693848
    6. '200' → logprob: -3.4629158973693848
    7. '300' → logprob: -3.8379158973693848
    8. '30' → logprob: -3.9629158973693848
    9. '18' → logprob: -4.337915897369385
    10. '150' → logprob: -4.837915897369385

Token 804: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3638817071914673
    2. '
' → logprob: -1.6138817071914673
    3. '    
' → logprob: -2.9888815879821777
    4. '<|end|>' → logprob: -4.238881587982178
    5. ' for' → logprob: -4.488881587982178
    6. '.' → logprob: -4.863881587982178
    7. ',' → logprob: -4.988881587982178
    8. 'for' → logprob: -5.738881587982178
    9. '#' → logprob: -6.113881587982178
    10. ')' → logprob: -6.613881587982178

Token 805: ' ~' (ID: 6574)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.8365852236747742
    2. 'fe' → logprob: -1.211585283279419
    3. 'possible' → logprob: -2.336585283279419
    4. 'im' → logprob: -2.336585283279419
    5. 'acceptable' → logprob: -4.08658504486084
    6. 'not' → logprob: -4.46158504486084
    7. 'still' → logprob: -4.58658504486084
    8. 'probably' → logprob: -4.96158504486084
    9. 'ok' → logprob: -5.46158504486084
    10. 'un' → logprob: -5.58658504486084

Token 806: '640' (ID: 25479)
  Prédit: '800'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '800' → logprob: -1.0415540933609009
    2. 'possible' → logprob: -1.1665540933609009
    3. 'fe' → logprob: -2.7915539741516113
    4. '100' → logprob: -3.1665539741516113
    5. '640' → logprob: -3.1665539741516113
    6. '400' → logprob: -3.4165539741516113
    7. 'acceptable' → logprob: -4.166553974151611
    8. '160' → logprob: -4.291553974151611
    9. 'too' → logprob: -4.541553974151611
    10. '200' → logprob: -4.666553974151611

Token 807: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.21278095245361328
    2. '0' → logprob: -2.4627809524536133
    3. '00' → logprob: -2.7127809524536133
    4. '**' → logprob: -3.5877809524536133
    5. '   ' → logprob: -6.212780952453613
    6. '*' → logprob: -6.712780952453613
    7. 'import' → logprob: -6.962780952453613
    8. '.' → logprob: -7.212780952453613
    9. '***' → logprob: -7.462780952453613
    10. 'N' → logprob: -7.587780952453613

Token 808: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 809: ' feasible' (ID: 58866)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7722323536872864
    2. ' which' → logprob: -1.0222322940826416
    3. ' so' → logprob: -3.7722322940826416
    4. 'which' → logprob: -3.8972322940826416
    5. 'continue' → logprob: -4.022232532501221
    6. ' ' → logprob: -4.397232532501221
    7. '#' → logprob: -4.522232532501221
    8. ' 
' → logprob: -4.647232532501221
    9. '    ' → logprob: -4.897232532501221
    10. ' but' → logprob: -5.022232532501221

Token 810: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007869701832532883
    2. '    
' → logprob: -5.757869720458984
    3. '
' → logprob: -6.757869720458984
    4. ' for' → logprob: -6.882869720458984
    5. 'for' → logprob: -7.132869720458984
    6. '    ' → logprob: -8.007869720458984
    7. 'k' → logprob: -8.132869720458984
    8. '```' → logprob: -8.257869720458984
    9. ',' → logprob: -9.382869720458984
    10. '.' → logprob: -9.507869720458984

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00787443295121193
    2. 'for' → logprob: -6.382874488830566
    3. '
' → logprob: -6.632874488830566
    4. '    
' → logprob: -6.757874488830566
    5. ' for' → logprob: -7.257874488830566
    6. '#' → logprob: -7.257874488830566
    7. 'k' → logprob: -7.507874488830566
    8. '```' → logprob: -8.007874488830566
    9. 'For' → logprob: -8.507874488830566
    10. '    ' → logprob: -8.632874488830566

Token 812: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48091810941696167
    2. 'k' → logprob: -1.7309181690216064
    3. 'comb' → logprob: -2.2309181690216064
    4. ' comb' → logprob: -3.7309181690216064
    5. '#' (adapté à ' #') → logprob: -4.230917930603027
    6. '
' → logprob: -5.105917930603027
    7. ' if' → logprob: -5.230917930603027
    8. ' for' → logprob: -5.230917930603027
    9. 'result' → logprob: -5.355917930603027
    10. 'if' → logprob: -5.355917930603027

Token 813: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9371682405471802
    2. 'dp' → logprob: -1.9371682405471802
    3. 'res' → logprob: -2.0621681213378906
    4. '#' → logprob: -2.1871681213378906
    5. 'answer' → logprob: -2.5621681213378906
    6. 'for' → logprob: -2.6871681213378906
    7. 'k' → logprob: -2.8121681213378906
    8. 'result' → logprob: -2.8121681213378906
    9. 'area' → logprob: -3.4371681213378906
    10. 'min' → logprob: -3.4371681213378906

Token 814: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006795066874474287
    2. ' k' → logprob: -5.0067949295043945
    3. '3' → logprob: -10.381794929504395
    4. 'for' → logprob: -11.756794929504395
    5. ' ' → logprob: -12.006794929504395
    6. 'larg' → logprob: -12.256794929504395
    7. '
' → logprob: -12.381794929504395
    8. 'import' → logprob: -12.381794929504395
    9. 'def' → logprob: -12.881794929504395
    10. '   ' → logprob: -13.256794929504395

Token 815: '>' (ID: 29)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007562621613033116
    2. ' =' → logprob: -8.37575626373291
    3. '>' → logprob: -8.50075626373291
    4. '<=' → logprob: -8.62575626373291
    5. '>=' → logprob: -9.25075626373291
    6. '   ' → logprob: -11.87575626373291
    7. '==' → logprob: -11.87575626373291
    8. ':' → logprob: -12.00075626373291
    9. ' in' → logprob: -12.37575626373291
    10. '<' → logprob: -12.75075626373291

Token 816: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.016791440546512604
    2. '4' → logprob: -4.766791343688965
    3. '=' → logprob: -5.266791343688965
    4. '40' → logprob: -6.266791343688965
    5. 'max' → logprob: -8.266791343688965
    6. ' ' → logprob: -8.391791343688965
    7. '
' → logprob: -8.891791343688965
    8. '10' → logprob: -9.516791343688965
    9. '5' → logprob: -10.141791343688965
    10. '=max' → logprob: -10.141791343688965

Token 817: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13039207458496094
    2. '   ' → logprob: -2.380392074584961
    3. ',' → logprob: -3.755392074584961
    4. ':
' → logprob: -5.130392074584961
    5. ' for' → logprob: -9.880392074584961
    6. '
' → logprob: -9.880392074584961
    7. '    
' → logprob: -10.255392074584961
    8. ':

' → logprob: -10.380392074584961
    9. ' if' → logprob: -10.505392074584961
    10. '#' → logprob: -10.505392074584961

Token 818: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1550315618515015
    2. ' pass' → logprob: -1.2800315618515015
    3. ' return' → logprob: -1.7800315618515015
    4. ' for' → logprob: -2.405031681060791
    5. 'return' → logprob: -2.905031681060791
    6. 'pass' → logprob: -3.655031681060791
    7. '#' → logprob: -3.905031681060791
    8. ' #' → logprob: -4.405031681060791
    9. 'for' → logprob: -4.655031681060791
    10. ' comb' → logprob: -4.780031681060791

Token 819: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0550432987511158
    2. 'from' → logprob: -4.3050432205200195
    3. 'import' → logprob: -4.6800432205200195
    4. 'pass' → logprob: -4.8050432205200195
    5. 'for' → logprob: -5.0550432205200195
    6. ' to' → logprob: -5.4300432205200195
    7. 'to' → logprob: -5.5550432205200195
    8. 'def' → logprob: -6.6800432205200195
    9. 'points' → logprob: -6.6800432205200195
    10. ' for' → logprob: -7.3050432205200195

Token 820: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1611192226409912
    2. 'find' → logprob: -1.6611192226409912
    3. 'use' → logprob: -2.161119222640991
    4. 'continue' → logprob: -2.286119222640991
    5. 'h' → logprob: -2.536119222640991
    6. 'pass' → logprob: -3.161119222640991
    7. ' use' → logprob: -4.03611946105957
    8. 'len' → logprob: -4.03611946105957
    9. 'expand' → logprob: -4.41111946105957
    10. 'expl' → logprob: -4.53611946105957

Token 821: ' the' (ID: 290)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2180841714143753
    2. 'the' → logprob: -1.9680842161178589
    3. ' the' → logprob: -3.9680840969085693
    4. ' hull' → logprob: -4.093084335327148
    5. 'conv' → logprob: -5.218084335327148
    6. 'points' → logprob: -5.343084335327148
    7. ' points' → logprob: -6.218084335327148
    8. 'only' → logprob: -6.343084335327148
    9. ' convex' → logprob: -6.843084335327148
    10. ' only' → logprob: -6.843084335327148

Token 822: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03587809577584267
    2. 'conv' → logprob: -3.5358781814575195
    3. 'fact' → logprob: -5.9108781814575195
    4. 'remaining' → logprob: -7.6608781814575195
    5. '#' → logprob: -7.9108781814575195
    6. 'existing' → logprob: -8.03587818145752
    7. 'points' → logprob: -8.28587818145752
    8. '```' → logprob: -8.28587818145752
    9. 'rest' → logprob: -8.41087818145752
    10. 'hint' → logprob: -8.78587818145752

Token 823: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09527070820331573
    2. '
' → logprob: -2.5952706336975098
    3. '    
' → logprob: -4.97027063369751
    4. '#' → logprob: -5.34527063369751
    5. ' if' → logprob: -6.97027063369751
    6. '<|end|>' → logprob: -7.34527063369751
    7. '```' → logprob: -7.72027063369751
    8. ' for' → logprob: -7.97027063369751
    9. 'if' → logprob: -8.220271110534668
    10. 'def' → logprob: -8.470271110534668

Token 824: ' base' (ID: 3611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.020436406135559
    2. 'base' → logprob: -1.645436406135559
    3. 'starting' → logprob: -2.3954362869262695
    4. 'subset' → logprob: -2.3954362869262695
    5. 'vertices' → logprob: -2.6454362869262695
    6. 'basis' → logprob: -2.7704362869262695
    7. 'the' → logprob: -2.8954362869262695
    8. 'part' → logprob: -3.8954362869262695
    9. 'points' → logprob: -4.0204362869262695
    10. ' base' → logprob: -4.8954362869262695

Token 825: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0882006362080574
    2. '
' → logprob: -2.838200569152832
    3. '    
' → logprob: -3.838200569152832
    4. '#' → logprob: -6.213200569152832
    5. '   
' → logprob: -8.463200569152832
    6. 'for' → logprob: -8.588200569152832
    7. '```' → logprob: -8.713200569152832
    8. ' for' → logprob: -8.838200569152832
    9. '.' → logprob: -8.838200569152832
    10. '<|end|>' → logprob: -8.838200569152832

Token 826: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04758463054895401
    2. '#' → logprob: -3.1725845336914062
    3. ' for' → logprob: -6.922584533691406
    4. '    
' → logprob: -7.047584533691406
    5. 'for' → logprob: -7.422584533691406
    6. 'return' → logprob: -7.547584533691406
    7. '    ' → logprob: -7.797584533691406
    8. ' #' → logprob: -8.922584533691406
    9. ' return' → logprob: -8.922584533691406
    10. 'import' → logprob: -9.297584533691406

Token 827: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1083072423934937
    2. 'for' → logprob: -1.3583072423934937
    3. 'continue' → logprob: -1.9833072423934937
    4. 'the' → logprob: -2.858307361602783
    5. 'return' → logprob: -2.983307361602783
    6. 'if' → logprob: -3.358307361602783
    7. 'it' → logprob: -3.608307361602783
    8. 'it's' → logprob: -3.983307361602783
    9. 'pass' → logprob: -4.233307361602783
    10. '   ' → logprob: -4.483307361602783

Token 828: ' must' (ID: 2804)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -1.2971320152282715
    2. ' cannot' → logprob: -2.0471320152282715
    3. ' don't' → logprob: -2.5471320152282715
    4. 'have' → logprob: -2.6721320152282715
    5. ' lack' → logprob: -2.9221320152282715
    6. ' have' → logprob: -2.9221320152282715
    7. 'lack' → logprob: -3.0471320152282715
    8. 'don't' → logprob: -3.1721320152282715
    9. ' can't' → logprob: -3.2971320152282715
    10. ' need' → logprob: -3.5471320152282715

Token 829: ' test' (ID: 1746)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -1.0513588190078735
    2. ' also' → logprob: -1.8013588190078735
    3. 'enumer' → logprob: -2.426358699798584
    4. 'find' → logprob: -2.426358699798584
    5. 'check' → logprob: -2.801358699798584
    6. ' find' → logprob: -3.176358699798584
    7. 'also' → logprob: -3.301358699798584
    8. ' check' → logprob: -3.426358699798584
    9. ' consider' → logprob: -3.676358699798584
    10. '   ' → logprob: -4.176358699798584

Token 830: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.498592346906662
    2. ' subsets' → logprob: -1.8735923767089844
    3. 'sub' → logprob: -2.3735923767089844
    4. ' all' → logprob: -2.7485923767089844
    5. '#' → logprob: -3.8735923767089844
    6. 'points' → logprob: -4.873592376708984
    7. 'sm' → logprob: -4.873592376708984
    8. 'the' → logprob: -4.998592376708984
    9. 'for' → logprob: -5.248592376708984
    10. 'com' → logprob: -5.373592376708984

Token 831: ' subsets' (ID: 165377)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.0775868892669678
    2. 'points' → logprob: -1.5775868892669678
    3. '#' → logprob: -1.9525868892669678
    4. ' subsets' → logprob: -1.9525868892669678
    5. 'com' → logprob: -2.3275868892669678
    6. 'possible' → logprob: -3.4525868892669678
    7. '   ' → logprob: -4.452587127685547
    8. 'k' → logprob: -4.827587127685547
    9. ' points' → logprob: -5.327587127685547
    10. 'remaining' → logprob: -5.452587127685547

Token 832: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28586655855178833
    2. '
' → logprob: -1.9108664989471436
    3. '    
' → logprob: -3.2858664989471436
    4. '#' → logprob: -3.5358664989471436
    5. ' for' → logprob: -5.035866737365723
    6. '.' → logprob: -5.535866737365723
    7. 'k' → logprob: -5.535866737365723
    8. 'for' → logprob: -6.035866737365723
    9. '...' → logprob: -6.160866737365723
    10. ',' → logprob: -6.160866737365723

Token 833: ' size' (ID: 2349)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23419208824634552
    2. 'points' → logprob: -1.734192132949829
    3. 'the' → logprob: -4.73419189453125
    4. 'k' → logprob: -5.10919189453125
    5. 'size' → logprob: -5.23419189453125
    6. 'pts' → logprob: -5.60919189453125
    7. ' points' → logprob: -5.73419189453125
    8. ' hull' → logprob: -5.98419189453125
    9. '(points' → logprob: -7.85919189453125
    10. 'N' → logprob: -7.98419189453125

Token 834: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.060689229518175125
    2. ' k' → logprob: -2.9356892108917236
    3. 'max' → logprob: -5.310689449310303
    4. ' max' → logprob: -7.560689449310303
    5. '3' → logprob: -8.935688972473145
    6. '
' → logprob: -9.435688972473145
    7. '{k' → logprob: -10.685688972473145
    8. '```' → logprob: -11.060688972473145
    9. '(k' → logprob: -11.435688972473145
    10. '(max' → logprob: -11.435688972473145

Token 835: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015408541075885296
    2. '#' → logprob: -5.265408515930176
    3. '
' → logprob: -5.890408515930176
    4. '    
' → logprob: -6.640408515930176
    5. 'min' → logprob: -6.890408515930176
    6. 'import' → logprob: -7.015408515930176
    7. 'max' → logprob: -7.390408515930176
    8. '.' → logprob: -7.765408515930176
    9. '...' → logprob: -7.765408515930176
    10. ',' → logprob: -8.140408515930176

Token 836: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0295335091650486
    2. ' if' → logprob: -4.904533386230469
    3. ' comb' → logprob: -5.154533386230469
    4. 'k' → logprob: -5.404533386230469
    5. '
' → logprob: -6.154533386230469
    6. ' k' → logprob: -6.404533386230469
    7. ' for' → logprob: -6.404533386230469
    8. '#' → logprob: -6.404533386230469
    9. '    
' → logprob: -6.904533386230469
    10. ',' → logprob: -7.529533386230469

Token 837: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36876580119132996
    2. 'k' → logprob: -2.3687658309936523
    3. 'res' → logprob: -3.2437658309936523
    4. ' res' → logprob: -3.4937658309936523
    5. 'if' → logprob: -3.9937658309936523
    6. ' if' → logprob: -3.9937658309936523
    7. 'comb' → logprob: -3.9937658309936523
    8. 'ans' → logprob: -4.243765830993652
    9. ' comb' → logprob: -4.243765830993652
    10. ' for' → logprob: -4.243765830993652

Token 838: ' Since' (ID: 12265)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3960628509521484
    2. '   ' → logprob: -1.5210628509521484
    3. 'dp' → logprob: -2.0210628509521484
    4. 'res' → logprob: -2.1460628509521484
    5. '#' → logprob: -2.3960628509521484
    6. 'ans' → logprob: -2.7710628509521484
    7. 'best' → logprob: -3.1460628509521484
    8. 'answer' → logprob: -3.2710628509521484
    9. 'answers' → logprob: -4.271062850952148
    10. 'result' → logprob: -4.521062850952148

Token 839: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11076723784208298
    2. 'max' → logprob: -2.735767126083374
    3. 'k' → logprob: -3.610767126083374
    4. ' N' → logprob: -4.860767364501953
    5. ' max' → logprob: -6.360767364501953
    6. 'the' → logprob: -6.735767364501953
    7. ' k' → logprob: -6.860767364501953
    8. 'len' → logprob: -8.110767364501953
    9. 'Q' → logprob: -8.485767364501953
    10. '40' → logprob: -8.610767364501953

Token 840: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24867947399616241
    2. '<=' → logprob: -2.4986793994903564
    3. '>' → logprob: -2.6236793994903564
    4. ' =' → logprob: -3.4986793994903564
    5. ' <=' → logprob: -4.6236796379089355
    6. ' is' → logprob: -4.7486796379089355
    7. ' >' → logprob: -4.8736796379089355
    8. '<' → logprob: -6.1236796379089355
    9. '#' → logprob: -6.3736796379089355
    10. ' <' → logprob: -7.3736796379089355

Token 841: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -7.994086627149954e-05
    2. ' ' → logprob: -9.750080108642578
    3. '20' → logprob: -11.375080108642578
    4. '
' → logprob: -13.625080108642578
    5. '   ' → logprob: -13.750080108642578
    6. '50' → logprob: -13.875080108642578
    7. '<=' → logprob: -13.875080108642578
    8. 'small' → logprob: -14.000080108642578
    9. '30' → logprob: -14.250080108642578
    10. '41' → logprob: -14.250080108642578

Token 842: ' worst' (ID: 20486)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24706397950649261
    2. '
' → logprob: -2.4970638751983643
    3. '   ' → logprob: -2.6220638751983643
    4. ' is' → logprob: -3.3720638751983643
    5. ',
' → logprob: -3.9970638751983643
    6. ' and' → logprob: -6.122064113616943
    7. ' for' → logprob: -6.247064113616943
    8. '.' → logprob: -7.122064113616943
    9. '#' → logprob: -7.122064113616943
    10. '<|end|>' → logprob: -7.122064113616943

Token 843: ' case' (ID: 1890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6809287071228027
    2. 'case' → logprob: -1.5559287071228027
    3. '   ' → logprob: -1.6809287071228027
    4. 'for' → logprob: -3.6809287071228027
    5. 'comb' → logprob: -3.8059287071228027
    6. '```' → logprob: -5.055928707122803
    7. 'com' → logprob: -5.180928707122803
    8. '-case' → logprob: -5.180928707122803
    9. '.' → logprob: -5.430928707122803
    10. 'possible' → logprob: -6.180928707122803

Token 844: ' C' (ID: 363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1831503063440323
    2. '
' → logprob: -1.933150291442871
    3. ',' → logprob: -4.683150291442871
    4. '#' → logprob: -5.308150291442871
    5. '    
' → logprob: -5.433150291442871
    6. '<|end|>' → logprob: -7.058150291442871
    7. ':' → logprob: -8.183150291442871
    8. '.' → logprob: -8.183150291442871
    9. ' comb' → logprob: -8.308150291442871
    10. ' is' → logprob: -8.308150291442871

Token 845: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041597895324230194
    2. '40' → logprob: -3.666597843170166
    3. '(N' → logprob: -4.541597843170166
    4. 'omb' → logprob: -6.791597843170166
    5. 'om' → logprob: -7.541597843170166
    6. '=' → logprob: -7.666597843170166
    7. '[' → logprob: -7.916597843170166
    8. 'N' → logprob: -7.916597843170166
    9. '(n' → logprob: -8.291598320007324
    10. '
' → logprob: -8.416598320007324

Token 846: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.027521323412656784
    2. ' ' → logprob: -4.277521133422852
    3. 'N' → logprob: -4.402521133422852
    4. ' N' → logprob: -7.027521133422852
    5. '39' → logprob: -10.527521133422852
    6. '20' → logprob: -11.027521133422852
    7. '(N' → logprob: -11.027521133422852
    8. '30' → logprob: -11.402521133422852
    9. '(' → logprob: -11.527521133422852
    10. '37' → logprob: -11.902521133422852

Token 847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022837184369564056
    2. ',k' → logprob: -6.377283573150635
    3. ' ,' → logprob: -7.752283573150635
    4. ',
' → logprob: -10.252284049987793
    5. ')' → logprob: -10.377284049987793
    6. '
' → logprob: -10.752284049987793
    7. ')=' → logprob: -12.002284049987793
    8. '[' → logprob: -12.127284049987793
    9. ',n' → logprob: -12.127284049987793
    10. ',[' → logprob: -12.502284049987793

Token 848: '20' (ID: 455)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010222175158560276
    2. '3' → logprob: -5.7602219581604
    3. ' k' → logprob: -6.5102219581604
    4. '20' → logprob: -6.6352219581604
    5. 'max' → logprob: -6.6352219581604
    6. '{k' → logprob: -6.6352219581604
    7. '10' → logprob: -7.5102219581604
    8. '40' → logprob: -7.7602219581604
    9. '30' → logprob: -9.260222434997559
    10. '{' → logprob: -9.635222434997559

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05644023045897484
    2. ')>' → logprob: -3.4314401149749756
    3. ')=' → logprob: -4.056440353393555
    4. ')>=' → logprob: -6.306440353393555
    5. ')<' → logprob: -6.556440353393555
    6. ')==' → logprob: -7.431440353393555
    7. ')<=' → logprob: -7.806440353393555
    8. ')
' → logprob: -8.431440353393555
    9. ')`' → logprob: -8.556440353393555
    10. ')+' → logprob: -9.181440353393555

Token 850: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16721506416797638
    2. ')' → logprob: -2.79221510887146
    3. '
' → logprob: -3.41721510887146
    4. '#' → logprob: -4.667214870452881
    5. ' continues' → logprob: -5.167214870452881
    6. ' will' → logprob: -5.292214870452881
    7. '...' → logprob: -5.292214870452881
    8. '   ' → logprob: -5.417214870452881
    9. ',' → logprob: -5.667214870452881
    10. '<|end|>' → logprob: -5.792214870452881

Token 851: ' huge' (ID: 9560)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.046758029609918594
    2. 'hu' → logprob: -3.296757936477661
    3. 'very' → logprob: -5.54675817489624
    4. ' too' → logprob: -6.29675817489624
    5. 'astr' → logprob: -6.79675817489624
    6. 'ext' → logprob: -7.04675817489624
    7. 'in' → logprob: -8.421757698059082
    8. 'large' → logprob: -9.421757698059082
    9. 'un' → logprob: -9.546757698059082
    10. 'expl' → logprob: -9.671757698059082

Token 852: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08619759231805801
    2. '
' → logprob: -2.9611976146698
    3. '#' → logprob: -4.086197376251221
    4. '<|end|>' → logprob: -5.711197376251221
    5. '    
' → logprob: -6.086197376251221
    6. ',' → logprob: -6.211197376251221
    7. '.' → logprob: -6.711197376251221
    8. '...' → logprob: -6.836197376251221
    9. '<|end|>' → logprob: -7.461197376251221
    10. 'import' → logprob: -7.461197376251221

Token 853: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44276368618011475
    2. '#' → logprob: -1.1927636861801147
    3. ' return' → logprob: -3.1927638053894043
    4. '   ' → logprob: -4.817763805389404
    5. 'pass' → logprob: -6.317763805389404
    6. '
' → logprob: -7.192763805389404
    7. 'for' → logprob: -7.317763805389404
    8. 'k' → logprob: -7.442763805389404
    9. ' #' → logprob: -7.942763805389404
    10. ' for' → logprob: -8.442763328552246

Token 854: ' must' (ID: 2804)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.6860450506210327
    2. '#' → logprob: -1.9360450506210327
    3. 'will' → logprob: -2.1860451698303223
    4. 'stop' → logprob: -2.8110451698303223
    5. 'continue' → logprob: -3.5610451698303223
    6. 'return' → logprob: -3.8110451698303223
    7. 'can't' → logprob: -4.061045169830322
    8. ''ll' → logprob: -4.061045169830322
    9. ' cannot' → logprob: -4.186045169830322
    10. ' will' → logprob: -4.186045169830322

Token 855: ' prune' (ID: 140388)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5382022857666016
    2. 'implement' → logprob: -1.9132022857666016
    3. 'use' → logprob: -2.0382022857666016
    4. 'limit' → logprob: -2.9132022857666016
    5. 'skip' → logprob: -4.038202285766602
    6. 'expl' → logprob: -4.663202285766602
    7. 'opt' → logprob: -5.038202285766602
    8. 'restrict' → logprob: -5.163202285766602
    9. 'output' → logprob: -5.288202285766602
    10. 'import' → logprob: -5.538202285766602

Token 856: ' search' (ID: 3684)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07195089012384415
    2. '#' → logprob: -3.071950912475586
    3. '    
' → logprob: -4.321950912475586
    4. '
' → logprob: -4.946950912475586
    5. '<|end|>' → logprob: -7.071950912475586
    6. '.' → logprob: -8.196950912475586
    7. '...' → logprob: -8.696950912475586
    8. 'for' → logprob: -8.821950912475586
    9. ' #' → logprob: -8.821950912475586
    10. 'import' → logprob: -8.946950912475586

Token 857: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04461434483528137
    2. '#' → logprob: -4.294614315032959
    3. '    
' → logprob: -4.294614315032959
    4. '
' → logprob: -4.919614315032959
    5. '<|end|>' → logprob: -4.919614315032959
    6. '<|end|>' → logprob: -7.669614315032959
    7. '.' → logprob: -7.919614315032959
    8. '...' → logprob: -8.419614791870117
    9. ',' → logprob: -8.669614791870117
    10. 'import' → logprob: -9.169614791870117

Token 858: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009261442348361015
    2. ' comb' → logprob: -5.509261608123779
    3. '    
' → logprob: -6.134261608123779
    4. '
' → logprob: -7.259261608123779
    5. ' 
' → logprob: -7.634261608123779
    6. '#' → logprob: -8.134261131286621
    7. '    ' → logprob: -8.509261131286621
    8. '' → logprob: -8.759261131286621
    9. 'comb' → logprob: -8.759261131286621
    10. ' for' → logprob: -9.384261131286621

Token 859: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03475911542773247
    2. '#' (adapté à ' #') → logprob: -4.159759044647217
    3. '
' → logprob: -5.284759044647217
    4. '    
' → logprob: -5.534759044647217
    5. ' #' → logprob: -6.409759044647217
    6. ' comb' → logprob: -6.784759044647217
    7. 'k' → logprob: -6.909759044647217
    8. ' 
' → logprob: -7.034759044647217
    9. ' best' → logprob: -7.409759044647217
    10. 'comb' → logprob: -7.659759044647217

Token 860: ' But' (ID: 3072)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5239908695220947
    2. 'min' → logprob: -2.0239908695220947
    3. '#' → logprob: -2.5239908695220947
    4. 'answer' → logprob: -3.3989908695220947
    5. 'res' → logprob: -3.6489908695220947
    6. 'dp' → logprob: -3.7739908695220947
    7. '   ' → logprob: -4.023990631103516
    8. ' best' → logprob: -4.023990631103516
    9. 'result' → logprob: -4.398990631103516
    10. 'selected' → logprob: -4.898990631103516

Token 861: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17788121104240417
    2. 'if' → logprob: -2.9278812408447266
    3. 'for' → logprob: -3.4278812408447266
    4. ' if' → logprob: -3.9278812408447266
    5. '   ' → logprob: -3.9278812408447266
    6. ' for' → logprob: -4.052881240844727
    7. 'return' → logprob: -4.677881240844727
    8. ' #' → logprob: -5.802881240844727
    9. 'pass' → logprob: -6.302881240844727
    10. 'import' → logprob: -6.802881240844727

Token 862: ' says' (ID: 5003)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9827360510826111
    2. '<|end|>' → logprob: -1.7327361106872559
    3. ' is' → logprob: -1.8577361106872559
    4. 'is' → logprob: -2.982736110687256
    5. '#' → logprob: -2.982736110687256
    6. ' continues' → logprob: -3.107736110687256
    7. '...' → logprob: -3.482736110687256
    8. ' remains' → logprob: -3.482736110687256
    9. '<|end|>' → logprob: -3.607736110687256
    10. ':' → logprob: -4.607736110687256

Token 863: ' minimal' (ID: 19957)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.176206111907959
    2. 'the' → logprob: -1.926206111907959
    3. 'N' → logprob: -2.176206111907959
    4. '   ' → logprob: -2.676206111907959
    5. '
' → logprob: -2.801206111907959
    6. ' the' → logprob: -3.051206111907959
    7. 'to' → logprob: -3.551206111907959
    8. 'continue' → logprob: -3.551206111907959
    9. 'pass' → logprob: -3.801206111907959
    10. 'for' → logprob: -4.176206111907959

Token 864: ' polygon' (ID: 65081)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3148706555366516
    2. ' #' → logprob: -2.814870595932007
    3. ' for' → logprob: -3.189870595932007
    4. 'for' → logprob: -3.564870595932007
    5. 'k' → logprob: -3.689870595932007
    6. 'return' → logprob: -3.814870595932007
    7. ' area' → logprob: -4.189870834350586
    8. '   ' → logprob: -4.314870834350586
    9. 'area' → logprob: -4.314870834350586
    10. ' return' → logprob: -4.314870834350586

Token 865: ' unique' (ID: 5746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06047965586185455
    2. '#' → logprob: -3.6854796409606934
    3. 'answers' → logprob: -4.685479640960693
    4. 'answer' → logprob: -4.935479640960693
    5. 'for' → logprob: -6.185479640960693
    6. 'dp' → logprob: -6.310479640960693
    7. '    
' → logprob: -6.310479640960693
    8. 'result' → logprob: -6.435479640960693
    9. 'res' → logprob: -6.560479640960693
    10. 'ans' → logprob: -6.810479640960693

Token 866: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06958156079053879
    2. '
' → logprob: -3.4445815086364746
    3. '    
' → logprob: -3.8195815086364746
    4. '#' → logprob: -5.319581508636475
    5. 'answer' → logprob: -7.194581508636475
    6. 'k' → logprob: -7.444581508636475
    7. '```' → logprob: -7.694581508636475
    8. 'answers' → logprob: -7.694581508636475
    9. 'dp' → logprob: -7.694581508636475
    10. 'import' → logprob: -7.819581508636475

Token 867: ' gap' (ID: 19953)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.1762102097272873
    2. 'gu' → logprob: -3.0512101650238037
    3. 'all' → logprob: -3.3012101650238037
    4. 'mon' → logprob: -4.301210403442383
    5. 'simple' → logprob: -4.676210403442383
    6. ' convex' → logprob: -4.676210403442383
    7. 'strict' → logprob: -4.676210403442383
    8. 'no' → logprob: -5.051210403442383
    9. 'small' → logprob: -5.051210403442383
    10. 'non' → logprob: -5.801210403442383

Token 868: '>=' (ID: 20974)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05054689571261406
    2. ' ' → logprob: -3.675546884536743
    3. '0' → logprob: -3.800546884536743
    4. '2' → logprob: -6.675547122955322
    5. '100' → logprob: -9.425546646118164
    6. '10' → logprob: -9.925546646118164
    7. '<|end|>' → logprob: -10.300546646118164
    8. '3' → logprob: -10.613046646118164
    9. '
' → logprob: -10.738046646118164
    10. '4' → logprob: -10.863046646118164

Token 870: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05901482328772545
    2. '#' → logprob: -3.9340147972106934
    3. '    
' → logprob: -4.184014797210693
    4. 'if' → logprob: -6.059014797210693
    5. 'k' → logprob: -6.059014797210693
    6. 'comb' → logprob: -6.184014797210693
    7. '
' → logprob: -6.309014797210693
    8. 'for' → logprob: -6.559014797210693
    9. ' if' → logprob: -6.809014797210693
    10. ' for' → logprob: -6.934014797210693

Token 871: '000' (ID: 1302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16949447989463806
    2. 'min' → logprob: -3.544494390487671
    3. 'best' → logprob: -3.919494390487671
    4. '#' → logprob: -4.04449462890625
    5. 'dp' → logprob: -4.04449462890625
    6. 'answer' → logprob: -4.41949462890625
    7. 'res' → logprob: -4.41949462890625
    8. 'from' → logprob: -4.79449462890625
    9. 'answers' → logprob: -4.79449462890625
    10. 'ans' → logprob: -5.29449462890625

Token 872: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03687656670808792
    2. '    
' → logprob: -3.911876678466797
    3. '
' → logprob: -4.661876678466797
    4. '#' → logprob: -5.911876678466797
    5. '<|end|>' → logprob: -7.286876678466797
    6. ')' → logprob: -7.786876678466797
    7. 'import' → logprob: -8.036876678466797
    8. ',' → logprob: -8.411876678466797
    9. '.' → logprob: -8.411876678466797
    10. 'from' → logprob: -8.536876678466797

Token 873: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2734432220458984
    2. 'dp' → logprob: -1.2734432220458984
    3. 'best' → logprob: -1.8984432220458984
    4. 'min' → logprob: -1.8984432220458984
    5. '#' → logprob: -3.0234432220458984
    6. 'minimal' → logprob: -3.7734432220458984
    7. 'res' → logprob: -4.273443222045898
    8. 'answer' → logprob: -4.398443222045898
    9. 'ans' → logprob: -4.898443222045898
    10. 'memo' → logprob: -5.023443222045898

Token 874: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6607217192649841
    2. '   ' → logprob: -1.285721778869629
    3. '
' → logprob: -3.160721778869629
    4. 'answer' → logprob: -3.160721778869629
    5. 'dp' → logprob: -4.160721778869629
    6. 'return' → logprob: -4.410721778869629
    7. 'answers' → logprob: -4.660721778869629
    8. 'min' → logprob: -4.660721778869629
    9. 'res' → logprob: -4.785721778869629
    10. ' #' → logprob: -4.785721778869629

Token 875: ' just' (ID: 1327)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15041176974773407
    2. '
' → logprob: -2.65041184425354
    3. ' #' → logprob: -3.65041184425354
    4. 'for' → logprob: -4.400411605834961
    5. ' for' → logprob: -4.900411605834961
    6. 'import' → logprob: -5.150411605834961
    7. '   ' → logprob: -6.025411605834961
    8. ' minimal' → logprob: -6.150411605834961
    9. 'return' → logprob: -6.275411605834961
    10. 'if' → logprob: -6.275411605834961

Token 876: ' brute' (ID: 128602)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6141241788864136
    2. 'try' → logprob: -1.7391241788864136
    3. 'check' → logprob: -2.989124298095703
    4. 'continue' → logprob: -3.239124298095703
    5. 'output' → logprob: -3.364124298095703
    6. 'consider' → logprob: -3.489124298095703
    7. 'implement' → logprob: -3.614124298095703
    8. 'pass' → logprob: -3.864124298095703
    9. 'enumer' → logprob: -3.989124298095703
    10. 'for' → logprob: -4.239124298095703

Token 877: ' force' (ID: 9578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3296931982040405
    2. ' force' → logprob: -1.7046931982040405
    3. ' for' → logprob: -2.95469331741333
    4. 'force' → logprob: -3.57969331741333
    5. '_force' → logprob: -4.95469331741333
    6. '   ' → logprob: -4.95469331741333
    7. '-force' → logprob: -6.57969331741333
    8. 'k' → logprob: -7.20469331741333
    9. 'FOR' → logprob: -7.57969331741333
    10. ' continue' → logprob: -7.95469331741333

Token 878: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005358856171369553
    2. '
' → logprob: -6.005358695983887
    3. '    
' → logprob: -6.630358695983887
    4. ',' → logprob: -8.380358695983887
    5. ' for' → logprob: -8.380358695983887
    6. 'def' → logprob: -8.505358695983887
    7. 'for' → logprob: -8.755358695983887
    8. '.' → logprob: -9.130358695983887
    9. '```' → logprob: -9.755358695983887
    10. '#' → logprob: -9.880358695983887

Token 879: ' possible' (ID: 4149)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.24688874185085297
    2. 'fe' → logprob: -2.4968886375427246
    3. 'not' → logprob: -2.7468886375427246
    4. 'possible' → logprob: -3.4968886375427246
    5. 'too' → logprob: -4.246888637542725
    6. 'in' → logprob: -4.246888637542725
    7. 'un' → logprob: -5.371888637542725
    8. 'acceptable' → logprob: -5.496888637542725
    9. '```' → logprob: -6.871888637542725
    10. 'ok' → logprob: -7.246888637542725

Token 880: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005513942334800959
    2. '    
' → logprob: -5.380514144897461
    3. '
' → logprob: -7.255514144897461
    4. 'import' → logprob: -9.630514144897461
    5. 'from' → logprob: -11.005514144897461
    6. 'def' → logprob: -11.255514144897461
    7. 'for' → logprob: -11.380514144897461
    8. ',' → logprob: -11.505514144897461
    9. '<|end|>' → logprob: -11.630514144897461
    10. '        
' → logprob: -11.880514144897461

Token 881: ' small' (ID: 3291)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.053501468151807785
    2. 'small' → logprob: -3.0535013675689697
    3. ' k' → logprob: -5.678501605987549
    4. ' small' → logprob: -7.928501605987549
    5. 'sm' → logprob: -8.30350112915039
    6. 'N' → logprob: -8.55350112915039
    7. 'tri' → logprob: -8.67850112915039
    8. '3' → logprob: -8.80350112915039
    9. 'Q' → logprob: -9.17850112915039
    10. 'this' → logprob: -9.80350112915039

Token 882: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5935750603675842
    2. '<|end|>' → logprob: -1.8435750007629395
    3. ' k' → logprob: -2.0935750007629395
    4. '
' → logprob: -2.8435750007629395
    5. 'N' → logprob: -4.3435750007629395
    6. 'sizes' → logprob: -4.4685750007629395
    7. '<|end|>' → logprob: -4.5935750007629395
    8. 'tokens' → logprob: -4.7185750007629395
    9. ' 
' → logprob: -4.7185750007629395
    10. ' ' → logprob: -4.8435750007629395

Token 883: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004010133910924196
    2. '    
' → logprob: -6.754010200500488
    3. 'results' → logprob: -7.004010200500488
    4. '
' → logprob: -7.379010200500488
    5. 'max' → logprob: -8.004010200500488
    6. 'answers' → logprob: -8.629010200500488
    7. '#' → logprob: -8.879010200500488
    8. 'import' → logprob: -9.379010200500488
    9. 'minimal' → logprob: -9.504010200500488
    10. 'min' → logprob: -9.504010200500488

Token 884: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030601076781749725
    2. 'k' → logprob: -3.7806010246276855
    3. '    
' → logprob: -5.9056010246276855
    4. 'max' → logprob: -6.4056010246276855
    5. 'if' → logprob: -7.7806010246276855
    6. '#' → logprob: -7.9056010246276855
    7. 'comb' → logprob: -8.155601501464844
    8. ' k' → logprob: -8.280601501464844
    9. ' if' → logprob: -8.530601501464844
    10. ' comb' → logprob: -8.530601501464844

Token 885: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16241824626922607
    2. 'k' → logprob: -2.7874183654785156
    3. 'comb' → logprob: -3.7874183654785156
    4. ' comb' → logprob: -3.9124183654785156
    5. ' if' → logprob: -4.162418365478516
    6. 'if' → logprob: -4.662418365478516
    7. '    
' → logprob: -5.787418365478516
    8. 'res' → logprob: -6.037418365478516
    9. ' for' → logprob: -6.162418365478516
    10. '#' (adapté à ' #') → logprob: -6.287418365478516

Token 886: ' Implement' (ID: 32889)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1539899110794067
    2. 'best' → logprob: -2.028989791870117
    3. 'answer' → logprob: -2.278989791870117
    4. 'ans' → logprob: -2.278989791870117
    5. 'k' → logprob: -2.778989791870117
    6. '   ' → logprob: -2.778989791870117
    7. 'result' → logprob: -2.903989791870117
    8. 'dp' → logprob: -3.153989791870117
    9. 'max' → logprob: -3.278989791870117
    10. 'from' → logprob: -3.903989791870117

Token 887: ' pruning' (ID: 135775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1208293437957764
    2. 'k' → logprob: -2.1208293437957764
    3. 'from' → logprob: -2.1208293437957764
    4. ' for' → logprob: -2.2458293437957764
    5. 'for' → logprob: -2.4958293437957764
    6. ' k' → logprob: -2.4958293437957764
    7. ' from' → logprob: -2.8708293437957764
    8. 'if' → logprob: -3.1208293437957764
    9. ' if' → logprob: -3.2458293437957764
    10. '
' → logprob: -4.6208295822143555

Token 888: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021316472440958023
    2. '#' → logprob: -5.0213165283203125
    3. '    
' → logprob: -5.0213165283203125
    4. 'k' → logprob: -6.7713165283203125
    5. 'import' → logprob: -6.7713165283203125
    6. 'max' → logprob: -6.7713165283203125
    7. 'for' → logprob: -7.1463165283203125
    8. '    ' → logprob: -7.3963165283203125
    9. 'from' → logprob: -7.6463165283203125
    10. ' for' → logprob: -7.7713165283203125

Token 889: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7201340198516846
    2. ' for' → logprob: -1.8451340198516846
    3. ' used' → logprob: -2.4701340198516846
    4. ' visited' → logprob: -3.0951340198516846
    5. 'visited' → logprob: -3.3451340198516846
    6. ' import' → logprob: -3.8451340198516846
    7. ' max' → logprob: -3.9701340198516846
    8. 'for' → logprob: -4.2201337814331055
    9. 'k' → logprob: -4.3451337814331055
    10. 'import' → logprob: -4.3451337814331055

Token 890: ' candidates' (ID: 18116)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.6531078815460205
    2. 'h' → logprob: -1.5281078815460205
    3. 'for' → logprob: -2.5281078815460205
    4. 'points' → logprob: -2.7781078815460205
    5. 'import' → logprob: -3.2781078815460205
    6. 'check' → logprob: -3.9031078815460205
    7. 'use' → logprob: -4.153107643127441
    8. 'from' → logprob: -4.778107643127441
    9. 'if' → logprob: -4.778107643127441
    10. 'pts' → logprob: -5.278107643127441

Token 891: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13803407549858093
    2. '=' → logprob: -2.7630341053009033
    3. '_points' → logprob: -3.3880341053009033
    4. '=[]' → logprob: -4.138033866882324
    5. '_candidates' → logprob: -5.638033866882324
    6. '_h' → logprob: -5.888033866882324
    7. '_pts' → logprob: -6.388033866882324
    8. 'points' → logprob: -6.513033866882324
    9. 's' → logprob: -6.888033866882324
    10. 'h' → logprob: -7.013033866882324

Token 892: ' produce' (ID: 10635)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.345899760723114
    2. ' are' → logprob: -1.5958998203277588
    3. 'include' → logprob: -3.095899820327759
    4. ' lie' → logprob: -4.34589958190918
    5. ' include' → logprob: -4.59589958190918
    6. ' all' → logprob: -5.47089958190918
    7. 'contain' → logprob: -5.47089958190918
    8. ' consist' → logprob: -6.09589958190918
    9. 'all' → logprob: -6.09589958190918
    10. ' contain' → logprob: -6.22089958190918

Token 893: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.8375692963600159
    2. 'a' → logprob: -1.587569236755371
    3. ' convex' → logprob: -2.462569236755371
    4. 'sm' → logprob: -2.962569236755371
    5. ' smaller' → logprob: -3.087569236755371
    6. ' strictly' → logprob: -3.212569236755371
    7. 'strict' → logprob: -3.587569236755371
    8. 'minimal' → logprob: -3.712569236755371
    9. 'valid' → logprob: -4.087569236755371
    10. ' minimal' → logprob: -4.212569236755371

Token 894: ' polygon' (ID: 65081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17446185648441315
    2. '<|end|>' → logprob: -2.049461841583252
    3. ' for' → logprob: -4.924461841583252
    4. '#' → logprob: -6.049461841583252
    5. '<|end|>' → logprob: -6.174461841583252
    6. 'def' → logprob: -6.174461841583252
    7. '    
' → logprob: -6.424461841583252
    8. 'for' → logprob: -6.549461841583252
    9. 'k' → logprob: -6.549461841583252
    10. ',' → logprob: -6.549461841583252

Token 895: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10794908553361893
    2. 'k' → logprob: -3.2329490184783936
    3. 'res' → logprob: -3.8579490184783936
    4. 'ans' → logprob: -4.857949256896973
    5. 'answer' → logprob: -4.857949256896973
    6. 'result' → logprob: -5.232949256896973
    7. 'for' → logprob: -5.232949256896973
    8. 'max' → logprob: -5.607949256896973
    9. 'answers' → logprob: -5.857949256896973
    10. 'results' → logprob: -5.982949256896973

Token 896: ' test' (ID: 1746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16351838409900665
    2. '#' → logprob: -2.5385184288024902
    3. '
' → logprob: -3.9135184288024902
    4. ' and' → logprob: -4.91351842880249
    5. 'import' → logprob: -4.91351842880249
    6. 'and' → logprob: -5.03851842880249
    7. 'def' → logprob: -5.28851842880249
    8. ' for' → logprob: -5.78851842880249
    9. ' but' → logprob: -6.03851842880249
    10. 'continue' → logprob: -6.16351842880249

Token 897: ' their' (ID: 1043)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28461387753486633
    2. '   ' → logprob: -2.409613847732544
    3. 'for' → logprob: -3.409613847732544
    4. 'if' → logprob: -3.534613847732544
    5. ' k' → logprob: -3.784613847732544
    6. '
' → logprob: -4.034614086151123
    7. ' if' → logprob: -4.284614086151123
    8. 'comb' → logprob: -4.284614086151123
    9. ' for' → logprob: -5.034614086151123
    10. '#' → logprob: -5.159614086151123

Token 898: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.11913565546274185
    2. 'areas' → logprob: -2.619135618209839
    3. ' area' → logprob: -3.369135618209839
    4. ' areas' → logprob: -6.119135856628418
    5. 'indices' → logprob: -6.619135856628418
    6. 'points' → logprob: -7.244135856628418
    7. 'edges' → logprob: -9.744135856628418
    8. 'indexes' → logprob: -9.869135856628418
    9. '```' → logprob: -9.869135856628418
    10. 'point' → logprob: -9.994135856628418

Token 899: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008747532963752747
    2. '    
' → logprob: -6.008747577667236
    3. 'max' → logprob: -6.383747577667236
    4. 'k' → logprob: -6.883747577667236
    5. '
' → logprob: -7.383747577667236
    6. 'for' → logprob: -7.633747577667236
    7. 'min' → logprob: -7.883747577667236
    8. 'ans' → logprob: -8.258747100830078
    9. 'results' → logprob: -8.258747100830078
    10. '#' → logprob: -8.633747100830078

Token 900: ' keep' (ID: 3357)
  Prédit: 'keep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keep' → logprob: -0.560357391834259
    2. 'update' → logprob: -1.0603573322296143
    3. 'store' → logprob: -2.5603573322296143
    4. 'track' → logprob: -5.810357570648193
    5. 'save' → logprob: -7.185357570648193
    6. 'record' → logprob: -7.435357570648193
    7. 'remember' → logprob: -7.810357570648193
    8. 'compare' → logprob: -8.435357093811035
    9. ' keep' → logprob: -8.810357093811035
    10. ' update' → logprob: -9.560357093811035

Token 901: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.14986300468444824
    2. 'answer' → logprob: -2.5248630046844482
    3. '   ' → logprob: -4.149863243103027
    4. 'min' → logprob: -4.524863243103027
    5. 'minimal' → logprob: -4.524863243103027
    6. 'ans' → logprob: -5.649863243103027
    7. 'import' → logprob: -5.649863243103027
    8. '#' → logprob: -5.899863243103027
    9. 'for' → logprob: -5.899863243103027
    10. 'answers' → logprob: -6.149863243103027

Token 902: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024931862950325012
    2. 'for' → logprob: -5.024931907653809
    3. 'results' → logprob: -5.399931907653809
    4. 'max' → logprob: -6.149931907653809
    5. 'answers' → logprob: -6.149931907653809
    6. '    
' → logprob: -6.524931907653809
    7. 'min' → logprob: -6.899931907653809
    8. 'best' → logprob: -7.149931907653809
    9. 'ans' → logprob: -7.274931907653809
    10. 'answer' → logprob: -7.399931907653809

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026743531227111816
    2. 'k' → logprob: -3.7767434120178223
    3. '    
' → logprob: -6.651743412017822
    4. 'max' → logprob: -7.276743412017822
    5. '
' → logprob: -8.15174388885498
    6. 'comb' → logprob: -8.27674388885498
    7. 'from' → logprob: -8.40174388885498
    8. '```' → logprob: -8.90174388885498
    9. 'for' → logprob: -9.15174388885498
    10. 'import' → logprob: -9.15174388885498

Token 904: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.036112666130066
    2. '   ' → logprob: -1.786112666130066
    3. 'res' → logprob: -2.0361127853393555
    4. 'max' → logprob: -2.1611127853393555
    5. 'best' → logprob: -2.7861127853393555
    6. 'from' → logprob: -3.1611127853393555
    7. 'ans' → logprob: -3.4111127853393555
    8. 'answer' → logprob: -3.5361127853393555
    9. 'dp' → logprob: -3.6611127853393555
    10. 'result' → logprob: -4.7861127853393555

Token 905: ' Generate' (ID: 33886)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.046355128288269
    2. 'res' → logprob: -1.921355128288269
    3. 'dp' → logprob: -1.921355128288269
    4. 'min' → logprob: -2.5463552474975586
    5. 'from' → logprob: -3.0463552474975586
    6. 'ans' → logprob: -3.0463552474975586
    7. 'for' → logprob: -3.2963552474975586
    8. 'answer' → logprob: -3.2963552474975586
    9. 'results' → logprob: -3.6713552474975586
    10. 'max' → logprob: -3.7963552474975586

Token 906: ' all' (ID: 722)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.11419181525707245
    2. 'k' → logprob: -2.739191770553589
    3. 'from' → logprob: -3.989191770553589
    4. ' comb' → logprob: -4.989192008972168
    5. 'for' → logprob: -5.114192008972168
    6. '[' → logprob: -5.739192008972168
    7. 'import' → logprob: -5.864192008972168
    8. 'com' → logprob: -6.614192008972168
    9. '3' → logprob: -6.864192008972168
    10. '[]' → logprob: -7.239192008972168

Token 907: ' k' (ID: 372)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2291102111339569
    2. 'k' → logprob: -2.6041102409362793
    3. 'com' → logprob: -3.1041102409362793
    4. 'for' → logprob: -3.7291102409362793
    5. ' comb' → logprob: -3.7291102409362793
    6. 'from' → logprob: -3.7291102409362793
    7. 'sub' → logprob: -5.479110240936279
    8. ' k' → logprob: -6.354110240936279
    9. '   ' → logprob: -6.604110240936279
    10. 'import' → logprob: -6.729110240936279

Token 908: '-com' (ID: 18251)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06060566008090973
    2. ' =' → logprob: -3.810605764389038
    3. 'com' → logprob: -4.935605525970459
    4. 'for' → logprob: -5.060605525970459
    5. 's' → logprob: -5.685605525970459
    6. ' for' → logprob: -5.935605525970459
    7. '=com' → logprob: -6.060605525970459
    8. '_com' → logprob: -6.185605525970459
    9. '=[]' → logprob: -6.560605525970459
    10. '_comb' → logprob: -6.810605525970459

Token 909: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.06061261147260666
    2. 'bs' → logprob: -3.060612678527832
    3. 'b' → logprob: -4.435612678527832
    4. 'bination' → logprob: -9.685612678527832
    5. '   ' → logprob: -11.435612678527832
    6. 'bin' → logprob: -11.935612678527832
    7. 'bits' → logprob: -12.060612678527832
    8. 'bis' → logprob: -12.560612678527832
    9. 'bi' → logprob: -12.810612678527832
    10. '```' → logprob: -12.935612678527832

Token 910: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41148367524147034
    2. 'for' → logprob: -1.786483645439148
    3. ' for' → logprob: -2.7864837646484375
    4. 'from' → logprob: -2.9114837646484375
    5. 'k' → logprob: -4.4114837646484375
    6. ' comb' → logprob: -4.4114837646484375
    7. 'comb' → logprob: -4.7864837646484375
    8. ' from' → logprob: -4.9114837646484375
    9. 'import' → logprob: -5.4114837646484375
    10. '
' → logprob: -5.5364837646484375

Token 911: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.695949375629425
    2. 'from' → logprob: -1.4459493160247803
    3. '   ' → logprob: -2.0709493160247803
    4. 'k' → logprob: -2.3209493160247803
    5. 'comb' → logprob: -3.6959493160247803
    6. 'import' → logprob: -4.320949554443359
    7. ' for' → logprob: -6.695949554443359
    8. ' from' → logprob: -7.695949554443359
    9. '#' → logprob: -7.820949554443359
    10. '
' → logprob: -7.820949554443359

Token 912: ' if' (ID: 538)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9297523498535156
    2. 'comb' → logprob: -1.1797523498535156
    3. 'for' → logprob: -1.8047523498535156
    4. '   ' → logprob: -2.4297523498535156
    5. 'if' → logprob: -3.4297523498535156
    6. 'conv' → logprob: -5.304752349853516
    7. ' comb' → logprob: -5.929752349853516
    8. 'from' → logprob: -6.554752349853516
    9. ' for' → logprob: -7.054752349853516
    10. '#' → logprob: -7.304752349853516

Token 913: ' polygon' (ID: 65081)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04871942475438118
    2. 'is' → logprob: -3.1737194061279297
    3. 'conv' → logprob: -6.04871940612793
    4. 'the' → logprob: -6.79871940612793
    5. 'len' → logprob: -7.04871940612793
    6. 'points' → logprob: -8.29871940612793
    7. ' is' → logprob: -8.42371940612793
    8. ' k' → logprob: -8.79871940612793
    9. 'area' → logprob: -8.92371940612793
    10. 'comb' → logprob: -9.67371940612793

Token 914: ' formed' (ID: 20680)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3607383668422699
    2. ' is' → logprob: -1.9857383966445923
    3. 'points' → logprob: -2.3607382774353027
    4. '#' → logprob: -3.4857382774353027
    5. '   ' → logprob: -4.235738277435303
    6. ' points' → logprob: -5.360738277435303
    7. '
' → logprob: -5.485738277435303
    8. 'formed' → logprob: -6.110738277435303
    9. '_points' → logprob: -6.235738277435303
    10. 'for' → logprob: -6.485738277435303

Token 915: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16093559563159943
    2. 'for' → logprob: -2.160935640335083
    3. ' for' → logprob: -3.660935640335083
    4. 'from' → logprob: -5.910935401916504
    5. 'def' → logprob: -6.035935401916504
    6. ',' → logprob: -6.785935401916504
    7. 'k' → logprob: -7.535935401916504
    8. '```' → logprob: -8.785935401916504
    9. '#' → logprob: -8.910935401916504
    10. 'with' → logprob: -8.910935401916504

Token 916: ' those' (ID: 2617)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05751707777380943
    2. '[idx' → logprob: -3.6825170516967773
    3. '[p' → logprob: -4.182517051696777
    4. '[i' → logprob: -5.057517051696777
    5. 'points' → logprob: -5.432517051696777
    6. '[k' → logprob: -6.557517051696777
    7. '[id' → logprob: -6.932517051696777
    8. 'pts' → logprob: -7.057517051696777
    9. ' [' → logprob: -7.932517051696777
    10. 'comb' → logprob: -7.932517051696777

Token 917: ' points' (ID: 5571)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7829762697219849
    2. '   ' → logprob: -1.0329762697219849
    3. '#' → logprob: -3.0329761505126953
    4. 'indices' → logprob: -3.5329761505126953
    5. 'indexes' → logprob: -3.5329761505126953
    6. 'points' → logprob: -3.7829761505126953
    7. 'for' → logprob: -4.157976150512695
    8. '```' → logprob: -4.532976150512695
    9. '_idxs' → logprob: -4.657976150512695
    10. 'comb' → logprob: -4.657976150512695

Token 918: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05587752163410187
    2. 'for' → logprob: -3.805877447128296
    3. ' for' → logprob: -3.805877447128296
    4. ',' → logprob: -5.930877685546875
    5. 'def' → logprob: -6.055877685546875
    6. '
' → logprob: -6.555877685546875
    7. '<|end|>' → logprob: -6.805877685546875
    8. 'from' → logprob: -7.305877685546875
    9. 'import' → logprob: -7.680877685546875
    10. '    
' → logprob: -8.555877685546875

Token 919: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.20777660608291626
    2. 'conv' → logprob: -2.9577765464782715
    3. 'points' → logprob: -3.3327765464782715
    4. 'order' → logprob: -3.4577765464782715
    5. 'lex' → logprob: -4.0827765464782715
    6. 'the' → logprob: -4.3327765464782715
    7. 'pts' → logprob: -4.7077765464782715
    8. 'index' → logprob: -5.4577765464782715
    9. 'their' → logprob: -5.4577765464782715
    10. 'indices' → logprob: -5.4577765464782715

Token 920: ' cc' (ID: 22988)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002482553943991661
    2. 'cw' → logprob: -6.1274824142456055
    3. 'clock' → logprob: -8.627482414245605
    4. '   ' → logprob: -9.877482414245605
    5. 'W' → logprob: -11.377482414245605
    6. 'ws' → logprob: -11.377482414245605
    7. 'order' → logprob: -11.877482414245605
    8. 'poly' → logprob: -11.877482414245605
    9. 'c' → logprob: -12.127482414245605
    10. 'counter' → logprob: -12.502482414245605

Token 922: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.7239883542060852
    2. 'order' → logprob: -1.2239882946014404
    3. '   ' → logprob: -3.0989882946014404
    4. ' by' → logprob: -3.2239882946014404
    5. 'points' → logprob: -3.8489882946014404
    6. ',' → logprob: -4.2239885330200195
    7. ' points' → logprob: -4.4739885330200195
    8. ')' → logprob: -4.5989885330200195
    9. ' for' → logprob: -4.5989885330200195
    10. '(points' → logprob: -4.7239885330200195

Token 923: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07055772095918655
    2. ' for' → logprob: -3.6955578327178955
    3. 'for' → logprob: -3.8205578327178955
    4. ',' → logprob: -4.820557594299316
    5. '
' → logprob: -5.445557594299316
    6. 'def' → logprob: -5.820557594299316
    7. 'from' → logprob: -6.445557594299316
    8. 'import' → logprob: -7.070557594299316
    9. ' and' → logprob: -7.445557594299316
    10. 'k' → logprob: -7.445557594299316

Token 924: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.005530423019081354
    2. ' convex' → logprob: -5.50553035736084
    3. 'valid' → logprob: -7.13053035736084
    4. '#' → logprob: -8.25553035736084
    5. '   ' → logprob: -8.25553035736084
    6. '```' → logprob: -10.25553035736084
    7. 'minimal' → logprob: -10.38053035736084
    8. '
' → logprob: -10.88053035736084
    9. 'a' → logprob: -11.63053035736084
    10. 'def' → logprob: -11.75553035736084

Token 925: ' polygon' (ID: 65081)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05646704137325287
    2. ',' → logprob: -4.556467056274414
    3. 'for' → logprob: -4.681467056274414
    4. '
' → logprob: -4.681467056274414
    5. ' and' → logprob: -4.806467056274414
    6. ' for' → logprob: -5.556467056274414
    7. 'def' → logprob: -5.931467056274414
    8. 'import' → logprob: -6.056467056274414
    9. 'k' → logprob: -6.181467056274414
    10. 'and' → logprob: -6.431467056274414

Token 926: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039688896387815475
    2. '
' → logprob: -3.7896888256073
    3. 'for' → logprob: -5.414689064025879
    4. ' for' → logprob: -5.789689064025879
    5. 'from' → logprob: -6.289689064025879
    6. 'import' → logprob: -6.289689064025879
    7. 'k' → logprob: -6.664689064025879
    8. 'def' → logprob: -7.289689064025879
    9. ',' → logprob: -7.289689064025879
    10. '    
' → logprob: -7.414689064025879

Token 927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019485102966427803
    2. 'for' → logprob: -6.501948356628418
    3. ' for' → logprob: -8.251948356628418
    4. 'from' → logprob: -9.501948356628418
    5. 'import' → logprob: -10.126948356628418
    6. '```' → logprob: -10.751948356628418
    7. 'results' → logprob: -11.001948356628418
    8. 'def' → logprob: -11.126948356628418
    9. '    
' → logprob: -12.876948356628418
    10. '
' → logprob: -12.876948356628418

Token 928: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2657102346420288
    2. '   ' → logprob: -1.5157102346420288
    3. ' for' → logprob: -4.515710353851318
    4. 'from' → logprob: -6.015710353851318
    5. 'import' → logprob: -9.01570987701416
    6. '```' → logprob: -9.64070987701416
    7. 'answers' → logprob: -10.26570987701416
    8. ' from' → logprob: -11.01570987701416
    9. 'results' → logprob: -11.26570987701416
    10. 'answer' → logprob: -11.26570987701416

Token 929: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06577961891889572
    2. '   ' → logprob: -3.565779685974121
    3. 'from' → logprob: -3.690779685974121
    4. 'res' → logprob: -5.940779685974121
    5. 'results' → logprob: -6.065779685974121
    6. 'answers' → logprob: -6.190779685974121
    7. 'import' → logprob: -6.815779685974121
    8. 'answer' → logprob: -7.190779685974121
    9. 'max' → logprob: -7.315779685974121
    10. '#' → logprob: -8.190779685974121

Token 930: ' need' (ID: 1309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1089637279510498
    2. 'k' → logprob: -1.2339637279510498
    3. 'for' → logprob: -2.10896372795105
    4. ' for' → logprob: -2.60896372795105
    5. 'continue' → logprob: -3.60896372795105
    6. 'import' → logprob: -3.73396372795105
    7. ' can' → logprob: -3.85896372795105
    8. 'can' → logprob: -4.483963966369629
    9. ' will' → logprob: -4.483963966369629
    10. ' k' → logprob: -4.733963966369629

Token 931: ' a' (ID: 261)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.011442592367529869
    2. ' to' → logprob: -4.6364426612854
    3. 'a' → logprob: -7.2614426612854
    4. 'def' → logprob: -8.136442184448242
    5. 'from' → logprob: -8.386442184448242
    6. 'for' → logprob: -8.636442184448242
    7. 'k' → logprob: -9.011442184448242
    8. '   ' → logprob: -9.886442184448242
    9. 'import' → logprob: -10.386442184448242
    10. ' a' → logprob: -10.886442184448242

Token 932: ' function' (ID: 1114)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7613806128501892
    2. 'def' → logprob: -1.386380672454834
    3. 'for' → logprob: -2.261380672454834
    4. 'll' → logprob: -3.011380672454834
    5. 'sorted' → logprob: -3.386380672454834
    6. 'k' → logprob: -3.511380672454834
    7. ' from' → logprob: -4.386380672454834
    8. 'import' → logprob: -4.511380672454834
    9. ' for' → logprob: -4.636380672454834
    10. 'ns' → logprob: -5.386380672454834

Token 933: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00143678137101233
    2. ' to' → logprob: -7.001436710357666
    3. 'to' → logprob: -7.751436710357666
    4. '
' → logprob: -10.501437187194824
    5. ' def' → logprob: -10.501437187194824
    6. '<|end|>' → logprob: -10.751437187194824
    7. 'from' → logprob: -11.501437187194824
    8. '<|end|>' → logprob: -13.001437187194824
    9. ' that' → logprob: -13.376437187194824
    10. 'that' → logprob: -13.501437187194824

Token 934: ' order' (ID: 2569)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.26890191435813904
    2. 'get' → logprob: -2.143901824951172
    3. 'sort' → logprob: -3.518901824951172
    4. 'def' → logprob: -3.893901824951172
    5. 'enumer' → logprob: -3.893901824951172
    6. 'find' → logprob: -4.018901824951172
    7. 'order' → logprob: -4.643901824951172
    8. 'print' → logprob: -5.268901824951172
    9. 'output' → logprob: -5.268901824951172
    10. 'conv' → logprob: -6.643901824951172

Token 935: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3068903684616089
    2. 'the' → logprob: -1.4318903684616089
    3. 'poly' → logprob: -4.181890487670898
    4. 'indices' → logprob: -5.931890487670898
    5. ' points' → logprob: -6.181890487670898
    6. 'selected' → logprob: -6.431890487670898
    7. ' the' → logprob: -6.556890487670898
    8. 'def' → logprob: -7.306890487670898
    9. 'tokens' → logprob: -7.931890487670898
    10. 'a' → logprob: -8.181890487670898

Token 936: ' cc' (ID: 22988)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27643099427223206
    2. ' by' → logprob: -2.401431083679199
    3. ' to' → logprob: -3.151431083679199
    4. ' in' → logprob: -3.276431083679199
    5. '   ' → logprob: -4.026431083679199
    6. 'by' → logprob: -4.401431083679199
    7. 'in' → logprob: -4.526431083679199
    8. '
' → logprob: -5.901431083679199
    9. 'to' → logprob: -6.026431083679199
    10. ':' → logprob: -6.026431083679199

Token 937: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.339278580620885e-06
    2. 'wise' → logprob: -14.375001907348633
    3. 'ws' → logprob: -14.500001907348633
    4. 'cw' → logprob: -14.625001907348633
    5. 'ww' → logprob: -15.375001907348633
    6. 'wv' → logprob: -15.625001907348633
    7. 'wl' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.500001907348633
    9. 'ｗ' → logprob: -16.500001907348633
    10. '
' → logprob: -17.375001907348633

Token 938: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15215381979942322
    2. '
' → logprob: -2.402153730392456
    3. '(points' → logprob: -4.402153968811035
    4. '<|end|>' → logprob: -4.402153968811035
    5. '<|end|>' → logprob: -4.902153968811035
    6. '   ' → logprob: -5.402153968811035
    7. ',' → logprob: -5.777153968811035
    8. 'from' → logprob: -6.652153968811035
    9. ',
' → logprob: -6.652153968811035
    10. 'points' → logprob: -6.777153968811035

Token 939: ' form' (ID: 1625)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.338728666305542
    2. 'def' → logprob: -2.713728666305542
    3. 'build' → logprob: -2.963728666305542
    4. 'construct' → logprob: -3.338728666305542
    5. 'the' → logprob: -3.713728666305542
    6. 'return' → logprob: -4.213728904724121
    7. 'poly' → logprob: -4.338728904724121
    8. 'their' → logprob: -4.338728904724121
    9. 'get' → logprob: -4.588728904724121
    10. 'points' → logprob: -4.963728904724121

Token 940: ' polygon' (ID: 65081)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3418401777744293
    2. 'poly' → logprob: -1.341840147972107
    3. 'the' → logprob: -3.9668402671813965
    4. ' a' → logprob: -5.2168402671813965
    5. 'polygon' → logprob: -6.3418402671813965
    6. 'conv' → logprob: -7.4668402671813965
    7. ' poly' → logprob: -7.9668402671813965
    8. '[' → logprob: -8.466839790344238
    9. ' the' → logprob: -8.591839790344238
    10. 'def' → logprob: -8.966839790344238

Token 941: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03577284887433052
    2. '
' → logprob: -4.285772800445557
    3. '   ' → logprob: -4.410772800445557
    4. '<|end|>' → logprob: -5.535772800445557
    5. '<|end|>' → logprob: -5.910772800445557
    6. 'from' → logprob: -7.285772800445557
    7. 'import' → logprob: -7.410772800445557
    8. ' def' → logprob: -8.035773277282715
    9. 'points' → logprob: -8.160773277282715
    10. '#' → logprob: -8.535773277282715

Token 942: ' correct' (ID: 6145)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.5751131176948547
    2. 'def' → logprob: -0.9501131176948547
    3. 'conv' → logprob: -3.70011305809021
    4. 'cc' → logprob: -5.075113296508789
    5. 'counter' → logprob: -5.200113296508789
    6. 'points' → logprob: -5.825113296508789
    7. 'order' → logprob: -6.075113296508789
    8. 'the' → logprob: -6.200113296508789
    9. 'polygon' → logprob: -6.450113296508789
    10. 'sorted' → logprob: -6.700113296508789

Token 943: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.05866718664765358
    2. 'poly' → logprob: -3.3086671829223633
    3. ' order' → logprob: -4.808667182922363
    4. 'orientation' → logprob: -5.933667182922363
    5. '_points' → logprob: -6.308667182922363
    6. '_order' → logprob: -6.433667182922363
    7. 'polygon' → logprob: -6.808667182922363
    8. 'direction' → logprob: -6.933667182922363
    9. 'points' → logprob: -7.433667182922363
    10. 'cc' → logprob: -7.433667182922363

Token 944: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016696486622095108
    2. '
' → logprob: -5.016696453094482
    3. '   ' → logprob: -5.266696453094482
    4. 'import' → logprob: -6.391696453094482
    5. '<|end|>' → logprob: -7.016696453094482
    6. 'from' → logprob: -7.141696453094482
    7. '<|end|>' → logprob: -7.266696453094482
    8. '#' → logprob: -8.39169692993164
    9. 'points' → logprob: -9.01669692993164
    10. ' def' → logprob: -9.01669692993164

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04686734825372696
    2. 'def' → logprob: -3.1718673706054688
    3. 'import' → logprob: -6.671867370605469
    4. '
' → logprob: -6.921867370605469
    5. '```' → logprob: -7.796867370605469
    6. '#' → logprob: -7.921867370605469
    7. '<|end|>' → logprob: -8.171867370605469
    8. '    
' → logprob: -8.171867370605469
    9. '<|end|>' → logprob: -9.421867370605469
    10. 'from' → logprob: -10.046867370605469

Token 946: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16504575312137604
    2. '   ' → logprob: -2.040045738220215
    3. '
' → logprob: -4.415045738220215
    4. 'import' → logprob: -5.415045738220215
    5. ' def' → logprob: -6.040045738220215
    6. 'from' → logprob: -7.040045738220215
    7. '    
' → logprob: -7.040045738220215
    8. '#' (adapté à ' #') → logprob: -7.165045738220215
    9. 'center' → logprob: -8.665045738220215
    10. '```' → logprob: -9.040045738220215

Token 947: ' Use' (ID: 7649)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6184119582176208
    2. 'def' → logprob: -0.8684119582176208
    3. 'poly' → logprob: -5.118412017822266
    4. '
' → logprob: -5.243412017822266
    5. '#' → logprob: -5.368412017822266
    6. 'points' → logprob: -5.618412017822266
    7. ' def' → logprob: -5.618412017822266
    8. ' for' → logprob: -5.743412017822266
    9. 'for' → logprob: -5.868412017822266
    10. 'import' → logprob: -5.993412017822266

Token 948: ' sorting' (ID: 51375)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0577795505523682
    2. 'def' → logprob: -1.6827795505523682
    3. 'import' → logprob: -1.8077795505523682
    4. 'conv' → logprob: -2.557779550552368
    5. 'cross' → logprob: -2.682779550552368
    6. 'cent' → logprob: -3.057779550552368
    7. 'the' → logprob: -3.307779550552368
    8. 'from' → logprob: -3.307779550552368
    9. 'center' → logprob: -3.807779550552368
    10. 'sorted' → logprob: -5.932779312133789

Token 949: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5674623847007751
    2. '   ' → logprob: -1.06746244430542
    3. 'import' → logprob: -3.44246244430542
    4. ' for' → logprob: -4.31746244430542
    5. 'for' → logprob: -4.94246244430542
    6. 'points' → logprob: -5.06746244430542
    7. '(points' → logprob: -5.31746244430542
    8. ' by' → logprob: -5.44246244430542
    9. ',' → logprob: -5.69246244430542
    10. '#' → logprob: -5.69246244430542

Token 950: ' angle' (ID: 16538)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5102359652519226
    2. 'math' → logprob: -1.5102360248565674
    3. 'x' → logprob: -2.3852360248565674
    4. 'atan' → logprob: -2.8852360248565674
    5. 'import' → logprob: -4.135235786437988
    6. 'y' → logprob: -5.260235786437988
    7. 'angle' → logprob: -5.635235786437988
    8. 'def' → logprob: -6.885235786437988
    9. '(lambda' → logprob: -6.885235786437988
    10. 'cmath' → logprob: -7.010235786437988

Token 951: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6860474944114685
    2. 'def' → logprob: -1.1860475540161133
    3. 'import' → logprob: -2.6860475540161133
    4. 'from' → logprob: -3.1860475540161133
    5. '
' → logprob: -3.4360475540161133
    6. ' from' → logprob: -4.561047554016113
    7. ',' → logprob: -5.061047554016113
    8. ' def' → logprob: -5.061047554016113
    9. '<|end|>' → logprob: -5.061047554016113
    10. ' for' → logprob: -5.311047554016113

Token 952: ' centroid' (ID: 137352)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.0501688718795776
    2. 'h' → logprob: -1.8001688718795776
    3. 'pts' → logprob: -1.8001688718795776
    4. 'points' → logprob: -2.675168991088867
    5. 'lowest' → logprob: -2.675168991088867
    6. 'import' → logprob: -3.175168991088867
    7. 'def' → logprob: -3.300168991088867
    8. 'center' → logprob: -4.175168991088867
    9. 'p' → logprob: -4.175168991088867
    10. '0' → logprob: -4.300168991088867

Token 953: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36916548013687134
    2. '
' → logprob: -1.3691654205322266
    3. 'def' → logprob: -3.2441654205322266
    4. '    
' → logprob: -4.994165420532227
    5. 'import' → logprob: -5.619165420532227
    6. 'center' → logprob: -6.619165420532227
    7. '#' → logprob: -7.369165420532227
    8. 'from' → logprob: -7.369165420532227
    9. 'cent' → logprob: -7.744165420532227
    10. ',' → logprob: -8.244165420532227

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11185457557439804
    2. '
' → logprob: -2.3618545532226562
    3. '    
' → logprob: -4.736854553222656
    4. 'def' → logprob: -6.611854553222656
    5. 'import' → logprob: -7.236854553222656
    6. '```' → logprob: -8.361854553222656
    7. 'cent' → logprob: -8.986854553222656
    8. 'center' → logprob: -9.736854553222656
    9. '`' → logprob: -10.111854553222656
    10. ' 
' → logprob: -10.236854553222656

Token 955: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7099698781967163
    2. 'def' → logprob: -1.3349698781967163
    3. '
' → logprob: -1.4599698781967163
    4. '    
' → logprob: -5.459969997406006
    5. 'import' → logprob: -5.709969997406006
    6. 'for' → logprob: -6.459969997406006
    7. 'cent' → logprob: -7.084969997406006
    8. ' def' → logprob: -7.459969997406006
    9. 'center' → logprob: -7.459969997406006
    10. ' for' → logprob: -7.584969997406006

Token 956: ' Pre' (ID: 4659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08669201284646988
    2. '   ' → logprob: -2.7116920948028564
    3. '
' → logprob: -5.461691856384277
    4. 'from' → logprob: -5.836691856384277
    5. 'import' → logprob: -6.086691856384277
    6. 'center' → logprob: -6.086691856384277
    7. 'cent' → logprob: -6.336691856384277
    8. ' def' → logprob: -6.336691856384277
    9. 'for' → logprob: -7.086691856384277
    10. '#' → logprob: -8.586691856384277

Token 957: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.5024040341377258
    2. 'sum' → logprob: -2.377403974533081
    3. 'def' → logprob: -2.502403974533081
    4. 'v' → logprob: -3.127403974533081
    5. 'process' → logprob: -3.502403974533081
    6. 'fix' → logprob: -4.00240421295166
    7. 'computed' → logprob: -4.50240421295166
    8. 'dict' → logprob: -4.50240421295166
    9. 'from' → logprob: -4.62740421295166
    10. 'd' → logprob: -4.87740421295166

Token 958: ' index' (ID: 3472)
  Prédit: 'cent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cent' → logprob: -0.07856893539428711
    2. 'center' → logprob: -3.453568935394287
    3. 'from' → logprob: -4.078568935394287
    4. ' centroid' → logprob: -4.578568935394287
    5. ' cent' → logprob: -5.578568935394287
    6. '   ' → logprob: -5.703568935394287
    7. 'def' → logprob: -5.828568935394287
    8. '#' → logprob: -6.203568935394287
    9. 'cen' → logprob: -6.953568935394287
    10. ' from' → logprob: -6.953568935394287

Token 959: ' map' (ID: 4014)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11530524492263794
    2. '_to' → logprob: -3.240305185317993
    3. 'es' → logprob: -3.865305185317993
    4. ' =' → logprob: -4.740305423736572
    5. '_points' → logprob: -4.990305423736572
    6. 'points' → logprob: -5.115305423736572
    7. '_map' → logprob: -5.490305423736572
    8. 'ed' → logprob: -5.615305423736572
    9. 'to' → logprob: -5.990305423736572
    10. '_list' → logprob: -6.115305423736572

Token 960: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3767562508583069
    2. 'cent' → logprob: -2.126756191253662
    3. 'idx' → logprob: -2.751756191253662
    4. 'center' → logprob: -3.001756191253662
    5. 'point' → logprob: -3.376756191253662
    6. 'index' → logprob: -3.626756191253662
    7. ' centroid' → logprob: -5.126756191253662
    8. '
' → logprob: -5.251756191253662
    9. ' idx' → logprob: -7.251756191253662
    10. '#' → logprob: -7.251756191253662

Token 961: ' input' (ID: 3422)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4098258316516876
    2. 'point' → logprob: -2.2848258018493652
    3. 'idx' → logprob: -2.6598258018493652
    4. 'i' → logprob: -3.1598258018493652
    5. 'pts' → logprob: -3.4098258018493652
    6. 'index' → logprob: -3.6598258018493652
    7. 'p' → logprob: -4.034825801849365
    8. 'pt' → logprob: -4.409825801849365
    9. ' points' → logprob: -4.534825801849365
    10. 'h' → logprob: -4.659825801849365

Token 962: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6034979820251465
    2. 'points' → logprob: -1.6034979820251465
    3. 'point' → logprob: -2.1034979820251465
    4. ' for' → logprob: -2.3534979820251465
    5. '   ' → logprob: -2.4784979820251465
    6. 'idx' → logprob: -2.9784979820251465
    7. 'indices' → logprob: -3.7284979820251465
    8. ' =' → logprob: -3.7284979820251465
    9. ' to' → logprob: -3.8534979820251465
    10. ',' → logprob: -4.3534979820251465

Token 963: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5359450578689575
    2. 'point' → logprob: -1.6609450578689575
    3. 'idx' → logprob: -2.285944938659668
    4. 'index' → logprob: -3.285944938659668
    5. '
' → logprob: -3.785944938659668
    6. '#' → logprob: -4.910944938659668
    7. 'poly' → logprob: -5.160944938659668
    8. 'points' → logprob: -5.285944938659668
    9. ',' → logprob: -5.535944938659668
    10. 'def' → logprob: -5.785944938659668

Token 964: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8719111680984497
    2. ')' → logprob: -1.6219111680984497
    3. ' =' → logprob: -2.74691104888916
    4. 's' → logprob: -2.99691104888916
    5. 'def' → logprob: -3.62191104888916
    6. '<|end|>' → logprob: -3.62191104888916
    7. '_to' → logprob: -3.74691104888916
    8. ' to' → logprob: -3.74691104888916
    9. ',' → logprob: -3.74691104888916
    10. 'to' → logprob: -3.87191104888916

Token 965: '0' (ID: 15)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4168071746826172
    2. ' centroid' → logprob: -2.291807174682617
    3. 'index' → logprob: -2.541807174682617
    4. ' idx' → logprob: -2.666807174682617
    5. 'cent' → logprob: -2.666807174682617
    6. 'point' → logprob: -2.791807174682617
    7. 'center' → logprob: -3.041807174682617
    8. 'indices' → logprob: -3.416807174682617
    9. ' cent' → logprob: -3.916807174682617
    10. 'points' → logprob: -3.916807174682617

Token 966: '-based' (ID: 8235)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9772247076034546
    2. ' to' → logprob: -1.2272247076034546
    3. ',' → logprob: -2.227224826812744
    4. '=' → logprob: -2.602224826812744
    5. '0' → logprob: -3.352224826812744
    6. ' =' → logprob: -4.102224826812744
    7. ':' → logprob: -4.227224826812744
    8. ' for' → logprob: -4.727224826812744
    9. ')' → logprob: -4.852224826812744
    10. 'for' → logprob: -4.852224826812744

Token 967: '
' (ID: 198)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.1362992525100708
    2. 'idx' → logprob: -1.8862992525100708
    3. 'index' → logprob: -2.3862991333007812
    4. ' =' → logprob: -2.6362991333007812
    5. 'points' → logprob: -2.7612991333007812
    6. '
' → logprob: -3.0112991333007812
    7. ' to' → logprob: -3.0112991333007812
    8. 'to' → logprob: -3.3862991333007812
    9. '   ' → logprob: -3.5112991333007812
    10. ',' → logprob: -3.7612991333007812

Token 968: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5853869318962097
    2. ' for' → logprob: -2.8353869915008545
    3. 'center' → logprob: -3.2103869915008545
    4. 'poly' → logprob: -3.2103869915008545
    5. 'point' → logprob: -3.3353869915008545
    6. 'idx' → logprob: -3.4603869915008545
    7. 'points' → logprob: -3.4603869915008545
    8. '#' → logprob: -3.7103869915008545
    9. '
' → logprob: -3.9603869915008545
    10. 'for' → logprob: -4.085386753082275

Token 969: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0388468503952026
    2. 'cent' → logprob: -1.6638468503952026
    3. ' centroid' → logprob: -1.7888468503952026
    4. 'center' → logprob: -2.163846969604492
    5. '
' → logprob: -2.913846969604492
    6. 'def' → logprob: -3.663846969604492
    7. 'idx' (adapté à ' idx') → logprob: -4.413846969604492
    8. ' center' → logprob: -4.413846969604492
    9. '```' → logprob: -4.538846969604492
    10. '#' → logprob: -4.913846969604492

Token 970: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.449135422706604
    2. '_to' → logprob: -1.199135422706604
    3. ' =' → logprob: -3.3241353034973145
    4. 's' → logprob: -4.0741353034973145
    5. 'to' → logprob: -6.0741353034973145
    6. 'map' → logprob: -6.4491353034973145
    7. '=' → logprob: -6.5741353034973145
    8. '_in' → logprob: -6.9491353034973145
    9. '_mapping' → logprob: -8.824135780334473
    10. '_of' → logprob: -8.949135780334473

Token 971: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6329938173294067
    2. ' =' → logprob: -0.7579938173294067
    3. '[' → logprob: -9.382993698120117
    4. '={' → logprob: -9.882993698120117
    5. '   ' → logprob: -10.007993698120117
    6. '={}' → logprob: -10.007993698120117
    7. '=
' → logprob: -10.132993698120117
    8. '=[' → logprob: -10.257993698120117
    9. ' =
' → logprob: -11.007993698120117
    10. ',' → logprob: -11.632993698120117

Token 972: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6991767287254333
    2. '{i' → logprob: -1.1991767883300781
    3. '[' → logprob: -1.9491767883300781
    4. '[i' → logprob: -2.949176788330078
    5. '{}' → logprob: -5.074176788330078
    6. '[-' → logprob: -9.074176788330078
    7. '{x' → logprob: -9.199176788330078
    8. '[p' → logprob: -9.699176788330078
    9. ' [' → logprob: -10.199176788330078
    10. ' {' → logprob: -10.324176788330078

Token 973: 'p' (ID: 79)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02059035561978817
    2. 'p' → logprob: -4.145590305328369
    3. 'i' → logprob: -6.020590305328369
    4. '0' → logprob: -7.145590305328369
    5. ' points' → logprob: -7.645590305328369
    6. 'point' → logprob: -7.770590305328369
    7. '-' → logprob: -8.395590782165527
    8. 'pt' → logprob: -9.770590782165527
    9. 'None' → logprob: -10.395590782165527
    10. 'pts' → logprob: -10.395590782165527

Token 974: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006833644583821297
    2. '0' → logprob: -8.750683784484863
    3. '][' → logprob: -8.750683784484863
    4. '[-' → logprob: -8.875683784484863
    5. 'for' → logprob: -9.750683784484863
    6. '-' → logprob: -10.125683784484863
    7. '[:-' → logprob: -10.125683784484863
    8. '
' → logprob: -10.875683784484863
    9. '1' → logprob: -11.125683784484863
    10. ' for' → logprob: -11.250683784484863

Token 975: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20992285013198853
    2. '0' → logprob: -1.7099227905273438
    3. '-' → logprob: -5.959922790527344
    4. ':' → logprob: -6.209922790527344
    5. '3' → logprob: -6.209922790527344
    6. ':-' → logprob: -6.334922790527344
    7. '1' → logprob: -10.959922790527344
    8. '::-' → logprob: -10.959922790527344
    9. ' :' → logprob: -11.459922790527344
    10. '
' → logprob: -11.459922790527344

Token 976: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11686087399721146
    2. ' for' → logprob: -2.866860866546631
    3. ' -' → logprob: -3.491860866546631
    4. ']-' → logprob: -4.241860866546631
    5. ']' → logprob: -5.241860866546631
    6. 'for' → logprob: -5.866860866546631
    7. '   ' → logprob: -8.491861343383789
    8. ' ' → logprob: -8.866861343383789
    9. '	for' → logprob: -9.866861343383789
    10. '[' → logprob: -11.366861343383789

Token 977: ' for' (ID: 395)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29495155811309814
    2. ' -' → logprob: -1.4199515581130981
    3. ' for' → logprob: -4.419951438903809
    4. 'for' → logprob: -6.794951438903809
    5. '   ' → logprob: -7.919951438903809
    6. ']' → logprob: -9.294951438903809
    7. ' ' → logprob: -10.294951438903809
    8. ']-' → logprob: -10.544951438903809
    9. '[' → logprob: -11.544951438903809
    10. '	for' → logprob: -11.919951438903809

Token 978: ' p' (ID: 275)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0017582408618181944
    2. ' points' → logprob: -6.376758098602295
    3. 'p' → logprob: -10.001758575439453
    4. 'pts' → logprob: -12.126758575439453
    5. '(points' → logprob: -12.751758575439453
    6. '	points' → logprob: -14.001758575439453
    7. 'range' → logprob: -14.501758575439453
    8. 'point' → logprob: -14.751758575439453
    9. 'pt' → logprob: -15.876758575439453
    10. ' p' → logprob: -16.001758575439453

Token 979: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4289424419403076
    2. ' in' → logprob: -1.0539424419403076
    3. 'oints' → logprob: -9.678942680358887
    4. 'points' → logprob: -9.803942680358887
    5. ' p' → logprob: -10.428942680358887
    6. 'p' → logprob: -10.553942680358887
    7. ' points' → logprob: -10.678942680358887
    8. ']' → logprob: -11.553942680358887
    9. ' ' → logprob: -11.803942680358887
    10. 'i' → logprob: -11.803942680358887

Token 980: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.043635375797748566
    2. 'range' → logprob: -3.168635368347168
    3. ' points' → logprob: -7.793635368347168
    4. 'pts' → logprob: -9.168635368347168
    5. ' range' → logprob: -9.168635368347168
    6. '(points' → logprob: -12.668635368347168
    7. 'sorted' → logprob: -13.043635368347168
    8. 'point' → logprob: -13.293635368347168
    9. 'p' → logprob: -13.918635368347168
    10. '	points' → logprob: -14.043635368347168

Token 981: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011889629997313023
    2. '   ' → logprob: -4.511889457702637
    3. ' ]' → logprob: -7.261889457702637
    4. ']
' → logprob: -9.011889457702637
    5. ']

' → logprob: -12.511889457702637
    6. '<|end|>' → logprob: -13.261889457702637
    7. '<|end|>' → logprob: -13.636889457702637
    8. ']
' → logprob: -13.886889457702637
    9. '()]' → logprob: -14.011889457702637
    10. '.' → logprob: -14.136889457702637

Token 982: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036096926778554916
    2. 'from' → logprob: -4.536097049713135
    3. 'for' → logprob: -4.661097049713135
    4. 'results' → logprob: -5.411097049713135
    5. 'answers' → logprob: -6.161097049713135
    6. ' for' → logprob: -6.661097049713135
    7. 'def' → logprob: -6.786097049713135
    8. 'answer' → logprob: -7.036097049713135
    9. 'poly' → logprob: -7.161097049713135
    10. 'max' → logprob: -7.161097049713135

Token 983: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3291606903076172
    2. 'answer' → logprob: -1.4541606903076172
    3. 'answers' → logprob: -2.329160690307617
    4. 'results' → logprob: -2.454160690307617
    5. 'result' → logprob: -2.704160690307617
    6. 'res' → logprob: -2.829160690307617
    7. 'ans' → logprob: -3.329160690307617
    8. 'from' → logprob: -3.329160690307617
    9. 'min' → logprob: -3.579160690307617
    10. 'for' → logprob: -3.579160690307617

Token 984: ' cache' (ID: 11956)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1371873617172241
    2. 'for' → logprob: -1.3871873617172241
    3. 'res' → logprob: -2.6371874809265137
    4. 'ans' → logprob: -3.0121874809265137
    5. 'answer' → logprob: -3.0121874809265137
    6. '   ' → logprob: -3.0121874809265137
    7. 'answers' → logprob: -3.1371874809265137
    8. 'results' → logprob: -3.2621874809265137
    9. 'memo' → logprob: -3.7621874809265137
    10. 'dp' → logprob: -3.8871874809265137

Token 985: ' results' (ID: 4376)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36458346247673035
    2. '_area' → logprob: -2.3645834922790527
    3. '_cache' → logprob: -2.3645834922790527
    4. '_' → logprob: -2.7395834922790527
    5. '=' → logprob: -3.6145834922790527
    6. '={}' → logprob: -4.864583492279053
    7. '_min' → logprob: -5.114583492279053
    8. 'cache' → logprob: -5.364583492279053
    9. '{}' → logprob: -6.239583492279053
    10. 'area' → logprob: -6.739583492279053

Token 986: ' per' (ID: 777)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -1.0113414525985718
    2. 'results' → logprob: -1.5113414525985718
    3. ' =' → logprob: -2.1363415718078613
    4. ' cache' → logprob: -2.7613415718078613
    5. ' results' → logprob: -2.8863415718078613
    6. '   ' → logprob: -3.2613415718078613
    7. 'result' → logprob: -3.3863415718078613
    8. '_cache' → logprob: -3.8863415718078613
    9. '_results' → logprob: -4.761341571807861
    10. ' minimal' → logprob: -4.886341571807861

Token 987: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09237415343523026
    2. 'query' → logprob: -2.842374086380005
    3. ' k' → logprob: -3.717374086380005
    4. ' query' → logprob: -5.967374324798584
    5. 'q' → logprob: -7.342374324798584
    6. 'line' → logprob: -7.467374324798584
    7. 'Q' → logprob: -7.717374324798584
    8. '_k' → logprob: -8.217373847961426
    9. 'size' → logprob: -8.342373847961426
    10. '_query' → logprob: -8.967373847961426

Token 988: '
' (ID: 198)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.7358725666999817
    2. 'results' → logprob: -1.235872507095337
    3. 'res' → logprob: -2.985872507095337
    4. 'result' → logprob: -3.110872507095337
    5. ' results' → logprob: -3.235872507095337
    6. ' cache' → logprob: -3.610872507095337
    7. 'min' → logprob: -4.610872745513916
    8. '   ' → logprob: -4.985872745513916
    9. 'ans' → logprob: -5.110872745513916
    10. 'answer' → logprob: -5.110872745513916

Token 989: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5825268626213074
    2. 'results' → logprob: -1.7075269222259521
    3. ' results' → logprob: -2.332526922225952
    4. 'cache' → logprob: -2.707526922225952
    5. ' cache' → logprob: -3.707526922225952
    6. 'result' → logprob: -3.832526922225952
    7. '_results' → logprob: -4.457526683807373
    8. 'res' → logprob: -4.832526683807373
    9. '_cache' → logprob: -5.082526683807373
    10. '
' → logprob: -5.582526683807373

Token 990: ' result' (ID: 1534)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.6049402952194214
    2. 'results' → logprob: -1.1049402952194214
    3. 'res' → logprob: -2.354940414428711
    4. 'result' (adapté à ' result') → logprob: -4.104940414428711
    5. 'memo' → logprob: -5.229940414428711
    6. 'ans' → logprob: -6.354940414428711
    7. 'dp' → logprob: -6.354940414428711
    8. 'answers' → logprob: -7.729940414428711
    9. 'import' → logprob: -7.979940414428711
    10. 'min' → logprob: -7.979940414428711

Token 991: '_cache' (ID: 27045)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04228684678673744
    2. 's' → logprob: -3.6672868728637695
    3. ' =' → logprob: -4.2922868728637695
    4. '_' → logprob: -6.1672868728637695
    5. '={}' → logprob: -10.41728687286377
    6. '_=' → logprob: -10.54228687286377
    7. '[' → logprob: -11.54228687286377
    8. ':' → logprob: -11.79228687286377
    9. ',' → logprob: -12.79228687286377
    10. ' ' → logprob: -13.41728687286377

Token 992: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0035688269417732954
    2. ' =' → logprob: -5.753568649291992
    3. '={}' → logprob: -7.878568649291992
    4. '={' → logprob: -11.878568649291992
    5. '={}
' → logprob: -12.503568649291992
    6. '[' → logprob: -14.503568649291992
    7. '{}' → logprob: -15.253568649291992
    8. '=[]' → logprob: -15.628568649291992
    9. '{' → logprob: -15.628568649291992
    10. ' ={' → logprob: -15.878568649291992

Token 993: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1160349458805285e-05
    2. 'dict' → logprob: -11.500011444091797
    3. '{' → logprob: -14.500011444091797
    4. ' {}' → logprob: -15.125011444091797
    5. '{}
' → logprob: -15.875011444091797
    6. '{}

' → logprob: -18.250011444091797
    7. '{})' → logprob: -18.375011444091797
    8. ' dict' → logprob: -18.625011444091797
    9. '[' → logprob: -18.750011444091797
    10. '{},' → logprob: -20.000011444091797

Token 994: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3454674184322357
    2. 'for' → logprob: -1.345467448234558
    3. ' for' → logprob: -3.4704673290252686
    4. 'def' → logprob: -7.720467567443848
    5. '```' → logprob: -9.720467567443848
    6. '    
' → logprob: -10.095467567443848
    7. 'import' → logprob: -11.220467567443848
    8. '
' → logprob: -11.720467567443848
    9. '	for' → logprob: -11.970467567443848
    10. 'k' → logprob: -12.345467567443848

Token 995: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18006625771522522
    2. '   ' → logprob: -2.1800663471221924
    3. ' for' → logprob: -3.5550663471221924
    4. 'def' → logprob: -3.8050663471221924
    5. 'from' → logprob: -7.430066108703613
    6. 'import' → logprob: -8.680066108703613
    7. '```' → logprob: -9.680066108703613
    8. ' def' → logprob: -10.055066108703613
    9. '
' → logprob: -10.805066108703613
    10. 'k' → logprob: -12.055066108703613

Token 996: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0012849947670474648
    2. ' k' → logprob: -6.876285076141357
    3. 'q' → logprob: -8.3762845993042
    4. 'query' → logprob: -11.6262845993042
    5. '_k' → logprob: -11.8762845993042
    6. '   ' → logprob: -13.8762845993042
    7. ' q' → logprob: -14.0012845993042
    8. 'Q' → logprob: -14.3762845993042
    9. 'K' → logprob: -14.7512845993042
    10. 'queries' → logprob: -14.8762845993042

Token 997: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055548295378685
    2. 'in' → logprob: -2.9305481910705566
    3. ' ' → logprob: -7.555548191070557
    4. '	in' → logprob: -9.680548667907715
    5. ' =' → logprob: -10.805548667907715
    6. ' i' → logprob: -11.305548667907715
    7. '=' → logprob: -11.430548667907715
    8. ' k' → logprob: -11.680548667907715
    9. ',' → logprob: -11.805548667907715
    10. ' ,' → logprob: -12.305548667907715

Token 998: ' set' (ID: 920)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20263592898845673
    2. ' range' → logprob: -1.7026358842849731
    3. '3' → logprob: -6.827635765075684
    4. ' ' → logprob: -9.452635765075684
    5. ' in' → logprob: -10.952635765075684
    6. 'in' → logprob: -11.202635765075684
    7. '(range' → logprob: -11.827635765075684
    8. '2' → logprob: -12.202635765075684
    9. '[' → logprob: -12.327635765075684
    10. '1' → logprob: -12.577635765075684

Token 999: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002913678181357682
    2. ' (' → logprob: -8.50029182434082
    3. '([' → logprob: -10.12529182434082
    4. 'queries' → logprob: -11.00029182434082
    5. '()' → logprob: -11.37529182434082
    6. ' queries' → logprob: -12.12529182434082
    7. '(
' → logprob: -12.87529182434082
    8. '((' → logprob: -13.00029182434082
    9. '(query' → logprob: -13.12529182434082
    10. '   ' → logprob: -13.75029182434082

Token 1000: 'queries' (ID: 63909)
  Prédit: 'queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.014167741872370243
    2. '(' → logprob: -4.264167785644531
    3. ' queries' → logprob: -12.764167785644531
    4. ')' → logprob: -14.889167785644531
    5. 'Q' → logprob: -15.139167785644531
    6. 'quer' → logprob: -15.389167785644531
    7. 'query' → logprob: -15.514167785644531
    8. '[' → logprob: -15.764167785644531
    9. 'requests' → logprob: -17.13916778564453
    10. 'questions' → logprob: -17.26416778564453

Token 1001: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11437512189149857
    2. '):
' → logprob: -2.239375114440918
    3. ':' → logprob: -6.614375114440918
    4. '   ' → logprob: -9.114375114440918
    5. '):
' → logprob: -10.364375114440918
    6. ',' → logprob: -11.114375114440918
    7. '():
' → logprob: -11.614375114440918
    8. ':
' → logprob: -11.614375114440918
    9. ' ):' → logprob: -11.739375114440918
    10. '():' → logprob: -11.864375114440918

Token 1002: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023190265521407127
    2. '       ' → logprob: -4.023190498352051
    3. '```' → logprob: -6.023190498352051
    4. ':' → logprob: -6.773190498352051
    5. '    ' → logprob: -7.773190498352051
    6. ',' → logprob: -8.02319049835205
    7. '    
' → logprob: -8.52319049835205
    8. '<|end|>' → logprob: -8.89819049835205
    9. '
' → logprob: -9.64819049835205
    10. '[' → logprob: -9.77319049835205

Token 1003: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1704695224761963
    2. '       ' → logprob: -1.4204695224761963
    3. '   ' → logprob: -1.5454695224761963
    4. ' comb' → logprob: -1.9204695224761963
    5. 'if' (adapté à ' if') → logprob: -3.1704695224761963
    6. ' result' → logprob: -3.4204695224761963
    7. 'comb' → logprob: -5.295469284057617
    8. 'result' → logprob: -5.420469284057617
    9. 'com' → logprob: -6.670469284057617
    10. ' from' → logprob: -7.295469284057617

Token 1004: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4741434156894684
    2. ' k' → logprob: -0.974143385887146
    3. '   ' → logprob: -10.599143028259277
    4. '       ' → logprob: -10.599143028259277
    5. '    ' → logprob: -11.974143028259277
    6. '3' → logprob: -12.474143028259277
    7. ' ' → logprob: -12.974143028259277
    8. '  ' → logprob: -14.224143028259277
    9. '     ' → logprob: -14.224143028259277
    10. '      ' → logprob: -14.599143028259277

Token 1005: '>N' (ID: 114149)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3822230100631714
    2. ' ==' → logprob: -1.7572230100631714
    3. '<' → logprob: -2.382223129272461
    4. ' <' → logprob: -3.382223129272461
    5. '<=' → logprob: -4.632223129272461
    6. '3' → logprob: -6.007223129272461
    7. ' <=' → logprob: -6.007223129272461
    8. '=' → logprob: -6.257223129272461
    9. '<int' → logprob: -7.757223129272461
    10. '```' → logprob: -8.007223129272461

Token 1006: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02054912969470024
    2. ':
' → logprob: -4.145549297332764
    3. '       ' → logprob: -6.520549297332764
    4. '           ' → logprob: -6.645549297332764
    5. ' or' → logprob: -7.145549297332764
    6. '   ' → logprob: -8.270548820495605
    7. '==' → logprob: -8.770548820495605
    8. 'continue' → logprob: -9.395548820495605
    9. ' continue' → logprob: -9.395548820495605
    10. ':return' → logprob: -9.520548820495605

Token 1007: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011662953766062856
    2. '       ' → logprob: -7.126166343688965
    3. ' continue' → logprob: -8.751166343688965
    4. 'continue' → logprob: -9.251166343688965
    5. ':' → logprob: -9.751166343688965
    6. ':
' → logprob: -11.001166343688965
    7. '```' → logprob: -11.251166343688965
    8. '   ' → logprob: -12.126166343688965
    9. '	       ' → logprob: -13.001166343688965
    10. '		' → logprob: -13.001166343688965

Token 1008: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.6963022947311401
    2. '       ' → logprob: -1.5713022947311401
    3. ' result' → logprob: -1.6963022947311401
    4. '           ' → logprob: -2.5713024139404297
    5. '   ' → logprob: -3.4463024139404297
    6. 'continue' → logprob: -6.69630241394043
    7. ' continue' → logprob: -8.57130241394043
    8. '	result' → logprob: -8.69630241394043
    9. 'print' → logprob: -9.07130241394043
    10. '```' → logprob: -9.07130241394043

Token 1009: '_cache' (ID: 27045)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.010882395319640636
    2. '[' → logprob: -5.260882377624512
    3. 's' → logprob: -6.385882377624512
    4. '[key' → logprob: -6.760882377624512
    5. '[token' → logprob: -7.510882377624512
    6. 'k' → logprob: -8.260882377624512
    7. '{k' → logprob: -8.260882377624512
    8. '=' → logprob: -8.385882377624512
    9. '[s' → logprob: -8.510882377624512
    10. '=k' → logprob: -8.760882377624512

Token 1010: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.37500286102295
    3. '=k' → logprob: -14.87500286102295
    4. '[i' → logprob: -15.87500286102295
    5. '=' → logprob: -15.87500286102295
    6. '=[' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.625001907348633
    8. 'k' → logprob: -16.750001907348633
    9. '[key' → logprob: -17.250001907348633
    10. '[-' → logprob: -17.250001907348633

Token 1011: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23928211629390717
    2. ']' → logprob: -1.9892821311950684
    3. ']=' → logprob: -2.7392821311950684
    4. ']=-' → logprob: -4.864282131195068
    5. ' =' → logprob: -6.364282131195068
    6. '=-' → logprob: -6.614282131195068
    7. '=None' → logprob: -7.989282131195068
    8. ')' → logprob: -9.23928165435791
    9. '=(-' → logprob: -9.36428165435791
    10. ')=' → logprob: -9.73928165435791

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001341792638413608
    2. ' =' → logprob: -6.626341819763184
    3. '=True' → logprob: -12.126341819763184
    4. '=k' → logprob: -12.376341819763184
    5. '=None' → logprob: -12.626341819763184
    6. '=False' → logprob: -13.751341819763184
    7. '=-' → logprob: -13.751341819763184
    8. '=[' → logprob: -15.501341819763184
    9. '=(-' → logprob: -16.126340866088867
    10. '=
' → logprob: -16.126340866088867

Token 1013: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6005569696426392
    2. 'None' → logprob: -1.6005569696426392
    3. '[-' → logprob: -1.9755569696426392
    4. '[]' → logprob: -2.7255568504333496
    5. '(-' → logprob: -4.35055685043335
    6. '"' → logprob: -4.47555685043335
    7. '[' → logprob: -5.10055685043335
    8. ' None' → logprob: -5.60055685043335
    9. '(None' → logprob: -5.85055685043335
    10. '[]
' → logprob: -6.47555685043335

Token 1014: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026739580556750298
    2. '       ' → logprob: -3.6517395973205566
    3. 'continue' → logprob: -8.026739120483398
    4. ' continue' → logprob: -9.901739120483398
    5. '	continue' → logprob: -11.276739120483398
    6. '		' → logprob: -11.276739120483398
    7. '   ' → logprob: -11.276739120483398
    8. '	       ' → logprob: -12.151739120483398
    9. '               ' → logprob: -12.526739120483398
    10. '	' → logprob: -12.526739120483398

Token 1015: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5782228112220764
    2. '       ' → logprob: -0.8282228112220764
    3. 'continue' → logprob: -6.453222751617432
    4. ' continue' → logprob: -7.578222751617432
    5. '   ' → logprob: -8.70322322845459
    6. '```' → logprob: -11.95322322845459
    7. '	continue' → logprob: -12.20322322845459
    8. '               ' → logprob: -12.57822322845459
    9. ' continues' → logprob: -13.45322322845459
    10. '_continue' → logprob: -13.57822322845459

Token 1016: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025324327871203423
    2. 'continue' (adapté à ' continue') → logprob: -4.40032434463501
    3. ' continue' → logprob: -4.65032434463501
    4. '       ' → logprob: -5.77532434463501
    5. '   ' → logprob: -9.775323867797852
    6. '	continue' → logprob: -11.275323867797852
    7. '_continue' → logprob: -14.650323867797852
    8. '               ' → logprob: -14.900323867797852
    9. '```' → logprob: -15.650323867797852
    10. '		' → logprob: -15.775323867797852

Token 1017: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005533385090529919
    2. '   ' → logprob: -5.505533218383789
    3. ' comb' → logprob: -7.380533218383789
    4. '
' → logprob: -8.005533218383789
    5. '```' → logprob: -8.005533218383789
    6. '        
' → logprob: -9.380533218383789
    7. '    
' → logprob: -11.005533218383789
    8. ' if' → logprob: -11.255533218383789
    9. '           ' → logprob: -11.380533218383789
    10. 'comb' → logprob: -11.880533218383789

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05220700427889824
    2. '   ' → logprob: -3.3022069931030273
    3. ' comb' → logprob: -4.802206993103027
    4. '
' → logprob: -5.677206993103027
    5. '```' → logprob: -6.427206993103027
    6. '        
' → logprob: -7.677206993103027
    7. 'comb' → logprob: -8.552206993103027
    8. '    
' → logprob: -9.927206993103027
    9. '           ' → logprob: -11.177206993103027
    10. '     ' → logprob: -11.427206993103027

Token 1019: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013747830875217915
    2. 'from' → logprob: -5.138747692108154
    3. 'if' → logprob: -6.263747692108154
    4. ' comb' → logprob: -6.388747692108154
    5. 'comb' → logprob: -6.513747692108154
    6. 'import' → logprob: -7.013747692108154
    7. '   ' → logprob: -7.388747692108154
    8. ' if' → logprob: -7.888747692108154
    9. ' from' → logprob: -8.513748168945312
    10. 'com' → logprob: -8.888748168945312

Token 1020: ' generate' (ID: 10419)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28145313262939453
    2. 'from' → logprob: -1.7814531326293945
    3. 'import' → logprob: -4.1564531326293945
    4. 'if' → logprob: -4.1564531326293945
    5. 'comb' → logprob: -4.1564531326293945
    6. ' from' → logprob: -4.2814531326293945
    7. ' if' → logprob: -4.9064531326293945
    8. ' comb' → logprob: -5.0314531326293945
    9. 'com' → logprob: -7.4064531326293945
    10. 'best' → logprob: -7.9064531326293945

Token 1021: ' combinations' (ID: 43835)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.02803020179271698
    2. ' comb' → logprob: -3.7780301570892334
    3. '   ' → logprob: -5.6530303955078125
    4. 'from' → logprob: -7.2780303955078125
    5. 'import' → logprob: -7.6530303955078125
    6. '```' → logprob: -10.903030395507812
    7. ' from' → logprob: -11.028030395507812
    8. 'com' → logprob: -11.028030395507812
    9. '       ' → logprob: -11.028030395507812
    10. '[' → logprob: -11.528030395507812

Token 1022: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001801557606086135
    2. 'comb' → logprob: -7.126801490783691
    3. 'com' → logprob: -7.876801490783691
    4. ' comb' → logprob: -8.376801490783691
    5. '   ' → logprob: -8.751801490783691
    6. 'import' → logprob: -9.376801490783691
    7. 'from' → logprob: -9.751801490783691
    8. '
' → logprob: -10.376801490783691
    9. '(com' → logprob: -11.001801490783691
    10. '           ' → logprob: -12.126801490783691

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07537608593702316
    2. '   ' → logprob: -3.575376033782959
    3. '	com' → logprob: -3.575376033782959
    4. ' comb' → logprob: -4.700376033782959
    5. '	' → logprob: -5.575376033782959
    6. '	   ' → logprob: -6.700376033782959
    7. 'comb' → logprob: -7.450376033782959
    8. 'com' → logprob: -7.825376033782959
    9. '```' → logprob: -8.075376510620117
    10. '(com' → logprob: -8.200376510620117

Token 1024: ' from' (ID: 591)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.8107038736343384
    2. '       ' → logprob: -1.1857038736343384
    3. ' comb' → logprob: -1.4357038736343384
    4. 'import' → logprob: -5.310703754425049
    5. 'from' (adapté à ' from') → logprob: -5.810703754425049
    6. '   ' → logprob: -6.185703754425049
    7. 'com' → logprob: -7.060703754425049
    8. ' from' → logprob: -7.310703754425049
    9. '```' → logprob: -8.060704231262207
    10. ' import' → logprob: -10.185704231262207

Token 1025: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.018316399306058884
    2. 'math' → logprob: -4.018316268920898
    3. ' itertools' → logprob: -9.018316268920898
    4. 'bis' → logprob: -10.518316268920898
    5. 'collections' → logprob: -11.643316268920898
    6. 'heap' → logprob: -12.393316268920898
    7. 'import' → logprob: -12.643316268920898
    8. 'operator' → logprob: -14.768316268920898
    9. 'sys' → logprob: -14.768316268920898
    10. 'cmath' → logprob: -15.018316268920898

Token 1026: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.576330840587616
    2. 'import' → logprob: -0.826330840587616
    3. '	import' → logprob: -7.951330661773682
    4. ' itertools' → logprob: -11.57633113861084
    5. '<|end|>' → logprob: -11.70133113861084
    6. '_import' → logprob: -12.07633113861084
    7. '```' → logprob: -12.57633113861084
    8. '.import' → logprob: -12.57633113861084
    9. '(import' → logprob: -13.32633113861084
    10. ' importar' → logprob: -13.45133113861084

Token 1027: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -5.512236498361744e-07
    2. 'comb' → logprob: -15.125000953674316
    3. ' combinations' → logprob: -15.250000953674316
    4. 'import' → logprob: -17.5
    5. '
' → logprob: -17.875
    6. '(com' → logprob: -19.0
    7. '_com' → logprob: -19.0
    8. '```' → logprob: -19.375
    9. 'is' → logprob: -19.5
    10. '.com' → logprob: -20.125

Token 1028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022517223842442036
    2. '
' → logprob: -6.377251625061035
    3. '        
' → logprob: -8.377251625061035
    4. ',' → logprob: -8.502251625061035
    5. ' for' → logprob: -9.377251625061035
    6. 'for' → logprob: -10.752251625061035
    7. ',
' → logprob: -13.002251625061035
    8. '           ' → logprob: -13.877251625061035
    9. '   ' → logprob: -13.877251625061035
    10. '<|end|>' → logprob: -14.002251625061035

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002435235772281885
    2. ' for' → logprob: -6.627435207366943
    3. '
' → logprob: -7.627435207366943
    4. 'for' → logprob: -8.002435684204102
    5. ',' → logprob: -9.002435684204102
    6. '        
' → logprob: -9.252435684204102
    7. '   ' → logprob: -10.252435684204102
    8. 'import' → logprob: -11.752435684204102
    9. '<|end|>' → logprob: -12.252435684204102
    10. '```' → logprob: -12.502435684204102

Token 1030: ' min' (ID: 1349)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5130561590194702
    2. '       ' → logprob: -1.5130561590194702
    3. ' comb' → logprob: -2.1380562782287598
    4. 'for' → logprob: -3.0130562782287598
    5. ' if' → logprob: -5.26305627822876
    6. 'com' → logprob: -5.76305627822876
    7. ' points' → logprob: -6.13805627822876
    8. ' candidates' → logprob: -7.51305627822876
    9. 'if' → logprob: -7.63805627822876
    10. '   ' → logprob: -7.76305627822876

Token 1031: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.000491076149046421
    2. '_' → logprob: -8.00049114227295
    3. '_val' → logprob: -9.87549114227295
    4. ' _' → logprob: -10.37549114227295
    5. 'area' → logprob: -10.87549114227295
    6. '_result' → logprob: -11.00049114227295
    7. '_comb' → logprob: -11.87549114227295
    8. '_poly' → logprob: -12.50049114227295
    9. '_
' → logprob: -12.75049114227295
    10. '_token' → logprob: -12.75049114227295

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47423431277275085
    2. ' =' → logprob: -0.9742343425750732
    3. '=float' → logprob: -9.349234580993652
    4. '=None' → logprob: -9.974234580993652
    5. ',' → logprob: -10.849234580993652
    6. ' None' → logprob: -13.224234580993652
    7. '=
' → logprob: -14.724234580993652
    8. '   ' → logprob: -15.099234580993652
    9. 'None' → logprob: -15.099234580993652
    10. ' ' → logprob: -15.224234580993652

Token 1033: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0003244990948587656
    2. 'None' → logprob: -8.500324249267578
    3. '10' → logprob: -9.500324249267578
    4. '1' → logprob: -10.000324249267578
    5. ' float' → logprob: -14.125324249267578
    6. '   ' → logprob: -17.875324249267578
    7. ' None' → logprob: -18.125324249267578
    8. '100' → logprob: -19.000324249267578
    9. '
' → logprob: -19.000324249267578
    10. '	float' → logprob: -19.125324249267578

Token 1034: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024431515485048294
    2. '
' → logprob: -4.1494317054748535
    3. '        
' → logprob: -5.6494317054748535
    4. ',' → logprob: -6.0244317054748535
    5. ' for' → logprob: -6.7744317054748535
    6. '<|end|>' → logprob: -7.7744317054748535
    7. ' 
' → logprob: -8.274431228637695
    8. 'for' → logprob: -8.399431228637695
    9. '    
' → logprob: -9.524431228637695
    10. ',
' → logprob: -9.899431228637695

Token 1035: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0298639964312315
    2. ' for' → logprob: -4.2798638343811035
    3. 'for' → logprob: -4.5298638343811035
    4. 'com' → logprob: -5.9048638343811035
    5. ' comb' → logprob: -7.4048638343811035
    6. 'points' → logprob: -8.279864311218262
    7. 'comb' → logprob: -8.404864311218262
    8. ' points' → logprob: -8.529864311218262
    9. '   ' → logprob: -8.654864311218262
    10. ',' → logprob: -8.904864311218262

Token 1036: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0938200056552887
    2. 'min' (adapté à ' min') → logprob: -3.218820095062256
    3. 'comb' → logprob: -3.718820095062256
    4. 'best' → logprob: -3.968820095062256
    5. ' for' → logprob: -5.968820095062256
    6. '   ' → logprob: -7.218820095062256
    7. 'points' → logprob: -7.343820095062256
    8. 'import' → logprob: -7.593820095062256
    9. 'result' → logprob: -8.093819618225098
    10. 'indices' → logprob: -8.343819618225098

Token 1037: '_poly' (ID: 99075)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.2272699624300003
    2. '_poly' → logprob: -2.4772698879241943
    3. '_subset' → logprob: -2.9772698879241943
    4. '_points' → logprob: -3.4772698879241943
    5. '_area' → logprob: -4.602270126342773
    6. '_pts' → logprob: -4.852270126342773
    7. '_combo' → logprob: -4.852270126342773
    8. '_polygon' → logprob: -5.352270126342773
    9. '_idxs' → logprob: -5.852270126342773
    10. '_idx' → logprob: -6.352270126342773

Token 1038: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23064804077148438
    2. '=' → logprob: -1.6056480407714844
    3. '=[]' → logprob: -5.730648040771484
    4. ',' → logprob: -7.230648040771484
    5. '=None' → logprob: -7.855648040771484
    6. ')' → logprob: -8.605648040771484
    7. '   ' → logprob: -8.730648040771484
    8. '_' → logprob: -8.855648040771484
    9. '```' → logprob: -9.605648040771484
    10. '=[]
' → logprob: -9.730648040771484

Token 1039: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005245379637926817
    2. '[]' → logprob: -5.505245208740234
    3. ' None' → logprob: -6.755245208740234
    4. '(None' → logprob: -14.380245208740234
    5. ' []' → logprob: -15.005245208740234
    6. '[]
' → logprob: -15.380245208740234
    7. '   ' → logprob: -15.505245208740234
    8. '[' → logprob: -16.755245208740234
    9. 'none' → logprob: -16.880245208740234
    10. '0' → logprob: -17.005245208740234

Token 1040: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03789837285876274
    2. '
' → logprob: -3.787898302078247
    3. '        
' → logprob: -4.537898540496826
    4. ' for' → logprob: -5.912898540496826
    5. 'for' → logprob: -7.662898540496826
    6. '    
' → logprob: -8.537898063659668
    7. '   ' → logprob: -9.162898063659668
    8. '  
' → logprob: -9.912898063659668
    9. ' 
' → logprob: -10.037898063659668
    10. ',' → logprob: -10.037898063659668

Token 1041: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005348019185476005
    2. '   ' → logprob: -7.875535011291504
    3. 'for' → logprob: -9.250535011291504
    4. ' for' → logprob: -10.250535011291504
    5. '
' → logprob: -11.875535011291504
    6. '        
' → logprob: -12.000535011291504
    7. ' comb' → logprob: -12.000535011291504
    8. 'com' → logprob: -13.250535011291504
    9. '```' → logprob: -14.250535011291504
    10. '           ' → logprob: -14.750535011291504

Token 1042: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2530658543109894
    2. '       ' → logprob: -1.503065824508667
    3. ' for' → logprob: -7.128066062927246
    4. 'points' → logprob: -8.753066062927246
    5. '   ' → logprob: -9.378066062927246
    6. 'com' → logprob: -9.878066062927246
    7. 'comb' → logprob: -10.878066062927246
    8. 'pts' → logprob: -11.753066062927246
    9. ' comb' → logprob: -12.128066062927246
    10. 'indices' → logprob: -12.753066062927246

Token 1043: ' Optimization' (ID: 78012)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004930716473609209
    2. '       ' → logprob: -6.00493049621582
    3. 'points' → logprob: -7.12993049621582
    4. 'if' → logprob: -7.12993049621582
    5. ' for' → logprob: -7.75493049621582
    6. 'comb' → logprob: -8.37993049621582
    7. 'pts' → logprob: -9.37993049621582
    8. '   ' → logprob: -10.00493049621582
    9. 'com' → logprob: -10.25493049621582
    10. 'c' → logprob: -12.00493049621582

Token 1044: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013057638891041279
    2. ' for' → logprob: -5.138057708740234
    3. ' if' → logprob: -6.513057708740234
    4. '
' → logprob: -6.513057708740234
    5. ':' → logprob: -6.763057708740234
    6. 'for' → logprob: -7.013057708740234
    7. '        
' → logprob: -7.138057708740234
    8. 'points' → logprob: -8.513057708740234
    9. ' points' → logprob: -8.638057708740234
    10. '```' → logprob: -8.763057708740234

Token 1045: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.120210200548172
    2. ' if' → logprob: -2.6202101707458496
    3. 'if' → logprob: -4.12021017074585
    4. ' for' → logprob: -4.87021017074585
    5. 'for' → logprob: -5.24521017074585
    6. '#' → logprob: -5.37021017074585
    7. ' #' → logprob: -6.49521017074585
    8. ' hull' → logprob: -6.49521017074585
    9. ' points' → logprob: -7.24521017074585
    10. ' pts' → logprob: -7.87021017074585

Token 1046: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9796802401542664
    2. '_sorted' → logprob: -1.8546802997589111
    3. '_subset' → logprob: -2.229680299758911
    4. 'for' → logprob: -2.229680299758911
    5. '       ' → logprob: -3.104680299758911
    6. '_to' → logprob: -3.354680299758911
    7. '_for' → logprob: -3.479680299758911
    8. '=' → logprob: -4.104680061340332
    9. '_candidates' → logprob: -4.229680061340332
    10. '_set' → logprob: -4.604680061340332

Token 1047: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03827522695064545
    2. 'the' → logprob: -3.2882752418518066
    3. ' the' → logprob: -9.038274765014648
    4. ' hull' → logprob: -9.663274765014648
    5. 'conv' → logprob: -10.788274765014648
    6. 'hul' → logprob: -11.788274765014648
    7. 'import' → logprob: -12.163274765014648
    8. '_h' → logprob: -12.538274765014648
    9. 'for' → logprob: -13.288274765014648
    10. '   ' → logprob: -13.288274765014648

Token 1048: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5683119297027588
    2. ' =' → logprob: -1.0683119297027588
    3. '_points' → logprob: -4.44331169128418
    4. '
' → logprob: -4.69331169128418
    5. '        
' → logprob: -4.81831169128418
    6. ':' → logprob: -4.94331169128418
    7. 'points' → logprob: -5.06831169128418
    8. '=' → logprob: -5.19331169128418
    9. '_pts' → logprob: -5.19331169128418
    10. ',' → logprob: -5.31831169128418

Token 1049: ' always' (ID: 3324)
  Prédit: 'likely'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'likely' → logprob: -0.9014117121696472
    2. 'c' → logprob: -1.526411771774292
    3. ' likely' → logprob: -2.276411771774292
    4. ' candidates' → logprob: -3.026411771774292
    5. 'consider' → logprob: -3.151411771774292
    6. 'more' → logprob: -3.526411771774292
    7. 'len' → logprob: -4.151411533355713
    8. 'only' → logprob: -4.276411533355713
    9. '```' → logprob: -4.401411533355713
    10. 'at' → logprob: -4.401411533355713

Token 1050: ' part' (ID: 997)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.6461058259010315
    2. 'part' → logprob: -1.0211057662963867
    3. ' part' → logprob: -3.1461057662963867
    4. 'in' → logprob: -3.2711057662963867
    5. 'c' → logprob: -3.6461057662963867
    6. ' included' → logprob: -5.896105766296387
    7. 'candidate' → logprob: -6.396105766296387
    8. 'consider' → logprob: -6.896105766296387
    9. 'contained' → logprob: -7.396105766296387
    10. ' candidates' → logprob: -7.646105766296387

Token 1051: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5477335453033447
    2. ' of' → logprob: -1.0477335453033447
    3. 'of' → logprob: -2.6727335453033447
    4. '   ' → logprob: -6.672733306884766
    5. '```' → logprob: -8.297733306884766
    6. ' for' → logprob: -10.047733306884766
    7. 'points' → logprob: -10.297733306884766
    8. ' ' → logprob: -10.297733306884766
    9. '           ' → logprob: -10.422733306884766
    10. 'for' → logprob: -10.422733306884766

Token 1052: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12336605787277222
    2. 'minimal' → logprob: -2.623366117477417
    3. 'min' → logprob: -4.248365879058838
    4. 'any' → logprob: -4.498365879058838
    5. 'poly' → logprob: -5.373365879058838
    6. 'conv' → logprob: -5.498365879058838
    7. 'h' → logprob: -5.998365879058838
    8. ' the' → logprob: -6.123365879058838
    9. 'polygon' → logprob: -6.623365879058838
    10. 'minimum' → logprob: -6.623365879058838

Token 1053: ' convex' (ID: 142423)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -1.058559536933899
    2. 'area' → logprob: -1.308559536933899
    3. '_area' → logprob: -1.558559536933899
    4. 'poly' → logprob: -3.0585594177246094
    5. ' polygon' → logprob: -3.1835594177246094
    6. '_poly' → logprob: -3.1835594177246094
    7. '_polygon' → logprob: -3.8085594177246094
    8. 'polygon' → logprob: -4.433559417724609
    9. ' polygons' → logprob: -6.308559417724609
    10. ' poly' → logprob: -6.808559417724609

Token 1054: ' polygon' (ID: 65081)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1055: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01925746537744999
    2. '<|end|>' → logprob: -4.144257545471191
    3. ' for' → logprob: -6.269257545471191
    4. '<|end|>' → logprob: -7.644257545471191
    5. ',' → logprob: -7.894257545471191
    6. '        
' → logprob: -8.894257545471191
    7. 'for' → logprob: -9.144257545471191
    8. ' points' → logprob: -10.144257545471191
    9. '...' → logprob: -10.644257545471191
    10. 'points' → logprob: -10.644257545471191

Token 1056: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3863517642021179
    2. 'that' → logprob: -1.8863518238067627
    3. 'the' → logprob: -3.1363518238067627
    4. 'minimal' → logprob: -3.1363518238067627
    5. 'k' → logprob: -3.5113518238067627
    6. 'h' → logprob: -3.6363518238067627
    7. 'conv' → logprob: -5.386351585388184
    8. 'any' → logprob: -5.636351585388184
    9. 'minimum' → logprob: -6.136351585388184
    10. 'this' → logprob: -6.386351585388184

Token 1057: '<=' (ID: 16672)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02825111150741577
    2. '3' → logprob: -4.4032511711120605
    3. ' k' → logprob: -5.0282511711120605
    4. '1' → logprob: -5.4032511711120605
    5. '```' → logprob: -6.1532511711120605
    6. 'h' → logprob: -7.1532511711120605
    7. ' ' → logprob: -7.6532511711120605
    8. '   ' → logprob: -8.528250694274902
    9. '{k' → logprob: -8.653250694274902
    10. '
' → logprob: -8.653250694274902

Token 1058: 'h' (ID: 71)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2265072911977768
    2. 'len' → logprob: -1.601507306098938
    3. 'N' → logprob: -7.601507186889648
    4. '
' → logprob: -8.726507186889648
    5. ' len' → logprob: -9.226507186889648
    6. 'max' → logprob: -9.976507186889648
    7. '```' → logprob: -10.101507186889648
    8. ' k' → logprob: -10.476507186889648
    9. '=len' → logprob: -10.476507186889648
    10. '10' → logprob: -10.726507186889648

Token 1059: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.06316081434488297
    2. '       ' → logprob: -3.3131608963012695
    3. '   ' → logprob: -4.0631608963012695
    4. 'for' → logprob: -6.3131608963012695
    5. '_points' → logprob: -6.6881608963012695
    6. 'ulls' → logprob: -7.1881608963012695
    7. 'ul' → logprob: -7.5631608963012695
    8. '_pts' → logprob: -7.5631608963012695
    9. 'if' → logprob: -8.06316089630127
    10. '           ' → logprob: -8.31316089630127

Token 1060: ' size' (ID: 2349)
  Prédit: '_pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.7047054767608643
    2. '_points' → logprob: -1.3297054767608643
    3. '       ' → logprob: -2.0797054767608643
    4. '   ' → logprob: -2.7047054767608643
    5. 'points' → logprob: -4.329705238342285
    6. '_size' → logprob: -4.579705238342285
    7. 'for' → logprob: -4.704705238342285
    8. 'size' → logprob: -5.829705238342285
    9. 'if' → logprob: -6.204705238342285
    10. 'pts' → logprob: -6.954705238342285

Token 1061: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006329498253762722
    2. '<|end|>' → logprob: -6.256329536437988
    3. 'points' → logprob: -6.756329536437988
    4. ' for' → logprob: -6.756329536437988
    5. 'for' → logprob: -7.256329536437988
    6. ' if' → logprob: -8.131329536437988
    7. ',' → logprob: -8.256329536437988
    8. ' points' → logprob: -8.381329536437988
    9. '<|end|>' → logprob: -8.881329536437988
    10. '        
' → logprob: -9.131329536437988

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023994361981749535
    2. ' for' → logprob: -6.877399444580078
    3. ',' → logprob: -7.627399444580078
    4. '```' → logprob: -8.127399444580078
    5. '
' → logprob: -8.752399444580078
    6. 'for' → logprob: -9.377399444580078
    7. '<|end|>' → logprob: -9.502399444580078
    8. ' if' → logprob: -9.752399444580078
    9. '        
' → logprob: -9.752399444580078
    10. '           ' → logprob: -10.502399444580078

Token 1063: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004764161072671413
    2. ' for' → logprob: -6.129764080047607
    3. ' points' → logprob: -7.004764080047607
    4. ' if' → logprob: -7.379764080047607
    5. 'for' → logprob: -8.004764556884766
    6. '
' → logprob: -8.254764556884766
    7. 'points' → logprob: -8.879764556884766
    8. ',' → logprob: -9.254764556884766
    9. '        
' → logprob: -9.379764556884766
    10. '```' → logprob: -10.379764556884766

Token 1064: ' hull' (ID: 74912)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17178143560886383
    2. 'if' → logprob: -2.921781539916992
    3. ' if' → logprob: -3.421781539916992
    4. 'for' → logprob: -3.671781539916992
    5. 'points' → logprob: -4.546781539916992
    6. ' hull' → logprob: -4.546781539916992
    7. ' points' → logprob: -5.546781539916992
    8. ' for' → logprob: -5.546781539916992
    9. 'candidate' → logprob: -6.046781539916992
    10. 'h' → logprob: -6.046781539916992

Token 1065: ' size' (ID: 2349)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5780016779899597
    2. '_pts' → logprob: -0.9530016779899597
    3. ' =' → logprob: -4.453001499176025
    4. 'points' → logprob: -4.703001499176025
    5. '_size' → logprob: -4.703001499176025
    6. 'pts' → logprob: -5.203001499176025
    7. '=' → logprob: -5.453001499176025
    8. 'size' → logprob: -5.578001499176025
    9. '   ' → logprob: -6.203001499176025
    10. '_vertices' → logprob: -6.828001499176025

Token 1066: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7427833676338196
    2. '=' → logprob: -1.2427833080291748
    3. '<=' → logprob: -1.8677833080291748
    4. ' <=' → logprob: -3.242783308029175
    5. '=len' → logprob: -4.992783546447754
    6. '>=' → logprob: -5.367783546447754
    7. 'if' → logprob: -5.492783546447754
    8. 'len' → logprob: -5.617783546447754
    9. '_len' → logprob: -5.867783546447754
    10. ':' → logprob: -5.867783546447754

Token 1067: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.1888679839321412e-05
    2. ' len' → logprob: -11.250021934509277
    3. '(len' → logprob: -12.125021934509277
    4. '[len' → logprob: -12.625021934509277
    5. '=len' → logprob: -17.62502098083496
    6. '
' → logprob: -17.75002098083496
    7. '	len' → logprob: -17.87502098083496
    8. '<len' → logprob: -17.87502098083496
    9. '```' → logprob: -18.00002098083496
    10. ',len' → logprob: -18.37502098083496

Token 1068: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.014198172837495804
    2. 'h' → logprob: -4.264198303222656
    3. '```' → logprob: -11.514198303222656
    4. '[h' → logprob: -11.639198303222656
    5. '(' → logprob: -12.639198303222656
    6. 'hul' → logprob: -13.139198303222656
    7. '	h' → logprob: -13.514198303222656
    8. '(
' → logprob: -13.639198303222656
    9. '`' → logprob: -13.889198303222656
    10. ')' → logprob: -14.014198303222656

Token 1069: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.6679600477218628
    2. 'h' → logprob: -1.1679600477218628
    3. '(h' → logprob: -1.9179600477218628
    4. 'ul' → logprob: -4.667960166931152
    5. ')' → logprob: -5.292960166931152
    6. '_pts' → logprob: -5.542960166931152
    7. 'ulls' → logprob: -6.667960166931152
    8. 'u' → logprob: -6.667960166931152
    9. '```' → logprob: -6.917960166931152
    10. 'hul' → logprob: -7.167960166931152

Token 1070: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.27077624201774597
    2. ')' → logprob: -1.6457762718200684
    3. ')
' → logprob: -3.5207762718200684
    4. '_points' → logprob: -5.145776271820068
    5. ')_' → logprob: -6.020776271820068
    6. '))' → logprob: -6.645776271820068
    7. '])' → logprob: -7.270776271820068
    8. '))
' → logprob: -7.520776271820068
    9. '_)' → logprob: -7.645776271820068
    10. '   ' → logprob: -7.645776271820068

Token 1071: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009185493923723698
    2. ')
' → logprob: -5.384185314178467
    3. '):' → logprob: -5.634185314178467
    4. '):
' → logprob: -7.884185314178467
    5. '   ' → logprob: -8.134185791015625
    6. ')>' → logprob: -9.634185791015625
    7. ')-' → logprob: -10.009185791015625
    8. '),' → logprob: -10.634185791015625
    9. ')+' → logprob: -10.759185791015625
    10. ':' → logprob: -10.884185791015625

Token 1072: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020234507974237204
    2. ' if' → logprob: -7.502023220062256
    3. ',' → logprob: -7.627023220062256
    4. '<|end|>' → logprob: -7.877023220062256
    5. '```' → logprob: -8.752023696899414
    6. ' for' → logprob: -9.002023696899414
    7. '
' → logprob: -9.127023696899414
    8. '   ' → logprob: -10.002023696899414
    9. '        
' → logprob: -10.002023696899414
    10. '           ' → logprob: -11.002023696899414

Token 1073: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1347726583480835
    2. 'if' → logprob: -2.509772777557373
    3. ' if' → logprob: -3.134772777557373
    4. 'for' → logprob: -7.259772777557373
    5. ' for' → logprob: -8.759772300720215
    6. 'points' → logprob: -9.134772300720215
    7. '```' → logprob: -9.634772300720215
    8. '
' → logprob: -9.759772300720215
    9. '   ' → logprob: -9.759772300720215
    10. ' points' → logprob: -10.384772300720215

Token 1074: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09587667882442474
    2. '       ' → logprob: -2.470876693725586
    3. ' if' → logprob: -5.345876693725586
    4. 'for' → logprob: -6.470876693725586
    5. '#' → logprob: -8.470876693725586
    6. 'points' → logprob: -8.970876693725586
    7. 'import' → logprob: -9.470876693725586
    8. 'start' → logprob: -10.095876693725586
    9. 'from' → logprob: -10.345876693725586
    10. 'If' → logprob: -10.720876693725586

Token 1075: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007141007808968425
    2. ' k' → logprob: -7.250714302062988
    3. '   ' → logprob: -12.625714302062988
    4. '       ' → logprob: -15.250714302062988
    5. '```' → logprob: -15.875714302062988
    6. 'len' → logprob: -16.125713348388672
    7. '           ' → logprob: -16.500713348388672
    8. '(k' → logprob: -16.625713348388672
    9. '
' → logprob: -16.875713348388672
    10. 'h' → logprob: -17.625713348388672

Token 1076: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5796296000480652
    2. '<=' → logprob: -0.9546296000480652
    3. '>' → logprob: -3.57962965965271
    4. ' >' → logprob: -4.704629421234131
    5. ' <' → logprob: -4.829629421234131
    6. '<' → logprob: -5.329629421234131
    7. '```' → logprob: -6.329629421234131
    8. '==' → logprob: -6.829629421234131
    9. ' ==' → logprob: -7.329629421234131
    10. '<len' → logprob: -7.454629421234131

Token 1077: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007133854669518769
    2. ' len' → logprob: -7.250713348388672
    3. '   ' → logprob: -13.250713348388672
    4. 'h' → logprob: -14.000713348388672
    5. '(len' → logprob: -15.500713348388672
    6. '```' → logprob: -15.500713348388672
    7. '           ' → logprob: -16.500713348388672
    8. '       ' → logprob: -16.500713348388672
    9. '[len' → logprob: -16.625713348388672
    10. '`' → logprob: -16.750713348388672

Token 1078: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.01816692017018795
    2. 'h' → logprob: -4.018167018890381
    3. '```' → logprob: -12.518166542053223
    4. '[h' → logprob: -12.768166542053223
    5. '(' → logprob: -12.893166542053223
    6. '	h' → logprob: -13.393166542053223
    7. '(
' → logprob: -13.518166542053223
    8. 'hul' → logprob: -13.643166542053223
    9. '   ' → logprob: -14.518166542053223
    10. '
' → logprob: -14.768166542053223

Token 1079: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.0012467780616134405
    2. 'ul' → logprob: -7.751246929168701
    3. '_pts' → logprob: -8.626246452331543
    4. 'h' → logprob: -9.001246452331543
    5. '(h' → logprob: -9.376246452331543
    6. '```' → logprob: -9.626246452331543
    7. 'ulls' → logprob: -9.876246452331543
    8. 'u' → logprob: -10.001246452331543
    9. ')' → logprob: -10.376246452331543
    10. '(' → logprob: -10.876246452331543

Token 1080: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.00406344048678875
    2. ')' → logprob: -6.379063606262207
    3. '   ' → logprob: -7.504063606262207
    4. ')_' → logprob: -7.879063606262207
    5. '_points' → logprob: -8.129063606262207
    6. '_' → logprob: -8.254063606262207
    7. ')+' → logprob: -8.629063606262207
    8. '```' → logprob: -9.004063606262207
    9. '):
' → logprob: -9.129063606262207
    10. '):' → logprob: -9.504063606262207

Token 1081: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48060673475265503
    2. '):' → logprob: -1.3556067943572998
    3. ':
' → logprob: -3.1056067943573
    4. ')' → logprob: -3.2306067943573
    5. ' and' → logprob: -4.230606555938721
    6. ':' → logprob: -4.230606555938721
    7. '   ' → logprob: -5.730606555938721
    8. '       ' → logprob: -6.355606555938721
    9. '-' → logprob: -6.480606555938721
    10. ')+' → logprob: -7.105606555938721

Token 1082: ' minimal' (ID: 19957)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6133716702461243
    2. 'continue' → logprob: -0.8633716702461243
    3. '       ' → logprob: -4.113371849060059
    4. '   ' → logprob: -5.238371849060059
    5. 'for' → logprob: -5.238371849060059
    6. ' for' → logprob: -5.488371849060059
    7. '           ' → logprob: -6.238371849060059
    8. ' points' → logprob: -6.863371849060059
    9. 'points' → logprob: -6.863371849060059
    10. '#' → logprob: -7.238371849060059

Token 1083: ' hull' (ID: 74912)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.0824251174926758
    2. '_poly' → logprob: -1.9574251174926758
    3. '_polygon' → logprob: -2.332425117492676
    4. ' area' → logprob: -2.332425117492676
    5. ' =' → logprob: -2.457425117492676
    6. ' polygon' → logprob: -2.957425117492676
    7. 'poly' → logprob: -3.332425117492676
    8. 'area' → logprob: -3.832425117492676
    9. '_points' → logprob: -3.832425117492676
    10. '_pts' → logprob: -4.082425117492676

Token 1084: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9003881216049194
    2. ' =' → logprob: -1.2753881216049194
    3. 'size' → logprob: -2.400388240814209
    4. ' if' → logprob: -2.900388240814209
    5. '_points' → logprob: -3.775388240814209
    6. '_pts' → logprob: -3.900388240814209
    7. '=' → logprob: -4.150388240814209
    8. '_size' → logprob: -4.275388240814209
    9. '<|end|>' → logprob: -4.400388240814209
    10. 'if' → logprob: -4.650388240814209

Token 1085: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5092592835426331
    2. ':' → logprob: -2.1342592239379883
    3. ':
' → logprob: -2.1342592239379883
    4. ' =' → logprob: -2.7592592239379883
    5. ' if' → logprob: -3.5092592239379883
    6. ',' → logprob: -4.384259223937988
    7. '           ' → logprob: -4.634259223937988
    8. '<|end|>' → logprob: -4.634259223937988
    9. ' is' → logprob: -5.134259223937988
    10. '=' → logprob: -5.134259223937988

Token 1086: ' k' (ID: 372)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4029478430747986
    2. 'k' → logprob: -1.1529479026794434
    3. '```' → logprob: -4.777947902679443
    4. 'size' → logprob: -5.902947902679443
    5. 'points' → logprob: -6.402947902679443
    6. 'the' → logprob: -7.277947902679443
    7. '
' → logprob: -8.152947425842285
    8. 'tokens' → logprob: -8.152947425842285
    9. ' hull' → logprob: -8.277947425842285
    10. '[k' → logprob: -8.527947425842285

Token 1087: ' points' (ID: 5571)
  Prédit: '_pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -1.0002565383911133
    2. '_points' → logprob: -1.1252565383911133
    3. '```' → logprob: -3.1252565383911133
    4. ')' → logprob: -3.7502565383911133
    5. ' points' → logprob: -3.7502565383911133
    6. '+' → logprob: -4.000256538391113
    7. '=' → logprob: -4.125256538391113
    8. ' =' → logprob: -4.125256538391113
    9. '_vertices' → logprob: -4.125256538391113
    10. '   ' → logprob: -4.250256538391113

Token 1088: ' subset' (ID: 58845)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7410231232643127
    2. ' =' → logprob: -1.241023063659668
    3. ':' → logprob: -1.991023063659668
    4. ':
' → logprob: -3.616023063659668
    5. '=' → logprob: -4.116023063659668
    6. '           ' → logprob: -4.366023063659668
    7. ',' → logprob: -4.491023063659668
    8. ' if' → logprob: -4.616023063659668
    9. ' is' → logprob: -5.616023063659668
    10. '```' → logprob: -6.116023063659668

Token 1089: ' lies' (ID: 24384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001088662538677454
    2. '<|end|>' → logprob: -7.751088619232178
    3. ' if' → logprob: -8.251089096069336
    4. ',' → logprob: -9.251089096069336
    5. ' is' → logprob: -9.876089096069336
    6. 'if' → logprob: -10.376089096069336
    7. ' =' → logprob: -10.501089096069336
    8. ':' → logprob: -10.626089096069336
    9. '        
' → logprob: -10.626089096069336
    10. '<|end|>' → logprob: -10.751089096069336

Token 1090: ' on' (ID: 402)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.75506192445755
    2. 'on' → logprob: -1.0050618648529053
    3. 'inside' → logprob: -2.7550618648529053
    4. 'within' → logprob: -3.0050618648529053
    5. ' on' → logprob: -4.130062103271484
    6. ' in' → logprob: -4.130062103271484
    7. '   ' → logprob: -4.380062103271484
    8. ' inside' → logprob: -6.130062103271484
    9. ' within' → logprob: -6.255062103271484
    10. 'only' → logprob: -7.880062103271484

Token 1091: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.058377671986818314
    2. 'the' → logprob: -3.183377742767334
    3. 'k' → logprob: -4.558377742767334
    4. 'len' → logprob: -6.433377742767334
    5. ' the' → logprob: -7.058377742767334
    6. ' hull' → logprob: -7.183377742767334
    7. '```' → logprob: -7.433377742767334
    8. 'lower' → logprob: -8.308377265930176
    9. ' k' → logprob: -8.683377265930176
    10. '[' → logprob: -9.558377265930176

Token 1092: ' vertices' (ID: 38360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012602772563695908
    2. ' if' → logprob: -5.137602806091309
    3. ',' → logprob: -6.512602806091309
    4. '   ' → logprob: -6.887602806091309
    5. '<|end|>' → logprob: -6.887602806091309
    6. ':
' → logprob: -7.512602806091309
    7. '
' → logprob: -7.637602806091309
    8. '           ' → logprob: -8.137602806091309
    9. ' and' → logprob: -8.387602806091309
    10. ':' → logprob: -8.387602806091309

Token 1093: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009587471140548587
    2. ',' → logprob: -7.8759589195251465
    3. ' if' → logprob: -8.000958442687988
    4. '<|end|>' → logprob: -10.000958442687988
    5. 'if' → logprob: -10.125958442687988
    6. ' for' → logprob: -10.875958442687988
    7. '           ' → logprob: -10.875958442687988
    8. '        
' → logprob: -11.000958442687988
    9. '```' → logprob: -11.250958442687988
    10. ' and' → logprob: -11.375958442687988

Token 1094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023790303617715836
    2. ' if' → logprob: -4.89879035949707
    3. '   ' → logprob: -5.14879035949707
    4. '```' → logprob: -6.39879035949707
    5. ',' → logprob: -6.52379035949707
    6. ' for' → logprob: -6.89879035949707
    7. ' continue' → logprob: -6.89879035949707
    8. 'if' → logprob: -7.27379035949707
    9. '[' → logprob: -7.27379035949707
    10. 'continue' → logprob: -7.27379035949707

Token 1095: ' hull' (ID: 74912)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024539582431316376
    2. ' if' → logprob: -4.024539470672607
    3. 'if' → logprob: -5.149539470672607
    4. '```' → logprob: -8.524539947509766
    5. '   ' → logprob: -9.149539947509766
    6. 'continue' → logprob: -9.399539947509766
    7. ' continue' → logprob: -9.649539947509766
    8. ' for' → logprob: -10.399539947509766
    9. '           ' → logprob: -10.399539947509766
    10. 'for' → logprob: -10.649539947509766

Token 1096: '_indices' (ID: 43508)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.6210412979125977
    2. '_pts' → logprob: -1.1210412979125977
    3. '_points' → logprob: -2.3710412979125977
    4. '_idxs' → logprob: -3.8710412979125977
    5. 'size' → logprob: -4.621041297912598
    6. '_indices' → logprob: -5.371041297912598
    7. '_len' → logprob: -6.496041297912598
    8. '_vertices' → logprob: -6.746041297912598
    9. ' =' → logprob: -6.996041297912598
    10. '_set' → logprob: -7.121041297912598

Token 1097: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932836771011353
    2. ' =' → logprob: -0.6932836771011353
    3. '=[' → logprob: -9.443284034729004
    4. '=[]' → logprob: -10.943284034729004
    5. '=
' → logprob: -12.068284034729004
    6. ',' → logprob: -12.068284034729004
    7. '=set' → logprob: -12.068284034729004
    8. ' =[' → logprob: -12.068284034729004
    9. '=[]
' → logprob: -12.568284034729004
    10. '=[
' → logprob: -12.693284034729004

Token 1098: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06392902880907059
    2. '[h' → logprob: -3.5639290809631348
    3. 'set' → logprob: -4.063929080963135
    4. 'sorted' → logprob: -4.938929080963135
    5. '{' → logprob: -5.313929080963135
    6. '[]
' → logprob: -6.313929080963135
    7. '[s' → logprob: -6.563929080963135
    8. '[i' → logprob: -7.563929080963135
    9. '[p' → logprob: -8.438928604125977
    10. '[list' → logprob: -9.563928604125977

Token 1099: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -5.967624019831419e-05
    2. 'points' → logprob: -10.500060081481934
    3. ' point' → logprob: -10.750060081481934
    4. '   ' → logprob: -12.250060081481934
    5. 'idx' → logprob: -13.125060081481934
    6. 'i' → logprob: -13.500060081481934
    7. 'h' → logprob: -13.875060081481934
    8. 'pts' → logprob: -15.000060081481934
    9. '	point' → logprob: -15.000060081481934
    10. '       ' → logprob: -15.375060081481934

Token 1100: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.329463928937912
    2. 'to' → logprob: -1.5794639587402344
    3. 'for' → logprob: -2.7044639587402344
    4. 'index' → logprob: -6.204463958740234
    5. 'To' → logprob: -6.704463958740234
    6. 'i' → logprob: -6.704463958740234
    7. '
' → logprob: -6.954463958740234
    8. '=' → logprob: -8.079463958740234
    9. ' for' → logprob: -8.079463958740234
    10. '[' → logprob: -9.079463958740234

Token 1101: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3286566734313965
    2. 'p' → logprob: -1.5786566734313965
    3. 'h' → logprob: -3.4536566734313965
    4. 'pt' → logprob: -3.8286566734313965
    5. 'idx' → logprob: -5.0786566734313965
    6. 'tuple' → logprob: -5.4536566734313965
    7. '_index' → logprob: -5.7036566734313965
    8. 'i' → logprob: -5.9536566734313965
    9. 'point' → logprob: -6.4536566734313965
    10. 'pts' → logprob: -6.9536566734313965

Token 1102: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.32398998737335205
    2. '(p' → logprob: -1.573989987373352
    3. '[h' → logprob: -2.8239898681640625
    4. '(h' → logprob: -4.8239898681640625
    5. '(pt' → logprob: -7.0739898681640625
    6. '[' → logprob: -7.8239898681640625
    7. 'p' → logprob: -7.9489898681640625
    8. '[i' → logprob: -8.198989868164062
    9. '[x' → logprob: -10.198989868164062
    10. 'pt' → logprob: -10.323989868164062

Token 1103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8567798137664795
    2. ' for' → logprob: -0.9817798137664795
    3. 'for' → logprob: -1.6067798137664795
    4. ')' → logprob: -8.731780052185059
    5. ' ]' → logprob: -9.481780052185059
    6. ']+' → logprob: -11.106780052185059
    7. '[' → logprob: -11.606780052185059
    8. '   ' → logprob: -11.731780052185059
    9. ' ' → logprob: -11.981780052185059
    10. 'p' → logprob: -12.606780052185059

Token 1104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.061987072229385376
    2. 'for' → logprob: -2.8119871616363525
    3. ' ' → logprob: -12.061986923217773
    4. '   ' → logprob: -12.311986923217773
    5. ']' → logprob: -12.686986923217773
    6. '	for' → logprob: -13.311986923217773
    7. ' in' → logprob: -14.061986923217773
    8. ')' → logprob: -14.561986923217773
    9. ' if' → logprob: -14.561986923217773
    10. '       ' → logprob: -14.686986923217773

Token 1105: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011848729336634278
    2. 'h' → logprob: -7.001184940338135
    3. ' p' → logprob: -8.251184463500977
    4. ' hull' → logprob: -11.501184463500977
    5. '
' → logprob: -14.751184463500977
    6. 'pt' → logprob: -15.001184463500977
    7. 'hul' → logprob: -15.126184463500977
    8. '	p' → logprob: -15.501184463500977
    9. '   ' → logprob: -16.126184463500977
    10. ' ' → logprob: -16.313684463500977

Token 1106: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9656133651733398
    2. ' in' → logprob: -1.0906133651733398
    3. 'p' → logprob: -1.3406133651733398
    4. ' p' → logprob: -3.84061336517334
    5. 'i' → logprob: -10.84061336517334
    6. ' ' → logprob: -11.34061336517334
    7. 'n' → logprob: -11.46561336517334
    8. '
' → logprob: -11.59061336517334
    9. '[' → logprob: -12.71561336517334
    10. '_' → logprob: -12.96561336517334

Token 1107: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.286852345103398e-05
    2. 'hul' → logprob: -10.625042915344238
    3. ' hull' → logprob: -11.375042915344238
    4. 'range' → logprob: -13.000042915344238
    5. '   ' → logprob: -13.625042915344238
    6. '
' → logprob: -13.875042915344238
    7. '[h' → logprob: -13.875042915344238
    8. 'hall' → logprob: -14.375042915344238
    9. '	h' → logprob: -15.625042915344238
    10. ' ' → logprob: -15.625042915344238

Token 1108: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.00011188744247192517
    2. 'pts' → logprob: -10.12511157989502
    3. '_idxs' → logprob: -10.50011157989502
    4. 'Pts' → logprob: -11.50011157989502
    5. '```' → logprob: -11.87511157989502
    6. '   ' → logprob: -12.62511157989502
    7. '_points' → logprob: -12.62511157989502
    8. '_indices' → logprob: -12.75011157989502
    9. '[:' → logprob: -12.87511157989502
    10. '[:-' → logprob: -13.00011157989502

Token 1109: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05934177339076996
    2. ']
' → logprob: -2.9343416690826416
    3. '       ' → logprob: -5.559341907501221
    4. '   ' → logprob: -8.184341430664062
    5. ' ]' → logprob: -8.934341430664062
    6. ']

' → logprob: -9.559341430664062
    7. ' if' → logprob: -10.309341430664062
    8. ']
' → logprob: -10.809341430664062
    9. ' ]
' → logprob: -11.059341430664062
    10. '[' → logprob: -11.684341430664062

Token 1110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014396311715245247
    2. ' if' → logprob: -5.3893961906433105
    3. '
' → logprob: -5.6393961906433105
    4. ' for' → logprob: -6.2643961906433105
    5. '<|end|>' → logprob: -6.3893961906433105
    6. '```' → logprob: -7.2643961906433105
    7. ',' → logprob: -7.3893961906433105
    8. 'for' → logprob: -7.8893961906433105
    9. '        
' → logprob: -8.389396667480469
    10. 'if' → logprob: -8.389396667480469

Token 1111: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7623323798179626
    2. ' if' → logprob: -0.8873323798179626
    3. 'if' → logprob: -2.1373324394226074
    4. ' comb' → logprob: -6.512332439422607
    5. ' for' → logprob: -7.262332439422607
    6. 'for' → logprob: -7.762332439422607
    7. 'import' → logprob: -8.01233196258545
    8. '
' → logprob: -8.88733196258545
    9. '        
' → logprob: -9.38733196258545
    10. 'points' → logprob: -9.38733196258545

Token 1112: ' =' (ID: 314)
  Prédit: 'ull'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.007137189619243145
    2. 'len' → logprob: -6.257137298583984
    3. 'size' → logprob: -6.632137298583984
    4. '_len' → logprob: -7.132137298583984
    5. 'if' → logprob: -7.257137298583984
    6. '_size' → logprob: -7.257137298583984
    7. ' =' → logprob: -8.007137298583984
    8. '_length' → logprob: -8.507137298583984
    9. '   ' → logprob: -8.757137298583984
    10. 'ul' → logprob: -8.882137298583984

Token 1113: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003360582049936056
    2. ' len' → logprob: -8.000335693359375
    3. '[len' → logprob: -15.000335693359375
    4. '   ' → logprob: -16.000335693359375
    5. '(len' → logprob: -16.750335693359375
    6. '	len' → logprob: -17.750335693359375
    7. '=len' → logprob: -19.500335693359375
    8. ' ' → logprob: -19.500335693359375
    9. '<len' → logprob: -19.625335693359375
    10. 'l' → logprob: -19.875335693359375

Token 1114: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00017982252757064998
    2. 'h' → logprob: -8.6251802444458
    3. '(' → logprob: -16.500179290771484
    4. '(
' → logprob: -16.625179290771484
    5. '[h' → logprob: -17.375179290771484
    6. '	h' → logprob: -18.000179290771484
    7. '```' → logprob: -18.250179290771484
    8. '=h' → logprob: -19.000179290771484
    9. 'H' → logprob: -19.500179290771484
    10. 's' → logprob: -19.625179290771484

Token 1115: 'ull' (ID: 754)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.32445234060287476
    2. 'h' → logprob: -1.3244524002075195
    3. 'ull' → logprob: -4.6994524002075195
    4. ')' → logprob: -7.0744524002075195
    5. 'ulls' → logprob: -8.44945240020752
    6. '_pts' → logprob: -8.57445240020752
    7. 'hul' → logprob: -8.82445240020752
    8. '_h' → logprob: -8.94945240020752
    9. '(' → logprob: -9.32445240020752
    10. 'ul' → logprob: -9.57445240020752

Token 1116: '_indices' (ID: 43508)
  Prédit: '_pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.10359806567430496
    2. '_indices' → logprob: -2.353598117828369
    3. '_idxs' → logprob: -6.228598117828369
    4. '_points' → logprob: -7.728598117828369
    5. '_inds' → logprob: -7.978598117828369
    6. ')' → logprob: -8.728597640991211
    7. '_' → logprob: -9.603597640991211
    8. '   ' → logprob: -10.103597640991211
    9. '```' → logprob: -10.228597640991211
    10. '_
' → logprob: -10.228597640991211

Token 1117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045853111892938614
    2. ')
' → logprob: -3.1708531379699707
    3. '<|end|>' → logprob: -6.545853137969971
    4. '       ' → logprob: -6.920853137969971
    5. '
' → logprob: -8.920852661132812
    6. ']' → logprob: -9.670852661132812
    7. '-' → logprob: -9.670852661132812
    8. '   ' → logprob: -9.920852661132812
    9. '<|end|>' → logprob: -10.295852661132812
    10. '#' → logprob: -10.920852661132812

Token 1118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004769141785800457
    2. 'if' → logprob: -5.504769325256348
    3. ' if' → logprob: -7.379769325256348
    4. '
' → logprob: -10.504769325256348
    5. '```' → logprob: -11.004769325256348
    6. '   ' → logprob: -11.379769325256348
    7. 'import' → logprob: -12.379769325256348
    8. 'for' → logprob: -12.379769325256348
    9. '        
' → logprob: -13.879769325256348
    10. ' for' → logprob: -14.879769325256348

Token 1119: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15454493463039398
    2. 'if' (adapté à ' if') → logprob: -2.1545448303222656
    3. ' if' → logprob: -3.6545448303222656
    4. 'import' → logprob: -7.529544830322266
    5. '```' → logprob: -7.654544830322266
    6. 'for' → logprob: -8.779544830322266
    7. ' comb' → logprob: -9.279544830322266
    8. ' for' → logprob: -10.779544830322266
    9. '
' → logprob: -10.904544830322266
    10. '   ' → logprob: -11.029544830322266

Token 1120: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009783361107110977
    2. ' k' → logprob: -4.6347832679748535
    3. '   ' → logprob: -10.759783744812012
    4. 'h' → logprob: -12.509783744812012
    5. '       ' → logprob: -13.884783744812012
    6. '	k' → logprob: -14.884783744812012
    7. ' ' → logprob: -15.259783744812012
    8. ' h' → logprob: -15.759783744812012
    9. '(k' → logprob: -16.259782791137695
    10. '{k' → logprob: -16.259782791137695

Token 1121: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.43168073892593384
    2. ' <=' → logprob: -1.056680679321289
    3. '<' → logprob: -6.931680679321289
    4. '==' → logprob: -7.056680679321289
    5. ' <' → logprob: -7.681680679321289
    6. ' ==' → logprob: -8.056680679321289
    7. '>' → logprob: -9.556680679321289
    8. ' >' → logprob: -10.056680679321289
    9. '```' → logprob: -10.181680679321289
    10. '{' → logprob: -10.431680679321289

Token 1122: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.036524842376821e-05
    2. ' h' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.500040054321289
    4. 'k' → logprob: -17.50004005432129
    5. 'len' → logprob: -18.00004005432129
    6. '	h' → logprob: -19.62504005432129
    7. '```' → logprob: -19.62504005432129
    8. '[h' → logprob: -19.87504005432129
    9. '(h' → logprob: -20.25004005432129
    10. '
' → logprob: -20.25004005432129

Token 1123: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22649475932121277
    2. ':' → logprob: -1.6014947891235352
    3. ' and' → logprob: -7.226494789123535
    4. '       ' → logprob: -8.351494789123535
    5. '):
' → logprob: -10.226494789123535
    6. ',' → logprob: -10.976494789123535
    7. ':
' → logprob: -10.976494789123535
    8. ':

' → logprob: -11.351494789123535
    9. '           ' → logprob: -11.601494789123535
    10. '   ' → logprob: -12.101494789123535

Token 1124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013558046892285347
    2. '       ' → logprob: -4.3885579109191895
    3. ' for' → logprob: -7.1385579109191895
    4. 'for' → logprob: -10.138558387756348
    5. '```' → logprob: -10.138558387756348
    6. ',' → logprob: -10.638558387756348
    7. 'continue' → logprob: -10.888558387756348
    8. ':
' → logprob: -11.013558387756348
    9. '	       ' → logprob: -11.138558387756348
    10. '   ' → logprob: -11.263558387756348

Token 1125: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33074951171875
    2. ' for' → logprob: -2.08074951171875
    3. '           ' → logprob: -2.33074951171875
    4. 'for' → logprob: -3.70574951171875
    5. 'from' → logprob: -4.45574951171875
    6. ' from' → logprob: -4.83074951171875
    7. ' comb' → logprob: -5.58074951171875
    8. 'import' → logprob: -5.83074951171875
    9. '
' → logprob: -5.95574951171875
    10. '   ' → logprob: -6.58074951171875

Token 1126: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24828878045082092
    2. 'from' → logprob: -1.8732887506484985
    3. 'comb' → logprob: -4.373288631439209
    4. 'import' → logprob: -4.498288631439209
    5. 'com' → logprob: -4.498288631439209
    6. 'subset' → logprob: -4.498288631439209
    7. '       ' → logprob: -4.998288631439209
    8. 'c' → logprob: -5.623288631439209
    9. '#' → logprob: -5.873288631439209
    10. 'sub' → logprob: -6.873288631439209

Token 1127: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.673007071018219
    2. 'from' → logprob: -1.7980070114135742
    3. 'com' → logprob: -1.7980070114135742
    4. '       ' → logprob: -2.923007011413574
    5. ' for' → logprob: -3.173007011413574
    6. '   ' → logprob: -3.798007011413574
    7. 'h' → logprob: -4.548007011413574
    8. ' comb' → logprob: -4.673007011413574
    9. ' from' → logprob: -5.548007011413574
    10. 'all' → logprob: -5.548007011413574

Token 1128: ' combinations' (ID: 43835)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.7336478233337402
    2. 'com' → logprob: -1.2336478233337402
    3. 'for' → logprob: -1.6086478233337402
    4. '   ' → logprob: -4.48364782333374
    5. 'from' → logprob: -4.85864782333374
    6. ' comb' → logprob: -5.48364782333374
    7. 'subset' → logprob: -5.98364782333374
    8. ' for' → logprob: -7.48364782333374
    9. 'combo' → logprob: -7.73364782333374
    10. '       ' → logprob: -8.108648300170898

Token 1129: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.317271888256073
    2. '           ' → logprob: -1.9422719478607178
    3. ' of' → logprob: -3.0672719478607178
    4. ' for' → logprob: -3.5672719478607178
    5. '(h' → logprob: -4.192271709442139
    6. ' from' → logprob: -4.942271709442139
    7. ' in' → logprob: -5.192271709442139
    8. '<|end|>' → logprob: -5.442271709442139
    9. ' =' → logprob: -5.817271709442139
    10. 'from' → logprob: -5.942271709442139

Token 1130: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005809116992168128
    2. '   ' → logprob: -8.000580787658691
    3. 'k' → logprob: -9.125580787658691
    4. '```' → logprob: -9.875580787658691
    5. ' hull' → logprob: -10.250580787658691
    6. '[h' → logprob: -10.625580787658691
    7. 'range' → logprob: -12.000580787658691
    8. '	h' → logprob: -13.000580787658691
    9. '``' → logprob: -13.000580787658691
    10. 'import' → logprob: -13.125580787658691

Token 1131: ' vertices' (ID: 38360)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.21308492124080658
    2. '_vertices' → logprob: -2.4630849361419678
    3. '_points' → logprob: -2.5880849361419678
    4. 'indices' → logprob: -4.463084697723389
    5. '           ' → logprob: -5.463084697723389
    6. '       ' → logprob: -5.713084697723389
    7. '_pts' → logprob: -5.838084697723389
    8. 'points' → logprob: -6.338084697723389
    9. '```' → logprob: -6.338084697723389
    10. ')' → logprob: -6.588084697723389

Token 1132: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016804451122879982
    2. ' for' → logprob: -4.516804218292236
    3. '       ' → logprob: -5.766804218292236
    4. ',' → logprob: -7.641804218292236
    5. 'for' → logprob: -7.641804218292236
    6. ' with' → logprob: -8.516804695129395
    7. ' in' → logprob: -8.641804695129395
    8. ' from' → logprob: -8.641804695129395
    9. 'from' → logprob: -8.766804695129395
    10. '
' → logprob: -8.766804695129395

Token 1133: ' size' (ID: 2349)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0036840438842773438
    2. 'size' → logprob: -5.878684043884277
    3. 'h' → logprob: -7.503684043884277
    4. ' k' → logprob: -9.003684043884277
    5. '```' → logprob: -9.753684043884277
    6. 'range' → logprob: -9.878684043884277
    7. 'import' → logprob: -10.128684043884277
    8. '{k' → logprob: -11.253684043884277
    9. '
' → logprob: -11.503684043884277
    10. '[k' → logprob: -12.003684043884277

Token 1134: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001025895617203787
    2. ' k' → logprob: -9.500102996826172
    3. '```' → logprob: -10.750102996826172
    4. '{k' → logprob: -12.500102996826172
    5. '
' → logprob: -13.875102996826172
    6. '`' → logprob: -14.000102996826172
    7. '           ' → logprob: -15.000102996826172
    8. '``' → logprob: -15.625102996826172
    9. '               ' → logprob: -16.375102996826172
    10. '   ' → logprob: -16.875102996826172

Token 1135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008951825089752674
    2. ' for' → logprob: -5.633951663970947
    3. '       ' → logprob: -6.258951663970947
    4. '
' → logprob: -6.383951663970947
    5. ':
' → logprob: -7.258951663970947
    6. ',' → logprob: -8.008952140808105
    7. 'for' → logprob: -8.383952140808105
    8. ':' → logprob: -8.633952140808105
    9. '            
' → logprob: -9.883952140808105
    10. ' with' → logprob: -10.383952140808105

Token 1136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1198890209197998
    2. '       ' → logprob: -2.7448890209198
    3. ':' → logprob: -4.244889259338379
    4. '               ' → logprob: -4.369889259338379
    5. ':
' → logprob: -4.869889259338379
    6. ' for' → logprob: -5.619889259338379
    7. '
' → logprob: -6.119889259338379
    8. '```' → logprob: -6.244889259338379
    9. ',' → logprob: -6.744889259338379
    10. '{' → logprob: -6.994889259338379

Token 1137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.561541736125946
    2. ' for' → logprob: -1.6865417957305908
    3. '       ' → logprob: -1.9365417957305908
    4. '           ' → logprob: -2.311541795730591
    5. '   ' → logprob: -7.436541557312012
    6. '
' → logprob: -8.811541557312012
    7. 'from' → logprob: -8.936541557312012
    8. ' comb' → logprob: -9.061541557312012
    9. '```' → logprob: -9.561541557312012
    10. 'com' → logprob: -9.811541557312012

Token 1138: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.10233888030052185
    2. 'subset' → logprob: -2.9773387908935547
    3. 'combo' → logprob: -3.3523387908935547
    4. 'idx' → logprob: -5.477338790893555
    5. 'c' → logprob: -5.852338790893555
    6. 'h' → logprob: -6.227338790893555
    7. 'cmb' → logprob: -7.477338790893555
    8. 'pts' → logprob: -7.852338790893555
    9. 'indices' → logprob: -7.852338790893555
    10. ' comb' → logprob: -8.727338790893555

Token 1139: 'i' (ID: 72)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6791975498199463
    2. 'in' → logprob: -0.8041975498199463
    3. '_' → logprob: -3.8041975498199463
    4. '_idx' → logprob: -4.804197311401367
    5. '_in' → logprob: -5.429197311401367
    6. '_i' → logprob: -5.679197311401367
    7. ' _' → logprob: -6.679197311401367
    8. 'i' → logprob: -7.179197311401367
    9. '```' → logprob: -7.554197311401367
    10. '_h' → logprob: -7.554197311401367

Token 1140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012530135922133923
    2. 'in' → logprob: -4.387530326843262
    3. 's' → logprob: -12.012530326843262
    4. '_in' → logprob: -12.137530326843262
    5. ' ' → logprob: -12.887530326843262
    6. '```' → logprob: -13.512530326843262
    7. '	in' → logprob: -14.262530326843262
    8. '   ' → logprob: -14.387530326843262
    9. '
' → logprob: -14.762530326843262
    10. '_tokens' → logprob: -15.012530326843262

Token 1141: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -7.111979357432574e-05
    2. ' combinations' → logprob: -9.75007152557373
    3. '(com' → logprob: -11.87507152557373
    4. '   ' → logprob: -13.12507152557373
    5. '```' → logprob: -13.75007152557373
    6. '           ' → logprob: -14.00007152557373
    7. 'comb' → logprob: -14.12507152557373
    8. 'h' → logprob: -14.75007152557373
    9. '	com' → logprob: -15.12507152557373
    10. 'import' → logprob: -15.75007152557373

Token 1142: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.717296517104842e-05
    2. 'h' → logprob: -10.000057220458984
    3. ',h' → logprob: -12.375057220458984
    4. '(' → logprob: -13.250057220458984
    5. '[h' → logprob: -13.500057220458984
    6. '(
' → logprob: -13.625057220458984
    7. ' (' → logprob: -13.875057220458984
    8. ',' → logprob: -14.625057220458984
    9. ')' → logprob: -14.625057220458984
    10. '           ' → logprob: -15.000057220458984

Token 1143: 'ull' (ID: 754)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13430164754390717
    2. 'ull' → logprob: -2.2593016624450684
    3. 'hul' → logprob: -5.009301662445068
    4. 'indices' → logprob: -5.134301662445068
    5. 'ul' → logprob: -6.134301662445068
    6. '_indices' → logprob: -6.134301662445068
    7. 'ulls' → logprob: -6.634301662445068
    8. '```' → logprob: -7.134301662445068
    9. '   ' → logprob: -7.509301662445068
    10. 'uls' → logprob: -8.13430118560791

Token 1144: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0008498902898281813
    2. 'indices' → logprob: -7.125849723815918
    3. '   ' → logprob: -11.250849723815918
    4. '_inds' → logprob: -12.125849723815918
    5. '"indices' → logprob: -12.375849723815918
    6. '_idxs' → logprob: -12.625849723815918
    7. 'Indices' → logprob: -12.875849723815918
    8. '_pts' → logprob: -13.000849723815918
    9. '[' → logprob: -13.125849723815918
    10. '_vertices' → logprob: -13.250849723815918

Token 1145: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020892347674816847
    2. ',k' → logprob: -6.252089023590088
    3. '):' → logprob: -9.877089500427246
    4. ' ,' → logprob: -10.127089500427246
    5. '               ' → logprob: -11.127089500427246
    6. '           ' → logprob: -11.252089500427246
    7. '   ' → logprob: -11.377089500427246
    8. '):
' → logprob: -11.377089500427246
    9. ',h' → logprob: -12.252089500427246
    10. ')' → logprob: -13.127089500427246

Token 1146: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4772564470767975
    2. '):' → logprob: -0.9772564172744751
    3. ':' → logprob: -6.1022562980651855
    4. ')' → logprob: -8.602256774902344
    5. ':
' → logprob: -8.602256774902344
    6. '):
' → logprob: -8.977256774902344
    7. '       ' → logprob: -9.352256774902344
    8. '<|end|>' → logprob: -9.602256774902344
    9. '               ' → logprob: -9.727256774902344
    10. '):

' → logprob: -10.227256774902344

Token 1147: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015565206995233893
    2. '       ' → logprob: -7.751556396484375
    3. '                
' → logprob: -8.001556396484375
    4. ',' → logprob: -8.751556396484375
    5. '```' → logprob: -8.876556396484375
    6. '           ' → logprob: -9.001556396484375
    7. ':' → logprob: -9.251556396484375
    8. '                   ' → logprob: -9.876556396484375
    9. '<|end|>' → logprob: -10.626556396484375
    10. ':
' → logprob: -10.751556396484375

Token 1148: ' poly' (ID: 14600)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059133924543857574
    2. 'poly' (adapté à ' poly') → logprob: -3.559134006500244
    3. '                   ' → logprob: -4.684134006500244
    4. ' poly' → logprob: -4.809134006500244
    5. ' pts' → logprob: -5.309134006500244
    6. '#' → logprob: -6.184134006500244
    7. ' points' → logprob: -6.559134006500244
    8. 'points' → logprob: -7.184134006500244
    9. ' #' → logprob: -7.184134006500244
    10. 'pts' → logprob: -7.559134006500244

Token 1149: '_pts' (ID: 111072)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014416055753827095
    2. '=' → logprob: -4.639416217803955
    3. '_points' → logprob: -5.639416217803955
    4. '   ' → logprob: -7.264416217803955
    5. '_pts' → logprob: -8.639415740966797
    6. 'points' → logprob: -9.514415740966797
    7. '_coords' → logprob: -9.889415740966797
    8. '_vertices' → logprob: -10.764415740966797
    9. '=[]
' → logprob: -11.514415740966797
    10. ')' → logprob: -11.764415740966797

Token 1150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761945843696594
    2. ' =' → logprob: -0.8261945843696594
    3. '   ' → logprob: -8.701194763183594
    4. '=[' → logprob: -9.951194763183594
    5. ')' → logprob: -11.951194763183594
    6. '=[
' → logprob: -11.951194763183594
    7. '=
' → logprob: -12.326194763183594
    8. '=[]
' → logprob: -12.326194763183594
    9. 'sorted' → logprob: -12.701194763183594
    10. '=[]' → logprob: -12.951194763183594

Token 1151: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06272347271442413
    2. '[p' → logprob: -2.812723398208618
    3. ' [' → logprob: -8.062723159790039
    4. '   ' → logprob: -8.312723159790039
    5. '[(' → logprob: -9.687723159790039
    6. '[pos' → logprob: -10.062723159790039
    7. '[h' → logprob: -11.312723159790039
    8. '[list' → logprob: -11.562723159790039
    9. '[c' → logprob: -11.687723159790039
    10. '[cur' → logprob: -11.812723159790039

Token 1152: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.000866083602886647
    2. '(' → logprob: -7.875865936279297
    3. 'points' → logprob: -7.875865936279297
    4. ' pts' → logprob: -9.875865936279297
    5. '   ' → logprob: -10.375865936279297
    6. 'ps' → logprob: -11.375865936279297
    7. ' (' → logprob: -12.625865936279297
    8. '       ' → logprob: -13.375865936279297
    9. 'idx' → logprob: -13.500865936279297
    10. '[' → logprob: -14.125865936279297

Token 1153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.041720230132341385
    2. '[' → logprob: -3.291720151901245
    3. '[c' → logprob: -6.166720390319824
    4. '[idx' → logprob: -7.291720390319824
    5. '[p' → logprob: -8.166720390319824
    6. '[index' → logprob: -8.541720390319824
    7. 'com' → logprob: -8.541720390319824
    8. '[ind' → logprob: -9.291720390319824
    9. 'i' → logprob: -9.791720390319824
    10. '```' → logprob: -10.791720390319824

Token 1154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6578097343444824
    2. ' for' → logprob: -1.1578097343444824
    3. 'for' → logprob: -2.0328097343444824
    4. ')' → logprob: -3.5328097343444824
    5. '               ' → logprob: -5.157809734344482
    6. '                   ' → logprob: -7.907809734344482
    7. '           ' → logprob: -7.907809734344482
    8. '                ' → logprob: -8.40781021118164
    9. ',' → logprob: -8.65781021118164
    10. '       ' → logprob: -9.28281021118164

Token 1155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09297101944684982
    2. 'for' → logprob: -2.467971086502075
    3. '               ' → logprob: -6.467970848083496
    4. ']' → logprob: -7.342970848083496
    5. ',' → logprob: -7.717970848083496
    6. '                   ' → logprob: -7.967970848083496
    7. '           ' → logprob: -8.342970848083496
    8. '                ' → logprob: -8.592970848083496
    9. '       ' → logprob: -9.342970848083496
    10. ')' → logprob: -9.467970848083496

Token 1156: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.03521392197581e-05
    2. ' i' → logprob: -10.500030517578125
    3. 'com' → logprob: -13.375030517578125
    4. 'in' → logprob: -14.625030517578125
    5. '
' → logprob: -15.125030517578125
    6. ' ' → logprob: -15.875030517578125
    7. '	i' → logprob: -16.125030517578125
    8. '(i' → logprob: -16.500030517578125
    9. 'comb' → logprob: -16.500030517578125
    10. '   ' → logprob: -16.875030517578125

Token 1157: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.029980497434735298
    2. ' in' → logprob: -3.529980421066284
    3. 'com' → logprob: -9.154980659484863
    4. '
' → logprob: -9.654980659484863
    5. ' comb' → logprob: -10.779980659484863
    6. 'comb' → logprob: -10.904980659484863
    7. 'i' → logprob: -11.404980659484863
    8. ' ' → logprob: -12.279980659484863
    9. ' i' → logprob: -13.654980659484863
    10. ' 
' → logprob: -14.029980659484863

Token 1158: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -2.7610454708337784e-05
    2. ' comb' → logprob: -11.375027656555176
    3. 'comb' → logprob: -12.250027656555176
    4. 'list' → logprob: -12.250027656555176
    5. '(com' → logprob: -12.250027656555176
    6. '
' → logprob: -14.500027656555176
    7. 'sorted' → logprob: -14.500027656555176
    8. '[' → logprob: -15.250027656555176
    9. '   ' → logprob: -16.75002670288086
    10. ' list' → logprob: -17.00002670288086

Token 1159: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002122426638379693
    2. 'ination' → logprob: -6.752122402191162
    3. 'inations' → logprob: -8.12712287902832
    4. 'b' → logprob: -8.25212287902832
    5. 'bi' → logprob: -8.62712287902832
    6. 'bination' → logprob: -9.50212287902832
    7. 'binations' → logprob: -10.12712287902832
    8. '[i' → logprob: -10.87712287902832
    9. '[' → logprob: -10.87712287902832
    10. 'comb' → logprob: -10.87712287902832

Token 1160: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5566033124923706
    2. ']' → logprob: -1.0566033124923706
    3. ']
' → logprob: -2.55660343170166
    4. '<|end|>' → logprob: -7.93160343170166
    5. '                
' → logprob: -8.18160343170166
    6. '           ' → logprob: -8.80660343170166
    7. ']
' → logprob: -9.05660343170166
    8. ']

' → logprob: -9.30660343170166
    9. '
' → logprob: -9.43160343170166
    10. '                ' → logprob: -9.55660343170166

Token 1161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020208319183439016
    2. '<|end|>' → logprob: -7.252020835876465
    3. '                
' → logprob: -7.377020835876465
    4. '```' → logprob: -9.502020835876465
    5. '
' → logprob: -9.752020835876465
    6. '                ' → logprob: -9.877020835876465
    7. '<|end|>' → logprob: -9.877020835876465
    8. ' ' → logprob: -9.877020835876465
    9. '              ' → logprob: -10.752020835876465
    10. '\x' → logprob: -10.752020835876465

Token 1162: ' #' (ID: 1069)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6714472770690918
    2. '               ' → logprob: -1.2964472770690918
    3. 'cx' → logprob: -2.546447277069092
    4. 'poly' → logprob: -2.546447277069092
    5. 'cent' → logprob: -3.671447277069092
    6. '#' (adapté à ' #') → logprob: -4.296447277069092
    7. ' poly' → logprob: -5.796447277069092
    8. ' center' → logprob: -5.796447277069092
    9. 'sorted' → logprob: -5.796447277069092
    10. 'import' → logprob: -6.171447277069092

Token 1163: ' order' (ID: 2569)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6052902936935425
    2. 'cx' → logprob: -1.6052902936935425
    3. 'center' → logprob: -1.9802902936935425
    4. '#' → logprob: -2.980290412902832
    5. 'cent' → logprob: -2.980290412902832
    6. 'import' → logprob: -5.230290412902832
    7. 'poly' → logprob: -6.480290412902832
    8. ' cx' → logprob: -6.980290412902832
    9. '   ' → logprob: -6.980290412902832
    10. '           ' → logprob: -7.105290412902832

Token 1164: ' points' (ID: 5571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9506621360778809
    2. 'poly' → logprob: -1.0756621360778809
    3. '=' → logprob: -2.200662136077881
    4. '_poly' → logprob: -3.200662136077881
    5. '_tokens' → logprob: -3.325662136077881
    6. 'com' → logprob: -4.075662136077881
    7. 'by' → logprob: -4.075662136077881
    8. 'tokens' → logprob: -4.075662136077881
    9. ' poly' → logprob: -4.700662136077881
    10. ' by' → logprob: -5.200662136077881

Token 1165: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16738559305667877
    2. '=' → logprob: -1.9173855781555176
    3. '               ' → logprob: -6.542385578155518
    4. ' by' → logprob: -6.917385578155518
    5. '=com' → logprob: -7.417385578155518
    6. 'by' → logprob: -7.542385578155518
    7. '.sort' → logprob: -7.542385578155518
    8. '(com' → logprob: -7.792385578155518
    9. 'sorted' → logprob: -7.917385578155518
    10. '                   ' → logprob: -8.292386054992676

Token 1166: ' cc' (ID: 22988)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2179397344589233
    2. 'lambda' → logprob: -1.5929397344589233
    3. 'cent' → logprob: -1.7179397344589233
    4. '
' → logprob: -2.092939853668213
    5. 'center' → logprob: -2.342939853668213
    6. '(
' → logprob: -3.592939853668213
    7. '(' → logprob: -4.217939853668213
    8. 'cx' → logprob: -4.342939853668213
    9. '(lambda' → logprob: -5.092939853668213
    10. ' x' → logprob: -5.217939853668213

Token 1167: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.828512363834307e-05
    2. '   ' → logprob: -10.500088691711426
    3. '       ' → logprob: -10.625088691711426
    4. 'cw' → logprob: -12.750088691711426
    5. '
' → logprob: -13.125088691711426
    6. '{
' → logprob: -13.250088691711426
    7. 'wx' → logprob: -13.375088691711426
    8. '#' → logprob: -13.375088691711426
    9. 'wise' → logprob: -13.375088691711426
    10. '[
' → logprob: -13.500088691711426

Token 1168: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7751805782318115
    2. 'sorted' → logprob: -2.0251805782318115
    3. 'poly' → logprob: -2.4001805782318115
    4. '_angle' → logprob: -2.5251805782318115
    5. '<|end|>' → logprob: -2.9001805782318115
    6. 'angle' → logprob: -2.9001805782318115
    7. 'def' → logprob: -3.0251805782318115
    8. '_sorted' → logprob: -3.1501805782318115
    9. '[' → logprob: -3.4001805782318115
    10. '   ' → logprob: -3.5251805782318115

Token 1169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004457774106413126
    2. '
' → logprob: -5.754457950592041
    3. 'import' → logprob: -8.504457473754883
    4. '                
' → logprob: -8.504457473754883
    5. ',' → logprob: -8.754457473754883
    6. '       ' → logprob: -8.754457473754883
    7. '           ' → logprob: -9.504457473754883
    8. '                   ' → logprob: -9.754457473754883
    9. ' cent' → logprob: -9.879457473754883
    10. '   ' → logprob: -9.879457473754883

Token 1170: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' (adapté à ' cx') → logprob: -0.2055681347846985
    2. 'cent' → logprob: -2.5805680751800537
    3. ' cx' → logprob: -2.7055680751800537
    4. 'center' → logprob: -3.5805680751800537
    5. ' centroid' → logprob: -5.580568313598633
    6. '               ' → logprob: -5.705568313598633
    7. 'from' → logprob: -5.705568313598633
    8. 'c' → logprob: -6.580568313598633
    9. 'import' → logprob: -6.705568313598633
    10. '   ' → logprob: -7.955568313598633

Token 1171: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0994278192520142
    2. '=' → logprob: -1.0994278192520142
    3. ' =' → logprob: -1.0994278192520142
    4. ' ,' → logprob: -8.099428176879883
    5. ',
' → logprob: -8.349428176879883
    6. '   ' → logprob: -9.974428176879883
    7. ',c' → logprob: -10.224428176879883
    8. '=sum' → logprob: -10.474428176879883
    9. '=(' → logprob: -10.599428176879883
    10. '=
' → logprob: -10.849428176879883

Token 1172: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004087897017598152
    2. ' sum' → logprob: -5.504087924957275
    3. '(sum' → logprob: -11.629087448120117
    4. '   ' → logprob: -14.879087448120117
    5. '=sum' → logprob: -15.504087448120117
    6. '
' → logprob: -17.004087448120117
    7. '	sum' → logprob: -17.504087448120117
    8. '.sum' → logprob: -19.129087448120117
    9. '```' → logprob: -19.129087448120117
    10. ' ' → logprob: -19.254087448120117

Token 1173: '(p' (ID: 2407)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.41727325320243835
    2. 'p' → logprob: -1.6672732830047607
    3. '(poly' → logprob: -2.6672732830047607
    4. '(p' → logprob: -3.4172732830047607
    5. 'x' → logprob: -4.417273044586182
    6. '[' → logprob: -4.417273044586182
    7. '[p' → logprob: -5.292273044586182
    8. ' poly' → logprob: -5.417273044586182
    9. 'pt' → logprob: -5.667273044586182
    10. 'point' → logprob: -5.792273044586182

Token 1174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.839121826691553e-05
    2. '```' → logprob: -10.750078201293945
    3. 'x' → logprob: -11.125078201293945
    4. '0' → logprob: -11.375078201293945
    5. '[i' → logprob: -12.000078201293945
    6. ')' → logprob: -12.125078201293945
    7. '()[' → logprob: -13.125078201293945
    8. '(' → logprob: -13.500078201293945
    9. 'i' → logprob: -13.500078201293945
    10. '[
' → logprob: -13.500078201293945

Token 1175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009864339604973793
    2. '[' → logprob: -4.634864330291748
    3. ' ' → logprob: -10.009864807128906
    4. 'i' → logprob: -10.884864807128906
    5. 'x' → logprob: -11.259864807128906
    6. '   ' → logprob: -11.384864807128906
    7. '```' → logprob: -12.134864807128906
    8. '][' → logprob: -12.884864807128906
    9. '(' → logprob: -13.259864807128906
    10. ' [' → logprob: -13.509864807128906

Token 1176: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22621385753154755
    2. 'for' → logprob: -1.601213812828064
    3. ')' → logprob: -7.8512139320373535
    4. ')/' → logprob: -8.601213455200195
    5. '```' → logprob: -9.476213455200195
    6. '	for' → logprob: -10.226213455200195
    7. '*p' → logprob: -10.476213455200195
    8. '*' → logprob: -10.851213455200195
    9. '
' → logprob: -11.226213455200195
    10. '   ' → logprob: -11.351213455200195

Token 1177: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24030277132987976
    2. 'for' → logprob: -1.6153028011322021
    3. ')' → logprob: -4.740302562713623
    4. ',' → logprob: -6.240302562713623
    5. '*p' → logprob: -6.865302562713623
    6. ')/' → logprob: -7.115302562713623
    7. '*' → logprob: -7.240302562713623
    8. '```' → logprob: -7.615302562713623
    9. ' ' → logprob: -9.240303039550781
    10. '/' → logprob: -9.240303039550781

Token 1178: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3132801651954651
    2. ' p' → logprob: -1.3132801055908203
    3. 'poly' → logprob: -11.56328010559082
    4. ' poly' → logprob: -12.93828010559082
    5. ' in' → logprob: -13.06328010559082
    6. '	p' → logprob: -13.43828010559082
    7. ' ' → logprob: -14.31328010559082
    8. '<|end|>' → logprob: -14.56328010559082
    9. ',p' → logprob: -14.81328010559082
    10. ')p' → logprob: -14.81328010559082

Token 1179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016413794830441475
    2. 'in' → logprob: -4.391413688659668
    3. ' p' → logprob: -5.641413688659668
    4. 'p' → logprob: -9.016413688659668
    5. ')' → logprob: -9.516413688659668
    6. ' ' → logprob: -9.891413688659668
    7. '<|end|>' → logprob: -10.891413688659668
    8. ',p' → logprob: -11.016413688659668
    9. ',' → logprob: -11.391413688659668
    10. 's' → logprob: -11.891413688659668

Token 1180: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.004079470410943031
    2. ' poly' → logprob: -5.504079341888428
    3. 'p' → logprob: -14.754079818725586
    4. 'com' → logprob: -15.629079818725586
    5. 'pol' → logprob: -15.629079818725586
    6. 'comb' → logprob: -16.254079818725586
    7. '(poly' → logprob: -16.379079818725586
    8. 'py' → logprob: -17.254079818725586
    9. 'px' → logprob: -18.129079818725586
    10. ' comb' → logprob: -19.129079818725586

Token 1181: '_pts' (ID: 111072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48867616057395935
    2. '_pts' → logprob: -1.3636761903762817
    3. '_points' → logprob: -2.238676071166992
    4. 'Pts' → logprob: -5.363676071166992
    5. '_POINTS' → logprob: -5.863676071166992
    6. '
' → logprob: -5.863676071166992
    7. 'oints' → logprob: -5.863676071166992
    8. '<|end|>' → logprob: -6.988676071166992
    9. '[' → logprob: -7.113676071166992
    10. '),' → logprob: -7.238676071166992

Token 1182: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.3881228566169739
    2. ')' → logprob: -1.263122797012329
    3. ' )' → logprob: -3.513122797012329
    4. '/' → logprob: -5.513123035430908
    5. ' /' → logprob: -5.888123035430908
    6. ')/(' → logprob: -6.263123035430908
    7. ')//' → logprob: -9.51312255859375
    8. '/)' → logprob: -10.01312255859375
    9. '/k' → logprob: -10.26312255859375
    10. '
' → logprob: -10.26312255859375

Token 1183: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00015979631280060858
    2. 'len' → logprob: -8.750160217285156
    3. ' k' → logprob: -13.625160217285156
    4. '{k' → logprob: -17.750160217285156
    5. 'kx' → logprob: -18.250160217285156
    6. '(len' → logprob: -18.375160217285156
    7. ' len' → logprob: -18.375160217285156
    8. '
' → logprob: -18.500160217285156
    9. '(k' → logprob: -18.625160217285156
    10. '   ' → logprob: -19.000160217285156

Token 1184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008547906763851643
    2. ',' → logprob: -5.133547782897949
    3. ',
' → logprob: -6.508547782897949
    4. '
' → logprob: -8.13354778289795
    5. '   ' → logprob: -8.63354778289795
    6. ' 
' → logprob: -8.75854778289795
    7. '       ' → logprob: -9.38354778289795
    8. '               ' → logprob: -9.50854778289795
    9. ';' → logprob: -9.75854778289795
    10. ')' → logprob: -9.75854778289795

Token 1185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028253305703401566
    2. '                
' → logprob: -5.403253078460693
    3. '```' → logprob: -5.528253078460693
    4. '                ' → logprob: -5.653253078460693
    5. ' 
' → logprob: -6.028253078460693
    6. ',' → logprob: -6.028253078460693
    7. 'x' → logprob: -6.528253078460693
    8. ' ' → logprob: -6.778253078460693
    9. '[' → logprob: -7.153253078460693
    10. ',
' → logprob: -7.278253078460693

Token 1186: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' (adapté à ' cy') → logprob: -0.005425135139375925
    2. ' cy' → logprob: -5.630424976348877
    3. '               ' → logprob: -6.380424976348877
    4. '                ' → logprob: -10.630425453186035
    5. 'py' → logprob: -11.005425453186035
    6. 'y' → logprob: -11.380425453186035
    7. 'import' → logprob: -11.505425453186035
    8. '                   ' → logprob: -11.630425453186035
    9. ',' → logprob: -11.880425453186035
    10. '           ' → logprob: -12.380425453186035

Token 1187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4246787130832672
    2. ' =' → logprob: -1.1746786832809448
    3. ')' → logprob: -3.9246788024902344
    4. ' +=' → logprob: -5.424678802490234
    5. '+' → logprob: -5.549678802490234
    6. ' +' → logprob: -6.049678802490234
    7. '+=' → logprob: -6.174678802490234
    8. '<|end|>' → logprob: -6.424678802490234
    9. ',' → logprob: -7.674678802490234
    10. '
' → logprob: -8.424678802490234

Token 1188: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011050059460103512
    2. ' sum' → logprob: -4.511050224304199
    3. '(sum' → logprob: -13.2610502243042
    4. '
' → logprob: -15.7610502243042
    5. '=sum' → logprob: -16.261049270629883
    6. '	sum' → logprob: -16.761049270629883
    7. 'float' → logprob: -17.011049270629883
    8. 'k' → logprob: -17.511049270629883
    9. '   ' → logprob: -18.386049270629883
    10. '.sum' → logprob: -18.386049270629883

Token 1189: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000874539720825851
    2. '(' → logprob: -7.1258745193481445
    3. '(
' → logprob: -9.875874519348145
    4. 'p' → logprob: -11.500874519348145
    5. '1' → logprob: -12.000874519348145
    6. '
' → logprob: -13.500874519348145
    7. ' (' → logprob: -15.125874519348145
    8. '((' → logprob: -15.500874519348145
    9. '[p' → logprob: -15.625874519348145
    10. '([' → logprob: -16.37587547302246

Token 1190: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029721209779381752
    2. '(' → logprob: -4.404721260070801
    3. '(p' → logprob: -4.404721260070801
    4. 'for' → logprob: -5.904721260070801
    5. 'p' → logprob: -6.654721260070801
    6. '1' → logprob: -7.654721260070801
    7. ' for' → logprob: -9.1547212600708
    8. 'i' → logprob: -9.6547212600708
    9. 'y' → logprob: -10.5297212600708
    10. '
' → logprob: -11.0297212600708

Token 1191: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.113014817237854
    2. '1' → logprob: -2.2380146980285645
    3. '(p' → logprob: -9.363015174865723
    4. ' p' → logprob: -9.488015174865723
    5. 'for' → logprob: -10.988015174865723
    6. '[' → logprob: -12.488015174865723
    7. '(' → logprob: -12.863015174865723
    8. '0' → logprob: -13.113015174865723
    9. 'i' → logprob: -13.488015174865723
    10. '[p' → logprob: -13.738015174865723

Token 1192: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16074548661708832
    2. ' for' → logprob: -1.9107455015182495
    3. '(p' → logprob: -8.285745620727539
    4. ')' → logprob: -8.535745620727539
    5. '	for' → logprob: -10.160745620727539
    6. '```' → logprob: -11.660745620727539
    7. '<|end|>' → logprob: -12.785745620727539
    8. '   ' → logprob: -13.035745620727539
    9. '()' → logprob: -13.285745620727539
    10. ')p' → logprob: -13.535745620727539

Token 1193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07126332819461823
    2. ' for' → logprob: -2.696263313293457
    3. '/' → logprob: -6.946263313293457
    4. '/p' → logprob: -8.321263313293457
    5. ')' → logprob: -9.696263313293457
    6. ' /' → logprob: -10.571263313293457
    7. ')/' → logprob: -12.071263313293457
    8. '(p' → logprob: -12.196263313293457
    9. '```' → logprob: -12.321263313293457
    10. '	for' → logprob: -12.946263313293457

Token 1194: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3873961269855499
    2. 'poly' → logprob: -1.1373960971832275
    3. ' poly' → logprob: -7.887396335601807
    4. ' p' → logprob: -9.012395858764648
    5. 'pol' → logprob: -12.012395858764648
    6. '(p' → logprob: -12.762395858764648
    7. '(poly' → logprob: -12.887395858764648
    8. '
' → logprob: -13.137395858764648
    9. '[' → logprob: -13.262395858764648
    10. '[p' → logprob: -13.387395858764648

Token 1195: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06162163242697716
    2. ' in' → logprob: -3.31162166595459
    3. '[' → logprob: -4.68662166595459
    4. 'for' → logprob: -5.56162166595459
    5. '1' → logprob: -5.68662166595459
    6. '(' → logprob: -5.81162166595459
    7. ')' → logprob: -6.56162166595459
    8. '0' → logprob: -7.31162166595459
    9. 'p' → logprob: -8.18662166595459
    10. '<|end|>' → logprob: -8.68662166595459

Token 1196: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -4.0484450437361374e-05
    2. 'range' → logprob: -11.125040054321289
    3. ' poly' → logprob: -11.500040054321289
    4. 'k' → logprob: -11.875040054321289
    5. 'com' → logprob: -12.750040054321289
    6. 'comb' → logprob: -13.125040054321289
    7. 'p' → logprob: -13.250040054321289
    8. '(poly' → logprob: -13.875040054321289
    9. 'pol' → logprob: -14.375040054321289
    10. '[' → logprob: -15.750040054321289

Token 1197: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.006479815114289522
    2. 'Pts' → logprob: -6.756479740142822
    3. '```' → logprob: -7.006479740142822
    4. '_points' → logprob: -7.131479740142822
    5. '[i' → logprob: -7.506479740142822
    6. ']_' → logprob: -7.881479740142822
    7. ')' → logprob: -7.881479740142822
    8. '[k' → logprob: -8.38148021697998
    9. ']' → logprob: -8.50648021697998
    10. '1' → logprob: -8.50648021697998

Token 1198: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08305983245372772
    2. ')/' → logprob: -2.833059787750244
    3. ')
' → logprob: -5.583059787750244
    4. ')*' → logprob: -5.708059787750244
    5. '       ' → logprob: -5.958059787750244
    6. '   ' → logprob: -6.333059787750244
    7. '
' → logprob: -6.458059787750244
    8. ')+' → logprob: -6.708059787750244
    9. ')**' → logprob: -7.083059787750244
    10. ' for' → logprob: -7.333059787750244

Token 1199: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.2200749754119897e-06
    2. ' k' → logprob: -13.125001907348633
    3. '{k' → logprob: -16.250001907348633
    4. 'kx' → logprob: -18.500001907348633
    5. '
' → logprob: -18.750001907348633
    6. '_k' → logprob: -19.625001907348633
    7. '/k' → logprob: -19.875001907348633
    8. '(k' → logprob: -20.000001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '	k' → logprob: -21.125001907348633

Token 1200: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5599940419197083
    2. '
' → logprob: -0.9349940419197083
    3. '                
' → logprob: -4.809994220733643
    4. ')' → logprob: -5.059994220733643
    5. ',' → logprob: -5.184994220733643
    6. ')
' → logprob: -6.184994220733643
    7. ',
' → logprob: -6.184994220733643
    8. '
' → logprob: -6.434994220733643
    9. '                   ' → logprob: -6.559994220733643
    10. '    
' → logprob: -6.684994220733643

Token 1201: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004420978482812643
    2. '
' → logprob: -6.129420757293701
    3. '                
' → logprob: -7.379420757293701
    4. '       ' → logprob: -7.504420757293701
    5. ' for' → logprob: -8.37942123413086
    6. ',' → logprob: -8.37942123413086
    7. '           ' → logprob: -8.87942123413086
    8. ',
' → logprob: -9.12942123413086
    9. ' 
' → logprob: -9.62942123413086
    10. '        
' → logprob: -10.00442123413086

Token 1202: ' poly' (ID: 14600)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10722403228282928
    2. 'def' → logprob: -3.2322239875793457
    3. 'poly' (adapté à ' poly') → logprob: -3.3572239875793457
    4. 'sorted' → logprob: -4.732223987579346
    5. ' def' → logprob: -4.857223987579346
    6. 'import' → logprob: -5.857223987579346
    7. 'points' → logprob: -5.982223987579346
    8. 'pts' → logprob: -6.607223987579346
    9. ' pts' → logprob: -6.857223987579346
    10. ' poly' → logprob: -7.357223987579346

Token 1203: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.009381084702908993
    2. ' =' → logprob: -5.134381294250488
    3. '=' → logprob: -5.884381294250488
    4. '_sorted' → logprob: -8.009381294250488
    5. 'sorted' → logprob: -8.509381294250488
    6. '_points' → logprob: -9.634381294250488
    7. 'pts' → logprob: -10.759381294250488
    8. 'Pts' → logprob: -11.634381294250488
    9. 'ots' → logprob: -11.884381294250488
    10. 'ordered' → logprob: -12.509381294250488

Token 1204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12149380892515182
    2. '.sort' → logprob: -2.3714938163757324
    3. ' =' → logprob: -3.9964938163757324
    4. '_sorted' → logprob: -6.371493816375732
    5. 'sorted' → logprob: -7.121493816375732
    6. 'sort' → logprob: -9.496493339538574
    7. '.' → logprob: -10.496493339538574
    8. '=
' → logprob: -10.496493339538574
    9. ' sorted' → logprob: -11.246493339538574
    10. ')' → logprob: -12.371493339538574

Token 1205: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -3.464347173576243e-05
    2. ' sorted' → logprob: -10.37503433227539
    3. '   ' → logprob: -12.75003433227539
    4. '(sorted' → logprob: -14.75003433227539
    5. '[' → logprob: -17.00003433227539
    6. 'list' → logprob: -17.25003433227539
    7. '           ' → logprob: -18.75003433227539
    8. '.sorted' → logprob: -18.87503433227539
    9. '       ' → logprob: -19.87503433227539
    10. '               ' → logprob: -19.87503433227539

Token 1206: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.0015068859793245792
    2. 'poly' → logprob: -6.501506805419922
    3. '(
' → logprob: -12.751506805419922
    4. '(' → logprob: -13.626506805419922
    5. ' poly' → logprob: -15.376506805419922
    6. '(pol' → logprob: -15.376506805419922
    7. '(py' → logprob: -17.126506805419922
    8. '/poly' → logprob: -17.501506805419922
    9. '_poly' → logprob: -17.876506805419922
    10. 'Poly' → logprob: -18.501506805419922

Token 1207: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.00015598179015796632
    2. 'poly' → logprob: -9.37515640258789
    3. 'pts' → logprob: -10.25015640258789
    4. '_poly' → logprob: -12.00015640258789
    5. '_pt' → logprob: -12.25015640258789
    6. ',' → logprob: -12.25015640258789
    7. '```' → logprob: -12.62515640258789
    8. '   ' → logprob: -12.62515640258789
    9. 'ots' → logprob: -13.50015640258789
    10. '
' → logprob: -13.62515640258789

Token 1208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0491623654961586
    2. ',key' → logprob: -3.0491623878479004
    3. 'key' → logprob: -7.6741623878479
    4. ',
' → logprob: -10.299161911010742
    5. '               ' → logprob: -10.674161911010742
    6. 'with' → logprob: -11.174161911010742
    7. ' ,' → logprob: -11.674161911010742
    8. '                   ' → logprob: -12.424161911010742
    9. '(key' → logprob: -12.549161911010742
    10. 'def' → logprob: -12.549161911010742

Token 1209: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.008618119172751904
    2. ' key' → logprob: -4.758618354797363
    3. ',key' → logprob: -13.758618354797363
    4. 'lambda' → logprob: -13.883618354797363
    5. '(key' → logprob: -14.508618354797363
    6. '	key' → logprob: -14.633618354797363
    7. '               ' → logprob: -15.008618354797363
    8. '                   ' → logprob: -15.508618354797363
    9. '   ' → logprob: -17.258617401123047
    10. '           ' → logprob: -17.383617401123047

Token 1210: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00043126524542458355
    2. '=' → logprob: -7.875431060791016
    3. '=
' → logprob: -10.000431060791016
    4. 'lambda' → logprob: -12.250431060791016
    5. '(lambda' → logprob: -14.625431060791016
    6. '=(' → logprob: -15.500431060791016
    7. '=torch' → logprob: -17.250431060791016
    8. 'from' → logprob: -17.375431060791016
    9. '=_' → logprob: -17.875431060791016
    10. '=\' → logprob: -17.875431060791016

Token 1211: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.026478411629796028
    2. ' lambda' → logprob: -3.6514785289764404
    3. '=lambda' → logprob: -9.52647876739502
    4. 'p' → logprob: -9.90147876739502
    5. '(lambda' → logprob: -10.02647876739502
    6. '   ' → logprob: -12.77647876739502
    7. 'import' → logprob: -12.90147876739502
    8. 'math' → logprob: -13.65147876739502
    9. ' p' → logprob: -13.90147876739502
    10. 'λ' → logprob: -14.40147876739502

Token 1212: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015168882673606277
    2. ':(' → logprob: -7.001516819000244
    3. 'import' → logprob: -8.001517295837402
    4. ':
' → logprob: -8.876517295837402
    5. ':p' → logprob: -10.001517295837402
    6. ' :' → logprob: -10.251517295837402
    7. ':[
' → logprob: -11.251517295837402
    8. 'math' → logprob: -11.876517295837402
    9. ':int' → logprob: -12.126517295837402
    10. 'p' → logprob: -12.876517295837402

Token 1213: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2169055938720703
    2. '(lambda' → logprob: -1.7169055938720703
    3. 'import' → logprob: -1.9669055938720703
    4. '(-' → logprob: -2.2169055938720703
    5. '-' → logprob: -2.8419055938720703
    6. '((' → logprob: -3.0919055938720703
    7. '(math' → logprob: -3.0919055938720703
    8. '(import' → logprob: -3.2169055938720703
    9. '(__' → logprob: -3.9669055938720703
    10. '(p' → logprob: -4.09190559387207

Token 1214: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9483770728111267
    2. '(p' → logprob: -1.8233771324157715
    3. '-(' → logprob: -2.1983771324157715
    4. '-p' → logprob: -2.4483771324157715
    5. '(-' → logprob: -2.4483771324157715
    6. '(math' → logprob: -3.0733771324157715
    7. '(' → logprob: -3.4483771324157715
    8. '((' → logprob: -3.6983771324157715
    9. 'import' → logprob: -4.1983771324157715
    10. 'math' → logprob: -4.5733771324157715

Token 1215: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8092005252838135
    2. '(' → logprob: -2.1842005252838135
    3. 'p' → logprob: -2.1842005252838135
    4. '-' → logprob: -2.6842005252838135
    5. '-p' → logprob: -2.6842005252838135
    6. '((' → logprob: -2.9342005252838135
    7. '-(' → logprob: -3.3092005252838135
    8. 'import' → logprob: -3.8092005252838135
    9. '(math' → logprob: -3.9342005252838135
    10. 'atan' → logprob: -3.9342005252838135

Token 1216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010524090379476547
    2. 'import' → logprob: -5.260524272918701
    3. '0' → logprob: -5.635524272918701
    4. ',' → logprob: -7.635524272918701
    5. '1' → logprob: -8.010523796081543
    6. 'math' → logprob: -8.510523796081543
    7. '[
' → logprob: -9.260523796081543
    8. '(' → logprob: -9.385523796081543
    9. '-' → logprob: -9.510523796081543
    10. ')' → logprob: -9.510523796081543

Token 1217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002774246677290648
    2. '[' → logprob: -9.000277519226074
    3. 'import' → logprob: -9.125277519226074
    4. '1' → logprob: -11.000277519226074
    5. '
' → logprob: -11.625277519226074
    6. 'math' → logprob: -11.875277519226074
    7. 'x' → logprob: -12.250277519226074
    8. 'p' → logprob: -13.625277519226074
    9. '#' → logprob: -13.750277519226074
    10. 'from' → logprob: -14.500277519226074

Token 1218: ']-' (ID: 27107)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.5921171307563782
    2. '-' → logprob: -0.9671171307563782
    3. ' -' → logprob: -2.7171170711517334
    4. ',' → logprob: -8.467117309570312
    5. '-
' → logprob: -8.967117309570312
    6. ')-' → logprob: -9.467117309570312
    7. ')-(' → logprob: -9.967117309570312
    8. '-C' → logprob: -10.217117309570312
    9. '[' → logprob: -11.092117309570312
    10. ')' → logprob: -11.342117309570312

Token 1219: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.00018232580623589456
    2. 'cy' → logprob: -9.500182151794434
    3. ' cx' → logprob: -9.875182151794434
    4. '
' → logprob: -10.125182151794434
    5. '(cx' → logprob: -11.250182151794434
    6. '0' → logprob: -14.125182151794434
    7. '1' → logprob: -14.375182151794434
    8. '.cx' → logprob: -14.625182151794434
    9. '   ' → logprob: -15.250182151794434
    10. '{
' → logprob: -15.500182151794434

Token 1220: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.1807713359594345
    2. ')' → logprob: -1.8057713508605957
    3. ',' → logprob: -7.805771350860596
    4. ',p' → logprob: -8.180770874023438
    5. ')*' → logprob: -9.805770874023438
    6. ' )' → logprob: -9.805770874023438
    7. '),' → logprob: -10.305770874023438
    8. 'p' → logprob: -10.430770874023438
    9. ',y' → logprob: -10.555770874023438
    10. '),(' → logprob: -10.805770874023438

Token 1221: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.750004768371582
    3. '
' → logprob: -14.375004768371582
    4. '0' → logprob: -14.375004768371582
    5. '=' → logprob: -15.250004768371582
    6. '```' → logprob: -15.625004768371582
    7. '{' → logprob: -15.750004768371582
    8. '20' → logprob: -16.6250057220459
    9. '**' → logprob: -16.8750057220459
    10. '1' → logprob: -17.6250057220459

Token 1222: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.025099394842982292
    2. ' +' → logprob: -4.400099277496338
    3. '+p' → logprob: -4.775099277496338
    4. '+(' → logprob: -5.775099277496338
    5. '+
' → logprob: -7.025099277496338
    6. ')+(' → logprob: -9.900099754333496
    7. ')+' → logprob: -11.775099754333496
    8. '+self' → logprob: -12.900099754333496
    9. ' +
' → logprob: -13.025099754333496
    10. '+b' → logprob: -13.400099754333496

Token 1223: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.953082341467962e-05
    2. '(p' → logprob: -10.875039100646973
    3. ' p' → logprob: -10.875039100646973
    4. '   ' → logprob: -13.875039100646973
    5. '	p' → logprob: -16.00004005432129
    6. '<|end|>' → logprob: -16.75004005432129
    7. 'py' → logprob: -17.00004005432129
    8. ' (' → logprob: -17.00004005432129
    9. ' ' → logprob: -17.00004005432129
    10. ')p' → logprob: -17.12504005432129

Token 1224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5769809484481812
    2. '1' → logprob: -0.8269809484481812
    3. '0' → logprob: -7.451981067657471
    4. 'y' → logprob: -8.576980590820312
    5. '-' → logprob: -9.451980590820312
    6. '(' → logprob: -10.201980590820312
    7. '<|end|>' → logprob: -10.326980590820312
    8. '[
' → logprob: -10.826980590820312
    9. '<|end|>' → logprob: -11.201980590820312
    10. '#' → logprob: -11.326980590820312

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. '[' → logprob: -10.500036239624023
    3. '
' → logprob: -13.125036239624023
    4. '(' → logprob: -13.250036239624023
    5. ' ' → logprob: -13.625036239624023
    6. '0' → logprob: -14.500036239624023
    7. '```' → logprob: -14.500036239624023
    8. 'y' → logprob: -15.000036239624023
    9. '...' → logprob: -15.062536239624023
    10. '   ' → logprob: -15.187536239624023

Token 1226: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1250556856393814
    2. '-c' → logprob: -3.1250557899475098
    3. '[' → logprob: -3.2500557899475098
    4. ' -' → logprob: -4.00005578994751
    5. '-p' → logprob: -5.37505578994751
    6. '0' → logprob: -5.50005578994751
    7. '()-' → logprob: -6.12505578994751
    8. ']-' → logprob: -6.25005578994751
    9. '<|end|>' → logprob: -7.37505578994751
    10. ')-(' → logprob: -7.62505578994751

Token 1227: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -8.895480277715251e-06
    2. '(c' → logprob: -12.250008583068848
    3. '
' → logprob: -13.375008583068848
    4. '   ' → logprob: -14.250008583068848
    5. '0' → logprob: -14.875008583068848
    6. '2' → logprob: -15.125008583068848
    7. ' cy' → logprob: -15.125008583068848
    8. 'cx' → logprob: -15.375008583068848
    9. '1' → logprob: -15.500008583068848
    10. '(' → logprob: -16.250009536743164

Token 1228: ')**' (ID: 80066)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10009083896875381
    2. '0' → logprob: -3.225090742111206
    3. ')' → logprob: -3.600090742111206
    4. '```' → logprob: -4.850090980529785
    5. '1' → logprob: -5.225090980529785
    6. '-' → logprob: -5.600090980529785
    7. 'p' → logprob: -5.850090980529785
    8. '[
' → logprob: -6.350090980529785
    9. ',' → logprob: -6.725090980529785
    10. '(' → logprob: -6.975090980529785

Token 1229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6725742816925049
    2. '0' → logprob: -0.7975742816925049
    3. '1' → logprob: -3.422574281692505
    4. '.' → logprob: -5.797574043273926
    5. '(' → logprob: -5.922574043273926
    6. '{' → logprob: -8.172574043273926
    7. 'p' → logprob: -8.797574043273926
    8. ' ' → logprob: -9.422574043273926
    9. '```' → logprob: -9.922574043273926
    10. '-' → logprob: -10.422574043273926

Token 1230: ' ))' (ID: 27539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3900983929634094
    2. '**' → logprob: -1.6400983333587646
    3. ')**' → logprob: -2.8900983333587646
    4. ',p' → logprob: -3.3900983333587646
    5. ')' → logprob: -4.140098571777344
    6. ' ,' → logprob: -4.640098571777344
    7. ',
' → logprob: -5.640098571777344
    8. ' if' → logprob: -6.140098571777344
    9. ' **' → logprob: -6.390098571777344
    10. ' -' → logprob: -7.265098571777344

Token 1231: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21910704672336578
    2. '<|end|>' → logprob: -2.094107151031494
    3. '               ' → logprob: -4.219107151031494
    4. ':' → logprob: -4.469107151031494
    5. ',' → logprob: -4.594107151031494
    6. ':
' → logprob: -4.844107151031494
    7. ',
' → logprob: -5.344107151031494
    8. '
' → logprob: -5.469107151031494
    9. '.' → logprob: -5.594107151031494
    10. '),' → logprob: -5.969107151031494

Token 1232: ' sort' (ID: 4506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.903677225112915
    2. ')' → logprob: -1.028677225112915
    3. '<|end|>' → logprob: -2.153677225112915
    4. ',
' → logprob: -2.528677225112915
    5. '),' → logprob: -4.153676986694336
    6. ')
' → logprob: -5.778676986694336
    7. 'import' → logprob: -6.278676986694336
    8. '
' → logprob: -6.403676986694336
    9. '               ' → logprob: -6.403676986694336
    10. '#' → logprob: -6.778676986694336

Token 1233: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6786264181137085
    2. '<|end|>' → logprob: -1.6786264181137085
    3. '(' → logprob: -1.9286264181137085
    4. 'poly' → logprob: -2.303626537322998
    5. '(lambda' → logprob: -2.553626537322998
    6. 'by' → logprob: -2.678626537322998
    7. '(
' → logprob: -3.178626537322998
    8. '=lambda' → logprob: -3.303626537322998
    9. '(poly' → logprob: -3.303626537322998
    10. 'key' → logprob: -3.928626537322998

Token 1234: ' distance' (ID: 9324)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.874587059020996
    2. 'atan' → logprob: -1.999587059020996
    3. 'math' → logprob: -1.999587059020996
    4. ' (' → logprob: -2.124587059020996
    5. '(' → logprob: -2.249587059020996
    6. '(math' → logprob: -2.374587059020996
    7. 'angle' → logprob: -2.624587059020996
    8. '(p' → logprob: -3.374587059020996
    9. '-p' → logprob: -3.499587059020996
    10. '((' → logprob: -3.749587059020996

Token 1235: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22504127025604248
    2. ')' → logprob: -1.9750412702560425
    3. '(' → logprob: -3.600041389465332
    4. '<|end|>' → logprob: -4.725041389465332
    5. 'from' → logprob: -4.850041389465332
    6. ',
' → logprob: -5.100041389465332
    7. '(
' → logprob: -5.975041389465332
    8. ' (' → logprob: -6.350041389465332
    9. '**' → logprob: -6.850041389465332
    10. '),' → logprob: -7.100041389465332

Token 1236: ' case' (ID: 1890)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.099707841873169
    2. '2' → logprob: -1.599707841873169
    3. '1' → logprob: -1.849707841873169
    4. '-c' → logprob: -2.599707841873169
    5. 'x' → logprob: -3.224707841873169
    6. 'descending' → logprob: -3.349707841873169
    7. 'p' → logprob: -3.849707841873169
    8. '(' → logprob: -4.22470760345459
    9. 'reverse' → logprob: -4.22470760345459
    10. '+' → logprob: -4.47470760345459

Token 1237: ' all' (ID: 722)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5153380036354065
    2. '-' → logprob: -2.6403379440307617
    3. '0' → logprob: -2.7653379440307617
    4. ' (' → logprob: -3.2653379440307617
    5. '(' → logprob: -3.5153379440307617
    6. 'x' → logprob: -3.6403379440307617
    7. 'math' → logprob: -3.7653379440307617
    8. 'angle' → logprob: -3.8903379440307617
    9. ' of' → logprob: -4.140337944030762
    10. ' -' → logprob: -4.390337944030762

Token 1238: ' col' (ID: 996)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6002873778343201
    2. 'from' → logprob: -1.7252874374389648
    3. ',' → logprob: -2.350287437438965
    4. '-' → logprob: -3.350287437438965
    5. ' -' → logprob: -3.600287437438965
    6. ' from' → logprob: -3.725287437438965
    7. ' ,' → logprob: -4.225287437438965
    8. ' (' → logprob: -4.350287437438965
    9. ',
' → logprob: -4.600287437438965
    10. ':' → logprob: -4.975287437438965

Token 1239: 'inear' (ID: 133017)
  Prédit: 'inear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inear' → logprob: -0.17791612446308136
    2. 'linear' → logprob: -1.927916169166565
    3. 'line' → logprob: -5.427916049957275
    4. '(p' → logprob: -5.552916049957275
    5. '   ' → logprob: -6.802916049957275
    6. '0' → logprob: -7.552916049957275
    7. '(' → logprob: -7.677916049957275
    8. 'ine' → logprob: -7.677916049957275
    9. 'orm' → logprob: -7.677916049957275
    10. '[(' → logprob: -7.802916049957275

Token 1240: ' impossible' (ID: 19786)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7157986164093018
    2. ',
' → logprob: -1.3407986164093018
    3. ')' → logprob: -1.5907986164093018
    4. '
' → logprob: -4.340798377990723
    5. '<|end|>' → logprob: -4.340798377990723
    6. '),' → logprob: -4.590798377990723
    7. ')
' → logprob: -5.965798377990723
    8. '[' → logprob: -6.965798377990723
    9. '),
' → logprob: -7.465798377990723
    10. '[::-' → logprob: -7.715798377990723

Token 1241: ' here' (ID: 2105)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6343036890029907
    2. ')' → logprob: -1.3843036890029907
    3. '               ' → logprob: -2.259303569793701
    4. '<|end|>' → logprob: -2.884303569793701
    5. ',
' → logprob: -3.634303569793701
    6. '),' → logprob: -4.384303569793701
    7. '.' → logprob: -5.134303569793701
    8. '                
' → logprob: -5.634303569793701
    9. 'else' → logprob: -6.134303569793701
    10. '
' → logprob: -7.134303569793701

Token 1242: '
' (ID: 198)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.7599678039550781
    2. ',' → logprob: -1.0099678039550781
    3. '               ' → logprob: -1.8849678039550781
    4. '
' → logprob: -5.009967803955078
    5. ')' → logprob: -5.509967803955078
    6. '),' → logprob: -6.759967803955078
    7. '                
' → logprob: -6.759967803955078
    8. '<|end|>' → logprob: -7.259967803955078
    9. ')
' → logprob: -7.634967803955078
    10. ',
' → logprob: -8.384967803955078

Token 1243: '               ' (ID: 506)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.48823919892311096
    2. ',' → logprob: -0.9882391691207886
    3. '               ' → logprob: -4.363239288330078
    4. '),' → logprob: -8.488239288330078
    5. ')' → logprob: -8.613239288330078
    6. ',

' → logprob: -8.863239288330078
    7. '',' → logprob: -9.488239288330078
    8. ',
' → logprob: -10.113239288330078
    9. '(
' → logprob: -10.113239288330078
    10. '','' → logprob: -10.113239288330078

Token 1244: ' poly' (ID: 14600)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.5922744274139404
    2. ',' → logprob: -0.9672744274139404
    3. '               ' → logprob: -3.4672744274139404
    4. '(
' → logprob: -4.8422746658325195
    5. ')' → logprob: -5.0922746658325195
    6. ')
' → logprob: -6.3422746658325195
    7. '#' → logprob: -6.7172746658325195
    8. '.' → logprob: -6.7172746658325195
    9. '),' → logprob: -6.7172746658325195
    10. '\x' → logprob: -7.0922746658325195

Token 1245: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.0005941396811977029
    2. ' =' → logprob: -8.375594139099121
    3. '_points' → logprob: -8.500594139099121
    4. '=' → logprob: -9.875594139099121
    5. 'Pts' → logprob: -10.250594139099121
    6. '_tokens' → logprob: -10.875594139099121
    7. '_sorted' → logprob: -11.625594139099121
    8. '_pt' → logprob: -12.000594139099121
    9. '   ' → logprob: -12.125594139099121
    10. '_coords' → logprob: -12.875594139099121

Token 1246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22836318612098694
    2. ' =' → logprob: -1.6033631563186646
    3. '.sort' → logprob: -5.853363037109375
    4. '=
' → logprob: -10.228363037109375
    5. 'sorted' → logprob: -11.228363037109375
    6. 'sort' → logprob: -11.478363037109375
    7. '=lambda' → logprob: -12.728363037109375
    8. '   ' → logprob: -12.978363037109375
    9. '_sorted' → logprob: -13.978363037109375
    10. ',' → logprob: -14.228363037109375

Token 1247: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.018210114911198616
    2. ' sorted' → logprob: -4.018209934234619
    3. '   ' → logprob: -10.768210411071777
    4. '(sorted' → logprob: -10.768210411071777
    5. 'poly' → logprob: -12.018210411071777
    6. '[' → logprob: -12.143210411071777
    7. '[(' → logprob: -13.518210411071777
    8. 'list' → logprob: -13.643210411071777
    9. '[]' → logprob: -14.643210411071777
    10. '
' → logprob: -14.893210411071777

Token 1248: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.0025489083491265774
    2. 'poly' → logprob: -6.002548694610596
    3. '(pol' → logprob: -10.127549171447754
    4. '(' → logprob: -11.252549171447754
    5. '/poly' → logprob: -11.877549171447754
    6. '_poly' → logprob: -12.377549171447754
    7. '(
' → logprob: -12.377549171447754
    8. ' poly' → logprob: -13.127549171447754
    9. '-poly' → logprob: -13.877549171447754
    10. '(p' → logprob: -13.877549171447754

Token 1249: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.175088033080101
    2. 'poly' → logprob: -2.3000879287719727
    3. '(poly' → logprob: -3.3000879287719727
    4. '_poly' → logprob: -3.8000879287719727
    5. '/poly' → logprob: -7.925087928771973
    6. '_pt' → logprob: -8.675087928771973
    7. '-poly' → logprob: -9.050087928771973
    8. ' poly' → logprob: -9.175087928771973
    9. 'token' → logprob: -9.675087928771973
    10. '=lambda' → logprob: -9.800087928771973

Token 1250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004715450922958553
    2. ',
' → logprob: -8.375471115112305
    3. ',key' → logprob: -8.750471115112305
    4. ' ,' → logprob: -10.500471115112305
    5. ',p' → logprob: -10.625471115112305
    6. '(' → logprob: -12.500471115112305
    7. '[' → logprob: -12.625471115112305
    8. ',k' → logprob: -13.250471115112305
    9. '<|end|>' → logprob: -13.250471115112305
    10. '(key' → logprob: -13.250471115112305

Token 1251: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.023428553715348244
    2. ' key' → logprob: -3.773428440093994
    3. 'lambda' → logprob: -8.648428916931152
    4. '   ' → logprob: -12.523428916931152
    5. '	key' → logprob: -14.148428916931152
    6. '       ' → logprob: -14.273428916931152
    7. '(key' → logprob: -14.273428916931152
    8. '           ' → logprob: -14.523428916931152
    9. '[key' → logprob: -14.898428916931152
    10. ' lambda' → logprob: -15.398428916931152

Token 1252: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.012582997791469097
    2. '=' → logprob: -4.387582778930664
    3. 'lambda' → logprob: -9.637582778930664
    4. '(lambda' → logprob: -12.137582778930664
    5. '=(' → logprob: -14.012582778930664
    6. '=
' → logprob: -14.137582778930664
    7. ' lambda' → logprob: -15.512582778930664
    8. '=\' → logprob: -15.762582778930664
    9. '=None' → logprob: -15.887582778930664
    10. '=True' → logprob: -16.637582778930664

Token 1253: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39377301931381226
    2. ' p' → logprob: -1.143773078918457
    3. ' lambda' → logprob: -5.518773078918457
    4. 'lambda' → logprob: -5.893773078918457
    5. ' (' → logprob: -10.643773078918457
    6. '=lambda' → logprob: -10.643773078918457
    7. '(lambda' → logprob: -10.893773078918457
    8. '   ' → logprob: -11.518773078918457
    9. '(p' → logprob: -11.643773078918457
    10. '(' → logprob: -12.518773078918457

Token 1254: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.16209806501865387
    2. ':' → logprob: -2.0370981693267822
    3. '=' → logprob: -4.037097930908203
    4. 'lambda' → logprob: -6.912097930908203
    5. ':
' → logprob: -8.412097930908203
    6. '(lambda' → logprob: -9.412097930908203
    7. '=(' → logprob: -9.912097930908203
    8. ' lambda' → logprob: -9.912097930908203
    9. ' :' → logprob: -10.537097930908203
    10. '   ' → logprob: -10.537097930908203

Token 1255: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.13898766040802
    2. '-' → logprob: -1.51398766040802
    3. ' (' → logprob: -2.2639875411987305
    4. '(' → logprob: -2.3889875411987305
    5. '-import' → logprob: -3.0139875411987305
    6. '(p' → logprob: -3.5139875411987305
    7. '(lambda' → logprob: -3.5139875411987305
    8. '-(' → logprob: -3.6389875411987305
    9. '(-' → logprob: -3.7639875411987305
    10. '-p' → logprob: -4.0139875411987305

Token 1256: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.326504111289978
    2. '-p' → logprob: -2.2015042304992676
    3. '-(' → logprob: -2.5765042304992676
    4. '(-' → logprob: -3.4515042304992676
    5. 'atan' → logprob: -4.576504230499268
    6. '(p' → logprob: -4.826504230499268
    7. '-m' → logprob: -4.951504230499268
    8. '(' → logprob: -5.076504230499268
    9. 'math' → logprob: -5.076504230499268
    10. 'import' → logprob: -5.451504230499268

Token 1257: 'atan' (ID: 8294)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -1.102944016456604
    2. '-(' → logprob: -1.602944016456604
    3. 'p' → logprob: -1.727944016456604
    4. '-' → logprob: -1.852944016456604
    5. 'atan' → logprob: -3.1029438972473145
    6. '(p' → logprob: -3.3529438972473145
    7. 'import' → logprob: -3.6029438972473145
    8. '
' → logprob: -4.8529438972473145
    9. 'math' → logprob: -5.6029438972473145
    10. '((' → logprob: -6.1029438972473145

Token 1258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010020548506872728
    2. '(math' → logprob: -10.500100135803223
    3. '(p' → logprob: -10.625100135803223
    4. 'import' → logprob: -10.750100135803223
    5. '(' → logprob: -11.875100135803223
    6. '
' → logprob: -12.000100135803223
    7. 'math' → logprob: -13.125100135803223
    8. '(
' → logprob: -13.125100135803223
    9. ' ' → logprob: -13.625100135803223
    10. '```' → logprob: -13.875100135803223

Token 1259: '((' (ID: 2054)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1101355254650116
    2. '(' → logprob: -2.860135555267334
    3. 'p' → logprob: -3.735135555267334
    4. '[' → logprob: -5.110135555267334
    5. 'import' → logprob: -5.485135555267334
    6. '(poly' → logprob: -5.735135555267334
    7. ',' → logprob: -6.610135555267334
    8. '(math' → logprob: -6.735135555267334
    9. ')' → logprob: -6.985135555267334
    10. '(-' → logprob: -7.360135555267334

Token 1260: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0057797119952738285
    2. '1' → logprob: -5.25577974319458
    3. '(p' → logprob: -8.380779266357422
    4. '(' → logprob: -8.505779266357422
    5. ' p' → logprob: -10.255779266357422
    6. '
' → logprob: -11.130779266357422
    7. '0' → logprob: -11.380779266357422
    8. ')' → logprob: -11.505779266357422
    9. '[' → logprob: -11.755779266357422
    10. 'y' → logprob: -12.130779266357422

Token 1261: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012980925384908915
    2. '-' → logprob: -7.751297950744629
    3. '1' → logprob: -8.001297950744629
    4. ')' → logprob: -9.376297950744629
    5. 'p' → logprob: -9.376297950744629
    6. ')[' → logprob: -9.501297950744629
    7. ',' → logprob: -9.751297950744629
    8. ' -' → logprob: -10.001297950744629
    9. '-p' → logprob: -10.626297950744629
    10. '
' → logprob: -10.626297950744629

Token 1262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005440961103886366
    2. 'y' → logprob: -8.000544548034668
    3. '[' → logprob: -9.500544548034668
    4. 'p' → logprob: -9.625544548034668
    5. ')' → logprob: -10.750544548034668
    6. '-' → logprob: -11.375544548034668
    7. '0' → logprob: -12.438044548034668
    8. '   ' → logprob: -12.500544548034668
    9. ' ' → logprob: -12.938044548034668
    10. '(' → logprob: -12.938044548034668

Token 1263: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39927148818969727
    2. ')-' → logprob: -1.8992714881896973
    3. ')' → logprob: -2.6492714881896973
    4. '[' → logprob: -3.1492714881896973
    5. ' -' → logprob: -4.149271488189697
    6. ')-(' → logprob: -4.524271488189697
    7. '-p' → logprob: -5.149271488189697
    8. '),' → logprob: -5.274271488189697
    9. '```' → logprob: -5.274271488189697
    10. '[p' → logprob: -5.774271488189697

Token 1264: 'cy' (ID: 4523)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08381104469299316
    2. '1' → logprob: -2.583811044692993
    3. '(p' → logprob: -7.083810806274414
    4. '-p' → logprob: -7.333810806274414
    5. '0' → logprob: -7.583810806274414
    6. 'c' → logprob: -7.833810806274414
    7. '(cx' → logprob: -7.958810806274414
    8. '-' → logprob: -8.208810806274414
    9. '(' → logprob: -8.333810806274414
    10. ' p' → logprob: -8.458810806274414

Token 1265: '),(' (ID: 54876)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.7271100282669067
    2. '),(' → logprob: -1.7271100282669067
    3. '),' → logprob: -1.9771100282669067
    4. ')-(' → logprob: -2.352109909057617
    5. ')-' → logprob: -3.102109909057617
    6. ' -' → logprob: -4.227109909057617
    7. ',' → logprob: -4.477109909057617
    8. ')' → logprob: -4.852109909057617
    9. 'import' → logprob: -5.102109909057617
    10. '-' → logprob: -5.352109909057617

Token 1266: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009517176658846438
    2. '(p' → logprob: -7.000951766967773
    3. ' p' → logprob: -10.250951766967773
    4. ' (' → logprob: -12.625951766967773
    5. ')p' → logprob: -15.000951766967773
    6. '
' → logprob: -15.125951766967773
    7. '   ' → logprob: -15.375951766967773
    8. '	p' → logprob: -15.875951766967773
    9. '[p' → logprob: -15.875951766967773
    10. '(' → logprob: -16.375951766967773

Token 1267: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.127537339925766
    2. '0' → logprob: -2.127537250518799
    3. '1' → logprob: -8.002537727355957
    4. '-' → logprob: -8.627537727355957
    5. ')' → logprob: -9.877537727355957
    6. '[
' → logprob: -11.377537727355957
    7. 'x' → logprob: -12.002537727355957
    8. ',' → logprob: -12.627537727355957
    9. ']' → logprob: -12.877537727355957
    10. ')-' → logprob: -13.127537727355957

Token 1268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029840084607712924
    2. '[' → logprob: -8.125298500061035
    3. 'x' → logprob: -13.500298500061035
    4. 'p' → logprob: -15.750298500061035
    5. '   ' → logprob: -16.00029754638672
    6. '1' → logprob: -16.12529754638672
    7. '```' → logprob: -16.50029754638672
    8. ')' → logprob: -16.62529754638672
    9. 'import' → logprob: -16.62529754638672
    10. '#' → logprob: -16.81279754638672

Token 1269: ']-' (ID: 27107)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.9240937232971191
    2. '-c' → logprob: -1.0490937232971191
    3. ']-' → logprob: -2.549093723297119
    4. '-' → logprob: -2.674093723297119
    5. ')' → logprob: -3.299093723297119
    6. '[' → logprob: -3.424093723297119
    7. ')-(' → logprob: -4.549093723297119
    8. '])-' → logprob: -4.674093723297119
    9. ' -' → logprob: -5.174093723297119
    10. '))-' → logprob: -5.924093723297119

Token 1270: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.00017112065688706934
    2. '-c' → logprob: -9.625170707702637
    3. 'cy' → logprob: -9.750170707702637
    4. '(cx' → logprob: -10.250170707702637
    5. ' cx' → logprob: -12.125170707702637
    6. '1' → logprob: -13.000170707702637
    7. '0' → logprob: -13.875170707702637
    8. '-' → logprob: -14.000170707702637
    9. '
' → logprob: -14.500170707702637
    10. 'x' → logprob: -14.625170707702637

Token 1271: ')))' (ID: 15975)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.21112336218357086
    2. ')' → logprob: -2.211123466491699
    3. '))' → logprob: -3.086123466491699
    4. ')),' → logprob: -3.836123466491699
    5. ')))' → logprob: -5.586123466491699
    6. ',' → logprob: -5.711123466491699
    7. '),
' → logprob: -5.836123466491699
    8. '))),' → logprob: -6.586123466491699
    9. ')
' → logprob: -7.211123466491699
    10. 'import' → logprob: -8.4611234664917

Token 1272: ' ))
' (ID: 43705)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07199448347091675
    2. '))' → logprob: -2.8219945430755615
    3. ',' → logprob: -5.321994304656982
    4. ' )' → logprob: -6.196994304656982
    5. 'import' → logprob: -6.696994304656982
    6. ')))' → logprob: -7.821994304656982
    7. ',)' → logprob: -8.07199478149414
    8. ' ))' → logprob: -8.19699478149414
    9. ')
' → logprob: -8.69699478149414
    10. '),' → logprob: -8.82199478149414

Token 1273: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2896491289138794
    2. '(' → logprob: -1.5396491289138794
    3. 'import' → logprob: -4.16464900970459
    4. '(
' → logprob: -4.41464900970459
    5. '.' → logprob: -5.91464900970459
    6. 'from' → logprob: -6.16464900970459
    7. '   ' → logprob: -6.91464900970459
    8. ',' → logprob: -7.03964900970459
    9. '```' → logprob: -7.41464900970459
    10. '(import' → logprob: -7.78964900970459

Token 1274: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8077282309532166
    2. 'from' → logprob: -1.1827282905578613
    3. 'import' → logprob: -2.1827282905578613
    4. '(' → logprob: -2.1827282905578613
    5. ' from' → logprob: -4.682728290557861
    6. '(
' → logprob: -4.807728290557861
    7. '       ' → logprob: -7.307728290557861
    8. '   ' → logprob: -7.432728290557861
    9. ' (' → logprob: -7.932728290557861
    10. '.' → logprob: -8.057727813720703

Token 1275: ' check' (ID: 2371)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07391409575939178
    2. 'import' → logprob: -3.073914051055908
    3. ')' → logprob: -4.073914051055908
    4. ' from' → logprob: -5.948914051055908
    5. '(
' → logprob: -6.073914051055908
    6. '(' → logprob: -6.573914051055908
    7. ')
' → logprob: -7.948914051055908
    8. 'p' → logprob: -8.323914527893066
    9. 'f' → logprob: -8.573914527893066
    10. '       ' → logprob: -9.323914527893066

Token 1276: ' convex' (ID: 142423)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.9417946934700012
    2. ' not' → logprob: -1.4417946338653564
    3. ' is' → logprob: -1.9417946338653564
    4. 'import' → logprob: -2.0667946338653564
    5. 'not' → logprob: -3.0667946338653564
    6. '(' → logprob: -3.9417946338653564
    7. ' if' → logprob: -4.9417948722839355
    8. 'from' → logprob: -4.9417948722839355
    9. 'if' → logprob: -5.0667948722839355
    10. ' (' → logprob: -5.5667948722839355

Token 1277: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7350476384162903
    2. 'from' → logprob: -1.6100475788116455
    3. '(
' → logprob: -2.1100475788116455
    4. ')' → logprob: -2.2350475788116455
    5. 'import' → logprob: -3.4850475788116455
    6. ' (' → logprob: -4.360047817230225
    7. '       ' → logprob: -4.485047817230225
    8. '   ' → logprob: -4.735047817230225
    9. ' from' → logprob: -4.735047817230225
    10. '               ' → logprob: -5.735047817230225

Token 1278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020121450070291758
    2. '                   ' → logprob: -6.752012252807617
    3. ')' → logprob: -8.252012252807617
    4. '(
' → logprob: -8.377012252807617
    5. '           ' → logprob: -9.127012252807617
    6. '                ' → logprob: -10.127012252807617
    7. '(' → logprob: -10.627012252807617
    8. '              ' → logprob: -10.627012252807617
    9. ' for' → logprob: -11.002012252807617
    10. '       ' → logprob: -11.002012252807617

Token 1279: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35415488481521606
    2. ' if' → logprob: -1.4791548252105713
    3. 'from' → logprob: -3.2291548252105713
    4. '       ' → logprob: -4.85415506362915
    5. '               ' → logprob: -5.35415506362915
    6. 'for' → logprob: -5.47915506362915
    7. ' from' → logprob: -5.60415506362915
    8. 'import' → logprob: -6.10415506362915
    9. '           ' → logprob: -6.35415506362915
    10. ' for' → logprob: -6.35415506362915

Token 1280: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.11707794666290283
    2. ' is' → logprob: -2.3670778274536133
    3. 'not' → logprob: -4.617077827453613
    4. ' not' → logprob: -4.992077827453613
    5. 'all' → logprob: -10.117077827453613
    6. ' all' → logprob: -11.242077827453613
    7. '   ' → logprob: -13.867077827453613
    8. '(is' → logprob: -14.117077827453613
    9. 'len' → logprob: -14.867077827453613
    10. '	is' → logprob: -15.242077827453613

Token 1281: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0031784253660589457
    2. ' is' → logprob: -5.753178596496582
    3. '
' → logprob: -15.003178596496582
    4. '(is' → logprob: -15.378178596496582
    5. 'import' → logprob: -16.628177642822266
    6. ')is' → logprob: -17.503177642822266
    7. '```' → logprob: -18.503177642822266
    8. ')' → logprob: -18.503177642822266
    9. ' (' → logprob: -19.003177642822266
    10. 'len' → logprob: -19.253177642822266

Token 1282: '_conv' (ID: 58653)
  Prédit: '_conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conv' → logprob: -0.0013373857364058495
    2. '(poly' → logprob: -7.25133752822876
    3. '_poly' → logprob: -8.001337051391602
    4. 'conv' → logprob: -9.001337051391602
    5. '_con' → logprob: -9.626337051391602
    6. '(conv' → logprob: -10.001337051391602
    7. '_' → logprob: -10.126337051391602
    8. '_polygon' → logprob: -12.251337051391602
    9. '(p' → logprob: -12.501337051391602
    10. '(' → logprob: -13.751337051391602

Token 1283: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -3.690834273584187e-05
    2. 'exp' → logprob: -10.37503719329834
    3. '```' → logprob: -13.25003719329834
    4. '
' → logprob: -13.50003719329834
    5. 'ext' → logprob: -13.75003719329834
    6. '(ex' → logprob: -15.37503719329834
    7. '(poly' → logprob: -15.62503719329834
    8. 'lex' → logprob: -15.87503719329834
    9. '(p' → logprob: -16.125036239624023
    10. '**' → logprob: -16.500036239624023

Token 1284: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.002020951360464096
    2. '(' → logprob: -6.377020835876465
    3. '(
' → logprob: -8.252020835876465
    4. '(pol' → logprob: -10.377020835876465
    5. ' (' → logprob: -11.377020835876465
    6. 'poly' → logprob: -11.877020835876465
    7. '(p' → logprob: -12.502020835876465
    8. '((' → logprob: -13.377020835876465
    9. '(

' → logprob: -13.752020835876465
    10. '_poly' → logprob: -15.127020835876465

Token 1285: '_pts' (ID: 111072)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.6171306371688843
    2. '_pts' → logprob: -1.3671306371688843
    3. '_poly' → logprob: -1.8671306371688843
    4. 'poly' → logprob: -3.367130756378174
    5. ')' → logprob: -5.492130756378174
    6. '(p' → logprob: -5.992130756378174
    7. '[' → logprob: -6.117130756378174
    8. '_points' → logprob: -6.242130756378174
    9. '(' → logprob: -6.742130756378174
    10. '(
' → logprob: -7.492130756378174

Token 1286: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6945364475250244
    2. '):' → logprob: -0.6945364475250244
    3. ')' → logprob: -6.944536209106445
    4. ':' → logprob: -8.569536209106445
    5. ':
' → logprob: -9.694536209106445
    6. '       ' → logprob: -9.944536209106445
    7. '           ' → logprob: -10.319536209106445
    8. '   ' → logprob: -10.569536209106445
    9. '):
' → logprob: -10.819536209106445
    10. '                   ' → logprob: -11.194536209106445

Token 1287: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6621053814888
    2. ')' → logprob: -2.0371053218841553
    3. '               ' → logprob: -2.4121053218841553
    4. '                           ' → logprob: -2.6621053218841553
    5. '                       ' → logprob: -2.7871053218841553
    6. '           ' → logprob: -2.9121053218841553
    7. '                               ' → logprob: -3.6621053218841553
    8. '```' → logprob: -4.412105560302734
    9. ':' → logprob: -4.912105560302734
    10. '):' → logprob: -5.412105560302734

Token 1288: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7515074014663696
    2. 'continue' (adapté à ' continue') → logprob: -0.7515074014663696
    3. '           ' → logprob: -3.62650728225708
    4. ' continue' → logprob: -3.87650728225708
    5. '               ' → logprob: -5.50150728225708
    6. '                       ' → logprob: -5.75150728225708
    7. '   ' → logprob: -6.87650728225708
    8. '       ' → logprob: -7.37650728225708
    9. '	continue' → logprob: -8.001507759094238
    10. '                           ' → logprob: -10.251507759094238

Token 1289: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0372731685638428
    2. ')' → logprob: -1.4122731685638428
    3. 'from' → logprob: -1.5372731685638428
    4. '                   ' → logprob: -2.4122731685638428
    5. 'import' → logprob: -3.0372731685638428
    6. '           ' → logprob: -3.9122731685638428
    7. '       ' → logprob: -4.662273406982422
    8. '                       ' → logprob: -5.287273406982422
    9. ' from' → logprob: -5.787273406982422
    10. '```' → logprob: -5.912273406982422

Token 1290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3844204246997833
    2. ')' → logprob: -1.634420394897461
    3. '                   ' → logprob: -2.759420394897461
    4. 'import' → logprob: -3.884420394897461
    5. '           ' → logprob: -4.384420394897461
    6. 'from' → logprob: -4.384420394897461
    7. '       ' → logprob: -4.884420394897461
    8. '                ' → logprob: -6.259420394897461
    9. '                       ' → logprob: -6.634420394897461
    10. '```' → logprob: -6.884420394897461

Token 1291: ' area' (ID: 3624)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17212705314159393
    2. '               ' → logprob: -2.2971270084381104
    3. 'import' → logprob: -3.1721270084381104
    4. '                   ' → logprob: -4.7971272468566895
    5. ' from' → logprob: -5.1721272468566895
    6. ')' → logprob: -7.5471272468566895
    7. '           ' → logprob: -7.6721272468566895
    8. '                       ' → logprob: -8.547126770019531
    9. '                ' → logprob: -8.922126770019531
    10. '       ' → logprob: -9.047126770019531

Token 1292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6344347596168518
    2. '=' → logprob: -0.7594347596168518
    3. '<|end|>' → logprob: -7.009434700012207
    4. ')' → logprob: -7.759434700012207
    5. '_=' → logprob: -10.009434700012207
    6. '.' → logprob: -10.134434700012207
    7. '   ' → logprob: -10.134434700012207
    8. '+=' → logprob: -10.259434700012207
    9. ' ' → logprob: -10.259434700012207
    10. ' +=' → logprob: -10.384434700012207

Token 1293: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.16023671627044678
    2. ' polygon' → logprob: -1.9102367162704468
    3. 'area' → logprob: -11.910236358642578
    4. '   ' → logprob: -13.535236358642578
    5. 'min' → logprob: -13.535236358642578
    6. '0' → logprob: -13.910236358642578
    7. '```' → logprob: -14.035236358642578
    8. '_polygon' → logprob: -14.785236358642578
    9. ' area' → logprob: -15.660236358642578
    10. 'float' → logprob: -16.035236358642578

Token 1294: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.8087270038668066e-05
    2. '(poly' → logprob: -10.750027656555176
    3. '_' → logprob: -12.375027656555176
    4. '_poly' → logprob: -14.125027656555176
    5. 'area' → logprob: -14.625027656555176
    6. '_AREA' → logprob: -15.500027656555176
    7. '_polygon' → logprob: -15.750027656555176
    8. 'poly' → logprob: -15.875027656555176
    9. '(' → logprob: -16.250028610229492
    10. '(p' → logprob: -16.250028610229492

Token 1295: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.0010737768607214093
    2. 'poly' → logprob: -7.626073837280273
    3. '(' → logprob: -7.751073837280273
    4. '(
' → logprob: -8.876073837280273
    5. '(pol' → logprob: -11.251073837280273
    6. ' poly' → logprob: -13.876073837280273
    7. '_poly' → logprob: -14.751073837280273
    8. '/poly' → logprob: -14.876073837280273
    9. '(p' → logprob: -15.126073837280273
    10. ' (' → logprob: -15.376073837280273

Token 1296: '_pts' (ID: 111072)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.11414022743701935
    2. '(poly' → logprob: -2.239140272140503
    3. '_poly' → logprob: -7.239140033721924
    4. '[' → logprob: -8.239140510559082
    5. ' poly' → logprob: -8.739140510559082
    6. '/poly' → logprob: -9.489140510559082
    7. ')' → logprob: -9.989140510559082
    8. '[
' → logprob: -11.239140510559082
    9. '.poly' → logprob: -11.739140510559082
    10. '   ' → logprob: -11.989140510559082

Token 1297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00560356117784977
    2. '(' → logprob: -6.255603790283203
    3. '())' → logprob: -6.630603790283203
    4. '()' → logprob: -7.755603790283203
    5. '<|end|>' → logprob: -7.755603790283203
    6. '(p' → logprob: -7.880603790283203
    7. '   ' → logprob: -8.630603790283203
    8. '[' → logprob: -8.755603790283203
    9. '+' → logprob: -9.380603790283203
    10. ')
' → logprob: -9.505603790283203

Token 1298: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19100871682167053
    2. ')' → logprob: -2.4410088062286377
    3. '       ' → logprob: -3.3160088062286377
    4. '           ' → logprob: -3.8160088062286377
    5. '                   ' → logprob: -4.191008567810059
    6. '```' → logprob: -4.691008567810059
    7. '                ' → logprob: -6.941008567810059
    8. ' )' → logprob: -7.941008567810059
    9. '                               ' → logprob: -7.941008567810059
    10. '   ' → logprob: -8.191008567810059

Token 1299: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024409317411482334
    2. 'if' (adapté à ' if') → logprob: -6.752440929412842
    3. '       ' → logprob: -8.37744140625
    4. '		       ' → logprob: -8.37744140625
    5. ' if' → logprob: -8.62744140625
    6. '	           ' → logprob: -8.87744140625
    7. '	' → logprob: -9.00244140625
    8. '			' → logprob: -9.12744140625
    9. '	       ' → logprob: -9.50244140625
    10. '           ' → logprob: -9.75244140625

Token 1300: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3137304484844208
    2. ' min' → logprob: -1.3137304782867432
    3. '(min' → logprob: -7.688730239868164
    4. ' (' → logprob: -11.688730239868164
    5. '(' → logprob: -13.313730239868164
    6. '[min' → logprob: -15.438730239868164
    7. '	min' → logprob: -15.813730239868164
    8. 'max' → logprob: -16.188730239868164
    9. '_min' → logprob: -17.063730239868164
    10. 'not' → logprob: -17.563730239868164

Token 1301: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -3.845798710244708e-05
    2. 'area' → logprob: -10.875038146972656
    3. '(area' → logprob: -12.125038146972656
    4. ' area' → logprob: -12.250038146972656
    5. '-area' → logprob: -13.125038146972656
    6. '```' → logprob: -13.125038146972656
    7. ' is' → logprob: -13.250038146972656
    8. 'Area' → logprob: -14.125038146972656
    9. '_' → logprob: -14.125038146972656
    10. '`' → logprob: -14.750038146972656

Token 1302: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06199143826961517
    2. 'is' → logprob: -2.8119914531707764
    3. '==' → logprob: -11.436991691589355
    4. '[' → logprob: -12.186991691589355
    5. 'or' → logprob: -13.811991691589355
    6. '=None' → logprob: -13.936991691589355
    7. '	is' → logprob: -13.936991691589355
    8. ' ==' → logprob: -14.061991691589355
    9. ' None' → logprob: -14.061991691589355
    10. ')' → logprob: -14.311991691589355

Token 1303: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196768581867218
    2. ' None' → logprob: -2.811967611312866
    3. '=None' → logprob: -17.311967849731445
    4. '_None' → logprob: -18.811967849731445
    5. '   ' → logprob: -18.936967849731445
    6. '```' → logprob: -19.061967849731445
    7. '(None' → logprob: -19.436967849731445
    8. '0' → logprob: -19.436967849731445
    9. 'N' → logprob: -19.811967849731445
    10. 'none' → logprob: -20.436967849731445

Token 1304: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004931662231683731
    2. 'or' → logprob: -5.379931449890137
    3. '	or' → logprob: -8.879931449890137
    4. '                   ' → logprob: -10.504931449890137
    5. '<|end|>' → logprob: -10.504931449890137
    6. ':' → logprob: -10.879931449890137
    7. '=' → logprob: -10.879931449890137
    8. '                       ' → logprob: -11.129931449890137
    9. '               ' → logprob: -11.254931449890137
    10. '   ' → logprob: -11.629931449890137

Token 1305: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.10020699352025986
    2. ' area' → logprob: -2.3502070903778076
    3. '(area' → logprob: -14.850207328796387
    4. 'Area' → logprob: -17.97520637512207
    5. '   ' → logprob: -18.47520637512207
    6. '```' → logprob: -18.85020637512207
    7. '`' → logprob: -19.10020637512207
    8. '_area' → logprob: -19.60020637512207
    9. 'min' → logprob: -19.85020637512207
    10. 'abs' → logprob: -19.97520637512207

Token 1306: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07287241518497467
    2. ' <' → logprob: -2.6978724002838135
    3. '[' → logprob: -6.197872638702393
    4. '<
' → logprob: -8.197872161865234
    5. '<int' → logprob: -8.822872161865234
    6. '<const' → logprob: -9.572872161865234
    7. '<float' → logprob: -9.697872161865234
    8. '<size' → logprob: -9.822872161865234
    9. '<std' → logprob: -10.072872161865234
    10. '<double' → logprob: -10.197872161865234

Token 1307: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06199222430586815
    2. ' min' → logprob: -2.8119921684265137
    3. 'area' → logprob: -10.686992645263672
    4. ' area' → logprob: -13.436992645263672
    5. 'max' → logprob: -15.936992645263672
    6. '_min' → logprob: -16.811992645263672
    7. '=min' → logprob: -17.436992645263672
    8. '(min' → logprob: -17.686992645263672
    9. '	min' → logprob: -17.936992645263672
    10. '
' → logprob: -19.311992645263672

Token 1308: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -7.290784560609609e-05
    2. '_AREA' → logprob: -10.375072479248047
    3. 'Area' → logprob: -11.375072479248047
    4. '```' → logprob: -11.500072479248047
    5. '_' → logprob: -11.625072479248047
    6. '-area' → logprob: -13.125072479248047
    7. 'area' → logprob: -13.250072479248047
    8. ' _' → logprob: -14.250072479248047
    9. ' Area' → logprob: -14.500072479248047
    10. '(area' → logprob: -14.500072479248047

Token 1309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021721677854657173
    2. ':
' → logprob: -4.271721839904785
    3. '               ' → logprob: -5.896721839904785
    4. '                       ' → logprob: -6.146721839904785
    5. '                   ' → logprob: -6.771721839904785
    6. '           ' → logprob: -7.521721839904785
    7. '                           ' → logprob: -8.396721839904785
    8. '<|end|>' → logprob: -9.021721839904785
    9. '                               ' → logprob: -9.146721839904785
    10. '):' → logprob: -9.271721839904785

Token 1310: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5533964037895203
    2. '                       ' → logprob: -1.553396463394165
    3. '               ' → logprob: -2.178396463394165
    4. '                           ' → logprob: -3.053396463394165
    5. '                               ' → logprob: -3.428396463394165
    6. '           ' → logprob: -5.303396224975586
    7. '<|end|>' → logprob: -5.803396224975586
    8. '                                           ' → logprob: -6.053396224975586
    9. '                                       ' → logprob: -6.303396224975586
    10. '                                   ' → logprob: -6.428396224975586

Token 1311: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.03685266152024269
    2. 'min' (adapté à ' min') → logprob: -3.9118525981903076
    3. '                   ' → logprob: -4.161852836608887
    4. '                       ' → logprob: -7.786852836608887
    5. '                           ' → logprob: -10.286852836608887
    6. '	min' → logprob: -10.286852836608887
    7. '[min' → logprob: -10.661852836608887
    8. '
' → logprob: -11.036852836608887
    9. '                    ' → logprob: -11.161852836608887
    10. '               ' → logprob: -11.536852836608887

Token 1312: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -4.320199877838604e-07
    2. '_angle' → logprob: -15.75
    3. '_' → logprob: -16.5
    4. '_are' → logprob: -17.0
    5. '_AREA' → logprob: -17.125
    6. 'Area' → logprob: -17.375
    7. '_code' → logprob: -17.75
    8. '_amount' → logprob: -18.0
    9. 'area' → logprob: -18.125
    10. '_age' → logprob: -18.25

Token 1313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052384985610842705
    2. ' =' → logprob: -5.2552385330200195
    3. '=
' → logprob: -13.25523853302002
    4. ',' → logprob: -14.38023853302002
    5. '=True' → logprob: -15.13023853302002
    6. '＝' → logprob: -15.13023853302002
    7. '=

' → logprob: -15.25523853302002
    8. '=n' → logprob: -15.38023853302002
    9. '=min' → logprob: -15.50523853302002
    10. '=cut' → logprob: -16.130237579345703

Token 1314: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0031777136027812958
    2. ' area' → logprob: -5.753177642822266
    3. 'Area' → logprob: -19.878177642822266
    4. '(area' → logprob: -20.378177642822266
    5. '_area' → logprob: -20.628177642822266
    6. '   ' → logprob: -21.628177642822266
    7. 'areas' → logprob: -22.253177642822266
    8. '
' → logprob: -22.503177642822266
    9. 'angle' → logprob: -22.503177642822266
    10. '```' → logprob: -22.628177642822266

Token 1315: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9795746803283691
    2. ',' → logprob: -1.6045746803283691
    3. '                   ' → logprob: -1.7295746803283691
    4. '<|end|>' → logprob: -1.9795746803283691
    5. '.' → logprob: -3.104574680328369
    6. '_' → logprob: -3.854574680328369
    7. '[' → logprob: -4.604574680328369
    8. '```' → logprob: -4.854574680328369
    9. '                    ' → logprob: -5.479574680328369
    10. '=' → logprob: -5.854574680328369

Token 1316: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08078835904598236
    2. ',' → logprob: -3.3307883739471436
    3. ')' → logprob: -4.0807881355285645
    4. '```' → logprob: -4.7057881355285645
    5. '<|end|>' → logprob: -5.3307881355285645
    6. '                    ' → logprob: -5.9557881355285645
    7. '.' → logprob: -6.3307881355285645
    8. '               ' → logprob: -6.8307881355285645
    9. '\' → logprob: -7.2057881355285645
    10. '_' → logprob: -7.2057881355285645

Token 1317: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -1.0802738870552275e-05
    2. 'poly' → logprob: -11.75001049041748
    3. 'import' → logprob: -13.87501049041748
    4. ' min' → logprob: -14.25001049041748
    5. 'from' → logprob: -14.25001049041748
    6. '                   ' → logprob: -15.12501049041748
    7. 'comb' → logprob: -16.000011444091797
    8. '```' → logprob: -17.125011444091797
    9. 'best' → logprob: -17.625011444091797
    10. '
' → logprob: -17.750011444091797

Token 1318: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -2.7729658540920354e-05
    2. '_pol' → logprob: -10.750027656555176
    3. '_p' → logprob: -12.625027656555176
    4. '_polygon' → logprob: -13.750027656555176
    5. '_' → logprob: -14.250027656555176
    6. '
' → logprob: -14.875027656555176
    7. 'poly' → logprob: -15.000027656555176
    8. '_
' → logprob: -15.500027656555176
    9. '_py' → logprob: -15.750027656555176
    10. '```' → logprob: -17.000028610229492

Token 1319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011059491895139217
    2. ' =' → logprob: -4.511059284210205
    3. '=com' → logprob: -11.511059761047363
    4. '=
' → logprob: -14.761059761047363
    5. ',' → logprob: -15.011059761047363
    6. '=list' → logprob: -15.386059761047363
    7. '=[' → logprob: -15.636059761047363
    8. '＝' → logprob: -16.511058807373047
    9. '[' → logprob: -16.886058807373047
    10. '=p' → logprob: -17.011058807373047

Token 1320: ' poly' (ID: 14600)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.040125846862793
    2. 'poly' → logprob: -1.040125846862793
    3. '[' → logprob: -1.290125846862793
    4. '[p' → logprob: -5.165125846862793
    5. '[(' → logprob: -5.540125846862793
    6. 'list' → logprob: -5.790125846862793
    7. '(com' → logprob: -5.915125846862793
    8. '[list' → logprob: -7.665125846862793
    9. ' [' → logprob: -7.915125846862793
    10. 'pol' → logprob: -8.040125846862793

Token 1321: '_pts' (ID: 111072)
  Prédit: '_pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pts' → logprob: -0.002456034068018198
    2. '[' → logprob: -6.627456188201904
    3. 'com' → logprob: -9.127455711364746
    4. 'poly' → logprob: -9.377455711364746
    5. 'nts' → logprob: -9.377455711364746
    6. '[i' → logprob: -9.502455711364746
    7. '```' → logprob: -9.627455711364746
    8. '[_' → logprob: -9.752455711364746
    9. 'Pts' → logprob: -10.002455711364746
    10. 'oly' → logprob: -10.002455711364746

Token 1322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5488960146903992
    2. ')' → logprob: -1.673896074295044
    3. '<|end|>' → logprob: -1.923896074295044
    4. '.' → logprob: -3.673896074295044
    5. ',' → logprob: -3.923896074295044
    6. 'from' → logprob: -4.673895835876465
    7. '                   ' → logprob: -4.923895835876465
    8. '           ' → logprob: -5.548895835876465
    9. 'import' → logprob: -5.548895835876465
    10. '               ' → logprob: -5.673895835876465

Token 1323: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7002189755439758
    2. '<|end|>' → logprob: -1.450218915939331
    3. ')' → logprob: -1.825218915939331
    4. '.' → logprob: -2.825218915939331
    5. ',' → logprob: -4.20021915435791
    6. '```' → logprob: -4.95021915435791
    7. '                   ' → logprob: -5.20021915435791
    8. '           ' → logprob: -5.32521915435791
    9. '               ' → logprob: -5.82521915435791
    10. '...' → logprob: -5.95021915435791

Token 1324: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.582351803779602
    2. 'from' → logprob: -1.082351803779602
    3. 'import' → logprob: -2.5823516845703125
    4. '<|end|>' → logprob: -4.4573516845703125
    5. ')' → logprob: -5.4573516845703125
    6. '           ' → logprob: -6.3323516845703125
    7. '   ' → logprob: -6.4573516845703125
    8. '.' → logprob: -6.5823516845703125
    9. ' from' → logprob: -6.8323516845703125
    10. 'continue' → logprob: -6.9573516845703125

Token 1325: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04572002589702606
    2. ' min' → logprob: -3.170720100402832
    3. 'k' → logprob: -6.420720100402832
    4. 'result' → logprob: -7.170720100402832
    5. 'False' → logprob: -9.295720100402832
    6. 'True' → logprob: -9.795720100402832
    7. ' result' → logprob: -9.795720100402832
    8. '   ' → logprob: -9.920720100402832
    9. ' k' → logprob: -10.670720100402832
    10. 'max' → logprob: -10.795720100402832

Token 1326: '_poly' (ID: 99075)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -5.490809417096898e-05
    2. '_poly' → logprob: -10.250055313110352
    3. '```' → logprob: -12.500055313110352
    4. '_result' → logprob: -12.750055313110352
    5. '_are' → logprob: -13.375055313110352
    6. 'Area' → logprob: -13.875055313110352
    7. 'elif' → logprob: -14.125055313110352
    8. '_' → logprob: -14.250055313110352
    9. ' _' → logprob: -14.250055313110352
    10. 'poly' → logprob: -14.250055313110352

Token 1327: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.013483130373060703
    2. 'is' → logprob: -4.388483047485352
    3. ':' → logprob: -7.013483047485352
    4. '!=' → logprob: -9.763483047485352
    5. ':
' → logprob: -12.013483047485352
    6. '==' → logprob: -12.763483047485352
    7. '	is' → logprob: -13.263483047485352
    8. ' !=' → logprob: -13.513483047485352
    9. '   ' → logprob: -13.763483047485352
    10. '[' → logprob: -14.138483047485352

Token 1328: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.32318374514579773
    2. 'None' → logprob: -1.3231837749481201
    3. ' not' → logprob: -4.698183536529541
    4. ' None' → logprob: -7.198183536529541
    5. '   ' → logprob: -11.9481840133667
    6. 'Not' → logprob: -12.5731840133667
    7. 'none' → logprob: -13.5731840133667
    8. '```' → logprob: -14.3231840133667
    9. '=None' → logprob: -15.5731840133667
    10. '``' → logprob: -15.5731840133667

Token 1329: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.527042806148529
    2. ':' → logprob: -0.902042806148529
    3. '               ' → logprob: -6.277042865753174
    4. '       ' → logprob: -6.902042865753174
    5. '           ' → logprob: -8.027042388916016
    6. ' and' → logprob: -9.152042388916016
    7. 'continue' → logprob: -9.277042388916016
    8. ' or' → logprob: -9.527042388916016
    9. '```' → logprob: -9.652042388916016
    10. '=' → logprob: -9.777042388916016

Token 1330: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023449750617146492
    2. 'continue' → logprob: -4.523449897766113
    3. '           ' → logprob: -5.523449897766113
    4. '       ' → logprob: -5.523449897766113
    5. ' continue' → logprob: -6.023449897766113
    6. '
' → logprob: -7.148449897766113
    7. '```' → logprob: -7.648449897766113
    8. '                   ' → logprob: -8.523449897766113
    9. '   ' → logprob: -9.023449897766113
    10. ':
' → logprob: -9.273449897766113

Token 1331: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3262360692024231
    2. ' result' → logprob: -1.3262360095977783
    3. '               ' → logprob: -5.576236248016357
    4. 'print' → logprob: -5.701236248016357
    5. '   ' → logprob: -6.701236248016357
    6. 'continue' → logprob: -6.951236248016357
    7. '           ' → logprob: -7.201236248016357
    8. ' print' → logprob: -7.576236248016357
    9. ' continue' → logprob: -7.701236248016357
    10. 'for' → logprob: -7.826236248016357

Token 1332: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -2.4153549020411447e-05
    2. 's' → logprob: -11.50002384185791
    3. '_code' → logprob: -12.37502384185791
    4. '```' → logprob: -13.25002384185791
    5. '[k' → logprob: -13.50002384185791
    6. '_' → logprob: -13.62502384185791
    7. '=_' → logprob: -14.25002384185791
    8. 'Cache' → logprob: -14.25002384185791
    9. '\' → logprob: -14.62502384185791
    10. '[_' → logprob: -14.87502384185791

Token 1333: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0004975094925612211
    2. '[' → logprob: -7.625497341156006
    3. ' =' → logprob: -13.125497817993164
    4. '=k' → logprob: -13.375497817993164
    5. '```' → logprob: -13.375497817993164
    6. '=' → logprob: -13.500497817993164
    7. '\[' → logprob: -13.875497817993164
    8. '[key' → logprob: -14.500497817993164
    9. ' [' → logprob: -14.625497817993164
    10. '
' → logprob: -15.250497817993164

Token 1334: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06007641181349754
    2. ' =' → logprob: -3.1850764751434326
    3. ']=' → logprob: -4.9350762367248535
    4. ']' → logprob: -4.9350762367248535
    5. '=None' → logprob: -6.5600762367248535
    6. '=
' → logprob: -7.0600762367248535
    7. '[' → logprob: -9.810076713562012
    8. '|=
' → logprob: -10.060076713562012
    9. '=k' → logprob: -10.435076713562012
    10. ')' → logprob: -10.435076713562012

Token 1335: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002908296650275588
    2. '[]' → logprob: -6.002908229827881
    3. 'min' → logprob: -8.752908706665039
    4. 'False' → logprob: -9.127908706665039
    5. '-' → logprob: -9.627908706665039
    6. ' None' → logprob: -10.127908706665039
    7. '0' → logprob: -11.377908706665039
    8. 'poly' → logprob: -11.752908706665039
    9. '(None' → logprob: -11.877908706665039
    10. '"' → logprob: -11.877908706665039

Token 1336: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8309863805770874
    2. '           ' → logprob: -1.0809863805770874
    3. '               ' → logprob: -2.455986499786377
    4. '       ' → logprob: -2.955986499786377
    5. 'else' → logprob: -3.455986499786377
    6. ' continue' → logprob: -4.080986499786377
    7. '<|end|>' → logprob: -4.705986499786377
    8. '	continue' → logprob: -4.955986499786377
    9. '                   ' → logprob: -4.955986499786377
    10. '```' → logprob: -5.080986499786377

Token 1337: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6977590918540955
    2. '           ' → logprob: -0.6977590918540955
    3. '               ' → logprob: -5.82275915145874
    4. 'continue' → logprob: -7.19775915145874
    5. 'else' → logprob: -7.32275915145874
    6. '                   ' → logprob: -8.947758674621582
    7. '   ' → logprob: -9.322758674621582
    8. ' continue' → logprob: -12.572758674621582
    9. ' else' → logprob: -12.822758674621582
    10. '```' → logprob: -13.072758674621582

Token 1338: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2093813568353653
    2. '           ' → logprob: -2.209381341934204
    3. 'else' (adapté à ' else') → logprob: -2.584381341934204
    4. 'continue' → logprob: -5.834381580352783
    5. ' else' → logprob: -7.959381580352783
    6. '   ' → logprob: -8.084381103515625
    7. ' continue' → logprob: -10.209381103515625
    8. '               ' → logprob: -10.334381103515625
    9. '```' → logprob: -10.709381103515625
    10. '	continue' → logprob: -12.084381103515625

Token 1339: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002055927412584424
    2. ':
' → logprob: -6.377056121826172
    3. ':' → logprob: -8.627056121826172
    4. '           ' → logprob: -10.377056121826172
    5. '                       ' → logprob: -10.377056121826172
    6. '                   ' → logprob: -10.627056121826172
    7. '```' → logprob: -10.877056121826172
    8. ',' → logprob: -11.252056121826172
    9. ' result' → logprob: -11.252056121826172
    10. 'result' → logprob: -11.252056121826172

Token 1340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004311784170567989
    2. 'result' → logprob: -6.379311561584473
    3. '                   ' → logprob: -6.504311561584473
    4. ' result' → logprob: -7.754311561584473
    5. '           ' → logprob: -8.254311561584473
    6. '       ' → logprob: -9.004311561584473
    7. '```' → logprob: -9.004311561584473
    8. '   ' → logprob: -9.129311561584473
    9. '                       ' → logprob: -10.004311561584473
    10. '	           ' → logprob: -12.879311561584473

Token 1341: ' #' (ID: 1069)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3133009076118469
    2. 'result' → logprob: -1.3133008480072021
    3. '```' → logprob: -10.813301086425781
    4. '               ' → logprob: -12.063301086425781
    5. '                   ' → logprob: -12.313301086425781
    6. '``' → logprob: -13.313301086425781
    7. 'idx' → logprob: -13.563301086425781
    8. ' point' → logprob: -13.813301086425781
    9. 'import' → logprob: -14.188301086425781
    10. ' k' → logprob: -14.188301086425781

Token 1342: ' find' (ID: 1646)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018517224118113518
    2. 'idx' → logprob: -4.518517017364502
    3. '#' → logprob: -5.518517017364502
    4. 'indices' → logprob: -6.143517017364502
    5. ' result' → logprob: -7.643517017364502
    6. '               ' → logprob: -8.01851749420166
    7. 'indexes' → logprob: -9.39351749420166
    8. 'index' → logprob: -10.14351749420166
    9. 'res' → logprob: -10.14351749420166
    10. ' #' → logprob: -10.26851749420166

Token 1343: ' input' (ID: 3422)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.45874518156051636
    2. 'indices' → logprob: -1.7087452411651611
    3. ' min' → logprob: -2.458745241165161
    4. 'idx' → logprob: -3.208745241165161
    5. ' indices' → logprob: -3.583745241165161
    6. ' idx' → logprob: -4.458745002746582
    7. 'result' → logprob: -5.208745002746582
    8. 'indexes' → logprob: -5.208745002746582
    9. 'index' → logprob: -6.208745002746582
    10. '_indices' → logprob: -6.458745002746582

Token 1344: ' indices' (ID: 30378)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.3163814544677734
    2. '_points' → logprob: -1.6913814544677734
    3. '_poly' → logprob: -1.8163814544677734
    4. '_indices' → logprob: -2.1913814544677734
    5. '_' → logprob: -2.8163814544677734
    6. '_pts' → logprob: -2.9413814544677734
    7. '_idxs' → logprob: -3.4413814544677734
    8. '_index' → logprob: -3.6913814544677734
    9. '_point' → logprob: -3.8163814544677734
    10. '_indexes' → logprob: -3.9413814544677734

Token 1345: ' of' (ID: 328)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6270594596862793
    2. 'indices' → logprob: -2.0020594596862793
    3. 'idx' → logprob: -2.1270594596862793
    4. 'input' → logprob: -2.7520594596862793
    5. 'min' → logprob: -3.2520594596862793
    6. 'ind' → logprob: -4.252059459686279
    7. 'res' → logprob: -4.377059459686279
    8. '```' → logprob: -4.502059459686279
    9. '
' → logprob: -4.752059459686279
    10. 'inp' → logprob: -5.002059459686279

Token 1346: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03520241379737854
    2. '[min' → logprob: -3.4102025032043457
    3. 'p' → logprob: -7.535202503204346
    4. '[p' → logprob: -7.910202503204346
    5. '[' → logprob: -8.785202026367188
    6. '
' → logprob: -9.285202026367188
    7. 'poly' → logprob: -9.285202026367188
    8. 'points' → logprob: -9.535202026367188
    9. 'point' → logprob: -9.785202026367188
    10. ' min' → logprob: -10.035202026367188

Token 1347: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.0005593468667939305
    2. 'poly' → logprob: -7.500559329986572
    3. '_polygon' → logprob: -12.75055980682373
    4. '_pol' → logprob: -13.75055980682373
    5. '_area' → logprob: -14.50055980682373
    6. 'Poly' → logprob: -14.75055980682373
    7. '```' → logprob: -15.00055980682373
    8. 'oly' → logprob: -15.00055980682373
    9. '_points' → logprob: -15.75055980682373
    10. '_pts' → logprob: -15.87555980682373

Token 1348: ' points' (ID: 5571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.000883936882019
    2. 'indices' → logprob: -1.625883936882019
    3. '
' → logprob: -2.2508840560913086
    4. '               ' → logprob: -2.3758840560913086
    5. '                   ' → logprob: -2.7508840560913086
    6. 'idx' → logprob: -3.3758840560913086
    7. '```' → logprob: -3.3758840560913086
    8. '_indices' → logprob: -3.7508840560913086
    9. 'result' → logprob: -4.375884056091309
    10. ' indices' → logprob: -4.625884056091309

Token 1349: ' preserving' (ID: 74564)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.203752338886261
    2. '
' → logprob: -2.703752279281616
    3. ' result' → logprob: -3.328752279281616
    4. 'idx' → logprob: -4.328752517700195
    5. 'min' → logprob: -4.453752517700195
    6. '[min' → logprob: -4.578752517700195
    7. '```' → logprob: -4.578752517700195
    8. ' =' → logprob: -5.078752517700195
    9. 'indices' → logprob: -5.578752517700195
    10. '                   ' → logprob: -5.828752517700195

Token 1350: ' order' (ID: 2569)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9741370677947998
    2. ' order' → logprob: -2.0991370677948
    3. '[
' → logprob: -2.8491370677948
    4. ' their' → logprob: -2.8491370677948
    5. ' original' → logprob: -3.0991370677948
    6. ' [' → logprob: -3.2241370677948
    7. 'their' → logprob: -3.5991370677948
    8. 'order' → logprob: -3.7241370677948
    9. 'the' → logprob: -3.8491370677948
    10. 'min' → logprob: -3.8491370677948

Token 1351: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06986740231513977
    2. 'min' → logprob: -4.4448676109313965
    3. ' result' → logprob: -4.4448676109313965
    4. '[min' → logprob: -4.6948676109313965
    5. 'idx' → logprob: -5.0698676109313965
    6. '
' → logprob: -5.1948676109313965
    7. '```' → logprob: -5.1948676109313965
    8. 'indices' → logprob: -5.6948676109313965
    9. '               ' → logprob: -5.8198676109313965
    10. '                   ' → logprob: -6.8198676109313965

Token 1352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16296806931495667
    2. 'result' → logprob: -2.537968158721924
    3. 'indices' → logprob: -3.162968158721924
    4. '
' → logprob: -4.912968158721924
    5. '                   ' → logprob: -5.162968158721924
    6. ' result' → logprob: -5.287968158721924
    7. ' indices' → logprob: -6.162968158721924
    8. 'idx' → logprob: -6.412968158721924
    9. '                
' → logprob: -6.662968158721924
    10. '           ' → logprob: -6.787968158721924

Token 1353: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15744833648204803
    2. 'indices' → logprob: -2.5324482917785645
    3. 'idx' → logprob: -3.6574482917785645
    4. 'res' → logprob: -3.7824482917785645
    5. 'inds' → logprob: -4.6574482917785645
    6. 'input' → logprob: -6.2824482917785645
    7. 'min' → logprob: -6.5324482917785645
    8. 'orig' → logprob: -7.1574482917785645
    9. 'ans' → logprob: -7.2824482917785645
    10. 'indexes' → logprob: -7.5324482917785645

Token 1354: ' min' (ID: 1349)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6292470693588257
    2. 'indices' → logprob: -1.3792470693588257
    3. 'res' → logprob: -2.6292471885681152
    4. 'idx' → logprob: -3.0042471885681152
    5. 'min' → logprob: -3.1292471885681152
    6. 'inds' → logprob: -4.004247188568115
    7. 'input' → logprob: -4.129247188568115
    8. 'ans' → logprob: -5.754247188568115
    9. 'answer' → logprob: -6.754247188568115
    10. ' result' → logprob: -6.879247188568115

Token 1355: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.11869747191667557
    2. '_idx' → logprob: -2.49369740486145
    3. '_area' → logprob: -3.99369740486145
    4. '_indices' → logprob: -5.368697643280029
    5. 'poly' → logprob: -6.118697643280029
    6. '_idxs' → logprob: -6.618697643280029
    7. '_index' → logprob: -7.368697643280029
    8. 'idx' → logprob: -7.743697643280029
    9. '_pts' → logprob: -7.993697643280029
    10. '_points' → logprob: -8.493697166442871

Token 1356: ' points' (ID: 5571)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.7837225794792175
    2. '_idxs' → logprob: -0.7837225794792175
    3. '_idx' → logprob: -2.6587226390838623
    4. ' =' → logprob: -5.033722400665283
    5. '_indexes' → logprob: -5.908722400665283
    6. '=' → logprob: -6.533722400665283
    7. '_pts' → logprob: -6.533722400665283
    8. 'idx' → logprob: -6.658722400665283
    9. '_points' → logprob: -6.783722400665283
    10. '_ids' → logprob: -7.033722400665283

Token 1357: ' are' (ID: 553)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.8341730833053589
    2. '_idxs' → logprob: -0.9591730833053589
    3. '_idx' → logprob: -2.2091732025146484
    4. ' =' → logprob: -3.4591732025146484
    5. 'indices' → logprob: -4.209173202514648
    6. 'idx' → logprob: -4.959173202514648
    7. '=' → logprob: -4.959173202514648
    8. '_indexes' → logprob: -4.959173202514648
    9. '_ids' → logprob: -6.334173202514648
    10. '_inds' → logprob: -7.334173202514648

Token 1358: ' coordinates' (ID: 27933)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.8850747346878052
    2. '[' → logprob: -1.3850747346878052
    3. '[(' → logprob: -2.0100746154785156
    4. '[]
' → logprob: -2.2600746154785156
    5. '[]' → logprob: -2.5100746154785156
    6. '[
' → logprob: -4.635074615478516
    7. 'sorted' → logprob: -6.135074615478516
    8. '[min' → logprob: -6.135074615478516
    9. '[:]' → logprob: -6.885074615478516
    10. 'tuple' → logprob: -6.885074615478516

Token 1359: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2549018859863281
    2. '
' → logprob: -2.004901885986328
    3. 'indices' → logprob: -3.254901885986328
    4. 'idx' → logprob: -4.504901885986328
    5. '                   ' → logprob: -4.754901885986328
    6. '                
' → logprob: -5.379901885986328
    7. '```' → logprob: -5.379901885986328
    8. ' indices' → logprob: -5.504901885986328
    9. ',' → logprob: -6.004901885986328
    10. '\n' → logprob: -6.379901885986328

Token 1360: ' map' (ID: 4014)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.37106654047966003
    2. 'result' → logprob: -1.6210665702819824
    3. 'indices' → logprob: -3.4960665702819824
    4. 'res' → logprob: -3.6210665702819824
    5. ' min' → logprob: -3.7460665702819824
    6. 'idx' → logprob: -4.871066570281982
    7. '               ' → logprob: -5.496066570281982
    8. 'ans' → logprob: -5.496066570281982
    9. 'input' → logprob: -6.121066570281982
    10. 'answer' → logprob: -6.746066570281982

Token 1361: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -1.801687479019165
    2. ' =' → logprob: -2.051687479019165
    3. 'to' → logprob: -2.301687479019165
    4. ' to' → logprob: -2.301687479019165
    5. 'p' → logprob: -2.801687479019165
    6. 'back' → logprob: -2.801687479019165
    7. 'point' → logprob: -2.926687479019165
    8. '_to' → logprob: -3.176687479019165
    9. '=' → logprob: -3.426687479019165
    10. ' p' → logprob: -3.551687479019165

Token 1362: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.809288740158081
    2. ' =' → logprob: -2.059288740158081
    3. '[' → logprob: -2.684288740158081
    4. 'result' → logprob: -2.934288740158081
    5. 'indices' → logprob: -2.934288740158081
    6. '{
' → logprob: -3.059288740158081
    7. '{' → logprob: -3.184288740158081
    8. 'point' → logprob: -3.184288740158081
    9. '(
' → logprob: -3.559288740158081
    10. ' to' → logprob: -3.684288740158081

Token 1363: ' input' (ID: 3422)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.23231761157512665
    2. 'points' → logprob: -1.857317566871643
    3. 'index' → logprob: -3.8573176860809326
    4. 'idx' → logprob: -4.3573174476623535
    5. 'indices' → logprob: -4.9823174476623535
    6. 'p' → logprob: -5.6073174476623535
    7. 'tuple' → logprob: -6.4823174476623535
    8. 'set' → logprob: -6.7323174476623535
    9. 'indexes' → logprob: -6.8573174476623535
    10. ' points' → logprob: -7.8573174476623535

Token 1364: ' index' (ID: 3472)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8265476226806641
    2. '_indices' → logprob: -0.8265476226806641
    3. '_points' → logprob: -3.076547622680664
    4. '_pts' → logprob: -3.951547622680664
    5. 'points' → logprob: -4.826547622680664
    6. '_idxs' → logprob: -5.201547622680664
    7. '_index' → logprob: -5.326547622680664
    8. '_idx' → logprob: -5.326547622680664
    9. '_p' → logprob: -5.451547622680664
    10. 'index' → logprob: -6.201547622680664

Token 1365: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8607176542282104
    2. 'result' → logprob: -1.7357176542282104
    3. 'indices' → logprob: -1.7357176542282104
    4. '
' → logprob: -2.3607177734375
    5. 'input' → logprob: -3.4857177734375
    6. 'idx' → logprob: -3.4857177734375
    7. '                
' → logprob: -4.6107177734375
    8. '```' → logprob: -4.7357177734375
    9. ' indices' → logprob: -4.9857177734375
    10. ' result' → logprob: -5.1107177734375

Token 1366: ' matching' (ID: 20238)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.030233819037675858
    2. 'idx' → logprob: -4.155233860015869
    3. 'for' → logprob: -5.030233860015869
    4. 'result' → logprob: -6.030233860015869
    5. 'min' → logprob: -6.530233860015869
    6. 'points' → logprob: -6.655233860015869
    7. 'lambda' → logprob: -7.530233860015869
    8. '
' → logprob: -8.155233383178711
    9. '[' → logprob: -8.405233383178711
    10. 'index' → logprob: -8.530233383178711

Token 1367: ' in' (ID: 306)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.78387051820755
    2. '[]
' → logprob: -1.6588704586029053
    3. 'idx' → logprob: -2.6588704586029053
    4. 'indices' → logprob: -2.9088704586029053
    5. 'res' → logprob: -3.2838704586029053
    6. '
' → logprob: -3.7838704586029053
    7. 'answer' → logprob: -3.7838704586029053
    8. '[]' → logprob: -3.9088704586029053
    9. 'ans' → logprob: -4.533870697021484
    10. 'min' → logprob: -4.658870697021484

Token 1368: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.009480987675487995
    2. 'pts' → logprob: -4.759480953216553
    3. ' points' → logprob: -8.384481430053711
    4. 'result' → logprob: -8.634481430053711
    5. 'poly' → logprob: -8.634481430053711
    6. 'point' → logprob: -9.259481430053711
    7. '```' → logprob: -9.759481430053711
    8. 'for' → logprob: -10.134481430053711
    9. 'min' → logprob: -11.134481430053711
    10. 'h' → logprob: -11.134481430053711

Token 1369: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42856234312057495
    2. '               ' → logprob: -1.5535624027252197
    3. '```' → logprob: -3.6785624027252197
    4. '                   ' → logprob: -4.303562164306641
    5. '[]
' → logprob: -4.553562164306641
    6. 'result' → logprob: -4.803562164306641
    7. '           ' → logprob: -5.053562164306641
    8. '[' → logprob: -5.178562164306641
    9. 'indices' → logprob: -5.303562164306641
    10. ',' → logprob: -5.428562164306641

Token 1370: 'unique' (ID: 22365)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0083521604537964
    2. 'for' → logprob: -1.5083521604537964
    3. '
' → logprob: -2.508352279663086
    4. ')' → logprob: -2.633352279663086
    5. 'min' → logprob: -3.133352279663086
    6. '                   ' → logprob: -3.133352279663086
    7. '               ' → logprob: -3.508352279663086
    8. ' for' → logprob: -3.883352279663086
    9. 'idx' → logprob: -4.133352279663086
    10. 'poly' → logprob: -4.133352279663086

Token 1371: ' points' (ID: 5571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26476946473121643
    2. ')
' → logprob: -3.3897695541381836
    3. '_points' → logprob: -3.3897695541381836
    4. 'index' → logprob: -3.5147695541381836
    5. '```' → logprob: -4.014769554138184
    6. '):
' → logprob: -4.139769554138184
    7. '
' → logprob: -4.139769554138184
    8. 'points' → logprob: -4.264769554138184
    9. 'for' → logprob: -5.014769554138184
    10. ' and' → logprob: -5.014769554138184

Token 1372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07296594977378845
    2. ')
' → logprob: -3.0729658603668213
    3. '):
' → logprob: -4.3229660987854
    4. '):' → logprob: -5.6979660987854
    5. '                   ' → logprob: -6.5729660987854
    6. ',' → logprob: -7.3229660987854
    7. '   ' → logprob: -7.4479660987854
    8. '               ' → logprob: -7.5729660987854
    9. '```' → logprob: -7.5729660987854
    10. '
' → logprob: -7.9479660987854

Token 1373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2115974426269531
    2. '```' → logprob: -1.5865974426269531
    3. '[
' → logprob: -2.336597442626953
    4. '
' → logprob: -2.461597442626953
    5. '                   ' → logprob: -2.586597442626953
    6. '[' → logprob: -2.711597442626953
    7. '[:]' → logprob: -3.836597442626953
    8. ',' → logprob: -3.961597442626953
    9. '`' → logprob: -4.586597442626953
    10. '\n' → logprob: -4.711597442626953

Token 1374: ' idx' (ID: 14016)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8969717025756836
    2. 'res' → logprob: -1.6469717025756836
    3. 'indices' → logprob: -1.7719717025756836
    4. ' res' → logprob: -3.0219717025756836
    5. '
' → logprob: -3.2719717025756836
    6. 'ans' → logprob: -3.7719717025756836
    7. 'answer' → logprob: -3.7719717025756836
    8. 'idx' (adapté à ' idx') → logprob: -3.8969717025756836
    9. ' result' → logprob: -4.021971702575684
    10. 'inds' → logprob: -4.396971702575684

Token 1375: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35988155007362366
    2. '_map' → logprob: -1.7348815202713013
    3. '_list' → logprob: -2.609881639480591
    4. ' =' → logprob: -3.234881639480591
    5. '=' → logprob: -4.734881401062012
    6. 'list' → logprob: -6.734881401062012
    7. '_seq' → logprob: -7.484881401062012
    8. '_indices' → logprob: -7.859881401062012
    9. '_line' → logprob: -8.484881401062012
    10. '=[]' → logprob: -8.734881401062012

Token 1376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.045766815543174744
    2. ' =' → logprob: -3.170766830444336
    3. '=[]' → logprob: -6.045766830444336
    4. '=[' → logprob: -8.045766830444336
    5. '=[]
' → logprob: -10.170766830444336
    6. '=
' → logprob: -11.045766830444336
    7. '[:]' → logprob: -12.170766830444336
    8. '=[
' → logprob: -12.295766830444336
    9. '   ' → logprob: -12.420766830444336
    10. ' =[' → logprob: -13.045766830444336

Token 1377: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1306038349866867
    2. '[]' → logprob: -2.630603790283203
    3. '[]
' → logprob: -3.380603790283203
    4. '[p' → logprob: -4.505603790283203
    5. '[list' → logprob: -5.755603790283203
    6. '[len' → logprob: -8.380603790283203
    7. '[
' → logprob: -8.505603790283203
    8. '[result' → logprob: -8.755603790283203
    9. '[array' → logprob: -8.755603790283203
    10. '[k' → logprob: -9.255603790283203

Token 1378: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.002497417852282524
    2. 'points' → logprob: -6.25249719619751
    3. ' point' → logprob: -7.62749719619751
    4. 'pts' → logprob: -9.627497673034668
    5. '   ' → logprob: -11.877497673034668
    6. '       ' → logprob: -13.752497673034668
    7. '[' → logprob: -13.877497673034668
    8. 'idx' → logprob: -13.877497673034668
    9. '(point' → logprob: -14.127497673034668
    10. ' pts' → logprob: -14.127497673034668

Token 1379: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0016675653168931603
    2. '_map' → logprob: -8.001667976379395
    3. 'to' → logprob: -8.126667976379395
    4. '_pts' → logprob: -8.126667976379395
    5. 'point' → logprob: -9.001667976379395
    6. 'index' → logprob: -9.626667976379395
    7. '[' → logprob: -9.626667976379395
    8. 'user' → logprob: -9.751667976379395
    9. 'points' → logprob: -9.751667976379395
    10. '.index' → logprob: -10.251667976379395

Token 1380: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.47444310784339905
    2. 'index' → logprob: -0.9744430780410767
    3. 'point' → logprob: -9.349443435668945
    4. 'set' → logprob: -9.974443435668945
    5. 'min' → logprob: -9.974443435668945
    6. 'poly' → logprob: -10.349443435668945
    7. '
' → logprob: -10.599443435668945
    8. 'sys' → logprob: -10.724443435668945
    9. '{' → logprob: -11.349443435668945
    10. 'input' → logprob: -11.474443435668945

Token 1381: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.16372273862361908
    2. '(p' → logprob: -1.9137227535247803
    3. '[min' → logprob: -6.538722515106201
    4. '[(' → logprob: -7.288722515106201
    5. '[' → logprob: -7.413722515106201
    6. 'p' → logprob: -7.538722515106201
    7. '[
' → logprob: -10.28872299194336
    8. '(pt' → logprob: -10.66372299194336
    9. 'min' → logprob: -10.91372299194336
    10. '[i' → logprob: -10.91372299194336

Token 1382: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21448363363742828
    2. ' for' → logprob: -2.0894837379455566
    3. '[p' → logprob: -2.8394837379455566
    4. ']' → logprob: -4.964483737945557
    5. '(p' → logprob: -6.589483737945557
    6. '[' → logprob: -6.589483737945557
    7. '.index' → logprob: -8.089483261108398
    8. '   ' → logprob: -8.089483261108398
    9. ')' → logprob: -8.339483261108398
    10. 'p' → logprob: -9.589483261108398

Token 1383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3310658633708954
    2. ' for' → logprob: -1.4560658931732178
    3. '[p' → logprob: -3.8310658931732178
    4. '.index' → logprob: -3.9560658931732178
    5. '[' → logprob: -5.081065654754639
    6. '                   ' → logprob: -7.956065654754639
    7. '               ' → logprob: -8.331066131591797
    8. ']' → logprob: -8.456066131591797
    9. 'index' → logprob: -8.831066131591797
    10. '[
' → logprob: -9.081066131591797

Token 1384: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012092802207916975
    2. 'min' → logprob: -7.251209259033203
    3. 'poly' → logprob: -7.626209259033203
    4. ' p' → logprob: -12.376209259033203
    5. '[min' → logprob: -13.126209259033203
    6. '[p' → logprob: -13.876209259033203
    7. 'pol' → logprob: -14.001209259033203
    8. '_poly' → logprob: -14.251209259033203
    9. '(min' → logprob: -14.876209259033203
    10. '	p' → logprob: -14.876209259033203

Token 1385: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.700132997939363e-05
    2. ' p' → logprob: -11.000017166137695
    3. 'in' → logprob: -16.000017166137695
    4. 'poly' → logprob: -16.625017166137695
    5. ' in' → logprob: -17.750017166137695
    6. '	p' → logprob: -17.750017166137695
    7. '
' → logprob: -18.750017166137695
    8. ' ' → logprob: -18.875017166137695
    9. '[' → logprob: -19.250017166137695
    10. 'pol' → logprob: -19.625017166137695

Token 1386: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.8624639324116288e-06
    2. 'poly' → logprob: -13.750001907348633
    3. '[min' → logprob: -15.000001907348633
    4. ' min' → logprob: -15.375001907348633
    5. '
' → logprob: -16.000001907348633
    6. '(min' → logprob: -17.000001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '	min' → logprob: -19.750001907348633
    9. 'pol' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.625001907348633

Token 1387: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.00012999906903132796
    2. 'poly' → logprob: -9.125129699707031
    3. '_pol' → logprob: -11.750129699707031
    4. '_polygon' → logprob: -12.750129699707031
    5. 'oly' → logprob: -12.875129699707031
    6. '(poly' → logprob: -13.250129699707031
    7. '-poly' → logprob: -13.250129699707031
    8. '
' → logprob: -13.750129699707031
    9. '\' → logprob: -14.750129699707031
    10. 'Poly' → logprob: -14.750129699707031

Token 1388: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19672933220863342
    2. ']
' → logprob: -1.821729302406311
    3. '               ' → logprob: -4.1967291831970215
    4. '                   ' → logprob: -7.3217291831970215
    5. '           ' → logprob: -7.4467291831970215
    6. ' ]' → logprob: -8.82172966003418
    7. ']
' → logprob: -9.32172966003418
    8. ']+' → logprob: -9.94672966003418
    9. '   ' → logprob: -10.44672966003418
    10. ' ]
' → logprob: -10.69672966003418

Token 1389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30882468819618225
    2. '```' → logprob: -2.3088247776031494
    3. '                   ' → logprob: -3.1838247776031494
    4. '           ' → logprob: -3.1838247776031494
    5. '<|end|>' → logprob: -3.4338247776031494
    6. '
' → logprob: -3.4338247776031494
    7. '       ' → logprob: -4.43382453918457
    8. '   ' → logprob: -6.43382453918457
    9. '``' → logprob: -6.93382453918457
    10. ')' → logprob: -7.43382453918457

Token 1390: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22873806953430176
    2. ' result' → logprob: -1.7287380695343018
    3. '               ' → logprob: -3.8537380695343018
    4. '
' → logprob: -5.728737831115723
    5. 'idx' → logprob: -6.853737831115723
    6. '       ' → logprob: -7.728737831115723
    7. '```' → logprob: -7.978737831115723
    8. '   ' → logprob: -8.603737831115723
    9. ' idx' → logprob: -8.728737831115723
    10. '           ' → logprob: -9.353737831115723

Token 1391: ' need' (ID: 1309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.016010669991374016
    2. '               ' → logprob: -4.266010761260986
    3. 'idx' → logprob: -6.641010761260986
    4. 'import' → logprob: -8.516010284423828
    5. '#' → logprob: -9.766010284423828
    6. 'for' → logprob: -10.016010284423828
    7. 'if' → logprob: -10.266010284423828
    8. '       ' → logprob: -10.391010284423828
    9. ' result' → logprob: -10.516010284423828
    10. '```' → logprob: -10.516010284423828

Token 1392: ' order' (ID: 2569)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.33726248145103455
    2. ' to' → logprob: -1.962262511253357
    3. 'idx' → logprob: -2.0872623920440674
    4. 'indices' → logprob: -5.0872626304626465
    5. '_idxs' → logprob: -6.0872626304626465
    6. 'sorted' → logprob: -6.2122626304626465
    7. '
' → logprob: -6.3372626304626465
    8. 'result' → logprob: -6.3372626304626465
    9. ' idx' → logprob: -6.4622626304626465
    10. 'for' → logprob: -6.4622626304626465

Token 1393: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5058426260948181
    2. 'idx' → logprob: -1.880842685699463
    3. '               ' → logprob: -2.505842685699463
    4. '```' → logprob: -2.880842685699463
    5. '<|end|>' → logprob: -4.005842685699463
    6. '[::-' → logprob: -4.005842685699463
    7. ' =' → logprob: -4.130842685699463
    8. ' idx' → logprob: -4.630842685699463
    9. ',' → logprob: -4.755842685699463
    10. '<|end|>' → logprob: -5.005842685699463

Token 1394: ' lowest' (ID: 23120)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7111824750900269
    2. 'respect' → logprob: -2.3361825942993164
    3. 'sorted' → logprob: -2.4611825942993164
    4. ' idx' → logprob: -2.7111825942993164
    5. '[idx' → logprob: -2.9611825942993164
    6. 'points' → logprob: -3.4611825942993164
    7. 'the' → logprob: -3.7111825942993164
    8. ' respect' → logprob: -3.8361825942993164
    9. 'p' → logprob: -3.9611825942993164
    10. 'point' → logprob: -4.461182594299316

Token 1395: ' lowest' (ID: 23120)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2761930823326111
    2. 'idx' → logprob: -1.9011931419372559
    3. 'p' → logprob: -3.276193141937256
    4. '_idx' → logprob: -3.526193141937256
    5. '_x' → logprob: -5.151193141937256
    6. '_p' → logprob: -5.901193141937256
    7. 'y' → logprob: -6.151193141937256
    8. 'import' → logprob: -6.401193141937256
    9. ' p' → logprob: -6.401193141937256
    10. ' x' → logprob: -6.401193141937256

Token 1396: '-left' (ID: 17007)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1366298943758011
    2. 'p' → logprob: -3.886629819869995
    3. '_left' → logprob: -3.886629819869995
    4. 'y' → logprob: -4.011630058288574
    5. 'idx' → logprob: -4.136630058288574
    6. '_idx' → logprob: -4.261630058288574
    7. 'poly' → logprob: -4.886630058288574
    8. '_p' → logprob: -5.386630058288574
    9. '
' → logprob: -5.386630058288574
    10. '```' → logprob: -5.386630058288574

Token 1397: ' point' (ID: 2438)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5287637114524841
    2. 'idx' → logprob: -1.153763771057129
    3. 'min' → logprob: -3.028763771057129
    4. '_idxs' → logprob: -4.153763771057129
    5. 'poly' → logprob: -4.653763771057129
    6. '```' → logprob: -5.403763771057129
    7. 'import' → logprob: -5.778763771057129
    8. ',' → logprob: -5.778763771057129
    9. ' idx' → logprob: -6.528763771057129
    10. ',
' → logprob: -6.528763771057129

Token 1398: ' first' (ID: 1577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6126850843429565
    2. '               ' → logprob: -1.8626850843429565
    3. 'min' → logprob: -1.9876850843429565
    4. 'idx' → logprob: -2.237685203552246
    5. ',' → logprob: -4.237685203552246
    6. '                
' → logprob: -4.862685203552246
    7. '```' → logprob: -4.862685203552246
    8. 'import' → logprob: -5.612685203552246
    9. ',
' → logprob: -5.612685203552246
    10. ' min' → logprob: -5.862685203552246

Token 1399: ',' (ID: 11)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.32202422618865967
    2. '               ' → logprob: -1.9470242261886597
    3. 'idx' → logprob: -2.197024345397949
    4. '
' → logprob: -4.572024345397949
    5. 'import' → logprob: -5.697024345397949
    6. 'poly' → logprob: -6.197024345397949
    7. '[min' → logprob: -6.822024345397949
    8. ',' → logprob: -7.197024345397949
    9. '(min' → logprob: -7.322024345397949
    10. ' min' → logprob: -7.572024345397949

Token 1400: ' counter' (ID: 9446)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.007833153940737247
    2. '               ' → logprob: -5.257833003997803
    3. 'idx' → logprob: -6.507833003997803
    4. ' min' → logprob: -7.507833003997803
    5. 'poly' → logprob: -7.882833003997803
    6. '           ' → logprob: -9.882833480834961
    7. '                   ' → logprob: -10.507833480834961
    8. '```' → logprob: -10.882833480834961
    9. '   ' → logprob: -11.257833480834961
    10. '[min' → logprob: -11.257833480834961

Token 1401: 'clock' (ID: 34421)
  Prédit: 'clock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clock' → logprob: -0.0009157438762485981
    2. '_clock' → logprob: -7.37591552734375
    3. '-clock' → logprob: -8.75091552734375
    4. 'clk' → logprob: -9.75091552734375
    5. ' clockwise' → logprob: -10.75091552734375
    6. '
' → logprob: -11.00091552734375
    7. 'cw' → logprob: -11.75091552734375
    8. '```' → logprob: -12.37591552734375
    9. 'def' → logprob: -12.50091552734375
    10. 'poly' → logprob: -13.12591552734375

Token 1402: 'wise' (ID: 7480)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.26241567730903625
    2. 'clock' → logprob: -2.262415647506714
    3. 'def' → logprob: -2.762415647506714
    4. 'poly' → logprob: -4.137415885925293
    5. '```' → logprob: -4.637415885925293
    6. 'x' → logprob: -4.887415885925293
    7. ')' → logprob: -5.137415885925293
    8. '
' → logprob: -5.512415885925293
    9. 'cw' → logprob: -5.762415885925293
    10. 'W' → logprob: -6.262415885925293

Token 1403: ' order' (ID: 2569)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.024315405637025833
    2. '
' → logprob: -4.649315357208252
    3. 'poly' → logprob: -5.524315357208252
    4. '               ' → logprob: -5.899315357208252
    5. '(min' → logprob: -6.024315357208252
    6. 'idx' → logprob: -6.149315357208252
    7. '```' → logprob: -7.274315357208252
    8. ',' → logprob: -8.14931583404541
    9. '[min' → logprob: -8.14931583404541
    10. ' min' → logprob: -8.14931583404541

Token 1404: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22774472832679749
    2. '               ' → logprob: -1.727744698524475
    3. 'idx' → logprob: -4.6027445793151855
    4. '
' → logprob: -4.9777445793151855
    5. '```' → logprob: -5.6027445793151855
    6. ',' → logprob: -7.2277445793151855
    7. '(min' → logprob: -7.2277445793151855
    8. ' min' → logprob: -7.3527445793151855
    9. '`' → logprob: -7.3527445793151855
    10. '[min' → logprob: -7.8527445793151855

Token 1405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034563131630420685
    2. 'min' → logprob: -4.034563064575195
    3. 'poly' → logprob: -5.034563064575195
    4. 'idx' → logprob: -5.534563064575195
    5. '```' → logprob: -6.534563064575195
    6. '
' → logprob: -6.659563064575195
    7. '           ' → logprob: -7.534563064575195
    8. ' min' → logprob: -7.784563064575195
    9. ',' → logprob: -8.159563064575195
    10. '   ' → logprob: -8.284563064575195

Token 1406: ' poly' (ID: 14600)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0061666090041399
    2. 'poly' (adapté à ' poly') → logprob: -5.756166458129883
    3. 'idx' → logprob: -6.506166458129883
    4. '               ' → logprob: -7.756166458129883
    5. ' min' → logprob: -7.756166458129883
    6. 'import' → logprob: -8.506166458129883
    7. '   ' → logprob: -9.631166458129883
    8. 'result' → logprob: -9.631166458129883
    9. '           ' → logprob: -9.881166458129883
    10. '                   ' → logprob: -9.881166458129883

Token 1407: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04206513985991478
    2. ' =' → logprob: -3.542065143585205
    3. '_poly' → logprob: -4.792065143585205
    4. '_pts' → logprob: -5.917065143585205
    5. 'poly' → logprob: -7.042065143585205
    6. '_points' → logprob: -8.542064666748047
    7. '_idxs' → logprob: -10.542064666748047
    8. '_tokens' → logprob: -10.667064666748047
    9. '=min' → logprob: -10.917064666748047
    10. '_coords' → logprob: -11.042064666748047

Token 1408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04862438142299652
    2. ' =' → logprob: -3.048624277114868
    3. '=_' → logprob: -11.298624038696289
    4. '=
' → logprob: -12.423624038696289
    5. '_poly' → logprob: -12.423624038696289
    6. '```' → logprob: -12.798624038696289
    7. '_=' → logprob: -12.798624038696289
    8. 'poly' → logprob: -12.923624038696289
    9. '_' → logprob: -13.423624038696289
    10. '   ' → logprob: -13.548624038696289

Token 1409: ' [(' (ID: 43900)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.007647914811968803
    2. ' rotate' → logprob: -4.88264799118042
    3. '   ' → logprob: -10.257647514343262
    4. '[' → logprob: -12.382647514343262
    5. 'reverse' → logprob: -14.382647514343262
    6. 'rot' → logprob: -14.882647514343262
    7. '.rotate' → logprob: -15.132647514343262
    8. 'list' → logprob: -15.507647514343262
    9. ' [' → logprob: -16.007648468017578
    10. '  ' → logprob: -16.132648468017578

Token 1410: 'pts' (ID: 24040)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16717007756233215
    2. 'min' → logprob: -2.5421700477600098
    3. 'x' → logprob: -3.6671700477600098
    4. 'point' → logprob: -4.16717004776001
    5. 'pts' → logprob: -4.29217004776001
    6. 'points' → logprob: -4.79217004776001
    7. 'px' → logprob: -5.66717004776001
    8. 'poly' → logprob: -5.91717004776001
    9. 'idx' → logprob: -6.29217004776001
    10. 'pt' → logprob: -6.91717004776001

Token 1411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5998060703277588
    2. '[idx' → logprob: -0.8498060703277588
    3. '[p' → logprob: -4.59980583190918
    4. '[' → logprob: -4.72480583190918
    5. 'idx' → logprob: -5.72480583190918
    6. '[min' → logprob: -8.09980583190918
    7. 'p' → logprob: -8.47480583190918
    8. '
' → logprob: -8.84980583190918
    9. 'i' → logprob: -9.22480583190918
    10. '[
' → logprob: -9.47480583190918

Token 1412: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.49582719802856445
    2. '[' → logprob: -1.4958271980285645
    3. ')' → logprob: -2.1208271980285645
    4. 'for' → logprob: -4.1208271980285645
    5. '][' → logprob: -4.8708271980285645
    6. '[idx' → logprob: -5.2458271980285645
    7. ')][' → logprob: -5.3708271980285645
    8. ',' → logprob: -5.4958271980285645
    9. ')]' → logprob: -6.3708271980285645
    10. ' for' → logprob: -6.3708271980285645

Token 1413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002219368703663349
    2. '[' → logprob: -6.877219200134277
    3. '
' → logprob: -7.752219200134277
    4. '][' → logprob: -8.252219200134277
    5. ' ' → logprob: -9.127219200134277
    6. ')' → logprob: -9.127219200134277
    7. '   ' → logprob: -9.752219200134277
    8. 'for' → logprob: -9.752219200134277
    9. '),' → logprob: -10.502219200134277
    10. ' for' → logprob: -10.752219200134277

Token 1414: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.71628338098526
    2. '],' → logprob: -0.71628338098526
    3. '),' → logprob: -4.466283321380615
    4. ',i' → logprob: -4.966283321380615
    5. ',p' → logprob: -6.841283321380615
    6. '],[' → logprob: -7.466283321380615
    7. '),(' → logprob: -8.091283798217773
    8. ',),' → logprob: -8.091283798217773
    9. '   ' → logprob: -8.341283798217773
    10. ',
' → logprob: -8.466283798217773

Token 1415: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -1.8908587662735954e-05
    2. ' pts' → logprob: -11.000019073486328
    3. '_pts' → logprob: -13.625019073486328
    4. 'Pts' → logprob: -14.000019073486328
    5. 'pt' → logprob: -16.375019073486328
    6. '
' → logprob: -18.125019073486328
    7. 'PTS' → logprob: -18.875019073486328
    8. '   ' → logprob: -19.750019073486328
    9. 'ps' → logprob: -20.125019073486328
    10. 'ipts' → logprob: -20.375019073486328

Token 1416: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18623264133930206
    2. '[i' → logprob: -2.061232566833496
    3. '1' → logprob: -3.311232566833496
    4. '0' → logprob: -5.436232566833496
    5. '[' → logprob: -7.061232566833496
    6. '
' → logprob: -8.186232566833496
    7. '(i' → logprob: -9.186232566833496
    8. '),' → logprob: -9.186232566833496
    9. '2' → logprob: -9.311232566833496
    10. '][' → logprob: -9.561232566833496

Token 1417: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6932849884033203
    2. '[' → logprob: -0.8182849884033203
    3. '1' → logprob: -3.0682849884033203
    4. ')][' → logprob: -4.56828498840332
    5. '0' → logprob: -7.31828498840332
    6. ')[' → logprob: -7.69328498840332
    7. '],' → logprob: -8.31828498840332
    8. '])[' → logprob: -9.19328498840332
    9. ']][' → logprob: -9.56828498840332
    10. '"][' → logprob: -9.56828498840332

Token 1418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.625000953674316
    3. '])' → logprob: -16.0
    4. '[' → logprob: -16.125
    5. '],' → logprob: -16.75
    6. '
' → logprob: -17.25
    7. ')]' → logprob: -17.875
    8. ')' → logprob: -17.875
    9. '```' → logprob: -18.0
    10. ' ' → logprob: -18.375

Token 1419: '],' (ID: 2155)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5906882286071777
    2. ')' → logprob: -0.8406882286071777
    3. '),' → logprob: -4.715688228607178
    4. ')]
' → logprob: -5.340688228607178
    5. ')
' → logprob: -7.840688228607178
    6. '),(' → logprob: -8.590688705444336
    7. '),
' → logprob: -9.590688705444336
    8. '   ' → logprob: -9.965688705444336
    9. ' )' → logprob: -9.965688705444336
    10. ']' → logprob: -10.090688705444336

Token 1420: 'i' (ID: 72)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11987346410751343
    2. 'pts' → logprob: -2.369873523712158
    3. 'i' → logprob: -4.119873523712158
    4. 'points' → logprob: -6.744873523712158
    5. ' idx' → logprob: -7.119873523712158
    6. 'point' → logprob: -7.244873523712158
    7. 'pt' → logprob: -9.369873046875
    8. 'p' → logprob: -9.494873046875
    9. '	idx' → logprob: -9.744873046875
    10. ' pts' → logprob: -9.869873046875

Token 1421: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014986468479037285
    2. ')]' → logprob: -4.264986515045166
    3. ')
' → logprob: -7.514986515045166
    4. ')...' → logprob: -9.139986038208008
    5. ')]
' → logprob: -9.889986038208008
    6. ' )' → logprob: -10.389986038208008
    7. '),' → logprob: -10.764986038208008
    8. '   ' → logprob: -11.139986038208008
    9. '       ' → logprob: -11.514986038208008
    10. ']' → logprob: -11.514986038208008

Token 1422: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5034685730934143
    2. 'for' → logprob: -1.3784685134887695
    3. ')' → logprob: -2.5034685134887695
    4. '
' → logprob: -3.5034685134887695
    5. ')
' → logprob: -4.0034685134887695
    6. ',' → logprob: -5.5034685134887695
    7. '   ' → logprob: -6.2534685134887695
    8. ']
' → logprob: -6.3784685134887695
    9. ',
' → logprob: -6.8784685134887695
    10. ']' → logprob: -7.1284685134887695

Token 1423: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011653638648567721
    2. ' i' → logprob: -9.125116348266602
    3. 'p' → logprob: -12.125116348266602
    4. '
' → logprob: -14.250116348266602
    5. ' ' → logprob: -14.875116348266602
    6. '	i' → logprob: -15.375116348266602
    7. '   ' → logprob: -15.375116348266602
    8. '_i' → logprob: -15.750116348266602
    9. '(i' → logprob: -15.875116348266602
    10. '`' → logprob: -16.1251163482666

Token 1424: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5874544978141785
    2. ' in' → logprob: -0.8374544978141785
    3. 'i' → logprob: -4.712454319000244
    4. ' i' → logprob: -6.587454319000244
    5. 'idx' → logprob: -7.587454319000244
    6. ' idx' → logprob: -7.712454319000244
    7. '
' → logprob: -10.587454795837402
    8. ' ' → logprob: -10.712454795837402
    9. 'range' → logprob: -11.087454795837402
    10. ' range' → logprob: -11.212454795837402

Token 1425: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019373197574168444
    2. 'min' → logprob: -6.376937389373779
    3. 'range' → logprob: -8.501936912536621
    4. ' idx' → logprob: -10.501936912536621
    5. '
' → logprob: -13.376936912536621
    6. 'ids' → logprob: -14.251936912536621
    7. 'id' → logprob: -14.501936912536621
    8. '[idx' → logprob: -14.751936912536621
    9. '   ' → logprob: -15.001936912536621
    10. '[' → logprob: -15.126936912536621

Token 1426: 's' (ID: 82)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5970399379730225
    2. 'min' → logprob: -1.3470399379730225
    3. 'xs' → logprob: -2.8470399379730225
    4. ' range' → logprob: -3.0970399379730225
    5. 'x' → logprob: -3.5970399379730225
    6. 'idx' → logprob: -4.222040176391602
    7. '[' → logprob: -4.472040176391602
    8. '_idxs' → logprob: -4.472040176391602
    9. 's' → logprob: -5.097040176391602
    10. ' min' → logprob: -5.972040176391602

Token 1427: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.01507207378745079
    2. '               ' → logprob: -5.015071868896484
    3. ']' → logprob: -5.765071868896484
    4. ')
' → logprob: -5.765071868896484
    5. ')' → logprob: -7.765071868896484
    6. '   ' → logprob: -8.140071868896484
    7. '```' → logprob: -8.265071868896484
    8. '       ' → logprob: -8.390071868896484
    9. '
' → logprob: -8.765071868896484
    10. '           ' → logprob: -9.390071868896484

Token 1428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7766057848930359
    2. '```' → logprob: -1.2766058444976807
    3. '
' → logprob: -2.0266058444976807
    4. '   ' → logprob: -2.7766058444976807
    5. 'poly' → logprob: -3.7766058444976807
    6. '``' → logprob: -4.526605606079102
    7. 'def' → logprob: -4.901605606079102
    8. '       ' → logprob: -5.151605606079102
    9. '<|end|>' → logprob: -5.401605606079102
    10. '`' → logprob: -5.526605606079102

Token 1429: ' #' (ID: 1069)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.05252399668097496
    2. '               ' → logprob: -3.5525240898132324
    3. 'import' → logprob: -4.552524089813232
    4. 'from' → logprob: -5.802524089813232
    5. ' poly' → logprob: -5.927524089813232
    6. 'def' → logprob: -6.052524089813232
    7. 'idx' → logprob: -6.802524089813232
    8. '   ' → logprob: -7.177524089813232
    9. 'for' → logprob: -8.052523612976074
    10. '           ' → logprob: -8.177523612976074

Token 1430: ' rotate' (ID: 31987)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.026938393712043762
    2. 'from' → logprob: -4.776938438415527
    3. 'import' → logprob: -5.151938438415527
    4. 'def' → logprob: -5.276938438415527
    5. '               ' → logprob: -5.776938438415527
    6. 'idx' → logprob: -6.026938438415527
    7. 'min' → logprob: -7.901938438415527
    8. 'for' → logprob: -8.151938438415527
    9. 'rot' → logprob: -8.526938438415527
    10. ' poly' → logprob: -8.776938438415527

Token 1431: ' to' (ID: 316)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.011986926198005676
    2. '=' → logprob: -4.88698673248291
    3. '_poly' → logprob: -5.63698673248291
    4. '(poly' → logprob: -7.76198673248291
    5. ' =' → logprob: -9.63698673248291
    6. '```' → logprob: -10.13698673248291
    7. '2' → logprob: -10.51198673248291
    8. '
' → logprob: -10.51198673248291
    9. '_=' → logprob: -10.63698673248291
    10. 'def' → logprob: -10.76198673248291

Token 1432: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.12488535046577454
    2. 'rotate' → logprob: -2.249885320663452
    3. 'poly' → logprob: -5.124885559082031
    4. 'left' → logprob: -6.374885559082031
    5. '_low' → logprob: -6.874885559082031
    6. 'low' → logprob: -6.999885559082031
    7. ' lowest' → logprob: -7.874885559082031
    8. '   ' → logprob: -7.874885559082031
    9. '```' → logprob: -8.374885559082031
    10. '_rotate' → logprob: -8.624885559082031

Token 1433: '-left' (ID: 17007)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.14874331653118134
    2. 'poly' → logprob: -2.2737433910369873
    3. 'left' → logprob: -3.5237433910369873
    4. '(poly' → logprob: -6.398743152618408
    5. '_point' → logprob: -7.023743152618408
    6. 'point' → logprob: -7.273743152618408
    7. '_poly' → logprob: -7.523743152618408
    8. 'x' → logprob: -7.523743152618408
    9. '
' → logprob: -8.273743629455566
    10. ')' → logprob: -8.773743629455566

Token 1434: ' first' (ID: 1577)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.5153048634529114
    2. '_point' → logprob: -1.5153048038482666
    3. '_poly' → logprob: -2.6403048038482666
    4. 'point' → logprob: -3.5153048038482666
    5. '(poly' → logprob: -3.5153048038482666
    6. 'def' → logprob: -3.7653048038482666
    7. '(
' → logprob: -4.140305042266846
    8. '
' → logprob: -5.640305042266846
    9. '_idx' → logprob: -6.390305042266846
    10. '   ' → logprob: -6.515305042266846

Token 1435: '
' (ID: 198)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.09416019916534424
    2. '               ' → logprob: -2.4691600799560547
    3. 'idx' → logprob: -7.094160079956055
    4. '       ' → logprob: -7.219160079956055
    5. '```' → logprob: -7.219160079956055
    6. '
' → logprob: -7.344160079956055
    7. 'def' → logprob: -7.594160079956055
    8. '           ' → logprob: -7.594160079956055
    9. '   ' → logprob: -7.719160079956055
    10. 'pol' → logprob: -8.594160079956055

Token 1436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3824758231639862
    2. 'poly' → logprob: -1.2574758529663086
    3. '```' → logprob: -4.507475852966309
    4. '       ' → logprob: -4.507475852966309
    5. 'def' → logprob: -5.507475852966309
    6. '   ' → logprob: -6.507475852966309
    7. '           ' → logprob: -6.632475852966309
    8. 'for' → logprob: -7.132475852966309
    9. '
' → logprob: -7.257475852966309
    10. '``' → logprob: -7.757475852966309

Token 1437: ' min' (ID: 1349)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.0873136818408966
    2. 'idx' → logprob: -3.587313652038574
    3. 'def' → logprob: -3.962313652038574
    4. 'rot' → logprob: -4.337313652038574
    5. '   ' → logprob: -4.962313652038574
    6. 'r' → logprob: -5.712313652038574
    7. ' poly' → logprob: -6.087313652038574
    8. 'from' → logprob: -6.087313652038574
    9. 'min' (adapté à ' min') → logprob: -6.212313652038574
    10. 'import' → logprob: -6.337313652038574

Token 1438: '_idx' (ID: 15257)
  Prédit: '_poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.002620370127260685
    2. 'poly' → logprob: -6.627620220184326
    3. '_area' → logprob: -7.002620220184326
    4. '_idx' → logprob: -8.502620697021484
    5. '_polygon' → logprob: -9.252620697021484
    6. '_' → logprob: -11.127620697021484
    7. 'Poly' → logprob: -11.627620697021484
    8. '_point' → logprob: -11.627620697021484
    9. '\' → logprob: -12.002620697021484
    10. '
' → logprob: -12.127620697021484

Token 1439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28239235281944275
    2. ' =' → logprob: -1.4073923826217651
    3. '_' → logprob: -7.407392501831055
    4. '_=' → logprob: -8.657392501831055
    5. ')' → logprob: -9.532392501831055
    6. '_poly' → logprob: -9.782392501831055
    7. '=_' → logprob: -9.907392501831055
    8. 'poly' → logprob: -9.907392501831055
    9. '=min' → logprob: -10.032392501831055
    10. '(' → logprob: -10.282392501831055

Token 1440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00210779020562768
    2. 'min' → logprob: -6.252107620239258
    3. 'poly' → logprob: -9.502107620239258
    4. ' ' → logprob: -10.127107620239258
    5. 'idx' → logprob: -10.252107620239258
    6. 'next' → logprob: -12.127107620239258
    7. 'max' → logprob: -12.502107620239258
    8. 'rotate' → logprob: -12.627107620239258
    9. '   ' → logprob: -13.002107620239258
    10. ' min' → logprob: -13.002107620239258

Token 1441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012767080217599869
    2. 'min' → logprob: -4.387767314910889
    3. 'poly' → logprob: -9.38776683807373
    4. 'next' → logprob: -9.88776683807373
    5. ' ' → logprob: -10.01276683807373
    6. 'rotate' → logprob: -10.63776683807373
    7. 'idx' → logprob: -10.76276683807373
    8. ' min' → logprob: -11.38776683807373
    9. 'float' → logprob: -12.63776683807373
    10. '   ' → logprob: -12.76276683807373

Token 1442: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24231746792793274
    2. '
' → logprob: -1.7423174381256104
    3. '<|end|>' → logprob: -3.8673174381256104
    4. ' for' → logprob: -4.2423176765441895
    5. 'while' → logprob: -5.9923176765441895
    6. '   ' → logprob: -7.6173176765441895
    7. 'import' → logprob: -7.7423176765441895
    8. '```' → logprob: -8.117317199707031
    9. '<|end|>' → logprob: -8.242317199707031
    10. '	for' → logprob: -9.367317199707031

Token 1443: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08954248577356339
    2. 'while' → logprob: -2.9645423889160156
    3. ' for' → logprob: -3.7145423889160156
    4. '   ' → logprob: -6.214542388916016
    5. 'min' → logprob: -6.464542388916016
    6. ' while' → logprob: -6.839542388916016
    7. '               ' → logprob: -7.089542388916016
    8. '
' → logprob: -7.089542388916016
    9. '       ' → logprob: -7.214542388916016
    10. '	for' → logprob: -7.214542388916016

Token 1444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06616485118865967
    2. 'while' → logprob: -2.816164970397949
    3. 'min' → logprob: -5.691164970397949
    4. 'n' → logprob: -7.316164970397949
    5. '           ' → logprob: -10.06616497039795
    6. 'import' → logprob: -10.81616497039795
    7. ' for' → logprob: -10.94116497039795
    8. '   ' → logprob: -11.31616497039795
    9. 'from' → logprob: -11.56616497039795
    10. 'poly' → logprob: -11.56616497039795

Token 1445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006696671480312943
    2. ' i' → logprob: -8.375669479370117
    3. 'min' → logprob: -8.500669479370117
    4. 'j' → logprob: -8.500669479370117
    5. '_i' → logprob: -11.375669479370117
    6. 'idx' → logprob: -12.250669479370117
    7. '   ' → logprob: -12.375669479370117
    8. '```' → logprob: -13.250669479370117
    9. '	i' → logprob: -13.375669479370117
    10. 't' → logprob: -13.500669479370117

Token 1446: ',p' (ID: 14835)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5762840509414673
    2. 'in' → logprob: -0.8262840509414673
    3. 'i' → logprob: -8.826284408569336
    4. '+' → logprob: -9.451284408569336
    5. ' i' → logprob: -9.826284408569336
    6. '	in' → logprob: -10.326284408569336
    7. ',' → logprob: -11.576284408569336
    8. '```' → logprob: -12.201284408569336
    9. '   ' → logprob: -12.701284408569336
    10. ' ' → logprob: -12.826284408569336

Token 1447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20181451737880707
    2. 'in' → logprob: -1.7018145322799683
    3. 'i' → logprob: -8.201814651489258
    4. '```' → logprob: -10.201814651489258
    5. ',' → logprob: -10.951814651489258
    6. '0' → logprob: -11.326814651489258
    7. '
' → logprob: -11.451814651489258
    8. 'n' → logprob: -11.951814651489258
    9. '_in' → logprob: -12.201814651489258
    10. 'idx' → logprob: -12.201814651489258

Token 1448: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00278645777143538
    2. ' range' → logprob: -6.002786636352539
    3. 'enumer' → logprob: -8.252786636352539
    4. 'min' → logprob: -11.002786636352539
    5. '
' → logprob: -11.377786636352539
    6. '(range' → logprob: -11.877786636352539
    7. ' enumerate' → logprob: -12.252786636352539
    8. '(' → logprob: -12.627786636352539
    9. 'in' → logprob: -12.877786636352539
    10. '```' → logprob: -13.127786636352539

Token 1449: '(poly' (ID: 175644)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.48477375507354736
    2. 'min' → logprob: -0.9847737550735474
    3. 'range' → logprob: -5.234773635864258
    4. '(min' → logprob: -6.359773635864258
    5. 'idx' → logprob: -6.734773635864258
    6. '(poly' → logprob: -7.234773635864258
    7. ' poly' → logprob: -7.734773635864258
    8. ' min' → logprob: -8.109773635864258
    9. 'enumer' → logprob: -8.734773635864258
    10. '[(' → logprob: -8.859773635864258

Token 1450: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38763174414634705
    2. '(min' → logprob: -2.38763165473938
    3. '[min' → logprob: -3.51263165473938
    4. '[i' → logprob: -3.88763165473938
    5. 'min' → logprob: -3.88763165473938
    6. '(i' → logprob: -3.88763165473938
    7. '[' → logprob: -4.137631893157959
    8. 'i' → logprob: -4.512631893157959
    9. '_idxs' → logprob: -4.512631893157959
    10. '_min' → logprob: -4.762631893157959

Token 1451: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9990453124046326
    2. ':
' → logprob: -1.2490453720092773
    3. '():
' → logprob: -2.3740453720092773
    4. '[' → logprob: -2.8740453720092773
    5. ':' → logprob: -2.9990453720092773
    6. '(p' → logprob: -3.4990453720092773
    7. '   ' → logprob: -3.7490453720092773
    8. '<|end|>' → logprob: -3.8740453720092773
    9. '(' → logprob: -4.499045372009277
    10. '       ' → logprob: -4.624045372009277

Token 1452: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6622545719146729
    2. '                   ' → logprob: -1.1622545719146729
    3. '       ' → logprob: -2.662254571914673
    4. ' if' → logprob: -2.912254571914673
    5. '           ' → logprob: -3.537254571914673
    6. '               ' → logprob: -4.787254333496094
    7. '<|end|>' → logprob: -5.787254333496094
    8. '                       ' → logprob: -5.912254333496094
    9. '```' → logprob: -7.037254333496094
    10. ',' → logprob: -7.412254333496094

Token 1453: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5327821373939514
    2. ' if' → logprob: -1.0327820777893066
    3. '                       ' → logprob: -3.2827820777893066
    4. '       ' → logprob: -4.407782077789307
    5. '                   ' → logprob: -6.407782077789307
    6. 'x' → logprob: -6.407782077789307
    7. '   ' → logprob: -7.157782077789307
    8. ' x' → logprob: -7.157782077789307
    9. '	                   ' → logprob: -7.907782077789307
    10. '	if' → logprob: -8.157782554626465

Token 1454: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16392715275287628
    2. ' p' → logprob: -2.1639270782470703
    3. '(p' → logprob: -3.5389270782470703
    4. ' (' → logprob: -5.16392707824707
    5. '   ' → logprob: -7.03892707824707
    6. '(' → logprob: -7.53892707824707
    7. 'poly' → logprob: -10.16392707824707
    8. '  ' → logprob: -10.41392707824707
    9. '    ' → logprob: -10.66392707824707
    10. ' ' → logprob: -11.28892707824707

Token 1455: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002666265470907092
    2. '```' → logprob: -6.877666473388672
    3. 'i' → logprob: -8.377666473388672
    4. 'y' → logprob: -8.502666473388672
    5. '[
' → logprob: -8.502666473388672
    6. '==' → logprob: -8.502666473388672
    7. '0' → logprob: -8.752666473388672
    8. '][' → logprob: -8.877666473388672
    9. '1' → logprob: -8.877666473388672
    10. '[i' → logprob: -9.127666473388672

Token 1456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05071257799863815
    2. '2' → logprob: -3.1757125854492188
    3. '0' → logprob: -4.925712585449219
    4. '[' → logprob: -8.550712585449219
    5. '
' → logprob: -9.925712585449219
    6. 'i' → logprob: -10.175712585449219
    7. '(' → logprob: -10.300712585449219
    8. '```' → logprob: -10.425712585449219
    9. '#' → logprob: -11.238212585449219
    10. '`' → logprob: -11.800712585449219

Token 1457: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5565008521080017
    2. '>' → logprob: -1.1815009117126465
    3. ' >' → logprob: -3.1815009117126465
    4. ' <' → logprob: -3.3065009117126465
    5. '<p' → logprob: -3.5565009117126465
    6. '><' → logprob: -6.1815009117126465
    7. 'p' → logprob: -6.4315009117126465
    8. '0' → logprob: -6.6815009117126465
    9. '```' → logprob: -6.9315009117126465
    10. '   ' → logprob: -7.0565009117126465

Token 1458: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.003256973112002015
    2. 'min' → logprob: -6.253256797790527
    3. 'p' → logprob: -6.753256797790527
    4. ' poly' → logprob: -9.253256797790527
    5. '
' → logprob: -10.503256797790527
    6. '0' → logprob: -11.753256797790527
    7. 'pts' → logprob: -12.128256797790527
    8. '(poly' → logprob: -12.253256797790527
    9. '   ' → logprob: -12.753256797790527
    10. '```' → logprob: -12.753256797790527

Token 1459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012110712938010693
    2. '[i' → logprob: -5.137110710144043
    3. 'i' → logprob: -5.387110710144043
    4. '[' → logprob: -7.262110710144043
    5. 'min' → logprob: -8.512110710144043
    6. 'idx' → logprob: -8.887110710144043
    7. '(i' → logprob: -8.887110710144043
    8. '```' → logprob: -9.137110710144043
    9. '[min' → logprob: -9.512110710144043
    10. '
' → logprob: -10.012110710144043

Token 1460: '[min' (ID: 135647)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.18727831542491913
    2. '[min' → logprob: -2.0622782707214355
    3. '0' → logprob: -3.8122782707214355
    4. 'i' → logprob: -4.5622782707214355
    5. 'idx' → logprob: -5.6872782707214355
    6. '[i' → logprob: -6.3122782707214355
    7. '
' → logprob: -6.8122782707214355
    8. '```' → logprob: -6.8122782707214355
    9. '(min' → logprob: -6.9372782707214355
    10. '[' → logprob: -7.1872782707214355

Token 1461: '_idx' (ID: 15257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10576604306697845
    2. '_idx' → logprob: -2.4807660579681396
    3. 'idx' → logprob: -4.4807658195495605
    4. '2' → logprob: -5.6057658195495605
    5. '(i' → logprob: -7.8557658195495605
    6. '0' → logprob: -8.355766296386719
    7. 'Idx' → logprob: -8.730766296386719
    8. '[i' → logprob: -8.980766296386719
    9. ' i' → logprob: -9.230766296386719
    10. '1' → logprob: -9.355766296386719

Token 1462: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5850367546081543
    2. '[' → logprob: -1.4600367546081543
    3. 'i' → logprob: -2.0850367546081543
    4. '][' → logprob: -3.0850367546081543
    5. 'or' → logprob: -4.460036754608154
    6. '```' → logprob: -4.835036754608154
    7. ' or' → logprob: -4.835036754608154
    8. ']' → logprob: -5.460036754608154
    9. '1' → logprob: -6.460036754608154
    10. '0' → logprob: -6.710036754608154

Token 1463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -13.125004768371582
    3. '
' → logprob: -13.875004768371582
    4. '```' → logprob: -14.125004768371582
    5. '   ' → logprob: -14.375004768371582
    6. ' ' → logprob: -15.875004768371582
    7. '``' → logprob: -17.500003814697266
    8. '...' → logprob: -17.937503814697266
    9. '0' → logprob: -18.062503814697266
    10. '`' → logprob: -18.187503814697266

Token 1464: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04313666746020317
    2. 'or' → logprob: -3.1681365966796875
    3. '       ' → logprob: -9.793136596679688
    4. '           ' → logprob: -10.918136596679688
    5. '```' → logprob: -11.043136596679688
    6. 'i' → logprob: -11.168136596679688
    7. '   ' → logprob: -11.668136596679688
    8. ':' → logprob: -12.543136596679688
    9. ' i' → logprob: -12.793136596679688
    10. '
' → logprob: -12.793136596679688

Token 1465: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20146635174751282
    2. 'or' → logprob: -1.7014663219451904
    3. '```' → logprob: -10.95146656036377
    4. '           ' → logprob: -11.57646656036377
    5. '       ' → logprob: -12.07646656036377
    6. '	or' → logprob: -12.32646656036377
    7. '   ' → logprob: -12.82646656036377
    8. '                       ' → logprob: -13.20146656036377
    9. 'i' → logprob: -13.20146656036377
    10. ' ' → logprob: -13.45146656036377

Token 1466: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.1758553385734558
    2. 'p' → logprob: -2.5508553981781006
    3. ' (' → logprob: -2.5508553981781006
    4. ' p' → logprob: -5.4258551597595215
    5. '(' → logprob: -7.1758551597595215
    6. '   ' → logprob: -11.30085563659668
    7. '           ' → logprob: -11.67585563659668
    8. '(
' → logprob: -12.05085563659668
    9. '  ' → logprob: -12.17585563659668
    10. '          ' → logprob: -12.30085563659668

Token 1467: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02081606164574623
    2. ' p' → logprob: -3.8958160877227783
    3. '(p' → logprob: -8.3958158493042
    4. ' (' → logprob: -10.8958158493042
    5. '           ' → logprob: -11.8958158493042
    6. '   ' → logprob: -12.0208158493042
    7. '(' → logprob: -12.3958158493042
    8. '    ' → logprob: -12.5208158493042
    9. '          ' → logprob: -13.3958158493042
    10. '  ' → logprob: -13.6458158493042

Token 1468: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.391266405582428
    2. '[' → logprob: -1.1412663459777832
    3. '```' → logprob: -6.141266345977783
    4. '][' → logprob: -6.891266345977783
    5. '==' → logprob: -8.016266822814941
    6. 'i' → logprob: -8.016266822814941
    7. '[
' → logprob: -8.391266822814941
    8. '0' → logprob: -9.766266822814941
    9. '
' → logprob: -10.016266822814941
    10. '#' → logprob: -10.391266822814941

Token 1469: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02336287684738636
    2. '1' → logprob: -3.773362874984741
    3. '[' → logprob: -9.64836311340332
    4. '2' → logprob: -10.77336311340332
    5. '   ' → logprob: -11.77336311340332
    6. 'i' → logprob: -11.89836311340332
    7. '
' → logprob: -11.89836311340332
    8. ' ' → logprob: -12.27336311340332
    9. '```' → logprob: -12.77336311340332
    10. 'p' → logprob: -14.14836311340332

Token 1470: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6234593987464905
    2. ']==' → logprob: -1.3734593391418457
    3. '>' → logprob: -2.4984593391418457
    4. '[' → logprob: -2.6234593391418457
    5. ']>' → logprob: -3.7484593391418457
    6. '][' → logprob: -4.373459339141846
    7. '[i' → logprob: -4.998459339141846
    8. '```' → logprob: -5.123459339141846
    9. ']' → logprob: -5.498459339141846
    10. '>[' → logprob: -6.748459339141846

Token 1471: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.023261435329914093
    2. 'p' → logprob: -3.773261547088623
    3. ' poly' → logprob: -11.273261070251465
    4. '```' → logprob: -13.898261070251465
    5. ' p' → logprob: -14.398261070251465
    6. '
' → logprob: -14.398261070251465
    7. 'pol' → logprob: -14.523261070251465
    8. '(poly' → logprob: -15.648261070251465
    9. 'py' → logprob: -16.02326202392578
    10. '   ' → logprob: -16.14826202392578

Token 1472: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012975513003766537
    2. 'idx' → logprob: -5.262975692749023
    3. 'i' → logprob: -5.637975692749023
    4. '[i' → logprob: -6.387975692749023
    5. '```' → logprob: -6.762975692749023
    6. '[' → logprob: -7.762975692749023
    7. '_idx' → logprob: -8.137975692749023
    8. '
' → logprob: -8.762975692749023
    9. '[idx' → logprob: -9.262975692749023
    10. '(i' → logprob: -9.512975692749023

Token 1473: '[min' (ID: 135647)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10231681168079376
    2. 'i' → logprob: -2.8523168563842773
    3. '[min' → logprob: -3.6023168563842773
    4. 'idx' → logprob: -4.602316856384277
    5. '[i' → logprob: -7.102316856384277
    6. '```' → logprob: -7.852316856384277
    7. '_idx' → logprob: -8.227316856384277
    8. ' min' → logprob: -8.602316856384277
    9. '[
' → logprob: -9.477316856384277
    10. '
' → logprob: -9.602316856384277

Token 1474: '_idx' (ID: 15257)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4884338080883026
    2. '_idx' → logprob: -1.113433837890625
    3. 'idx' → logprob: -2.988433837890625
    4. 'i' → logprob: -5.238433837890625
    5. 'Idx' → logprob: -6.863433837890625
    6. '```' → logprob: -7.988433837890625
    7. '1' → logprob: -8.738433837890625
    8. '(idx' → logprob: -9.113433837890625
    9. '   ' → logprob: -9.488433837890625
    10. ' idx' → logprob: -9.488433837890625

Token 1475: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0708405077457428
    2. 'and' → logprob: -2.94584059715271
    3. '[' → logprob: -4.320840358734131
    4. ' and' → logprob: -6.695840358734131
    5. ']' → logprob: -6.820840358734131
    6. '```' → logprob: -9.195840835571289
    7. '           ' → logprob: -10.945840835571289
    8. '#' → logprob: -11.070840835571289
    9. '[i' → logprob: -11.320840835571289
    10. ']][' → logprob: -11.570840835571289

Token 1476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067909169010818005
    2. 'i' → logprob: -5.006791114807129
    3. 'p' → logprob: -10.631791114807129
    4. '   ' → logprob: -11.381791114807129
    5. ' ' → logprob: -11.881791114807129
    6. '```' → logprob: -11.881791114807129
    7. '
' → logprob: -12.131791114807129
    8. '0' → logprob: -12.131791114807129
    9. '(i' → logprob: -12.381791114807129
    10. ' i' → logprob: -12.381791114807129

Token 1477: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3484603464603424
    2. 'and' → logprob: -1.22346031665802
    3. ']' → logprob: -12.22346019744873
    4. '```' → logprob: -12.47346019744873
    5. ')' → logprob: -13.47346019744873
    6. '0' → logprob: -13.84846019744873
    7. '<|end|>' → logprob: -13.84846019744873
    8. ' ' → logprob: -14.72346019744873
    9. '           ' → logprob: -14.84846019744873
    10. '][' → logprob: -14.84846019744873

Token 1478: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.10021239519119263
    2. ' and' → logprob: -2.350212335586548
    3. '```' → logprob: -12.475212097167969
    4. '&&' → logprob: -14.100212097167969
    5. '	and' → logprob: -15.100212097167969
    6. '           ' → logprob: -15.975212097167969
    7. '   ' → logprob: -16.22521209716797
    8. ' ' → logprob: -16.47521209716797
    9. '``' → logprob: -16.72521209716797
    10. '    ' → logprob: -16.97521209716797

Token 1479: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023249903693795204
    2. ' p' → logprob: -3.773249864578247
    3. '   ' → logprob: -13.398249626159668
    4. '(p' → logprob: -13.648249626159668
    5. '           ' → logprob: -14.648249626159668
    6. '                   ' → logprob: -15.148249626159668
    7. '    ' → logprob: -15.523249626159668
    8. '	p' → logprob: -15.773249626159668
    9. '
' → logprob: -16.148250579833984
    10. '               ' → logprob: -16.273250579833984

Token 1480: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023858174681663513
    2. '[i' → logprob: -3.773858070373535
    3. 'i' → logprob: -8.148858070373535
    4. '```' → logprob: -9.273858070373535
    5. '[
' → logprob: -10.148858070373535
    6. 'p' → logprob: -10.398858070373535
    7. 'import' → logprob: -10.648858070373535
    8. 'def' → logprob: -10.773858070373535
    9. '0' → logprob: -10.898858070373535
    10. '<|end|>' → logprob: -11.023858070373535

Token 1481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0039790235459804535
    2. 'p' → logprob: -5.753979206085205
    3. 'i' → logprob: -7.253979206085205
    4. '
' → logprob: -10.378978729248047
    5. '[' → logprob: -10.753978729248047
    6. '2' → logprob: -11.378978729248047
    7. '   ' → logprob: -11.503978729248047
    8. 'x' → logprob: -12.253978729248047
    9. ' ' → logprob: -12.628978729248047
    10. '```' → logprob: -12.628978729248047

Token 1482: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.8682345747947693
    2. ']>' → logprob: -1.618234634399414
    3. '<p' → logprob: -2.118234634399414
    4. '][' → logprob: -2.368234634399414
    5. ']' → logprob: -2.493234634399414
    6. '>' → logprob: -3.368234634399414
    7. '[' → logprob: -3.493234634399414
    8. '[i' → logprob: -5.118234634399414
    9. '<i' → logprob: -5.493234634399414
    10. 'i' → logprob: -6.118234634399414

Token 1483: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.17996272444725037
    2. 'p' → logprob: -1.8049627542495728
    3. ' poly' → logprob: -8.679963111877441
    4. ' p' → logprob: -10.304963111877441
    5. '
' → logprob: -11.804963111877441
    6. 'pol' → logprob: -13.304963111877441
    7. '```' → logprob: -13.429963111877441
    8. 'py' → logprob: -14.054963111877441
    9. '(poly' → logprob: -14.429963111877441
    10. '_poly' → logprob: -14.429963111877441

Token 1484: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000776038970798254
    2. 'poly' → logprob: -7.3757758140563965
    3. '[i' → logprob: -9.250776290893555
    4. 'p' → logprob: -11.125776290893555
    5. '[' → logprob: -11.375776290893555
    6. '[p' → logprob: -11.625776290893555
    7. 'i' → logprob: -12.375776290893555
    8. 'idx' → logprob: -12.875776290893555
    9. '
' → logprob: -13.125776290893555
    10. '```' → logprob: -13.375776290893555

Token 1485: '[min' (ID: 135647)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.049692559987306595
    2. 'p' → logprob: -3.5496926307678223
    3. '[p' → logprob: -4.174692630767822
    4. 'i' → logprob: -5.924692630767822
    5. '[' → logprob: -6.549692630767822
    6. 'poly' → logprob: -9.049692153930664
    7. '[min' → logprob: -9.174692153930664
    8. '[
' → logprob: -11.424692153930664
    9. '[idx' → logprob: -12.424692153930664
    10. '```' → logprob: -12.674692153930664

Token 1486: '_idx' (ID: 15257)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08738019317388535
    2. '_idx' → logprob: -2.5873801708221436
    3. 'idx' → logprob: -5.337380409240723
    4. '[i' → logprob: -6.212380409240723
    5. '(i' → logprob: -8.087380409240723
    6. 'Idx' → logprob: -8.212380409240723
    7. '```' → logprob: -8.337380409240723
    8. '][' → logprob: -8.837380409240723
    9. '   ' → logprob: -8.837380409240723
    10. '[' → logprob: -9.087380409240723

Token 1487: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029372870922088623
    2. '[i' → logprob: -6.127937316894531
    3. '[' → logprob: -7.502937316894531
    4. '0' → logprob: -9.627937316894531
    5. 'i' → logprob: -9.752937316894531
    6. '```' → logprob: -11.252937316894531
    7. ']' → logprob: -11.377937316894531
    8. ']][' → logprob: -11.627937316894531
    9. ''][' → logprob: -11.877937316894531
    10. '"][' → logprob: -12.127937316894531

Token 1488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021049315109848976
    2. 'i' → logprob: -4.396049499511719
    3. '1' → logprob: -4.771049499511719
    4. 'p' → logprob: -12.021049499511719
    5. '[i' → logprob: -12.021049499511719
    6. '2' → logprob: -12.271049499511719
    7. '```' → logprob: -12.396049499511719
    8. '   ' → logprob: -12.896049499511719
    9. ' i' → logprob: -13.021049499511719
    10. ' ' → logprob: -13.646049499511719

Token 1489: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015017237514257431
    2. '):' → logprob: -4.765017032623291
    3. ']):
' → logprob: -5.890017032623291
    4. ')' → logprob: -6.515017032623291
    5. '       ' → logprob: -6.890017032623291
    6. '```' → logprob: -8.26501750946045
    7. '   ' → logprob: -8.76501750946045
    8. ']):' → logprob: -9.01501750946045
    9. '               ' → logprob: -9.39001750946045
    10. '           ' → logprob: -9.51501750946045

Token 1490: '                       ' (ID: 968)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0191106796264648
    2. '                       ' → logprob: -1.6441106796264648
    3. 'min' → logprob: -2.394110679626465
    4. '       ' → logprob: -2.644110679626465
    5. '                   ' → logprob: -2.644110679626465
    6. '               ' → logprob: -2.644110679626465
    7. '```' → logprob: -3.269110679626465
    8. '           ' → logprob: -4.144110679626465
    9. ' i' → logprob: -4.269110679626465
    10. '   ' → logprob: -5.019110679626465

Token 1491: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.00010556964843999594
    2. ' min' → logprob: -9.625105857849121
    3. 'i' → logprob: -10.625105857849121
    4. '
' → logprob: -12.000105857849121
    5. '	min' → logprob: -12.000105857849121
    6. '[min' → logprob: -14.250105857849121
    7. '_min' → logprob: -14.500105857849121
    8. '0' → logprob: -14.875105857849121
    9. '(min' → logprob: -14.875105857849121
    10. '```' → logprob: -15.500105857849121

Token 1492: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.652451464906335e-05
    2. 'idx' → logprob: -11.125016212463379
    3. '_index' → logprob: -14.250016212463379
    4. '
' → logprob: -15.125016212463379
    5. '_i' → logprob: -15.875016212463379
    6. 'i' → logprob: -16.000017166137695
    7. 'Idx' → logprob: -16.000017166137695
    8. '_idxs' → logprob: -16.000017166137695
    9. '	idx' → logprob: -16.125017166137695
    10. '=' → logprob: -17.250017166137695

Token 1493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051687076687812805
    2. '=i' → logprob: -3.301687002182007
    3. ' =' → logprob: -4.301687240600586
    4. '=
' → logprob: -12.051687240600586
    5. '=p' → logprob: -14.676687240600586
    6. '=j' → logprob: -14.926687240600586
    7. '=int' → logprob: -16.176687240600586
    8. 'i' → logprob: -16.301687240600586
    9. '=n' → logprob: -16.676687240600586
    10. '＝' → logprob: -16.926687240600586

Token 1494: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011706985533237457
    2. ' i' → logprob: -6.751170635223389
    3. '	i' → logprob: -15.876171112060547
    4. ' ' → logprob: -16.126171112060547
    5. '
' → logprob: -16.751171112060547
    6. '1' → logprob: -17.251171112060547
    7. '```' → logprob: -17.376171112060547
    8. '   ' → logprob: -18.126171112060547
    9. '`' → logprob: -18.376171112060547
    10. '=i' → logprob: -18.751171112060547

Token 1495: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24601276218891144
    2. '
' → logprob: -1.871012806892395
    3. '```' → logprob: -3.6210126876831055
    4. 'min' → logprob: -4.9960126876831055
    5. '           ' → logprob: -5.2460126876831055
    6. ')
' → logprob: -5.3710126876831055
    7. '       ' → logprob: -5.7460126876831055
    8. ' min' → logprob: -6.1210126876831055
    9. '<|end|>' → logprob: -6.1210126876831055
    10. ')' → logprob: -6.3710126876831055

Token 1496: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3260587751865387
    2. '<|end|>' → logprob: -2.201058864593506
    3. ')
' → logprob: -3.451058864593506
    4. ')' → logprob: -3.826058864593506
    5. '``' → logprob: -4.076058864593506
    6. '
' → logprob: -4.201058864593506
    7. ',
' → logprob: -4.326058864593506
    8. ',' → logprob: -4.451058864593506
    9. '               ' → logprob: -4.826058864593506
    10. '   ' → logprob: -5.076058864593506

Token 1497: ' poly' (ID: 14600)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6805988550186157
    2. '               ' → logprob: -1.3055988550186157
    3. 'poly' (adapté à ' poly') → logprob: -2.305598735809326
    4. '```' → logprob: -3.055598735809326
    5. 'p' → logprob: -4.055598735809326
    6. 'result' → logprob: -4.305598735809326
    7. 'for' → logprob: -4.805598735809326
    8. '
' → logprob: -5.305598735809326
    9. ' min' → logprob: -5.555598735809326
    10. '``' → logprob: -5.680598735809326

Token 1498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040325685404241085
    2. '=' → logprob: -6.129032611846924
    3. ' =' → logprob: -6.504032611846924
    4. '_pts' → logprob: -9.004032135009766
    5. '_poly' → logprob: -9.629032135009766
    6. '_points' → logprob: -10.004032135009766
    7. 'poly' → logprob: -10.379032135009766
    8. '```' → logprob: -11.004032135009766
    9. '_idxs' → logprob: -11.379032135009766
    10. '₂' → logprob: -11.629032135009766

Token 1499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01417867373675108
    2. ' =' → logprob: -4.26417875289917
    3. '=min' → logprob: -12.264178276062012
    4. '[:]' → logprob: -12.639178276062012
    5. '=
' → logprob: -13.014178276062012
    6. '[min' → logprob: -13.514178276062012
    7. '```' → logprob: -14.514178276062012
    8. '[' → logprob: -14.639178276062012
    9. '=(' → logprob: -15.014178276062012
    10. '=[' → logprob: -15.014178276062012

Token 1500: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.01603730209171772
    2. ' poly' → logprob: -4.141037464141846
    3. '(poly' → logprob: -13.141036987304688
    4. 'Poly' → logprob: -14.891036987304688
    5. '   ' → logprob: -15.391036987304688
    6. '_poly' → logprob: -15.391036987304688
    7. '-poly' → logprob: -16.141036987304688
    8. 'pol' → logprob: -16.391036987304688
    9. ' ' → logprob: -16.766036987304688
    10. '/poly' → logprob: -17.641036987304688

Token 1501: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008856110507622361
    2. 'poly' → logprob: -7.625885486602783
    3. '[min' → logprob: -8.125885963439941
    4. '[' → logprob: -10.125885963439941
    5. 'min' → logprob: -10.750885963439941
    6. '_poly' → logprob: -11.875885963439941
    7. '[(' → logprob: -12.000885963439941
    8. '```' → logprob: -12.250885963439941
    9. '[:' → logprob: -12.625885963439941
    10. '
' → logprob: -13.000885963439941

Token 1502: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -6.630610641877865e-06
    2. 'min' → logprob: -13.125006675720215
    3. '[-' → logprob: -13.500006675720215
    4. '```' → logprob: -13.625006675720215
    5. '[i' → logprob: -13.875006675720215
    6. '[' → logprob: -15.000006675720215
    7. '(min' → logprob: -15.500006675720215
    8. '[
' → logprob: -16.3750057220459
    9. 'poly' → logprob: -16.7500057220459
    10. '=min' → logprob: -17.0000057220459

Token 1503: '_idx' (ID: 15257)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4367043972015381
    2. 'min' → logprob: -1.686704397201538
    3. '(min' → logprob: -1.936704397201538
    4. '```' → logprob: -4.936704635620117
    5. '[min' → logprob: -5.561704635620117
    6. '_idx' → logprob: -5.561704635620117
    7. '_min' → logprob: -5.811704635620117
    8. '(' → logprob: -6.436704635620117
    9. 'idx' → logprob: -6.561704635620117
    10. '=min' → logprob: -7.436704635620117

Token 1504: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.16024677455425262
    2. ':' → logprob: -1.910246729850769
    3. ':],' → logprob: -11.785246849060059
    4. '+' → logprob: -11.910246849060059
    5. ':]
' → logprob: -12.785246849060059
    6. ']+' → logprob: -13.160246849060059
    7. ':].' → logprob: -13.660246849060059
    8. ']' → logprob: -14.660246849060059
    9. '[:]' → logprob: -14.660246849060059
    10. '[' → logprob: -15.160246849060059

Token 1505: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.5759431719779968
    2. ']' → logprob: -0.8259431719779968
    3. ']+\' → logprob: -13.325942993164062
    4. ']
' → logprob: -14.575942993164062
    5. '```' → logprob: -14.700942993164062
    6. ']+=' → logprob: -15.575942993164062
    7. ':]' → logprob: -15.575942993164062
    8. '
' → logprob: -15.700942993164062
    9. ' ]' → logprob: -15.825942993164062
    10. 'poly' → logprob: -16.075942993164062

Token 1506: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.676292231422849e-05
    2. ' poly' → logprob: -11.000017166137695
    3. '(poly' → logprob: -17.000017166137695
    4. 'pol' → logprob: -17.625017166137695
    5. '_poly' → logprob: -18.750017166137695
    6. '/poly' → logprob: -20.000017166137695
    7. '-poly' → logprob: -20.000017166137695
    8. '.poly' → logprob: -20.750017166137695
    9. 'Poly' → logprob: -22.625017166137695
    10. 'p' → logprob: -23.000017166137695

Token 1507: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. '[:' → logprob: -12.25001049041748
    3. 'poly' → logprob: -12.87501049041748
    4. '_poly' → logprob: -13.62501049041748
    5. '```' → logprob: -14.62501049041748
    6. '[' → logprob: -15.37501049041748
    7. '₂' → logprob: -15.50001049041748
    8. '_idx' → logprob: -15.62501049041748
    9. '
' → logprob: -16.250009536743164
    10. 'Poly' → logprob: -16.375009536743164

Token 1508: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.02465461753308773
    2. 'poly' → logprob: -4.274654388427734
    3. ':' → logprob: -5.274654388427734
    4. '_poly' → logprob: -5.899654388427734
    5. '][:' → logprob: -6.524654388427734
    6. '[:-' → logprob: -8.149654388427734
    7. ':min' → logprob: -8.399654388427734
    8. '+' → logprob: -9.149654388427734
    9. '
' → logprob: -9.274654388427734
    10. ' poly' → logprob: -9.399654388427734

Token 1509: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. ' min' → logprob: -14.625000953674316
    3. '(min' → logprob: -17.125
    4. 'max' → logprob: -17.25
    5. 'mini' → logprob: -17.75
    6. '0' → logprob: -18.75
    7. '	min' → logprob: -19.75
    8. '[min' → logprob: -19.875
    9. '```' → logprob: -20.75
    10. '   ' → logprob: -21.0

Token 1510: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.000116655595775228
    2. 'idx' → logprob: -9.250116348266602
    3. '2' → logprob: -10.875116348266602
    4. 'Idx' → logprob: -14.250116348266602
    5. 'min' → logprob: -15.625116348266602
    6. '```' → logprob: -16.0001163482666
    7. '	idx' → logprob: -16.2501163482666
    8. '1' → logprob: -16.2501163482666
    9. ' idx' → logprob: -16.3751163482666
    10. '(idx' → logprob: -16.6251163482666

Token 1511: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.483635276556015
    2. ']' → logprob: -0.9836353063583374
    3. '               ' → logprob: -5.233635425567627
    4. '           ' → logprob: -5.858635425567627
    5. '       ' → logprob: -6.733635425567627
    6. '   ' → logprob: -10.233634948730469
    7. ']
' → logprob: -10.858634948730469
    8. ')' → logprob: -10.983634948730469
    9. ')
' → logprob: -11.358634948730469
    10. ']

' → logprob: -11.733634948730469

Token 1512: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9072011709213257
    2. '               ' → logprob: -1.2822011709213257
    3. '
' → logprob: -1.7822011709213257
    4. '       ' → logprob: -2.9072012901306152
    5. '<|end|>' → logprob: -3.2822012901306152
    6. 'for' → logprob: -3.9072012901306152
    7. '``' → logprob: -4.782201290130615
    8. '   ' → logprob: -5.657201290130615
    9. '                
' → logprob: -5.782201290130615
    10. ' for' → logprob: -6.032201290130615

Token 1513: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9854293465614319
    2. '```' → logprob: -1.110429286956787
    3. ' for' → logprob: -1.860429286956787
    4. '       ' → logprob: -2.485429286956787
    5. '   ' → logprob: -4.360429286956787
    6. 'print' → logprob: -4.485429286956787
    7. '               ' → logprob: -4.860429286956787
    8. '``' → logprob: -5.485429286956787
    9. '           ' → logprob: -5.735429286956787
    10. '
' → logprob: -5.860429286956787

Token 1514: ' output' (ID: 4733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21647784113883972
    2. 'print' → logprob: -2.216477870941162
    3. '               ' → logprob: -3.216477870941162
    4. 'for' → logprob: -3.716477870941162
    5. '       ' → logprob: -4.841477870941162
    6. '   ' → logprob: -5.341477870941162
    7. 'results' → logprob: -6.341477870941162
    8. 'ans' → logprob: -6.591477870941162
    9. 'output' → logprob: -6.841477870941162
    10. 'answers' → logprob: -6.841477870941162

Token 1515: ' original' (ID: 4756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9165735244750977
    2. 'for' → logprob: -0.9165735244750977
    3. ' for' → logprob: -1.9165735244750977
    4. '               ' → logprob: -3.4165735244750977
    5. ' print' → logprob: -5.166573524475098
    6. '```' → logprob: -5.791573524475098
    7. '           ' → logprob: -6.041573524475098
    8. '       ' → logprob: -6.291573524475098
    9. '   ' → logprob: -6.541573524475098
    10. 'idx' → logprob: -6.916573524475098

Token 1516: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.417513370513916
    2. '               ' → logprob: -2.042513370513916
    3. '_indices' → logprob: -2.167513370513916
    4. '_points' → logprob: -4.167513370513916
    5. ' indices' → logprob: -4.292513370513916
    6. 'for' → logprob: -4.292513370513916
    7. '_indexes' → logprob: -4.292513370513916
    8. 'poly' → logprob: -4.792513370513916
    9. 'indexes' → logprob: -5.292513370513916
    10. ' for' → logprob: -5.417513370513916

Token 1517: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5634939074516296
    2. 'print' → logprob: -1.0634939670562744
    3. '
' → logprob: -3.1884939670562744
    4. 'for' → logprob: -4.063493728637695
    5. 'result' → logprob: -4.813493728637695
    6. '```' → logprob: -5.438493728637695
    7. ',' → logprob: -5.938493728637695
    8. 'output' → logprob: -6.188493728637695
    9. 'indices' → logprob: -6.313493728637695
    10. '                
' → logprob: -6.438493728637695

Token 1518: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8253055810928345
    2. ''\' → logprob: -1.8253055810928345
    3. '"\' → logprob: -2.450305461883545
    4. '\n' → logprob: -3.075305461883545
    5. '0' → logprob: -3.200305461883545
    6. '[i' → logprob: -3.325305461883545
    7. '1' → logprob: -3.450305461883545
    8. '
' → logprob: -3.700305461883545
    9. '"' → logprob: -4.200305461883545
    10. ''' → logprob: -4.200305461883545

Token 1519: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40604686737060547
    2. '               ' → logprob: -1.2810468673706055
    3. ',' → logprob: -3.9060468673706055
    4. '```' → logprob: -4.6560468673706055
    5. ',
' → logprob: -4.7810468673706055
    6. 'for' → logprob: -6.0310468673706055
    7. ' for' → logprob: -6.0310468673706055
    8. 'return' → logprob: -6.0310468673706055
    9. '                
' → logprob: -6.4060468673706055
    10. '\n' → logprob: -6.4060468673706055

Token 1520: ' problem' (ID: 4792)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1585135459899902
    2. 'p' → logprob: -2.0335135459899902
    3. ' p' → logprob: -2.0335135459899902
    4. 'i' → logprob: -2.4085135459899902
    5. ' ' → logprob: -2.6585135459899902
    6. 'print' → logprob: -2.6585135459899902
    7. 'each' → logprob: -3.1585135459899902
    8. '
' → logprob: -3.1585135459899902
    9. 'token' → logprob: -3.4085135459899902
    10. '0' → logprob: -4.90851354598999

Token 1521: ' index' (ID: 3472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21583113074302673
    2. ' for' → logprob: -2.5908310413360596
    3. 'for' → logprob: -3.7158310413360596
    4. '<|end|>' → logprob: -3.7158310413360596
    5. ')' → logprob: -4.215831279754639
    6. '
' → logprob: -4.340831279754639
    7. '```' → logprob: -4.715831279754639
    8. '       ' → logprob: -4.840831279754639
    9. 'def' → logprob: -5.340831279754639
    10. ',' → logprob: -5.715831279754639

Token 1522: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3048923909664154
    2. '
' → logprob: -1.4298924207687378
    3. ',' → logprob: -5.304892539978027
    4. '       ' → logprob: -5.554892539978027
    5. '```' → logprob: -6.054892539978027
    6. ' for' → logprob: -6.179892539978027
    7. '           ' → logprob: -6.429892539978027
    8. 'print' → logprob: -6.929892539978027
    9. 'for' → logprob: -7.054892539978027
    10. '   ' → logprob: -7.054892539978027

Token 1523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04475707933306694
    2. '```' → logprob: -3.544757127761841
    3. '``' → logprob: -5.919756889343262
    4. 'for' → logprob: -5.919756889343262
    5. ' for' → logprob: -6.669756889343262
    6. '[
' → logprob: -6.669756889343262
    7. '       ' → logprob: -7.044756889343262
    8. '<|end|>' → logprob: -7.169756889343262
    9. '[' → logprob: -7.294756889343262
    10. '
' → logprob: -7.419756889343262

Token 1524: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11108624935150146
    2. 'for' → logprob: -2.861086368560791
    3. 'result' → logprob: -3.986086368560791
    4. ' for' → logprob: -4.486086368560791
    5. ' print' → logprob: -5.361086368560791
    6. '               ' → logprob: -5.611086368560791
    7. '```' → logprob: -5.861086368560791
    8. '
' → logprob: -6.486086368560791
    9. '       ' → logprob: -6.736086368560791
    10. '   ' → logprob: -6.986086368560791

Token 1525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.482806921005249
    2. '=' → logprob: -0.982806921005249
    3. '=[]' → logprob: -4.982807159423828
    4. '=[' → logprob: -7.482807159423828
    5. '=[]
' → logprob: -7.607807159423828
    6. 's' → logprob: -8.357807159423828
    7. '=res' → logprob: -8.732807159423828
    8. '_idxs' → logprob: -9.357807159423828
    9. '.append' → logprob: -9.482807159423828
    10. 't' → logprob: -10.607807159423828

Token 1526: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7911735773086548
    2. '[idx' → logprob: -1.2911735773086548
    3. '[i' → logprob: -2.4161734580993652
    4. ' [' → logprob: -2.5411734580993652
    5. '[p' → logprob: -2.7911734580993652
    6. '[min' → logprob: -3.2911734580993652
    7. '[index' → logprob: -6.666173458099365
    8. '[ind' → logprob: -7.291173458099365
    9. '[id' → logprob: -7.791173458099365
    10. '[len' → logprob: -7.791173458099365

Token 1527: 'idx' (ID: 13196)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6711239218711853
    2. 'poly' → logprob: -1.04612398147583
    3. 'idx' → logprob: -3.17112398147583
    4. 'pts' → logprob: -3.17112398147583
    5. 'point' → logprob: -3.42112398147583
    6. ' poly' → logprob: -4.42112398147583
    7. ' points' → logprob: -5.67112398147583
    8. ' idx' → logprob: -6.17112398147583
    9. 'p' → logprob: -6.79612398147583
    10. ' pts' → logprob: -6.92112398147583

Token 1528: '_map' (ID: 11824)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3571086525917053
    2. '_to' → logprob: -2.3571085929870605
    3. 'p' → logprob: -3.2321085929870605
    4. '[p' → logprob: -3.2321085929870605
    5. '_map' → logprob: -3.7321085929870605
    6. '+' → logprob: -3.8571085929870605
    7. 's' → logprob: -4.2321085929870605
    8. '[' → logprob: -4.6071085929870605
    9. 'for' → logprob: -4.6071085929870605
    10. 'poly' → logprob: -4.7321085929870605

Token 1529: '[p' (ID: 23234)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1116078719496727
    2. '[idx' → logprob: -2.861607789993286
    3. '[p' → logprob: -3.111607789993286
    4. '[' → logprob: -5.736608028411865
    5. '[id' → logprob: -8.736607551574707
    6. '[min' → logprob: -9.111607551574707
    7. 'poly' → logprob: -9.486607551574707
    8. 'idx' → logprob: -9.736607551574707
    9. 'res' → logprob: -9.861607551574707
    10. '[
' → logprob: -9.861607551574707

Token 1530: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03895490989089012
    2. '[i' → logprob: -3.538954973220825
    3. 'i' → logprob: -5.538954734802246
    4. ']' → logprob: -5.788954734802246
    5. '3' → logprob: -6.538954734802246
    6. '[-' → logprob: -8.788954734802246
    7. '
' → logprob: -9.163954734802246
    8. '2' → logprob: -9.163954734802246
    9. '-' → logprob: -9.413954734802246
    10. '[
' → logprob: -10.038954734802246

Token 1531: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005710251862183213
    2. '[' → logprob: -8.250571250915527
    3. '0' → logprob: -9.500571250915527
    4. '
' → logprob: -9.625571250915527
    5. 'i' → logprob: -9.875571250915527
    6. '-' → logprob: -10.000571250915527
    7. '(' → logprob: -11.063071250915527
    8. '1' → logprob: -11.313071250915527
    9. '```' → logprob: -11.563071250915527
    10. ' ' → logprob: -12.250571250915527

Token 1532: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010640273801982403
    2. ']+' → logprob: -5.0106401443481445
    3. ']-' → logprob: -5.7606401443481445
    4. ']]' → logprob: -7.2606401443481445
    5. ' ]' → logprob: -10.010640144348145
    6. 'p' → logprob: -12.010640144348145
    7. ']
' → logprob: -12.510640144348145
    8. '   ' → logprob: -13.260640144348145
    9. 'for' → logprob: -13.385640144348145
    10. '-' → logprob: -13.760640144348145

Token 1533: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2821137011051178
    2. 'for' → logprob: -1.4071136713027954
    3. ']' → logprob: -7.157113552093506
    4. ')' → logprob: -10.282114028930664
    5. '
' → logprob: -10.657114028930664
    6. '	for' → logprob: -10.907114028930664
    7. '```' → logprob: -11.032114028930664
    8. ' ' → logprob: -11.157114028930664
    9. ' ]' → logprob: -11.157114028930664
    10. '   ' → logprob: -11.282114028930664

Token 1534: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.138441237155348e-05
    2. 'poly' → logprob: -9.375091552734375
    3. ' p' → logprob: -12.000091552734375
    4. '
' → logprob: -16.000091552734375
    5. 'pol' → logprob: -16.375091552734375
    6. ' poly' → logprob: -16.375091552734375
    7. '	p' → logprob: -18.000091552734375
    8. ' ' → logprob: -20.125091552734375
    9. '_poly' → logprob: -20.375091552734375
    10. '[' → logprob: -20.625091552734375

Token 1535: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10461476445198059
    2. ' in' → logprob: -2.729614734649658
    3. ' p' → logprob: -3.604614734649658
    4. 'in' → logprob: -4.979614734649658
    5. '[' → logprob: -13.104615211486816
    6. ',p' → logprob: -13.354615211486816
    7. ' ' → logprob: -13.479615211486816
    8. '
' → logprob: -13.604615211486816
    9. '	p' → logprob: -14.729615211486816
    10. '_p' → logprob: -14.854615211486816

Token 1536: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -2.1008713702030946e-06
    2. ' poly' → logprob: -13.125001907348633
    3. 'pol' → logprob: -17.000001907348633
    4. '(poly' → logprob: -17.250001907348633
    5. 'min' → logprob: -19.250001907348633
    6. '
' → logprob: -20.000001907348633
    7. 'py' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.500001907348633
    9. 'polygon' → logprob: -21.375001907348633
    10. 'range' → logprob: -21.625001907348633

Token 1537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3902033970225602e-05
    2. '_pts' → logprob: -12.000014305114746
    3. '```' → logprob: -13.625014305114746
    4. '
' → logprob: -13.625014305114746
    5. '[' → logprob: -13.875014305114746
    6. '_points' → logprob: -14.000014305114746
    7. 'poly' → logprob: -14.375014305114746
    8. ']' → logprob: -14.625014305114746
    9. ')' → logprob: -14.625014305114746
    10. '[
' → logprob: -15.250014305114746

Token 1538: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14089950919151306
    2. ']
' → logprob: -2.640899419784546
    3. '
' → logprob: -3.265899419784546
    4. '               ' → logprob: -4.265899658203125
    5. '<|end|>' → logprob: -6.265899658203125
    6. ']+' → logprob: -6.390899658203125
    7. '                   ' → logprob: -6.890899658203125
    8. '           ' → logprob: -7.140899658203125
    9. '       ' → logprob: -7.640899658203125
    10. '                       ' → logprob: -8.140899658203125

Token 1539: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9296137094497681
    2. '<|end|>' → logprob: -1.179613709449768
    3. '```' → logprob: -2.1796135902404785
    4. '       ' → logprob: -2.6796135902404785
    5. ')' → logprob: -3.0546135902404785
    6. ']' → logprob: -4.9296135902404785
    7. '   ' → logprob: -5.0546135902404785
    8. ')
' → logprob: -5.0546135902404785
    9. '[' → logprob: -5.3046135902404785
    10. ' if' → logprob: -5.4296135902404785

Token 1540: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7598379254341125
    2. '
' → logprob: -1.0098378658294678
    3. '               ' → logprob: -2.8848378658294678
    4. '<|end|>' → logprob: -3.2598378658294678
    5. '           ' → logprob: -4.134838104248047
    6. '   ' → logprob: -4.384838104248047
    7. '```' → logprob: -4.384838104248047
    8. '                   ' → logprob: -4.759838104248047
    9. ')' → logprob: -5.509838104248047
    10. '\n' → logprob: -5.509838104248047

Token 1541: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -3.082895273109898e-05
    2. 's' → logprob: -10.750030517578125
    3. '```' → logprob: -12.875030517578125
    4. '_code' → logprob: -13.125030517578125
    5. '_cached' → logprob: -13.875030517578125
    6. '\' → logprob: -14.125030517578125
    7. '_s' → logprob: -14.125030517578125
    8. '
' → logprob: -14.375030517578125
    9. '[_' → logprob: -14.500030517578125
    10. '_result' → logprob: -15.875030517578125

Token 1542: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.310693111619912e-05
    2. '[' → logprob: -10.125042915344238
    3. '[key' → logprob: -13.625042915344238
    4. '```' → logprob: -14.125042915344238
    5. '[s' → logprob: -15.625042915344238
    6. '=' → logprob: -15.875042915344238
    7. '=k' → logprob: -16.250043869018555
    8. '\[' → logprob: -16.750043869018555
    9. '[
' → logprob: -16.875043869018555
    10. 'k' → logprob: -17.000043869018555

Token 1543: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12148082256317139
    2. '[k' → logprob: -2.371480941772461
    3. '=' → logprob: -4.996480941772461
    4. ']' → logprob: -5.121480941772461
    5. ']=' → logprob: -5.496480941772461
    6. '[
' → logprob: -6.371480941772461
    7. '```' → logprob: -7.621480941772461
    8. '[p' → logprob: -7.746480941772461
    9. '][' → logprob: -7.746480941772461
    10. '=[' → logprob: -8.871480941772461

Token 1544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00027718624914996326
    2. ' =' → logprob: -8.625277519226074
    3. '[' → logprob: -9.500277519226074
    4. '=
' → logprob: -11.125277519226074
    5. '=k' → logprob: -12.625277519226074
    6. '=[' → logprob: -13.250277519226074
    7. '=

' → logprob: -14.500277519226074
    8. '[k' → logprob: -14.750277519226074
    9. '=True' → logprob: -14.875277519226074
    10. '=set' → logprob: -15.375277519226074

Token 1545: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00020377879263833165
    2. ' res' → logprob: -8.500204086303711
    3. '[' → logprob: -15.125204086303711
    4. '(res' → logprob: -18.12520408630371
    5. 'list' → logprob: -18.37520408630371
    6. '	res' → logprob: -20.37520408630371
    7. '$res' → logprob: -20.50020408630371
    8. '_res' → logprob: -20.75020408630371
    9. '```' → logprob: -20.87520408630371
    10. ' [' → logprob: -21.00020408630371

Token 1546: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1547: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13979968428611755
    2. '<|end|>' → logprob: -2.3897995948791504
    3. 'for' → logprob: -4.38979959487915
    4. '(' → logprob: -5.26479959487915
    5. ')' → logprob: -5.51479959487915
    6. '    
' → logprob: -5.76479959487915
    7. '       ' → logprob: -5.76479959487915
    8. '```' → logprob: -5.88979959487915
    9. '(
' → logprob: -6.26479959487915
    10. ' for' → logprob: -6.88979959487915

Token 1548: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5789446234703064
    2. 'else' (adapté à ' else') → logprob: -0.8289446234703064
    3. '   ' → logprob: -6.578944683074951
    4. ' else' → logprob: -7.078944683074951
    5. 'elif' → logprob: -7.453944683074951
    6. '```' → logprob: -8.828944206237793
    7. '<|end|>' → logprob: -11.203944206237793
    8. 'continue' → logprob: -11.578944206237793
    9. '           ' → logprob: -11.953944206237793
    10. '	else' → logprob: -12.703944206237793

Token 1549: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.300889253616333
    2. ':
' → logprob: -1.675889253616333
    3. ':' → logprob: -2.675889253616333
    4. '           ' → logprob: -5.925889015197754
    5. '   ' → logprob: -8.550889015197754
    6. ' continue' → logprob: -8.800889015197754
    7. '
' → logprob: -8.800889015197754
    8. '{' → logprob: -8.925889015197754
    9. 'continue' → logprob: -9.175889015197754
    10. '<|end|>' → logprob: -9.300889015197754

Token 1550: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001433216268196702
    2. '   ' → logprob: -7.001433372497559
    3. '```' → logprob: -8.376433372497559
    4. '           ' → logprob: -9.376433372497559
    5. '
' → logprob: -9.751433372497559
    6. ' continue' → logprob: -10.126433372497559
    7. '        
' → logprob: -10.376433372497559
    8. ' for' → logprob: -10.501433372497559
    9. 'continue' → logprob: -11.376433372497559
    10. '[' → logprob: -11.501433372497559

Token 1551: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32328757643699646
    2. 'from' → logprob: -1.4482876062393188
    3. 'for' → logprob: -4.198287487030029
    4. '           ' → logprob: -4.573287487030029
    5. 'import' → logprob: -5.323287487030029
    6. '```' → logprob: -5.823287487030029
    7. 'continue' → logprob: -5.948287487030029
    8. '#' (adapté à ' #') → logprob: -5.948287487030029
    9. ' from' → logprob: -6.198287487030029
    10. ' for' → logprob: -7.948287487030029

Token 1552: ' k' (ID: 372)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18549230694770813
    2. 'import' → logprob: -2.6854922771453857
    3. '#' → logprob: -3.1854922771453857
    4. 'for' → logprob: -3.6854922771453857
    5. '           ' → logprob: -3.9354922771453857
    6. '       ' → logprob: -5.185492515563965
    7. 'points' → logprob: -6.310492515563965
    8. 'if' → logprob: -6.435492515563965
    9. 'res' → logprob: -6.435492515563965
    10. 'h' → logprob: -6.435492515563965

Token 1553: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16925396025180817
    2. '=' → logprob: -2.0442540645599365
    3. ' =' → logprob: -4.294253826141357
    4. ' >' → logprob: -4.794253826141357
    5. '+=' → logprob: -7.044253826141357
    6. '=k' → logprob: -7.419253826141357
    7. '           ' → logprob: -7.544253826141357
    8. '#' → logprob: -7.919253826141357
    9. '>=' → logprob: -8.044254302978516
    10. '==' → logprob: -8.044254302978516

Token 1554: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007990578189492226
    2. 'len' → logprob: -4.88299036026001
    3. ' h' → logprob: -8.757990837097168
    4. '           ' → logprob: -9.507990837097168
    5. '=' → logprob: -10.257990837097168
    6. '=h' → logprob: -10.382990837097168
    7. '=len' → logprob: -10.507990837097168
    8. 'k' → logprob: -10.757990837097168
    9. '   ' → logprob: -11.257990837097168
    10. ' len' → logprob: -11.757990837097168

Token 1555: 'ull' (ID: 754)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16025662422180176
    2. '
' → logprob: -2.1602566242218018
    3. '       ' → logprob: -4.035256385803223
    4. ':
' → logprob: -5.535256385803223
    5. '```' → logprob: -5.910256385803223
    6. ' continue' → logprob: -6.410256385803223
    7. ' for' → logprob: -6.535256385803223
    8. 'import' → logprob: -6.785256385803223
    9. 'continue' → logprob: -7.035256385803223
    10. ':' → logprob: -7.285256385803223

Token 1556: ' size' (ID: 2349)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5742389559745789
    2. ':
' → logprob: -1.0742390155792236
    3. '           ' → logprob: -2.4492390155792236
    4. '```' → logprob: -6.0742387771606445
    5. '
' → logprob: -6.3242387771606445
    6. '       ' → logprob: -7.1992387771606445
    7. ',' → logprob: -7.1992387771606445
    8. '   ' → logprob: -7.3242387771606445
    9. '               ' → logprob: -7.9492387771606445
    10. '=' → logprob: -8.324238777160645

Token 1557: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41725218296051025
    2. ':' → logprob: -1.2922521829605103
    3. '           ' → logprob: -3.0422520637512207
    4. '
' → logprob: -4.417252063751221
    5. '<|end|>' → logprob: -6.292252063751221
    6. '       ' → logprob: -6.917252063751221
    7. ',' → logprob: -7.167252063751221
    8. ' for' → logprob: -7.667252063751221
    9. '{' → logprob: -7.667252063751221
    10. '```' → logprob: -8.167252540588379

Token 1558: ' minimal' (ID: 19957)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40275096893310547
    2. '#' → logprob: -1.5277509689331055
    3. 'continue' → logprob: -3.4027509689331055
    4. 'from' → logprob: -3.5277509689331055
    5. '       ' → logprob: -4.0277509689331055
    6. 'pass' → logprob: -4.5277509689331055
    7. 'import' → logprob: -4.7777509689331055
    8. ' #' → logprob: -5.6527509689331055
    9. 'for' → logprob: -5.9027509689331055
    10. ' continue' → logprob: -6.2777509689331055

Token 1559: ' polygon' (ID: 65081)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.027039101347327232
    2. '_poly' → logprob: -4.152039051055908
    3. '_points' → logprob: -6.152039051055908
    4. '_polygon' → logprob: -6.152039051055908
    5. ' area' → logprob: -6.402039051055908
    6. '_' → logprob: -6.902039051055908
    7. 'area' → logprob: -7.027039051055908
    8. '```' → logprob: -7.527039051055908
    9. 'poly' → logprob: -7.652039051055908
    10. '_h' → logprob: -7.777039051055908

Token 1560: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05589026212692261
    2. '=' → logprob: -3.6808903217315674
    3. ':' → logprob: -5.555890083312988
    4. '_points' → logprob: -5.555890083312988
    5. ' is' → logprob: -5.805890083312988
    6. ' points' → logprob: -5.805890083312988
    7. '=None' → logprob: -5.805890083312988
    8. '           ' → logprob: -5.805890083312988
    9. ':
' → logprob: -6.055890083312988
    10. '```' → logprob: -7.180890083312988

Token 1561: ' include' (ID: 3931)
  Prédit: 'include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'include' → logprob: -0.7184287905693054
    2. ' include' → logprob: -0.8434287905693054
    3. ' be' → logprob: -3.34342885017395
    4. ' consist' → logprob: -3.34342885017395
    5. 'be' → logprob: -5.093428611755371
    6. 'contain' → logprob: -5.843428611755371
    7. ' contain' → logprob: -7.218428611755371
    8. 'use' → logprob: -7.843428611755371
    9. ' use' → logprob: -7.843428611755371
    10. 'cons' → logprob: -8.218428611755371

Token 1562: ' points' (ID: 5571)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.05648742616176605
    2. 'all' → logprob: -3.9314873218536377
    3. 'points' → logprob: -4.056487560272217
    4. 'at' → logprob: -5.056487560272217
    5. 'some' → logprob: -5.431487560272217
    6. 'set' → logprob: -5.931487560272217
    7. 'any' → logprob: -6.931487560272217
    8. '#' → logprob: -7.431487560272217
    9. 'k' → logprob: -7.806487560272217
    10. '```' → logprob: -8.181487083435059

Token 1563: ' inside' (ID: 6772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4329944849014282
    2. ' =' → logprob: -2.1829943656921387
    3. ' beyond' → logprob: -2.1829943656921387
    4. '...' → logprob: -2.4329943656921387
    5. '=' → logprob: -2.5579943656921387
    6. ' not' → logprob: -2.8079943656921387
    7. ' that' → logprob: -2.9329943656921387
    8. ' on' → logprob: -3.4329943656921387
    9. '.' → logprob: -3.5579943656921387
    10. '#' → logprob: -3.5579943656921387

Token 1564: ' hull' (ID: 74912)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06665389984846115
    2. '       ' → logprob: -3.1916539669036865
    3. '
' → logprob: -4.316653728485107
    4. '```' → logprob: -5.816653728485107
    5. ' for' → logprob: -6.941653728485107
    6. 'import' → logprob: -7.191653728485107
    7. '               ' → logprob: -7.316653728485107
    8. ' continue' → logprob: -7.316653728485107
    9. ',' → logprob: -7.441653728485107
    10. '   ' → logprob: -7.566653728485107

Token 1565: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2384086400270462
    2. '       ' → logprob: -2.2384085655212402
    3. '<|end|>' → logprob: -2.7384085655212402
    4. '
' → logprob: -4.61340856552124
    5. ',' → logprob: -4.98840856552124
    6. '<|end|>' → logprob: -5.48840856552124
    7. '               ' → logprob: -6.36340856552124
    8. ' for' → logprob: -6.36340856552124
    9. '...' → logprob: -6.36340856552124
    10. ' and' → logprob: -6.48840856552124

Token 1566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5275496244430542
    2. '       ' → logprob: -0.9025496244430542
    3. '
' → logprob: -6.152549743652344
    4. '```' → logprob: -7.402549743652344
    5. '        
' → logprob: -7.652549743652344
    6. '   ' → logprob: -7.652549743652344
    7. '               ' → logprob: -8.527549743652344
    8. '            
' → logprob: -9.277549743652344
    9. ' continue' → logprob: -10.027549743652344
    10. ' for' → logprob: -10.027549743652344

Token 1567: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02364664152264595
    2. '           ' → logprob: -4.898646831512451
    3. ' for' → logprob: -5.273646831512451
    4. '```' → logprob: -6.398646831512451
    5. ' continue' → logprob: -6.648646831512451
    6. ' from' → logprob: -6.648646831512451
    7. '
' → logprob: -6.898646831512451
    8. '        
' → logprob: -6.898646831512451
    9. 'from' → logprob: -7.273646831512451
    10. '   ' → logprob: -7.398646831512451

Token 1568: ' brute' (ID: 128602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08836095780134201
    2. 'from' → logprob: -3.3383610248565674
    3. '           ' → logprob: -3.4633610248565674
    4. 'import' → logprob: -4.963360786437988
    5. '
' → logprob: -5.713360786437988
    6. ' from' → logprob: -6.088360786437988
    7. '#' → logprob: -6.588360786437988
    8. 'continue' → logprob: -7.213360786437988
    9. 'points' → logprob: -7.338360786437988
    10. 'for' → logprob: -7.338360786437988

Token 1569: ' force' (ID: 9578)
  Prédit: ' force'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' force' → logprob: -0.47448450326919556
    2. 'force' → logprob: -1.5994844436645508
    3. '_force' → logprob: -1.9744844436645508
    4. 'for' → logprob: -3.724484443664551
    5. '           ' → logprob: -5.349484443664551
    6. '-force' → logprob: -5.724484443664551
    7. '```' → logprob: -6.724484443664551
    8. 'forcer' → logprob: -7.099484443664551
    9. '(force' → logprob: -7.724484443664551
    10. '       ' → logprob: -7.849484443664551

Token 1570: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8146775960922241
    2. '       ' → logprob: -1.1896775960922241
    3. ' for' → logprob: -1.9396775960922241
    4. ':' → logprob: -3.1896777153015137
    5. ':
' → logprob: -3.8146777153015137
    6. 'for' → logprob: -4.064677715301514
    7. '   ' → logprob: -4.814677715301514
    8. ' continue' → logprob: -5.439677715301514
    9. '               ' → logprob: -5.564677715301514
    10. '
' → logprob: -6.314677715301514

Token 1571: ' subsets' (ID: 165377)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7607170939445496
    2. 'points' → logprob: -1.1357171535491943
    3. 'com' → logprob: -2.7607171535491943
    4. 'for' → logprob: -3.7607171535491943
    5. ' points' → logprob: -3.8857171535491943
    6. '```' → logprob: -4.010716915130615
    7. 'range' → logprob: -4.385716915130615
    8. '(com' → logprob: -4.635716915130615
    9. 'n' → logprob: -4.760716915130615
    10. ' k' → logprob: -4.885716915130615

Token 1572: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2450886219739914
    2. '           ' → logprob: -1.6200885772705078
    3. ' for' → logprob: -4.995088577270508
    4. '
' → logprob: -4.995088577270508
    5. '```' → logprob: -5.870088577270508
    6. ',' → logprob: -7.745088577270508
    7. '(' → logprob: -7.870088577270508
    8. '        
' → logprob: -8.120088577270508
    9. '               ' → logprob: -8.245088577270508
    10. 'for' → logprob: -8.495088577270508

Token 1573: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.41472867131233215
    2. 'points' → logprob: -1.7897286415100098
    3. 'pts' → logprob: -2.1647286415100098
    4. 'range' → logprob: -3.7897286415100098
    5. 'k' → logprob: -3.9147286415100098
    6. 'h' → logprob: -4.41472864151001
    7. ' size' → logprob: -7.16472864151001
    8. 'indices' → logprob: -7.53972864151001
    9. 'idx' → logprob: -7.66472864151001
    10. '[' → logprob: -8.789729118347168

Token 1574: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00013393278641160578
    2. ' k' → logprob: -9.750133514404297
    3. '```' → logprob: -10.000133514404297
    4. '
' → logprob: -10.500133514404297
    5. '``' → logprob: -13.875133514404297
    6. '`' → logprob: -14.375133514404297
    7. '{k' → logprob: -14.500133514404297
    8. '           ' → logprob: -15.125133514404297
    9. '1' → logprob: -15.875133514404297
    10. '
' → logprob: -16.125133514404297

Token 1575: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7470757961273193
    2. '           ' → logprob: -0.8720757961273193
    3. ':' → logprob: -3.4970757961273193
    4. ' for' → logprob: -3.9970757961273193
    5. '{' → logprob: -4.497076034545898
    6. ':
' → logprob: -4.497076034545898
    7. ',' → logprob: -5.247076034545898
    8. ' {' → logprob: -5.372076034545898
    9. ' continue' → logprob: -5.372076034545898
    10. '<|end|>' → logprob: -5.747076034545898

Token 1576: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.4506451487541199
    2. 'points' → logprob: -1.0756452083587646
    3. 'range' → logprob: -4.0756449699401855
    4. '```' → logprob: -6.7006449699401855
    5. 'com' → logprob: -6.8256449699401855
    6. ' pts' → logprob: -7.8256449699401855
    7. ' points' → logprob: -8.200645446777344
    8. '[' → logprob: -8.200645446777344
    9. 'N' → logprob: -8.450645446777344
    10. 'comb' → logprob: -8.575645446777344

Token 1577: ' up' (ID: 869)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4865185618400574
    2. '           ' → logprob: -1.1115186214447021
    3. '
' → logprob: -2.986518621444702
    4. ' for' → logprob: -6.486518383026123
    5. '```' → logprob: -6.861518383026123
    6. ':
' → logprob: -7.361518383026123
    7. 'for' → logprob: -7.611518383026123
    8. ':' → logprob: -8.111518859863281
    9. 'from' → logprob: -8.111518859863281
    10. ',' → logprob: -8.236518859863281

Token 1578: ' to' (ID: 316)
  Prédit: 'ntil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ntil' → logprob: -0.280210942029953
    2. 'til' → logprob: -2.0302109718322754
    3. 'to' → logprob: -2.9052109718322754
    4. 't' → logprob: -3.5302109718322754
    5. 'nt' → logprob: -4.780210971832275
    6. 'for' → logprob: -5.030210971832275
    7. 'p' → logprob: -5.655210971832275
    8. 'from' → logprob: -6.030210971832275
    9. 'def' → logprob: -6.530210971832275
    10. '   ' → logprob: -6.780210971832275

Token 1579: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9513591527938843
    2. 'k' → logprob: -1.4513591527938843
    3. '40' → logprob: -2.201359272003174
    4. '```' → logprob: -2.951359272003174
    5. 'some' → logprob: -3.076359272003174
    6. '100' → logprob: -3.076359272003174
    7. '10' → logprob: -3.576359272003174
    8. 'max' → logprob: -4.076359272003174
    9. 'min' → logprob: -4.326359272003174
    10. 'com' → logprob: -4.326359272003174

Token 1580: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1729726940393448
    2. '           ' → logprob: -2.1729726791381836
    3. '
' → logprob: -3.1729726791381836
    4. '```' → logprob: -7.672972679138184
    5. ' for' → logprob: -7.922972679138184
    6. '   ' → logprob: -8.047972679138184
    7. ',' → logprob: -8.172972679138184
    8. '<|end|>' → logprob: -8.422972679138184
    9. ':' → logprob: -8.547972679138184
    10. ':
' → logprob: -8.672972679138184

Token 1581: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.019633226096630096
    2. 'k' → logprob: -4.1446332931518555
    3. '20' → logprob: -6.3946332931518555
    4. 'N' → logprob: -6.8946332931518555
    5. 'h' → logprob: -8.144633293151855
    6. '
' → logprob: -8.769633293151855
    7. '0' → logprob: -9.519633293151855
    8. '10' → logprob: -9.519633293151855
    9. '15' → logprob: -9.644633293151855
    10. 'len' → logprob: -10.269633293151855

Token 1582: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10138531774282455
    2. '       ' → logprob: -2.4763853549957275
    3. '
' → logprob: -4.601385116577148
    4. '               ' → logprob: -7.976385116577148
    5. ' for' → logprob: -7.976385116577148
    6. '```' → logprob: -7.976385116577148
    7. '<|end|>' → logprob: -8.226385116577148
    8. '   ' → logprob: -8.476385116577148
    9. ',' → logprob: -8.851385116577148
    10. '            
' → logprob: -9.601385116577148

Token 1583: ' too' (ID: 3101)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20493093132972717
    2. 'True' → logprob: -2.5799310207366943
    3. 'not' → logprob: -3.2049310207366943
    4. 'im' → logprob: -4.329930782318115
    5. '   ' → logprob: -4.704930782318115
    6. '```' → logprob: -4.954930782318115
    7. 'in' → logprob: -5.079930782318115
    8. ' False' → logprob: -5.079930782318115
    9. 'un' → logprob: -5.704930782318115
    10. ' True' → logprob: -6.079930782318115

Token 1584: ' large' (ID: 4410)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.20524078607559204
    2. '
' → logprob: -3.2052407264709473
    3. '``' → logprob: -3.5802407264709473
    4. '   ' → logprob: -3.7052407264709473
    5. '       ' → logprob: -4.205240726470947
    6. 'large' → logprob: -4.455240726470947
    7. ' long' → logprob: -4.955240726470947
    8. '\n' → logprob: -5.455240726470947
    9. 'n' → logprob: -5.580240726470947
    10. ' large' → logprob: -5.830240726470947

Token 1585: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41779395937919617
    2. '           ' → logprob: -1.7927939891815186
    3. '<|end|>' → logprob: -2.2927939891815186
    4. '...' → logprob: -4.0427937507629395
    5. 'continue' → logprob: -4.5427937507629395
    6. '   ' → logprob: -4.5427937507629395
    7. ' continue' → logprob: -4.6677937507629395
    8. '<|end|>' → logprob: -5.6677937507629395
    9. '#' → logprob: -5.9177937507629395
    10. ' for' → logprob: -6.2927937507629395

Token 1586: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.042978521436452866
    2. 'complete' → logprob: -3.917978525161743
    3. 'import' → logprob: -4.292978286743164
    4. 'break' → logprob: -6.167978286743164
    5. 'enumer' → logprob: -6.417978286743164
    6. 'print' → logprob: -6.667978286743164
    7. 'implement' → logprob: -7.292978286743164
    8. 'generate' → logprob: -7.417978286743164
    9. '```' → logprob: -7.917978286743164
    10. 'write' → logprob: -8.042978286743164

Token 1587: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.275398850440979
    2. '       ' → logprob: -2.1503987312316895
    3. 'continue' → logprob: -2.6503987312316895
    4. ' continue' → logprob: -3.6503987312316895
    5. '...' → logprob: -4.6503987312316895
    6. '   ' → logprob: -5.4003987312316895
    7. '<|end|>' → logprob: -5.5253987312316895
    8. '               ' → logprob: -5.9003987312316895
    9. '```' → logprob: -7.0253987312316895
    10. '                   ' → logprob: -7.4003987312316895

Token 1588: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1440473198890686
    2. '           ' → logprob: -2.144047260284424
    3. '   ' → logprob: -4.769047260284424
    4. 'continue' → logprob: -5.269047260284424
    5. '               ' → logprob: -6.394047260284424
    6. ' continue' → logprob: -7.269047260284424
    7. '```' → logprob: -8.394047737121582
    8. '    
' → logprob: -9.394047737121582
    9. '        
' → logprob: -9.394047737121582
    10. '<|end|>' → logprob: -9.519047737121582

Token 1589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1570519655942917
    2. '           ' → logprob: -2.0320520401000977
    3. 'continue' → logprob: -5.157052040100098
    4. ' continue' → logprob: -5.407052040100098
    5. '
' → logprob: -6.532052040100098
    6. '   ' → logprob: -6.782052040100098
    7. 'return' → logprob: -8.407052040100098
    8. ' for' → logprob: -8.407052040100098
    9. '```' → logprob: -8.407052040100098
    10. '        
' → logprob: -8.782052040100098

Token 1590: ' instead' (ID: 7665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5922377705574036
    2. '       ' → logprob: -1.5922377109527588
    3. 'continue' → logprob: -1.5922377109527588
    4. '#' → logprob: -3.842237710952759
    5. 'pass' → logprob: -4.842237949371338
    6. 'for' → logprob: -5.967237949371338
    7. 'import' → logprob: -5.967237949371338
    8. ' continue' → logprob: -6.592237949371338
    9. 'from' → logprob: -6.842237949371338
    10. 'result' → logprob: -6.967237949371338

Token 1591: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42554959654808044
    2. ' continue' → logprob: -1.8005496263504028
    3. 'continue' → logprob: -2.0505495071411133
    4. '#' → logprob: -4.050549507141113
    5. 'import' → logprob: -4.550549507141113
    6. '       ' → logprob: -4.925549507141113
    7. '   ' → logprob: -5.425549507141113
    8. 'print' → logprob: -5.925549507141113
    9. 'pass' → logprob: -6.050549507141113
    10. ' #' → logprob: -6.550549507141113

Token 1592: ' construct' (ID: 12871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5288438200950623
    2. 'continue' → logprob: -1.278843879699707
    3. ' continue' → logprob: -2.403843879699707
    4. '   ' → logprob: -4.278843879699707
    5. 'import' → logprob: -4.528843879699707
    6. '       ' → logprob: -4.653843879699707
    7. 'return' → logprob: -6.028843879699707
    8. '```' → logprob: -7.028843879699707
    9. ''ll' → logprob: -7.653843879699707
    10. ' return' → logprob: -7.778843879699707

Token 1593: ' convex' (ID: 142423)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.9190329313278198
    2. 'from' → logprob: -1.4190329313278198
    3. 'import' → logprob: -2.1690330505371094
    4. '#' → logprob: -3.0440330505371094
    5. 'c' → logprob: -3.5440330505371094
    6. 'all' → logprob: -3.5440330505371094
    7. 'a' → logprob: -3.7940330505371094
    8. 'inter' → logprob: -4.294033050537109
    9. 'inside' → logprob: -4.294033050537109
    10. 'h' → logprob: -4.544033050537109

Token 1594: ' polygons' (ID: 169724)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.16576524078845978
    2. '_h' → logprob: -1.9157652854919434
    3. '```' → logprob: -6.915765285491943
    4. '
' → logprob: -7.040765285491943
    5. 'polygon' → logprob: -7.040765285491943
    6. '_polygon' → logprob: -7.540765285491943
    7. 'poly' → logprob: -7.540765285491943
    8. '_points' → logprob: -8.040764808654785
    9. 'def' → logprob: -8.290764808654785
    10. '#' → logprob: -8.415764808654785

Token 1595: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18884310126304626
    2. '   ' → logprob: -2.063843011856079
    3. 'import' → logprob: -4.563843250274658
    4. '           ' → logprob: -4.688843250274658
    5. 'from' → logprob: -5.438843250274658
    6. '<|end|>' → logprob: -5.438843250274658
    7. ')' → logprob: -5.563843250274658
    8. '(' → logprob: -6.438843250274658
    9. '```' → logprob: -6.938843250274658
    10. ':' → logprob: -6.938843250274658

Token 1596: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07014627009630203
    2. 'the' → logprob: -3.570146322250366
    3. 'points' → logprob: -3.945146322250366
    4. '#' → logprob: -4.945146083831787
    5. 'sorted' → logprob: -5.445146083831787
    6. 'lower' → logprob: -6.195146083831787
    7. '```' → logprob: -6.320146083831787
    8. 'pts' → logprob: -6.695146083831787
    9. 'com' → logprob: -7.320146083831787
    10. '   ' → logprob: -7.570146083831787

Token 1597: ' augmented' (ID: 107192)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5007164478302002
    2. '   ' → logprob: -1.2507164478302002
    3. '
' → logprob: -3.5007164478302
    4. ':' → logprob: -4.250716209411621
    5. '<|end|>' → logprob: -4.250716209411621
    6. '           ' → logprob: -4.625716209411621
    7. ':
' → logprob: -5.375716209411621
    8. '    
' → logprob: -5.375716209411621
    9. ',' → logprob: -5.625716209411621
    10. ')' → logprob: -5.625716209411621

Token 1598: ' by' (ID: 656)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.020431399345398
    2. 'with' → logprob: -1.395431399345398
    3. '_points' → logprob: -1.520431399345398
    4. 'points' → logprob: -2.6454315185546875
    5. ' points' → logprob: -2.8954315185546875
    6. '_pts' → logprob: -4.3954315185546875
    7. '(points' → logprob: -4.5204315185546875
    8. ' by' → logprob: -5.0204315185546875
    9. '<|end|>' → logprob: -5.3954315185546875
    10. '   ' → logprob: -5.6454315185546875

Token 1599: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.562163233757019
    2. ' one' → logprob: -1.437163233757019
    3. 'points' → logprob: -3.0621633529663086
    4. 'one' → logprob: -3.9371633529663086
    5. ' interior' → logprob: -4.187163352966309
    6. '[' → logprob: -4.187163352966309
    7. 'inter' → logprob: -4.312163352966309
    8. ' [' → logprob: -4.437163352966309
    9. ' pts' → logprob: -4.562163352966309
    10. ' inner' → logprob: -4.812163352966309

Token 1600: ' inside' (ID: 6772)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6114963293075562
    2. '       ' → logprob: -1.9864963293075562
    3. '   ' → logprob: -2.1114964485168457
    4. '<|end|>' → logprob: -2.1114964485168457
    5. '.' → logprob: -4.111496448516846
    6. ')' → logprob: -4.111496448516846
    7. '#' → logprob: -4.611496448516846
    8. ',' → logprob: -5.361496448516846
    9. '...' → logprob: -5.361496448516846
    10. '<|end|>' → logprob: -5.611496448516846

Token 1601: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23765821754932404
    2. '<|end|>' → logprob: -2.4876582622528076
    3. '       ' → logprob: -2.9876582622528076
    4. '   ' → logprob: -3.3626582622528076
    5. '           ' → logprob: -4.7376580238342285
    6. ',' → logprob: -4.9876580238342285
    7. '<|end|>' → logprob: -5.3626580238342285
    8. '    
' → logprob: -5.7376580238342285
    9. '.' → logprob: -5.8626580238342285
    10. '#' → logprob: -5.8626580238342285

Token 1602: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3887374699115753
    2. 'continue' → logprob: -1.888737440109253
    3. '       ' → logprob: -2.638737440109253
    4. ' continue' → logprob: -2.888737440109253
    5. '   ' → logprob: -4.138737678527832
    6. '#' → logprob: -4.888737678527832
    7. '<|end|>' → logprob: -5.888737678527832
    8. '```' → logprob: -6.013737678527832
    9. '...' → logprob: -6.513737678527832
    10. '	continue' → logprob: -6.513737678527832

Token 1603: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6504612565040588
    2. ' continue' → logprob: -1.650461196899414
    3. '           ' → logprob: -1.775461196899414
    4. '#' → logprob: -2.775461196899414
    5. '...' → logprob: -3.900461196899414
    6. 'pass' → logprob: -4.525461196899414
    7. '```' → logprob: -4.775461196899414
    8. '       ' → logprob: -5.775461196899414
    9. '               ' → logprob: -5.900461196899414
    10. 'return' → logprob: -6.275461196899414

Token 1604: ' constraints' (ID: 31060)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.06506621837615967
    2. '   ' → logprob: -3.815066337585449
    3. '...' → logprob: -4.690066337585449
    4. ':' → logprob: -4.940066337585449
    5. 'continue' → logprob: -5.190066337585449
    6. ' continue' → logprob: -5.315066337585449
    7. ' remains' → logprob: -6.315066337585449
    8. '.' → logprob: -6.440066337585449
    9. 'contin' → logprob: -6.690066337585449
    10. ')' → logprob: -6.690066337585449

Token 1605: ' small' (ID: 3291)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.09726308286190033
    2. 'continue' → logprob: -2.7222630977630615
    3. ':' → logprob: -4.597262859344482
    4. '   ' → logprob: -5.347262859344482
    5. '           ' → logprob: -5.597262859344482
    6. '       ' → logprob: -5.847262859344482
    7. ':
' → logprob: -6.722262859344482
    8. '	continue' → logprob: -6.847262859344482
    9. ')' → logprob: -7.597262859344482
    10. ' ' → logprob: -7.972262859344482

Token 1606: ' Q' (ID: 1486)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40509727597236633
    2. '       ' → logprob: -1.405097246170044
    3. '
' → logprob: -3.030097246170044
    4. '```' → logprob: -4.655097484588623
    5. '   ' → logprob: -5.155097484588623
    6. 'continue' → logprob: -5.405097484588623
    7. '<|end|>' → logprob: -5.655097484588623
    8. '               ' → logprob: -6.530097484588623
    9. '        
' → logprob: -6.530097484588623
    10. '            
' → logprob: -6.655097484588623

Token 1607: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4031262993812561
    2. '           ' → logprob: -1.1531262397766113
    3. '
' → logprob: -4.528126239776611
    4. '   ' → logprob: -6.653126239776611
    5. '        
' → logprob: -7.028126239776611
    6. '```' → logprob: -7.528126239776611
    7. 'continue' → logprob: -7.528126239776611
    8. ',' → logprob: -7.903126239776611
    9. 'import' → logprob: -7.903126239776611
    10. '               ' → logprob: -8.27812671661377

Token 1608: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9828498959541321
    2. '           ' → logprob: -1.4828498363494873
    3. '       ' → logprob: -1.6078498363494873
    4. 'continue' → logprob: -1.7328498363494873
    5. '   ' → logprob: -4.982850074768066
    6. '#' → logprob: -5.732850074768066
    7. '...' → logprob: -5.982850074768066
    8. ' for' → logprob: -6.607850074768066
    9. '
' → logprob: -6.607850074768066
    10. ' #' → logprob: -7.107850074768066

Token 1609: ' brute' (ID: 128602)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.705570638179779
    2. '...' → logprob: -1.5805706977844238
    3. 'pass' → logprob: -2.205570697784424
    4. 'not' → logprob: -2.205570697784424
    5. '```' → logprob: -3.080570697784424
    6. '           ' → logprob: -4.080570697784424
    7. '   ' → logprob: -5.830570697784424
    8. '
' → logprob: -5.955570697784424
    9. 'next' → logprob: -6.455570697784424
    10. 'for' → logprob: -6.455570697784424

Token 1610: ' force' (ID: 9578)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23846200108528137
    2. '           ' → logprob: -2.738461971282959
    3. 'for' → logprob: -3.113461971282959
    4. 'force' → logprob: -3.613461971282959
    5. '       ' → logprob: -3.863461971282959
    6. '   ' → logprob: -4.613461971282959
    7. 'continue' → logprob: -4.613461971282959
    8. '                   ' → logprob: -4.863461971282959
    9. 'break' → logprob: -5.113461971282959
    10. '```' → logprob: -5.238461971282959

Token 1611: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26404595375061035
    2. '           ' → logprob: -2.0140459537506104
    3. ' for' → logprob: -3.2640459537506104
    4. '<|end|>' → logprob: -4.139045715332031
    5. '   ' → logprob: -4.639045715332031
    6. ' continue' → logprob: -5.014045715332031
    7. '
' → logprob: -5.514045715332031
    8. 'for' → logprob: -5.764045715332031
    9. ',' → logprob: -5.889045715332031
    10. ':' → logprob: -6.014045715332031

Token 1612: ' pruning' (ID: 135775)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5653374195098877
    2. 'import' → logprob: -1.4403374195098877
    3. 'pass' → logprob: -2.3153374195098877
    4. '```' → logprob: -3.0653374195098877
    5. 'break' → logprob: -4.065337181091309
    6. 'from' → logprob: -4.315337181091309
    7. 'com' → logprob: -4.315337181091309
    8. 'k' → logprob: -6.190337181091309
    9. 'for' → logprob: -6.440337181091309
    10. 'sys' → logprob: -7.940337181091309

Token 1613: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2854798138141632
    2. '           ' → logprob: -2.035479784011841
    3. '   ' → logprob: -3.160479784011841
    4. '<|end|>' → logprob: -4.16048002243042
    5. ' for' → logprob: -4.53548002243042
    6. ',' → logprob: -4.91048002243042
    7. '
' → logprob: -5.41048002243042
    8. '```' → logprob: -5.53548002243042
    9. '        
' → logprob: -5.78548002243042
    10. ' continue' → logprob: -5.91048002243042

Token 1614: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11090349406003952
    2. '```' → logprob: -2.98590350151062
    3. '           ' → logprob: -3.48590350151062
    4. '        
' → logprob: -4.985903263092041
    5. 'import' → logprob: -5.360903263092041
    6. '
' → logprob: -6.235903263092041
    7. '    
' → logprob: -6.360903263092041
    8. '   ' → logprob: -6.610903263092041
    9. 'from' → logprob: -6.735903263092041
    10. ' 
' → logprob: -6.985903263092041

Token 1615: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3227044939994812
    2. '           ' → logprob: -1.822704553604126
    3. ' continue' → logprob: -3.572704553604126
    4. ' from' → logprob: -4.072704315185547
    5. 'continue' → logprob: -4.322704315185547
    6. ' pass' → logprob: -4.572704315185547
    7. '
' → logprob: -4.697704315185547
    8. 'from' → logprob: -4.822704315185547
    9. 'pass' → logprob: -5.197704315185547
    10. '   ' → logprob: -5.197704315185547

Token 1616: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21683759987354279
    2. 'from' → logprob: -2.5918376445770264
    3. '       ' → logprob: -3.0918376445770264
    4. 'import' → logprob: -3.7168376445770264
    5. 'points' → logprob: -4.341837406158447
    6. 'continue' → logprob: -4.841837406158447
    7. ' from' → logprob: -5.091837406158447
    8. ' #' → logprob: -5.341837406158447
    9. '#' → logprob: -5.466837406158447
    10. 'inner' → logprob: -5.591837406158447

Token 1617: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12446409463882446
    2. ' continue' → logprob: -2.7494640350341797
    3. 'continue' → logprob: -3.9994640350341797
    4. 'import' → logprob: -4.62446403503418
    5. '
' → logprob: -5.24946403503418
    6. '       ' → logprob: -5.49946403503418
    7. '   ' → logprob: -5.87446403503418
    8. 'points' → logprob: -6.37446403503418
    9. ' points' → logprob: -6.49946403503418
    10. ':' → logprob: -6.62446403503418

Token 1618: ' just' (ID: 1327)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9740678668022156
    2. 'import' → logprob: -2.0990679264068604
    3. ' continue' → logprob: -2.0990679264068604
    4. ' points' → logprob: -2.5990679264068604
    5. ' from' → logprob: -3.0990679264068604
    6. '#' → logprob: -3.0990679264068604
    7. ' #' → logprob: -3.0990679264068604
    8. 'from' → logprob: -3.2240679264068604
    9. 'continue' → logprob: -3.4740679264068604
    10. ' import' → logprob: -3.5990679264068604

Token 1619: ' generate' (ID: 10419)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.25227612257003784
    2. 'continue' → logprob: -2.3772761821746826
    3. 'import' → logprob: -2.5022761821746826
    4. 'from' → logprob: -4.1272759437561035
    5. 'print' → logprob: -4.2522759437561035
    6. 'for' → logprob: -5.1272759437561035
    7. '#' → logprob: -5.7522759437561035
    8. ' pass' → logprob: -6.3772759437561035
    9. 'break' → logprob: -6.5022759437561035
    10. 'try' → logprob: -6.6272759437561035

Token 1620: ' all' (ID: 722)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6870257258415222
    2. 'all' → logprob: -1.687025785446167
    3. 'from' → logprob: -1.812025785446167
    4. 'points' → logprob: -2.562025785446167
    5. 'for' → logprob: -3.187025785446167
    6. '   ' → logprob: -4.812025547027588
    7. 'h' → logprob: -5.437025547027588
    8. 'import' → logprob: -5.562025547027588
    9. 'point' → logprob: -6.062025547027588
    10. '```' → logprob: -6.062025547027588

Token 1621: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0657406598329544
    2. 'points' → logprob: -2.8157405853271484
    3. 'comb' → logprob: -6.315740585327148
    4. ' combinations' → logprob: -6.940740585327148
    5. '(com' → logprob: -8.440740585327148
    6. 'k' → logprob: -8.690740585327148
    7. 'sub' → logprob: -8.815740585327148
    8. 'point' → logprob: -9.315740585327148
    9. 'p' → logprob: -9.565740585327148
    10. 'subset' → logprob: -10.315740585327148

Token 1622: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9024653434753418
    2. ' of' → logprob: -1.4024653434753418
    3. ' for' → logprob: -2.277465343475342
    4. 'of' → logprob: -2.527465343475342
    5. 'for' → logprob: -2.652465343475342
    6. ' in' → logprob: -4.652465343475342
    7. '       ' → logprob: -4.902465343475342
    8. 'from' → logprob: -4.902465343475342
    9. '```' → logprob: -5.027465343475342
    10. 'with' → logprob: -5.152465343475342

Token 1623: ' size' (ID: 2349)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.023772954940796
    2. 'pts' → logprob: -1.148772954940796
    3. 'points' → logprob: -1.773772954940796
    4. 'k' → logprob: -2.148772954940796
    5. 'range' → logprob: -4.023773193359375
    6. 'com' → logprob: -6.148773193359375
    7. 'indices' → logprob: -6.273773193359375
    8. '```' → logprob: -6.273773193359375
    9. '[h' → logprob: -6.523773193359375
    10. 'sorted' → logprob: -6.648773193359375

Token 1624: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00024631983251310885
    2. ' k' → logprob: -9.125246047973633
    3. 'points' → logprob: -10.000246047973633
    4. '```' → logprob: -10.000246047973633
    5. '
' → logprob: -11.000246047973633
    6. '`' → logprob: -11.625246047973633
    7. 'pts' → logprob: -11.625246047973633
    8. '(k' → logprob: -12.875246047973633
    9. '``' → logprob: -12.875246047973633
    10. '{k' → logprob: -13.375246047973633

Token 1625: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19371677935123444
    2. 'from' → logprob: -1.9437167644500732
    3. 'for' → logprob: -4.193717002868652
    4. ' from' → logprob: -4.818717002868652
    5. '       ' → logprob: -5.568717002868652
    6. ' for' → logprob: -5.943717002868652
    7. '
' → logprob: -6.318717002868652
    8. 'import' → logprob: -7.943717002868652
    9. 'points' → logprob: -8.568717002868652
    10. '```' → logprob: -8.568717002868652

Token 1626: ' test' (ID: 1746)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21806088089942932
    2. 'import' → logprob: -2.8430609703063965
    3. 'pass' → logprob: -3.8430609703063965
    4. 'check' → logprob: -3.8430609703063965
    5. 'break' → logprob: -3.8430609703063965
    6. ' continue' → logprob: -3.9680609703063965
    7. 'for' → logprob: -4.2180609703063965
    8. '```' → logprob: -4.4680609703063965
    9. 'filter' → logprob: -4.5930609703063965
    10. '
' → logprob: -6.0930609703063965

Token 1627: ' convex' (ID: 142423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.00620436668396
    2. '       ' → logprob: -1.50620436668396
    3. '           ' → logprob: -2.38120436668396
    4. 'from' → logprob: -2.50620436668396
    5. ' for' → logprob: -2.63120436668396
    6. 'com' → logprob: -2.88120436668396
    7. 'points' → logprob: -3.00620436668396
    8. '(com' → logprob: -4.131204605102539
    9. '```' → logprob: -4.756204605102539
    10. ' from' → logprob: -5.381204605102539

Token 1628: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5592138767242432
    2. 'for' → logprob: -1.6842138767242432
    3. '           ' → logprob: -1.9342138767242432
    4. 'from' → logprob: -2.809213876724243
    5. ' for' → logprob: -3.934213876724243
    6. 'points' → logprob: -5.059213638305664
    7. '
' → logprob: -6.309213638305664
    8. 'import' → logprob: -6.559213638305664
    9. '```' → logprob: -6.559213638305664
    10. ':' → logprob: -6.559213638305664

Token 1629: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.014627055265009403
    2. 'continue' → logprob: -4.639626979827881
    3. 'polygon' → logprob: -6.014626979827881
    4. ' area' → logprob: -7.014626979827881
    5. 'is' → logprob: -7.639626979827881
    6. '
' → logprob: -8.139627456665039
    7. '#' → logprob: -9.264627456665039
    8. 'calculate' → logprob: -9.264627456665039
    9. 'not' → logprob: -9.764627456665039
    10. 'compute' → logprob: -9.764627456665039

Token 1630: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6303895711898804
    2. '       ' → logprob: -1.1303895711898804
    3. '
' → logprob: -2.50538969039917
    4. ' for' → logprob: -4.25538969039917
    5. ':
' → logprob: -4.50538969039917
    6. 'for' → logprob: -4.63038969039917
    7. 'from' → logprob: -5.13038969039917
    8. '.' → logprob: -5.88038969039917
    9. 'import' → logprob: -5.88038969039917
    10. ':' → logprob: -5.88038969039917

Token 1631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001595676294527948
    2. '
' → logprob: -6.876595497131348
    3. ' for' → logprob: -9.126595497131348
    4. 'for' → logprob: -9.126595497131348
    5. '```' → logprob: -9.251595497131348
    6. '       ' → logprob: -9.501595497131348
    7. '            
' → logprob: -10.001595497131348
    8. 'continue' → logprob: -10.001595497131348
    9. ' continue' → logprob: -10.501595497131348
    10. '               ' → logprob: -11.001595497131348

Token 1632: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5936458110809326
    2. '       ' → logprob: -1.4686458110809326
    3. 'from' → logprob: -1.8436458110809326
    4. ' from' → logprob: -3.2186458110809326
    5. 'for' → logprob: -4.843646049499512
    6. '
' → logprob: -5.343646049499512
    7. ' for' → logprob: -5.718646049499512
    8. '```' → logprob: -6.593646049499512
    9. 'import' → logprob: -7.218646049499512
    10. '               ' → logprob: -8.343646049499512

Token 1633: ' But' (ID: 3072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3368094861507416
    2. '       ' → logprob: -1.711809515953064
    3. 'for' → logprob: -2.9618093967437744
    4. ' from' → logprob: -3.8368093967437744
    5. '           ' → logprob: -3.9618093967437744
    6. 'import' → logprob: -5.2118096351623535
    7. ' for' → logprob: -5.8368096351623535
    8. '
' → logprob: -6.8368096351623535
    9. '```' → logprob: -6.8368096351623535
    10. '   ' → logprob: -7.0868096351623535

Token 1634: ' we' (ID: 581)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.472826212644577
    2. ' continue' → logprob: -1.7228262424468994
    3. 'pass' → logprob: -2.4728262424468994
    4. 'import' → logprob: -3.0978262424468994
    5. '#' → logprob: -3.4728262424468994
    6. '           ' → logprob: -4.47282600402832
    7. 'from' → logprob: -4.72282600402832
    8. 'break' → logprob: -5.47282600402832
    9. 'False' → logprob: -6.47282600402832
    10. 'True' → logprob: -6.47282600402832

Token 1635: ' must' (ID: 2804)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5820820927619934
    2. ' continue' → logprob: -0.9570820927619934
    3. '   ' → logprob: -3.8320820331573486
    4. '
' → logprob: -4.457082271575928
    5. 'import' → logprob: -5.082082271575928
    6. ' will' → logprob: -5.582082271575928
    7. '       ' → logprob: -6.332082271575928
    8. '           ' → logprob: -6.332082271575928
    9. '	continue' → logprob: -6.707082271575928
    10. 'will' → logprob: -6.957082271575928

Token 1636: ' prune' (ID: 140388)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.44974368810653687
    2. 'import' → logprob: -1.0747437477111816
    3. ' continue' → logprob: -4.574743747711182
    4. 'return' → logprob: -6.074743747711182
    5. 'break' → logprob: -6.199743747711182
    6. '```' → logprob: -6.199743747711182
    7. 'pass' → logprob: -7.324743747711182
    8. ' import' → logprob: -7.449743747711182
    9. 'indent' → logprob: -7.574743747711182
    10. '   ' → logprob: -7.699743747711182

Token 1637: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2984095811843872
    2. '
' → logprob: -1.4234095811843872
    3. '           ' → logprob: -1.9234095811843872
    4. ' continue' → logprob: -2.1734094619750977
    5. ' for' → logprob: -3.0484094619750977
    6. ' 
' → logprob: -3.5484094619750977
    7. 'continue' → logprob: -3.9234094619750977
    8. '            
' → logprob: -4.298409461975098
    9. '<|end|>' → logprob: -4.298409461975098
    10. '<|end|>' → logprob: -4.423409461975098

Token 1638: ' area' (ID: 3624)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.9876456260681152
    2. 'import' → logprob: -1.9876456260681152
    3. 'continue' → logprob: -2.1126456260681152
    4. '
' → logprob: -2.2376456260681152
    5. 'continu' → logprob: -3.4876456260681152
    6. 'points' → logprob: -3.7376456260681152
    7. 'area' → logprob: -3.8626456260681152
    8. 'h' → logprob: -3.9876456260681152
    9. 'early' → logprob: -3.9876456260681152
    10. '```' → logprob: -4.112645626068115

Token 1639: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48856550455093384
    2. '           ' → logprob: -1.363565444946289
    3. 'from' → logprob: -2.738565444946289
    4. ' from' → logprob: -3.738565444946289
    5. 'import' → logprob: -4.363565444946289
    6. '<|end|>' → logprob: -4.863565444946289
    7. '   ' → logprob: -5.113565444946289
    8. '
' → logprob: -5.863565444946289
    9. ' for' → logprob: -6.363565444946289
    10. ' continue' → logprob: -6.488565444946289

Token 1640: ' the' (ID: 290)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1806282997131348
    2. '           ' → logprob: -1.4306282997131348
    3. ' from' → logprob: -2.4306282997131348
    4. '       ' → logprob: -2.4306282997131348
    5. ' for' → logprob: -2.6806282997131348
    6. '
' → logprob: -3.0556282997131348
    7. ' points' → logprob: -3.4306282997131348
    8. 'from' → logprob: -3.5556282997131348
    9. 'continue' → logprob: -3.5556282997131348
    10. 'import' → logprob: -4.305628299713135

Token 1641: ' minimal' (ID: 19957)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6939750909805298
    2. ' for' → logprob: -2.0689749717712402
    3. ' continue' → logprob: -2.1939749717712402
    4. ' points' → logprob: -2.3189749717712402
    5. 'for' → logprob: -3.0689749717712402
    6. ' rest' → logprob: -3.1939749717712402
    7. '...' → logprob: -3.3189749717712402
    8. 'continue' → logprob: -3.3189749717712402
    9. ' #' → logprob: -3.4439749717712402
    10. ' import' → logprob: -3.5689749717712402

Token 1642: ' polygon' (ID: 65081)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.496599942445755
    2. 'area' → logprob: -1.3715999126434326
    3. ' area' → logprob: -2.1215999126434326
    4. '_' → logprob: -5.246600151062012
    5. '
' → logprob: -5.246600151062012
    6. '-area' → logprob: -7.246600151062012
    7. '```' → logprob: -7.246600151062012
    8. ')' → logprob: -7.496600151062012
    9. '_comb' → logprob: -7.621600151062012
    10. '_possible' → logprob: -7.746600151062012

Token 1643: ' must' (ID: 2804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1644: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3777250647544861
    2. 'be' → logprob: -1.6277251243591309
    3. ' have' → logprob: -2.752725124359131
    4. 'have' → logprob: -3.252725124359131
    5. ' not' → logprob: -5.002725124359131
    6. 'not' → logprob: -5.627725124359131
    7. 'continue' → logprob: -6.502725124359131
    8. ' continue' → logprob: -7.252725124359131
    9. ' include' → logprob: -7.252725124359131
    10. 'include' → logprob: -7.877725124359131

Token 1645: ' a' (ID: 261)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.41256582736968994
    2. 'conv' → logprob: -2.5375657081604004
    3. 'less' → logprob: -2.9125657081604004
    4. '```' → logprob: -2.9125657081604004
    5. '
' → logprob: -3.9125657081604004
    6. ' smaller' → logprob: -4.0375657081604
    7. 'small' → logprob: -4.5375657081604
    8. 'at' → logprob: -4.6625657081604
    9. ' convex' → logprob: -4.6625657081604
    10. 'k' → logprob: -4.7875657081604

Token 1646: ' convex' (ID: 142423)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.3076014816761017
    2. ' subset' → logprob: -1.8076014518737793
    3. 'conv' → logprob: -3.3076014518737793
    4. 'h' → logprob: -4.057601451873779
    5. ' convex' → logprob: -4.182601451873779
    6. 'k' → logprob: -5.557601451873779
    7. 'polygon' → logprob: -5.932601451873779
    8. ')' → logprob: -6.057601451873779
    9. 'valid' → logprob: -6.057601451873779
    10. 'poly' → logprob: -6.182601451873779

Token 1647: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -1.2348397970199585
    2. ')' → logprob: -1.8598397970199585
    3. ' polygon' → logprob: -1.9848397970199585
    4. '
' → logprob: -2.109839916229248
    5. '(
' → logprob: -3.734839916229248
    6. '_polygon' → logprob: -3.734839916229248
    7. ')
' → logprob: -3.859839916229248
    8. '_' → logprob: -4.234839916229248
    9. '           ' → logprob: -4.234839916229248
    10. 'poly' → logprob: -4.234839916229248

Token 1648: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16114665567874908
    2. '       ' → logprob: -2.411146640777588
    3. '
' → logprob: -4.161146640777588
    4. 'import' → logprob: -5.161146640777588
    5. '<|end|>' → logprob: -5.161146640777588
    6. '   ' → logprob: -5.411146640777588
    7. 'from' → logprob: -5.411146640777588
    8. ',' → logprob: -5.411146640777588
    9. ' from' → logprob: -6.036146640777588
    10. '               ' → logprob: -6.286146640777588

Token 1649: ' points' (ID: 5571)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.44392871856689453
    2. 'points' → logprob: -1.8189287185668945
    3. ' area' → logprob: -2.3189287185668945
    4. 'all' → logprob: -3.9439287185668945
    5. 'vertices' → logprob: -3.9439287185668945
    6. '```' → logprob: -3.9439287185668945
    7. 'sm' → logprob: -4.8189287185668945
    8. '
' → logprob: -4.8189287185668945
    9. ' points' → logprob: -5.0689287185668945
    10. 'k' → logprob: -5.1939287185668945

Token 1650: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.152414083480835
    2. ' of' → logprob: -2.277414083480835
    3. ' =' → logprob: -2.402414083480835
    4. ' that' → logprob: -2.527414083480835
    5. ' in' → logprob: -3.152414083480835
    6. '.' → logprob: -3.277414083480835
    7. ',' → logprob: -3.402414083480835
    8. '=' → logprob: -3.402414083480835
    9. '<|end|>' → logprob: -3.402414083480835
    10. '
' → logprob: -3.527414083480835

Token 1651: ' convex' (ID: 142423)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.20759916305541992
    2. 'poly' → logprob: -2.58259916305542
    3. 'comb' → logprob: -2.58259916305542
    4. 'h' → logprob: -4.70759916305542
    5. 'sorted' → logprob: -4.83259916305542
    6. 'com' → logprob: -4.83259916305542
    7. '```' → logprob: -5.70759916305542
    8. 'the' → logprob: -6.33259916305542
    9. 'points' → logprob: -6.45759916305542
    10. 'subset' → logprob: -6.70759916305542

Token 1652: ' order' (ID: 2569)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.05514201149344444
    2. 'h' → logprob: -2.9301419258117676
    3. '_' → logprob: -9.680142402648926
    4. '```' → logprob: -9.930142402648926
    5. ' hull' → logprob: -10.180142402648926
    6. '_poly' → logprob: -10.930142402648926
    7. '
' → logprob: -11.430142402648926
    8. '_comb' → logprob: -11.430142402648926
    9. 'ity' → logprob: -11.430142402648926
    10. 'poly' → logprob: -11.555142402648926

Token 1653: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6329165101051331
    2. '           ' → logprob: -1.6329164505004883
    3. 'from' → logprob: -2.0079164505004883
    4. 'import' → logprob: -2.8829164505004883
    5. ' from' → logprob: -2.8829164505004883
    6. '
' → logprob: -5.007916450500488
    7. ' for' → logprob: -5.382916450500488
    8. '   ' → logprob: -5.507916450500488
    9. '        
' → logprob: -5.757916450500488
    10. 'for' → logprob: -6.757916450500488

Token 1654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33573856949806213
    2. '       ' → logprob: -1.4607385396957397
    3. '```' → logprob: -4.460738658905029
    4. '   ' → logprob: -4.960738658905029
    5. ' for' → logprob: -5.085738658905029
    6. 'from' → logprob: -5.335738658905029
    7. 'for' → logprob: -5.710738658905029
    8. '
' → logprob: -5.960738658905029
    9. ' from' → logprob: -6.210738658905029
    10. '               ' → logprob: -6.335738658905029

Token 1655: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16450829803943634
    2. '           ' → logprob: -2.78950834274292
    3. 'from' (adapté à ' from') → logprob: -3.28950834274292
    4. ' from' → logprob: -3.41450834274292
    5. ' for' → logprob: -5.41450834274292
    6. 'import' → logprob: -5.41450834274292
    7. '
' → logprob: -5.53950834274292
    8. '   ' → logprob: -5.91450834274292
    9. 'for' → logprob: -6.91450834274292
    10. '        
' → logprob: -7.16450834274292

Token 1656: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -6.2729995988775045e-06
    2. 'cmath' → logprob: -13.000006675720215
    3. 'it' → logprob: -13.125006675720215
    4. ' math' → logprob: -13.250006675720215
    5. '(math' → logprob: -16.6250057220459
    6. 'collections' → logprob: -17.2500057220459
    7. '_math' → logprob: -17.6250057220459
    8. '.math' → logprob: -18.2500057220459
    9. '
' → logprob: -18.3750057220459
    10. 'heap' → logprob: -18.3750057220459

Token 1657: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33442482352256775
    2. 'import' → logprob: -1.3344248533248901
    3. ' import' → logprob: -4.83442497253418
    4. '.import' → logprob: -5.08442497253418
    5. '```' → logprob: -5.83442497253418
    6. '.pyplot' → logprob: -7.08442497253418
    7. '.atan' → logprob: -7.45942497253418
    8. '.sqrt' → logprob: -7.95942497253418
    9. '	import' → logprob: -8.08442497253418
    10. '<|end|>' → logprob: -8.33442497253418

Token 1658: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.00011331788846291602
    2. '.atan' → logprob: -9.750113487243652
    3. 'import' → logprob: -10.125113487243652
    4. 'sqrt' → logprob: -12.125113487243652
    5. 'inf' → logprob: -12.875113487243652
    6. 'fabs' → logprob: -13.125113487243652
    7. 'acos' → logprob: -13.375113487243652
    8. '```' → logprob: -13.875113487243652
    9. 'at' → logprob: -14.125113487243652
    10. 'pi' → logprob: -14.500113487243652

Token 1659: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. 'import' → logprob: -12.250008583068848
    3. '₂' → logprob: -12.625008583068848
    4. '```' → logprob: -15.750008583068848
    5. '
' → logprob: -16.50000762939453
    6. '_' → logprob: -17.25000762939453
    7. 'from' → logprob: -17.25000762939453
    8. '²' → logprob: -17.75000762939453
    9. '۲' → logprob: -19.00000762939453
    10. '``' → logprob: -19.12500762939453

Token 1660: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0775257796049118
    2. ',' → logprob: -4.202525615692139
    3. '   ' → logprob: -4.577525615692139
    4. ' for' → logprob: -4.577525615692139
    5. '       ' → logprob: -4.952525615692139
    6. '           ' → logprob: -4.952525615692139
    7. ' 
' → logprob: -5.327525615692139
    8. '<|end|>' → logprob: -5.452525615692139
    9. 'import' → logprob: -5.577525615692139
    10. '    
' → logprob: -6.077525615692139

Token 1661: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6434856653213501
    2. '       ' → logprob: -1.39348566532135
    3. '           ' → logprob: -2.2684855461120605
    4. '   ' → logprob: -2.3934855461120605
    5. 'import' → logprob: -4.8934855461120605
    6. ' for' → logprob: -5.0184855461120605
    7. '```' → logprob: -5.3934855461120605
    8. '    
' → logprob: -5.7684855461120605
    9. '        
' → logprob: -6.1434855461120605
    10. 'for' → logprob: -6.1434855461120605

Token 1662: ' comb' (ID: 4134)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6147938966751099
    2. 'for' → logprob: -0.9897938966751099
    3. '       ' → logprob: -3.1147937774658203
    4. '
' → logprob: -4.11479377746582
    5. '           ' → logprob: -4.73979377746582
    6. 'continue' → logprob: -4.86479377746582
    7. ' points' → logprob: -5.98979377746582
    8. ' continue' → logprob: -6.11479377746582
    9. 'points' → logprob: -6.23979377746582
    10. '   ' → logprob: -6.98979377746582

Token 1663: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2370949536561966
    2. 's' → logprob: -2.3620948791503906
    3. '(' → logprob: -2.9870948791503906
    4. '[' → logprob: -3.9870948791503906
    5. 'ination' → logprob: -3.9870948791503906
    6. 'inations' → logprob: -4.362094879150391
    7. '[i' → logprob: -4.987094879150391
    8. '(i' → logprob: -6.237094879150391
    9. 'inator' → logprob: -6.987094879150391
    10. 'is' → logprob: -7.237094879150391

Token 1664: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34566134214401245
    2. ' =' → logprob: -1.7206614017486572
    3. '=' → logprob: -2.8456614017486572
    4. 'ination' → logprob: -3.3456614017486572
    5. 'inations' → logprob: -5.845661163330078
    6. 'for' → logprob: -5.845661163330078
    7. 'i' → logprob: -6.220661163330078
    8. '(' → logprob: -6.595661163330078
    9. '=[]' → logprob: -6.845661163330078
    10. ',' → logprob: -7.095661163330078

Token 1665: ' list' (ID: 1562)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.034847188740968704
    2. 'list' → logprob: -4.534847259521484
    3. ' combinations' → logprob: -4.784847259521484
    4. ' list' → logprob: -5.159847259521484
    5. '(com' → logprob: -5.909847259521484
    6. '[' → logprob: -6.409847259521484
    7. 'comb' → logprob: -6.784847259521484
    8. 'next' → logprob: -6.784847259521484
    9. ' [' → logprob: -6.909847259521484
    10. ' next' → logprob: -7.284847259521484

Token 1666: '(range' (ID: 50017)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.004117581062018871
    2. '(range' → logprob: -5.879117488861084
    3. 'com' → logprob: -6.754117488861084
    4. '(sorted' → logprob: -10.129117965698242
    5. '(points' → logprob: -10.629117965698242
    6. '()' → logprob: -10.629117965698242
    7. 'range' → logprob: -11.004117965698242
    8. '(' → logprob: -11.379117965698242
    9. '[' → logprob: -11.879117965698242
    10. 'points' → logprob: -12.629117965698242

Token 1667: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.28016480803489685
    2. 'k' → logprob: -1.6551648378372192
    3. '(N' → logprob: -3.7801647186279297
    4. 'N' → logprob: -4.15516471862793
    5. '(' → logprob: -4.65516471862793
    6. '0' → logprob: -6.03016471862793
    7. '(n' → logprob: -6.53016471862793
    8. ')' → logprob: -7.65516471862793
    9. 'n' → logprob: -8.65516471862793
    10. '(len' → logprob: -8.78016471862793

Token 1668: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03362852334976196
    2. '-' → logprob: -3.783628463745117
    3. ')
' → logprob: -5.158628463745117
    4. '+' → logprob: -6.408628463745117
    5. '))' → logprob: -6.408628463745117
    6. '[-' → logprob: -7.783628463745117
    7. ' -' → logprob: -8.158628463745117
    8. '[' → logprob: -9.033628463745117
    9. ')[' → logprob: -9.533628463745117
    10. '])' → logprob: -9.908628463745117

Token 1669: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1670: ' min' (ID: 1349)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.053274393081665
    2. '
' → logprob: -1.428274393081665
    3. '   ' → logprob: -1.553274393081665
    4. 'while' → logprob: -1.928274393081665
    5. ' 
' → logprob: -4.303274154663086
    6. '	while' → logprob: -4.678274154663086
    7. '<|end|>' → logprob: -5.178274154663086
    8. '    
' → logprob: -5.678274154663086
    9. '```' → logprob: -5.803274154663086
    10. '[' → logprob: -6.178274154663086

Token 1671: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.0002836232597474009
    2. '_' → logprob: -8.375283241271973
    3. '_token' → logprob: -10.875283241271973
    4. '_space' → logprob: -11.000283241271973
    5. ' _' → logprob: -12.250283241271973
    6. '_angle' → logprob: -12.500283241271973
    7. '_tokens' → logprob: -13.500283241271973
    8. '```' → logprob: -14.375283241271973
    9. '_are' → logprob: -14.500283241271973
    10. '_amount' → logprob: -14.500283241271973

Token 1672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28127139806747437
    2. '=' → logprob: -1.4062714576721191
    3. ',' → logprob: -10.156270980834961
    4. '=None' → logprob: -10.156270980834961
    5. ')' → logprob: -11.656270980834961
    6. '<|end|>' → logprob: -11.656270980834961
    7. ' =
' → logprob: -11.906270980834961
    8. ' None' → logprob: -12.156270980834961
    9. ' ' → logprob: -12.281270980834961
    10. 'None' → logprob: -12.656270980834961

Token 1673: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0008627458591945469
    2. ' None' → logprob: -7.7508625984191895
    3. 'float' → logprob: -7.7508625984191895
    4. '1' → logprob: -14.500863075256348
    5. '   ' → logprob: -14.875863075256348
    6. '10' → logprob: -15.000863075256348
    7. '999' → logprob: -16.12586212158203
    8. ' float' → logprob: -16.25086212158203
    9. '100' → logprob: -16.62586212158203
    10. '(None' → logprob: -17.12586212158203

Token 1674: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1675: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1676: ' min' (ID: 1349)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.055508017539978
    2. 'while' → logprob: -1.180508017539978
    3. '```' → logprob: -2.3055081367492676
    4. ' while' → logprob: -2.6805081367492676
    5. 'continue' → logprob: -2.8055081367492676
    6. ' from' → logprob: -3.3055081367492676
    7. 'for' → logprob: -4.305508136749268
    8. '<|end|>' → logprob: -4.430508136749268
    9. '   ' → logprob: -4.805508136749268
    10. 'import' → logprob: -5.180508136749268

Token 1677: '_poly' (ID: 99075)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.055127911269664764
    2. '_' → logprob: -3.1801278591156006
    3. '_comb' → logprob: -5.05512809753418
    4. '_com' → logprob: -5.93012809753418
    5. '_poly' → logprob: -6.05512809753418
    6. '_
' → logprob: -9.30512809753418
    7. ' _' → logprob: -9.55512809753418
    8. '_pol' → logprob: -10.18012809753418
    9. '_\' → logprob: -10.30512809753418
    10. '_token' → logprob: -10.55512809753418

Token 1678: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10118667781352997
    2. '=' → logprob: -2.351186752319336
    3. '<|end|>' → logprob: -7.601186752319336
    4. '=None' → logprob: -8.851186752319336
    5. ')' → logprob: -9.726186752319336
    6. ',' → logprob: -9.976186752319336
    7. '=[]' → logprob: -9.976186752319336
    8. ' ' → logprob: -10.351186752319336
    9. '[' → logprob: -10.851186752319336
    10. '_token' → logprob: -11.476186752319336

Token 1679: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0063149393536150455
    2. ' None' → logprob: -5.131314754486084
    3. '[]' → logprob: -7.881314754486084
    4. '[' → logprob: -12.756315231323242
    5. '[]
' → logprob: -13.256315231323242
    6. '(None' → logprob: -13.881315231323242
    7. ' []' → logprob: -14.256315231323242
    8. 'False' → logprob: -14.631315231323242
    9. '   ' → logprob: -15.006315231323242
    10. '_None' → logprob: -15.381315231323242

Token 1680: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1681: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4584126472473145
    2. '   ' → logprob: -1.4584126472473145
    3. 'from' → logprob: -2.3334126472473145
    4. '<|end|>' → logprob: -2.5834126472473145
    5. '```' → logprob: -2.7084126472473145
    6. '    
' → logprob: -2.8334126472473145
    7. ' from' → logprob: -2.9584126472473145
    8. ' 
' → logprob: -3.3334126472473145
    9. '	
' → logprob: -3.8334126472473145
    10. '	from' → logprob: -4.4584126472473145

Token 1682: ' def' (ID: 1056)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5702911615371704
    2. ' from' → logprob: -1.9452911615371704
    3. '   ' → logprob: -2.070291042327881
    4. ' for' → logprob: -2.195291042327881
    5. 'for' → logprob: -2.695291042327881
    6. '
' → logprob: -2.695291042327881
    7. ' while' → logprob: -2.695291042327881
    8. '       ' → logprob: -2.820291042327881
    9. 'while' → logprob: -2.945291042327881
    10. '           ' → logprob: -3.820291042327881

Token 1683: ' points' (ID: 5571)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.44798168540000916
    2. 'search' → logprob: -2.322981595993042
    3. ' back' → logprob: -2.822981595993042
    4. 'check' → logprob: -2.822981595993042
    5. 'valid' → logprob: -3.572981595993042
    6. 'try' → logprob: -3.697981595993042
    7. 'br' → logprob: -3.697981595993042
    8. 'dfs' → logprob: -3.947981595993042
    9. 'can' → logprob: -4.572981834411621
    10. 'next' → logprob: -4.697981834411621

Token 1684: '_order' (ID: 17446)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.495673269033432
    2. '(points' → logprob: -2.370673179626465
    3. '_subset' → logprob: -3.495673179626465
    4. '_to' → logprob: -3.620673179626465
    5. '():
' → logprob: -3.620673179626465
    6. '=' → logprob: -3.745673179626465
    7. '_next' → logprob: -3.870673179626465
    8. '_inside' → logprob: -3.995673179626465
    9. '_on' → logprob: -4.120673179626465
    10. '_com' → logprob: -4.370673179626465

Token 1685: '_cc' (ID: 69524)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.07046917825937271
    2. '(points' → logprob: -3.6954691410064697
    3. '(p' → logprob: -4.445469379425049
    4. '=' → logprob: -4.695469379425049
    5. '(pol' → logprob: -4.820469379425049
    6. 'ed' → logprob: -5.445469379425049
    7. '(com' → logprob: -6.195469379425049
    8. '(' → logprob: -6.445469379425049
    9. '(
' → logprob: -6.820469379425049
    10. 'ing' → logprob: -6.945469379425049

Token 1686: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.248469718324486e-05
    2. 'W' → logprob: -11.000022888183594
    3. 'wh' → logprob: -13.000022888183594
    4. 'def' → logprob: -14.375022888183594
    5. '```' → logprob: -14.750022888183594
    6. 'wx' → logprob: -15.000022888183594
    7. '_w' → logprob: -15.125022888183594
    8. '(w' → logprob: -15.250022888183594
    9. 'cw' → logprob: -15.500022888183594
    10. 'wd' → logprob: -15.625022888183594

Token 1687: '(' (ID: 7)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.07081818580627441
    2. '(points' → logprob: -3.4458181858062744
    3. '(p' → logprob: -4.070817947387695
    4. '(' → logprob: -4.570817947387695
    5. '(com' → logprob: -4.945817947387695
    6. '(pol' → logprob: -6.570817947387695
    7. '(point' → logprob: -8.945817947387695
    8. '):' → logprob: -9.320817947387695
    9. '():' → logprob: -9.570817947387695
    10. '(
' → logprob: -10.320817947387695

Token 1688: 'pts' (ID: 24040)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.11211676895618439
    2. 'points' → logprob: -2.362116813659668
    3. 'p' → logprob: -4.737116813659668
    4. '(poly' → logprob: -6.737116813659668
    5. 'pts' → logprob: -6.862116813659668
    6. '(points' → logprob: -7.737116813659668
    7. ' poly' → logprob: -9.112116813659668
    8. '(p' → logprob: -9.612116813659668
    9. '
' → logprob: -10.237116813659668
    10. ')' → logprob: -10.487116813659668

Token 1689: '_sel' (ID: 74938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47764232754707336
    2. '):
' → logprob: -1.602642297744751
    3. '[i' → logprob: -3.102642297744751
    4. '[
' → logprob: -3.227642297744751
    5. '):' → logprob: -3.352642297744751
    6. '(com' → logprob: -4.35264253616333
    7. '[p' → logprob: -4.60264253616333
    8. ',' → logprob: -4.85264253616333
    9. ':' → logprob: -5.60264253616333
    10. '   ' → logprob: -5.97764253616333

Token 1690: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4789353609085083
    2. '):' → logprob: -0.9789353609085083
    3. ',' → logprob: -5.478935241699219
    4. ')' → logprob: -8.478935241699219
    5. '[' → logprob: -8.853935241699219
    6. '[]):' → logprob: -9.728935241699219
    7. '   ' → logprob: -9.978935241699219
    8. '):

' → logprob: -10.228935241699219
    9. '):
' → logprob: -10.478935241699219
    10. '_tokens' → logprob: -10.853935241699219

Token 1691: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.970630943775177
    2. '(p' → logprob: -1.2206308841705322
    3. ':
' → logprob: -2.8456308841705322
    4. '(points' → logprob: -2.8456308841705322
    5. '[' → logprob: -2.9706308841705322
    6. '(' → logprob: -3.8456308841705322
    7. '```' → logprob: -3.8456308841705322
    8. '):
' → logprob: -4.220631122589111
    9. '   ' → logprob: -4.220631122589111
    10. '       ' → logprob: -4.720631122589111

Token 1692: ' cx' (ID: 44448)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3705229759216309
    2. ' from' → logprob: -1.4955229759216309
    3. 'from' → logprob: -1.7455229759216309
    4. '               ' → logprob: -1.7455229759216309
    5. '                   ' → logprob: -2.870522975921631
    6. '   ' → logprob: -3.995522975921631
    7. 'points' → logprob: -3.995522975921631
    8. ' points' → logprob: -4.245522975921631
    9. ' return' → logprob: -4.870522975921631
    10. 'return' → logprob: -4.870522975921631

Token 1693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1471799612045288
    2. ' =' → logprob: -2.0221800804138184
    3. ',' → logprob: -6.022180080413818
    4. ')' → logprob: -6.522180080413818
    5. '_' → logprob: -8.02217960357666
    6. '=
' → logprob: -9.27217960357666
    7. '   ' → logprob: -10.14717960357666
    8. ' =
' → logprob: -10.27217960357666
    9. ')=' → logprob: -11.27217960357666
    10. 'x' → logprob: -11.39717960357666

Token 1694: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01625301130115986
    2. ' sum' → logprob: -4.1412529945373535
    3. '(sum' → logprob: -8.516253471374512
    4. '0' → logprob: -11.641253471374512
    5. '=sum' → logprob: -12.891253471374512
    6. '
' → logprob: -13.141253471374512
    7. '	sum' → logprob: -13.766253471374512
    8. '   ' → logprob: -13.891253471374512
    9. 'cx' → logprob: -13.891253471374512
    10. '(
' → logprob: -14.766253471374512

Token 1695: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6899611353874207
    2. '(' → logprob: -1.0649611949920654
    3. 'p' → logprob: -2.0649611949920654
    4. ' (' → logprob: -5.064960956573486
    5. 'pts' → logprob: -5.314960956573486
    6. '(cx' → logprob: -5.439960956573486
    7. '(
' → logprob: -5.564960956573486
    8. '(pt' → logprob: -6.189960956573486
    9. '(points' → logprob: -6.439960956573486
    10. '1' → logprob: -6.689960956573486

Token 1696: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002134079346433282
    2. '(' → logprob: -7.502133846282959
    3. 'x' → logprob: -7.752133846282959
    4. ')' → logprob: -8.002134323120117
    5. '```' → logprob: -8.502134323120117
    6. ')[' → logprob: -9.252134323120117
    7. '(x' → logprob: -9.377134323120117
    8. '(p' → logprob: -10.127134323120117
    9. '[i' → logprob: -10.127134323120117
    10. '[
' → logprob: -10.127134323120117

Token 1697: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013336940901353955
    2. '[' → logprob: -6.751333713531494
    3. '1' → logprob: -9.126333236694336
    4. 'x' → logprob: -10.251333236694336
    5. ' ' → logprob: -11.626333236694336
    6. '```' → logprob: -12.501333236694336
    7. 'i' → logprob: -13.876333236694336
    8. '   ' → logprob: -14.251333236694336
    9. '][' → logprob: -14.376333236694336
    10. ')' → logprob: -14.501333236694336

Token 1698: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11359535157680511
    2. ' for' → logprob: -2.4885952472686768
    3. ']' → logprob: -3.7385952472686768
    4. ')' → logprob: -8.113595008850098
    5. '	for' → logprob: -9.488595008850098
    6. '```' → logprob: -10.113595008850098
    7. '
' → logprob: -10.363595008850098
    8. '],' → logprob: -10.863595008850098
    9. '])' → logprob: -11.613595008850098
    10. '   ' → logprob: -11.613595008850098

Token 1699: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09120188653469086
    2. ' for' → logprob: -2.4662017822265625
    3. '-' → logprob: -7.3412017822265625
    4. ')' → logprob: -7.4662017822265625
    5. ',' → logprob: -8.091201782226562
    6. '+' → logprob: -8.841201782226562
    7. ',p' → logprob: -9.216201782226562
    8. 'p' → logprob: -9.216201782226562
    9. '```' → logprob: -9.591201782226562
    10. ')+' → logprob: -10.216201782226562

Token 1700: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3868931531906128
    2. ' p' → logprob: -1.1368931531906128
    3. '_' → logprob: -12.011893272399902
    4. '_p' → logprob: -12.636893272399902
    5. ')p' → logprob: -13.136893272399902
    6. ' ' → logprob: -13.261893272399902
    7. '	p' → logprob: -13.386893272399902
    8. ',p' → logprob: -13.636893272399902
    9. ')' → logprob: -13.761893272399902
    10. '<|end|>' → logprob: -14.136893272399902

Token 1701: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4780045747756958
    2. 'in' → logprob: -0.9780045747756958
    3. ',p' → logprob: -5.853004455566406
    4. ',' → logprob: -7.353004455566406
    5. ')' → logprob: -8.478004455566406
    6. ' p' → logprob: -9.103004455566406
    7. 'p' → logprob: -9.978004455566406
    8. '
' → logprob: -12.353004455566406
    9. '(p' → logprob: -12.478004455566406
    10. ' ' → logprob: -12.603004455566406

Token 1702: ' pts' (ID: 66515)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3134040832519531
    2. 'pts' → logprob: -1.3134040832519531
    3. 'pt' → logprob: -10.063404083251953
    4. ' p' → logprob: -10.063404083251953
    5. ' pts' → logprob: -10.063404083251953
    6. 'points' → logprob: -11.563404083251953
    7. '_pts' → logprob: -13.313404083251953
    8. 'ps' → logprob: -14.188404083251953
    9. '
' → logprob: -14.563404083251953
    10. 'px' → logprob: -14.813404083251953

Token 1703: '_sel' (ID: 74938)
  Prédit: '_sel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sel' → logprob: -0.0740848034620285
    2. ')' → logprob: -3.324084758758545
    3. '_pts' → logprob: -4.324084758758545
    4. ' in' → logprob: -4.574084758758545
    5. 'in' → logprob: -4.824084758758545
    6. '
' → logprob: -6.574084758758545
    7. '[' → logprob: -7.199084758758545
    8. '),' → logprob: -7.699084758758545
    9. '_SEL' → logprob: -8.574085235595703
    10. '   ' → logprob: -8.699085235595703

Token 1704: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.014635635539889336
    2. ')/(' → logprob: -4.5146355628967285
    3. ')' → logprob: -5.6396355628967285
    4. '           ' → logprob: -12.014636039733887
    5. '       ' → logprob: -12.389636039733887
    6. ')//' → logprob: -12.514636039733887
    7. ' )' → logprob: -12.889636039733887
    8. '               ' → logprob: -12.889636039733887
    9. '   ' → logprob: -13.014636039733887
    10. '))/' → logprob: -13.764636039733887

Token 1705: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3868725001811981
    2. 'k' → logprob: -1.1368725299835205
    3. '(len' → logprob: -14.136872291564941
    4. ' len' → logprob: -14.511872291564941
    5. 'kx' → logprob: -15.886872291564941
    6. 'Len' → logprob: -17.761873245239258
    7. ' k' → logprob: -18.136873245239258
    8. '[len' → logprob: -18.261873245239258
    9. '
' → logprob: -18.636873245239258
    10. '=len' → logprob: -18.761873245239258

Token 1706: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008452873677015305
    2. 'pts' → logprob: -4.883452892303467
    3. '_pts' → logprob: -8.383452415466309
    4. '(pt' → logprob: -8.508452415466309
    5. '(
' → logprob: -9.008452415466309
    6. '(p' → logprob: -9.508452415466309
    7. '(points' → logprob: -10.008452415466309
    8. ')' → logprob: -10.133452415466309
    9. ' pts' → logprob: -10.258452415466309
    10. 'p' → logprob: -11.133452415466309

Token 1707: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.00024323153775185347
    2. '(' → logprob: -9.625243186950684
    3. 'p' → logprob: -9.750243186950684
    4. 'poly' → logprob: -10.125243186950684
    5. '_pts' → logprob: -10.625243186950684
    6. ' pts' → logprob: -11.000243186950684
    7. 'pt' → logprob: -11.625243186950684
    8. '```' → logprob: -12.000243186950684
    9. ')' → logprob: -12.250243186950684
    10. 'ps' → logprob: -12.625243186950684

Token 1708: '_sel' (ID: 74938)
  Prédit: '_sel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sel' → logprob: -0.014562796801328659
    2. '_pts' → logprob: -4.514562606811523
    3. 'sel' → logprob: -6.264562606811523
    4. ')' → logprob: -7.139562606811523
    5. 'Sel' → logprob: -8.264562606811523
    6. 'pts' → logprob: -8.639562606811523
    7. '(sel' → logprob: -8.764562606811523
    8. '_SEL' → logprob: -9.764562606811523
    9. '(' → logprob: -10.014562606811523
    10. ')
' → logprob: -10.889562606811523

Token 1709: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04875495657324791
    2. ')
' → logprob: -3.048754930496216
    3. ')+' → logprob: -9.548754692077637
    4. ')p' → logprob: -9.923754692077637
    5. ')return' → logprob: -12.298754692077637
    6. ')**' → logprob: -12.423754692077637
    7. '           ' → logprob: -12.548754692077637
    8. '   ' → logprob: -12.548754692077637
    9. '),' → logprob: -12.673754692077637
    10. ')*' → logprob: -12.673754692077637

Token 1710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008539431728422642
    2. '
' → logprob: -8.750853538513184
    3. ')' → logprob: -9.125853538513184
    4. '```' → logprob: -9.500853538513184
    5. 'return' → logprob: -9.625853538513184
    6. '                
' → logprob: -9.750853538513184
    7. '           ' → logprob: -9.750853538513184
    8. '                   ' → logprob: -10.000853538513184
    9. ' 
' → logprob: -10.000853538513184
    10. '                ' → logprob: -10.125853538513184

Token 1711: ' cy' (ID: 5504)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1371038556098938
    2. ' return' → logprob: -2.512103796005249
    3. '               ' → logprob: -3.387103796005249
    4. 'cy' (adapté à ' cy') → logprob: -5.012104034423828
    5. 'from' → logprob: -6.137104034423828
    6. '   ' → logprob: -6.387104034423828
    7. '           ' → logprob: -7.012104034423828
    8. '                   ' → logprob: -7.012104034423828
    9. '       ' → logprob: -8.387104034423828
    10. ' from' → logprob: -8.637104034423828

Token 1712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42032504081726074
    2. ' =' → logprob: -1.2953250408172607
    3. ')' → logprob: -3.4203250408172607
    4. '(p' → logprob: -3.7953250408172607
    5. '+' → logprob: -5.92032527923584
    6. ' (' → logprob: -6.29532527923584
    7. ' +' → logprob: -6.67032527923584
    8. ',' → logprob: -6.92032527923584
    9. '```' → logprob: -6.92032527923584
    10. ' +=' → logprob: -7.04532527923584

Token 1713: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00020473242329899222
    2. ' sum' → logprob: -8.500205039978027
    3. 'len' → logprob: -14.375205039978027
    4. '(sum' → logprob: -14.500205039978027
    5. '
' → logprob: -16.00020408630371
    6. 'cx' → logprob: -17.62520408630371
    7. 'points' → logprob: -18.25020408630371
    8. '	sum' → logprob: -18.75020408630371
    9. '0' → logprob: -18.87520408630371
    10. '=sum' → logprob: -19.00020408630371

Token 1714: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -11.125040054321289
    3. 'p' → logprob: -11.125040054321289
    4. '   ' → logprob: -12.750040054321289
    5. '(
' → logprob: -12.750040054321289
    6. '[p' → logprob: -14.125040054321289
    7. '((' → logprob: -14.500040054321289
    8. '
' → logprob: -14.500040054321289
    9. '       ' → logprob: -14.875040054321289
    10. 'def' → logprob: -14.875040054321289

Token 1715: '[' (ID: 58)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0814620703458786
    2. '[' → logprob: -3.3314621448516846
    3. 'p' → logprob: -4.0814619064331055
    4. '-' → logprob: -4.2064619064331055
    5. '+' → logprob: -5.2064619064331055
    6. '[p' → logprob: -6.5814619064331055
    7. ')' → logprob: -6.9564619064331055
    8. '```' → logprob: -7.4564619064331055
    9. '1' → logprob: -7.7064619064331055
    10. '   ' → logprob: -8.081461906433105

Token 1716: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1711510717868805
    2. 'pts' → logprob: -2.4211511611938477
    3. '1' → logprob: -3.2961511611938477
    4. '(p' → logprob: -4.671151161193848
    5. 'sel' → logprob: -4.671151161193848
    6. 'c' → logprob: -5.671151161193848
    7. ' p' → logprob: -6.046151161193848
    8. 'pt' → logprob: -6.921151161193848
    9. '0' → logprob: -7.046151161193848
    10. 'Sel' → logprob: -7.171151161193848

Token 1717: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028052102774381638
    2. ' for' → logprob: -3.7780520915985107
    3. ')' → logprob: -5.52805233001709
    4. '(p' → logprob: -7.90305233001709
    5. ']' → logprob: -8.15305233001709
    6. '
' → logprob: -9.90305233001709
    7. '	for' → logprob: -10.02805233001709
    8. '   ' → logprob: -10.52805233001709
    9. '-' → logprob: -11.65305233001709
    10. ' ' → logprob: -11.90305233001709

Token 1718: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024347173050045967
    2. ' for' → logprob: -4.649347305297852
    3. '-' → logprob: -4.774347305297852
    4. ')-(' → logprob: -5.774347305297852
    5. ')-' → logprob: -7.149347305297852
    6. ')' → logprob: -7.149347305297852
    7. '-p' → logprob: -7.399347305297852
    8. '(p' → logprob: -8.399347305297852
    9. '+' → logprob: -9.024347305297852
    10. '```' → logprob: -9.399347305297852

Token 1719: ' p' (ID: 275)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.02641315571963787
    2. 'p' → logprob: -3.6514132022857666
    3. ' pts' → logprob: -9.651412963867188
    4. 'pt' → logprob: -11.026412963867188
    5. '_pts' → logprob: -11.401412963867188
    6. '
' → logprob: -11.901412963867188
    7. '(p' → logprob: -13.026412963867188
    8. 'pty' → logprob: -13.026412963867188
    9. 'pth' → logprob: -13.276412963867188
    10. 'cx' → logprob: -13.776412963867188

Token 1720: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7796744704246521
    2. ')' → logprob: -1.5296745300292969
    3. ' for' → logprob: -2.154674530029297
    4. '[' → logprob: -2.529674530029297
    5. ' in' → logprob: -2.904674530029297
    6. '(p' → logprob: -4.029674530029297
    7. '1' → logprob: -4.404674530029297
    8. '0' → logprob: -4.529674530029297
    9. '```' → logprob: -5.279674530029297
    10. '2' → logprob: -5.404674530029297

Token 1721: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.07124833762645721
    2. 'len' → logprob: -2.6962482929229736
    3. 'p' → logprob: -6.946248531341553
    4. 'pt' → logprob: -8.946248054504395
    5. 'range' → logprob: -9.696248054504395
    6. '
' → logprob: -9.696248054504395
    7. ' pts' → logprob: -10.571248054504395
    8. 'pty' → logprob: -11.696248054504395
    9. 'points' → logprob: -11.696248054504395
    10. 'length' → logprob: -12.071248054504395

Token 1722: '_sel' (ID: 74938)
  Prédit: '_sel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sel' → logprob: -0.468553751707077
    2. '[' → logprob: -1.3435537815093994
    3. '0' → logprob: -2.8435537815093994
    4. '1' → logprob: -3.7185537815093994
    5. 'Sel' → logprob: -3.8435537815093994
    6. ')' → logprob: -5.46855354309082
    7. '(' → logprob: -5.96855354309082
    8. '2' → logprob: -7.34355354309082
    9. '_SEL' → logprob: -7.96855354309082
    10. '
' → logprob: -8.59355354309082

Token 1723: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.05639302358031273
    2. ')' → logprob: -2.9313929080963135
    3. ')/(' → logprob: -6.806393146514893
    4. '))/' → logprob: -8.681392669677734
    5. '   ' → logprob: -9.431392669677734
    6. ')
' → logprob: -9.931392669677734
    7. '))' → logprob: -10.806392669677734
    8. ')**' → logprob: -11.056392669677734
    9. ')+' → logprob: -11.431392669677734
    10. ')
/' → logprob: -11.556392669677734

Token 1724: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.842555426876061e-06
    2. '(len' → logprob: -12.625004768371582
    3. '
' → logprob: -14.500004768371582
    4. 'cx' → logprob: -14.750004768371582
    5. ' len' → logprob: -15.500004768371582
    6. '```' → logprob: -15.875004768371582
    7. '[len' → logprob: -16.0000057220459
    8. '2' → logprob: -16.1250057220459
    9. 'k' → logprob: -16.6250057220459
    10. 'length' → logprob: -18.1250057220459

Token 1725: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05312545597553253
    2. 'p' → logprob: -3.6781253814697266
    3. '(' → logprob: -4.053125381469727
    4. '(c' → logprob: -6.303125381469727
    5. 'cy' → logprob: -6.428125381469727
    6. '(com' → logprob: -6.428125381469727
    7. 'pts' → logprob: -6.553125381469727
    8. '_pts' → logprob: -6.928125381469727
    9. '(cx' → logprob: -7.553125381469727
    10. '(
' → logprob: -8.553125381469727

Token 1726: 'pts' (ID: 24040)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12712715566158295
    2. 'pts' → logprob: -2.127127170562744
    3. 'cy' → logprob: -9.377126693725586
    4. 'pt' → logprob: -9.627126693725586
    5. 'poly' → logprob: -11.127126693725586
    6. 'pth' → logprob: -11.877126693725586
    7. 'pty' → logprob: -12.002126693725586
    8. 'py' → logprob: -12.627126693725586
    9. 'c' → logprob: -12.752126693725586
    10. '_pts' → logprob: -12.752126693725586

Token 1727: '_sel' (ID: 74938)
  Prédit: '_sel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sel' → logprob: -0.13418012857437134
    2. 'Sel' → logprob: -2.5091800689697266
    3. '_pts' → logprob: -3.7591800689697266
    4. '(p' → logprob: -4.634180068969727
    5. ')' → logprob: -5.634180068969727
    6. '_selected' → logprob: -5.759180068969727
    7. '(' → logprob: -7.009180068969727
    8. '_SEL' → logprob: -7.509180068969727
    9. '[' → logprob: -7.884180068969727
    10. 'p' → logprob: -8.009180068969727

Token 1728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02490825578570366
    2. ')
' → logprob: -3.7749083042144775
    3. '):
' → logprob: -6.649908065795898
    4. '               ' → logprob: -9.024908065795898
    5. '           ' → logprob: -10.149908065795898
    6. '   ' → logprob: -10.274908065795898
    7. ')p' → logprob: -10.399908065795898
    8. ')+' → logprob: -10.524908065795898
    9. ')return' → logprob: -11.149908065795898
    10. '                   ' → logprob: -11.399908065795898

Token 1729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011072326451539993
    2. '                   ' → logprob: -7.876107215881348
    3. '   ' → logprob: -8.376107215881348
    4. ' return' → logprob: -8.876107215881348
    5. 'return' → logprob: -9.126107215881348
    6. '       ' → logprob: -10.001107215881348
    7. '	           ' → logprob: -10.376107215881348
    8. '           ' → logprob: -10.501107215881348
    9. '
' → logprob: -10.626107215881348
    10. ')' → logprob: -10.751107215881348

Token 1730: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09131821990013123
    2. ' return' → logprob: -3.341318130493164
    3. 'from' → logprob: -3.841318130493164
    4. '               ' → logprob: -4.216318130493164
    5. '                   ' → logprob: -4.716318130493164
    6. 'import' → logprob: -6.341318130493164
    7. 'for' → logprob: -6.966318130493164
    8. '   ' → logprob: -6.966318130493164
    9. ' from' → logprob: -7.216318130493164
    10. 'points' → logprob: -7.966318130493164

Token 1731: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -6.392202976712724e-06
    2. ' sorted' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.1250057220459
    4. '(sorted' → logprob: -16.6250057220459
    5. '[' → logprob: -20.1250057220459
    6. '.sorted' → logprob: -20.5000057220459
    7. 'list' → logprob: -21.7500057220459
    8. 'sorting' → logprob: -22.1250057220459
    9. '```' → logprob: -22.3750057220459
    10. '[]' → logprob: -22.3750057220459

Token 1732: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009358879178762436
    2. 'pts' → logprob: -4.759358882904053
    3. '(
' → logprob: -7.509358882904053
    4. '(points' → logprob: -9.009358406066895
    5. '_pts' → logprob: -10.259358406066895
    6. 'points' → logprob: -10.884358406066895
    7. '[' → logprob: -12.259358406066895
    8. 'Pts' → logprob: -12.509358406066895
    9. ' pts' → logprob: -12.634358406066895
    10. '```' → logprob: -13.384358406066895

Token 1733: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -4.723352049040841e-06
    2. ' pts' → logprob: -13.625004768371582
    3. '
' → logprob: -14.000004768371582
    4. 'points' → logprob: -14.000004768371582
    5. '_pts' → logprob: -14.250004768371582
    6. '[' → logprob: -15.250004768371582
    7. '(' → logprob: -15.375004768371582
    8. 'Pts' → logprob: -15.625004768371582
    9. '[(' → logprob: -15.875004768371582
    10. 'p' → logprob: -16.125003814697266

Token 1734: '_sel' (ID: 74938)
  Prédit: '_sel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sel' → logprob: -0.00043567578541114926
    2. '_pts' → logprob: -8.750435829162598
    3. '[' → logprob: -9.750435829162598
    4. '(lambda' → logprob: -10.125435829162598
    5. '_SEL' → logprob: -10.250435829162598
    6. '(sel' → logprob: -10.375435829162598
    7. 'Sel' → logprob: -10.750435829162598
    8. 'sel' → logprob: -11.125435829162598
    9. '(' → logprob: -11.250435829162598
    10. '(p' → logprob: -11.500435829162598

Token 1735: ',key' (ID: 119403)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002445317804813385
    2. ',key' → logprob: -8.875244140625
    3. ' ,' → logprob: -10.250244140625
    4. ',
' → logprob: -10.375244140625
    5. '               ' → logprob: -10.750244140625
    6. ',p' → logprob: -12.375244140625
    7. '                   ' → logprob: -12.875244140625
    8. '           ' → logprob: -13.250244140625
    9. '(),' → logprob: -13.750244140625
    10. '(key' → logprob: -13.750244140625

Token 1736: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005293169524520636
    2. '=' → logprob: -5.255293369293213
    3. 'lambda' → logprob: -10.505292892456055
    4. '(lambda' → logprob: -10.505292892456055
    5. '=
' → logprob: -13.130292892456055
    6. '=(' → logprob: -13.505292892456055
    7. '=\' → logprob: -14.630292892456055
    8. '```' → logprob: -15.255292892456055
    9. ' lambda' → logprob: -16.130292892456055
    10. '(' → logprob: -16.130292892456055

Token 1737: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38748878240585327
    2. ' p' → logprob: -1.137488842010498
    3. '=lambda' → logprob: -8.13748836517334
    4. '=' → logprob: -9.51248836517334
    5. 'lambda' → logprob: -9.76248836517334
    6. '   ' → logprob: -10.01248836517334
    7. '	p' → logprob: -10.26248836517334
    8. '=p' → logprob: -10.38748836517334
    9. ' lambda' → logprob: -10.63748836517334
    10. '    ' → logprob: -10.88748836517334

Token 1738: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024441429413855076
    2. ':(' → logprob: -7.002444267272949
    3. ':p' → logprob: -7.002444267272949
    4. ' :' → logprob: -7.502444267272949
    5. ':x' → logprob: -10.87744426727295
    6. ':
' → logprob: -11.37744426727295
    7. ':return' → logprob: -11.62744426727295
    8. ':int' → logprob: -12.00244426727295
    9. ' p' → logprob: -12.12744426727295
    10. ' :(' → logprob: -12.25244426727295

Token 1739: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.6744248270988464
    2. '(' → logprob: -1.2994248867034912
    3. 'lambda' → logprob: -2.174424886703491
    4. '(lambda' → logprob: -2.674424886703491
    5. ' (' → logprob: -4.424424648284912
    6. 'p' → logprob: -4.924424648284912
    7. ' atan' → logprob: -5.174424648284912
    8. '(at' → logprob: -5.674424648284912
    9. 'ata' → logprob: -6.299424648284912
    10. ' lambda' → logprob: -6.674424648284912

Token 1740: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '(p' → logprob: -12.875003814697266
    3. '
' → logprob: -15.125003814697266
    4. '(' → logprob: -15.250003814697266
    5. '```' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '₂' → logprob: -16.125003814697266
    8. ' ' → logprob: -16.125003814697266
    9. 'import' → logprob: -16.250003814697266
    10. '_' → logprob: -16.500003814697266

Token 1741: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.636901319026947
    2. '((' → logprob: -0.761901319026947
    3. '(' → logprob: -5.511901378631592
    4. ' (' → logprob: -9.511900901794434
    5. '   ' → logprob: -10.011900901794434
    6. '(
' → logprob: -10.261900901794434
    7. 'p' → logprob: -10.386900901794434
    8. '               ' → logprob: -10.636900901794434
    9. '           ' → logprob: -11.511900901794434
    10. '                   ' → logprob: -11.761900901794434

Token 1742: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.572941179503687e-05
    2. '-' → logprob: -10.125045776367188
    3. ')' → logprob: -13.750045776367188
    4. '(' → logprob: -14.125045776367188
    5. '<|end|>' → logprob: -14.250045776367188
    6. '```' → logprob: -14.375045776367188
    7. '<|end|>' → logprob: -15.000045776367188
    8. ',' → logprob: -15.125045776367188
    9. ' -' → logprob: -15.125045776367188
    10. '
' → logprob: -15.375045776367188

Token 1743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03815830498933792
    2. '[' → logprob: -3.288158416748047
    3. 'p' → logprob: -9.163158416748047
    4. '(' → logprob: -12.163158416748047
    5. ' p' → logprob: -13.288158416748047
    6. 'y' → logprob: -13.538158416748047
    7. '{' → logprob: -13.788158416748047
    8. '[
' → logprob: -14.413158416748047
    9. '(p' → logprob: -14.788158416748047
    10. '
' → logprob: -15.038158416748047

Token 1744: ']-' (ID: 27107)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.027263592928647995
    2. '-p' → logprob: -4.277263641357422
    3. ' -' → logprob: -4.652263641357422
    4. '-' → logprob: -6.402263641357422
    5. '-y' → logprob: -7.027263641357422
    6. '-(' → logprob: -8.027263641357422
    7. '(py' → logprob: -9.152263641357422
    8. ']-' → logprob: -9.402263641357422
    9. '[' → logprob: -9.402263641357422
    10. '(p' → logprob: -9.527263641357422

Token 1745: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.3306015716807451e-05
    2. '
' → logprob: -12.62501335144043
    3. ' cy' → logprob: -12.87501335144043
    4. 'cx' → logprob: -13.00001335144043
    5. 'cyj' → logprob: -13.25001335144043
    6. 'cych' → logprob: -13.50001335144043
    7. 'c' → logprob: -15.00001335144043
    8. '.cy' → logprob: -15.12501335144043
    9. '<|end|>' → logprob: -15.37501335144043
    10. '```' → logprob: -16.00001335144043

Token 1746: ',' (ID: 11)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.313480943441391
    2. ',' → logprob: -1.3134809732437134
    3. '(p' → logprob: -9.188481330871582
    4. ',
' → logprob: -9.813481330871582
    5. ' ,' → logprob: -10.188481330871582
    6. ',(' → logprob: -12.063481330871582
    7. ',c' → logprob: -12.313481330871582
    8. ',x' → logprob: -12.563481330871582
    9. 'p' → logprob: -12.688481330871582
    10. '[p' → logprob: -13.688481330871582

Token 1747: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006951583200134337
    2. 'cx' → logprob: -8.25069522857666
    3. ' p' → logprob: -8.75069522857666
    4. 'cy' → logprob: -9.00069522857666
    5. '(p' → logprob: -9.25069522857666
    6. '(cx' → logprob: -10.50069522857666
    7. 'px' → logprob: -12.12569522857666
    8. '   ' → logprob: -12.62569522857666
    9. ' (' → logprob: -12.75069522857666
    10. '(' → logprob: -12.87569522857666

Token 1748: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1426849663257599
    2. '0' → logprob: -2.0176849365234375
    3. '1' → logprob: -13.142684936523438
    4. ')' → logprob: -13.142684936523438
    5. 'p' → logprob: -13.642684936523438
    6. 'x' → logprob: -13.642684936523438
    7. '(' → logprob: -13.767684936523438
    8. '[
' → logprob: -14.142684936523438
    9. '
' → logprob: -14.642684936523438
    10. '```' → logprob: -15.267684936523438

Token 1749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18105913698673248
    2. 'cx' → logprob: -1.8060591220855713
    3. '(cx' → logprob: -7.18105936050415
    4. 'x' → logprob: -8.431058883666992
    5. '[' → logprob: -8.556058883666992
    6. 'p' → logprob: -9.931058883666992
    7. ' cx' → logprob: -10.181058883666992
    8. '.cx' → logprob: -10.431058883666992
    9. 'px' → logprob: -11.931058883666992
    10. 'c' → logprob: -12.556058883666992

Token 1750: ']-' (ID: 27107)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.0022429160308092833
    2. ' -' → logprob: -6.1272430419921875
    3. '(cx' → logprob: -10.377243041992188
    4. '[' → logprob: -12.002243041992188
    5. '-C' → logprob: -12.002243041992188
    6. ']-' → logprob: -12.627243041992188
    7. '.cx' → logprob: -13.252243041992188
    8. 'cx' → logprob: -13.502243041992188
    9. '-' → logprob: -13.752243041992188
    10. '-ci' → logprob: -14.002243041992188

Token 1751: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -6.153795766294934e-06
    2. '(cx' → logprob: -12.250005722045898
    3. ' cx' → logprob: -13.625005722045898
    4. '.cx' → logprob: -16.0000057220459
    5. '
' → logprob: -17.5000057220459
    6. 'cy' → logprob: -17.8750057220459
    7. '1' → logprob: -18.1250057220459
    8. '0' → logprob: -18.5000057220459
    9. '```' → logprob: -19.1250057220459
    10. ')' → logprob: -19.3750057220459

Token 1752: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001686485717073083
    2. ')' → logprob: -6.6266865730285645
    3. '))
' → logprob: -8.251686096191406
    4. ')))' → logprob: -10.251686096191406
    5. '),' → logprob: -11.001686096191406
    6. '               ' → logprob: -11.376686096191406
    7. ')),' → logprob: -11.751686096191406
    8. '           ' → logprob: -12.001686096191406
    9. '                   ' → logprob: -12.751686096191406
    10. '[' → logprob: -12.876686096191406

Token 1753: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14004802703857422
    2. '<|end|>' → logprob: -2.265048027038574
    3. '```' → logprob: -5.140048027038574
    4. '   ' → logprob: -5.640048027038574
    5. '       ' → logprob: -6.015048027038574
    6. '[' → logprob: -6.515048027038574
    7. '<|end|>' → logprob: -6.640048027038574
    8. '\t' → logprob: -6.640048027038574
    9. ' ' → logprob: -7.140048027038574
    10. '           ' → logprob: -7.140048027038574

Token 1754: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9655498266220093
    2. 'for' → logprob: -1.2155498266220093
    3. '       ' → logprob: -1.8405498266220093
    4. ' for' → logprob: -2.090549945831299
    5. '
' → logprob: -3.965549945831299
    6. 'from' → logprob: -4.965549945831299
    7. '   ' → logprob: -5.090549945831299
    8. '```' → logprob: -5.715549945831299
    9. '	for' → logprob: -7.090549945831299
    10. 'import' → logprob: -7.340549945831299

Token 1755: ' It's' (ID: 7744)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3271445333957672
    2. 'from' → logprob: -1.8271445035934448
    3. ' for' → logprob: -2.3271446228027344
    4. ' from' → logprob: -5.077144622802734
    5. 'import' → logprob: -5.077144622802734
    6. '           ' → logprob: -5.452144622802734
    7. '
' → logprob: -6.202144622802734
    8. 'continue' → logprob: -7.827144622802734
    9. '       ' → logprob: -7.952144622802734
    10. 'if' → logprob: -8.077144622802734

Token 1756: ' still' (ID: 2928)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9642500281333923
    2. 'not' → logprob: -1.339250087738037
    3. 'import' → logprob: -1.964250087738037
    4. ' very' → logprob: -2.839250087738037
    5. 'im' → logprob: -3.339250087738037
    6. ' too' → logprob: -3.839250087738037
    7. 'unlikely' → logprob: -4.089250087738037
    8. 'too' → logprob: -4.339250087738037
    9. 'very' → logprob: -4.839250087738037
    10. ' import' → logprob: -5.089250087738037

Token 1757: ' huge' (ID: 9560)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.3798463344573975
    2. ' not' → logprob: -1.7548463344573975
    3. '```' → logprob: -2.0048463344573975
    4. 'im' → logprob: -2.5048463344573975
    5. ' too' → logprob: -2.6298463344573975
    6. '
' → logprob: -3.0048463344573975
    7. 'too' → logprob: -3.1298463344573975
    8. ' infe' → logprob: -3.5048463344573975
    9. ' very' → logprob: -4.129846572875977
    10. 'in' → logprob: -4.254846572875977

Token 1758: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33562028408050537
    2. '...' → logprob: -2.335620403289795
    3. '<|end|>' → logprob: -2.835620403289795
    4. '       ' → logprob: -2.960620403289795
    5. ',' → logprob: -4.585620403289795
    6. ')' → logprob: -4.710620403289795
    7. 'continue' → logprob: -4.710620403289795
    8. '               ' → logprob: -5.085620403289795
    9. '.' → logprob: -5.085620403289795
    10. ' continue' → logprob: -5.210620403289795

Token 1759: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.033597707748413
    2. '
' → logprob: -1.658597707748413
    3. 'generate' → logprob: -2.158597707748413
    4. '#' → logprob: -2.408597707748413
    5. 'enumer' → logprob: -2.658597707748413
    6. 'com' → logprob: -3.158597707748413
    7. ' continue' → logprob: -3.283597707748413
    8. 'import' → logprob: -3.533597707748413
    9. 'for' → logprob: -4.408597946166992
    10. 'try' → logprob: -4.908597946166992

Token 1760: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024872900918126106
    2. ' for' → logprob: -4.649872779846191
    3. 'for' → logprob: -5.024872779846191
    4. 'com' → logprob: -6.274872779846191
    5. ',' → logprob: -6.774872779846191
    6. 'continue' → logprob: -6.899872779846191
    7. '...' → logprob: -7.024872779846191
    8. '               ' → logprob: -7.399872779846191
    9. '#' → logprob: -7.399872779846191
    10. '       ' → logprob: -7.774872779846191

Token 1761: ' C' (ID: 363)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2857971489429474
    2. 'for' → logprob: -3.035797119140625
    3. '
' → logprob: -3.160797119140625
    4. 'tokens' → logprob: -3.535797119140625
    5. 'points' → logprob: -3.910797119140625
    6. '           ' → logprob: -3.910797119140625
    7. 'comb' → logprob: -4.410797119140625
    8. 'while' → logprob: -4.535797119140625
    9. ' for' → logprob: -4.785797119140625
    10. '#' → logprob: -5.035797119140625

Token 1762: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.592110276222229
    2. 'k' → logprob: -1.592110276222229
    3. '(
' → logprob: -2.4671101570129395
    4. '(k' → logprob: -3.0921101570129395
    5. '(com' → logprob: -3.4671101570129395
    6. '(n' → logprob: -4.0921101570129395
    7. 'comb' → logprob: -4.2171101570129395
    8. '(N' → logprob: -4.8421101570129395
    9. '40' → logprob: -5.2171101570129395
    10. 'N' → logprob: -5.3421101570129395

Token 1763: '40' (ID: 1723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7514803409576416
    2. 'k' → logprob: -1.7514803409576416
    3. 'n' → logprob: -2.1264803409576416
    4. 'N' → logprob: -2.1264803409576416
    5. '40' → logprob: -2.6264803409576416
    6. 'comb' → logprob: -4.7514801025390625
    7. '(com' → logprob: -4.8764801025390625
    8. 'com' → logprob: -5.5014801025390625
    9. ')n' → logprob: -5.6264801025390625
    10. '
' → logprob: -6.0014801025390625

Token 1764: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21657682955265045
    2. ',k' → logprob: -1.8415768146514893
    3. '-' → logprob: -4.716577053070068
    4. ')' → logprob: -4.966577053070068
    5. ',
' → logprob: -5.216577053070068
    6. '(' → logprob: -5.716577053070068
    7. '//' → logprob: -6.091577053070068
    8. '),' → logprob: -6.716577053070068
    9. '(com' → logprob: -6.716577053070068
    10. '+' → logprob: -6.841577053070068

Token 1765: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3030618727207184
    2. '),' → logprob: -1.928061842918396
    3. ')
' → logprob: -2.6780619621276855
    4. '           ' → logprob: -3.9280619621276855
    5. '):
' → logprob: -4.6780619621276855
    6. '
' → logprob: -5.5530619621276855
    7. ',' → logprob: -6.0530619621276855
    8. '>' → logprob: -6.3030619621276855
    9. '               ' → logprob: -6.5530619621276855
    10. '))' → logprob: -6.5530619621276855

Token 1766: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09431610256433487
    2. '...' → logprob: -3.969316005706787
    3. '<|end|>' → logprob: -4.219316005706787
    4. '            ' → logprob: -4.344316005706787
    5. '               ' → logprob: -4.594316005706787
    6. 'continue' → logprob: -4.844316005706787
    7. ' continue' → logprob: -5.344316005706787
    8. '       ' → logprob: -5.344316005706787
    9. '                   ' → logprob: -6.219316005706787
    10. ' ' → logprob: -6.469316005706787

Token 1767: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1968645304441452
    2. ' for' → logprob: -2.696864604949951
    3. ' continue' → logprob: -3.571864604949951
    4. ' if' → logprob: -3.821864604949951
    5. '       ' → logprob: -4.321864604949951
    6. 'for' → logprob: -4.321864604949951
    7. '```' → logprob: -4.571864604949951
    8. 'continue' → logprob: -4.821864604949951
    9. '               ' → logprob: -6.071864604949951
    10. 'Continue' → logprob: -6.321864604949951

Token 1768: ' In' (ID: 730)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07256504148244858
    2. '       ' → logprob: -3.9475650787353516
    3. 'for' → logprob: -4.322565078735352
    4. ' for' → logprob: -4.447565078735352
    5. 'continue' → logprob: -4.947565078735352
    6. '
' → logprob: -5.197565078735352
    7. '#' → logprob: -5.197565078735352
    8. ' continue' → logprob: -5.947565078735352
    9. '               ' → logprob: -6.822565078735352
    10. '   ' → logprob: -7.072565078735352

Token 1769: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7742992043495178
    2. 'for' → logprob: -2.649299144744873
    3. 'range' → logprob: -2.774299144744873
    4. '   ' → logprob: -3.024299144744873
    5. 'while' → logprob: -3.024299144744873
    6. ' continue' → logprob: -3.024299144744873
    7. '...' → logprob: -3.274299144744873
    8. '
' → logprob: -3.274299144744873
    9. '#' → logprob: -3.399299144744873
    10. 'k' → logprob: -3.524299144744873

Token 1770: ''s' (ID: 885)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.931442141532898
    2. ')' → logprob: -2.3064422607421875
    3. ' continues' → logprob: -2.3064422607421875
    4. '```' → logprob: -2.8064422607421875
    5. 'continue' → logprob: -2.8064422607421875
    6. '#' → logprob: -2.9314422607421875
    7. ' continue' → logprob: -3.3064422607421875
    8. 'k' → logprob: -3.5564422607421875
    9. ',' → logprob: -4.0564422607421875
    10. '   ' → logprob: -4.1814422607421875

Token 1771: ' constraints' (ID: 31060)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9793848991394043
    2. 'k' → logprob: -2.2293848991394043
    3. 'constraints' → logprob: -2.3543848991394043
    4. '```' → logprob: -2.7293848991394043
    5. 'code' → logprob: -2.8543848991394043
    6. ' code' → logprob: -2.8543848991394043
    7. 'Q' → logprob: -2.8543848991394043
    8. ' constraints' → logprob: -2.8543848991394043
    9. ' k' → logprob: -3.1043848991394043
    10. 'continue' → logprob: -3.4793848991394043

Token 1772: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6180417537689209
    2. '       ' → logprob: -1.868041753768921
    3. ':' → logprob: -2.743041753768921
    4. '   ' → logprob: -2.993041753768921
    5. '
' → logprob: -3.618041753768921
    6. 'continue' → logprob: -3.618041753768921
    7. ',' → logprob: -3.743041753768921
    8. ')' → logprob: -3.993041753768921
    9. ' continue' → logprob: -3.993041753768921
    10. ':
' → logprob: -4.1180419921875

Token 1773: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.821357250213623
    2. '<' → logprob: -1.946357250213623
    3. ' <=' → logprob: -2.321357250213623
    4. '=' → logprob: -2.446357250213623
    5. ')' → logprob: -2.696357250213623
    6. '>' → logprob: -2.946357250213623
    7. ' <' → logprob: -3.196357250213623
    8. '```' → logprob: -4.821357250213623
    9. '==' → logprob: -5.071357250213623
    10. ' =' → logprob: -5.321357250213623

Token 1774: 'N' (ID: 45)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.09935931861400604
    2. 'k' → logprob: -2.9743592739105225
    3. 'N' → logprob: -3.9743592739105225
    4. '20' → logprob: -4.349359512329102
    5. 'h' → logprob: -5.974359512329102
    6. '3' → logprob: -5.974359512329102
    7. ' ' → logprob: -6.099359512329102
    8. 'len' → logprob: -7.099359512329102
    9. 'max' → logprob: -7.224359512329102
    10. '41' → logprob: -7.599359512329102

Token 1775: '<=' (ID: 16672)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36580854654312134
    2. '<|end|>' → logprob: -2.1158084869384766
    3. '
' → logprob: -2.9908084869384766
    4. '<|end|>' → logprob: -3.7408084869384766
    5. ',' → logprob: -3.8658084869384766
    6. '```' → logprob: -4.115808486938477
    7. ')' → logprob: -4.240808486938477
    8. '   ' → logprob: -4.365808486938477
    9. '       ' → logprob: -4.490808486938477
    10. ' for' → logprob: -5.365808486938477

Token 1776: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.750004768371582
    3. '
' → logprob: -13.750004768371582
    4. '```' → logprob: -14.500004768371582
    5. '41' → logprob: -15.375004768371582
    6. '   ' → logprob: -17.1250057220459
    7. '50' → logprob: -17.3750057220459
    8. '4' → logprob: -18.0000057220459
    9. '  ' → logprob: -18.5000057220459
    10. '45' → logprob: -18.9375057220459

Token 1777: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053269561380147934
    2. '<|end|>' → logprob: -3.553269624710083
    3. '       ' → logprob: -5.053269386291504
    4. '<|end|>' → logprob: -5.428269386291504
    5. '
' → logprob: -6.303269386291504
    6. ',' → logprob: -6.553269386291504
    7. '   ' → logprob: -6.678269386291504
    8. ')' → logprob: -6.678269386291504
    9. 'continue' → logprob: -6.678269386291504
    10. ' for' → logprob: -7.178269386291504

Token 1778: ' Q' (ID: 1486)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06816646456718445
    2. '       ' → logprob: -3.443166494369507
    3. 'continue' → logprob: -5.068166255950928
    4. '
' → logprob: -5.318166255950928
    5. 'for' → logprob: -5.443166255950928
    6. ' for' → logprob: -5.443166255950928
    7. '```' → logprob: -5.443166255950928
    8. 'import' → logprob: -6.068166255950928
    9. '   ' → logprob: -6.193166255950928
    10. '#' → logprob: -6.193166255950928

Token 1779: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5522524118423462
    2. '
' → logprob: -1.8022524118423462
    3. '<=' → logprob: -2.0522522926330566
    4. '   ' → logprob: -2.3022522926330566
    5. '=' → logprob: -2.5522522926330566
    6. '<|end|>' → logprob: -2.6772522926330566
    7. '>' → logprob: -3.4272522926330566
    8. ' =' → logprob: -3.4272522926330566
    9. '<|end|>' → logprob: -3.4272522926330566
    10. '```' → logprob: -3.5522522926330566

Token 1780: 'N' (ID: 45)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9889736771583557
    2. '3' → logprob: -1.363973617553711
    3. '100' → logprob: -2.113973617553711
    4. '20' → logprob: -2.238973617553711
    5. '5' → logprob: -2.863973617553711
    6. '50' → logprob: -3.988973617553711
    7. '2' → logprob: -3.988973617553711
    8. '4' → logprob: -4.488973617553711
    9. '40' → logprob: -4.613973617553711
    10. '1' → logprob: -4.863973617553711

Token 1781: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10106881707906723
    2. '```' → logprob: -4.10106897354126
    3. '       ' → logprob: -4.47606897354126
    4. '
' → logprob: -4.47606897354126
    5. 'from' → logprob: -4.60106897354126
    6. ' for' → logprob: -4.60106897354126
    7. '<|end|>' → logprob: -4.97606897354126
    8. 'for' → logprob: -4.97606897354126
    9. '   ' → logprob: -5.72606897354126
    10. '<|end|>' → logprob: -5.85106897354126

Token 1782: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0171022415161133
    2. '           ' → logprob: -1.5171022415161133
    3. '#' → logprob: -2.0171022415161133
    4. 'continue' → logprob: -2.1421022415161133
    5. 'from' → logprob: -3.0171022415161133
    6. '
' → logprob: -3.3921022415161133
    7. ' for' → logprob: -3.8921022415161133
    8. 'import' → logprob: -3.8921022415161133
    9. '       ' → logprob: -4.517102241516113
    10. 'return' → logprob: -4.642102241516113

Token 1783: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8519726395606995
    2. '<|end|>' → logprob: -1.8519725799560547
    3. ' for' → logprob: -2.1019725799560547
    4. 'import' → logprob: -2.8519725799560547
    5. 'if' → logprob: -3.4769725799560547
    6. 'continue' → logprob: -3.6019725799560547
    7. 'k' → logprob: -3.9769725799560547
    8. 'from' → logprob: -4.226972579956055
    9. 'points' → logprob: -4.226972579956055
    10. 'while' → logprob: -4.476972579956055

Token 1784: ' combinations' (ID: 43835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3348214626312256
    2. ' for' → logprob: -1.4598214626312256
    3. '           ' → logprob: -1.5848214626312256
    4. 'com' → logprob: -2.3348214626312256
    5. '
' → logprob: -2.8348214626312256
    6. '       ' → logprob: -2.8348214626312256
    7. '```' → logprob: -4.084821701049805
    8. '   ' → logprob: -4.334821701049805
    9. 'from' → logprob: -4.459821701049805
    10. 'k' → logprob: -4.959821701049805

Token 1785: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49591201543807983
    2. '       ' → logprob: -1.6209120750427246
    3. '<|end|>' → logprob: -2.4959120750427246
    4. '   ' → logprob: -3.7459120750427246
    5. '<|end|>' → logprob: -3.7459120750427246
    6. ',' → logprob: -4.745912075042725
    7. '
' → logprob: -4.745912075042725
    8. '               ' → logprob: -4.995912075042725
    9. ' for' → logprob: -5.620912075042725
    10. ')' → logprob: -5.620912075042725

Token 1786: ' large' (ID: 4410)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0708124041557312
    2. ' k' → logprob: -3.445812463760376
    3. '
' → logprob: -4.070812225341797
    4. 'next' → logprob: -4.570812225341797
    5. ' next' → logprob: -5.820812225341797
    6. '```' → logprob: -6.820812225341797
    7. 'small' → logprob: -7.195812225341797
    8. '1' → logprob: -7.195812225341797
    9. 'i' → logprob: -7.570812225341797
    10. 'now' → logprob: -7.820812225341797

Token 1787: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08721098303794861
    2. ' k' → logprob: -2.7122108936309814
    3. '<|end|>' → logprob: -5.0872111320495605
    4. '```' → logprob: -5.4622111320495605
    5. ')' → logprob: -6.0872111320495605
    6. ' ' → logprob: -6.3372111320495605
    7. '
' → logprob: -7.5872111320495605
    8. 'com' → logprob: -7.8372111320495605
    9. ' 
' → logprob: -7.9622111320495605
    10. 'indices' → logprob: -8.837210655212402

Token 1788: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8243681788444519
    2. '       ' → logprob: -1.1993682384490967
    3. '   ' → logprob: -1.6993682384490967
    4. '<|end|>' → logprob: -4.199368000030518
    5. '
' → logprob: -4.324368000030518
    6. ')' → logprob: -4.324368000030518
    7. ' for' → logprob: -5.324368000030518
    8. '<|end|>' → logprob: -5.449368000030518
    9. '...' → logprob: -5.699368000030518
    10. ',' → logprob: -5.699368000030518

Token 1789: ' impossible' (ID: 19786)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.4959677457809448
    2. 'not' → logprob: -0.9959677457809448
    3. 'in' → logprob: -4.370967864990234
    4. '```' → logprob: -5.620967864990234
    5. '#' → logprob: -6.620967864990234
    6. '       ' → logprob: -6.745967864990234
    7. '   ' → logprob: -7.120967864990234
    8. '           ' → logprob: -7.495967864990234
    9. 'un' → logprob: -8.120967864990234
    10. '
' → logprob: -8.370967864990234

Token 1790: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06348564475774765
    2. '<|end|>' → logprob: -3.438485622406006
    3. '       ' → logprob: -4.313485622406006
    4. '<|end|>' → logprob: -5.063485622406006
    5. '...' → logprob: -6.313485622406006
    6. '   ' → logprob: -6.688485622406006
    7. '```' → logprob: -6.813485622406006
    8. ',' → logprob: -6.813485622406006
    9. 'continue' → logprob: -7.188485622406006
    10. '               ' → logprob: -7.188485622406006

Token 1791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22790531814098358
    2. '       ' → logprob: -2.3529052734375
    3. '```' → logprob: -2.7279052734375
    4. '   ' → logprob: -4.1029052734375
    5. '<|end|>' → logprob: -5.2279052734375
    6. '               ' → logprob: -5.8529052734375
    7. '            ' → logprob: -6.3529052734375
    8. '	       ' → logprob: -6.7279052734375
    9. '		' → logprob: -6.7279052734375
    10. 'continue' → logprob: -6.8529052734375

Token 1792: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028086412698030472
    2. 'from' → logprob: -4.153086185455322
    3. '       ' → logprob: -5.278086185455322
    4. 'continue' → logprob: -6.278086185455322
    5. ' from' → logprob: -6.653086185455322
    6. 'for' → logprob: -6.778086185455322
    7. 'import' → logprob: -7.403086185455322
    8. '
' → logprob: -7.653086185455322
    9. '```' → logprob: -7.653086185455322
    10. ' for' → logprob: -8.15308666229248

Token 1793: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7430433034896851
    2. 'from' → logprob: -1.493043303489685
    3. 'for' → logprob: -1.743043303489685
    4. ' for' → logprob: -2.6180434226989746
    5. ' from' → logprob: -3.8680434226989746
    6. 'import' → logprob: -4.868043422698975
    7. '       ' → logprob: -5.118043422698975
    8. 'continue' → logprob: -5.118043422698975
    9. '```' → logprob: -6.118043422698975
    10. '
' → logprob: -6.368043422698975

Token 1794: ' output' (ID: 4733)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0806504487991333
    2. 'continue' → logprob: -1.0806504487991333
    3. '           ' → logprob: -1.9556504487991333
    4. 'import' → logprob: -2.9556503295898438
    5. 'from' → logprob: -3.3306503295898438
    6. ' for' → logprob: -3.8306503295898438
    7. ' from' → logprob: -3.9556503295898438
    8. ' break' → logprob: -4.330650329589844
    9. 'break' → logprob: -4.830650329589844
    10. 'for' → logprob: -4.955650329589844

Token 1795: ' NA' (ID: 24259)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.036422520875930786
    2. ' None' → logprob: -4.1614227294921875
    3. '
' → logprob: -4.9114227294921875
    4. 'break' → logprob: -5.5364227294921875
    5. '```' → logprob: -6.2864227294921875
    6. 'continue' → logprob: -6.4114227294921875
    7. 'for' → logprob: -6.4114227294921875
    8. '                   ' → logprob: -7.2864227294921875
    9. '           ' → logprob: -7.2864227294921875
    10. 'print' → logprob: -7.4114227294921875

Token 1796: ' directly' (ID: 8516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5550673007965088
    2. '   ' → logprob: -1.5550673007965088
    3. '\n' → logprob: -2.180067300796509
    4. '(
' → logprob: -2.305067300796509
    5. '           ' → logprob: -2.430067300796509
    6. '\' → logprob: -2.680067300796509
    7. ':' → logprob: -2.930067300796509
    8. '       ' → logprob: -3.430067300796509
    9. ')
' → logprob: -4.43006706237793
    10. '```' → logprob: -4.43006706237793

Token 1797: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5118446350097656
    2. '       ' → logprob: -1.0118446350097656
    3. '   ' → logprob: -4.511844635009766
    4. '
' → logprob: -4.636844635009766
    5. '               ' → logprob: -5.261844635009766
    6. '\n' → logprob: -5.386844635009766
    7. ':
' → logprob: -6.636844635009766
    8. 'if' → logprob: -7.511844635009766
    9. ' if' → logprob: -7.511844635009766
    10. ':' → logprob: -7.511844635009766

Token 1798: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4530470669269562
    2. 'None' → logprob: -1.2030470371246338
    3. ' k' → logprob: -3.078047037124634
    4. 'all' → logprob: -4.953047275543213
    5. ' None' → logprob: -5.328047275543213
    6. '
' → logprob: -6.828047275543213
    7. 'result' → logprob: -6.953047275543213
    8. 'each' → logprob: -7.078047275543213
    9. 'False' → logprob: -7.328047275543213
    10. ' all' → logprob: -7.578047275543213

Token 1799: '>' (ID: 29)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2790401577949524
    2. 'else' → logprob: -2.7790400981903076
    3. '\n' → logprob: -3.1540400981903076
    4. '```' → logprob: -3.9040400981903076
    5. '_' → logprob: -4.029040336608887
    6. ''' → logprob: -4.154040336608887
    7. '=' → logprob: -4.654040336608887
    8. ' else' → logprob: -4.779040336608887
    9. '\' → logprob: -4.904040336608887
    10. ' ' → logprob: -5.404040336608887

Token 1800: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007805614150129259
    2. ' h' → logprob: -7.3757805824279785
    3. 'len' → logprob: -9.25078010559082
    4. 'N' → logprob: -11.25078010559082
    5. '40' → logprob: -11.87578010559082
    6. '   ' → logprob: -12.00078010559082
    7. '```' → logprob: -12.00078010559082
    8. '`' → logprob: -12.12578010559082
    9. '
' → logprob: -12.25078010559082
    10. ' ' → logprob: -12.62578010559082

Token 1801: 'ull' (ID: 754)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5466868877410889
    2. 'r' → logprob: -2.046686887741089
    3. '\n' → logprob: -3.046686887741089
    4. 'a' → logprob: -3.296686887741089
    5. '```' → logprob: -3.796686887741089
    6. ''' → logprob: -3.921686887741089
    7. ''\' → logprob: -4.046687126159668
    8. 'L' → logprob: -4.296687126159668
    9. '\' → logprob: -4.421687126159668
    10. 'x' → logprob: -4.546687126159668

Token 1802: ' size' (ID: 2349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9399194121360779
    2. '```' → logprob: -2.3149194717407227
    3. '       ' → logprob: -2.5649194717407227
    4. ':
' → logprob: -2.5649194717407227
    5. '_' → logprob: -2.6899194717407227
    6. '   ' → logprob: -3.3149194717407227
    7. 'else' → logprob: -3.9399194717407227
    8. '`' → logprob: -4.064919471740723
    9. '
' → logprob: -4.189919471740723
    10. '               ' → logprob: -4.189919471740723

Token 1803: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40367740392684937
    2. '           ' → logprob: -1.1536774635314941
    3. '
' → logprob: -5.153677463531494
    4. '   ' → logprob: -5.403677463531494
    5. '               ' → logprob: -6.403677463531494
    6. '        
' → logprob: -6.903677463531494
    7. '    
' → logprob: -7.278677463531494
    8. '```' → logprob: -7.653677463531494
    9. ' if' → logprob: -7.778677463531494
    10. '            
' → logprob: -7.903677463531494

Token 1804: ' the' (ID: 290)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.028682934120297432
    2. 'result' → logprob: -4.403682708740234
    3. 'print' → logprob: -5.028682708740234
    4. ' None' → logprob: -5.403682708740234
    5. '   ' → logprob: -6.653682708740234
    6. '```' → logprob: -6.903682708740234
    7. '       ' → logprob: -7.028682708740234
    8. ' result' → logprob: -7.278682708740234
    9. '           ' → logprob: -8.278682708740234
    10. 'continue' → logprob: -8.903682708740234

Token 1805: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1206728219985962
    2. '           ' → logprob: -1.4956728219985962
    3. 'break' → logprob: -1.8706728219985962
    4. 'n' → logprob: -1.9956728219985962
    5. 'b' → logprob: -2.9956727027893066
    6. 'return' → logprob: -3.2456727027893066
    7. 'pass' → logprob: -3.7456727027893066
    8. ' continue' → logprob: -4.745672702789307
    9. '       ' → logprob: -5.245672702789307
    10. '               ' → logprob: -5.620672702789307

Token 1806: ' examples' (ID: 15652)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5961465835571289
    2. '
' → logprob: -2.221146583557129
    3. ' continues' → logprob: -2.846146583557129
    4. '```' → logprob: -3.471146583557129
    5. 'contin' → logprob: -3.596146583557129
    6. ':' → logprob: -3.721146583557129
    7. ' does' → logprob: -3.721146583557129
    8. 'cannot' → logprob: -3.971146583557129
    9. '       ' → logprob: -4.096146583557129
    10. '    
' → logprob: -4.221146583557129

Token 1807: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5652891993522644
    2. '       ' → logprob: -1.0652892589569092
    3. '   ' → logprob: -3.190289258956909
    4. '
' → logprob: -4.44028902053833
    5. '               ' → logprob: -4.69028902053833
    6. ':
' → logprob: -5.56528902053833
    7. '```' → logprob: -5.81528902053833
    8. '    
' → logprob: -6.19028902053833
    9. ':' → logprob: -6.31528902053833
    10. '\n' → logprob: -6.44028902053833

Token 1808: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10411430895328522
    2. '       ' → logprob: -2.479114294052124
    3. '
' → logprob: -5.104114532470703
    4. '               ' → logprob: -5.854114532470703
    5. '   ' → logprob: -6.229114532470703
    6. '```' → logprob: -6.604114532470703
    7. ' continue' → logprob: -7.104114532470703
    8. ' for' → logprob: -8.229114532470703
    9. 'continue' → logprob: -8.229114532470703
    10. '            
' → logprob: -8.354114532470703

Token 1809: ' up' (ID: 869)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6541271209716797
    2. ' 
' → logprob: -2.1541271209716797
    3. '``' → logprob: -3.4041271209716797
    4. ''' → logprob: -3.4041271209716797
    5. '<|end|>' → logprob: -3.5291271209716797
    6. '           ' → logprob: -3.6541271209716797
    7. '   ' → logprob: -3.7791271209716797
    8. 'None' → logprob: -4.02912712097168
    9. '"' → logprob: -4.02912712097168
    10. 'k' → logprob: -4.15412712097168

Token 1810: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0022073546424508095
    2. ' to' → logprob: -6.752207279205322
    3. '_to' → logprob: -8.12720775604248
    4. '```' → logprob: -8.12720775604248
    5. 't' → logprob: -8.87720775604248
    6. '3' → logprob: -9.37720775604248
    7. '   ' → logprob: -9.50220775604248
    8. 'To' → logprob: -10.12720775604248
    9. '  ' → logprob: -11.75220775604248
    10. 'for' → logprob: -11.75220775604248

Token 1811: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2926509380340576
    2. 'k' → logprob: -2.0426509380340576
    3. 'len' → logprob: -2.1676509380340576
    4. 'the' → logprob: -4.917651176452637
    5. '```' → logprob: -7.667651176452637
    6. '20' → logprob: -8.042651176452637
    7. ' k' → logprob: -8.417651176452637
    8. '   ' → logprob: -8.417651176452637
    9. ' len' → logprob: -8.792651176452637
    10. ' hull' → logprob: -8.792651176452637

Token 1812: ' size' (ID: 2349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056721966713666916
    2. '       ' → logprob: -3.3067219257354736
    3. '               ' → logprob: -5.181722164154053
    4. '
' → logprob: -5.931722164154053
    5. '()
' → logprob: -6.431722164154053
    6. '\n' → logprob: -6.806722164154053
    7. 'continue' → logprob: -6.806722164154053
    8. 'return' → logprob: -6.931722164154053
    9. '```' → logprob: -7.056722164154053
    10. '   ' → logprob: -7.056722164154053

Token 1813: ' polygons' (ID: 169724)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00903369951993227
    2. '       ' → logprob: -4.759033679962158
    3. 'result' → logprob: -8.384034156799316
    4. 'continue' → logprob: -9.259034156799316
    5. '               ' → logprob: -9.884034156799316
    6. '   ' → logprob: -10.259034156799316
    7. '```' → logprob: -12.384034156799316
    8. 'print' → logprob: -14.009034156799316
    9. '                   ' → logprob: -14.134034156799316
    10. '
' → logprob: -14.509034156799316

Token 1814: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0710170716047287
    2. '       ' → logprob: -2.696017026901245
    3. 'result' → logprob: -7.946017265319824
    4. '
' → logprob: -8.571017265319824
    5. 'print' → logprob: -8.571017265319824
    6. '               ' → logprob: -8.696017265319824
    7. '   ' → logprob: -8.821017265319824
    8. 'import' → logprob: -11.946017265319824
    9. '```' → logprob: -11.946017265319824
    10. '                   ' → logprob: -12.571017265319824

Token 1815: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052969448268413544
    2. '       ' → logprob: -3.052969455718994
    3. 'continue' → logprob: -6.052969455718994
    4. '               ' → logprob: -6.802969455718994
    5. '   ' → logprob: -7.927969455718994
    6. '```' → logprob: -8.802968978881836
    7. ' continue' → logprob: -9.052968978881836
    8. '
' → logprob: -9.177968978881836
    9. '		' → logprob: -10.427968978881836
    10. 'return' → logprob: -10.552968978881836

Token 1816: ' result' (ID: 1534)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7016205787658691
    2. 'result' (adapté à ' result') → logprob: -0.7016205787658691
    3. '       ' → logprob: -5.576620578765869
    4. 'continue' → logprob: -5.826620578765869
    5. '               ' → logprob: -7.076620578765869
    6. '   ' → logprob: -7.451620578765869
    7. ' result' → logprob: -8.951620101928711
    8. 'for' → logprob: -9.201620101928711
    9. '```' → logprob: -11.326620101928711
    10. 'import' → logprob: -11.951620101928711

Token 1817: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.815280696377158e-05
    2. '_code' → logprob: -10.250078201293945
    3. '[_' → logprob: -11.125078201293945
    4. '```' → logprob: -11.625078201293945
    5. '_' → logprob: -12.625078201293945
    6. '_cached' → logprob: -13.000078201293945
    7. '[' → logprob: -13.125078201293945
    8. '"_' → logprob: -13.375078201293945
    9. '\' → logprob: -13.500078201293945
    10. '
' → logprob: -13.625078201293945

Token 1818: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00025966696557588875
    2. '[' → logprob: -8.375259399414062
    3. '   ' → logprob: -11.750259399414062
    4. '\[' → logprob: -11.875259399414062
    5. '```' → logprob: -12.750259399414062
    6. ' [' → logprob: -13.125259399414062
    7. '       ' → logprob: -13.375259399414062
    8. '=k' → logprob: -13.500259399414062
    9. ' =' → logprob: -13.625259399414062
    10. '.setdefault' → logprob: -13.875259399414062

Token 1819: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14443503320217133
    2. ']=' → logprob: -2.394434928894043
    3. '=' → logprob: -3.144434928894043
    4. ' =' → logprob: -8.894434928894043
    5. '[' → logprob: -11.269434928894043
    6. '=None' → logprob: -11.519434928894043
    7. ']="' → logprob: -12.894434928894043
    8. ']='' → logprob: -12.894434928894043
    9. ']={' → logprob: -12.894434928894043
    10. ']=-' → logprob: -13.519434928894043

Token 1820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031892398837953806
    2. ' =' → logprob: -5.7531890869140625
    3. '=None' → logprob: -11.378189086914062
    4. '=
' → logprob: -18.253189086914062
    5. '=True' → logprob: -19.753189086914062
    6. '＝' → logprob: -20.378189086914062
    7. '=False' → logprob: -21.003189086914062
    8. '=

' → logprob: -21.128189086914062
    9. ']=' → logprob: -21.628189086914062
    10. 'None' → logprob: -21.753189086914062

Token 1821: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.52919222577475e-05
    2. ' None' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.125075340270996
    4. '"' → logprob: -16.62507438659668
    5. 'NA' → logprob: -18.25007438659668
    6. 'none' → logprob: -18.37507438659668
    7. ''' → logprob: -18.50007438659668
    8. '(None' → logprob: -18.62507438659668
    9. '_None' → logprob: -19.37507438659668
    10. '       ' → logprob: -19.75007438659668

Token 1822: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6133955717086792
    2. '   ' → logprob: -1.4883955717086792
    3. '<|end|>' → logprob: -1.6133955717086792
    4. ' for' → logprob: -4.363395690917969
    5. '
' → logprob: -4.988395690917969
    6. '    
' → logprob: -5.488395690917969
    7. '```' → logprob: -5.488395690917969
    8. '	for' → logprob: -5.863395690917969
    9. '<|end|>' → logprob: -7.238395690917969
    10. '	
' → logprob: -8.113395690917969

Token 1823: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35913774371147156
    2. 'for' → logprob: -1.609137773513794
    3. '<|end|>' → logprob: -2.609137773513794
    4. '
' → logprob: -4.484137535095215
    5. '    
' → logprob: -5.109137535095215
    6. ' for' → logprob: -5.359137535095215
    7. '	for' → logprob: -5.734137535095215
    8. '```' → logprob: -6.734137535095215
    9. 'while' → logprob: -8.484137535095215
    10. '\n' → logprob: -8.609137535095215

Token 1824: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2077154815196991
    2. '```' → logprob: -1.8327155113220215
    3. ' for' → logprob: -3.7077155113220215
    4. '   ' → logprob: -6.8327155113220215
    5. '<|end|>' → logprob: -7.3327155113220215
    6. '	for' → logprob: -7.5827155113220215
    7. '``' → logprob: -7.9577155113220215
    8. '    
' → logprob: -8.582715034484863
    9. '
' → logprob: -8.582715034484863
    10. '  
' → logprob: -11.207715034484863

Token 1825: ' k' (ID: 372)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008756265975534916
    2. 'k' → logprob: -4.758756160736084
    3. '_q' → logprob: -9.383756637573242
    4. 'query' → logprob: -10.508756637573242
    5. ' q' → logprob: -11.008756637573242
    6. 'ans' → logprob: -12.008756637573242
    7. '_k' → logprob: -13.008756637573242
    8. '_' → logprob: -13.133756637573242
    9. 'qi' → logprob: -13.508756637573242
    10. 'x' → logprob: -14.883756637573242

Token 1826: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16025489568710327
    2. 'in' → logprob: -1.910254955291748
    3. '_in' → logprob: -10.66025447845459
    4. '	in' → logprob: -13.41025447845459
    5. ' ' → logprob: -13.91025447845459
    6. '_' → logprob: -14.03525447845459
    7. 'In' → logprob: -14.28525447845459
    8. ',' → logprob: -14.41025447845459
    9. '```' → logprob: -14.53525447845459
    10. ' _' → logprob: -14.78525447845459

Token 1827: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0011720098555088043
    2. ' queries' → logprob: -6.751172065734863
    3. 'range' → logprob: -13.376172065734863
    4. 'query' → logprob: -16.376171112060547
    5. ' range' → logprob: -16.626171112060547
    6. 'requests' → logprob: -16.876171112060547
    7. 'questions' → logprob: -17.376171112060547
    8. 'Q' → logprob: -18.501171112060547
    9. 'set' → logprob: -18.751171112060547
    10. 'result' → logprob: -19.001171112060547

Token 1828: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005520103964954615
    2. ':
' → logprob: -5.505519866943359
    3. '():
' → logprob: -7.380519866943359
    4. '():' → logprob: -7.755519866943359
    5. '[' → logprob: -8.38051986694336
    6. '<|end|>' → logprob: -10.88051986694336
    7. '   ' → logprob: -11.13051986694336
    8. '[::-' → logprob: -11.75551986694336
    9. '[:' → logprob: -11.88051986694336
    10. '[]' → logprob: -11.88051986694336

Token 1829: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05603521689772606
    2. '       ' → logprob: -3.056035280227661
    3. 'if' → logprob: -6.056035041809082
    4. ' if' → logprob: -6.181035041809082
    5. '```' → logprob: -6.681035041809082
    6. '    
' → logprob: -7.306035041809082
    7. '<|end|>' → logprob: -7.931035041809082
    8. '[' → logprob: -9.306035041809082
    9. '	if' → logprob: -9.556035041809082
    10. 'print' → logprob: -9.806035041809082

Token 1830: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06478904187679291
    2. ' if' → logprob: -3.064789056777954
    3. '       ' → logprob: -4.689788818359375
    4. 'res' (adapté à ' res') → logprob: -5.189788818359375
    5. 'result' → logprob: -7.689788818359375
    6. 'token' → logprob: -8.189788818359375
    7. ' res' → logprob: -8.439788818359375
    8. '```' → logprob: -9.314788818359375
    9. 'output' → logprob: -9.814788818359375
    10. 'answer' → logprob: -9.939788818359375

Token 1831: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.02064049243927
    2. '=' → logprob: -1.39564049243927
    3. 'if' → logprob: -1.64564049243927
    4. ' if' → logprob: -2.1456403732299805
    5. ')' → logprob: -3.8956403732299805
    6. ' or' → logprob: -4.0206403732299805
    7. ' is' → logprob: -4.7706403732299805
    8. '```' → logprob: -4.8956403732299805
    9. '   ' → logprob: -5.3956403732299805
    10. '==' → logprob: -5.6456403732299805

Token 1832: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.008614808320999146
    2. ' result' → logprob: -4.758615016937256
    3. '(result' → logprob: -16.258615493774414
    4. '   ' → logprob: -16.508615493774414
    5. 'None' → logprob: -17.008615493774414
    6. '	result' → logprob: -18.883615493774414
    7. ' None' → logprob: -19.883615493774414
    8. '[result' → logprob: -19.883615493774414
    9. '```' → logprob: -20.258615493774414
    10. '$result' → logprob: -20.258615493774414

Token 1833: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.5577775128767826e-06
    2. 'Cache' → logprob: -13.375005722045898
    3. 'cache' → logprob: -13.750005722045898
    4. '_CACHE' → logprob: -14.250005722045898
    5. '_cached' → logprob: -14.750005722045898
    6. 's' → logprob: -14.875005722045898
    7. '=_' → logprob: -15.000005722045898
    8. '```' → logprob: -15.500005722045898
    9. '[_' → logprob: -15.625005722045898
    10. '=' → logprob: -15.625005722045898

Token 1834: '.get' (ID: 775)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.500000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[key' → logprob: -15.750000953674316
    5. 'k' → logprob: -15.875000953674316
    6. '\[' → logprob: -16.375001907348633
    7. '[
' → logprob: -16.750001907348633
    8. ' [' → logprob: -16.875001907348633
    9. '.get' → logprob: -17.750001907348633
    10. '`' → logprob: -18.250001907348633

Token 1835: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0002614550176076591
    2. 'k' → logprob: -8.250261306762695
    3. '[k' → logprob: -15.625261306762695
    4. ' k' → logprob: -18.375261306762695
    5. ' (' → logprob: -18.375261306762695
    6. '(
' → logprob: -19.250261306762695
    7. '```' → logprob: -19.625261306762695
    8. '{k' → logprob: -19.750261306762695
    9. '(' → logprob: -19.875261306762695
    10. '	k' → logprob: -20.500261306762695

Token 1836: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6337671875953674
    2. ')' → logprob: -0.7587671875953674
    3. ',' → logprob: -7.008767127990723
    4. ',None' → logprob: -9.008767127990723
    5. '       ' → logprob: -11.258767127990723
    6. '   ' → logprob: -11.258767127990723
    7. '```' → logprob: -11.258767127990723
    8. ')**' → logprob: -11.383767127990723
    9. ')==' → logprob: -11.508767127990723
    10. ')#' → logprob: -11.758767127990723

Token 1837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0858231782913208
    2. 'if' → logprob: -2.8358230590820312
    3. ' if' → logprob: -3.9608230590820312
    4. '   ' → logprob: -5.460823059082031
    5. '```' → logprob: -8.710823059082031
    6. '<|end|>' → logprob: -10.460823059082031
    7. '[' → logprob: -11.085823059082031
    8. '(' → logprob: -11.710823059082031
    9. ':' → logprob: -11.960823059082031
    10. '	if' → logprob: -11.960823059082031

Token 1838: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0072106835432350636
    2. ' if' → logprob: -5.007210731506348
    3. '       ' → logprob: -7.757210731506348
    4. '   ' → logprob: -9.632210731506348
    5. '	if' → logprob: -13.632210731506348
    6. '```' → logprob: -14.507210731506348
    7. 'print' → logprob: -15.882210731506348
    8. 'for' → logprob: -15.882210731506348
    9. 'If' → logprob: -17.38220977783203
    10. '
' → logprob: -18.00720977783203

Token 1839: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3132616877555847
    2. ' res' → logprob: -1.3132617473602295
    3. 'not' → logprob: -18.938261032104492
    4. '(res' → logprob: -19.313261032104492
    5. ' not' → logprob: -19.313261032104492
    6. 'None' → logprob: -19.688261032104492
    7. '_res' → logprob: -19.813261032104492
    8. '	res' → logprob: -19.813261032104492
    9. '=res' → logprob: -20.063261032104492
    10. ' ' → logprob: -20.438261032104492

Token 1840: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31406307220458984
    2. 'is' → logprob: -1.3140630722045898
    3. '==' → logprob: -7.18906307220459
    4. ' ==' → logprob: -10.18906307220459
    5. '===' → logprob: -13.31406307220459
    6. ')is' → logprob: -13.31406307220459
    7. ')' → logprob: -13.93906307220459
    8. '```' → logprob: -14.06406307220459
    9. '==
' → logprob: -14.18906307220459
    10. '	is' → logprob: -14.43906307220459

Token 1841: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.833878508885391e-05
    2. 'not' → logprob: -10.750038146972656
    3. ' None' → logprob: -11.000038146972656
    4. ' not' → logprob: -17.000038146972656
    5. 'Not' → logprob: -18.250038146972656
    6. '   ' → logprob: -18.500038146972656
    7. '_None' → logprob: -19.125038146972656
    8. 'none' → logprob: -19.375038146972656
    9. '(None' → logprob: -20.250038146972656
    10. '=None' → logprob: -20.875038146972656

Token 1842: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1313992738723755
    2. ':' → logprob: -3.006399154663086
    3. ':
' → logprob: -3.256399154663086
    4. ' or' → logprob: -3.631399154663086
    5. '       ' → logprob: -5.006399154663086
    6. 'print' → logprob: -6.881399154663086
    7. ' and' → logprob: -8.381399154663086
    8. '<|end|>' → logprob: -9.381399154663086
    9. '               ' → logprob: -9.631399154663086
    10. '```' → logprob: -9.756399154663086

Token 1843: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007915589958429337
    2. 'print' → logprob: -5.382915496826172
    3. '           ' → logprob: -5.757915496826172
    4. ' print' → logprob: -9.257915496826172
    5. '```' → logprob: -10.632915496826172
    6. '   ' → logprob: -11.382915496826172
    7. '
' → logprob: -15.132915496826172
    8. '`' → logprob: -15.132915496826172
    9. '               ' → logprob: -15.257915496826172
    10. '        
' → logprob: -15.382915496826172

Token 1844: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002028923248872161
    2. '       ' → logprob: -6.252028942108154
    3. ' print' → logprob: -9.252028465270996
    4. '```' → logprob: -12.752028465270996
    5. '   ' → logprob: -13.877028465270996
    6. '	print' → logprob: -14.877028465270996
    7. '           ' → logprob: -16.252029418945312
    8. '``' → logprob: -17.252029418945312
    9. 'printf' → logprob: -17.627029418945312
    10. '
' → logprob: -17.752029418945312

Token 1845: '("' (ID: 568)
  Prédit: 'NA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.0420658253133297
    2. '-' → logprob: -3.5420658588409424
    3. '("' → logprob: -4.792065620422363
    4. '('' → logprob: -6.542065620422363
    5. 'No' → logprob: -7.417065620422363
    6. '(' → logprob: -7.917065620422363
    7. '"' → logprob: -7.917065620422363
    8. '(-' → logprob: -8.042065620422363
    9. 'Na' → logprob: -8.167065620422363
    10. 'N' → logprob: -9.042065620422363

Token 1846: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.018241489306092262
    2. '-' → logprob: -4.0182414054870605
    3. 'Na' → logprob: -10.018241882324219
    4. 'None' → logprob: -10.893241882324219
    5. 'N' → logprob: -11.393241882324219
    6. 'NO' → logprob: -12.018241882324219
    7. 'NONE' → logprob: -13.018241882324219
    8. 'No' → logprob: -13.143241882324219
    9. 'na' → logprob: -13.143241882324219
    10. '"' → logprob: -13.143241882324219

Token 1847: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16025398671627045
    2. '")' → logprob: -1.9102540016174316
    3. '")
' → logprob: -10.910253524780273
    4. ')")
' → logprob: -11.410253524780273
    5. ')
' → logprob: -15.285253524780273
    6. ')' → logprob: -15.910253524780273
    7. ')")' → logprob: -16.660253524780273
    8. '"' → logprob: -17.785253524780273
    9. '")

' → logprob: -18.660253524780273
    10. '")}
' → logprob: -18.910253524780273

Token 1848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014553742483258247
    2. '           ' → logprob: -4.264553546905518
    3. 'continue' → logprob: -8.514554023742676
    4. 'else' → logprob: -8.639554023742676
    5. '```' → logprob: -12.264554023742676
    6. 'elif' → logprob: -12.889554023742676
    7. '   ' → logprob: -13.389554023742676
    8. ' continue' → logprob: -14.139554023742676
    9. '<|end|>' → logprob: -14.139554023742676
    10. '               ' → logprob: -14.639554023742676

Token 1849: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3146325647830963
    2. 'else' (adapté à ' else') → logprob: -1.314632534980774
    3. ' else' → logprob: -6.689632415771484
    4. 'elif' → logprob: -9.689632415771484
    5. 'continue' → logprob: -10.564632415771484
    6. '           ' → logprob: -11.189632415771484
    7. '```' → logprob: -11.564632415771484
    8. '   ' → logprob: -11.814632415771484
    9. '	' → logprob: -12.939632415771484
    10. '	else' → logprob: -13.189632415771484

Token 1850: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009489729069173336
    2. ' print' → logprob: -5.5094895362854
    3. ':' → logprob: -5.7594895362854
    4. 'print' → logprob: -6.8844895362854
    5. ':
' → logprob: -7.2594895362854
    6. '[' → logprob: -8.509490013122559
    7. '          ' → logprob: -10.509490013122559
    8. '(print' → logprob: -10.509490013122559
    9. '():
' → logprob: -10.634490013122559
    10. '		' → logprob: -10.634490013122559

Token 1851: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6973304748535156
    2. ' print' → logprob: -0.6973304748535156
    3. '       ' → logprob: -5.822330474853516
    4. '           ' → logprob: -6.947330474853516
    5. '```' → logprob: -8.447330474853516
    6. '	print' → logprob: -11.322330474853516
    7. '   ' → logprob: -11.572330474853516
    8. '        ' → logprob: -12.197330474853516
    9. ' for' → logprob: -13.072330474853516
    10. ' ' → logprob: -13.197330474853516

Token 1852: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. '           ' → logprob: -17.62502670288086
    4. '```' → logprob: -17.87502670288086
    5. '       ' → logprob: -18.75002670288086
    6. 'for' → logprob: -19.12502670288086
    7. '   ' → logprob: -19.75002670288086
    8. '	print' → logprob: -20.75002670288086
    9. 'printf' → logprob: -21.62502670288086
    10. 'pr' → logprob: -21.87502670288086

Token 1853: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3114832937717438
    2. '('' → logprob: -1.5614832639694214
    3. '("' → logprob: -3.061483383178711
    4. '(' → logprob: -4.561483383178711
    5. '*' → logprob: -7.811483383178711
    6. '"' → logprob: -9.311483383178711
    7. ''' → logprob: -10.436483383178711
    8. '(*(' → logprob: -11.061483383178711
    9. '()' → logprob: -12.561483383178711
    10. ' (*' → logprob: -13.061483383178711

Token 1854: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -19.75
    3. '[' → logprob: -21.875
    4. '(res' → logprob: -22.125
    5. 'map' → logprob: -23.25
    6. '$res' → logprob: -24.875
    7. '
' → logprob: -25.5
    8. '_res' → logprob: -25.5
    9. '	res' → logprob: -26.25
    10. 'result' → logprob: -26.375

Token 1855: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ')
' → logprob: -11.250020027160645
    3. '<|end|>' → logprob: -13.250020027160645
    4. '   ' → logprob: -13.625020027160645
    5. '())' → logprob: -13.625020027160645
    6. '()' → logprob: -14.375020027160645
    7. ' )' → logprob: -14.875020027160645
    8. '       ' → logprob: -15.000020027160645
    9. '),' → logprob: -15.125020027160645
    10. '```' → logprob: -15.500020027160645

Token 1856: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1857: ' __' (ID: 2516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07002357393503189
    2. '__' → logprob: -3.195023536682129
    3. '_' → logprob: -4.070023536682129
    4. '```' → logprob: -5.820023536682129
    5. '_main' → logprob: -5.945023536682129
    6. 'main' → logprob: -7.070023536682129
    7. '()
' → logprob: -7.570023536682129
    8. '(' → logprob: -7.945023536682129
    9. ' __' → logprob: -7.945023536682129
    10. '().__' → logprob: -8.445023536682129

Token 1858: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02848934754729271
    2. '==' → logprob: -4.403489112854004
    3. '```' → logprob: -5.528489112854004
    4. '__.__' → logprob: -5.903489112854004
    5. '__":
' → logprob: -6.278489112854004
    6. '=="' → logprob: -6.403489112854004
    7. ' ==' → logprob: -7.028489112854004
    8. '=='' → logprob: -7.403489112854004
    9. '__':
' → logprob: -7.528489112854004
    10. '__('' → logprob: -7.778489112854004

Token 1859: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019442226039245725
    2. '```' → logprob: -7.001944065093994
    3. '==' → logprob: -7.751944065093994
    4. '=="' → logprob: -8.751944541931152
    5. '__
' → logprob: -9.126944541931152
    6. '_' → logprob: -9.876944541931152
    7. '__.__' → logprob: -9.876944541931152
    8. '=='' → logprob: -10.001944541931152
    9. '___' → logprob: -10.251944541931152
    10. ''' → logprob: -10.751944541931152

Token 1860: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8613749742507935
    2. '=="' → logprob: -1.2363749742507935
    3. '__' → logprob: -1.4863749742507935
    4. '=='' → logprob: -2.986374855041504
    5. ' ==' → logprob: -4.736374855041504
    6. '==
' → logprob: -7.111374855041504
    7. '```' → logprob: -8.486374855041504
    8. '===' → logprob: -9.611374855041504
    9. '[' → logprob: -9.986374855041504
    10. '"' → logprob: -10.111374855041504

Token 1861: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04308208450675011
    2. ''' → logprob: -3.2930819988250732
    3. '"' → logprob: -5.293082237243652
    4. 'main' → logprob: -13.418082237243652
    5. '___' → logprob: -16.168081283569336
    6. ' __' → logprob: -17.418081283569336
    7. '_main' → logprob: -17.793081283569336
    8. ' "__' → logprob: -18.043081283569336
    9. '____' → logprob: -18.418081283569336
    10. '__
' → logprob: -18.418081283569336

Token 1862: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.778209353797138e-05
    2. '__' → logprob: -10.125067710876465
    3. '"' → logprob: -10.625067710876465
    4. 'name' → logprob: -13.125067710876465
    5. ''' → logprob: -13.750067710876465
    6. ' main' → logprob: -15.750067710876465
    7. '_main' → logprob: -16.62506866455078
    8. '	main' → logprob: -18.12506866455078
    9. 'built' → logprob: -18.62506866455078
    10. '"name' → logprob: -18.75006866455078

Token 1863: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16231213510036469
    2. '__' → logprob: -1.9123121500015259
    3. '__':
' → logprob: -6.662312030792236
    4. ':' → logprob: -7.912312030792236
    5. '__:' → logprob: -8.787312507629395
    6. '():
' → logprob: -9.287312507629395
    7. ':
' → logprob: -9.662312507629395
    8. '__["' → logprob: -10.662312507629395
    9. '("__' → logprob: -11.037312507629395
    10. '.__' → logprob: -11.162312507629395

Token 1864: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12432797998189926
    2. '	main' → logprob: -2.2493278980255127
    3. '   ' → logprob: -4.749328136444092
    4. ' main' → logprob: -5.999328136444092
    5. '```' → logprob: -8.999327659606934
    6. '(main' → logprob: -9.749327659606934
    7. '
' → logprob: -9.874327659606934
    8. '_main' → logprob: -10.249327659606934
    9. '    
' → logprob: -11.499327659606934
    10. '`' → logprob: -12.374327659606934

Token 1865: ' from' (ID: 591)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -19.5
    4. '(main' → logprob: -22.75
    5. '_main' → logprob: -23.75
    6. '   ' → logprob: -24.25
    7. 'import' → logprob: -24.375
    8. '.main' → logprob: -24.75
    9. '
' → logprob: -24.875
    10. 'Main' → logprob: -26.25

Token 1866: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0002644351334311068
    2. ' math' → logprob: -8.250264167785645
    3. 'cmath' → logprob: -13.000264167785645
    4. '   ' → logprob: -14.750264167785645
    5. '_math' → logprob: -16.00026512145996
    6. '(math' → logprob: -16.00026512145996
    7. ' ' → logprob: -16.37526512145996
    8. 'import' → logprob: -16.50026512145996
    9. '.math' → logprob: -16.75026512145996
    10. 'mat' → logprob: -18.37526512145996

Token 1867: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18065035343170166
    2. 'import' → logprob: -1.8056503534317017
    3. '	import' → logprob: -7.055650234222412
    4. '   ' → logprob: -11.18065071105957
    5. '.' → logprob: -11.93065071105957
    6. ' ' → logprob: -12.18065071105957
    7. '<|end|>' → logprob: -12.43065071105957
    8. '    ' → logprob: -12.68065071105957
    9. '.import' → logprob: -12.80565071105957
    10. 'from' → logprob: -13.43065071105957

Token 1868: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -1.0087516784551553e-05
    2. 'import' → logprob: -12.00001049041748
    3. '.atan' → logprob: -12.87501049041748
    4. 'at' → logprob: -13.87501049041748
    5. ' atan' → logprob: -15.12501049041748
    6. 'from' → logprob: -17.500009536743164
    7. 'sqrt' → logprob: -17.625009536743164
    8. 'ata' → logprob: -18.000009536743164
    9. 'aton' → logprob: -18.250009536743164
    10. 'aten' → logprob: -18.875009536743164

Token 1869: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.580929347255733e-05
    2. '₂' → logprob: -11.125016212463379
    3. 'import' → logprob: -14.125016212463379
    4. '²' → logprob: -16.250015258789062
    5. '_' → logprob: -16.250015258789062
    6. 'from' → logprob: -17.750015258789062
    7. '```' → logprob: -17.875015258789062
    8. '۲' → logprob: -18.750015258789062
    9. ' ' → logprob: -19.500015258789062
    10. 'r' → logprob: -19.625015258789062

Token 1870: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08361468464136124
    2. '<|end|>' → logprob: -3.3336145877838135
    3. 'main' → logprob: -3.5836145877838135
    4. ' main' → logprob: -5.333614826202393
    5. '	main' → logprob: -6.208614826202393
    6. '(main' → logprob: -6.208614826202393
    7. '[' → logprob: -6.458614826202393
    8. ')' → logprob: -6.958614826202393
    9. '
' → logprob: -6.958614826202393
    10. '    
' → logprob: -6.958614826202393

Token 1871: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0382733978331089
    2. 'main' → logprob: -3.288273334503174
    3. ' main' → logprob: -9.163273811340332
    4. '	main' → logprob: -9.163273811340332
    5. ' ' → logprob: -11.663273811340332
    6. '    
' → logprob: -11.913273811340332
    7. '  ' → logprob: -13.413273811340332
    8. '```' → logprob: -13.788273811340332
    9. '    ' → logprob: -13.913273811340332
    10. '(main' → logprob: -14.288273811340332

Token 1872: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0007193420315161347
    2. '   ' → logprob: -7.2507195472717285
    3. ' main' → logprob: -11.75071907043457
    4. '	main' → logprob: -13.37571907043457
    5. '_main' → logprob: -18.37571907043457
    6. '(main' → logprob: -19.25071907043457
    7. ' ' → logprob: -19.50071907043457
    8. 'import' → logprob: -20.25071907043457
    9. '  ' → logprob: -20.50071907043457
    10. '    
' → logprob: -20.75071907043457

Token 1873: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1871
Tokens correctement prédits (1ère position, stricte): 651
Tokens correctement prédits (1ère position, avec adaptation): 701
Tokens correctement prédits (top 10): 1346
Précision stricte (1ère position): 34.79%
Précision adaptée (1ère position): 37.47%
Précision (top 10): 71.94%
================================================================================
