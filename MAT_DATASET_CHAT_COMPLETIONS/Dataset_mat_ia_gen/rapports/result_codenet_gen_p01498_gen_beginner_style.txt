================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N, W, H = map(int, input().split())
slimes = [tuple(map(int, input().split())) for _ in range(N)]

# On veut le minimum de mouvements pour unir toutes les slime, en déplaçant un slime à la fois.
# Chaque slime peut se déplacer en ligne droite jusqu'à rencontrer un autre slime ou un mur.

# Remarque: une approche simple est d'utiliser l'arbre couvrant minimum (MST) complet avec la distance 
# de Manhattan comme poids. Ici la distance est un peu spéciale car un slime peut aller jusqu'à toucher 
# un autre slime sans s'arrêter entre. 
# Mais en déplaçant chaque slime en ligne droite, la distance minimale entre deux slimes est 
# la distance de Manhattan entre eux moins 1 (parce qu'ils s'unissent dès qu'ils se rencontrent).
# Pour des déplacements jusqu'au mur ou jusqu'à toucher un slime, cela donne une distance effective égale 
# à la distance de Manhattan entre deux slimes moins 1.

# Donc on considère un graphe complet entre slimes avec poids = distance Manhattan - 1
# Le nombre minimum de moves est le poids total d'un MST sur ce graphe.

# Implémentation naïve pour débutant: calculer toutes les distances et faire un MST via Kruskal.
# Cela sera lent mais acceptable comme solution naïve.

# Calcul des arêtes
edges = []
for i in range(N):
    x1, y1 = slimes[i]
    for j in range(i+1, N):
        x2, y2 = slimes[j]
        dist = abs(x1 - x2) + abs(y1 - y2) - 1
        edges.append((dist, i, j))

# Tri des arêtes par poids
edges.sort()

# Union-Find simple pour MST
parent = [i for i in range(N)]

def find(x):
    while parent[x] != x:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x

def union(a, b):
    a = find(a)
    b = find(b)
    if a == b:
        return False
    parent[b] = a
    return True

result = 0
count = 0
for dist, a, b in edges:
    if union(a, b):
        result += dist
        count += 1
        if count == N - 1:
            break

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.22937922179698944
    2. '_limit' → logprob: -1.6043791770935059
    3. '_depth' → logprob: -5.729379177093506
    4. 'depth' → logprob: -7.854379177093506
    5. ' limit' → logprob: -9.229379653930664
    6. 'Limit' → logprob: -9.479379653930664
    7. 'lim' → logprob: -10.354379653930664
    8. 'error' → logprob: -10.729379653930664
    9. '-limit' → logprob: -11.229379653930664
    10. '_lim' → logprob: -11.479379653930664

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10537762194871902
    2. ' ' → logprob: -2.980377674102783
    3. '=' → logprob: -3.355377674102783
    4. ',' → logprob: -4.355377674102783
    5. ' ,' → logprob: -6.980377674102783
    6. ')' → logprob: -8.730377197265625
    7. '<|end|>' → logprob: -9.105377197265625
    8. '=int' → logprob: -9.980377197265625
    9. '.' → logprob: -10.105377197265625
    10. ' )' → logprob: -10.230377197265625

Token 15: ' W' (ID: 486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7771639227867126
    2. ' K' → logprob: -1.4021639823913574
    3. 'M' → logprob: -2.4021639823913574
    4. '=' → logprob: -2.6521639823913574
    5. ' M' → logprob: -3.0271639823913574
    6. 'input' → logprob: -3.6521639823913574
    7. ' ' → logprob: -4.152163982391357
    8. '=int' → logprob: -4.652163982391357
    9. ' =' → logprob: -4.777163982391357
    10. 'int' → logprob: -4.902163982391357

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194594264030457
    2. '=' → logprob: -1.501945972442627
    3. ',' → logprob: -11.626945495605469
    4. '=input' → logprob: -12.376945495605469
    5. ' ' → logprob: -13.001945495605469
    6. '=sys' → logprob: -14.876945495605469
    7. '=int' → logprob: -15.376945495605469
    8. '=list' → logprob: -15.876945495605469
    9. ')' → logprob: -16.00194549560547
    10. ' ,' → logprob: -16.12694549560547

Token 17: ' H' (ID: 487)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.33942660689353943
    2. ' w' → logprob: -1.3394266366958618
    3. 'v' → logprob: -4.964426517486572
    4. 'V' → logprob: -5.339426517486572
    5. 'weight' → logprob: -6.089426517486572
    6. 'wt' → logprob: -6.089426517486572
    7. 'weights' → logprob: -6.339426517486572
    8. ' wt' → logprob: -6.464426517486572
    9. ' V' → logprob: -6.839426517486572
    10. ' v' → logprob: -6.964426517486572

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18101190030574799
    2. '=' → logprob: -1.8060119152069092
    3. ',' → logprob: -6.68101167678833
    4. ' ,' → logprob: -12.681012153625488
    5. '=input' → logprob: -12.806012153625488
    6. ' ' → logprob: -13.056012153625488
    7. '=sys' → logprob: -13.806012153625488
    8. '<|end|>' → logprob: -14.868512153625488
    9. '=int' → logprob: -15.181012153625488
    10. ')' → logprob: -15.243512153625488

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016110733151435852
    2. 'map' → logprob: -4.141110897064209
    3. ' ' → logprob: -10.26611042022705
    4. ' input' → logprob: -10.39111042022705
    5. ' list' → logprob: -12.14111042022705
    6. '	map' → logprob: -13.14111042022705
    7. 'input' → logprob: -13.26611042022705
    8. '0' → logprob: -14.76611042022705
    9. 'list' → logprob: -15.39111042022705
    10. ' [' → logprob: -15.51611042022705

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014701413922011852
    2. '(' → logprob: -4.2647013664245605
    3. '(lambda' → logprob: -8.264701843261719
    4. '(input' → logprob: -9.139701843261719
    5. '(str' → logprob: -9.264701843261719
    6. 'int' → logprob: -10.389701843261719
    7. '(list' → logprob: -11.014701843261719
    8. '[int' → logprob: -11.764701843261719
    9. '(eval' → logprob: -11.889701843261719
    10. '(len' → logprob: -12.139701843261719

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04920560121536255
    2. ',input' → logprob: -3.0492055416107178
    3. '(input' → logprob: -8.424205780029297
    4. '(' → logprob: -8.424205780029297
    5. ',(' → logprob: -9.924205780029297
    6. '(sys' → logprob: -10.299205780029297
    7. ',int' → logprob: -10.424205780029297
    8. ' ,' → logprob: -10.549205780029297
    9. 'input' → logprob: -10.799205780029297
    10. ',System' → logprob: -12.549205780029297

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16023163497447968
    2. ' input' → logprob: -1.910231590270996
    3. 'sys' → logprob: -12.785231590270996
    4. ' sys' → logprob: -12.785231590270996
    5. ' ' → logprob: -13.535231590270996
    6. ')' → logprob: -15.285231590270996
    7. ',input' → logprob: -16.160232543945312
    8. '	input' → logprob: -16.410232543945312
    9. '(input' → logprob: -16.410232543945312
    10. '=input' → logprob: -17.160232543945312

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10275448113679886
    2. '())' → logprob: -2.352754592895508
    3. '()' → logprob: -6.102754592895508
    4. ')' → logprob: -8.602754592895508
    5. '()))' → logprob: -10.227754592895508
    6. '());' → logprob: -10.477754592895508
    7. '()),' → logprob: -11.102754592895508
    8. '(' → logprob: -11.477754592895508
    9. '(),' → logprob: -11.602754592895508
    10. '()>' → logprob: -12.102754592895508

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003096023283433169
    2. 'strip' → logprob: -8.250309944152832
    3. ')' → logprob: -10.000309944152832
    4. ' split' → logprob: -13.500309944152832
    5. 'rstrip' → logprob: -13.875309944152832
    6. '())' → logprob: -16.000308990478516
    7. 'spl' → logprob: -16.500308990478516
    8. '(split' → logprob: -16.500308990478516
    9. 'read' → logprob: -16.750308990478516
    10. ').' → logprob: -17.000308990478516

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08463948220014572
    2. '))' → logprob: -2.584639549255371
    3. '())' → logprob: -5.209639549255371
    4. '()' → logprob: -9.084639549255371
    5. '()))' → logprob: -9.084639549255371
    6. '),' → logprob: -11.084639549255371
    7. ')))' → logprob: -11.334639549255371
    8. '`)' → logprob: -12.709639549255371
    9. '(' → logprob: -13.334639549255371
    10. ')`' → logprob: -13.334639549255371

Token 26: 'sl' (ID: 4500)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8987643718719482
    2. '\n' → logprob: -1.2737643718719482
    3. ')' → logprob: -2.5237643718719482
    4. '<|end|>' → logprob: -2.5237643718719482
    5. '```' → logprob: -3.1487643718719482
    6. '\' → logprob: -3.1487643718719482
    7. '  
' → logprob: -4.523764610290527
    8. ' 
' → logprob: -4.773764610290527
    9. 'data' → logprob: -5.023764610290527
    10. ')
' → logprob: -5.398764610290527

Token 27: 'imes' (ID: 2332)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.9467229843139648
    2. 's' → logprob: -1.6967229843139648
    3. 'ices' → logprob: -2.321722984313965
    4. 'e' → logprob: -2.821722984313965
    5. 'imes' → logprob: -3.446722984313965
    6. 'ots' → logprob: -3.571722984313965
    7. 'st' → logprob: -3.571722984313965
    8. '=' → logprob: -3.946722984313965
    9. 'en' → logprob: -3.946722984313965
    10. ' =' → logprob: -4.196722984313965

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3393334746360779
    2. '=' → logprob: -1.5893335342407227
    3. '.' → logprob: -2.9643335342407227
    4. '_' → logprob: -4.339333534240723
    5. '[' → logprob: -4.714333534240723
    6. '_sizes' → logprob: -5.589333534240723
    7. '=[]' → logprob: -5.964333534240723
    8. '_size' → logprob: -7.214333534240723
    9. 's' → logprob: -7.464333534240723
    10. '[:]' → logprob: -7.589333534240723

Token 29: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6968282461166382
    2. '[' → logprob: -0.9468282461166382
    3. '[list' → logprob: -2.3218283653259277
    4. ' []' → logprob: -4.946828365325928
    5. '[int' → logprob: -5.446828365325928
    6. '[]' → logprob: -6.071828365325928
    7. '[List' → logprob: -6.821828365325928
    8. '[input' → logprob: -7.946828365325928
    9. 'list' → logprob: -8.57182788848877
    10. '[len' → logprob: -9.82182788848877

Token 30: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.27678021788597107
    2. 'tuple' → logprob: -1.5267802476882935
    3. 'map' → logprob: -4.026780128479004
    4. ' list' → logprob: -5.651780128479004
    5. ' tuple' → logprob: -6.026780128479004
    6. 'int' → logprob: -7.276780128479004
    7. ' map' → logprob: -9.901780128479004
    8. '(tuple' → logprob: -11.401780128479004
    9. '[]' → logprob: -12.026780128479004
    10. '[int' → logprob: -12.026780128479004

Token 31: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00010819212911883369
    2. '(int' → logprob: -9.625107765197754
    3. 'map' → logprob: -10.250107765197754
    4. '(' → logprob: -12.000107765197754
    5. '(input' → logprob: -15.500107765197754
    6. ' map' → logprob: -15.875107765197754
    7. 'int' → logprob: -17.12510871887207
    8. '	map' → logprob: -17.37510871887207
    9. '()' → logprob: -17.50010871887207
    10. '(
' → logprob: -17.62510871887207

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01111584808677435
    2. 'int' → logprob: -4.511116027832031
    3. ' int' → logprob: -10.636116027832031
    4. '<int' → logprob: -11.136116027832031
    5. '[int' → logprob: -11.511116027832031
    6. ',int' → logprob: -12.011116027832031
    7. '=int' → logprob: -12.761116027832031
    8. ']int' → logprob: -12.886116027832031
    9. '```' → logprob: -13.261116027832031
    10. '(input' → logprob: -13.511116027832031

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008858955465257168
    2. ',input' → logprob: -4.758859157562256
    3. '(input' → logprob: -8.508858680725098
    4. 'input' → logprob: -10.383858680725098
    5. '(' → logprob: -12.383858680725098
    6. ' ,' → logprob: -12.633858680725098
    7. ',int' → logprob: -13.258858680725098
    8. '```' → logprob: -14.008858680725098
    9. '(),' → logprob: -14.258858680725098
    10. ' input' → logprob: -15.258858680725098

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759441256523132
    2. ' input' → logprob: -0.8259441256523132
    3. '	input' → logprob: -13.700943946838379
    4. ' ' → logprob: -14.075943946838379
    5. ' sys' → logprob: -14.325943946838379
    6. '(input' → logprob: -14.575943946838379
    7. ')' → logprob: -14.700943946838379
    8. 'sys' → logprob: -14.950943946838379
    9. '=input' → logprob: -15.450943946838379
    10. '<input' → logprob: -15.575943946838379

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.87500286102295
    3. '()' → logprob: -13.87500286102295
    4. '.' → logprob: -15.12500286102295
    5. ' ().' → logprob: -15.37500286102295
    6. ').' → logprob: -16.000003814697266
    7. '.readline' → logprob: -16.375003814697266
    8. '.split' → logprob: -16.375003814697266
    9. '>().' → logprob: -17.125003814697266
    10. '('').' → logprob: -17.250003814697266

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'strip' → logprob: -13.625001907348633
    3. 'rstrip' → logprob: -14.750001907348633
    4. ' split' → logprob: -15.250001907348633
    5. 'spl' → logprob: -16.500001907348633
    6. '(split' → logprob: -16.750001907348633
    7. 's' → logprob: -18.625001907348633
    8. '.split' → logprob: -18.750001907348633
    9. 'read' → logprob: -19.750001907348633
    10. 'sl' → logprob: -20.375001907348633

Token 37: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6936427354812622
    2. '()))' → logprob: -0.6936427354812622
    3. '()' → logprob: -8.193642616271973
    4. '())' → logprob: -9.193642616271973
    5. ')' → logprob: -9.443642616271973
    6. ' ))' → logprob: -11.568642616271973
    7. ')))' → logprob: -11.693642616271973
    8. ' ' → logprob: -12.568642616271973
    9. '()))
' → logprob: -12.818642616271973
    10. '(' → logprob: -12.943642616271973

Token 38: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06345923990011215
    2. '()' → logprob: -3.4384591579437256
    3. 'for' → logprob: -3.9384591579437256
    4. '(' → logprob: -5.313459396362305
    5. ' for' → logprob: -5.938459396362305
    6. ')]' → logprob: -6.688459396362305
    7. '())' → logprob: -7.063459396362305
    8. ']' → logprob: -9.438459396362305
    9. '()]' → logprob: -9.938459396362305
    10. ' )' → logprob: -11.188459396362305

Token 39: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1663820594549179
    2. '_' → logprob: -1.916382074356079
    3. '_range' → logprob: -5.6663818359375
    4. 'range' → logprob: -6.0413818359375
    5. ' _' → logprob: -8.1663818359375
    6. '(range' → logprob: -11.6663818359375
    7. ' in' → logprob: -12.9163818359375
    8. ' i' → logprob: -13.1663818359375
    9. '	range' → logprob: -13.7913818359375
    10. ' ' → logprob: -13.9163818359375

Token 40: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41260313987731934
    2. ' in' → logprob: -1.4126031398773193
    3. ' range' → logprob: -2.7876031398773193
    4. 'in' → logprob: -3.4126031398773193
    5. ' ' → logprob: -10.537603378295898
    6. '  ' → logprob: -12.287603378295898
    7. '	range' → logprob: -12.537603378295898
    8. 'i' → logprob: -13.537603378295898
    9. '```' → logprob: -13.912603378295898
    10. '(range' → logprob: -13.912603378295898

Token 41: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031784253660589457
    2. ' range' → logprob: -5.753178596496582
    3. '	range' → logprob: -14.878178596496582
    4. '(range' → logprob: -16.253177642822266
    5. ' ' → logprob: -16.378177642822266
    6. '  ' → logprob: -17.253177642822266
    7. '```' → logprob: -17.378177642822266
    8. '   ' → logprob: -17.378177642822266
    9. 'rang' → logprob: -17.878177642822266
    10. 'r' → logprob: -18.003177642822266

Token 42: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00043555660522542894
    2. '(' → logprob: -7.7504353523254395
    3. '(n' → logprob: -13.000435829162598
    4. 'N' → logprob: -13.250435829162598
    5. '(
' → logprob: -14.500435829162598
    6. ' (' → logprob: -16.37543487548828
    7. '(int' → logprob: -16.75043487548828
    8. '((' → logprob: -17.62543487548828
    9. '(M' → logprob: -17.75043487548828
    10. '(Q' → logprob: -17.87543487548828

Token 43: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012935701524838805
    2. ')' → logprob: -7.001293659210205
    3. ']' → logprob: -7.876293659210205
    4. ')],' → logprob: -14.751293182373047
    5. ')]
' → logprob: -14.751293182373047
    6. '])]' → logprob: -15.001293182373047
    7. ')])' → logprob: -15.126293182373047
    8. '))' → logprob: -15.626293182373047
    9. '）' → logprob: -15.751293182373047
    10. '])' → logprob: -16.001293182373047

Token 44: '#' (ID: 2)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -1.28180730342865
    2. 's' → logprob: -1.78180730342865
    3. 'def' → logprob: -2.0318074226379395
    4. '#' → logprob: -2.6568074226379395
    5. ')' → logprob: -2.7818074226379395
    6. '```' → logprob: -2.7818074226379395
    7. ',' → logprob: -2.9068074226379395
    8. 'for' → logprob: -3.7818074226379395
    9. 'sorted' → logprob: -3.9068074226379395
    10. 'dp' → logprob: -4.0318074226379395

Token 45: ' On' (ID: 2160)
  Prédit: ' sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sl' → logprob: -1.6608728170394897
    2. ' dp' → logprob: -2.1608729362487793
    3. 'sl' → logprob: -2.2858729362487793
    4. ' for' → logprob: -2.2858729362487793
    5. 'dp' → logprob: -2.4108729362487793
    6. 'def' → logprob: -2.6608729362487793
    7. 'from' → logprob: -3.0358729362487793
    8. 'for' → logprob: -3.1608729362487793
    9. 's' → logprob: -3.1608729362487793
    10. ' sorted' → logprob: -3.4108729362487793

Token 46: ' veut' (ID: 41653)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003811122616752982
    2. '_' → logprob: -5.753811359405518
    3. ' e' → logprob: -8.37881088256836
    4. 'es' → logprob: -9.25381088256836
    5. 's' → logprob: -10.25381088256836
    6. 'ed' → logprob: -10.50381088256836
    7. '_e' → logprob: -10.62881088256836
    8. ' for' → logprob: -10.75381088256836
    9. 'def' → logprob: -11.00381088256836
    10. 'el' → logprob: -11.12881088256836

Token 47: ' le' (ID: 505)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.128210425376892
    2. ' tr' → logprob: -1.503210425376892
    3. 'def' → logprob: -2.5032105445861816
    4. ' que' → logprob: -2.8782105445861816
    5. ' sorted' → logprob: -3.3782105445861816
    6. ' vérifier' → logprob: -3.8782105445861816
    7. 'sorted' → logprob: -3.8782105445861816
    8. '#' → logprob: -4.128210544586182
    9. 'sort' → logprob: -4.253210544586182
    10. ' les' → logprob: -4.628210544586182

Token 48: ' minimum' (ID: 11085)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.5493947863578796
    2. ' plus' → logprob: -1.6743948459625244
    3. ' max' → logprob: -2.7993948459625244
    4. 'plus' → logprob: -3.0493948459625244
    5. ' nombre' → logprob: -3.2993948459625244
    6. 'max' → logprob: -4.174394607543945
    7. 's' → logprob: -4.549394607543945
    8. 'maximum' → logprob: -4.549394607543945
    9. 'temps' → logprob: -4.549394607543945
    10. ' meilleur' → logprob: -5.049394607543945

Token 49: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.489847868680954
    2. '_' → logprob: -1.4898478984832764
    3. '=' → logprob: -2.7398478984832764
    4. 's' → logprob: -3.4898478984832764
    5. ' _' → logprob: -4.239847660064697
    6. ' ' → logprob: -4.239847660064697
    7. ' d' → logprob: -5.489847660064697
    8. 'd' → logprob: -5.739847660064697
    9. 'distance' → logprob: -6.239847660064697
    10. ' \' → logprob: -6.489847660064697

Token 50: ' mouvements' (ID: 119420)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.5944085121154785
    2. 'temps' → logprob: -1.3444085121154785
    3. 's' → logprob: -3.2194085121154785
    4. ' déplacements' → logprob: -3.3444085121154785
    5. ' time' → logprob: -4.3444085121154785
    6. 't' → logprob: -4.5944085121154785
    7. ' ' → logprob: -4.7194085121154785
    8. ' déplacement' → logprob: -4.8444085121154785
    9. ' t' → logprob: -4.9694085121154785
    10. 'dé' → logprob: -5.5944085121154785

Token 51: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0252424478530884
    2. ' :' → logprob: -1.5252424478530884
    3. ' ' → logprob: -1.6502424478530884
    4. ',' → logprob: -2.525242328643799
    5. ' =' → logprob: -2.775242328643799
    6. '.' → logprob: -3.275242328643799
    7. 's' → logprob: -4.150242328643799
    8. '=' → logprob: -4.400242328643799
    9. ' ,' → logprob: -4.900242328643799
    10. 'def' → logprob: -6.150242328643799

Token 52: ' unir' (ID: 130374)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.4054112434387207
    2. 'r' → logprob: -1.7804112434387207
    3. ' que' → logprob: -1.7804112434387207
    4. 'attr' → logprob: -2.7804112434387207
    5. 'tr' → logprob: -3.6554112434387207
    6. 't' → logprob: -3.7804112434387207
    7. 'fusion' → logprob: -3.7804112434387207
    8. ' attr' → logprob: -3.9054112434387207
    9. 'mettre' → logprob: -4.030411243438721
    10. 's' → logprob: -4.405411243438721

Token 53: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7408138513565063
    2. ' toutes' → logprob: -1.6158138513565063
    3. ' all' → logprob: -2.115813732147217
    4. ' tous' → logprob: -2.865813732147217
    5. 'all' → logprob: -3.365813732147217
    6. 's' → logprob: -3.615813732147217
    7. 'les' → logprob: -3.615813732147217
    8. 't' → logprob: -4.490813732147217
    9. 'sl' → logprob: -4.990813732147217
    10. ' ' → logprob: -5.240813732147217

Token 54: ' les' (ID: 1341)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -1.6232300996780396
    2. '_' → logprob: -1.7482300996780396
    3. '_sl' → logprob: -1.9982300996780396
    4. '<|end|>' → logprob: -1.9982300996780396
    5. '_s' → logprob: -2.24822998046875
    6. 's' → logprob: -2.49822998046875
    7. ',' → logprob: -3.87322998046875
    8. ' _' → logprob: -3.87322998046875
    9. ' les' → logprob: -3.99822998046875
    10. ' ,' → logprob: -4.12322998046875

Token 55: ' slime' (ID: 168619)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.28897643089294434
    2. ' sl' → logprob: -2.0389764308929443
    3. 'bl' → logprob: -3.1639764308929443
    4. 'b' → logprob: -4.538976669311523
    5. ' ' → logprob: -4.663976669311523
    6. '``' → logprob: -5.038976669311523
    7. 's' → logprob: -5.538976669311523
    8. '   ' → logprob: -5.538976669311523
    9. 'g' → logprob: -5.601476669311523
    10. 'ent' → logprob: -5.663976669311523

Token 56: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09371992945671082
    2. 's' → logprob: -3.093719959259033
    3. '
' → logprob: -4.468719959259033
    4. 'def' → logprob: -4.843719959259033
    5. ',' → logprob: -5.093719959259033
    6. '.' → logprob: -5.468719959259033
    7. 'import' → logprob: -5.843719959259033
    8. ':
' → logprob: -5.968719959259033
    9. ' :' → logprob: -6.718719959259033
    10. '```' → logprob: -6.843719959259033

Token 57: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14821647107601166
    2. ' =' → logprob: -3.898216485977173
    3. 'sl' → logprob: -4.148216247558594
    4. 'def' → logprob: -4.273216247558594
    5. '0' → logprob: -4.523216247558594
    6. ' i' → logprob: -4.648216247558594
    7. ' so' → logprob: -4.898216247558594
    8. 's' → logprob: -5.148216247558594
    9. '=' → logprob: -5.398216247558594
    10. ' 
' → logprob: -5.648216247558594

Token 58: ' dé' (ID: 2393)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.465234398841858
    2. ' les' → logprob: -1.840234398841858
    3. '```' → logprob: -2.7152342796325684
    4. 'les' → logprob: -2.7152342796325684
    5. 'part' → logprob: -2.9652342796325684
    6. ' part' → logprob: -3.3402342796325684
    7. 'chain' → logprob: -3.5902342796325684
    8. ' faisant' → logprob: -3.7152342796325684
    9. 'util' → logprob: -4.090234279632568
    10. 'union' → logprob: -4.340234279632568

Token 59: 'pla' (ID: 24939)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.594896674156189
    2. 'pla' → logprob: -1.719896674156189
    3. 'fin' → logprob: -1.844896674156189
    4. 'placer' → logprob: -2.8448967933654785
    5. 'termin' → logprob: -4.4698967933654785
    6. 'cal' → logprob: -4.7198967933654785
    7. 'plac' → logprob: -5.0948967933654785
    8. 'pl' → logprob: -5.2198967933654785
    9. 'du' → logprob: -5.3448967933654785
    10. 'fi' → logprob: -5.7198967933654785

Token 60: 'çant' (ID: 78714)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.7217393517494202
    2. 'pla' → logprob: -1.4717392921447754
    3. 'pl' → logprob: -2.5967392921447754
    4. 'plac' → logprob: -2.5967392921447754
    5. 'placement' → logprob: -3.3467392921447754
    6. 'f' → logprob: -3.4717392921447754
    7. 'place' → logprob: -4.221739292144775
    8. 'nt' → logprob: -4.846739292144775
    9. 'placements' → logprob: -4.971739292144775
    10. 'fin' → logprob: -5.346739292144775

Token 61: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2923462390899658
    2. ' un' → logprob: -1.6673462390899658
    3. 's' → logprob: -2.667346239089966
    4. ' them' → logprob: -2.667346239089966
    5. ' les' → logprob: -2.667346239089966
    6. ' une' → logprob: -3.042346239089966
    7. ' a' → logprob: -3.167346239089966
    8. ' ' → logprob: -3.417346239089966
    9. ' one' → logprob: -3.667346239089966
    10. '<|end|>' → logprob: -3.917346239089966

Token 62: ' slime' (ID: 168619)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1249176561832428
    2. 's' → logprob: -2.74991774559021
    3. '_' → logprob: -3.49991774559021
    4. ')' → logprob: -5.124917507171631
    5. '<|end|>' → logprob: -5.624917507171631
    6. ' slime' → logprob: -5.999917507171631
    7. ' )' → logprob: -6.249917507171631
    8. '(s' → logprob: -6.749917507171631
    9. ' _' → logprob: -6.999917507171631
    10. '  ' → logprob: -7.124917507171631

Token 63: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4343004822731018
    2. '
' → logprob: -1.934300422668457
    3. ',' → logprob: -2.559300422668457
    4. 's' → logprob: -3.559300422668457
    5. '.' → logprob: -4.309300422668457
    6. ' 
' → logprob: -4.309300422668457
    7. ' ' → logprob: -4.434300422668457
    8. '=' → logprob: -4.434300422668457
    9. ':
' → logprob: -4.934300422668457
    10. 'def' → logprob: -5.184300422668457

Token 64: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.02720308303833
    2. 'la' → logprob: -1.90220308303833
    3. ' la' → logprob: -2.27720308303833
    4. 'un' → logprob: -2.65220308303833
    5. ' un' → logprob: -2.77720308303833
    6. 'leur' → logprob: -2.90220308303833
    7. ' l' → logprob: -3.15220308303833
    8. ' une' → logprob: -3.27720308303833
    9. 'une' → logprob: -3.52720308303833
    10. '```' → logprob: -4.15220308303833

Token 65: ' fois' (ID: 14697)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.08965081721544266
    2. 'position' → logprob: -3.214650869369507
    3. ' position' → logprob: -4.214650630950928
    4. 'same' → logprob: -4.964650630950928
    5. 'm' → logprob: -5.839650630950928
    6. '```' → logprob: -6.464650630950928
    7. ' ' → logprob: -6.839650630950928
    8. ' mêmes' → logprob: -7.089650630950928
    9. 'positions' → logprob: -7.152150630950928
    10. 'part' → logprob: -7.214650630950928

Token 66: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02551853470504284
    2. '

' → logprob: -5.025518417358398
    3. 'def' → logprob: -5.150518417358398
    4. ':' → logprob: -5.775518417358398
    5. 'import' → logprob: -5.775518417358398
    6. ',' → logprob: -6.150518417358398
    7. '
' → logprob: -7.150518417358398
    8. '#' → logprob: -7.150518417358398
    9. ',
' → logprob: -7.400518417358398
    10. ' 
' → logprob: -7.525518417358398

Token 67: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016293589025735855
    2. '

' → logprob: -5.016293525695801
    3. ':' → logprob: -5.891293525695801
    4. 'def' → logprob: -6.016293525695801
    5. 'import' → logprob: -6.766293525695801
    6. '#' → logprob: -6.891293525695801
    7. '
' → logprob: -7.266293525695801
    8. ',' → logprob: -8.2662935256958
    9. ' 
' → logprob: -8.3912935256958
    10. '' → logprob: -8.5162935256958

Token 68: ' Chaque' (ID: 94758)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20289650559425354
    2. 'def' → logprob: -2.8278965950012207
    3. 'import' → logprob: -2.8278965950012207
    4. 'from' → logprob: -4.452896595001221
    5. '

' → logprob: -4.577896595001221
    6. '#' → logprob: -4.577896595001221
    7. ':' → logprob: -4.827896595001221
    8. '```' → logprob: -5.327896595001221
    9. ',' → logprob: -5.452896595001221
    10. 'sl' → logprob: -5.827896595001221

Token 69: ' slime' (ID: 168619)
  Prédit: ' slime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slime' → logprob: -0.02621077187359333
    2. ' déplacement' → logprob: -4.526210784912109
    3. ' mouvement' → logprob: -4.901210784912109
    4. 'sl' → logprob: -6.026210784912109
    5. ' movement' → logprob: -6.276210784912109
    6. ' sl' → logprob: -6.901210784912109
    7. 'movement' → logprob: -7.526210784912109
    8. ' move' → logprob: -7.901210784912109
    9. 'm' → logprob: -8.40121078491211
    10. ' ' → logprob: -8.90121078491211

Token 70: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.0164413452148438
    2. ' can' → logprob: -2.0164413452148438
    3. '<|end|>' → logprob: -2.2664413452148438
    4. 's' → logprob: -2.6414413452148438
    5. ' a' → logprob: -2.6414413452148438
    6. ')' → logprob: -3.0164413452148438
    7. ',' → logprob: -4.016441345214844
    8. ' est' → logprob: -4.016441345214844
    9. ' doit' → logprob: -4.141441345214844
    10. ' peux' → logprob: -4.266441345214844

Token 71: ' se' (ID: 458)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5225242972373962
    2. 'dé' → logprob: -1.522524356842041
    3. ' se' → logprob: -2.147524356842041
    4. 'être' → logprob: -3.647524356842041
    5. 'bou' → logprob: -4.022524356842041
    6. ' bou' → logprob: -5.147524356842041
    7. 's' → logprob: -5.647524356842041
    8. 'm' → logprob: -5.897524356842041
    9. ' ' → logprob: -6.522524356842041
    10. ' être' → logprob: -6.647524356842041

Token 72: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.0069390251301229
    2. 'd' → logprob: -5.131938934326172
    3. ' déplacer' → logprob: -7.506938934326172
    4. 'placer' → logprob: -8.506938934326172
    5. 'jo' → logprob: -10.381938934326172
    6. 'm' → logprob: -10.506938934326172
    7. '```' → logprob: -10.506938934326172
    8. 'de' → logprob: -11.256938934326172
    9. 'prendre' → logprob: -11.506938934326172
    10. 'u' → logprob: -11.631938934326172

Token 73: ' en' (ID: 469)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1338328123092651
    2. ' dans' → logprob: -1.1338328123092651
    3. ' de' → logprob: -2.0088329315185547
    4. ' ' → logprob: -2.7588329315185547
    5. 'd' → logprob: -3.0088329315185547
    6. 'dans' → logprob: -3.6338329315185547
    7. '<|end|>' → logprob: -4.008832931518555
    8. ' sur' → logprob: -4.508832931518555
    9. ' en' → logprob: -4.758832931518555
    10. ' in' → logprob: -4.883832931518555

Token 74: ' ligne' (ID: 19583)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2696123123168945
    2. ' ' → logprob: -1.8946123123168945
    3. 'up' → logprob: -2.1446123123168945
    4. ' haut' → logprob: -2.2696123123168945
    5. ' une' → logprob: -2.2696123123168945
    6. ' up' → logprob: -3.0196123123168945
    7. 'haut' → logprob: -3.2696123123168945
    8. 'une' → logprob: -3.6446123123168945
    9. '```' → logprob: -3.7696123123168945
    10. ' un' → logprob: -4.1446123123168945

Token 75: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.1685541272163391
    2. 'a' → logprob: -2.2935540676116943
    3. 'aire' → logprob: -4.168554306030273
    4. ' a' → logprob: -4.293554306030273
    5. 'e' → logprob: -4.293554306030273
    6. ' ' → logprob: -6.168554306030273
    7. 's' → logprob: -6.668554306030273
    8. ' dro' → logprob: -6.668554306030273
    9. ' droit' → logprob: -6.668554306030273
    10. ' horizont' → logprob: -7.168554306030273

Token 76: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15126976370811462
    2. '<|end|>' → logprob: -2.5262696743011475
    3. 's' → logprob: -4.026269912719727
    4. ')' → logprob: -4.276269912719727
    5. ' ,' → logprob: -5.151269912719727
    6. '.' → logprob: -5.151269912719727
    7. ' ' → logprob: -5.401269912719727
    8. '#' → logprob: -5.526269912719727
    9. 'def' → logprob: -6.276269912719727
    10. ' )' → logprob: -6.651269912719727

Token 77: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.014425795525312424
    2. ''au' → logprob: -4.514425754547119
    3. ''' → logprob: -6.639425754547119
    4. '’à' → logprob: -7.014425754547119
    5. 'à' → logprob: -7.889425754547119
    6. ''a' → logprob: -8.139426231384277
    7. 'au' → logprob: -8.389426231384277
    8. 'a' → logprob: -8.514426231384277
    9. ' à' → logprob: -10.389426231384277
    10. '#' → logprob: -11.139426231384277

Token 78: ' rencontrer' (ID: 81803)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.1398199796676636
    2. ' un' → logprob: -1.6398199796676636
    3. 'une' → logprob: -1.7648199796676636
    4. ' une' → logprob: -2.514820098876953
    5. ' ce' → logprob: -3.014820098876953
    6. ' n' → logprob: -3.014820098876953
    7. 'l' → logprob: -3.139820098876953
    8. 'n' → logprob: -4.014820098876953
    9. ' la' → logprob: -4.139820098876953
    10. 'ce' → logprob: -4.264820098876953

Token 79: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.38150280714035034
    2. 'un' → logprob: -1.2565028667449951
    3. 'une' → logprob: -4.006502628326416
    4. ' une' → logprob: -4.506502628326416
    5. 'l' → logprob: -7.131502628326416
    6. ''un' → logprob: -7.131502628326416
    7. ' l' → logprob: -8.256503105163574
    8. ' ' → logprob: -8.381503105163574
    9. ' ' → logprob: -8.756503105163574
    10. 'le' → logprob: -9.131503105163574

Token 80: ' autre' (ID: 20278)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.14376209676265717
    2. ' autre' → logprob: -2.8937621116638184
    3. 'mur' → logprob: -3.1437621116638184
    4. 'm' → logprob: -4.643762111663818
    5. '```' → logprob: -5.393762111663818
    6. ' obstacle' → logprob: -5.518762111663818
    7. 'ob' → logprob: -5.893762111663818
    8. ' slime' → logprob: -5.893762111663818
    9. ''autre' → logprob: -6.018762111663818
    10. 'sl' → logprob: -6.643762111663818

Token 81: ' slime' (ID: 168619)
  Prédit: ' slime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slime' → logprob: -0.983087956905365
    2. ')' → logprob: -1.8580880165100098
    3. 'sl' → logprob: -1.9830880165100098
    4. '.' → logprob: -2.1080880165100098
    5. ',' → logprob: -2.2330880165100098
    6. '_' → logprob: -4.23308801651001
    7. 's' → logprob: -4.48308801651001
    8. ' ' → logprob: -4.85808801651001
    9. '<|end|>' → logprob: -4.85808801651001
    10. ' ,' → logprob: -4.98308801651001

Token 82: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10484331846237183
    2. '<|end|>' → logprob: -3.1048433780670166
    3. '#' → logprob: -3.8548433780670166
    4. ':' → logprob: -4.9798431396484375
    5. ',' → logprob: -5.1048431396484375
    6. ')' → logprob: -5.3548431396484375
    7. '

' → logprob: -5.6048431396484375
    8. 'import' → logprob: -5.7298431396484375
    9. '.' → logprob: -5.9798431396484375
    10. 'def' → logprob: -6.1048431396484375

Token 83: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6056129336357117
    2. ' un' → logprob: -1.9806129932403564
    3. ' le' → logprob: -2.3556129932403564
    4. 'l' → logprob: -2.3556129932403564
    5. ' l' → logprob: -3.7306129932403564
    6. 'la' → logprob: -3.7306129932403564
    7. 'un' → logprob: -3.8556129932403564
    8. ' une' → logprob: -3.9806129932403564
    9. ' la' → logprob: -4.105612754821777
    10. ' ' → logprob: -4.980612754821777

Token 84: ' mur' (ID: 11426)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.8124896883964539
    2. ' b' → logprob: -1.5624897480010986
    3. 'b' → logprob: -2.1874897480010986
    4. 'm' → logprob: -2.5624897480010986
    5. 'bord' → logprob: -2.5624897480010986
    6. ' mur' → logprob: -3.0624897480010986
    7. ' bord' → logprob: -3.6874897480010986
    8. ' obstacle' → logprob: -5.6874895095825195
    9. ' wall' → logprob: -7.2499895095825195
    10. '#' → logprob: -7.7499895095825195

Token 85: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44524356722831726
    2. 'import' → logprob: -2.1952435970306396
    3. ')' → logprob: -2.5702435970306396
    4. 'def' → logprob: -2.6952435970306396
    5. '#' → logprob: -3.3202435970306396
    6. '<|end|>' → logprob: -4.3202433586120605
    7. 'from' → logprob: -4.4452433586120605
    8. ',' → logprob: -4.8202433586120605
    9. '

' → logprob: -4.9452433586120605
    10. '.' → logprob: -5.0702433586120605

Token 86: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05674144625663757
    2. '#' → logprob: -3.68174147605896
    3. 'import' → logprob: -4.306741237640381
    4. 'def' → logprob: -5.181741237640381
    5. '<|end|>' → logprob: -5.306741237640381
    6. 'from' → logprob: -6.556741237640381
    7. ')' → logprob: -6.806741237640381
    8. ' 
' → logprob: -6.806741237640381
    9. '

' → logprob: -7.556741237640381
    10. ',' → logprob: -7.931741237640381

Token 87: ' Rem' (ID: 6890)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.35125863552093506
    2. 'import' → logprob: -1.601258635520935
    3. 'def' → logprob: -3.2262587547302246
    4. '#' → logprob: -3.4762587547302246
    5. ' from' → logprob: -4.351258754730225
    6. 'd' → logprob: -5.351258754730225
    7. 'distance' → logprob: -6.976258754730225
    8. ' #' → logprob: -7.101258754730225
    9. '```' → logprob: -7.226258754730225
    10. ')' → logprob: -7.351258754730225

Token 88: 'arque' (ID: 167524)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.6407750844955444
    2. 'placer' → logprob: -1.7657750844955444
    3. 'ar' → logprob: -2.265775203704834
    4. 'a' → logprob: -2.390775203704834
    5. 'arque' → logprob: -2.890775203704834
    6. 'er' → logprob: -4.015775203704834
    7. 'pla' → logprob: -5.390775203704834
    8. 'p' → logprob: -5.515775203704834
    9. '#' → logprob: -5.765775203704834
    10. 'plac' → logprob: -5.890775203704834

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.58061283826828
    2. ' :' → logprob: -1.2056128978729248
    3. 's' → logprob: -2.580612897872925
    4. ',' → logprob: -2.830612897872925
    5. ' ' → logprob: -5.705612659454346
    6. ' ,' → logprob: -6.205612659454346
    7. ' s' → logprob: -8.080613136291504
    8. ' ' → logprob: -8.705613136291504
    9. '.' → logprob: -10.080613136291504
    10. '#' → logprob: -10.080613136291504

Token 90: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04714520648121834
    2. ' #' → logprob: -4.797145366668701
    3. ' ' → logprob: -5.297145366668701
    4. ' 
' → logprob: -5.672145366668701
    5. ' On' → logprob: -5.672145366668701
    6. ' Pour' → logprob: -6.047145366668701
    7. '<|end|>' → logprob: -6.422145366668701
    8. ' l' → logprob: -6.422145366668701
    9. '#' → logprob: -6.672145366668701
    10. ' la' → logprob: -6.672145366668701

Token 91: ' approche' (ID: 102373)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1797633171081543
    2. ' fois' → logprob: -2.1797633171081543
    3. 'sl' → logprob: -2.3047633171081543
    4. ' solution' → logprob: -3.4922633171081543
    5. 'fois' → logprob: -3.4922633171081543
    6. ' des' → logprob: -3.6172633171081543
    7. 'f' → logprob: -3.9922633171081543
    8. '#' → logprob: -4.117263317108154
    9. 'bonne' → logprob: -4.117263317108154
    10. ' slime' → logprob: -4.179763317108154

Token 92: ' simple' (ID: 4705)
  Prédit: ' naï'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' naï' → logprob: -0.9530792832374573
    2. 'dfs' → logprob: -2.0780792236328125
    3. 'na' → logprob: -2.2030792236328125
    4. 'possible' → logprob: -2.4530792236328125
    5. ' possible' → logprob: -3.0780792236328125
    6. ' naive' → logprob: -3.4530792236328125
    7. 'import' → logprob: -3.7030792236328125
    8. 'd' → logprob: -3.7030792236328125
    9. 'simple' → logprob: -4.2030792236328125
    10. 'gre' → logprob: -4.2030792236328125

Token 93: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7408379316329956
    2. ':' → logprob: -0.8658379316329956
    3. '#' → logprob: -3.615838050842285
    4. '.' → logprob: -3.740838050842285
    5. '<|end|>' → logprob: -4.740838050842285
    6. ' ' → logprob: -4.990838050842285
    7. '=' → logprob: -5.115838050842285
    8. 'import' → logprob: -5.490838050842285
    9. 's' → logprob: -5.740838050842285
    10. 'def' → logprob: -5.740838050842285

Token 94: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.296364963054657
    2. ' de' → logprob: -1.4213650226593018
    3. 'd' → logprob: -4.796364784240723
    4. ':' → logprob: -6.171364784240723
    5. 'de' → logprob: -6.296364784240723
    6. ' ' → logprob: -6.671364784240723
    7. ' to' → logprob: -8.296364784240723
    8. ' la' → logprob: -8.546364784240723
    9. ' une' → logprob: -9.296364784240723
    10. ' possible' → logprob: -9.296364784240723

Token 95: ''utiliser' (ID: 133355)
  Prédit: ''utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utiliser' → logprob: -0.6954721212387085
    2. 'e' → logprob: -0.8204721212387085
    3. 'ijkstra' → logprob: -3.945472240447998
    4. ''' → logprob: -3.945472240447998
    5. ''ex' → logprob: -5.695472240447998
    6. ''effect' → logprob: -6.195472240447998
    7. ''ess' → logprob: -6.320472240447998
    8. ''app' → logprob: -6.820472240447998
    9. ''é' → logprob: -6.945472240447998
    10. '’utiliser' → logprob: -7.070472240447998

Token 96: ' l' (ID: 305)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6532692909240723
    2. ' une' → logprob: -1.4032692909240723
    3. 'la' → logprob: -2.6532692909240723
    4. 'l' → logprob: -3.1532692909240723
    5. 'un' → logprob: -3.5282692909240723
    6. ' un' → logprob: -3.6532692909240723
    7. 'B' → logprob: -4.153269290924072
    8. ' la' → logprob: -4.403269290924072
    9. ' BFS' → logprob: -4.528269290924072
    10. ' l' → logprob: -5.028269290924072

Token 97: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03755662217736244
    2. 'e' → logprob: -3.6625566482543945
    3. ''a' → logprob: -5.6625566482543945
    4. ''' → logprob: -6.2875566482543945
    5. ' a' → logprob: -6.4125566482543945
    6. ''import' → logprob: -7.0375566482543945
    7. 'es' → logprob: -7.6625566482543945
    8. 'import' → logprob: -7.9125566482543945
    9. ''un' → logprob: -7.9125566482543945
    10. ''une' → logprob: -8.162556648254395

Token 98: 'bre' (ID: 9945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08994100987911224
    2. 'r' → logprob: -2.5899410247802734
    3. 'e' → logprob: -5.589941024780273
    4. 'c' → logprob: -5.964941024780273
    5. 'b' → logprob: -6.964941024780273
    6. 'q' → logprob: -7.089941024780273
    7. 'd' → logprob: -7.339941024780273
    8. 'm' → logprob: -7.839941024780273
    9. 't' → logprob: -8.214941024780273
    10. '```' → logprob: -8.589941024780273

Token 99: ' couvr' (ID: 129883)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.31101366877555847
    2. 'sp' → logprob: -2.311013698577881
    3. ' de' → logprob: -3.061013698577881
    4. 's' → logprob: -3.186013698577881
    5. ' couvr' → logprob: -3.936013698577881
    6. 'g' → logprob: -4.561013698577881
    7. ' spanning' → logprob: -4.686013698577881
    8. 'd' → logprob: -4.936013698577881
    9. 'minimum' → logprob: -5.311013698577881
    10. 'span' → logprob: -5.436013698577881

Token 100: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -3.166338137816638e-05
    2. 'iant' → logprob: -11.000031471252441
    3. 'ent' → logprob: -11.875031471252441
    4. 'nant' → logprob: -13.500031471252441
    5. 'a' → logprob: -13.750031471252441
    6. 'an' → logprob: -13.750031471252441
    7. 'e' → logprob: -14.250031471252441
    8. 't' → logprob: -14.375031471252441
    9. 'ing' → logprob: -14.750031471252441
    10. 'ante' → logprob: -14.750031471252441

Token 101: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16186022758483887
    2. '.' → logprob: -3.161860227584839
    3. 'import' → logprob: -3.536860227584839
    4. ' minimum' → logprob: -4.911860466003418
    5. '#' → logprob: -5.036860466003418
    6. 's' → logprob: -5.161860466003418
    7. '  ' → logprob: -5.286860466003418
    8. ',' → logprob: -5.286860466003418
    9. 'Minimum' → logprob: -5.661860466003418
    10. ' couvr' → logprob: -5.661860466003418

Token 102: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1917116492986679
    2. 'from' → logprob: -2.566711664199829
    3. '#' → logprob: -2.816711664199829
    4. '
' → logprob: -4.06671142578125
    5. 'def' → logprob: -4.19171142578125
    6. '<|end|>' → logprob: -6.56671142578125
    7. ')' → logprob: -6.81671142578125
    8. '```' → logprob: -6.81671142578125
    9. 'd' → logprob: -8.19171142578125
    10. ' from' → logprob: -8.19171142578125

Token 103: 'M' (ID: 44)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025511793792247772
    2. 'prim' → logprob: -4.400511741638184
    3. 'M' → logprob: -5.400511741638184
    4. ',' → logprob: -6.525511741638184
    5. 'de' → logprob: -6.525511741638184
    6. '),' → logprob: -7.275511741638184
    7. '(M' → logprob: -7.400511741638184
    8. ' prim' → logprob: -7.525511741638184
    9. ').' → logprob: -7.525511741638184
    10. '")' → logprob: -7.900511741638184

Token 104: 'ST' (ID: 1117)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.015579810366034508
    2. 'ST' → logprob: -4.765579700469971
    3. 's' → logprob: -5.890579700469971
    4. '
' → logprob: -6.140579700469971
    5. 'i' → logprob: -6.765579700469971
    6. 'I' → logprob: -8.890580177307129
    7. 'in' → logprob: -8.890580177307129
    8. '

' → logprob: -9.265580177307129
    9. ' S' → logprob: -9.390580177307129
    10. 'st' → logprob: -10.140580177307129

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021231381688266993
    2. ' )' → logprob: -6.3771233558654785
    3. ',' → logprob: -8.37712287902832
    4. 'import' → logprob: -10.25212287902832
    5. ')
' → logprob: -10.37712287902832
    6. '.' → logprob: -10.50212287902832
    7. 'from' → logprob: -11.00212287902832
    8. '),' → logprob: -11.75212287902832
    9. ').' → logprob: -11.87712287902832
    10. '#' → logprob: -11.87712287902832

Token 106: ' complet' (ID: 5127)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.48248785734176636
    2. 'from' → logprob: -1.6074879169464111
    3. '#' → logprob: -2.607487916946411
    4. 'def' → logprob: -2.982487916946411
    5. 'd' → logprob: -3.232487916946411
    6. 'dist' → logprob: -4.982487678527832
    7. 'distance' → logprob: -5.732487678527832
    8. 'edges' → logprob: -5.857487678527832
    9. '
' → logprob: -6.482487678527832
    10. ')' → logprob: -6.607487678527832

Token 107: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49671125411987305
    2. '
' → logprob: -1.621711254119873
    3. '#' → logprob: -2.996711254119873
    4. 'from' → logprob: -3.121711254119873
    5. ',' → logprob: -3.621711254119873
    6. ')' → logprob: -3.871711254119873
    7. 'def' → logprob: -4.121711254119873
    8. '.' → logprob: -5.121711254119873
    9. ',
' → logprob: -5.371711254119873
    10. ':' → logprob: -5.371711254119873

Token 108: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8211866617202759
    2. 'la' → logprob: -1.1961866617202759
    3. 'K' → logprob: -3.0711865425109863
    4. 'Prim' → logprob: -3.0711865425109863
    5. 'l' → logprob: -3.1961865425109863
    6. 'import' → logprob: -3.8211865425109863
    7. 'prim' → logprob: -4.071186542510986
    8. 'le' → logprob: -4.196186542510986
    9. ' la' → logprob: -4.821186542510986
    10. 'Kr' → logprob: -4.946186542510986

Token 109: ' distance' (ID: 9324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7758054137229919
    2. 'distance' → logprob: -1.0258054733276367
    3. 'from' → logprob: -2.5258054733276367
    4. 'dist' → logprob: -2.6508054733276367
    5. 'heap' → logprob: -5.525805473327637
    6. ' distances' → logprob: -5.650805473327637
    7. 'd' → logprob: -6.025805473327637
    8. 'prim' → logprob: -6.150805473327637
    9. 'cmath' → logprob: -6.150805473327637
    10. ' distance' → logprob: -6.275805473327637

Token 110: ' 
' (ID: 793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1166296005249023
    2. '_' → logprob: -2.2416296005249023
    3. 'import' → logprob: -2.2416296005249023
    4. '<|end|>' → logprob: -2.4916296005249023
    5. ' between' → logprob: -2.6166296005249023
    6. 'between' → logprob: -2.9916296005249023
    7. '(' → logprob: -3.6166296005249023
    8. 'def' → logprob: -3.8666296005249023
    9. 'from' → logprob: -3.8666296005249023
    10. ')' → logprob: -3.8666296005249023

Token 111: '#' (ID: 2)
  Prédit: 'eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eu' → logprob: -1.1719528436660767
    2. 'man' → logprob: -1.9219528436660767
    3. ' Manhattan' → logprob: -2.171952724456787
    4. 'Eu' → logprob: -2.296952724456787
    5. ' Eu' → logprob: -2.796952724456787
    6. 'min' → logprob: -3.171952724456787
    7. ' ' → logprob: -3.296952724456787
    8. 'import' → logprob: -3.421952724456787
    9. 'between' → logprob: -3.921952724456787
    10. ' between' → logprob: -3.921952724456787

Token 112: ' de' (ID: 334)
  Prédit: 'Eu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Eu' → logprob: -1.0099220275878906
    2. 'eu' → logprob: -1.0099220275878906
    3. 'man' → logprob: -2.3849220275878906
    4. 'import' → logprob: -2.6349220275878906
    5. 'min' → logprob: -3.5099220275878906
    6. 'de' → logprob: -4.384922027587891
    7. 'Man' → logprob: -4.384922027587891
    8. 'from' → logprob: -4.509922027587891
    9. '```' → logprob: -5.134922027587891
    10. 'd' → logprob: -5.384922027587891

Token 113: ' Manhattan' (ID: 47130)
  Prédit: ' Manhattan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Manhattan' → logprob: -0.4734363555908203
    2. 'l' → logprob: -1.7234363555908203
    3. 'Man' → logprob: -2.9734363555908203
    4. 'Che' → logprob: -3.0984363555908203
    5. 'che' → logprob: -3.0984363555908203
    6. 'man' → logprob: -3.9734363555908203
    7. 'dé' → logprob: -5.47343635559082
    8. 'la' → logprob: -5.47343635559082
    9. ' man' → logprob: -6.09843635559082
    10. ' l' → logprob: -6.22343635559082

Token 114: ' comme' (ID: 7971)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.854071855545044
    2. 'def' → logprob: -1.479071855545044
    3. '#' → logprob: -2.229071855545044
    4. 'from' → logprob: -2.479071855545044
    5. 'd' → logprob: -2.854071855545044
    6. ')' → logprob: -3.604071855545044
    7. ',' → logprob: -3.729071855545044
    8. '.' → logprob: -4.479071617126465
    9. 'distance' → logprob: -5.104071617126465
    10. 'dist' → logprob: -5.229071617126465

Token 115: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.33329978585243225
    2. ' poids' → logprob: -1.8332997560501099
    3. 'le' → logprob: -2.5832998752593994
    4. 'weight' → logprob: -4.70829963684082
    5. 'distance' → logprob: -4.83329963684082
    6. '```' → logprob: -5.20829963684082
    7. 'la' → logprob: -5.33329963684082
    8. 'edge' → logprob: -5.45829963684082
    9. ' le' → logprob: -6.08329963684082
    10. 'l' → logprob: -6.33329963684082

Token 116: '.' (ID: 13)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.24515019357204437
    2. 'def' → logprob: -2.495150089263916
    3. '#' → logprob: -2.870150089263916
    4. 'from' → logprob: -2.870150089263916
    5. 'd' → logprob: -4.745150089263916
    6. '
' → logprob: -5.370150089263916
    7. ')' → logprob: -6.245150089263916
    8. ',' → logprob: -6.995150089263916
    9. '.' → logprob: -6.995150089263916
    10. '<|end|>' → logprob: -7.370150089263916

Token 117: ' Ici' (ID: 145754)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9231539964675903
    2. 'd' → logprob: -1.6731539964675903
    3. 'from' → logprob: -1.6731539964675903
    4. 'def' → logprob: -2.173153877258301
    5. '#' → logprob: -2.423153877258301
    6. 'dist' → logprob: -4.923153877258301
    7. 'edges' → logprob: -5.423153877258301
    8. 'distance' → logprob: -5.548153877258301
    9. '
' → logprob: -6.048153877258301
    10. 'graph' → logprob: -6.298153877258301

Token 118: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048900503665208817
    2. ':' → logprob: -3.798900604248047
    3. 'def' → logprob: -4.423900604248047
    4. 'import' → logprob: -5.798900604248047
    5. ')' → logprob: -5.923900604248047
    6. '=' → logprob: -6.548900604248047
    7. '.' → logprob: -6.798900604248047
    8. 'le' → logprob: -6.923900604248047
    9. '#' → logprob: -7.173900604248047
    10. ' ,' → logprob: -7.798900604248047

Token 119: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.34723564982414246
    2. '#' → logprob: -2.722235679626465
    3. 'dist' → logprob: -3.347235679626465
    4. 'def' → logprob: -3.472235679626465
    5. 'import' → logprob: -3.597235679626465
    6. ' distance' → logprob: -3.847235679626465
    7. 's' → logprob: -3.972235679626465
    8. 'man' → logprob: -4.347235679626465
    9. 'from' → logprob: -4.472235679626465
    10. ' is' → logprob: -5.097235679626465

Token 120: ' est' (ID: 893)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.8205118179321289
    2. '<|end|>' → logprob: -1.695511817932129
    3. ' =' → logprob: -2.320511817932129
    4. '=' → logprob: -2.820511817932129
    5. '(' → logprob: -3.320511817932129
    6. 'de' → logprob: -3.445511817932129
    7. ' Manhattan' → logprob: -3.445511817932129
    8. '_' → logprob: -3.820511817932129
    9. '<|end|>' → logprob: -4.320511817932129
    10. 'Man' → logprob: -4.445511817932129

Token 121: ' un' (ID: 537)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7436462640762329
    2. 'abs' → logprob: -1.493646264076233
    3. ' lambda' → logprob: -1.993646264076233
    4. 'min' → logprob: -2.8686461448669434
    5. ' abs' → logprob: -3.1186461448669434
    6. '=lambda' → logprob: -3.6186461448669434
    7. '1' → logprob: -4.743646144866943
    8. '=' → logprob: -5.368646144866943
    9. '(lambda' → logprob: -5.493646144866943
    10. ' min' → logprob: -5.618646144866943

Token 122: ' peu' (ID: 9235)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3134293556213379
    2. 'ent' → logprob: -1.438429355621338
    3. 'man' → logprob: -4.938429355621338
    4. 'import' → logprob: -5.313429355621338
    5. ' entier' → logprob: -5.813429355621338
    6. 'edge' → logprob: -6.313429355621338
    7. '```' → logprob: -6.563429355621338
    8. 'max' → logprob: -6.563429355621338
    9. 'e' → logprob: -6.688429355621338
    10. 'abs' → logprob: -6.688429355621338

Token 123: ' spéciale' (ID: 142408)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9104030728340149
    2. 'mod' → logprob: -1.7854030132293701
    3. 'sp' → logprob: -2.41040301322937
    4. ' différente' → logprob: -2.41040301322937
    5. 'special' → logprob: -2.53540301322937
    6. 'part' → logprob: -2.78540301322937
    7. 'plus' → logprob: -3.66040301322937
    8. ' particulière' → logprob: -3.66040301322937
    9. ' spéciale' → logprob: -3.78540301322937
    10. 'different' → logprob: -4.160403251647949

Token 124: ' car' (ID: 1669)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5251954197883606
    2. ':' → logprob: -2.150195360183716
    3. ',' → logprob: -2.400195360183716
    4. '#' → logprob: -3.150195360183716
    5. '
' → logprob: -3.525195360183716
    6. ')' → logprob: -3.775195360183716
    7. 'import' → logprob: -4.025195598602295
    8. '_' → logprob: -4.275195598602295
    9. '(' → logprob: -4.525195598602295
    10. '=' → logprob: -4.775195598602295

Token 125: ' un' (ID: 537)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.302042007446289
    2. 'on' → logprob: -1.677042007446289
    3. 'il' → logprob: -2.427042007446289
    4. ' chaque' → logprob: -2.427042007446289
    5. ' les' → logprob: -2.552042007446289
    6. 'le' → logprob: -2.552042007446289
    7. ' on' → logprob: -2.552042007446289
    8. 'l' → logprob: -4.052042007446289
    9. 'la' → logprob: -4.052042007446289
    10. ' il' → logprob: -4.052042007446289

Token 126: ' slime' (ID: 168619)
  Prédit: ' slime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slime' → logprob: -0.04996475949883461
    2. 'sl' → logprob: -3.174964666366577
    3. ' déplacement' → logprob: -6.299964904785156
    4. 'm' → logprob: -6.299964904785156
    5. 's' → logprob: -7.049964904785156
    6. ' sl' → logprob: -7.549964904785156
    7. ' mouvement' → logprob: -8.237464904785156
    8. 'e' → logprob: -8.424964904785156
    9. 'slug' → logprob: -8.924964904785156
    10. 'a' → logprob: -9.237464904785156

Token 127: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.8625079989433289
    2. 'pe' → logprob: -1.2375080585479736
    3. ' ne' → logprob: -2.1125080585479736
    4. ' can' → logprob: -3.2375080585479736
    5. 's' → logprob: -3.4875080585479736
    6. '#' → logprob: -3.9875080585479736
    7. 'ne' → logprob: -4.1125078201293945
    8. '<|end|>' → logprob: -4.1125078201293945
    9. 'can' → logprob: -4.2375078201293945
    10. 'n' → logprob: -5.1125078201293945

Token 128: ' aller' (ID: 18383)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.20465536415576935
    2. 's' → logprob: -2.579655408859253
    3. ' se' → logprob: -4.079655170440674
    4. 'bou' → logprob: -4.329655170440674
    5. 'stop' → logprob: -4.329655170440674
    6. 'only' → logprob: -4.454655170440674
    7. ' only' → logprob: -5.079655170440674
    8. 'être' → logprob: -5.329655170440674
    9. 'dé' → logprob: -5.329655170440674
    10. 'aller' → logprob: -5.454655170440674

Token 129: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.4501841962337494
    2. 'direct' → logprob: -2.5751841068267822
    3. 'jus' → logprob: -2.8251841068267822
    4. ' au' → logprob: -3.3251841068267822
    5. 'sur' → logprob: -3.4501841068267822
    6. 'd' → logprob: -3.8251841068267822
    7. ' jusque' → logprob: -3.9501841068267822
    8. ' directement' → logprob: -4.075184345245361
    9. ' through' → logprob: -4.325184345245361
    10. ' en' → logprob: -4.700184345245361

Token 130: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.06603453308343887
    2. ''au' → logprob: -2.8160345554351807
    3. 'à' → logprob: -6.066034317016602
    4. 'au' → logprob: -6.566034317016602
    5. ''' → logprob: -8.566034317016602
    6. '’à' → logprob: -9.191034317016602
    7. ''a' → logprob: -11.191034317016602
    8. '```' → logprob: -11.566034317016602
    9. '#' → logprob: -12.066034317016602
    10. '’au' → logprob: -12.191034317016602

Token 131: ' toucher' (ID: 127487)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6341667771339417
    2. ' rencontrer' → logprob: -1.2591667175292969
    3. 'un' → logprob: -2.884166717529297
    4. ' l' → logprob: -3.009166717529297
    5. 'ren' → logprob: -3.259166717529297
    6. 'ce' → logprob: -4.509166717529297
    7. '```' → logprob: -4.759166717529297
    8. 'une' → logprob: -4.884166717529297
    9. 'another' → logprob: -5.884166717529297
    10. ' ce' → logprob: -6.009166717529297

Token 132: ' 
' (ID: 793)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.45675620436668396
    2. 'un' → logprob: -1.2067562341690063
    3. ' another' → logprob: -3.206756114959717
    4. ' une' → logprob: -4.331756114959717
    5. 'another' → logprob: -5.206756114959717
    6. 'une' → logprob: -5.956756114959717
    7. 'l' → logprob: -6.706756114959717
    8. '```' → logprob: -7.081756114959717
    9. ''un' → logprob: -7.206756114959717
    10. ' d' → logprob: -7.706756114959717

Token 133: '#' (ID: 2)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1833977997303009
    2. 'un' → logprob: -2.0583977699279785
    3. ' another' → logprob: -4.4333977699279785
    4. ' une' → logprob: -4.9333977699279785
    5. 'l' → logprob: -5.1833977699279785
    6. 'another' → logprob: -5.4333977699279785
    7. '```' → logprob: -6.4333977699279785
    8. 'une' → logprob: -6.4333977699279785
    9. ''un' → logprob: -6.8083977699279785
    10. 'le' → logprob: -6.9333977699279785

Token 134: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06537848711013794
    2. 'une' → logprob: -3.940378427505493
    3. 'l' → logprob: -4.190378665924072
    4. ' un' → logprob: -4.565378665924072
    5. 'd' → logprob: -5.190378665924072
    6. '```' → logprob: -5.315378665924072
    7. 'le' → logprob: -6.440378665924072
    8. '#' → logprob: -6.440378665924072
    9. 'another' → logprob: -6.690378665924072
    10. ''un' → logprob: -7.065378665924072

Token 135: ' autre' (ID: 20278)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.5743037462234497
    2. ' slime' → logprob: -1.6993037462234497
    3. 'aut' → logprob: -2.69930362701416
    4. ' autre' → logprob: -2.69930362701416
    5. 'm' → logprob: -2.82430362701416
    6. ' mur' → logprob: -3.07430362701416
    7. '```' → logprob: -5.32430362701416
    8. 'sl' → logprob: -5.44930362701416
    9. 'other' → logprob: -7.07430362701416
    10. ' obstacle' → logprob: -7.32430362701416

Token 136: ' slime' (ID: 168619)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25800538063049316
    2. ')' → logprob: -2.633005380630493
    3. 'def' → logprob: -3.258005380630493
    4. 'from' → logprob: -3.383005380630493
    5. ',' → logprob: -3.633005380630493
    6. '_' → logprob: -3.883005380630493
    7. '<|end|>' → logprob: -5.383005142211914
    8. '
' → logprob: -5.508005142211914
    9. '#' → logprob: -5.758005142211914
    10. ' ' → logprob: -6.008005142211914

Token 137: ' sans' (ID: 9828)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7711904048919678
    2. 'def' → logprob: -1.1461904048919678
    3. '
' → logprob: -2.6461904048919678
    4. '#' → logprob: -2.7711904048919678
    5. 'from' → logprob: -3.3961904048919678
    6. ')' → logprob: -4.146190643310547
    7. ',' → logprob: -4.396190643310547
    8. 'd' → logprob: -5.271190643310547
    9. 's' → logprob: -5.646190643310547
    10. ',
' → logprob: -6.271190643310547

Token 138: ' s' (ID: 265)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.6977275609970093
    2. 'inter' → logprob: -1.5727275609970093
    3. 's' → logprob: -2.322727680206299
    4. 'dé' → logprob: -2.822727680206299
    5. ' dépasser' → logprob: -3.447727680206299
    6. 'ob' → logprob: -3.572727680206299
    7. 'tr' → logprob: -4.322727680206299
    8. ' passer' → logprob: -4.822727680206299
    9. ' s' → logprob: -4.947727680206299
    10. 'être' → logprob: -5.447727680206299

Token 139: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4369015395641327
    2. ''arr' → logprob: -1.811901569366455
    3. 'é' → logprob: -2.686901569366455
    4. ''inter' → logprob: -2.811901569366455
    5. ''é' → logprob: -4.186901569366455
    6. 'inter' → logprob: -4.936901569366455
    7. 'u' → logprob: -4.936901569366455
    8. 'ointer' → logprob: -5.186901569366455
    9. 'ob' → logprob: -5.811901569366455
    10. 'arr' → logprob: -5.811901569366455

Token 140: 'êter' (ID: 73125)
  Prédit: 'êter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êter' → logprob: -0.02706846036016941
    2. 'êt' → logprob: -3.9020683765411377
    3. 'éter' → logprob: -5.402068614959717
    4. 'ête' → logprob: -7.277068614959717
    5. 'ê' → logprob: -8.027068138122559
    6. 'iver' → logprob: -8.777068138122559
    7. '#' → logprob: -8.902068138122559
    8. 'eter' → logprob: -9.027068138122559
    9. 'être' → logprob: -9.902068138122559
    10. 'o' → logprob: -10.152068138122559

Token 141: ' entre' (ID: 3853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4140057861804962
    2. '#' → logprob: -1.9140057563781738
    3. 'def' → logprob: -1.9140057563781738
    4. '
' → logprob: -3.914005756378174
    5. 'from' → logprob: -4.164005756378174
    6. '```' → logprob: -6.664005756378174
    7. ')' → logprob: -7.039005756378174
    8. ',' → logprob: -7.289005756378174
    9. 'd' → logprob: -7.414005756378174
    10. '.' → logprob: -7.414005756378174

Token 142: '.' (ID: 13)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1818612813949585
    2. ':' → logprob: -1.6818612813949585
    3. ')' → logprob: -1.9318612813949585
    4. '\' → logprob: -2.181861400604248
    5. ''' → logprob: -2.681861400604248
    6. ',' → logprob: -3.681861400604248
    7. '\n' → logprob: -3.806861400604248
    8. '#' → logprob: -3.931861400604248
    9. '=' → logprob: -3.931861400604248
    10. '.' → logprob: -4.556861400604248

Token 143: ' 
' (ID: 793)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5306379199028015
    2. 'def' → logprob: -1.6556379795074463
    3. 'from' → logprob: -1.9056379795074463
    4. '#' → logprob: -2.7806379795074463
    5. 'dist' → logprob: -6.155637741088867
    6. 'd' → logprob: -6.155637741088867
    7. 'distance' → logprob: -6.405637741088867
    8. '```' → logprob: -6.780637741088867
    9. '
' → logprob: -7.530637741088867
    10. 'graph' → logprob: -7.905637741088867

Token 144: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6469013094902039
    2. 'def' → logprob: -1.7719013690948486
    3. '#' → logprob: -2.0219013690948486
    4. '
' → logprob: -2.5219013690948486
    5. 'from' → logprob: -3.0219013690948486
    6. 'dist' → logprob: -4.6469011306762695
    7. 'distance' → logprob: -4.8969011306762695
    8. ' 
' → logprob: -5.5219011306762695
    9. 'edges' → logprob: -5.6469011306762695
    10. ')' → logprob: -5.7719011306762695

Token 145: ' Mais' (ID: 13880)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7145270109176636
    2. '#' → logprob: -1.3395270109176636
    3. 'def' → logprob: -2.089527130126953
    4. 'from' → logprob: -2.214527130126953
    5. 'd' → logprob: -5.214527130126953
    6. ')' → logprob: -6.339527130126953
    7. 'edges' → logprob: -6.339527130126953
    8. '```' → logprob: -6.714527130126953
    9. '.' → logprob: -6.964527130126953
    10. 'distance' → logprob: -6.964527130126953

Token 146: ' en' (ID: 469)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.9882014989852905
    2. 'import' → logprob: -2.11320161819458
    3. ' la' → logprob: -2.23820161819458
    4. 'def' → logprob: -2.73820161819458
    5. ' il' → logprob: -2.73820161819458
    6. '#' → logprob: -3.11320161819458
    7. ' W' → logprob: -3.23820161819458
    8. ',' → logprob: -3.36320161819458
    9. ' les' → logprob: -3.61320161819458
    10. '(' → logprob: -3.73820161819458

Token 147: ' dé' (ID: 2393)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.11899194121360779
    2. ' fait' → logprob: -2.4939918518066406
    3. 'faite' → logprob: -3.9939918518066406
    4. 'faits' → logprob: -6.493991851806641
    5. 'python' → logprob: -6.743991851806641
    6. 'f' → logprob: -6.993991851806641
    7. 'util' → logprob: -7.368991851806641
    8. 'man' → logprob: -7.493991851806641
    9. 'Man' → logprob: -7.618991851806641
    10. '```' → logprob: -7.868991851806641

Token 148: 'pla' (ID: 24939)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005553543101996183
    2. 'fin' → logprob: -5.755553722381592
    3. '#' → logprob: -7.505553722381592
    4. 'fault' → logprob: -7.880553722381592
    5. 'import' → logprob: -8.255553245544434
    6. '```' → logprob: -8.380553245544434
    7. 'tail' → logprob: -8.755553245544434
    8. 'from' → logprob: -9.005553245544434
    9. 'fi' → logprob: -9.130553245544434
    10. '
' → logprob: -9.630553245544434

Token 149: 'çant' (ID: 78714)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.7611844539642334
    2. 'cement' → logprob: -1.3861844539642334
    3. 'çant' → logprob: -1.7611844539642334
    4. 'ement' → logprob: -3.3861844539642334
    5. 'acement' → logprob: -4.0111846923828125
    6. 'vement' → logprob: -4.5111846923828125
    7. 'placement' → logprob: -4.6361846923828125
    8. 'iment' → logprob: -5.0111846923828125
    9. 'nement' → logprob: -5.1361846923828125
    10. 'mentation' → logprob: -5.2611846923828125

Token 150: ' chaque' (ID: 21194)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.07096633315086365
    2. 'un' → logprob: -2.6959662437438965
    3. ' une' → logprob: -9.070966720581055
    4. ' chaque' → logprob: -9.195966720581055
    5. ' a' → logprob: -9.320966720581055
    6. 'le' → logprob: -9.445966720581055
    7. 'a' → logprob: -9.570966720581055
    8. 's' → logprob: -9.695966720581055
    9. ' uniquement' → logprob: -9.695966720581055
    10. 'une' → logprob: -10.195966720581055

Token 151: ' slime' (ID: 168619)
  Prédit: ' slime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slime' → logprob: -0.2837432026863098
    2. 'sl' → logprob: -1.408743143081665
    3. ' sl' → logprob: -7.533743381500244
    4. 'slug' → logprob: -7.846243381500244
    5. 'token' → logprob: -7.846243381500244
    6. '```' → logprob: -8.346242904663086
    7. 's' → logprob: -9.033742904663086
    8. 'm' → logprob: -9.283742904663086
    9. ' token' → logprob: -9.533742904663086
    10. ' slug' → logprob: -9.783742904663086

Token 152: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044504325836896896
    2. '#' → logprob: -4.169504165649414
    3. 's' → logprob: -5.044504165649414
    4. '.' → logprob: -5.919504165649414
    5. ')' → logprob: -6.169504165649414
    6. 'sl' → logprob: -6.294504165649414
    7. ' in' → logprob: -6.419504165649414
    8. 'à' → logprob: -6.544504165649414
    9. ' ,' → logprob: -6.919504165649414
    10. 'import' → logprob: -6.919504165649414

Token 153: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.03243907913565636
    2. 'une' → logprob: -4.657439231872559
    3. ' ligne' → logprob: -4.782439231872559
    4. 'line' → logprob: -5.782439231872559
    5. 'l' → logprob: -6.282439231872559
    6. 'un' → logprob: -6.907439231872559
    7. 'x' → logprob: -6.907439231872559
    8. 't' → logprob: -6.907439231872559
    9. 'cha' → logprob: -7.282439231872559
    10. 'all' → logprob: -7.657439231872559

Token 154: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.6964944005012512
    2. ')' → logprob: -1.1964943408966064
    3. '_' → logprob: -3.0714943408966064
    4. 'straight' → logprob: -3.5714943408966064
    5. ' droit' → logprob: -3.8214943408966064
    6. ',' → logprob: -4.3214945793151855
    7. 'break' → logprob: -4.3214945793151855
    8. 'dro' → logprob: -4.4464945793151855
    9. '.' → logprob: -4.6964945793151855
    10. 'd' → logprob: -4.9464945793151855

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17657196521759033
    2. ')' → logprob: -1.9265719652175903
    3. '.' → logprob: -4.676571846008301
    4. '),' → logprob: -5.801571846008301
    5. '#' → logprob: -6.926571846008301
    6. 's' → logprob: -8.5515718460083
    7. ' )' → logprob: -8.5515718460083
    8. '=' → logprob: -8.5515718460083
    9. ' ,' → logprob: -8.5515718460083
    10. ' jusqu' → logprob: -8.6765718460083

Token 156: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.038887374103069305
    2. 'on' → logprob: -3.7888872623443604
    3. ' il' → logprob: -5.1638875007629395
    4. '#' → logprob: -5.7888875007629395
    5. 'import' → logprob: -6.4138875007629395
    6. ' we' → logprob: -7.7888875007629395
    7. ' je' → logprob: -8.038887023925781
    8. ' le' → logprob: -8.038887023925781
    9. 'le' → logprob: -8.288887023925781
    10. 'c' → logprob: -8.288887023925781

Token 157: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8735608458518982
    2. '#' → logprob: -1.998560905456543
    3. ' distance' → logprob: -2.248560905456543
    4. 'def' → logprob: -2.998560905456543
    5. 'dist' → logprob: -3.248560905456543
    6. ' code' → logprob: -3.998560905456543
    7. ' next' → logprob: -3.998560905456543
    8. ' prochaine' → logprob: -3.998560905456543
    9. '```' → logprob: -4.123560905456543
    10. ' best' → logprob: -4.373560905456543

Token 158: ' minimale' (ID: 143217)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.85685795545578
    2. ' entre' → logprob: -1.7318580150604248
    3. 'between' → logprob: -2.231858015060425
    4. ')' → logprob: -2.606858015060425
    5. 's' → logprob: -2.606858015060425
    6. ',' → logprob: -4.481857776641846
    7. '<|end|>' → logprob: -4.481857776641846
    8. ' est' → logprob: -4.606857776641846
    9. 'from' → logprob: -4.606857776641846
    10. '=' → logprob: -4.731857776641846

Token 159: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.449305534362793
    2. ',' → logprob: -1.824305534362793
    3. ' entre' → logprob: -2.074305534362793
    4. '=' → logprob: -2.324305534362793
    5. ' ' → logprob: -2.824305534362793
    6. '_' → logprob: -2.824305534362793
    7. 's' → logprob: -2.949305534362793
    8. '(' → logprob: -3.449305534362793
    9. ' =' → logprob: -3.574305534362793
    10. ' between' → logprob: -3.699305534362793

Token 160: ' deux' (ID: 10301)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.9165658354759216
    2. ' deux' → logprob: -1.4165658950805664
    3. ' eux' → logprob: -1.6665658950805664
    4. 'de' → logprob: -2.1665658950805664
    5. 'sl' → logprob: -4.416565895080566
    6. 't' → logprob: -4.791565895080566
    7. 'les' → logprob: -5.041565895080566
    8. 'two' → logprob: -5.291565895080566
    9. ' two' → logprob: -5.666565895080566
    10. ' les' → logprob: -5.791565895080566

Token 161: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.23831085860729218
    2. ' slime' → logprob: -2.6133108139038086
    3. 'points' → logprob: -2.7383108139038086
    4. ' sl' → logprob: -3.6133108139038086
    5. ' points' → logprob: -3.7383108139038086
    6. ')' → logprob: -4.738310813903809
    7. 'positions' → logprob: -6.363310813903809
    8. '#' → logprob: -6.363310813903809
    9. ',' → logprob: -6.738310813903809
    10. 's' → logprob: -6.738310813903809

Token 162: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.3253447115421295
    2. 'ime' → logprob: -1.3253446817398071
    3. 'i' → logprob: -6.262844562530518
    4. '#' → logprob: -6.387844562530518
    5. 'im' → logprob: -6.637844562530518
    6. '\' → logprob: -7.012844562530518
    7. '

' → logprob: -7.637844562530518
    8. '{' → logprob: -8.137845039367676
    9. '   ' → logprob: -8.637845039367676
    10. '[' → logprob: -8.700345039367676

Token 163: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1676480770111084
    2. '#' → logprob: -1.4176480770111084
    3. ')' → logprob: -1.7926480770111084
    4. 's' → logprob: -2.2926480770111084
    5. ' ' → logprob: -3.1676480770111084
    6. 'import' → logprob: -3.7926480770111084
    7. ' =' → logprob: -4.2926483154296875
    8. ''' → logprob: -4.2926483154296875
    9. '=' → logprob: -4.4176483154296875
    10. '_' → logprob: -4.9176483154296875

Token 164: ' 
' (ID: 793)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.814948320388794
    2. ' abs' → logprob: -0.814948320388794
    3. 'min' → logprob: -2.814948320388794
    4. ' min' → logprob: -3.064948320388794
    5. 'max' → logprob: -5.564948081970215
    6. ' max' → logprob: -6.189948081970215
    7. '0' → logprob: -7.439948081970215
    8. '(abs' → logprob: -7.939948081970215
    9. ' lambda' → logprob: -8.439948081970215
    10. '=' → logprob: -8.939948081970215

Token 165: '#' (ID: 2)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7576397657394409
    2. ' abs' → logprob: -1.507639765739441
    3. 'max' → logprob: -2.0076398849487305
    4. 'min' → logprob: -2.6326398849487305
    5. ' max' → logprob: -2.8826398849487305
    6. ' min' → logprob: -3.2576398849487305
    7. '0' → logprob: -5.7576398849487305
    8. ' lambda' → logprob: -6.2576398849487305
    9. 'lambda' → logprob: -6.5076398849487305
    10. '(abs' → logprob: -7.6326398849487305

Token 166: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.45178937911987305
    2. 'max' → logprob: -1.451789379119873
    3. 'min' → logprob: -2.701789379119873
    4. ' abs' → logprob: -3.201789379119873
    5. ' max' → logprob: -4.076789379119873
    6. ' min' → logprob: -5.701789379119873
    7. '0' → logprob: -7.826789379119873
    8. 'lambda' → logprob: -8.576789855957031
    9. 'l' → logprob: -9.201789855957031
    10. ' ' → logprob: -9.576789855957031

Token 167: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0500633716583252
    2. 'max' → logprob: -1.1750633716583252
    3. 'min' → logprob: -1.4250633716583252
    4. 'man' → logprob: -3.550063371658325
    5. 'distance' → logprob: -3.925063371658325
    6. '|' → logprob: -4.050063133239746
    7. 'minimum' → logprob: -4.300063133239746
    8. 'x' → logprob: -5.425063133239746
    9. ' abs' → logprob: -6.050063133239746
    10. 'def' → logprob: -6.425063133239746

Token 168: ' de' (ID: 334)
  Prédit: ' Manhattan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Manhattan' → logprob: -0.32227426767349243
    2. 'man' → logprob: -2.0722742080688477
    3. ' man' → logprob: -2.9472742080688477
    4. ' =' → logprob: -3.9472742080688477
    5. '_' → logprob: -4.072274208068848
    6. '=' → logprob: -4.072274208068848
    7. ' ' → logprob: -4.572274208068848
    8. ' de' → logprob: -4.822274208068848
    9. 's' → logprob: -5.197274208068848
    10. ' between' → logprob: -5.322274208068848

Token 169: ' Manhattan' (ID: 47130)
  Prédit: 'Man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.25953036546707153
    2. 'man' → logprob: -1.7595303058624268
    3. 'l' → logprob: -3.6345303058624268
    4. 'x' → logprob: -4.384530544281006
    5. ' Manhattan' → logprob: -4.884530544281006
    6. ' man' → logprob: -5.509530544281006
    7. 'abs' → logprob: -6.509530544281006
    8. '#' → logprob: -7.759530544281006
    9. '```' → logprob: -8.009530067443848
    10. 'dé' → logprob: -8.134530067443848

Token 170: ' entre' (ID: 3853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.86048424243927
    2. 'def' → logprob: -1.73548424243927
    3. '#' → logprob: -2.2354841232299805
    4. '
' → logprob: -2.3604841232299805
    5. 'from' → logprob: -2.8604841232299805
    6. ')' → logprob: -3.2354841232299805
    7. ':' → logprob: -3.8604841232299805
    8. ',' → logprob: -4.2354841232299805
    9. '\n' → logprob: -4.8604841232299805
    10. '.' → logprob: -5.1104841232299805

Token 171: ' eux' (ID: 36371)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.7794511318206787
    2. 'les' → logprob: -1.1544511318206787
    3. 'leur' → logprob: -2.1544511318206787
    4. 'leurs' → logprob: -2.5294511318206787
    5. ' leurs' → logprob: -4.029451370239258
    6. '(' → logprob: -5.529451370239258
    7. 'de' → logprob: -5.779451370239258
    8. ' eux' → logprob: -6.029451370239258
    9. 'the' → logprob: -7.529451370239258
    10. 'their' → logprob: -7.779451370239258

Token 172: ' moins' (ID: 15924)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35405850410461426
    2. 'def' → logprob: -2.2290585041046143
    3. '#' → logprob: -2.4790585041046143
    4. 'from' → logprob: -2.8540585041046143
    5. '
' → logprob: -3.9790585041046143
    6. ')' → logprob: -4.729058265686035
    7. ',' → logprob: -5.104058265686035
    8. '```' → logprob: -5.854058265686035
    9. ':' → logprob: -6.479058265686035
    10. 'dist' → logprob: -6.604058265686035

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016046686097979546
    2. ' ' → logprob: -4.141046524047852
    3. '2' → logprob: -12.141046524047852
    4. ' abs' → logprob: -13.016046524047852
    5. ' min' → logprob: -13.516046524047852
    6. 'abs' → logprob: -13.766046524047852
    7. ' ' → logprob: -14.016046524047852
    8. 'min' → logprob: -14.516046524047852
    9. '  ' → logprob: -15.766046524047852
    10. '```' → logprob: -15.766046524047852

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010330724529922009
    2. ' ' → logprob: -4.635330677032471
    3. ' abs' → logprob: -8.135331153869629
    4. 'abs' → logprob: -8.385331153869629
    5. ' min' → logprob: -10.635331153869629
    6. 'min' → logprob: -11.760331153869629
    7. '(abs' → logprob: -12.135331153869629
    8. '2' → logprob: -12.635331153869629
    9. 'sl' → logprob: -13.010331153869629
    10. '```' → logprob: -13.135331153869629

Token 175: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9688736796379089
    2. 'dist' → logprob: -1.7188737392425537
    3. 'edges' → logprob: -2.0938737392425537
    4. 'def' → logprob: -2.0938737392425537
    5. '#' → logprob: -2.7188737392425537
    6. 'distance' → logprob: -3.4688737392425537
    7. 'from' → logprob: -3.5938737392425537
    8. ')' → logprob: -3.8438737392425537
    9. '
' → logprob: -3.9688737392425537
    10. 'sl' → logprob: -4.593873500823975

Token 176: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007013140711933374
    2. ' )' → logprob: -5.132013320922852
    3. ').' → logprob: -7.382013320922852
    4. '.' → logprob: -8.257013320922852
    5. ')
' → logprob: -10.257013320922852
    6. '+' → logprob: -10.382013320922852
    7. ' ' → logprob: -10.632013320922852
    8. '
' → logprob: -10.882013320922852
    9. ',' → logprob: -11.132013320922852
    10. '),' → logprob: -11.382013320922852

Token 177: 'ce' (ID: 400)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08174718171358109
    2. ' ' → logprob: -2.58174729347229
    3. 'def' → logprob: -6.956747055053711
    4. '2' → logprob: -7.206747055053711
    5. ')' → logprob: -7.331747055053711
    6. ' une' → logprob: -9.831747055053711
    7. ' un' → logprob: -9.956747055053711
    8. 'un' → logprob: -9.956747055053711
    9. 'faite' → logprob: -10.081747055053711
    10. '```' → logprob: -10.081747055053711

Token 178: ' qu' (ID: 474)
  Prédit: ' qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.8291456699371338
    2. ' que' → logprob: -1.0791456699371338
    3. ')' → logprob: -1.5791456699371338
    4. ' )' → logprob: -4.454145431518555
    5. 'qu' → logprob: -6.079145431518555
    6. 'que' → logprob: -6.954145431518555
    7. ' ' → logprob: -7.079145431518555
    8. ',' → logprob: -7.829145431518555
    9. ' ' → logprob: -7.954145431518555
    10. ' des' → logprob: -8.704145431518555

Token 179: ''ils' (ID: 41108)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.2697875201702118
    2. ' qu' → logprob: -2.269787549972534
    3. ''il' → logprob: -3.269787549972534
    4. ''ils' → logprob: -3.269787549972534
    5. ' ils' → logprob: -4.269787311553955
    6. 'que' → logprob: -5.144787311553955
    7. ''' → logprob: -5.269787311553955
    8. 'le' → logprob: -5.394787311553955
    9. ''on' → logprob: -5.394787311553955
    10. 'ils' → logprob: -5.644787311553955

Token 180: ' s' (ID: 265)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.21707779169082642
    2. ' doivent' → logprob: -2.9670777320861816
    3. 'ne' → logprob: -3.2170777320861816
    4. 's' → logprob: -3.9670777320861816
    5. ' can't' → logprob: -3.9670777320861816
    6. ' peuvent' → logprob: -4.467077732086182
    7. ' faut' → logprob: -4.717077732086182
    8. 'pe' → logprob: -4.842077732086182
    9. ')' → logprob: -4.842077732086182
    10. ' cannot' → logprob: -5.092077732086182

Token 181: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6870238780975342
    2. 'ont' → logprob: -1.0620238780975342
    3. 'ne' → logprob: -3.062023878097534
    4. 'pe' → logprob: -3.312023878097534
    5. 'eux' → logprob: -3.437023878097534
    6. 'touch' → logprob: -4.937024116516113
    7. ' ne' → logprob: -5.062024116516113
    8. ' peuvent' → logprob: -6.187024116516113
    9. 'o' → logprob: -6.312024116516113
    10. ''ont' → logprob: -6.312024116516113

Token 182: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.003799834754317999
    2. 'it' → logprob: -5.878799915313721
    3. 'is' → logprob: -7.878799915313721
    4. 'ité' → logprob: -8.378799438476562
    5. 'isent' → logprob: -9.753799438476562
    6. 'iss' → logprob: -9.753799438476562
    7. 'ite' → logprob: -9.878799438476562
    8. 'issant' → logprob: -10.128799438476562
    9. 'isse' → logprob: -10.628799438476562
    10. 'issez' → logprob: -10.753799438476562

Token 183: ' dès' (ID: 37926)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0050764987245202065
    2. ' )' → logprob: -5.7550764083862305
    3. ').' → logprob: -6.7550764083862305
    4. '.' → logprob: -7.8800764083862305
    5. ',' → logprob: -8.50507640838623
    6. '),' → logprob: -10.38007640838623
    7. ' ' → logprob: -10.88007640838623
    8. ']' → logprob: -11.00507640838623
    9. '.)' → logprob: -11.63007640838623
    10. ' ' → logprob: -11.63007640838623

Token 184: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.08581595867872238
    2. ' qu' → logprob: -2.835815906524658
    3. 'ce' → logprob: -4.835815906524658
    4. 'que' → logprob: -5.460815906524658
    5. 'le' → logprob: -5.960815906524658
    6. ' ce' → logprob: -6.085815906524658
    7. 'leur' → logprob: -6.085815906524658
    8. 'l' → logprob: -6.335815906524658
    9. '```' → logprob: -7.210815906524658
    10. 'la' → logprob: -8.210816383361816

Token 185: ''ils' (ID: 41108)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.9463632106781006
    2. 'il' → logprob: -1.0713632106781006
    3. ''ils' → logprob: -1.8213632106781006
    4. 'ils' → logprob: -2.6963632106781006
    5. ' il' → logprob: -3.9463632106781006
    6. ' ils' → logprob: -4.07136344909668
    7. '’ils' → logprob: -7.19636344909668
    8. ''elles' → logprob: -7.57136344909668
    9. '’il' → logprob: -7.94636344909668
    10. 'la' → logprob: -8.32136344909668

Token 186: ' se' (ID: 458)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6181009411811829
    2. 'touch' → logprob: -1.868100881576538
    3. ' se' → logprob: -2.118100881576538
    4. 'se' → logprob: -2.493100881576538
    5. 's' → logprob: -2.743100881576538
    6. ' are' → logprob: -4.368101119995117
    7. ' sont' → logprob: -5.493101119995117
    8. 'part' → logprob: -5.618101119995117
    9. 'are' → logprob: -5.743101119995117
    10. 'adj' → logprob: -6.118101119995117

Token 187: ' rencontr' (ID: 49751)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0716412290930748
    2. 't' → logprob: -2.946641206741333
    3. ' touch' → logprob: -4.196641445159912
    4. 'adj' → logprob: -7.946641445159912
    5. '_touch' → logprob: -7.946641445159912
    6. 'tou' → logprob: -8.446640968322754
    7. 'c' → logprob: -9.071640968322754
    8. '-touch' → logprob: -9.446640968322754
    9. 'toc' → logprob: -9.821640968322754
    10. 'ont' → logprob: -10.071640968322754

Token 188: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.265288382768631
    2. 'e' → logprob: -1.5152883529663086
    3. ')' → logprob: -4.515288352966309
    4. '#' → logprob: -7.015288352966309
    5. 's' → logprob: -8.265288352966309
    6. '`)' → logprob: -8.390288352966309
    7. 'ont' → logprob: -8.890288352966309
    8. 'ant' → logprob: -9.515288352966309
    9. '```' → logprob: -9.515288352966309
    10. 'u' → logprob: -10.015288352966309

Token 189: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007281593861989677
    2. ')
' → logprob: -8.250728607177734
    3. '+' → logprob: -9.000728607177734
    4. ',' → logprob: -9.125728607177734
    5. '.' → logprob: -9.875728607177734
    6. ' )' → logprob: -10.125728607177734
    7. ').' → logprob: -10.625728607177734
    8. '):' → logprob: -10.875728607177734
    9. '#' → logprob: -11.125728607177734
    10. ')

' → logprob: -11.125728607177734

Token 190: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6955779790878296
    2. 'def' → logprob: -1.4455779790878296
    3. '#' → logprob: -2.070578098297119
    4. 'from' → logprob: -2.320578098297119
    5. '
' → logprob: -4.195578098297119
    6. 'd' → logprob: -4.695578098297119
    7. '```' → logprob: -5.820578098297119
    8. ',' → logprob: -6.195578098297119
    9. ')' → logprob: -6.320578098297119
    10. 's' → logprob: -6.445578098297119

Token 191: ' Pour' (ID: 13931)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.283639520406723
    2. 'def' → logprob: -2.158639430999756
    3. 'from' → logprob: -3.033639430999756
    4. '
' → logprob: -3.658639430999756
    5. 'dist' → logprob: -3.658639430999756
    6. '#' → logprob: -4.408639430999756
    7. 'edges' → logprob: -5.283639430999756
    8. 'distance' → logprob: -5.658639430999756
    9. 'd' → logprob: -5.783639430999756
    10. 'graph' → logprob: -6.783639430999756

Token 192: ' des' (ID: 731)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26599279046058655
    2. ' i' → logprob: -1.5159927606582642
    3. '_' → logprob: -5.640992641448975
    4. 'dist' → logprob: -6.015992641448975
    5. ' _' → logprob: -6.515992641448975
    6. 'edge' → logprob: -6.640992641448975
    7. 'distance' → logprob: -6.765992641448975
    8. ' edge' → logprob: -7.265992641448975
    9. '_edge' → logprob: -7.390992641448975
    10. 'd' → logprob: -8.390993118286133

Token 193: ' déplacements' (ID: 193957)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5821782350540161
    2. ' i' → logprob: -0.8321782350540161
    3. ' _' → logprob: -6.457178115844727
    4. ' edge' → logprob: -7.957178115844727
    5. '_' → logprob: -8.082178115844727
    6. '_i' → logprob: -8.207178115844727
    7. '```' → logprob: -8.207178115844727
    8. 'l' → logprob: -8.457178115844727
    9. 'u' → logprob: -8.457178115844727
    10. 'edge' → logprob: -8.707178115844727

Token 194: ' jusqu' (ID: 21961)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.5004353523254395
    2. ',' → logprob: -2.0004353523254395
    3. 'import' → logprob: -2.1254353523254395
    4. 'en' → logprob: -3.0004353523254395
    5. ' de' → logprob: -3.0004353523254395
    6. ' complet' → logprob: -3.0004353523254395
    7. ' comple' → logprob: -3.0004353523254395
    8. 'de' → logprob: -3.2504353523254395
    9. 'com' → logprob: -3.3754353523254395
    10. ' ,' → logprob: -3.3754353523254395

Token 195: ''au' (ID: 63689)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.15307334065437317
    2. 'à' → logprob: -2.403073310852051
    3. ''au' → logprob: -3.653073310852051
    4. 'au' → logprob: -4.028073310852051
    5. '’à' → logprob: -5.653073310852051
    6. ' à' → logprob: -6.153073310852051
    7. '=' → logprob: -7.028073310852051
    8. 'aux' → logprob: -7.403073310852051
    9. 'a' → logprob: -9.02807331085205
    10. ' au' → logprob: -9.27807331085205

Token 196: ' mur' (ID: 11426)
  Prédit: 'mur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mur' → logprob: -0.3621031939983368
    2. 'm' → logprob: -1.2371032238006592
    3. 'sl' → logprob: -5.73710298538208
    4. 'contact' → logprob: -5.86210298538208
    5. ' mur' → logprob: -6.48710298538208
    6. ' slime' → logprob: -6.73710298538208
    7. 'bord' → logprob: -6.86210298538208
    8. '```' → logprob: -7.11210298538208
    9. 'prem' → logprob: -7.61210298538208
    10. '-' → logprob: -8.362103462219238

Token 197: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026145033538341522
    2. 'import' → logprob: -5.151144981384277
    3. 's' → logprob: -5.401144981384277
    4. '#' → logprob: -5.776144981384277
    5. '.' → logprob: -5.901144981384277
    6. 'def' → logprob: -6.276144981384277
    7. ':' → logprob: -6.651144981384277
    8. ' ,' → logprob: -6.651144981384277
    9. ',
' → logprob: -6.776144981384277
    10. ')' → logprob: -7.276144981384277

Token 198: ' jusqu' (ID: 21961)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7736667990684509
    2. 'un' → logprob: -1.3986668586730957
    3. ' un' → logprob: -2.2736668586730957
    4. ' l' → logprob: -3.0236668586730957
    5. 'une' → logprob: -3.1486668586730957
    6. ' une' → logprob: -3.7736668586730957
    7. 'à' → logprob: -3.7736668586730957
    8. 'au' → logprob: -4.273666858673096
    9. 'la' → logprob: -5.273666858673096
    10. ' à' → logprob: -5.773666858673096

Token 199: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.38798052072525024
    2. 'à' → logprob: -1.1379804611206055
    3. ''au' → logprob: -7.3879804611206055
    4. 'au' → logprob: -8.387980461120605
    5. '’à' → logprob: -8.762980461120605
    6. 'a' → logprob: -10.387980461120605
    7. '#' → logprob: -10.762980461120605
    8. '```' → logprob: -10.887980461120605
    9. ''' → logprob: -11.262980461120605
    10. ' à' → logprob: -12.012980461120605

Token 200: ' toucher' (ID: 127487)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4691222310066223
    2. 'un' → logprob: -1.5941221714019775
    3. 'une' → logprob: -2.0941221714019775
    4. ' l' → logprob: -3.5941221714019775
    5. ' une' → logprob: -5.094122409820557
    6. ' un' → logprob: -5.469122409820557
    7. 'la' → logprob: -5.844122409820557
    8. 'another' → logprob: -6.219122409820557
    9. 'ce' → logprob: -6.969122409820557
    10. 'aut' → logprob: -7.219122409820557

Token 201: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.013784989714622498
    2. 'une' → logprob: -4.888784885406494
    3. ' un' → logprob: -5.513784885406494
    4. 'l' → logprob: -7.013784885406494
    5. '#' → logprob: -8.013785362243652
    6. 'another' → logprob: -8.138785362243652
    7. 'aut' → logprob: -8.513785362243652
    8. 'le' → logprob: -9.513785362243652
    9. '```' → logprob: -9.638785362243652
    10. ''un' → logprob: -9.763785362243652

Token 202: ' slime' (ID: 168619)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.6964209079742432
    2. 'aut' → logprob: -0.8214209079742432
    3. ' slime' → logprob: -3.446420907974243
    4. 'sl' → logprob: -4.321420669555664
    5. ''autre' → logprob: -4.696420669555664
    6. 'other' → logprob: -6.196420669555664
    7. 'mur' → logprob: -6.321420669555664
    8. '```' → logprob: -6.571420669555664
    9. '’autre' → logprob: -7.696420669555664
    10. 'm' → logprob: -7.946420669555664

Token 203: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6112299561500549
    2. ':' → logprob: -1.6112298965454102
    3. ',' → logprob: -2.11122989654541
    4. 'def' → logprob: -2.73622989654541
    5. '
' → logprob: -3.61122989654541
    6. 'from' → logprob: -4.48622989654541
    7. '#' → logprob: -4.48622989654541
    8. '.' → logprob: -4.98622989654541
    9. ')' → logprob: -5.48622989654541
    10. ',
' → logprob: -5.61122989654541

Token 204: ' cela' (ID: 17542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.055827803909778595
    2. 'def' → logprob: -4.180827617645264
    3. ',' → logprob: -4.430827617645264
    4. '#' → logprob: -4.555827617645264
    5. 'import' → logprob: -5.055827617645264
    6. ' on' → logprob: -6.180827617645264
    7. 'distance' → logprob: -6.555827617645264
    8. '),' → logprob: -7.430827617645264
    9. '
' → logprob: -7.430827617645264
    10. ' )' → logprob: -7.680827617645264

Token 205: ' donne' (ID: 30004)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5607354044914246
    2. '#' → logprob: -1.0607354640960693
    3. 'def' → logprob: -2.8107354640960693
    4. ')' → logprob: -5.68573522567749
    5. 'n' → logprob: -5.68573522567749
    6. 'from' → logprob: -5.93573522567749
    7. '=' → logprob: -6.43573522567749
    8. ' n' → logprob: -6.56073522567749
    9. 'contin' → logprob: -7.06073522567749
    10. '.' → logprob: -7.68573522567749

Token 206: ' une' (ID: 2463)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0654358863830566
    2. 'def' → logprob: -1.1904358863830566
    3. '(' → logprob: -2.6904358863830566
    4. '```' → logprob: -3.5654358863830566
    5. '.' → logprob: -3.6904358863830566
    6. ')' → logprob: -3.6904358863830566
    7. ',' → logprob: -3.8154358863830566
    8. 'from' → logprob: -3.8154358863830566
    9. '"' → logprob: -3.9404358863830566
    10. ']' → logprob: -4.065435886383057

Token 207: ' distance' (ID: 9324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4838875532150269
    2. '```' → logprob: -1.4838875532150269
    3. 'distance' → logprob: -2.1088876724243164
    4. 'graph' → logprob: -2.6088876724243164
    5. 'minimum' → logprob: -3.2338876724243164
    6. '.' → logprob: -3.3588876724243164
    7. 'complete' → logprob: -3.3588876724243164
    8. 'possible' → logprob: -3.7338876724243164
    9. ')' → logprob: -3.7338876724243164
    10. 'import' → logprob: -4.233887672424316

Token 208: ' effective' (ID: 8488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3027380108833313
    2. '=' → logprob: -1.8027379512786865
    3. 'def' → logprob: -4.302738189697266
    4. ')' → logprob: -4.552738189697266
    5. 'import' → logprob: -4.552738189697266
    6. 's' → logprob: -4.677738189697266
    7. ' minimale' → logprob: -4.677738189697266
    8. 'max' → logprob: -4.927738189697266
    9. ' maximale' → logprob: -5.427738189697266
    10. 'minimum' → logprob: -5.427738189697266

Token 209: ' ég' (ID: 33150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10106589645147324
    2. ' =' → logprob: -2.7260658740997314
    3. ')' → logprob: -4.2260661125183105
    4. 'import' → logprob: -5.8510661125183105
    5. ' ' → logprob: -6.1010661125183105
    6. '_' → logprob: -6.2260661125183105
    7. ',' → logprob: -6.3510661125183105
    8. '(' → logprob: -6.6010661125183105
    9. '<|end|>' → logprob: -6.6010661125183105
    10. '[' → logprob: -6.9760661125183105

Token 210: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.00023798657639417797
    2. 'al' → logprob: -8.500238418579102
    3. 'a' → logprob: -11.375238418579102
    4. '
' → logprob: -12.125238418579102
    5. 'але' → logprob: -12.375238418579102
    6. 'alee' → logprob: -13.125238418579102
    7. '

' → logprob: -13.500238418579102
    8. '[' → logprob: -13.875238418579102
    9. '```' → logprob: -14.375238418579102
    10. '<a' → logprob: -14.375238418579102

Token 211: ' 
' (ID: 793)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1683083325624466
    2. ' =' → logprob: -3.0433082580566406
    3. ' à' → logprob: -3.5433082580566406
    4. '(' → logprob: -4.168308258056641
    5. 'max' → logprob: -4.293308258056641
    6. ',' → logprob: -4.668308258056641
    7. '=max' → logprob: -4.793308258056641
    8. ')' → logprob: -5.043308258056641
    9. 'à' → logprob: -5.168308258056641
    10. ' ' → logprob: -5.168308258056641

Token 212: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.237708568572998
    2. ' à' → logprob: -1.612708568572998
    3. 'à' → logprob: -2.237708568572998
    4. 'import' → logprob: -2.237708568572998
    5. 'to' → logprob: -2.237708568572998
    6. 'max' → logprob: -2.362708568572998
    7. ',' → logprob: -3.612708568572998
    8. ')' → logprob: -3.862708568572998
    9. ' to' → logprob: -4.487708568572998
    10. ' au' → logprob: -4.987708568572998

Token 213: ' à' (ID: 1221)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19674722850322723
    2. 'à' → logprob: -2.946747303009033
    3. ' max' → logprob: -3.071747303009033
    4. 'min' → logprob: -3.821747303009033
    5. ' à' → logprob: -4.071747303009033
    6. 'to' → logprob: -4.196747303009033
    7. '0' → logprob: -5.071747303009033
    8. ' ' → logprob: -5.946747303009033
    9. 'import' → logprob: -6.071747303009033
    10. '1' → logprob: -6.446747303009033

Token 214: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1886688768863678
    2. 'abs' → logprob: -2.063668966293335
    3. 'min' → logprob: -4.188668727874756
    4. 'la' → logprob: -4.813668727874756
    5. ' max' → logprob: -4.813668727874756
    6. '0' → logprob: -5.063668727874756
    7. ' abs' → logprob: -5.938668727874756
    8. 'man' → logprob: -6.563668727874756
    9. 'l' → logprob: -7.188668727874756
    10. 'lambda' → logprob: -7.188668727874756

Token 215: ' distance' (ID: 9324)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7723893523216248
    2. 'distance' → logprob: -1.3973894119262695
    3. 'man' → logprob: -1.8973894119262695
    4. 'min' → logprob: -3.1473894119262695
    5. '-' → logprob: -3.8973894119262695
    6. '1' → logprob: -3.8973894119262695
    7. '0' → logprob: -4.3973894119262695
    8. ' max' → logprob: -5.3973894119262695
    9. '```' → logprob: -5.5223894119262695
    10. ''' → logprob: -5.6473894119262695

Token 216: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5615145564079285
    2. '=' → logprob: -1.8115146160125732
    3. ' -' → logprob: -2.5615146160125732
    4. ' de' → logprob: -2.8115146160125732
    5. '_' → logprob: -3.6865146160125732
    6. '(' → logprob: -3.9365146160125732
    7. ' between' → logprob: -4.311514377593994
    8. ' =' → logprob: -4.686514377593994
    9. ' ' → logprob: -4.811514377593994
    10. '[' → logprob: -4.811514377593994

Token 217: ' Manhattan' (ID: 47130)
  Prédit: 'Man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.42450061440467834
    2. 'man' → logprob: -1.299500584602356
    3. '1' → logprob: -3.5495007038116455
    4. 'l' → logprob: -4.174500465393066
    5. ' man' → logprob: -4.549500465393066
    6. ' Manhattan' → logprob: -4.674500465393066
    7. ' ' → logprob: -5.549500465393066
    8. 'max' → logprob: -6.799500465393066
    9. '```' → logprob: -6.799500465393066
    10. 'de' → logprob: -7.674500465393066

Token 218: ' entre' (ID: 3853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07876739650964737
    2. 'def' → logprob: -3.7037672996520996
    3. ')' → logprob: -4.7037672996521
    4. 'import' → logprob: -4.8287672996521
    5. '=' → logprob: -5.0787672996521
    6. '(' → logprob: -5.2037672996521
    7. '+' → logprob: -5.8287672996521
    8. '**' → logprob: -6.0787672996521
    9. '```' → logprob: -6.0787672996521
    10. '#' → logprob: -6.3287672996521

Token 219: ' deux' (ID: 10301)
  Prédit: 'eux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eux' → logprob: -0.0070022400468587875
    2. 'de' → logprob: -5.257002353668213
    3. 'les' → logprob: -7.382002353668213
    4. ' eux' → logprob: -7.632002353668213
    5. 'eu' → logprob: -8.632001876831055
    6. 'l' → logprob: -9.007001876831055
    7. 'leurs' → logprob: -9.382001876831055
    8. 'leur' → logprob: -9.382001876831055
    9. 'e' → logprob: -10.132001876831055
    10. '(' → logprob: -10.257001876831055

Token 220: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.31589657068252563
    2. 'points' → logprob: -1.9408965110778809
    3. 'positions' → logprob: -3.440896511077881
    4. ' points' → logprob: -3.690896511077881
    5. ' slime' → logprob: -3.690896511077881
    6. ' sl' → logprob: -4.565896511077881
    7. 'tokens' → logprob: -5.315896511077881
    8. ' positions' → logprob: -5.440896511077881
    9. '(' → logprob: -5.565896511077881
    10. 's' → logprob: -5.690896511077881

Token 221: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.05477992817759514
    2. 'ime' → logprob: -3.1797800064086914
    3. ')' → logprob: -4.929780006408691
    4. 'i' → logprob: -7.429780006408691
    5. '_' → logprob: -7.929780006408691
    6. '```' → logprob: -8.054780006408691
    7. ']' → logprob: -8.554780006408691
    8. 'a' → logprob: -8.617280006408691
    9. '#' → logprob: -8.742280006408691
    10. '))' → logprob: -8.804780006408691

Token 222: ' moins' (ID: 15924)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28567200899124146
    2. '
' → logprob: -2.1606719493865967
    3. 'def' → logprob: -3.0356719493865967
    4. '```' → logprob: -3.7856719493865967
    5. ',' → logprob: -4.660672187805176
    6. ':' → logprob: -4.785672187805176
    7. '#' → logprob: -4.910672187805176
    8. '

' → logprob: -5.160672187805176
    9. '.' → logprob: -5.285672187805176
    10. 'from' → logprob: -5.410672187805176

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012510828673839569
    2. ' ' → logprob: -4.387510776519775
    3. ' one' → logprob: -14.887511253356934
    4. ' ' → logprob: -15.137511253356934
    5. '   ' → logprob: -15.137511253356934
    6. '```' → logprob: -15.762511253356934
    7. '2' → logprob: -16.887510299682617
    8. 'one' → logprob: -17.012510299682617
    9. '<|end|>' → logprob: -17.012510299682617
    10. 'space' → logprob: -17.762510299682617

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.396757089532912e-05
    2. ' ' → logprob: -9.7500638961792
    3. '2' → logprob: -12.1250638961792
    4. 'one' → logprob: -16.000064849853516
    5. '```' → logprob: -16.000064849853516
    6. '0' → logprob: -17.250064849853516
    7. '１' → logprob: -17.375064849853516
    8. '.' → logprob: -18.500064849853516
    9. '   ' → logprob: -18.500064849853516
    10. '<|end|>' → logprob: -18.625064849853516

Token 225: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.184529423713684
    2. 'def' → logprob: -1.309529423713684
    3. '
' → logprob: -1.559529423713684
    4. '#' → logprob: -2.9345293045043945
    5. ',' → logprob: -3.6845293045043945
    6. ',
' → logprob: -3.6845293045043945
    7. 'from' → logprob: -4.3095293045043945
    8. 'edges' → logprob: -4.4345293045043945
    9. '

' → logprob: -4.5595293045043945
    10. ':' → logprob: -4.5595293045043945

Token 226: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6097349524497986
    2. 'def' → logprob: -1.6097350120544434
    3. 'edges' → logprob: -1.7347350120544434
    4. '
' → logprob: -3.8597350120544434
    5. 'dist' → logprob: -3.8597350120544434
    6. 'distance' → logprob: -4.484735012054443
    7. 'from' → logprob: -4.734735012054443
    8. '#' → logprob: -5.609735012054443
    9. ' edges' → logprob: -6.109735012054443
    10. ',
' → logprob: -6.609735012054443

Token 227: ' Donc' (ID: 88837)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7075676918029785
    2. 'def' → logprob: -1.2075676918029785
    3. 'from' → logprob: -1.5825676918029785
    4. '#' → logprob: -7.2075676918029785
    5. 'd' → logprob: -7.4575676918029785
    6. ' from' → logprob: -7.9575676918029785
    7. 'distance' → logprob: -7.9575676918029785
    8. 'edges' → logprob: -8.08256721496582
    9. ' import' → logprob: -8.95756721496582
    10. 'dist' → logprob: -9.20756721496582

Token 228: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9676657915115356
    2. 'edges' → logprob: -1.2176657915115356
    3. 'from' → logprob: -1.3426657915115356
    4. 'def' → logprob: -3.842665672302246
    5. 'dist' → logprob: -4.092665672302246
    6. '#' → logprob: -4.092665672302246
    7. 'points' → logprob: -5.842665672302246
    8. ' edges' → logprob: -5.842665672302246
    9. '
' → logprob: -7.342665672302246
    10. ' from' → logprob: -8.092665672302246

Token 229: ' considère' (ID: 176437)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8071832656860352
    2. '_' → logprob: -1.6821832656860352
    3. ' import' → logprob: -2.682183265686035
    4. ' peut' → logprob: -3.057183265686035
    5. ' can' → logprob: -3.182183265686035
    6. 'def' → logprob: -3.807183265686035
    7. ' doit' → logprob: -3.807183265686035
    8. '#' → logprob: -3.932183265686035
    9. ' veut' → logprob: -4.182183265686035
    10. '=' → logprob: -4.182183265686035

Token 230: ' un' (ID: 537)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7563230395317078
    2. 'le' → logprob: -1.8813230991363525
    3. 'la' → logprob: -2.3813230991363525
    4. 'N' → logprob: -3.0063230991363525
    5. 'import' → logprob: -3.2563230991363525
    6. 'que' → logprob: -3.2563230991363525
    7. 'edges' → logprob: -3.3813230991363525
    8. 'l' → logprob: -3.7563230991363525
    9. 'une' → logprob: -3.7563230991363525
    10. 't' → logprob: -4.506322860717773

Token 231: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0073031187057495
    2. ' grap' → logprob: -1.1323031187057495
    3. 'gr' → logprob: -1.7573031187057495
    4. ' graph' → logprob: -2.632303237915039
    5. 'complete' → logprob: -3.757303237915039
    6. ' complete' → logprob: -4.132303237915039
    7. 'import' → logprob: -4.507303237915039
    8. 'G' → logprob: -5.382303237915039
    9. 'from' → logprob: -5.882303237915039
    10. ' complet' → logprob: -6.257303237915039

Token 232: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.026607146486639977
    2. 'h' → logprob: -3.651607036590576
    3. 'phe' → logprob: -8.651607513427734
    4. '#' → logprob: -9.401607513427734
    5. 'ph' → logprob: -11.401607513427734
    6. 'aphe' → logprob: -11.526607513427734
    7. 'heme' → logprob: -11.901607513427734
    8. 'che' → logprob: -12.401607513427734
    9. '<h' → logprob: -13.151607513427734
    10. '`' → logprob: -13.276607513427734

Token 233: ' complet' (ID: 5127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34633660316467285
    2. '=' → logprob: -2.221336603164673
    3. 'import' → logprob: -2.471336603164673
    4. ',' → logprob: -3.846336603164673
    5. '_edges' → logprob: -3.971336603164673
    6. 'edges' → logprob: -4.221336364746094
    7. 'with' → logprob: -4.346336364746094
    8. '_nodes' → logprob: -5.471336364746094
    9. ' edges' → logprob: -5.596336364746094
    10. 'nodes' → logprob: -5.846336364746094

Token 234: ' entre' (ID: 3853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7551292181015015
    2. '_edges' → logprob: -1.3801292181015015
    3. 'edges' → logprob: -2.505129337310791
    4. 'with' → logprob: -3.005129337310791
    5. 'import' → logprob: -3.505129337310791
    6. ' with' → logprob: -4.005129337310791
    7. ' edges' → logprob: -4.255129337310791
    8. ',
' → logprob: -4.755129337310791
    9. ' =' → logprob: -5.130129337310791
    10. '#' → logprob: -5.255129337310791

Token 235: ' sl' (ID: 1925)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4130696952342987
    2. ' toutes' → logprob: -1.913069725036621
    3. 't' → logprob: -2.038069725036621
    4. ' tous' → logprob: -4.038069725036621
    5. ' les' → logprob: -4.288069725036621
    6. 'all' → logprob: -4.288069725036621
    7. 'sl' → logprob: -5.288069725036621
    8. 's' → logprob: -5.663069725036621
    9. 'tout' → logprob: -6.163069725036621
    10. 'Toutes' → logprob: -6.538069725036621

Token 236: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00451461598277092
    2. '#' → logprob: -6.879514694213867
    3. 'ime' → logprob: -7.129514694213867
    4. '\' → logprob: -8.129514694213867
    5. '`' → logprob: -8.254514694213867
    6. '_' → logprob: -8.629514694213867
    7. '(' → logprob: -9.004514694213867
    8. '   ' → logprob: -9.004514694213867
    9. '```' → logprob: -9.004514694213867
    10. '[' → logprob: -9.254514694213867

Token 237: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1273468732833862
    2. 'edges' → logprob: -1.7523468732833862
    3. ',
' → logprob: -1.8773468732833862
    4. '#' → logprob: -2.252346992492676
    5. ',' → logprob: -2.502346992492676
    6. '_edges' → logprob: -3.502346992492676
    7. 'def' → logprob: -3.877346992492676
    8. '
' → logprob: -4.002346992492676
    9. 'from' → logprob: -4.127346992492676
    10. 'dist' → logprob: -4.252346992492676

Token 238: ' poids' (ID: 56058)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6621910333633423
    2. 'les' → logprob: -1.1621910333633423
    3. 'N' → logprob: -3.4121909141540527
    4. ' edges' → logprob: -4.037190914154053
    5. 'edge' → logprob: -4.537190914154053
    6. ' les' → logprob: -4.537190914154053
    7. 'l' → logprob: -4.537190914154053
    8. 'ar' → logprob: -4.537190914154053
    9. 'po' → logprob: -4.662190914154053
    10. 'le' → logprob: -4.662190914154053

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35391733050346375
    2. ' =' → logprob: -1.2289173603057861
    3. '=lambda' → logprob: -6.603917121887207
    4. ' equal' → logprob: -6.728917121887207
    5. 'equal' → logprob: -7.103917121887207
    6. 'man' → logprob: -7.478917121887207
    7. ' égal' → logprob: -8.103917121887207
    8. 's' → logprob: -8.728917121887207
    9. ' ég' → logprob: -8.728917121887207
    10. '="' → logprob: -9.353917121887207

Token 240: ' distance' (ID: 9324)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08688788115978241
    2. 'abs' → logprob: -3.086887836456299
    3. ' max' → logprob: -3.961887836456299
    4. 'lambda' → logprob: -4.461887836456299
    5. 'sum' → logprob: -6.211887836456299
    6. '(max' → logprob: -6.711887836456299
    7. 'man' → logprob: -6.961887836456299
    8. ' abs' → logprob: -6.961887836456299
    9. ' lambda' → logprob: -7.461887836456299
    10. '[max' → logprob: -8.336888313293457

Token 241: ' Manhattan' (ID: 47130)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36800915002822876
    2. '=' → logprob: -1.868009090423584
    3. ' =' → logprob: -2.743009090423584
    4. '_m' → logprob: -4.118009090423584
    5. 'man' → logprob: -4.368009090423584
    6. ',' → logprob: -4.493009090423584
    7. '(' → logprob: -4.993009090423584
    8. '_man' → logprob: -5.118009090423584
    9. '-' → logprob: -5.243009090423584
    10. 's' → logprob: -5.493009090423584

Token 242: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17420509457588196
    2. ')' → logprob: -3.0492050647735596
    3. '(
' → logprob: -3.5492050647735596
    4. '-' → logprob: -4.049205303192139
    5. 'def' → logprob: -4.424205303192139
    6. ' -' → logprob: -4.424205303192139
    7. 'import' → logprob: -4.674205303192139
    8. ' (' → logprob: -4.924205303192139
    9. 'between' → logprob: -5.799205303192139
    10. ' between' → logprob: -5.924205303192139

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1002107709646225
    2. ' ' → logprob: -2.350210666656494
    3. ' ' → logprob: -12.600211143493652
    4. '<|end|>' → logprob: -15.350211143493652
    5. '```' → logprob: -15.600211143493652
    6. '	' → logprob: -16.350210189819336
    7. '   ' → logprob: -16.350210189819336
    8. '  ' → logprob: -16.725210189819336
    9. ' one' → logprob: -17.850210189819336
    10. '<|end|>' → logprob: -18.100210189819336

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '```' → logprob: -18.125553131103516
    4. ' ' → logprob: -18.625553131103516
    5. '2' → logprob: -19.125553131103516
    6. '１' → logprob: -19.625553131103516
    7. '   ' → logprob: -19.625553131103516
    8. '  ' → logprob: -20.250553131103516
    9. '<|end|>' → logprob: -21.375553131103516
    10. '[' → logprob: -21.375553131103516

Token 245: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47369512915611267
    2. 'edges' → logprob: -1.723695158958435
    3. 'def' → logprob: -2.8486950397491455
    4. 'from' → logprob: -3.4736950397491455
    5. '
' → logprob: -3.5986950397491455
    6. ',
' → logprob: -3.8486950397491455
    7. ',' → logprob: -4.348695278167725
    8. ' edges' → logprob: -4.348695278167725
    9. '#' → logprob: -4.473695278167725
    10. 'dist' → logprob: -4.973695278167725

Token 246: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6540605425834656
    2. '
' → logprob: -2.0290606021881104
    3. 'edges' → logprob: -2.4040606021881104
    4. '#' → logprob: -2.5290606021881104
    5. ',
' → logprob: -2.7790606021881104
    6. ',' → logprob: -3.1540606021881104
    7. '<|end|>' → logprob: -4.529060363769531
    8. 'def' → logprob: -4.529060363769531
    9. ')' → logprob: -4.654060363769531
    10. ' edges' → logprob: -5.029060363769531

Token 247: ' Le' (ID: 2018)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6988210082054138
    2. 'import' → logprob: -0.9488210082054138
    3. 'from' → logprob: -2.8238210678100586
    4. 'def' → logprob: -3.0738210678100586
    5. 'dist' → logprob: -5.198821067810059
    6. '#' → logprob: -6.573821067810059
    7. ' edges' → logprob: -6.823821067810059
    8. 'graph' → logprob: -7.573821067810059
    9. 'distance' → logprob: -8.198821067810059
    10. 'parent' → logprob: -8.823821067810059

Token 248: ' nombre' (ID: 9733)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.30521634221076965
    2. 'import' → logprob: -1.6802163124084473
    3. ' code' → logprob: -3.6802163124084473
    4. 'def' → logprob: -3.9302163124084473
    5. '#' → logprob: -5.055216312408447
    6. 'code' → logprob: -5.305216312408447
    7. ' from' → logprob: -5.555216312408447
    8. 'sl' → logprob: -6.055216312408447
    9. 'distance' → logprob: -6.430216312408447
    10. ' import' → logprob: -6.680216312408447

Token 249: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010383108630776405
    2. ' _' → logprob: -4.635383129119873
    3. ' de' → logprob: -8.760382652282715
    4. '_space' → logprob: -9.260382652282715
    5. '_de' → logprob: -9.510382652282715
    6. '_edges' → logprob: -9.510382652282715
    7. '_d' → logprob: -9.635382652282715
    8. '_s' → logprob: -10.260382652282715
    9. '_des' → logprob: -11.135382652282715
    10. 'import' → logprob: -11.510382652282715

Token 250: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015394225716590881
    2. '_d' → logprob: -4.76539421081543
    3. '_de' → logprob: -5.89039421081543
    4. ' _' → logprob: -6.64039421081543
    5. ' de' → logprob: -6.76539421081543
    6. '_edges' → logprob: -7.76539421081543
    7. ' d' → logprob: -8.26539421081543
    8. '_m' → logprob: -8.26539421081543
    9. '_min' → logprob: -8.39039421081543
    10. '_des' → logprob: -9.39039421081543

Token 251: ' moves' (ID: 19523)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05167892575263977
    2. ' mouvements' → logprob: -3.1766788959503174
    3. 'moves' → logprob: -5.1766791343688965
    4. ' m' → logprob: -7.4266791343688965
    5. ' movements' → logprob: -7.6766791343688965
    6. 'mov' → logprob: -7.9266791343688965
    7. 'edges' → logprob: -8.176678657531738
    8. 'ar' → logprob: -8.426678657531738
    9. ' moves' → logprob: -8.551678657531738
    10. ' déplacements' → logprob: -8.676678657531738

Token 252: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6893655061721802
    2. '=' → logprob: -0.9393655061721802
    3. 's' → logprob: -3.6893653869628906
    4. ' ' → logprob: -3.8143653869628906
    5. ' est' → logprob: -4.189365386962891
    6. '_' → logprob: -4.314365386962891
    7. ' pour' → logprob: -4.939365386962891
    8. 'pour' → logprob: -4.939365386962891
    9. 'est' → logprob: -5.064365386962891
    10. '#' → logprob: -6.189365386962891

Token 253: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3080920875072479
    2. ' min' → logprob: -1.4330921173095703
    3. 'max' → logprob: -4.55809211730957
    4. ' N' → logprob: -5.18309211730957
    5. 'N' → logprob: -5.43309211730957
    6. ' max' → logprob: -6.18309211730957
    7. '0' → logprob: -6.93309211730957
    8. '   ' → logprob: -7.30809211730957
    9. 'sum' → logprob: -7.43309211730957
    10. ' ' → logprob: -7.68309211730957

Token 254: ' poids' (ID: 56058)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4192810654640198
    2. ' sum' → logprob: -1.419281005859375
    3. ' poids' → logprob: -3.419281005859375
    4. 's' → logprob: -4.044281005859375
    5. 'N' → logprob: -4.169281005859375
    6. 'po' → logprob: -4.669281005859375
    7. 'minimum' → logprob: -4.794281005859375
    8. 'W' → logprob: -6.044281005859375
    9. 'weight' → logprob: -6.044281005859375
    10. ' minimum' → logprob: -6.294281005859375

Token 255: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06649251282215118
    2. '_' → logprob: -3.0664925575256348
    3. '_matrix' → logprob: -5.816492557525635
    4. 'import' → logprob: -6.191492557525635
    5. '_s' → logprob: -6.566492557525635
    6. ' _' → logprob: -6.691492557525635
    7. '_graph' → logprob: -6.941492557525635
    8. '_edges' → logprob: -6.941492557525635
    9. '_list' → logprob: -7.066492557525635
    10. ' =' → logprob: -7.191492557525635

Token 256: ' d' (ID: 272)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8006066083908081
    2. 'edges' → logprob: -1.675606608390808
    3. '_edges' → logprob: -2.0506067276000977
    4. 's' → logprob: -2.3006067276000977
    5. ' edges' → logprob: -3.1756067276000977
    6. 'def' → logprob: -3.3006067276000977
    7. 'from' → logprob: -3.8006067276000977
    8. ',' → logprob: -5.425606727600098
    9. '.' → logprob: -5.675606727600098
    10. '```' → logprob: -5.675606727600098

Token 257: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5239418148994446
    2. ''' → logprob: -1.3989417552947998
    3. 'e' → logprob: -2.5239417552948
    4. ''une' → logprob: -2.8989417552948
    5. 'es' → logprob: -4.648941993713379
    6. 'u' → logprob: -5.398941993713379
    7. ''ensemble' → logprob: -6.148941993713379
    8. ''ar' → logprob: -6.648941993713379
    9. ''au' → logprob: -6.898941993713379
    10. 's' → logprob: -7.273941993713379

Token 258: ' MST' (ID: 123058)
  Prédit: ' arbre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.6289196014404297
    2. ' Minimum' → logprob: -1.0039196014404297
    3. 'Minimum' → logprob: -3.6289196014404297
    4. ' MST' → logprob: -3.6289196014404297
    5. 'ar' → logprob: -3.7539196014404297
    6. ' minimum' → logprob: -4.37891960144043
    7. 'minimum' → logprob: -5.87891960144043
    8. 'M' → logprob: -6.12891960144043
    9. 'e' → logprob: -6.12891960144043
    10. '```' → logprob: -6.62891960144043

Token 259: ' sur' (ID: 1512)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3114900290966034
    2. 'from' → logprob: -1.6864900588989258
    3. 'def' → logprob: -2.936490058898926
    4. 'edges' → logprob: -3.686490058898926
    5. ' edges' → logprob: -6.811490058898926
    6. '
' → logprob: -6.811490058898926
    7. 'dist' → logprob: -7.561490058898926
    8. ' from' → logprob: -8.311490058898926
    9. 'class' → logprob: -8.436490058898926
    10. '#' → logprob: -8.686490058898926

Token 260: ' ce' (ID: 2357)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.9232434630393982
    2. ' ce' → logprob: -1.423243522644043
    3. ' ces' → logprob: -1.548243522644043
    4. 'les' → logprob: -2.923243522644043
    5. 'le' → logprob: -3.298243522644043
    6. ' le' → logprob: -4.298243522644043
    7. ' les' → logprob: -4.423243522644043
    8. 'sl' → logprob: -4.673243522644043
    9. 'ce' → logprob: -4.798243522644043
    10. 'la' → logprob: -4.923243522644043

Token 261: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.449278861284256
    2. ' grap' → logprob: -1.1992788314819336
    3. 'graph' → logprob: -3.1992788314819336
    4. ' graph' → logprob: -3.9492788314819336
    5. '_gr' → logprob: -9.199278831481934
    6. ' complete' → logprob: -9.824278831481934
    7. ' gr' → logprob: -9.824278831481934
    8. 'complete' → logprob: -9.949278831481934
    9. ' graphique' → logprob: -10.324278831481934
    10. 'raph' → logprob: -10.574278831481934

Token 262: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.04160989448428154
    2. 'he' → logprob: -3.2916100025177
    3. 'phe' → logprob: -6.291609764099121
    4. 'h' → logprob: -7.041609764099121
    5. 'aph' → logprob: -7.291609764099121
    6. 'hap' → logprob: -10.041609764099121
    7. 'heme' → logprob: -10.416609764099121
    8. 'ph' → logprob: -10.666609764099121
    9. 'hep' → logprob: -10.666609764099121
    10. '#' → logprob: -11.416609764099121

Token 263: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4623381793498993
    2. 'def' → logprob: -1.0873382091522217
    3. 'from' → logprob: -3.4623382091522217
    4. '#' → logprob: -7.462337970733643
    5. '
' → logprob: -8.2123384475708
    6. '```' → logprob: -8.3373384475708
    7. ')' → logprob: -8.7123384475708
    8. ',' → logprob: -8.8373384475708
    9. ' import' → logprob: -9.5873384475708
    10. 'dist' → logprob: -10.4623384475708

Token 264: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2562190890312195
    2. 'from' → logprob: -1.6312191486358643
    3. 'def' → logprob: -3.5062191486358643
    4. 'class' → logprob: -8.506218910217285
    5. ' from' → logprob: -10.256218910217285
    6. '#' → logprob: -10.756218910217285
    7. '```' → logprob: -11.006218910217285
    8. ' import' → logprob: -11.131218910217285
    9. 'dist' → logprob: -11.631218910217285
    10. 'edges' → logprob: -12.006218910217285

Token 265: ' Impl' (ID: 144563)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5847906470298767
    2. 'from' → logprob: -1.4597907066345215
    3. 'def' → logprob: -1.8347907066345215
    4. 'edges' → logprob: -3.3347907066345215
    5. 'parent' → logprob: -4.4597907066345215
    6. 'class' → logprob: -5.8347907066345215
    7. 'parents' → logprob: -7.7097907066345215
    8. '#' → logprob: -8.584790229797363
    9. ' edges' → logprob: -10.959790229797363
    10. 'INF' → logprob: -11.084790229797363

Token 266: 'ément' (ID: 17645)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7985379695892334
    2. 'ement' → logprob: -1.0485379695892334
    3. 'ément' → logprob: -2.0485379695892334
    4. 'ort' → logprob: -2.6735379695892334
    5. '```' → logprob: -7.5485382080078125
    6. 'def' → logprob: -7.7985382080078125
    7. 'from' → logprob: -9.048538208007812
    8. 'ent' → logprob: -9.173538208007812
    9. 'é' → logprob: -9.423538208007812
    10. '#' → logprob: -9.548538208007812

Token 267: 'ation' (ID: 387)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6514679789543152
    2. 'import' → logprob: -1.27646803855896
    3. 'def' → logprob: -1.65146803855896
    4. 'port' → logprob: -5.026467800140381
    5. 'ort' → logprob: -7.526467800140381
    6. 'ent' → logprob: -7.651467800140381
    7. 'class' → logprob: -9.026468276977539
    8. 't' → logprob: -9.651468276977539
    9. '
' → logprob: -9.776468276977539
    10. '#' → logprob: -10.776468276977539

Token 268: ' naï' (ID: 153475)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2084103375673294
    2. 'from' → logprob: -2.4584102630615234
    3. 'import' → logprob: -2.8334102630615234
    4. 'class' → logprob: -3.2084102630615234
    5. 'parent' → logprob: -6.083410263061523
    6. 'edges' → logprob: -7.333410263061523
    7. '#' → logprob: -8.958410263061523
    8. 'parents' → logprob: -9.208410263061523
    9. 'dist' → logprob: -9.583410263061523
    10. '```' → logprob: -9.958410263061523

Token 269: 've' (ID: 737)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6042041778564453
    2. 'def' → logprob: -1.2292041778564453
    3. 'ément' → logprob: -2.1042041778564453
    4. 'mentation' → logprob: -3.6042041778564453
    5. 'class' → logprob: -5.979204177856445
    6. 'ment' → logprob: -5.979204177856445
    7. 'm' → logprob: -6.229204177856445
    8. '#' → logprob: -6.604204177856445
    9. '```' → logprob: -6.729204177856445
    10. 'mente' → logprob: -7.479204177856445

Token 270: ' pour' (ID: 1930)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.43183186650276184
    2. 'def' → logprob: -1.6818318367004395
    3. 'import' → logprob: -2.1818318367004395
    4. 'from' → logprob: -3.1818318367004395
    5. 'dist' → logprob: -5.6818318367004395
    6. 'parent' → logprob: -6.0568318367004395
    7. ' edges' → logprob: -6.4318318367004395
    8. 'parents' → logprob: -6.8068318367004395
    9. 'class' → logprob: -7.3068318367004395
    10. 'graph' → logprob: -8.056832313537598

Token 271: ' début' (ID: 29589)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2678838968276978
    2. 'l' → logprob: -1.5178838968276978
    3. 'calcul' → logprob: -2.267883777618408
    4. 'N' → logprob: -2.642883777618408
    5. ' commencer' → logprob: -2.767883777618408
    6. 'la' → logprob: -2.892883777618408
    7. 'start' → logprob: -3.267883777618408
    8. 'testing' → logprob: -3.517883777618408
    9. 'tester' → logprob: -3.642883777618408
    10. 'dé' → logprob: -4.392883777618408

Token 272: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1737815886735916
    2. 'ant' → logprob: -2.798781633377075
    3. 'aire' → logprob: -3.048781633377075
    4. 'ante' → logprob: -4.173781394958496
    5. 'er' → logprob: -5.173781394958496
    6. 'def' → logprob: -5.548781394958496
    7. '#' → logprob: -5.673781394958496
    8. 'ç' → logprob: -6.048781394958496
    9. 'ut' → logprob: -6.173781394958496
    10. 'taire' → logprob: -6.298781394958496

Token 273: ':' (ID: 25)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6677300930023193
    2. 'def' → logprob: -0.7927300930023193
    3. 'from' → logprob: -4.167730331420898
    4. 'class' → logprob: -4.667730331420898
    5. 'parent' → logprob: -5.417730331420898
    6. 'dist' → logprob: -5.917730331420898
    7. 'edges' → logprob: -7.042730331420898
    8. 'parents' → logprob: -7.167730331420898
    9. 'd' → logprob: -8.292730331420898
    10. '#' → logprob: -8.292730331420898

Token 274: ' calcul' (ID: 7559)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5001363158226013
    2. 'import' → logprob: -1.250136375427246
    3. 'from' → logprob: -2.500136375427246
    4. 'edges' → logprob: -4.250136375427246
    5. 'class' → logprob: -5.375136375427246
    6. 'dist' → logprob: -6.125136375427246
    7. 'parent' → logprob: -6.125136375427246
    8. 'd' → logprob: -7.375136375427246
    9. '```' → logprob: -8.000136375427246
    10. 'parents' → logprob: -8.500136375427246

Token 275: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7492207884788513
    2. 'ate' → logprob: -0.9992207884788513
    3. 'ating' → logprob: -1.874220848083496
    4. 'ation' → logprob: -6.874220848083496
    5. 'ateur' → logprob: -6.999220848083496
    6. 'def' → logprob: -7.124220848083496
    7. 'from' → logprob: -7.374220848083496
    8. '#' → logprob: -7.499220848083496
    9. 'import' → logprob: -7.874220848083496
    10. 'e' → logprob: -8.124220848083496

Token 276: ' toutes' (ID: 17502)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2286734580993652
    2. 'all' → logprob: -1.4786734580993652
    3. 't' → logprob: -1.8536734580993652
    4. 'le' → logprob: -2.6036734580993652
    5. 'import' → logprob: -2.6036734580993652
    6. 'dist' → logprob: -2.9786734580993652
    7. 'la' → logprob: -3.2286734580993652
    8. 'tout' → logprob: -3.3536734580993652
    9. ' toutes' → logprob: -3.9786734580993652
    10. 'une' → logprob: -4.978673458099365

Token 277: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5259199738502502
    2. 'les' → logprob: -1.0259199142456055
    3. '(' → logprob: -4.5259199142456055
    4. '_edges' → logprob: -5.2759199142456055
    5. ' edges' → logprob: -5.2759199142456055
    6. ' pairs' → logprob: -5.4009199142456055
    7. ' distances' → logprob: -5.5259199142456055
    8. '_' → logprob: -5.6509199142456055
    9. ' la' → logprob: -5.7759199142456055
    10. '(edges' → logprob: -6.0259199142456055

Token 278: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4399932324886322
    2. 'ar' → logprob: -1.3149932622909546
    3. 'p' → logprob: -2.689993143081665
    4. 'edges' → logprob: -4.689993381500244
    5. 'are' → logprob: -5.439993381500244
    6. ' distances' → logprob: -6.314993381500244
    7. 'arest' → logprob: -6.939993381500244
    8. 'distance' → logprob: -7.064993381500244
    9. 'pairs' → logprob: -7.189993381500244
    10. '```' → logprob: -7.939993381500244

Token 279: ' et' (ID: 859)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1164863109588623
    2. 'dist' → logprob: -2.4914863109588623
    3. 'mst' → logprob: -4.241486549377441
    4. 'import' → logprob: -5.366486549377441
    5. ' edges' → logprob: -6.491486549377441
    6. 'graph' → logprob: -6.491486549377441
    7. 'd' → logprob: -6.741486549377441
    8. 'distance' → logprob: -6.741486549377441
    9. 'from' → logprob: -7.366486549377441
    10. 'ans' → logprob: -8.116486549377441

Token 280: ' faire' (ID: 8119)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7859877347946167
    2. 'stock' → logprob: -1.7859877347946167
    3. 'tr' → logprob: -1.9109877347946167
    4. '#' → logprob: -2.5359878540039062
    5. ' stock' → logprob: -3.1609878540039062
    6. ' construire' → logprob: -3.6609878540039062
    7. 'faire' → logprob: -4.035987854003906
    8. ' appliquer' → logprob: -4.535987854003906
    9. 'edges' → logprob: -4.660987854003906
    10. ' utiliser' → logprob: -4.910987854003906

Token 281: ' un' (ID: 537)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6412298083305359
    2. 'from' → logprob: -0.8912298083305359
    3. 'edges' → logprob: -3.5162298679351807
    4. 'une' → logprob: -4.141229629516602
    5. 'def' → logprob: -4.641229629516602
    6. '#' → logprob: -6.016229629516602
    7. 'l' → logprob: -6.641229629516602
    8. 'la' → logprob: -6.891229629516602
    9. '```' → logprob: -7.016229629516602
    10. 'un' → logprob: -7.641229629516602

Token 282: ' MST' (ID: 123058)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5061676502227783
    2. 'from' → logprob: -1.3811676502227783
    3. 'prim' → logprob: -2.5061676502227783
    4. 'K' → logprob: -2.8811676502227783
    5. '```' → logprob: -6.381167411804199
    6. 'M' → logprob: -6.506167411804199
    7. 'kr' → logprob: -6.506167411804199
    8. 'Prim' → logprob: -6.881167411804199
    9. 'def' → logprob: -7.006167411804199
    10. '#' → logprob: -7.631167411804199

Token 283: ' via' (ID: 4493)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0338557958602905
    2. 'def' → logprob: -1.0338557958602905
    3. 'edges' → logprob: -1.4088557958602905
    4. 'from' → logprob: -3.90885591506958
    5. 'dist' → logprob: -4.40885591506958
    6. 'parent' → logprob: -4.65885591506958
    7. 'parents' → logprob: -6.90885591506958
    8. 'graph' → logprob: -8.158855438232422
    9. ' edges' → logprob: -8.283855438232422
    10. '```' → logprob: -8.408855438232422

Token 284: ' Kr' (ID: 11317)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0855589285492897
    2. 'Prim' → logprob: -3.3355588912963867
    3. 'kr' → logprob: -3.8355588912963867
    4. 'prim' → logprob: -3.9605588912963867
    5. 'import' → logprob: -5.835558891296387
    6. 'heap' → logprob: -6.585558891296387
    7. 'Kr' → logprob: -6.585558891296387
    8. '```' → logprob: -10.210558891296387
    9. ' Kr' → logprob: -11.335558891296387
    10. 'from' → logprob: -11.835558891296387

Token 285: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.00036156410351395607
    2. 'usz' → logprob: -8.875361442565918
    3. 'uss' → logprob: -9.500361442565918
    4. 'ust' → logprob: -9.750361442565918
    5. 'ush' → logprob: -10.875361442565918
    6. '```' → logprob: -10.875361442565918
    7. 'uz' → logprob: -11.125361442565918
    8. 'usst' → logprob: -12.000361442565918
    9. 'usk' → logprob: -12.000361442565918
    10. 's' → logprob: -12.625361442565918

Token 286: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.05007554590702057
    2. 'al' → logprob: -3.0500755310058594
    3. 'ter' → logprob: -8.05007553100586
    4. '```' → logprob: -8.17507553100586
    5. 'hal' → logprob: -8.55007553100586
    6. 'skal' → logprob: -8.67507553100586
    7. 'algo' → logprob: -9.42507553100586
    8. 'cal' → logprob: -10.05007553100586
    9. 'k' → logprob: -10.17507553100586
    10. 'alg' → logprob: -10.42507553100586

Token 287: '.
' (ID: 558)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.652560293674469
    2. 'parent' → logprob: -0.902560293674469
    3. 'import' → logprob: -3.402560234069824
    4. 'parents' → logprob: -4.027560234069824
    5. 'class' → logprob: -4.527560234069824
    6. 'def' → logprob: -5.152560234069824
    7. 'from' → logprob: -5.402560234069824
    8. ' edges' → logprob: -6.777560234069824
    9. '#' → logprob: -8.902560234069824
    10. '```' → logprob: -9.152560234069824

Token 288: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6539705991744995
    2. 'import' → logprob: -1.2789705991744995
    3. 'from' → logprob: -1.6539705991744995
    4. 'def' → logprob: -5.153970718383789
    5. 'parent' → logprob: -6.403970718383789
    6. '```' → logprob: -6.403970718383789
    7. 'edges' → logprob: -7.278970718383789
    8. ' class' → logprob: -8.278970718383789
    9. '
' → logprob: -9.028970718383789
    10. ' from' → logprob: -9.153970718383789

Token 289: ' Cela' (ID: 44403)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9410325288772583
    2. 'class' → logprob: -0.9410325288772583
    3. 'from' → logprob: -1.5660325288772583
    4. 'parent' → logprob: -4.941032409667969
    5. 'edges' → logprob: -6.441032409667969
    6. 'def' → logprob: -6.566032409667969
    7. '```' → logprob: -8.441032409667969
    8. ' edges' → logprob: -9.316032409667969
    9. 'parents' → logprob: -9.566032409667969
    10. ' class' → logprob: -9.941032409667969

Token 290: ' sera' (ID: 15511)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17407971620559692
    2. '#' → logprob: -2.424079656600952
    3. 'from' → logprob: -3.049079656600952
    4. ':' → logprob: -5.299079895019531
    5. ' import' → logprob: -5.424079895019531
    6. ' requires' → logprob: -6.424079895019531
    7. 'est' → logprob: -6.674079895019531
    8. '=' → logprob: -6.799079895019531
    9. 'requires' → logprob: -6.799079895019531
    10. '
' → logprob: -7.049079895019531

Token 291: ' lent' (ID: 38609)
  Prédit: 'acceptable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acceptable' → logprob: -1.6507667303085327
    2. 'possible' → logprob: -1.7757667303085327
    3. 't' → logprob: -2.0257668495178223
    4. 'too' → logprob: -2.1507668495178223
    5. 'lent' → logprob: -2.2757668495178223
    6. 'import' → logprob: -2.7757668495178223
    7. 'accept' → logprob: -3.5257668495178223
    8. 'l' → logprob: -3.6507668495178223
    9. ' trop' → logprob: -4.150766849517822
    10. 'ok' → logprob: -4.275766849517822

Token 292: ' mais' (ID: 2899)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08268707245588303
    2. 'from' → logprob: -3.7076871395111084
    3. ')' → logprob: -4.207686901092529
    4. 'edges' → logprob: -4.207686901092529
    5. '#' → logprob: -5.082686901092529
    6. ',' → logprob: -5.207686901092529
    7. '
' → logprob: -5.832686901092529
    8. 'def' → logprob: -5.832686901092529
    9. ' edges' → logprob: -5.957686901092529
    10. 'class' → logprob: -6.207686901092529

Token 293: ' acceptable' (ID: 34028)
  Prédit: 'acceptable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acceptable' → logprob: -0.705910325050354
    2. 's' → logprob: -1.205910325050354
    3. ' suff' → logprob: -2.3309102058410645
    4. ' acceptable' → logprob: -3.2059102058410645
    5. 'correct' → logprob: -4.3309102058410645
    6. 'possible' → logprob: -4.4559102058410645
    7. 'fonction' → logprob: -4.7059102058410645
    8. 'accept' → logprob: -4.7059102058410645
    9. 'pass' → logprob: -4.8309102058410645
    10. 'simple' → logprob: -5.4559102058410645

Token 294: ' comme' (ID: 7971)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.30831602215766907
    2. 'edges' → logprob: -1.5583159923553467
    3. 'def' → logprob: -4.308316230773926
    4. '_edges' → logprob: -4.433316230773926
    5. ' edges' → logprob: -5.183316230773926
    6. 'class' → logprob: -5.183316230773926
    7. '.' → logprob: -5.558316230773926
    8. ',' → logprob: -5.558316230773926
    9. 'from' → logprob: -5.683316230773926
    10. 'parent' → logprob: -5.933316230773926

Token 295: ' solution' (ID: 7578)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.2471929788589478
    2. 'N' → logprob: -1.7471929788589478
    3. 'su' → logprob: -1.7471929788589478
    4. 'prem' → logprob: -2.122192859649658
    5. 'solution' → logprob: -2.622192859649658
    6. 'cela' → logprob: -2.997192859649658
    7. 'une' → logprob: -3.747192859649658
    8. 'code' → logprob: -4.122192859649658
    9. 'le' → logprob: -4.372192859649658
    10. 'c' → logprob: -4.747192859649658

Token 296: ' naï' (ID: 153475)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.558251678943634
    2. 'edges' → logprob: -1.8082516193389893
    3. 'def' → logprob: -2.3082516193389893
    4. 'class' → logprob: -2.4332516193389893
    5. 'import' → logprob: -2.9332516193389893
    6. 'parents' → logprob: -4.308251857757568
    7. 'from' → logprob: -5.058251857757568
    8. ' edges' → logprob: -6.308251857757568
    9. '#' → logprob: -6.933251857757568
    10. ' parent' → logprob: -7.683251857757568

Token 297: 've' (ID: 737)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.6629272103309631
    2. 'ive' → logprob: -2.1629271507263184
    3. 've' → logprob: -2.6629271507263184
    4. 'f' → logprob: -2.7879271507263184
    5. 'v' → logprob: -3.0379271507263184
    6. 'vel' → logprob: -3.2879271507263184
    7. 't' → logprob: -3.5379271507263184
    8. 'itve' → logprob: -3.7879271507263184
    9. 'itive' → logprob: -3.9129271507263184
    10. 'ave' → logprob: -4.037927150726318

Token 298: '.

' (ID: 364)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5439140796661377
    2. 'def' → logprob: -1.2939140796661377
    3. 'edges' → logprob: -2.2939140796661377
    4. 'class' → logprob: -3.5439140796661377
    5. 'parents' → logprob: -4.668913841247559
    6. 'import' → logprob: -5.293913841247559
    7. 'from' → logprob: -7.293913841247559
    8. '#' → logprob: -8.168913841247559
    9. ' edges' → logprob: -9.293913841247559
    10. 'sl' → logprob: -10.668913841247559

Token 299: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5347285270690918
    2. 'import' → logprob: -1.4097285270690918
    3. 'edges' → logprob: -2.159728527069092
    4. 'from' → logprob: -3.409728527069092
    5. 'parent' → logprob: -4.409728527069092
    6. 'def' → logprob: -5.534728527069092
    7. ' edges' → logprob: -5.659728527069092
    8. '```' → logprob: -7.034728527069092
    9. 'parents' → logprob: -7.784728527069092
    10. ' class' → logprob: -8.28472900390625

Token 300: ' Calcul' (ID: 57243)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.08347378671169281
    2. 'import' → logprob: -3.0834736824035645
    3. 'parents' → logprob: -4.5834736824035645
    4. 'edges' → logprob: -4.7084736824035645
    5. 'def' → logprob: -5.2084736824035645
    6. 'class' → logprob: -5.3334736824035645
    7. 'from' → logprob: -5.4584736824035645
    8. '#' → logprob: -8.083474159240723
    9. 'par' → logprob: -8.708474159240723
    10. ' parent' → logprob: -12.458474159240723

Token 301: ' des' (ID: 731)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00902530550956726
    2. 'dist' → logprob: -4.7590250968933105
    3. ' edges' → logprob: -8.009025573730469
    4. 'def' → logprob: -10.634025573730469
    5. 'from' → logprob: -11.134025573730469
    6. 'import' → logprob: -11.509025573730469
    7. 'edge' → logprob: -11.509025573730469
    8. 'd' → logprob: -11.634025573730469
    9. 'distance' → logprob: -12.884025573730469
    10. '#' → logprob: -13.634025573730469

Token 302: ' ar' (ID: 646)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19179588556289673
    2. 'edges' → logprob: -1.816795825958252
    3. 'def' → logprob: -5.066795825958252
    4. ' edges' → logprob: -5.441795825958252
    5. 'import' → logprob: -7.441795825958252
    6. 'from' → logprob: -7.941795825958252
    7. 'd' → logprob: -8.81679630279541
    8. ' distances' → logprob: -9.56679630279541
    9. 'distance' → logprob: -10.06679630279541
    10. ' dist' → logprob: -10.44179630279541

Token 303: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.3953101634979248
    2. 'cs' → logprob: -1.3953101634979248
    3. 'etes' → logprob: -2.770310163497925
    4. '#' → logprob: -5.520310401916504
    5. 'tes' → logprob: -6.020310401916504
    6. 'r' → logprob: -6.270310401916504
    7. 'ches' → logprob: -6.395310401916504
    8. 'es' → logprob: -7.020310401916504
    9. '```' → logprob: -7.395310401916504
    10. 'e' → logprob: -7.395310401916504

Token 304: '
' (ID: 198)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -4.36574100604048e-06
    2. ' edges' → logprob: -12.375004768371582
    3. '.edges' → logprob: -16.625003814697266
    4. '_edges' → logprob: -17.375003814697266
    5. '(edges' → logprob: -18.250003814697266
    6. '```' → logprob: -18.375003814697266
    7. 'edge' → logprob: -19.750003814697266
    8. 'Edges' → logprob: -19.750003814697266
    9. 'es' → logprob: -20.375003814697266
    10. 'ed' → logprob: -21.625003814697266

Token 305: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1472419600977446e-06
    2. ' edges' → logprob: -13.750000953674316
    3. '```' → logprob: -17.750001907348633
    4. '.edges' → logprob: -18.625001907348633
    5. '_edges' → logprob: -19.250001907348633
    6. 'import' → logprob: -19.500001907348633
    7. 'from' → logprob: -20.125001907348633
    8. '(edges' → logprob: -20.500001907348633
    9. 'Edges' → logprob: -20.875001907348633
    10. 'edge' → logprob: -22.000001907348633

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520149052143097
    2. '=' → logprob: -1.5020148754119873
    3. '=[]' → logprob: -9.377015113830566
    4. ' =[' → logprob: -15.127015113830566
    5. '＝' → logprob: -15.252015113830566
    6. '=[' → logprob: -15.627015113830566
    7. '=[]
' → logprob: -16.25201416015625
    8. '[]' → logprob: -17.12701416015625
    9. '[:]' → logprob: -17.50201416015625
    10. ' ' → logprob: -17.50201416015625

Token 307: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.13388703338569e-06
    2. '[]
' → logprob: -11.750009536743164
    3. ' []' → logprob: -14.500009536743164
    4. '[' → logprob: -15.000009536743164
    5. '[(' → logprob: -15.000009536743164
    6. '[]

' → logprob: -17.125009536743164
    7. '[
' → logprob: -17.750009536743164
    8. '[]}' → logprob: -18.000009536743164
    9. '[]"' → logprob: -20.125009536743164
    10. '[],' → logprob: -20.375009536743164

Token 308: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.00000286102295
    3. 'from' → logprob: -16.250001907348633
    4. 'import' → logprob: -18.375001907348633
    5. '	for' → logprob: -19.750001907348633
    6. '```' → logprob: -22.000001907348633
    7. '   ' → logprob: -23.125001907348633
    8. '
' → logprob: -23.625001907348633
    9. 'For' → logprob: -24.875001907348633
    10. 'fo' → logprob: -24.875001907348633

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023245826363563538
    2. ' i' → logprob: -3.7732458114624023
    3. 'u' → logprob: -16.02324676513672
    4. '	i' → logprob: -16.14824676513672
    5. '_i' → logprob: -16.77324676513672
    6. ' u' → logprob: -19.89824676513672
    7. '(i' → logprob: -20.27324676513672
    8. ' ' → logprob: -20.52324676513672
    9. '```' → logprob: -21.02324676513672
    10. ' ' → logprob: -21.14824676513672

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023252815008163452
    2. 'in' → logprob: -3.7732527256011963
    3. ' ' → logprob: -12.648252487182617
    4. '1' → logprob: -13.523252487182617
    5. ',' → logprob: -14.148252487182617
    6. 'range' → logprob: -14.648252487182617
    7. '+' → logprob: -14.898252487182617
    8. '	in' → logprob: -15.273252487182617
    9. ' i' → logprob: -15.523252487182617
    10. ' ' → logprob: -15.898252487182617

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -19.000553131103516
    4. '	range' → logprob: -20.125553131103516
    5. '```' → logprob: -21.250553131103516
    6. 'rang' → logprob: -22.250553131103516
    7. '
' → logprob: -22.250553131103516
    8. 'r' → logprob: -22.375553131103516
    9. '1' → logprob: -22.625553131103516
    10. '0' → logprob: -22.875553131103516

Token 312: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004155329894274473
    2. '(' → logprob: -5.504155158996582
    3. '(len' → logprob: -9.754155158996582
    4. 'N' → logprob: -11.504155158996582
    5. '(n' → logprob: -12.504155158996582
    6. '1' → logprob: -12.629155158996582
    7. '(i' → logprob: -14.754155158996582
    8. '(
' → logprob: -14.754155158996582
    9. ' N' → logprob: -15.004155158996582
    10. ' (' → logprob: -15.004155158996582

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07921979576349258
    2. '):' → logprob: -2.5792198181152344
    3. '+' → logprob: -8.579219818115234
    4. '-' → logprob: -9.329219818115234
    5. ')' → logprob: -11.079219818115234
    6. ' -' → logprob: -11.079219818115234
    7. '):
' → logprob: -11.579219818115234
    8. 'for' → logprob: -11.954219818115234
    9. '   ' → logprob: -12.704219818115234
    10. ' ):
' → logprob: -13.954219818115234

Token 314: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16985756158828735
    2. ' for' → logprob: -2.1698575019836426
    3. '   ' → logprob: -3.1698575019836426
    4. '	for' → logprob: -11.4198579788208
    5. ' ' → logprob: -14.6698579788208
    6. '   ' → logprob: -16.919857025146484
    7. '  ' → logprob: -17.169857025146484
    8. '```' → logprob: -19.044857025146484
    9. 'range' → logprob: -19.169857025146484
    10. '    ' → logprob: -19.294857025146484

Token 315: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.000001907348633
    3. 'j' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '	for' → logprob: -22.000001907348633
    6. 'range' → logprob: -23.875001907348633
    7. 'r' → logprob: -24.875001907348633
    8. 'x' (adapté à ' x') → logprob: -25.000001907348633
    9. 'For' → logprob: -25.125001907348633
    10. ' ' → logprob: -25.250001907348633

Token 316: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6483644843101501
    2. 'in' → logprob: -0.8983644843101501
    3. 'for' → logprob: -3.523364543914795
    4. ',' → logprob: -4.398364543914795
    5. '=' → logprob: -4.898364543914795
    6. '1' → logprob: -5.023364543914795
    7. 'i' → logprob: -5.398364543914795
    8. ' =' → logprob: -5.523364543914795
    9. ' for' → logprob: -6.148364543914795
    10. ' i' → logprob: -6.898364543914795

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00233176676556468
    2. ',y' → logprob: -6.127331733703613
    3. '=' → logprob: -9.627331733703613
    4. ',x' → logprob: -10.252331733703613
    5. ' ,' → logprob: -10.502331733703613
    6. 'y' → logprob: -12.627331733703613
    7. ',j' → logprob: -12.752331733703613
    8. ',i' → logprob: -13.002331733703613
    9. 's' → logprob: -13.252331733703613
    10. '1' → logprob: -13.252331733703613

Token 318: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.00020408630371
    4. '	y' → logprob: -18.37520408630371
    5. '    
' → logprob: -18.75020408630371
    6. '<|end|>' → logprob: -19.37520408630371
    7. '
' → logprob: -19.50020408630371
    8. ' ' → logprob: -20.37520408630371
    9. '_y' → logprob: -20.50020408630371
    10. '  ' → logprob: -20.50020408630371

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002203666837885976
    2. '=' → logprob: -6.252203464508057
    3. 'i' → logprob: -9.252203941345215
    4. ',' → logprob: -9.752203941345215
    5. ' =' → logprob: -9.752203941345215
    6. '=i' → logprob: -10.127203941345215
    7. '[i' → logprob: -11.877203941345215
    8. '```' → logprob: -12.002203941345215
    9. ',i' → logprob: -12.377203941345215
    10. '
' → logprob: -13.377203941345215

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038047224283218384
    2. ' =' → logprob: -3.2880473136901855
    3. ',' → logprob: -12.538046836853027
    4. ')' → logprob: -13.788046836853027
    5. '   ' → logprob: -14.663046836853027
    6. ')=' → logprob: -14.913046836853027
    7. '=x' → logprob: -15.038046836853027
    8. ' ' → logprob: -16.788047790527344
    9. '=i' → logprob: -17.163047790527344
    10. '=
' → logprob: -17.163047790527344

Token 321: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.00016098834748845547
    2. ' sl' → logprob: -8.750161170959473
    3. '	sl' → logprob: -13.875161170959473
    4. 's' → logprob: -14.250161170959473
    5. '   ' → logprob: -15.125161170959473
    6. 'spl' → logprob: -15.625161170959473
    7. ' ' → logprob: -16.625160217285156
    8. '
' → logprob: -17.000160217285156
    9. 'slashes' → logprob: -17.375160217285156
    10. 'sp' → logprob: -17.500160217285156

Token 322: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -6.587483221665025e-05
    2. '   ' → logprob: -11.375065803527832
    3. '[' → logprob: -11.500065803527832
    4. 'ime' → logprob: -11.625065803527832
    5. 's' → logprob: -12.000065803527832
    6. '
' → logprob: -12.125065803527832
    7. '[i' → logprob: -13.000065803527832
    8. '#' → logprob: -13.500065803527832
    9. ' ' → logprob: -13.500065803527832
    10. '1' → logprob: -13.750065803527832

Token 323: '[i' (ID: 1768)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ']
' (ID: 1592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001883777091279626
    2. ' for' → logprob: -6.6268839836120605
    3. 'for' → logprob: -7.5018839836120605
    4. '	for' → logprob: -13.001883506774902
    5. '
' → logprob: -13.376883506774902
    6. '<|end|>' → logprob: -14.126883506774902
    7. '    
' → logprob: -14.251883506774902
    8. ',' → logprob: -16.00188446044922
    9. '   ' → logprob: -16.00188446044922
    10. ' ' → logprob: -16.12688446044922

Token 326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016885579680092633
    2. ' for' → logprob: -9.000168800354004
    3. '   ' → logprob: -10.000168800354004
    4. '	for' → logprob: -17.12516975402832
    5. ' ' → logprob: -19.37516975402832
    6. '  ' → logprob: -20.50016975402832
    7. '    
' → logprob: -21.50016975402832
    8. 'x' → logprob: -21.87516975402832
    9. '```' → logprob: -21.87516975402832
    10. '    ' → logprob: -22.37516975402832

Token 327: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8628168106079102
    2. ' range' → logprob: -1.1128168106079102
    3. 'j' → logprob: -1.8628168106079102
    4. 'range' → logprob: -2.36281681060791
    5. ' in' → logprob: -12.98781681060791
    6. 'in' → logprob: -13.86281681060791
    7. '_j' → logprob: -14.36281681060791
    8. '   ' → logprob: -14.48781681060791
    9. '_range' → logprob: -14.61281681060791
    10. ' ' → logprob: -14.86281681060791

Token 328: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009767658077180386
    2. 'in' → logprob: -4.634767532348633
    3. 'range' → logprob: -12.634767532348633
    4. ' i' → logprob: -12.884767532348633
    5. ' range' → logprob: -13.134767532348633
    6. 'i' → logprob: -13.384767532348633
    7. 's' → logprob: -14.384767532348633
    8. '=' → logprob: -14.759767532348633
    9. ' ' → logprob: -15.009767532348633
    10. '   ' → logprob: -15.759767532348633

Token 329: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: '(i' (ID: 3649)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869059979915619
    2. 'range' → logprob: -1.1369060277938843
    3. '(range' → logprob: -10.636905670166016
    4. 'i' → logprob: -12.011905670166016
    5. ' i' → logprob: -12.636905670166016
    6. '(i' → logprob: -13.886905670166016
    7. ' ' → logprob: -15.011905670166016
    8. '   ' → logprob: -15.511905670166016
    9. '	range' → logprob: -16.511905670166016
    10. '_range' → logprob: -17.011905670166016

Token 331: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'N' → logprob: -17.125001907348633
    4. '
' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.750001907348633
    6. 'i' → logprob: -19.250001907348633
    7. 'range' → logprob: -19.500001907348633
    8. '```' → logprob: -20.250001907348633
    9. '

' → logprob: -20.625001907348633
    10. '2' → logprob: -21.250001907348633

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010967610869556665
    2. ',N' → logprob: -7.251096725463867
    3. ' ,' → logprob: -7.876096725463867
    4. 'N' → logprob: -12.751096725463867
    5. '):' → logprob: -13.751096725463867
    6. ',j' → logprob: -13.876096725463867
    7. ',n' → logprob: -14.251096725463867
    8. ',i' → logprob: -14.501096725463867
    9. ' N' → logprob: -16.126096725463867
    10. ',len' → logprob: -16.126096725463867

Token 334: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00029625516617670655
    2. ' N' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.500296592712402
    4. ' ' → logprob: -17.250295639038086
    5. 'n' → logprob: -19.000295639038086
    6. ')' → logprob: -19.250295639038086
    7. '	N' → logprob: -19.250295639038086
    8. ' range' → logprob: -19.875295639038086
    9. 'range' → logprob: -19.875295639038086
    10. '  ' → logprob: -20.000295639038086

Token 335: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002797510474920273
    2. ' ' → logprob: -7.002797603607178
    3. ' x' → logprob: -7.127797603607178
    4. '<|end|>' → logprob: -7.752797603607178
    5. '       ' → logprob: -8.12779712677002
    6. '    ' → logprob: -8.50279712677002
    7. 'x' → logprob: -9.00279712677002
    8. '  ' → logprob: -11.37779712677002
    9. '    
' → logprob: -12.62779712677002
    10. '<|end|>' → logprob: -12.75279712677002

Token 337: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003961185284424573
    2. ',' → logprob: -7.875396251678467
    3. 'j' → logprob: -11.750395774841309
    4. ',j' → logprob: -12.750395774841309
    5. '1' → logprob: -13.250395774841309
    6. '```' → logprob: -13.500395774841309
    7. ' ' → logprob: -13.875395774841309
    8. ' ,' → logprob: -14.375395774841309
    9. '_,' → logprob: -15.375395774841309
    10. '0' → logprob: -16.375396728515625

Token 339: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.038044244050979614
    2. 'y' → logprob: -3.2880442142486572
    3. ',' → logprob: -13.163043975830078
    4. ',y' → logprob: -14.163043975830078
    5. '	y' → logprob: -16.913043975830078
    6. '<|end|>' → logprob: -17.163043975830078
    7. ' ' → logprob: -18.038043975830078
    8. '   ' → logprob: -19.163043975830078
    9. ' ,' → logprob: -19.663043975830078
    10. '    ' → logprob: -19.788043975830078

Token 341: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8304672837257385
    2. ' =' → logprob: -1.2054672241210938
    3. ',' → logprob: -1.3304672241210938
    4. ' ,' → logprob: -8.330467224121094
    5. ' ' → logprob: -13.330467224121094
    6. '   ' → logprob: -13.330467224121094
    7. ',x' → logprob: -13.705467224121094
    8. ',y' → logprob: -13.830467224121094
    9. ')' → logprob: -14.330467224121094
    10. ',s' → logprob: -14.955467224121094

Token 343: ' sl' (ID: 1925)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: 'imes' (ID: 2332)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: '[j' (ID: 7895)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ']
' (ID: 1592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' dist' (ID: 3601)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' abs' (ID: 8443)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: '(x' (ID: 4061)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 355: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' abs' (ID: 8443)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: '(y' (ID: 14684)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' y' (ID: 342)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' edges' (ID: 22569)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '.append' (ID: 3709)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: '((' (ID: 2054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: 'dist' (ID: 24126)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' i' (ID: 575)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' j' (ID: 441)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: '))

' (ID: 9746)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: '#' (ID: 2)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: ' Tri' (ID: 25062)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' des' (ID: 731)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' ar' (ID: 646)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: 'êtes' (ID: 23720)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' par' (ID: 686)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' poids' (ID: 56058)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: 'edges' (ID: 39127)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: '.sort' (ID: 19551)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '()

' (ID: 5874)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: '#' (ID: 2)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: ' Union' (ID: 14746)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '-F' (ID: 8074)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: 'ind' (ID: 521)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' simple' (ID: 4705)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' pour' (ID: 1930)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' MST' (ID: 123058)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: 'parent' (ID: 4903)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' [' (ID: 723)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: 'i' (ID: 72)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' i' (ID: 575)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ' range' (ID: 3352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '(N' (ID: 10564)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ')]

' (ID: 56882)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: 'def' (ID: 1314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: ' find' (ID: 1646)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: '(x' (ID: 4061)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' while' (ID: 2049)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' parent' (ID: 5980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' !=' (ID: 1666)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: ' parent' (ID: 5980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' parent' (ID: 5980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: '[parent' (ID: 186852)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 427: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: ']]
' (ID: 29446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: ' parent' (ID: 5980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: '[x' (ID: 17295)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ']
' (ID: 1592)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' return' (ID: 622)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: 'def' (ID: 1314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: ' union' (ID: 22208)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '(a' (ID: 6271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' b' (ID: 287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 444: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' a' (ID: 261)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' find' (ID: 1646)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: '(a' (ID: 6271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: ' b' (ID: 287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' find' (ID: 1646)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: '(b' (ID: 3229)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' a' (ID: 261)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: ' ==' (ID: 951)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' b' (ID: 287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' return' (ID: 622)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' False' (ID: 7983)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' parent' (ID: 5980)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '[b' (ID: 40800)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' a' (ID: 261)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' return' (ID: 622)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' True' (ID: 6432)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: 'result' (ID: 2521)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: 'count' (ID: 5420)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: 'for' (ID: 1938)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' dist' (ID: 3601)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' a' (ID: 261)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' b' (ID: 287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: ' edges' (ID: 22569)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: ' union' (ID: 22208)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '(a' (ID: 6271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' b' (ID: 287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' result' (ID: 1534)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' +=' (ID: 2757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' dist' (ID: 3601)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' count' (ID: 3605)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' +=' (ID: 2757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' count' (ID: 3605)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: ' ==' (ID: 951)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' N' (ID: 478)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 524: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' break' (ID: 2338)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: 'print' (ID: 1598)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: '(result' (ID: 8111)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 527
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 13.85%
Précision adaptée (1ère position): 14.04%
Précision (top 10): 34.35%
================================================================================
