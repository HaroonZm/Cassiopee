================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    trains = []
    for _ in range(n):
        start, end = input().split()
        sh, sm, ss = map(int, start.split(':'))
        eh, em, es = map(int, end.split(':'))
        start_sec = sh*3600 + sm*60 + ss
        end_sec = eh*3600 + em*60 + es
        trains.append((start_sec, end_sec))
    trains.sort(key=lambda x: x[0])
    used = []
    for s,e in trains:
        placed = False
        for i in range(len(used)):
            if used[i] <= s:
                used[i] = e
                placed = True
                break
        if not placed:
            used.append(e)
    print(len(used))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5641322135925293
    2. ' input' → logprob: -0.9391322135925293
    3. 'input' → logprob: -3.6891322135925293
    4. 'int' → logprob: -5.189132213592529
    5. ' ' → logprob: -5.439132213592529
    6. ' n' → logprob: -5.439132213592529
    7. 'n' → logprob: -8.439132690429688
    8. ' i' → logprob: -8.564132690429688
    9. ' a' → logprob: -9.689132690429688
    10. ' randint' → logprob: -9.689132690429688

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04866332933306694
    2. '(input' → logprob: -3.048663377761841
    3. '()' → logprob: -10.798663139343262
    4. 'input' → logprob: -11.173663139343262
    5. '('' → logprob: -11.423663139343262
    6. '(n' → logprob: -11.423663139343262
    7. ' (' → logprob: -12.548663139343262
    8. '(open' → logprob: -13.298663139343262
    9. '(ord' → logprob: -13.423663139343262
    10. '(
' → logprob: -13.548663139343262

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426531910896301
    2. ')' → logprob: -0.9926531910896301
    3. '()' → logprob: -2.3676531314849854
    4. '())' → logprob: -2.9926531314849854
    5. '))' → logprob: -5.4926533699035645
    6. '('' → logprob: -6.8676533699035645
    7. ' ' → logprob: -6.8676533699035645
    8. '()))' → logprob: -6.9926533699035645
    9. '```' → logprob: -7.2426533699035645
    10. '(""))' → logprob: -8.367652893066406

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.959385335445404
    2. ' if' → logprob: -1.7093853950500488
    3. '<|end|>' → logprob: -1.9593853950500488
    4. ' ' → logprob: -2.209385395050049
    5. ')' → logprob: -2.209385395050049
    6. '    
' → logprob: -4.209385395050049
    7. '```' → logprob: -4.584385395050049
    8. ':' → logprob: -4.709385395050049
    9. '    ' → logprob: -4.834385395050049
    10. ' 
' → logprob: -4.834385395050049

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.011614441871643
    2. '   ' → logprob: -1.261614441871643
    3. '<|end|>' → logprob: -2.2616143226623535
    4. ')' → logprob: -2.3866143226623535
    5. ' if' → logprob: -2.5116143226623535
    6. '    ' → logprob: -3.5116143226623535
    7. '  ' → logprob: -4.5116143226623535
    8. ' )' → logprob: -4.5116143226623535
    9. 'if' (adapté à ' if') → logprob: -5.1366143226623535
    10. '    
' → logprob: -6.1366143226623535

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.001641738461330533
    2. ' ' → logprob: -7.126641750335693
    3. 'n' → logprob: -7.376641750335693
    4. ' not' → logprob: -8.501641273498535
    5. ' ' → logprob: -12.126641273498535
    6. '  ' → logprob: -13.751641273498535
    7. 'not' → logprob: -14.126641273498535
    8. '	n' → logprob: -16.12664222717285
    9. '(n' → logprob: -16.12664222717285
    10. ')' → logprob: -16.37664222717285

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31525734066963196
    2. ' >' → logprob: -1.8152573108673096
    3. ' <=' → logprob: -2.8152573108673096
    4. ' <' → logprob: -4.065257549285889
    5. '==' → logprob: -4.440257549285889
    6. ' ' → logprob: -4.440257549285889
    7. '>' → logprob: -5.690257549285889
    8. ')' → logprob: -7.065257549285889
    9. '<|end|>' → logprob: -7.190257549285889
    10. '  ' → logprob: -7.815257549285889

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014191895723343
    2. '0' → logprob: -1.7014192342758179
    3. ' ' → logprob: -13.82641887664795
    4. '1' → logprob: -13.95141887664795
    5. '  ' → logprob: -14.20141887664795
    6. ')' → logprob: -15.20141887664795
    7. '100' → logprob: -15.26391887664795
    8. ' -' → logprob: -15.32641887664795
    9. '20' → logprob: -15.38891887664795
    10. '<|end|>' → logprob: -15.63891887664795

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002514188876375556
    2. ' ' → logprob: -6.002514362335205
    3. '-' → logprob: -10.377513885498047
    4. ' -' → logprob: -12.877513885498047
    5. '1' → logprob: -13.252513885498047
    6. '   ' → logprob: -14.127513885498047
    7. '42' → logprob: -14.752513885498047
    8. '  ' → logprob: -14.877513885498047
    9. '```' → logprob: -14.877513885498047
    10. '4' → logprob: -15.252513885498047

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.598092684522271e-05
    2. ':
' → logprob: -10.500056266784668
    3. ' :' → logprob: -11.250056266784668
    4. '   ' → logprob: -12.500056266784668
    5. ':return' → logprob: -12.625056266784668
    6. '):' → logprob: -12.750056266784668
    7. ':\' → logprob: -13.250056266784668
    8. '       ' → logprob: -13.500056266784668
    9. '':' → logprob: -14.625056266784668
    10. '():' → logprob: -15.000056266784668

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023251024540513754
    2. '   ' → logprob: -6.877325057983398
    3. ' break' → logprob: -6.877325057983398
    4. '\n' → logprob: -9.252325057983398
    5. ':' → logprob: -10.502325057983398
    6. '    ' → logprob: -10.502325057983398
    7. '	break' → logprob: -10.752325057983398
    8. '\' → logprob: -11.252325057983398
    9. '      ' → logprob: -11.377325057983398
    10. ' ' → logprob: -11.502325057983398

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.011935565620660782
    2. '       ' → logprob: -4.761935710906982
    3. 'break' (adapté à ' break') → logprob: -5.886935710906982
    4. '	break' → logprob: -8.511935234069824
    5. '   ' → logprob: -8.886935234069824
    6. '\n' → logprob: -9.386935234069824
    7. '_break' → logprob: -10.011935234069824
    8. ' \' → logprob: -11.136935234069824
    9. '    ' → logprob: -11.511935234069824
    10. '```' → logprob: -11.761935234069824

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2311967611312866
    2. '\n' → logprob: -1.2311967611312866
    3. '
' → logprob: -2.231196880340576
    4. '    
' → logprob: -2.481196880340576
    5. '<|end|>' → logprob: -2.481196880340576
    6. ':' → logprob: -2.856196880340576
    7. '```' → logprob: -3.606196880340576
    8. '\' → logprob: -3.856196880340576
    9. ')' → logprob: -5.106196880340576
    10. '#' → logprob: -5.356196880340576

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19657371938228607
    2. '<|end|>' → logprob: -2.9465737342834473
    3. '\n' → logprob: -3.0715737342834473
    4. '    
' → logprob: -3.3215737342834473
    5. '
' → logprob: -3.9465737342834473
    6. '```' → logprob: -4.821573734283447
    7. '#' → logprob: -5.446573734283447
    8. '\' → logprob: -5.821573734283447
    9. '\r' → logprob: -6.696573734283447
    10. ')' → logprob: -6.821573734283447

Token 20: ' trains' (ID: 46841)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8670369386672974
    2. '.' → logprob: -1.2420369386672974
    3. '[' → logprob: -1.4920369386672974
    4. '.append' → logprob: -3.742036819458008
    5. '=' → logprob: -3.992036819458008
    6. '_' → logprob: -4.117036819458008
    7. '.setdefault' → logprob: -6.242036819458008
    8. ')' → logprob: -6.742036819458008
    9. '[:]' → logprob: -6.992036819458008
    10. '=[]' → logprob: -7.992036819458008

Token 22: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12848465144634247
    2. '[]' → logprob: -2.1284847259521484
    3. ' [' → logprob: -7.253484725952148
    4. ' list' → logprob: -8.003484725952148
    5. 'list' → logprob: -8.378484725952148
    6. '[' → logprob: -9.253484725952148
    7. ' {}' → logprob: -9.628484725952148
    8. '{}' → logprob: -9.878484725952148
    9. '[int' → logprob: -11.253484725952148
    10. ' set' → logprob: -11.628484725952148

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22076554596424103
    2. '<|end|>' → logprob: -1.8457655906677246
    3. '    ' → logprob: -4.720765590667725
    4. '    
' → logprob: -4.970765590667725
    5. '\' → logprob: -5.095765590667725
    6. '[' → logprob: -5.345765590667725
    7. ')' → logprob: -6.095765590667725
    8. '
' → logprob: -6.220765590667725
    9. '```' → logprob: -6.345765590667725
    10. '<|end|>' → logprob: -6.345765590667725

Token 24: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3441612720489502
    2. ' for' → logprob: -1.8441612720489502
    3. '   ' → logprob: -2.09416127204895
    4. '	for' → logprob: -5.469161033630371
    5. '\t' → logprob: -5.969161033630371
    6. '    ' → logprob: -7.094161033630371
    7. ' ' → logprob: -7.219161033630371
    8. '[' → logprob: -7.844161033630371
    9. 'n' → logprob: -8.094161033630371
    10. 't' → logprob: -8.719161033630371

Token 25: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4356890916824341
    2. ' ' → logprob: -1.685689091682434
    3. ' _' → logprob: -1.810689091682434
    4. '_' → logprob: -5.5606889724731445
    5. 'i' → logprob: -8.310688972473145
    6. ' ‌' → logprob: -9.310688972473145
    7. '  ' → logprob: -9.560688972473145
    8. ' ▁' → logprob: -10.310688972473145
    9. ' range' → logprob: -11.685688972473145
    10. ' ​' → logprob: -12.310688972473145

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008969667367637157
    2. 'in' → logprob: -4.758969783782959
    3. ' ' → logprob: -8.0089693069458
    4. '_' → logprob: -12.1339693069458
    5. ' i' → logprob: -12.7589693069458
    6. '  ' → logprob: -12.8839693069458
    7. 'range' → logprob: -12.8839693069458
    8. '	in' → logprob: -13.1339693069458
    9. ' _' → logprob: -13.8839693069458
    10. 'n' → logprob: -14.0089693069458

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142512023448944
    2. 'range' → logprob: -1.7014250755310059
    3. '	range' → logprob: -11.951425552368164
    4. 'rang' → logprob: -13.451425552368164
    5. '(range' → logprob: -13.701425552368164
    6. 'ran' → logprob: -14.076425552368164
    7. ' xrange' → logprob: -14.576425552368164
    8. '_range' → logprob: -14.826425552368164
    9. ' ' → logprob: -15.201425552368164
    10. ' ran' → logprob: -15.576425552368164

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.607491135597229
    2. ' n' → logprob: -0.982491135597229
    3. '(' → logprob: -2.8574910163879395
    4. 'n' → logprob: -4.2324910163879395
    5. ' (' → logprob: -4.7324910163879395
    6. ' ' → logprob: -8.857491493225098
    7. ' range' → logprob: -11.107491493225098
    8. '(range' → logprob: -12.232491493225098
    9. '_n' → logprob: -12.857491493225098
    10. '	n' → logprob: -13.482491493225098

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002334258984774351
    2. ')' → logprob: -6.252334117889404
    3. ':' → logprob: -9.002334594726562
    4. ' ):' → logprob: -9.127334594726562
    5. '):
' → logprob: -9.252334594726562
    6. '+' → logprob: -10.377334594726562
    7. '   ' → logprob: -10.377334594726562
    8. '-' → logprob: -12.377334594726562
    9. ' )' → logprob: -13.377334594726562
    10. ',' → logprob: -13.502334594726562

Token 30: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.16457656025886536
    2. '       ' → logprob: -2.914576530456543
    3. '   ' → logprob: -2.914576530456543
    4. ' ' → logprob: -3.539576530456543
    5. '<|end|>' → logprob: -4.789576530456543
    6. ' trains' → logprob: -5.789576530456543
    7. '        ' → logprob: -7.789576530456543
    8. '     ' → logprob: -8.164576530456543
    9. ' input' → logprob: -8.289576530456543
    10. '     
' → logprob: -8.539576530456543

Token 31: ' start' (ID: 1604)
  Prédit: ' trains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trains' → logprob: -0.10179821401834488
    2. '   ' → logprob: -3.2267982959747314
    3. 'tr' → logprob: -3.7267982959747314
    4. ' train' → logprob: -4.101798057556152
    5. 'train' → logprob: -4.476798057556152
    6. ' input' → logprob: -6.351798057556152
    7. ' line' → logprob: -6.976798057556152
    8. ' tr' → logprob: -7.476798057556152
    9. 'input' → logprob: -8.476798057556152
    10. 't' → logprob: -8.914298057556152

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3184327483177185
    2. ' =' → logprob: -2.0684328079223633
    3. '_' → logprob: -2.9434328079223633
    4. '_time' → logprob: -3.1934328079223633
    5. ' ,' → logprob: -3.4434328079223633
    6. '=' → logprob: -5.193432807922363
    7. '_,' → logprob: -6.193432807922363
    8. '_station' → logprob: -6.318432807922363
    9. ')' → logprob: -6.443432807922363
    10. '_city' → logprob: -6.818432807922363

Token 33: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.24497590959072113
    2. 'end' → logprob: -1.6199759244918823
    3. '=end' → logprob: -5.494976043701172
    4. ' finish' → logprob: -5.619976043701172
    5. '_end' → logprob: -5.619976043701172
    6. ' ' → logprob: -6.244976043701172
    7. ' =' → logprob: -6.494976043701172
    8. 'finish' → logprob: -6.619976043701172
    9. ' destination' → logprob: -7.494976043701172
    10. '<|end|>' → logprob: -7.619976043701172

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011122800409793854
    2. '=' → logprob: -4.511122703552246
    3. ',' → logprob: -9.636122703552246
    4. ')' → logprob: -12.511122703552246
    5. ' ' → logprob: -13.011122703552246
    6. '   ' → logprob: -13.136122703552246
    7. '    ' → logprob: -14.761122703552246
    8. '<|end|>' → logprob: -14.761122703552246
    9. '<|end|>' → logprob: -15.761122703552246
    10. '  ' → logprob: -15.761122703552246

Token 35: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.007704938296228647
    2. ' input' → logprob: -5.007704734802246
    3. 'map' → logprob: -7.132704734802246
    4. ' list' → logprob: -9.507704734802246
    5. ' [' → logprob: -10.007704734802246
    6. ' ' → logprob: -10.382704734802246
    7. 'input' → logprob: -10.507704734802246
    8. '[' → logprob: -12.882704734802246
    9. ' int' → logprob: -13.132704734802246
    10. '	map' → logprob: -13.132704734802246

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0067372736521065235
    2. '()' → logprob: -5.006737232208252
    3. '(' → logprob: -11.13173770904541
    4. '())' → logprob: -12.13173770904541
    5. '.split' → logprob: -13.75673770904541
    6. ')' → logprob: -15.63173770904541
    7. ' ().' → logprob: -16.131736755371094
    8. ' ()' → logprob: -16.256736755371094
    9. '.' → logprob: -16.381736755371094
    10. '()
' → logprob: -16.381736755371094

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005238025914877653
    2. 'strip' → logprob: -5.255238056182861
    3. 'rstrip' → logprob: -12.505237579345703
    4. ' split' → logprob: -15.130237579345703
    5. 'spl' → logprob: -15.755237579345703
    6. 'sp' → logprob: -16.880237579345703
    7. '(split' → logprob: -17.005237579345703
    8. 'replace' → logprob: -17.380237579345703
    9. 'rs' → logprob: -17.755237579345703
    10. '.split' → logprob: -18.005237579345703

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03185554966330528
    2. '('' → logprob: -3.906855583190918
    3. '(' → logprob: -4.531855583190918
    4. '("("' → logprob: -8.406855583190918
    5. '(',' → logprob: -9.031855583190918
    6. '())' → logprob: -10.156855583190918
    7. '("' → logprob: -10.406855583190918
    8. '(','' → logprob: -11.281855583190918
    9. '('.')' → logprob: -11.406855583190918
    10. ')' → logprob: -11.656855583190918

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' sh' (ID: 641)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ',' (ID: 11)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.18358266353607178
    2. 'ift' → logprob: -2.5585827827453613
    3. 'are' → logprob: -3.9335827827453613
    4. 'e' → logprob: -4.683582782745361
    5. 'ifts' → logprob: -4.933582782745361
    6. 'ell' → logprob: -5.058582782745361
    7. 'uffle' → logprob: -5.683582782745361
    8. 'train' → logprob: -5.808582782745361
    9. 'arp' → logprob: -6.183582782745361
    10. '[' → logprob: -6.183582782745361

Token 42: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.034100890159607
    2. ' sm' → logprob: -1.409100890159607
    3. 'sm' → logprob: -1.909100890159607
    4. ' ' → logprob: -2.7841010093688965
    5. 'end' → logprob: -3.4091010093688965
    6. '  ' → logprob: -3.6591010093688965
    7. 'sp' → logprob: -4.2841010093688965
    8. 'se' → logprob: -4.2841010093688965
    9. ' s' → logprob: -4.5341010093688965
    10. 'int' → logprob: -4.5341010093688965

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08959469944238663
    2. '=' → logprob: -2.589594602584839
    3. ',' → logprob: -4.589594841003418
    4. ')' → logprob: -8.714594841003418
    5. ' ,' → logprob: -8.839594841003418
    6. '<|end|>' → logprob: -9.089594841003418
    7. ' ' → logprob: -10.214594841003418
    8. '<|end|>' → logprob: -11.339594841003418
    9. '  ' → logprob: -12.589594841003418
    10. '=int' → logprob: -13.089594841003418

Token 44: ' ss' (ID: 20928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3807261288166046
    2. ' em' → logprob: -1.7557260990142822
    3. ' s' → logprob: -3.5057260990142822
    4. 's' → logprob: -4.005726337432861
    5. 'em' → logprob: -4.255726337432861
    6. ' ' → logprob: -4.380726337432861
    7. '=' → logprob: -4.505726337432861
    8. 'int' → logprob: -5.005726337432861
    9. ' end' → logprob: -5.130726337432861
    10. '<|end|>' → logprob: -5.255726337432861

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12340421229600906
    2. '=' → logprob: -2.2484042644500732
    3. ',' → logprob: -4.623404026031494
    4. ')' → logprob: -7.623404026031494
    5. '<|end|>' → logprob: -9.248404502868652
    6. ' ,' → logprob: -9.998404502868652
    7. ' ' → logprob: -10.123404502868652
    8. '<|end|>' → logprob: -11.998404502868652
    9. 's' → logprob: -12.748404502868652
    10. ' =
' → logprob: -12.748404502868652

Token 46: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5783202648162842
    2. ' map' → logprob: -0.8283202648162842
    3. '[' → logprob: -7.203320503234863
    4. 'start' → logprob: -7.328320503234863
    5. '0' → logprob: -7.453320503234863
    6. 'int' → logprob: -8.578320503234863
    7. ' [' → logprob: -9.828320503234863
    8. ' start' → logprob: -10.203320503234863
    9. 'list' → logprob: -10.578320503234863
    10. '[start' → logprob: -10.703320503234863

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022287636529654264
    2. '(str' → logprob: -6.252228736877441
    3. '(' → logprob: -8.252228736877441
    4. 'int' → logprob: -11.002228736877441
    5. '(lambda' → logprob: -11.002228736877441
    6. '<int' → logprob: -13.252228736877441
    7. 'str' → logprob: -13.377228736877441
    8. '[int' → logprob: -13.877228736877441
    9. '(float' → logprob: -14.252228736877441
    10. '(time' → logprob: -14.752228736877441

Token 48: ',' (ID: 11)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.41008836030960083
    2. '(end' → logprob: -1.785088300704956
    3. ',start' → logprob: -2.535088300704956
    4. ',' → logprob: -3.535088300704956
    5. ',end' → logprob: -4.035088539123535
    6. ')' → logprob: -4.160088539123535
    7. ',input' → logprob: -4.535088539123535
    8. '(input' → logprob: -4.785088539123535
    9. '(' → logprob: -5.535088539123535
    10. ')(' → logprob: -6.660088539123535

Token 49: ' start' (ID: 1604)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.3404009342193604
    2. 'start' → logprob: -1.3404009342193604
    3. ' end' → logprob: -1.3404009342193604
    4. ' start' → logprob: -1.5904009342193604
    5. ')' → logprob: -5.090400695800781
    6. '[start' → logprob: -6.340400695800781
    7. '[end' → logprob: -6.465400695800781
    8. 'input' → logprob: -8.215400695800781
    9. '(end' → logprob: -8.215400695800781
    10. ' ' → logprob: -8.840400695800781

Token 50: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0008090290939435363
    2. '.' → logprob: -7.625809192657471
    3. ')' → logprob: -8.750808715820312
    4. '().' → logprob: -9.125808715820312
    5. '.strip' → logprob: -10.500808715820312
    6. ' .' → logprob: -11.250808715820312
    7. '.rstrip' → logprob: -12.875808715820312
    8. '.readline' → logprob: -13.000808715820312
    9. '   ' → logprob: -13.125808715820312
    10. 'split' → logprob: -13.125808715820312

Token 51: '(':' (ID: 36524)
  Prédit: '(':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(':' → logprob: -0.007546050474047661
    2. '(":' → logprob: -5.0075459480285645
    3. '(' → logprob: -8.007546424865723
    4. '('' → logprob: -8.007546424865723
    5. ':' → logprob: -9.132546424865723
    6. '(:' → logprob: -10.757546424865723
    7. '':' → logprob: -11.507546424865723
    8. '(`' → logprob: -11.757546424865723
    9. ':)' → logprob: -13.257546424865723
    10. '':'' → logprob: -13.382546424865723

Token 52: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6386229991912842
    2. '))' → logprob: -0.7636229991912842
    3. ''))
' → logprob: -5.763623237609863
    4. '))
' → logprob: -6.138623237609863
    5. '"))' → logprob: -7.888623237609863
    6. ')' → logprob: -8.513623237609863
    7. ' ))' → logprob: -10.888623237609863
    8. '0' → logprob: -11.388623237609863
    9. '45' → logprob: -11.513623237609863
    10. ''))

' → logprob: -11.763623237609863

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' eh' (ID: 22446)
  Prédit: ' eh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eh' → logprob: -0.5394885540008545
    2. 'eh' (adapté à ' eh') → logprob: -0.9144885540008545
    3. 'th' → logprob: -5.164488792419434
    4. ' th' → logprob: -6.664488792419434
    5. 'éh' → logprob: -6.664488792419434
    6. '   ' → logprob: -7.039488792419434
    7. '       ' → logprob: -7.289488792419434
    8. 'esh' → logprob: -7.601988792419434
    9. 'ah' → logprob: -7.851988792419434
    10. 'e' → logprob: -8.289488792419434

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002777822664938867
    2. ' ,' → logprob: -8.375277519226074
    3. '=' → logprob: -11.125277519226074
    4. 'h' → logprob: -11.375277519226074
    5. '<|end|>' → logprob: -12.000277519226074
    6. ',h' → logprob: -12.375277519226074
    7. ' ' → logprob: -12.375277519226074
    8. '   ' → logprob: -14.125277519226074
    9. 'w' → logprob: -14.250277519226074
    10. 's' → logprob: -14.625277519226074

Token 56: ' em' (ID: 863)
  Prédit: ' em'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' em' → logprob: -0.0008153468370437622
    2. 'em' → logprob: -7.500815391540527
    3. ' es' → logprob: -8.625815391540527
    4. ' esm' → logprob: -10.250815391540527
    5. ' sm' → logprob: -10.625815391540527
    6. 'esm' → logprob: -11.375815391540527
    7. ' ec' → logprob: -13.000815391540527
    8. ' e' → logprob: -13.000815391540527
    9. 'es' → logprob: -13.250815391540527
    10. 'sm' → logprob: -13.375815391540527

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006625185487791896
    2. ' ,' → logprob: -7.625662326812744
    3. '=' → logprob: -9.375662803649902
    4. '<|end|>' → logprob: -9.625662803649902
    5. ' =' → logprob: -11.625662803649902
    6. '<|end|>' → logprob: -11.875662803649902
    7. ',s' → logprob: -12.875662803649902
    8. ' ' → logprob: -13.500662803649902
    9. ',e' → logprob: -13.875662803649902
    10. ',m' → logprob: -14.250662803649902

Token 58: ' es' (ID: 878)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.1741447150707245
    2. ' ss' → logprob: -2.174144744873047
    3. ' es' → logprob: -3.924144744873047
    4. 'es' → logprob: -3.924144744873047
    5. ' ' → logprob: -5.549144744873047
    6. ' em' → logprob: -7.049144744873047
    7. 'int' → logprob: -7.674144744873047
    8. 's' → logprob: -8.174144744873047
    9. 'is' → logprob: -8.924144744873047
    10. ' os' → logprob: -9.424144744873047

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014166327193379402
    2. ' =' → logprob: -4.264166355133057
    3. '<|end|>' → logprob: -13.389165878295898
    4. ',' → logprob: -14.514165878295898
    5. ' ' → logprob: -15.139165878295898
    6. '<|end|>' → logprob: -15.639165878295898
    7. '=int' → logprob: -16.0141658782959
    8. '   ' → logprob: -16.0141658782959
    9. 'map' → logprob: -17.0141658782959
    10. 's' → logprob: -17.2641658782959

Token 60: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03365987911820412
    2. 'map' → logprob: -3.4086599349975586
    3. '<|end|>' → logprob: -12.158659934997559
    4. ' ' → logprob: -12.283659934997559
    5. '	map' → logprob: -12.908659934997559
    6. '(map' → logprob: -14.658659934997559
    7. ',map' → logprob: -15.158659934997559
    8. '.map' → logprob: -15.533659934997559
    9. ' mapa' → logprob: -15.783659934997559
    10. '_map' → logprob: -15.908659934997559

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016332860104739666
    2. '(' → logprob: -7.251633167266846
    3. '<int' → logprob: -7.376633167266846
    4. '<|end|>' → logprob: -8.501633644104004
    5. '=int' → logprob: -10.501633644104004
    6. '[int' → logprob: -10.751633644104004
    7. ']int' → logprob: -11.001633644104004
    8. 'int' → logprob: -11.126633644104004
    9. '<|end|>' → logprob: -12.001633644104004
    10. ',int' → logprob: -13.001633644104004

Token 62: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010098149999976158
    2. ',int' → logprob: -5.260097980499268
    3. '=int' → logprob: -5.635097980499268
    4. '<int' → logprob: -7.135097980499268
    5. '(' → logprob: -8.635098457336426
    6. ']int' → logprob: -9.510098457336426
    7. ':int' → logprob: -9.635098457336426
    8. 'int' → logprob: -9.885098457336426
    9. '[int' → logprob: -10.635098457336426
    10. ',' → logprob: -10.635098457336426

Token 63: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03572741895914078
    2. ' end' → logprob: -3.6607275009155273
    3. 'int' → logprob: -4.785727500915527
    4. '(end' → logprob: -7.285727500915527
    5. 'es' → logprob: -9.035727500915527
    6. ')' → logprob: -9.785727500915527
    7. '[end' → logprob: -9.910727500915527
    8. '(int' → logprob: -10.535727500915527
    9. ':end' → logprob: -10.785727500915527
    10. '<int' → logprob: -11.410727500915527

Token 64: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.004711953457444906
    2. '.' → logprob: -5.379712104797363
    3. ' .' → logprob: -10.504712104797363
    4. ').' → logprob: -10.879712104797363
    5. ')' → logprob: -11.004712104797363
    6. '().' → logprob: -12.129712104797363
    7. '<|end|>' → logprob: -12.254712104797363
    8. 'split' → logprob: -12.879712104797363
    9. '<|end|>' → logprob: -12.879712104797363
    10. '.strptime' → logprob: -13.129712104797363

Token 65: '(':' (ID: 36524)
  Prédit: '(':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(':' → logprob: -0.007492220029234886
    2. '':' → logprob: -5.3824920654296875
    3. '':'' → logprob: -6.6324920654296875
    4. ':' → logprob: -6.6324920654296875
    5. '('' → logprob: -9.757492065429688
    6. '(":' → logprob: -9.757492065429688
    7. '(' → logprob: -10.007492065429688
    8. ' ':' → logprob: -10.632492065429688
    9. ')' → logprob: -11.507492065429688
    10. '   ' → logprob: -12.007492065429688

Token 66: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05647437274456024
    2. ''))' → logprob: -2.931474447250366
    3. ')' → logprob: -7.181474208831787
    4. '))
' → logprob: -7.431474208831787
    5. ''))
' → logprob: -9.181474685668945
    6. '       ' → logprob: -9.806474685668945
    7. '"))' → logprob: -10.181474685668945
    8. ')))' → logprob: -11.431474685668945
    9. ' ))' → logprob: -11.806474685668945
    10. '   ' → logprob: -12.431474685668945

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6222641468048096
    2. '   ' → logprob: -0.9972641468048096
    3. '<|end|>' → logprob: -3.6222641468048096
    4. ')' → logprob: -3.8722641468048096
    5. '    
' → logprob: -4.6222639083862305
    6. '
' → logprob: -5.2472639083862305
    7. '        
' → logprob: -5.3722639083862305
    8. '\' → logprob: -5.4972639083862305
    9. '\n' → logprob: -6.1222639083862305
    10. ' 
' → logprob: -6.1222639083862305

Token 68: ' start' (ID: 1604)
  Prédit: ' trains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trains' → logprob: -1.0256069898605347
    2. '   ' → logprob: -1.9006069898605347
    3. '       ' → logprob: -2.150607109069824
    4. ' start' → logprob: -2.650607109069824
    5. 'start' (adapté à ' start') → logprob: -3.150607109069824
    6. 'train' → logprob: -3.150607109069824
    7. 'tr' → logprob: -3.275607109069824
    8. 't' → logprob: -3.400607109069824
    9. ' train' → logprob: -3.525607109069824
    10. '```' → logprob: -3.650607109069824

Token 69: '_sec' (ID: 41702)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.14519330859184265
    2. '_' → logprob: -2.145193338394165
    3. '_seconds' → logprob: -4.395193099975586
    4. '_times' → logprob: -6.270193099975586
    5. '_minutes' → logprob: -6.520193099975586
    6. 'time' → logprob: -6.645193099975586
    7. '_total' → logprob: -8.520193099975586
    8. '_t' → logprob: -8.520193099975586
    9. ' =' → logprob: -8.770193099975586
    10. 'Time' → logprob: -8.770193099975586

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09022793918848038
    2. '=' → logprob: -2.8402278423309326
    3. 's' → logprob: -3.5902278423309326
    4. ')' → logprob: -9.340228080749512
    5. ' +=' → logprob: -9.840228080749512
    6. 'onds' → logprob: -10.465228080749512
    7. '  ' → logprob: -10.965228080749512
    8. '<|end|>' → logprob: -11.215228080749512
    9. 'conds' → logprob: -11.465228080749512
    10. ',' → logprob: -11.840228080749512

Token 71: ' sh' (ID: 641)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.28121674060821533
    2. ' sh' → logprob: -1.4062167406082153
    3. '(sh' → logprob: -10.906216621398926
    4. '   ' → logprob: -11.031216621398926
    5. '	sh' → logprob: -11.031216621398926
    6. ' ' → logprob: -12.531216621398926
    7. '```' → logprob: -13.281216621398926
    8. '60' → logprob: -13.781216621398926
    9. 'ss' → logprob: -13.781216621398926
    10. ' (' → logprob: -13.906216621398926

Token 72: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5231326222419739
    2. ' *' → logprob: -0.8981326222419739
    3. ' ' → logprob: -12.39813232421875
    4. ' ' → logprob: -12.89813232421875
    5. '**' → logprob: -13.77313232421875
    6. '   ' → logprob: -14.89813232421875
    7. '	' → logprob: -15.02313232421875
    8. '```' → logprob: -15.64813232421875
    9. '  ' → logprob: -15.77313232421875
    10. ' **' → logprob: -16.14813232421875

Token 73: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -0.00033546582562848926
    2. '60' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.000335693359375
    4. '366' → logprob: -17.625335693359375
    5. '36' → logprob: -19.250335693359375
    6. '361' → logprob: -19.750335693359375
    7. '+' → logprob: -21.000335693359375
    8. '359' → logprob: -21.375335693359375
    9. '600' → logprob: -21.500335693359375
    10. '  ' → logprob: -22.125335693359375

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. '+' → logprob: -12.250006675720215
    3. '۰' → logprob: -14.500006675720215
    4. '00' → logprob: -15.125006675720215
    5. '060' → logprob: -15.375006675720215
    6. '০' → logprob: -15.875006675720215
    7. '०' → logprob: -15.875006675720215
    8. '٠' → logprob: -16.3750057220459
    9. '<|end|>' → logprob: -16.5000057220459
    10. '036' → logprob: -16.8750057220459

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5769094824790955
    2. ' +' → logprob: -0.8269094824790955
    3. '<|end|>' → logprob: -6.95190954208374
    4. ' +
' → logprob: -11.826909065246582
    5. '<|end|>' → logprob: -12.826909065246582
    6. ' ' → logprob: -14.201909065246582
    7. ' +

' → logprob: -14.826909065246582
    8. '+
' → logprob: -15.076909065246582
    9. '+)' → logprob: -15.451909065246582
    10. ')' → logprob: -15.826909065246582

Token 76: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.029770972207188606
    2. ' sm' → logprob: -3.529771089553833
    3. '	sm' → logprob: -11.529770851135254
    4. ' ' → logprob: -12.154770851135254
    5. '  ' → logprob: -13.154770851135254
    6. 's' → logprob: -13.404770851135254
    7. '<|end|>' → logprob: -14.279770851135254
    8. '(sm' → logprob: -14.779770851135254
    9. '_sm' → logprob: -15.779770851135254
    10. '-sm' → logprob: -15.904770851135254

Token 77: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00045926711754873395
    2. ' *' → logprob: -7.75045919418335
    3. '60' → logprob: -11.000459671020508
    4. '36' → logprob: -12.750459671020508
    5. '40' → logprob: -13.250459671020508
    6. '360' → logprob: -13.500459671020508
    7. ' ' → logprob: -13.875459671020508
    8. '30' → logprob: -14.000459671020508
    9. '**' → logprob: -14.125459671020508
    10. '20' → logprob: -14.375459671020508

Token 78: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.0001725511101540178
    2. '0' → logprob: -9.00017261505127
    3. ' ' → logprob: -10.12517261505127
    4. '1' → logprob: -11.75017261505127
    5. '59' → logprob: -14.87517261505127
    6. '00' → logprob: -15.12517261505127
    7. '30' → logprob: -15.62517261505127
    8. '600' → logprob: -16.875171661376953
    9. '<|end|>' → logprob: -16.875171661376953
    10. '61' → logprob: -17.000171661376953

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38718003034591675
    2. '+' → logprob: -1.1371800899505615
    3. '<|end|>' → logprob: -8.13718032836914
    4. ' +
' → logprob: -11.51218032836914
    5. '+
' → logprob: -13.26218032836914
    6. '<|end|>' → logprob: -13.38718032836914
    7. ' ' → logprob: -13.51218032836914
    8. '+s' → logprob: -15.01218032836914
    9. ' +

' → logprob: -15.13718032836914
    10. '  ' → logprob: -15.26218032836914

Token 80: ' ss' (ID: 20928)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.007611243985593319
    2. ' ss' → logprob: -4.882611274719238
    3. ' ' → logprob: -12.882611274719238
    4. 'es' → logprob: -14.132611274719238
    5. '	ss' → logprob: -14.132611274719238
    6. ' es' → logprob: -15.257611274719238
    7. 'sm' → logprob: -16.132610321044922
    8. '  ' → logprob: -16.382610321044922
    9. 's' → logprob: -16.382610321044922
    10. '(ss' → logprob: -16.507610321044922

Token 81: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03494562208652496
    2. '<|end|>' → logprob: -3.9099457263946533
    3. '+
' → logprob: -5.909945487976074
    4. '   ' → logprob: -5.909945487976074
    5. '-' → logprob: -6.034945487976074
    6. ' +' → logprob: -6.284945487976074
    7. ')' → logprob: -6.409945487976074
    8. '
' → logprob: -7.284945487976074
    9. '<|end|>' → logprob: -7.659945487976074
    10. '*' → logprob: -7.909945487976074

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43126019835472107
    2. '<|end|>' → logprob: -1.8062602281570435
    3. '+' → logprob: -2.306260108947754
    4. '   ' → logprob: -3.556260108947754
    5. ' ' → logprob: -4.306260108947754
    6. 'tr' → logprob: -5.306260108947754
    7. '        ' → logprob: -5.556260108947754
    8. '    ' → logprob: -5.681260108947754
    9. '        
' → logprob: -5.681260108947754
    10. ')' → logprob: -5.681260108947754

Token 83: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.04941926524043083
    2. ' end' → logprob: -3.0494191646575928
    3. '       ' → logprob: -7.424419403076172
    4. '   ' → logprob: -9.299419403076172
    5. 'endt' → logprob: -9.674419403076172
    6. '	end' → logprob: -11.674419403076172
    7. 'train' → logprob: -11.674419403076172
    8. '```' → logprob: -12.049419403076172
    9. ' ' → logprob: -12.174419403076172
    10. 'e' → logprob: -12.174419403076172

Token 84: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -0.003746405942365527
    2. '_' → logprob: -5.753746509552002
    3. '_seconds' → logprob: -8.753746032714844
    4. '_s' → logprob: -8.878746032714844
    5. ' _' → logprob: -9.253746032714844
    6. '<|end|>' → logprob: -10.128746032714844
    7. '_sep' → logprob: -10.753746032714844
    8. '_SEC' → logprob: -11.253746032714844
    9. '_secs' → logprob: -11.503746032714844
    10. '_se' → logprob: -11.628746032714844

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029763570055365562
    2. '=' → logprob: -3.5297634601593018
    3. ' ' → logprob: -11.654763221740723
    4. '<|end|>' → logprob: -12.904763221740723
    5. '    ' → logprob: -14.904763221740723
    6. ' =)' → logprob: -15.029763221740723
    7. '  ' → logprob: -15.279763221740723
    8. ' +=' → logprob: -15.404763221740723
    9. '   ' → logprob: -15.654763221740723
    10. ')' → logprob: -15.779763221740723

Token 86: ' eh' (ID: 22446)
  Prédit: ' eh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eh' → logprob: -0.014226970262825489
    2. 'eh' → logprob: -4.264226913452148
    3. 'e' → logprob: -11.264226913452148
    4. 'sh' → logprob: -12.014226913452148
    5. ' es' → logprob: -12.014226913452148
    6. ' ' → logprob: -12.139226913452148
    7. ' e' → logprob: -12.389226913452148
    8. ' em' → logprob: -12.389226913452148
    9. 'esh' → logprob: -12.389226913452148
    10. ' eht' → logprob: -12.764226913452148

Token 87: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -2.927930654550437e-05
    2. ' *' → logprob: -10.750029563903809
    3. '360' → logprob: -11.875029563903809
    4. '**' → logprob: -14.875029563903809
    5. '```' → logprob: -16.000028610229492
    6. ''*' → logprob: -16.125028610229492
    7. '<|end|>' → logprob: -16.375028610229492
    8. '*>' → logprob: -16.625028610229492
    9. ' ' → logprob: -16.750028610229492
    10. '***' → logprob: -17.500028610229492

Token 88: '360' (ID: 9870)
  Prédit: '360'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '360' → logprob: -2.935296834039036e-06
    2. '*' → logprob: -12.87500286102295
    3. '60' → logprob: -16.250003814697266
    4. '36' → logprob: -16.500003814697266
    5. ' ' → logprob: -17.000003814697266
    6. '<|end|>' → logprob: -18.000003814697266
    7. '```' → logprob: -18.375003814697266
    8. '3' → logprob: -19.375003814697266
    9. '359' → logprob: -19.375003814697266
    10. '+' → logprob: -19.500003814697266

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '060' → logprob: -13.625003814697266
    3. '000' → logprob: -14.125003814697266
    4. '०' → logprob: -14.625003814697266
    5. '00' → logprob: -14.750003814697266
    6. '۰' → logprob: -15.000003814697266
    7. '٠' → logprob: -15.375003814697266
    8. '036' → logprob: -15.750003814697266
    9. '০' → logprob: -16.375003814697266
    10. 'o' → logprob: -16.625003814697266

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759485960006714
    2. ' +' → logprob: -0.8259485960006714
    3. '<|end|>' → logprob: -12.200948715209961
    4. '*' → logprob: -12.825948715209961
    5. ' ' → logprob: -15.075948715209961
    6. ' ' → logprob: -15.950948715209961
    7. '＋' → logprob: -16.07594871520996
    8. '+++' → logprob: -16.20094871520996
    9. '>' → logprob: -16.20094871520996
    10. '<|end|>' → logprob: -16.32594871520996

Token 91: ' em' (ID: 863)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.693321943283081
    2. ' em' → logprob: -0.693321943283081
    3. 'es' → logprob: -8.94332218170166
    4. ' es' → logprob: -10.81832218170166
    5. ' ' → logprob: -11.56832218170166
    6. '<|end|>' → logprob: -12.19332218170166
    7. '	em' → logprob: -12.19332218170166
    8. '+' → logprob: -13.31832218170166
    9. '_em' → logprob: -14.31832218170166
    10. '(em' → logprob: -14.31832218170166

Token 92: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003099599271081388
    2. '60' → logprob: -8.125309944152832
    3. ' *' → logprob: -11.500309944152832
    4. ''*' → logprob: -13.125309944152832
    5. '`' → logprob: -13.875309944152832
    6. '**' → logprob: -14.875309944152832
    7. '```' → logprob: -15.750309944152832
    8. '61' → logprob: -16.00031089782715
    9. ' ' → logprob: -16.87531089782715
    10. '<|end|>' → logprob: -17.25031089782715

Token 93: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -7.941850526549388e-06
    2. '<|end|>' → logprob: -13.000007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '360' → logprob: -13.625007629394531
    5. '30' → logprob: -14.250007629394531
    6. '0' → logprob: -14.625007629394531
    7. '36' → logprob: -15.125007629394531
    8. '61' → logprob: -15.250007629394531
    9. ')' → logprob: -15.250007629394531
    10. '```' → logprob: -15.375007629394531

Token 94: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20152415335178375
    2. '+' → logprob: -1.7015241384506226
    3. '*' → logprob: -9.826523780822754
    4. '60' → logprob: -10.451523780822754
    5. ' ' → logprob: -11.326523780822754
    6. ' *' → logprob: -11.576523780822754
    7. '<|end|>' → logprob: -12.451523780822754
    8. '`' → logprob: -15.201523780822754
    9. '```' → logprob: -15.201523780822754
    10. 's' → logprob: -15.326523780822754

Token 95: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2538314759731293
    2. 'ss' → logprob: -1.5038315057754517
    3. '60' → logprob: -7.003831386566162
    4. ' es' → logprob: -7.253831386566162
    5. 's' → logprob: -9.62883186340332
    6. ' ' → logprob: -9.62883186340332
    7. ' ss' → logprob: -9.75383186340332
    8. '1' → logprob: -10.25383186340332
    9. '59' → logprob: -10.25383186340332
    10. 'se' → logprob: -11.37883186340332

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17883099615573883
    2. '       ' → logprob: -2.428831100463867
    3. '<|end|>' → logprob: -2.928831100463867
    4. ')' → logprob: -5.303831100463867
    5. ' trains' → logprob: -5.428831100463867
    6. '```' → logprob: -5.928831100463867
    7. '
' → logprob: -5.928831100463867
    8. '    
' → logprob: -6.428831100463867
    9. ',' → logprob: -6.803831100463867
    10. '<|end|>' → logprob: -7.053831100463867

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12523555755615234
    2. '       ' → logprob: -2.5002355575561523
    3. '
' → logprob: -4.000235557556152
    4. '<|end|>' → logprob: -4.875235557556152
    5. ' trains' → logprob: -5.375235557556152
    6. 'tr' → logprob: -6.250235557556152
    7. '```' → logprob: -6.750235557556152
    8. '    
' → logprob: -7.125235557556152
    9. 'train' → logprob: -8.625235557556152
    10. '<|end|>' → logprob: -8.750235557556152

Token 98: ' trains' (ID: 46841)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0297303199768066
    2. ' trains' → logprob: -1.0297303199768066
    3. '   ' → logprob: -1.2797303199768066
    4. 'train' → logprob: -5.779730319976807
    5. ' if' → logprob: -6.654730319976807
    6. ' train' → logprob: -6.779730319976807
    7. 't' → logprob: -7.404730319976807
    8. ' tr' → logprob: -7.904730319976807
    9. '       ' → logprob: -8.154729843139648
    10. '	tr' → logprob: -8.404729843139648

Token 99: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06200689822435379
    2. '.' → logprob: -2.812006950378418
    3. ' .' → logprob: -11.187006950378418
    4. '.push' → logprob: -11.687006950378418
    5. '.setdefault' → logprob: -12.562006950378418
    6. '.app' → logprob: -12.687006950378418
    7. '.extend' → logprob: -12.687006950378418
    8. '<|end|>' → logprob: -13.562006950378418
    9. '.Append' → logprob: -13.687006950378418
    10. '​.' → logprob: -13.812006950378418

Token 100: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023565147072076797
    2. '(start' → logprob: -4.273565292358398
    3. '(' → logprob: -4.773565292358398
    4. '(end' → logprob: -7.023565292358398
    5. '([' → logprob: -12.273565292358398
    6. '(tr' → logprob: -12.398565292358398
    7. ' (' → logprob: -13.273565292358398
    8. '(begin' → logprob: -14.148565292358398
    9. '(time' → logprob: -14.148565292358398
    10. '(train' → logprob: -14.523565292358398

Token 101: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00472061475738883
    2. ' start' → logprob: -5.379720687866211
    3. 'end' → logprob: -9.254720687866211
    4. '   ' → logprob: -13.004720687866211
    5. ')' → logprob: -13.754720687866211
    6. ' end' → logprob: -14.504720687866211
    7. 'star' → logprob: -14.879720687866211
    8. 'st' → logprob: -16.12972068786621
    9. '	start' → logprob: -16.12972068786621
    10. '(start' → logprob: -16.25472068786621

Token 102: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -1.5928495486150496e-05
    2. ',' → logprob: -12.250016212463379
    3. '_' → logprob: -12.500016212463379
    4. '_se' → logprob: -12.625016212463379
    5. '_sep' → logprob: -13.875016212463379
    6. ' _' → logprob: -14.625016212463379
    7. ')' → logprob: -14.750016212463379
    8. '_s' → logprob: -14.750016212463379
    9. '_,' → logprob: -15.000016212463379
    10. '_seconds' → logprob: -15.375016212463379

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014644917973782867
    2. ',end' → logprob: -9.375146865844727
    3. ' ,' → logprob: -9.750146865844727
    4. ')' → logprob: -13.625146865844727
    5. '<|end|>' → logprob: -14.000146865844727
    6. ',
' → logprob: -14.625146865844727
    7. ',)' → logprob: -16.250146865844727
    8. '‌,' → logprob: -16.375146865844727
    9. '<|end|>' → logprob: -16.500146865844727
    10. ',start' → logprob: -16.500146865844727

Token 104: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.6326165795326233
    2. 'end' → logprob: -0.7576165795326233
    3. ')' → logprob: -13.007616996765137
    4. ' ' → logprob: -13.007616996765137
    5. '	end' → logprob: -13.007616996765137
    6. ''end' → logprob: -13.507616996765137
    7. '(end' → logprob: -13.632616996765137
    8. '   ' → logprob: -13.882616996765137
    9. '[end' → logprob: -13.882616996765137
    10. ',end' → logprob: -14.007616996765137

Token 105: '_sec' (ID: 41702)
  Prédit: '_sec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sec' → logprob: -5.080963092041202e-06
    2. ')' → logprob: -13.500004768371582
    3. '_se' → logprob: -13.875004768371582
    4. '_sep' → logprob: -14.125004768371582
    5. 'sec' → logprob: -14.500004768371582
    6. '_' → logprob: -15.000004768371582
    7. '_seg' → logprob: -15.625004768371582
    8. '_SEC' → logprob: -15.625004768371582
    9. '+' → logprob: -15.750004768371582
    10. '))' → logprob: -16.1250057220459

Token 106: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023258758708834648
    2. '))' → logprob: -3.773258686065674
    3. ')
' → logprob: -12.148259162902832
    4. ')))' → logprob: -12.898259162902832
    5. '   ' → logprob: -13.398259162902832
    6. ',' → logprob: -13.773259162902832
    7. ' )' → logprob: -14.023259162902832
    8. '))
' → logprob: -14.148259162902832
    9. '       ' → logprob: -14.523259162902832
    10. ',)' → logprob: -14.898259162902832

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12122531235218048
    2. '
' → logprob: -2.496225357055664
    3. '    
' → logprob: -3.996225357055664
    4. '<|end|>' → logprob: -4.996225357055664
    5. '  
' → logprob: -5.746225357055664
    6. '   
' → logprob: -7.371225357055664
    7. '  ' → logprob: -7.621225357055664
    8. ' 
' → logprob: -7.621225357055664
    9. '```' → logprob: -7.996225357055664
    10. 'train' → logprob: -8.121225357055664

Token 108: ' trains' (ID: 46841)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6114718317985535
    2. '   ' → logprob: -1.1114718914031982
    3. ' trains' → logprob: -2.2364718914031982
    4. '    
' → logprob: -4.486471652984619
    5. '
' → logprob: -5.236471652984619
    6. 'sorted' → logprob: -6.861471652984619
    7. 'train' → logprob: -7.236471652984619
    8. '  
' → logprob: -7.736471652984619
    9. ' 
' → logprob: -7.861471652984619
    10. '```' → logprob: -7.986471652984619

Token 109: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0006979000172577798
    2. '<|end|>' → logprob: -7.625698089599609
    3. '.' → logprob: -9.25069808959961
    4. ')' → logprob: -10.75069808959961
    5. 'sort' → logprob: -11.00069808959961
    6. '_sorted' → logprob: -11.00069808959961
    7. '.append' → logprob: -11.25069808959961
    8. '[' → logprob: -11.62569808959961
    9. '.pop' → logprob: -11.75069808959961
    10. '.reverse' → logprob: -12.25069808959961

Token 110: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026767561212182045
    2. '(key' → logprob: -4.276767730712891
    3. '(' → logprob: -4.401767730712891
    4. '(reverse' → logprob: -8.52676773071289
    5. ' ()' → logprob: -11.65176773071289
    6. '();' → logprob: -12.02676773071289
    7. 'key' → logprob: -12.02676773071289
    8. '((' → logprob: -12.15176773071289
    9. '()>' → logprob: -12.27676773071289
    10. '(keys' → logprob: -12.52676773071289

Token 111: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. '=item' → logprob: -16.753177642822266
    4. '=len' → logprob: -16.753177642822266
    5. '=

' → logprob: -17.628177642822266
    6. '=l' → logprob: -18.003177642822266
    7. '=}' → logprob: -18.128177642822266
    8. '=_' → logprob: -18.878177642822266
    9. '=
' → logprob: -19.128177642822266
    10. '=a' → logprob: -19.503177642822266

Token 112: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20525488257408142
    2. 'x' → logprob: -1.7052549123764038
    3. ' t' → logprob: -6.455255031585693
    4. ' train' → logprob: -6.580255031585693
    5. 'train' → logprob: -7.330255031585693
    6. 't' → logprob: -8.455254554748535
    7. 'tr' → logprob: -13.330254554748535
    8. ' tr' → logprob: -13.580254554748535
    9. ' trip' → logprob: -13.830254554748535
    10. ' trains' → logprob: -14.580254554748535

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008698907913640141
    2. ':x' → logprob: -7.1258697509765625
    3. ' :' → logprob: -10.000869750976562
    4. '[' → logprob: -11.625869750976562
    5. 'x' → logprob: -11.750869750976562
    6. ' x' → logprob: -13.000869750976562
    7. '1' → logprob: -14.750869750976562
    8. '   ' → logprob: -15.500869750976562
    9. ':
' → logprob: -16.000869750976562
    10. ' ' → logprob: -16.250869750976562

Token 114: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815006136894226
    2. ' x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -16.893150329589844
    4. '(x' → logprob: -17.643150329589844
    5. ')x' → logprob: -17.643150329589844
    6. '    ' → logprob: -18.893150329589844
    7. '-' → logprob: -18.893150329589844
    8. ')' → logprob: -19.268150329589844
    9. '   ' → logprob: -19.393150329589844
    10. ' ' → logprob: -19.643150329589844

Token 115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.015305552864447e-05
    2. ')' → logprob: -9.875060081481934
    3. ' [' → logprob: -12.000060081481934
    4. ' ' → logprob: -13.875060081481934
    5. '0' → logprob: -14.625060081481934
    6. ' )' → logprob: -14.875060081481934
    7. '[
' → logprob: -15.250060081481934
    8. ')[' → logprob: -16.12506103515625
    9. ':' → logprob: -16.25006103515625
    10. '1' → logprob: -16.37506103515625

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004198663402348757
    2. '1' → logprob: -5.5041985511779785
    3. ' ' → logprob: -9.129199028015137
    4. '[' → logprob: -12.754199028015137
    5. 'start' → logprob: -13.066699028015137
    6. ')' → logprob: -13.191699028015137
    7. '   ' → logprob: -13.691699028015137
    8. ']' → logprob: -14.129199028015137
    9. 'x' → logprob: -15.129199028015137
    10. '-' → logprob: -15.191699028015137

Token 117: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. '))' → logprob: -12.125008583068848
    3. ' )' → logprob: -13.500008583068848
    4. ')
' → logprob: -13.875008583068848
    5. ')`' → logprob: -15.500008583068848
    6. ')}' → logprob: -16.75000762939453
    7. '())' → logprob: -17.00000762939453
    8. '),' → logprob: -17.12500762939453
    9. ')#' → logprob: -17.25000762939453
    10. ')

' → logprob: -18.12500762939453

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03912436217069626
    2. '
' → logprob: -4.289124488830566
    3. 'for' → logprob: -4.914124488830566
    4. '    
' → logprob: -4.914124488830566
    5. ' for' → logprob: -5.414124488830566
    6. '```' → logprob: -6.289124488830566
    7. '  
' → logprob: -8.039124488830566
    8. 'train' → logprob: -8.039124488830566
    9. ',' → logprob: -8.289124488830566
    10. '   
' → logprob: -8.414124488830566

Token 119: ' used' (ID: 2061)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8610262870788574
    2. 'count' → logprob: -1.9860262870788574
    3. 'available' → logprob: -2.3610262870788574
    4. 'arr' → logprob: -3.4860262870788574
    5. 'possible' → logprob: -3.7360262870788574
    6. 'arrival' → logprob: -3.7360262870788574
    7. 'delay' → logprob: -3.9860262870788574
    8. 'needed' → logprob: -3.9860262870788574
    9. 'result' → logprob: -4.236026287078857
    10. 'last' → logprob: -4.236026287078857

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07343582063913345
    2. '_tr' → logprob: -3.5734357833862305
    3. '=' → logprob: -4.5734357833862305
    4. '_times' → logprob: -4.6984357833862305
    5. '_tracks' → logprob: -4.6984357833862305
    6. '_platform' → logprob: -5.4484357833862305
    7. '=[]' → logprob: -5.5734357833862305
    8. '_' → logprob: -5.9484357833862305
    9. '_st' → logprob: -7.0734357833862305
    10. 's' → logprob: -7.1984357833862305

Token 121: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.39715754985809326
    2. '[]' → logprob: -1.1471575498580933
    3. '0' → logprob: -5.147157669067383
    4. ' ' → logprob: -5.522157669067383
    5. ' [' → logprob: -8.272157669067383
    6. '[' → logprob: -9.897157669067383
    7. 'set' → logprob: -10.147157669067383
    8. '[]}' → logprob: -10.522157669067383
    9. ' []
' → logprob: -11.397157669067383
    10. '[]
' → logprob: -11.397157669067383

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.125390887260437
    2. ' for' → logprob: -2.6253910064697266
    3. 'for' → logprob: -3.1253910064697266
    4. '    
' → logprob: -7.500391006469727
    5. '
' → logprob: -8.500391006469727
    6. ':' → logprob: -9.250391006469727
    7. ',' → logprob: -9.500391006469727
    8. '    ' → logprob: -9.625391006469727
    9. '<|end|>' → logprob: -9.625391006469727
    10. ' and' → logprob: -9.875391006469727

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2930978834629059
    2. ' for' → logprob: -1.4180978536605835
    3. '   ' → logprob: -5.043097972869873
    4. 'result' → logprob: -6.668097972869873
    5. 'import' → logprob: -6.793097972869873
    6. 'count' → logprob: -7.168097972869873
    7. 'possible' → logprob: -8.293097496032715
    8. 'from' → logprob: -8.418097496032715
    9. ' result' → logprob: -8.543097496032715
    10. 'res' → logprob: -8.543097496032715

Token 124: ' s' (ID: 265)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.17159298062324524
    2. ' train' → logprob: -2.421592950820923
    3. 'start' → logprob: -3.171592950820923
    4. ' s' → logprob: -4.421593189239502
    5. ' t' → logprob: -5.421593189239502
    6. ' i' → logprob: -5.546593189239502
    7. 'train' → logprob: -5.921593189239502
    8. 's' → logprob: -7.171593189239502
    9. ' (' → logprob: -7.171593189239502
    10. ' st' → logprob: -7.421593189239502

Token 125: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011953587643802166
    2. 't' → logprob: -4.761953353881836
    3. ',e' → logprob: -6.636953353881836
    4. 'e' → logprob: -7.386953353881836
    5. ',end' → logprob: -7.761953353881836
    6. '_,' → logprob: -7.761953353881836
    7. ',_' → logprob: -8.511953353881836
    8. ' ,' → logprob: -9.386953353881836
    9. ',t' → logprob: -9.636953353881836
    10. 'train' → logprob: -10.136953353881836

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01824910007417202
    2. 'in' → logprob: -4.018249034881592
    3. ',' → logprob: -9.64324951171875
    4. ' ' → logprob: -10.89324951171875
    5. ' ,' → logprob: -12.01824951171875
    6. '  ' → logprob: -12.64324951171875
    7. '   ' → logprob: -13.39324951171875
    8. 's' → logprob: -13.51824951171875
    9. 'n' → logprob: -14.26824951171875
    10. ',in' → logprob: -14.39324951171875

Token 127: ' trains' (ID: 46841)
  Prédit: ' trains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trains' → logprob: -0.20147766172885895
    2. 'tr' → logprob: -1.7014776468276978
    3. 'train' → logprob: -10.076478004455566
    4. ' ' → logprob: -11.826478004455566
    5. 't' → logprob: -11.826478004455566
    6. '   ' → logprob: -13.201478004455566
    7. '	tr' → logprob: -13.326478004455566
    8. ' tr' → logprob: -14.326478004455566
    9. ' train' → logprob: -14.451478004455566
    10. 'tra' → logprob: -14.451478004455566

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035155098885297775
    2. ':
' → logprob: -8.000351905822754
    3. ' :' → logprob: -11.375351905822754
    4. ',' → logprob: -13.500351905822754
    5. '):' → logprob: -13.625351905822754
    6. ':

' → logprob: -14.375351905822754
    7. '   ' → logprob: -14.625351905822754
    8. '<|end|>' → logprob: -15.375351905822754
    9. ':**' → logprob: -16.125350952148438
    10. ' :
' → logprob: -16.625350952148438

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00949870329350233
    2. ' if' → logprob: -5.009498596191406
    3. ' for' → logprob: -6.759498596191406
    4. '   ' → logprob: -7.009498596191406
    5. '    ' → logprob: -8.384498596191406
    6. ' found' → logprob: -8.634498596191406
    7. 'if' → logprob: -9.509498596191406
    8. ' while' → logprob: -9.509498596191406
    9. ' used' → logprob: -10.384498596191406
    10. 'for' → logprob: -10.634498596191406

Token 130: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.7136110067367554
    2. ' inserted' → logprob: -2.088611125946045
    3. 'placed' (adapté à ' placed') → logprob: -2.588611125946045
    4. ' found' → logprob: -2.838611125946045
    5. ' for' → logprob: -3.338611125946045
    6. 'found' → logprob: -3.338611125946045
    7. '       ' → logprob: -3.463611125946045
    8. 'import' → logprob: -3.713611125946045
    9. ' assigned' → logprob: -3.963611125946045
    10. ' if' → logprob: -3.963611125946045

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016128212213516235
    2. '=' → logprob: -4.141128063201904
    3. ' ' → logprob: -9.516128540039062
    4. '_' → logprob: -11.141128540039062
    5. '_space' → logprob: -13.766128540039062
    6. ',' → logprob: -13.891128540039062
    7. '_found' → logprob: -14.266128540039062
    8. '=False' → logprob: -14.516128540039062
    9. ' =)' → logprob: -14.641128540039062
    10. 'ed' → logprob: -15.016128540039062

Token 132: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0380416102707386
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -17.038042068481445
    4. '0' → logprob: -17.788042068481445
    5. '   ' → logprob: -17.788042068481445
    6. '[]' → logprob: -18.663042068481445
    7. '=False' → logprob: -19.038042068481445
    8. 'True' → logprob: -19.413042068481445
    9. 'F' → logprob: -20.038042068481445
    10. '.False' → logprob: -20.038042068481445

Token 133: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040596120059490204
    2. '<|end|>' → logprob: -3.4155960083007812
    3. '
' → logprob: -5.665596008300781
    4. ' for' → logprob: -7.165596008300781
    5. '        
' → logprob: -7.165596008300781
    6. '   ' → logprob: -7.290596008300781
    7. ' ' → logprob: -7.665596008300781
    8. ' 
' → logprob: -8.540596008300781
    9. '    ' → logprob: -8.915596008300781
    10. ',' → logprob: -9.415596008300781

Token 135: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0060669672675430775
    2. 'for' (adapté à ' for') → logprob: -5.131066799163818
    3. ' ' → logprob: -9.131067276000977
    4. '<|end|>' → logprob: -11.506067276000977
    5. '	for' → logprob: -11.631067276000977
    6. '   ' → logprob: -11.756067276000977
    7. '    ' → logprob: -13.131067276000977
    8. '  ' → logprob: -15.131067276000977
    9. '       ' → logprob: -15.381067276000977
    10. '
' → logprob: -15.381067276000977

Token 136: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0666157528758049
    2. ' range' → logprob: -2.8166158199310303
    3. 'i' → logprob: -5.941615581512451
    4. 'range' → logprob: -6.691615581512451
    5. ' idx' → logprob: -7.316615581512451
    6. ' ' → logprob: -10.19161605834961
    7. 'idx' → logprob: -10.56661605834961
    8. ' rang' → logprob: -11.31661605834961
    9. ' xrange' → logprob: -12.06661605834961
    10. ' r' → logprob: -12.31661605834961

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01357122603803873
    2. 'in' → logprob: -4.388571262359619
    3. ' range' → logprob: -7.513571262359619
    4. ',' → logprob: -7.888571262359619
    5. 'range' → logprob: -9.013570785522461
    6. ' ' → logprob: -11.763570785522461
    7. ' ,' → logprob: -12.138570785522461
    8. ',in' → logprob: -13.263570785522461
    9. '<|end|>' → logprob: -13.513570785522461
    10. '  ' → logprob: -14.513570785522461

Token 138: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004079589620232582
    2. 'range' → logprob: -5.504079818725586
    3. '	range' → logprob: -14.129079818725586
    4. '(range' → logprob: -15.379079818725586
    5. '   ' → logprob: -16.754079818725586
    6. ' ' → logprob: -16.754079818725586
    7. '  ' → logprob: -17.129079818725586
    8. ' xrange' → logprob: -17.754079818725586
    9. 'ange' → logprob: -17.879079818725586
    10. '_range' → logprob: -18.004079818725586

Token 139: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.006018857005983591
    2. ' len' → logprob: -5.50601863861084
    3. 'len' → logprob: -6.25601863861084
    4. '	len' → logprob: -11.25601863861084
    5. ',len' → logprob: -12.13101863861084
    6. '=len' → logprob: -14.00601863861084
    7. '<len' → logprob: -14.88101863861084
    8. '   ' → logprob: -16.256019592285156
    9. '[len' → logprob: -16.381019592285156
    10. ' (' → logprob: -17.631019592285156

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. 'used' → logprob: -13.37500286102295
    3. ' (' → logprob: -13.50000286102295
    4. ' used' → logprob: -15.87500286102295
    5. ')' → logprob: -17.125003814697266
    6. '(use' → logprob: -18.250003814697266
    7. '(
' → logprob: -18.375003814697266
    8. ' ' → logprob: -19.500003814697266
    9. 'Used' → logprob: -20.000003814697266
    10. '
' → logprob: -20.000003814697266

Token 141: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0009283758117817342
    2. ' used' → logprob: -7.0009284019470215
    3. '(' → logprob: -11.125927925109863
    4. ')' → logprob: -14.125927925109863
    5. '   ' → logprob: -14.250927925109863
    6. '.used' → logprob: -15.250927925109863
    7. ' ' → logprob: -16.00092887878418
    8. '_used' → logprob: -16.12592887878418
    9. '-used' → logprob: -16.37592887878418
    10. 'use' → logprob: -17.12592887878418

Token 142: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.33574795722961426
    2. ')):
' → logprob: -1.4607479572296143
    3. '))' → logprob: -2.9607479572296143
    4. ')' → logprob: -7.710747718811035
    5. ')):
' → logprob: -7.710747718811035
    6. ' ))' → logprob: -8.460747718811035
    7. ' ' → logprob: -8.960747718811035
    8. '()))' → logprob: -9.460747718811035
    9. '):' → logprob: -10.710747718811035
    10. '
' → logprob: -12.710747718811035

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1134626492857933
    2. ':' → logprob: -2.6134626865386963
    3. '):' → logprob: -4.363462448120117
    4. '<|end|>' → logprob: -4.738462448120117
    5. ' if' → logprob: -5.488462448120117
    6. '):
' → logprob: -5.738462448120117
    7. ')' → logprob: -6.738462448120117
    8. ':
' → logprob: -6.863462448120117
    9. ',' → logprob: -7.238462448120117
    10. '       ' → logprob: -7.488462448120117

Token 144: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03233486786484718
    2. '<|end|>' → logprob: -4.157334804534912
    3. '       ' → logprob: -4.782334804534912
    4. '           ' → logprob: -5.407334804534912
    5. ' ' → logprob: -6.907334804534912
    6. 'if' (adapté à ' if') → logprob: -7.407334804534912
    7. '   ' → logprob: -7.907334804534912
    8. '        ' → logprob: -8.15733528137207
    9. '               ' → logprob: -8.40733528137207
    10. ')' → logprob: -8.90733528137207

Token 145: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.11876966804265976
    2. 'used' → logprob: -2.243769645690918
    3. ' e' → logprob: -5.493769645690918
    4. 'e' → logprob: -6.618769645690918
    5. ' s' → logprob: -8.493769645690918
    6. 's' → logprob: -9.118769645690918
    7. '   ' → logprob: -9.243769645690918
    8. ' ' → logprob: -10.243769645690918
    9. '    ' → logprob: -12.743769645690918
    10. ' ' → logprob: -12.743769645690918

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4617256056226324e-05
    2. '[-' → logprob: -11.500014305114746
    3. '[' → logprob: -13.000014305114746
    4. ' [' → logprob: -13.500014305114746
    5. 'i' → logprob: -15.375014305114746
    6. '```' → logprob: -16.125015258789062
    7. '[j' → logprob: -16.250015258789062
    8. '[
' → logprob: -16.750015258789062
    9. '
' → logprob: -17.000015258789062
    10. '[I' → logprob: -17.125015258789062

Token 147: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20526963472366333
    2. ' <=' → logprob: -1.7052695751190186
    3. ')<=' → logprob: -6.580269813537598
    4. ')' → logprob: -7.205269813537598
    5. '[' → logprob: -7.205269813537598
    6. '<' → logprob: -7.330269813537598
    7. ' <' → logprob: -9.580269813537598
    8. '+' → logprob: -9.705269813537598
    9. ']<=' → logprob: -9.705269813537598
    10. ' ' → logprob: -10.330269813537598

Token 148: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03929721191525459
    2. ' <=' → logprob: -3.289297103881836
    3. '<' → logprob: -7.164297103881836
    4. '[' → logprob: -8.039297103881836
    5. ')<=' → logprob: -9.414297103881836
    6. ' <' → logprob: -10.914297103881836
    7. ')' → logprob: -11.664297103881836
    8. 'e' → logprob: -11.789297103881836
    9. ']<=' → logprob: -11.789297103881836
    10. '```' → logprob: -12.039297103881836

Token 149: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0619683600962162
    2. ' s' → logprob: -2.8119683265686035
    3. '	s' → logprob: -15.686968803405762
    4. ' ' → logprob: -15.811968803405762
    5. '   ' → logprob: -16.061967849731445
    6. '<s' → logprob: -16.686967849731445
    7. '>s' → logprob: -16.686967849731445
    8. '`s' → logprob: -17.436967849731445
    9. '_s' → logprob: -17.436967849731445
    10. ' ' → logprob: -17.811967849731445

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027950558811426163
    2. ':
' → logprob: -3.6529505252838135
    3. ' :' → logprob: -6.777950763702393
    4. ' :
' → logprob: -8.277950286865234
    5. '+' → logprob: -9.277950286865234
    6. '):' → logprob: -10.527950286865234
    7. ' and' → logprob: -10.527950286865234
    8. ':

' → logprob: -10.527950286865234
    9. '       ' → logprob: -11.152950286865234
    10. '   ' → logprob: -11.277950286865234

Token 151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7215134501457214
    2. ':
' → logprob: -1.2215135097503662
    3. '           ' → logprob: -2.221513509750366
    4. ':' → logprob: -2.346513509750366
    5. ' :
' → logprob: -5.221513271331787
    6. '       ' → logprob: -5.596513271331787
    7. '):
' → logprob: -6.721513271331787
    8. ' :' → logprob: -7.221513271331787
    9. '<|end|>' → logprob: -7.596513271331787
    10. '   ' → logprob: -7.721513271331787

Token 152: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.03376464545726776
    2. 'used' (adapté à ' used') → logprob: -3.783764600753784
    3. '           ' → logprob: -5.408764839172363
    4. '               ' → logprob: -5.408764839172363
    5. '   ' → logprob: -6.783764839172363
    6. '            
' → logprob: -9.408764839172363
    7. ' ' → logprob: -9.658764839172363
    8. '                
' → logprob: -9.783764839172363
    9. '    ' → logprob: -10.283764839172363
    10. '
' → logprob: -10.283764839172363

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -10.875020027160645
    3. ' [' → logprob: -15.000020027160645
    4. '[I' → logprob: -16.125019073486328
    5. ')[' → logprob: -16.375019073486328
    6. ')' → logprob: -16.750019073486328
    7. '[
' → logprob: -16.875019073486328
    8. '[:]' → logprob: -17.375019073486328
    9. ' =' → logprob: -17.500019073486328
    10. '=' → logprob: -17.625019073486328

Token 154: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2556934952735901
    2. '=' → logprob: -1.7556934356689453
    3. ']' → logprob: -3.2556934356689453
    4. ')' → logprob: -4.380693435668945
    5. ']=' → logprob: -6.630693435668945
    6. ' ]' → logprob: -8.630693435668945
    7. ')=' → logprob: -9.130693435668945
    8. ' ' → logprob: -9.880693435668945
    9. ' )' → logprob: -10.130693435668945
    10. 's' → logprob: -10.630693435668945

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693651020526886
    2. '=' → logprob: -2.126936435699463
    3. '=s' → logprob: -12.751936912536621
    4. '<|end|>' → logprob: -13.251936912536621
    5. ' ' → logprob: -13.376936912536621
    6. ')' → logprob: -13.751936912536621
    7. '=e' → logprob: -15.126936912536621
    8. ' =
' → logprob: -15.376936912536621
    9. '=end' → logprob: -15.376936912536621
    10. 's' → logprob: -15.376936912536621

Token 156: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011051355861127377
    2. ' e' → logprob: -4.511051177978516
    3. '   ' → logprob: -13.386051177978516
    4. '	e' → logprob: -13.886051177978516
    5. 'max' → logprob: -15.011051177978516
    6. ' ' → logprob: -15.261051177978516
    7. ' max' → logprob: -16.511051177978516
    8. '  ' → logprob: -16.886051177978516
    9. '           ' → logprob: -17.011051177978516
    10. 'end' → logprob: -17.261051177978516

Token 157: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01294220332056284
    2. '
' → logprob: -4.512942314147949
    3. '<|end|>' → logprob: -6.637942314147949
    4. '                
' → logprob: -8.01294231414795
    5. '           ' → logprob: -9.26294231414795
    6. '              ' → logprob: -10.13794231414795
    7. '  
' → logprob: -10.63794231414795
    8. '                ' → logprob: -10.76294231414795
    9. '                   ' → logprob: -11.13794231414795
    10. '
' → logprob: -11.63794231414795

Token 158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022356293629854918
    2. '                
' → logprob: -8.750223159790039
    3. '           ' → logprob: -10.875223159790039
    4. '              ' → logprob: -11.000223159790039
    5. '<|end|>' → logprob: -11.500223159790039
    6. '                ' → logprob: -12.375223159790039
    7. ',' → logprob: -12.875223159790039
    8. '                   ' → logprob: -13.000223159790039
    9. '               
' → logprob: -13.125223159790039
    10. '```' → logprob: -13.375223159790039

Token 159: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' (adapté à ' placed') → logprob: -0.3995266258716583
    2. ' placed' → logprob: -1.149526596069336
    3. '               ' → logprob: -4.399526596069336
    4. '           ' → logprob: -8.399526596069336
    5. 'Placed' → logprob: -10.899526596069336
    6. '       ' → logprob: -11.024526596069336
    7. '
' → logprob: -11.274526596069336
    8. '   ' → logprob: -11.774526596069336
    9. '                   ' → logprob: -12.774526596069336
    10. '```' → logprob: -13.024526596069336

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20169857144355774
    2. '=' → logprob: -1.7016985416412354
    3. '=True' → logprob: -8.201698303222656
    4. 'True' → logprob: -11.951698303222656
    5. ' True' → logprob: -13.326698303222656
    6. ' ' → logprob: -13.451698303222656
    7. '<|end|>' → logprob: -14.951698303222656
    8. '=False' → logprob: -15.326698303222656
    9. '(True' → logprob: -15.576698303222656
    10. 's' → logprob: -15.701698303222656

Token 161: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '=True' → logprob: -19.001928329467773
    4. '(True' → logprob: -19.126928329467773
    5. '   ' → logprob: -20.001928329467773
    6. 'Tr' → logprob: -21.376928329467773
    7. '.True' → logprob: -22.251928329467773
    8. 'False' → logprob: -22.376928329467773
    9. 'T' → logprob: -23.251928329467773
    10. 'true' → logprob: -23.501928329467773

Token 162: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4849443838757e-06
    2. '       ' → logprob: -13.375004768371582
    3. '           ' → logprob: -14.000004768371582
    4. '                
' → logprob: -14.375004768371582
    5. '              ' → logprob: -14.625004768371582
    6. '			' → logprob: -15.125004768371582
    7. '		       ' → logprob: -15.375004768371582
    8. '<|end|>' → logprob: -15.625004768371582
    9. '                ' → logprob: -16.000003814697266
    10. 'break' → logprob: -16.625003814697266

Token 163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.465036105713807e-06
    2. '       ' → logprob: -12.500007629394531
    3. '           ' → logprob: -13.875007629394531
    4. '			' → logprob: -14.375007629394531
    5. '              ' → logprob: -14.625007629394531
    6. '		       ' → logprob: -14.875007629394531
    7. '```' → logprob: -15.375007629394531
    8. 'break' → logprob: -15.500007629394531
    9. 'if' → logprob: -15.750007629394531
    10. ' if' → logprob: -15.875007629394531

Token 164: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2675691843032837
    2. ' break' → logprob: -1.7675691843032837
    3. 'break' (adapté à ' break') → logprob: -2.767569065093994
    4. '       ' → logprob: -7.017569065093994
    5. '           ' → logprob: -8.392569541931152
    6. '	break' → logprob: -9.767569541931152
    7. '   ' → logprob: -11.392569541931152
    8. ' ' → logprob: -13.392569541931152
    9. '              ' → logprob: -13.392569541931152
    10. '                   ' → logprob: -13.642569541931152

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000462366413557902
    2. '   ' → logprob: -7.750462532043457
    3. 'if' → logprob: -11.500462532043457
    4. '           ' → logprob: -12.625462532043457
    5. '```' → logprob: -12.625462532043457
    6. 'else' → logprob: -12.750462532043457
    7. '
' → logprob: -12.875462532043457
    8. '    
' → logprob: -13.250462532043457
    9. '        
' → logprob: -13.250462532043457
    10. ' if' → logprob: -13.625462532043457

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033208883833140135
    2. '   ' → logprob: -5.753320693969727
    3. 'if' → logprob: -9.628320693969727
    4. ' if' → logprob: -10.253320693969727
    5. '    ' → logprob: -11.253320693969727
    6. '
' → logprob: -11.878320693969727
    7. '    
' → logprob: -12.003320693969727
    8. '        
' → logprob: -12.253320693969727
    9. '```' → logprob: -12.503320693969727
    10. '      ' → logprob: -13.128320693969727

Token 167: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6293529868125916
    2. ' if' → logprob: -0.8793529868125916
    3. 'if' (adapté à ' if') → logprob: -3.0043530464172363
    4. '       ' → logprob: -6.379353046417236
    5. ' ' → logprob: -7.629353046417236
    6. '    ' → logprob: -9.004352569580078
    7. '  ' → logprob: -9.504352569580078
    8. '    
' → logprob: -11.129352569580078
    9. '```' → logprob: -11.379352569580078
    10. '
' → logprob: -11.629352569580078

Token 168: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.026318183168768883
    2. 'not' → logprob: -3.651318073272705
    3. '   ' → logprob: -11.901318550109863
    4. '	not' → logprob: -12.401318550109863
    5. '!' → logprob: -12.901318550109863
    6. ' ' → logprob: -13.526318550109863
    7. '```' → logprob: -14.401318550109863
    8. ' no' → logprob: -14.588818550109863
    9. ' ' → logprob: -14.713818550109863
    10. 'n' → logprob: -15.276318550109863

Token 169: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.0019287518225610256
    2. 'placed' → logprob: -6.251928806304932
    3. ' used' → logprob: -15.626928329467773
    4. 'Placed' → logprob: -17.751928329467773
    5. ' ' → logprob: -18.376928329467773
    6. 'plac' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.376928329467773
    8. 'used' → logprob: -20.501928329467773
    9. ' placé' → logprob: -20.501928329467773
    10. '   ' → logprob: -20.626928329467773

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001935661886818707
    2. ':
' → logprob: -6.2519354820251465
    3. ' :' → logprob: -12.751935958862305
    4. ':

' → logprob: -12.876935958862305
    5. ':
' → logprob: -14.876935958862305
    6. '   ' → logprob: -15.251935958862305
    7. ',' → logprob: -15.751935958862305
    8. '<|end|>' → logprob: -15.876935958862305
    9. ':def' → logprob: -16.501935958862305
    10. ':add' → logprob: -16.751935958862305

Token 171: '           ' (ID: 352)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.14035585522651672
    2. '           ' → logprob: -2.1403558254241943
    3. '       ' → logprob: -4.640356063842773
    4. '   ' → logprob: -5.890356063842773
    5. 'used' → logprob: -7.015356063842773
    6. '```' → logprob: -12.515356063842773
    7. '    ' → logprob: -12.890356063842773
    8. '  ' → logprob: -13.015356063842773
    9. ' ' → logprob: -13.140356063842773
    10. '
' → logprob: -13.390356063842773

Token 172: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.03541656583547592
    2. 'used' (adapté à ' used') → logprob: -3.410416603088379
    3. '   ' → logprob: -6.410416603088379
    4. '       ' → logprob: -9.160416603088379
    5. '           ' → logprob: -11.285416603088379
    6. ' ' → logprob: -12.785416603088379
    7. '  ' → logprob: -13.660416603088379
    8. '    ' → logprob: -13.785416603088379
    9. '.used' → logprob: -14.160416603088379
    10. '_used' → logprob: -14.910416603088379

Token 173: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004084927961230278
    2. '.' → logprob: -5.504085063934326
    3. '.app' → logprob: -12.504084587097168
    4. ').' → logprob: -14.129084587097168
    5. '.Append' → logprob: -14.504084587097168
    6. '.extend' → logprob: -15.004084587097168
    7. 'append' → logprob: -15.004084587097168
    8. '.add' → logprob: -15.379084587097168
    9. '.push' → logprob: -15.504084587097168
    10. '.ap' → logprob: -15.629084587097168

Token 174: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. '(end' → logprob: -18.500001907348633
    4. '(s' → logprob: -19.000001907348633
    5. '((' → logprob: -19.375001907348633
    6. ' (' → logprob: -20.500001907348633
    7. 'e' → logprob: -21.250001907348633
    8. '(E' → logprob: -21.500001907348633
    9. '(
' → logprob: -21.750001907348633
    10. '(event' → logprob: -23.250001907348633

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -14.000029563903809
    4. ')return' → logprob: -14.375029563903809
    5. '<|end|>' → logprob: -15.125029563903809
    6. ')add' → logprob: -16.750030517578125
    7. ')

' → logprob: -17.000030517578125
    8. '())' → logprob: -17.125030517578125
    9. '   ' → logprob: -17.250030517578125
    10. '))' → logprob: -17.375030517578125

Token 176: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5437774062156677
    2. '   ' → logprob: -0.9187774062156677
    3. '
' → logprob: -4.0437774658203125
    4. ' print' → logprob: -6.1687774658203125
    5. '```' → logprob: -7.7937774658203125
    6. '    
' → logprob: -7.9187774658203125
    7. '
' → logprob: -11.543777465820312
    8. '  
' → logprob: -11.668777465820312
    9. '``' → logprob: -12.668777465820312
    10. ' 
' → logprob: -12.668777465820312

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015145684592425823
    2. '   ' → logprob: -4.515145778656006
    3. ' print' → logprob: -5.765145778656006
    4. '
' → logprob: -7.015145778656006
    5. '```' → logprob: -9.890145301818848
    6. '    
' → logprob: -13.390145301818848
    7. '
' → logprob: -13.515145301818848
    8. '``' → logprob: -14.140145301818848
    9. ' ' → logprob: -14.640145301818848
    10. '	print' → logprob: -15.140145301818848

Token 178: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0001601539261173457
    2. '(' → logprob: -8.750160217285156
    3. 'len' → logprob: -14.375160217285156
    4. ' (' → logprob: -15.000160217285156
    5. ' len' → logprob: -15.250160217285156
    6. '(max' → logprob: -15.875160217285156
    7. '(min' → logprob: -16.000160217285156
    8. '(
' → logprob: -16.250160217285156
    9. '('' → logprob: -16.625160217285156
    10. '()' → logprob: -18.500160217285156

Token 179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -13.625001907348633
    3. 'used' → logprob: -16.000001907348633
    4. '(use' → logprob: -16.250001907348633
    5. ')' → logprob: -16.875001907348633
    6. ' used' → logprob: -19.000001907348633
    7. '(
' → logprob: -19.125001907348633
    8. '(user' → logprob: -19.875001907348633
    9. '(us' → logprob: -19.875001907348633
    10. '(

' → logprob: -20.125001907348633

Token 180: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.006732541602104902
    2. '(' → logprob: -5.00673246383667
    3. ' used' → logprob: -11.131732940673828
    4. ')' → logprob: -13.256732940673828
    5. ' ' → logprob: -16.006732940673828
    6. '_used' → logprob: -16.006732940673828
    7. '   ' → logprob: -16.381732940673828
    8. '```' → logprob: -16.381732940673828
    9. 'Used' → logprob: -16.631732940673828
    10. '[' → logprob: -16.756732940673828

Token 181: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.931863051955588e-05
    2. '))' → logprob: -9.750059127807617
    3. ' )' → logprob: -14.875059127807617
    4. ')`' → logprob: -15.625059127807617
    5. '())' → logprob: -15.750059127807617
    6. ')
' → logprob: -16.375059127807617
    7. ')}' → logprob: -16.875059127807617
    8. '})' → logprob: -17.000059127807617
    9. ')))' → logprob: -17.375059127807617
    10. '`)' → logprob: -17.750059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 162
Précision stricte (1ère position): 55.87%
Précision adaptée (1ère position): 58.66%
Précision (top 10): 90.50%
================================================================================
