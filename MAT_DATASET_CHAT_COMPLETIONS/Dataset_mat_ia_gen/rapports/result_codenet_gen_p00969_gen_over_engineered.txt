================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class ArithmeticProgressionFinder:
    class SequenceElement:
        def __init__(self, value: int, index: int):
            self.value = value
            self.index = index

        def __repr__(self):
            return f"Elem(val={self.value}, idx={self.index})"

    class APDynamicTable:
        def __init__(self, size: int):
            # For each index, map difference -> length of AP ending here with that diff
            self.dp = [{} for _ in range(size)]

        def get(self, idx: int, diff: int) -> int:
            return self.dp[idx].get(diff, 1)

        def set(self, idx: int, diff: int, length: int):
            self.dp[idx][diff] = length

        def max_length(self) -> int:
            max_len = 1
            for d in self.dp:
                if d:
                    max_len = max(max_len, max(d.values()))
            return max_len

    class InputParser:
        @staticmethod
        def parse() -> 'ArithmeticProgressionFinder.InputData':
            n = int(input())
            vals = list(map(int, input().split()))
            return ArithmeticProgressionFinder.InputData(n, vals)

    class InputData:
        def __init__(self, n: int, values: list[int]):
            self.n = n
            self.values = values

    def __init__(self, input_data: 'ArithmeticProgressionFinder.InputData'):
        self.n = input_data.n
        self.values = input_data.values
        self.elements = [self.SequenceElement(v, i) for i, v in enumerate(self.values)]

    def find_longest_ap(self) -> int:
        # Sort elements by value to manage ascending AP easily
        sorted_elements = sorted(self.elements, key=lambda e: e.value)
        val_to_idx = {e.value: i for i, e in enumerate(sorted_elements)}
        dp = self.APDynamicTable(self.n)
        max_len = 1

        # For each pair (j, i) with j < i, try to build AP ending at i with difference d
        for i in range(self.n):
            current = sorted_elements[i]
            for j in range(i):
                prev = sorted_elements[j]
                diff = current.value - prev.value
                # length of AP ending at j with difference diff, default 1 means just prev element
                length = dp.get(j, diff) + 1
                dp.set(i, diff, length)
                if length > max_len:
                    max_len = length

        return max_len

if __name__ == "__main__":
    input_data = ArithmeticProgressionFinder.InputParser.parse()
    finder = ArithmeticProgressionFinder(input_data)
    print(finder.find_longest_ap())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Arithmetic' (ID: 179942)
  → Token d'amorce (pas de prédiction)

Token 2: 'Progress' (ID: 11356)
  → Token d'amorce (pas de prédiction)

Token 3: 'ion' (ID: 294)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35178515315055847
    2. ':' → logprob: -1.8517851829528809
    3. '{' → logprob: -2.601785182952881
    4. 's' → logprob: -3.101785182952881
    5. 'ical' → logprob: -4.476785182952881
    6. 'ic' → logprob: -6.101785182952881
    7. '```' → logprob: -6.351785182952881
    8. '():' → logprob: -6.851785182952881
    9. '({' → logprob: -7.351785182952881
    10. '.' → logprob: -7.726785182952881

Token 4: 'Finder' (ID: 42976)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07242800295352936
    2. ':' → logprob: -2.697427988052368
    3. '(:' → logprob: -6.197428226470947
    4. '{' → logprob: -8.322427749633789
    5. '.' → logprob: -9.447427749633789
    6. '():' → logprob: -10.322427749633789
    7. '```' → logprob: -10.322427749633789
    8. '(
' → logprob: -11.822427749633789
    9. ' :' → logprob: -11.947427749633789
    10. '(object' → logprob: -12.072427749633789

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3808576762676239
    2. '(' → logprob: -1.7558577060699463
    3. '.' → logprob: -2.2558577060699463
    4. '{' → logprob: -3.2558577060699463
    5. '(:' → logprob: -8.380857467651367
    6. '[' → logprob: -9.005857467651367
    7. ' {' → logprob: -9.755857467651367
    8. ' ' → logprob: -10.255857467651367
    9. '```' → logprob: -10.255857467651367
    10. ' :' → logprob: -11.130857467651367

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6518086791038513
    2. ':' → logprob: -0.9018086791038513
    3. '```' → logprob: -3.526808738708496
    4. '   ' → logprob: -3.651808738708496
    5. '(
' → logprob: -5.526808738708496
    6. ':
' → logprob: -5.901808738708496
    7. '.' → logprob: -6.151808738708496
    8. ' ' → logprob: -6.276808738708496
    9. ''' → logprob: -6.776808738708496
    10. '[' → logprob: -7.026808738708496

Token 7: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7309248447418213
    2. ' def' → logprob: -1.3559248447418213
    3. ' ' → logprob: -2.1059248447418213
    4. '    ' → logprob: -2.9809248447418213
    5. '```' → logprob: -3.1059248447418213
    6. '_' → logprob: -4.605924606323242
    7. ' ```' → logprob: -4.730924606323242
    8. 'def' → logprob: -5.480924606323242
    9. '(' → logprob: -5.605924606323242
    10. ' 
' → logprob: -5.605924606323242

Token 8: ' Sequence' (ID: 57144)
  Prédit: ' Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Arithmetic' → logprob: -0.7010562419891357
    2. ' ' → logprob: -0.9510562419891357
    3. ' Method' → logprob: -4.076056480407715
    4. ' Methods' → logprob: -4.076056480407715
    5. 'Arithmetic' → logprob: -4.076056480407715
    6. 'Method' → logprob: -4.326056480407715
    7. ' Variable' → logprob: -4.451056480407715
    8. 'Methods' → logprob: -4.451056480407715
    9. 'method' → logprob: -5.326056480407715
    10. '   ' → logprob: -5.576056480407715

Token 9: 'Element' (ID: 2394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7165368795394897
    2. '[' → logprob: -1.0915368795394897
    3. ':' → logprob: -2.4665369987487793
    4. '.' → logprob: -3.0915369987487793
    5. '   ' → logprob: -4.216536998748779
    6. ' (' → logprob: -4.841536998748779
    7. '       ' → logprob: -6.091536998748779
    8. '```' → logprob: -6.091536998748779
    9. ' ' → logprob: -6.341536998748779
    10. 'Base' → logprob: -6.591536998748779

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4297749698162079
    2. '(' → logprob: -1.0547749996185303
    3. ':
' → logprob: -8.05477523803711
    4. '[' → logprob: -8.17977523803711
    5. '```' → logprob: -8.92977523803711
    6. '(
' → logprob: -9.42977523803711
    7. '(:' → logprob: -9.92977523803711
    8. '<|end|>' → logprob: -10.05477523803711
    9. '.' → logprob: -10.30477523803711
    10. '(object' → logprob: -10.80477523803711

Token 11: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03902851790189743
    2. '(
' → logprob: -4.664028644561768
    3. '   ' → logprob: -4.789028644561768
    4. '    ' → logprob: -5.164028644561768
    5. '       ' → logprob: -5.414028644561768
    6. ' (' → logprob: -6.039028644561768
    7. '[' → logprob: -6.664028644561768
    8. '\' → logprob: -7.039028644561768
    9. '<|end|>' → logprob: -7.164028644561768
    10. ''' → logprob: -7.289028644561768

Token 12: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1042559146881104
    2. '       ' → logprob: -1.3542559146881104
    3. '(' → logprob: -2.1042559146881104
    4. 'def' (adapté à ' def') → logprob: -2.7292559146881104
    5. '```' → logprob: -2.7292559146881104
    6. 'pass' → logprob: -3.3542559146881104
    7. '        ' → logprob: -3.8542559146881104
    8. '`' → logprob: -4.229255676269531
    9. '``' → logprob: -4.479255676269531
    10. '   ' → logprob: -4.479255676269531

Token 13: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0019575366750359535
    2. '__' → logprob: -6.376957416534424
    3. ' init' → logprob: -8.876957893371582
    4. '_init' → logprob: -9.626957893371582
    5. ' ' → logprob: -11.251957893371582
    6. ' _' → logprob: -11.501957893371582
    7. 'init' → logprob: -11.501957893371582
    8. '_' → logprob: -12.001957893371582
    9. ' ' → logprob: -12.126957893371582
    10. ' initialize' → logprob: -13.626957893371582

Token 14: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6047699318733066e-05
    2. 'i' → logprob: -11.375016212463379
    3. 'in' → logprob: -13.375016212463379
    4. 'ini' → logprob: -13.750016212463379
    5. 'int' → logprob: -13.875016212463379
    6. ' init' → logprob: -13.875016212463379
    7. 'inti' → logprob: -17.500015258789062
    8. 'inite' → logprob: -17.750015258789062
    9. '```' → logprob: -19.375015258789062
    10. 'innit' → logprob: -19.500015258789062

Token 15: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11923322081565857
    2. '__' → logprob: -2.2442331314086914
    3. '(' → logprob: -5.494233131408691
    4. '(self' → logprob: -6.869233131408691
    5. '__(
' → logprob: -7.119233131408691
    6. '__((' → logprob: -8.744233131408691
    7. '__('' → logprob: -9.244233131408691
    8. ' (' → logprob: -9.744233131408691
    9. '<|end|>' → logprob: -10.619233131408691
    10. '__(*' → logprob: -10.869233131408691

Token 16: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013304755557328463
    2. ' self' → logprob: -6.626330375671387
    3. '(self' → logprob: -12.626330375671387
    4. '       ' → logprob: -14.751330375671387
    5. ')' → logprob: -15.251330375671387
    6. ',self' → logprob: -15.376330375671387
    7. ' ' → logprob: -15.876330375671387
    8. '0' → logprob: -16.376331329345703
    9. '           ' → logprob: -16.751331329345703
    10. '	self' → logprob: -16.751331329345703

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1754108965396881
    2. 'self' → logprob: -2.4254109859466553
    3. ' ,' → logprob: -2.8004109859466553
    4. ' self' → logprob: -5.300410747528076
    5. ')' → logprob: -5.800410747528076
    6. '(self' → logprob: -6.550410747528076
    7. ' )' → logprob: -7.425410747528076
    8. ' (' → logprob: -8.050411224365234
    9. ',self' → logprob: -8.050411224365234
    10. '_' → logprob: -8.425411224365234

Token 18: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2168997824192047
    2. ' self' → logprob: -1.9668997526168823
    3. 'value' → logprob: -3.466899871826172
    4. ' value' → logprob: -4.341899871826172
    5. 'index' → logprob: -5.216899871826172
    6. 'sequence' → logprob: -6.091899871826172
    7. ' index' → logprob: -6.841899871826172
    8. 'start' → logprob: -7.216899871826172
    9. ' sequence' → logprob: -7.466899871826172
    10. ' start' → logprob: -8.091899871826172

Token 19: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047234646044671535
    2. '):' → logprob: -5.37972354888916
    3. ' ,' → logprob: -9.37972354888916
    4. ':' → logprob: -12.50472354888916
    5. ',int' → logprob: -12.75472354888916
    6. ')' → logprob: -12.75472354888916
    7. '<|end|>' → logprob: -12.87972354888916
    8. '):
' → logprob: -13.50472354888916
    9. '=' → logprob: -13.75472354888916
    10. '   ' → logprob: -14.12972354888916

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.632970929145813
    2. ' int' → logprob: -0.757970929145813
    3. ')' → logprob: -8.507970809936523
    4. ' )' → logprob: -9.257970809936523
    5. ':int' → logprob: -11.007970809936523
    6. 'float' → logprob: -11.132970809936523
    7. ' float' → logprob: -11.132970809936523
    8. '=int' → logprob: -11.757970809936523
    9. '(int' → logprob: -12.632970809936523
    10. '[int' → logprob: -12.632970809936523

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47573721408843994
    2. '):' → logprob: -0.9757372140884399
    3. ')' → logprob: -7.35073709487915
    4. '):
' → logprob: -7.72573709487915
    5. ' ,' → logprob: -7.85073709487915
    6. '       ' → logprob: -9.725737571716309
    7. ' ):' → logprob: -9.850737571716309
    8. '   ' → logprob: -10.475737571716309
    9. ',int' → logprob: -11.975737571716309
    10. '),' → logprob: -12.225737571716309

Token 22: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.031058499589562416
    2. 'index' → logprob: -3.9060585498809814
    3. ' position' → logprob: -5.031058311462402
    4. ' next' → logprob: -6.031058311462402
    5. ' is' → logprob: -8.406058311462402
    6. ' previous' → logprob: -8.656058311462402
    7. ' ' → logprob: -8.906058311462402
    8. ' difference' → logprob: -8.906058311462402
    9. ' step' → logprob: -9.156058311462402
    10. ' )' → logprob: -9.406058311462402

Token 23: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002436900744214654
    2. '):
' → logprob: -6.877437114715576
    3. ')' → logprob: -7.502437114715576
    4. ':' → logprob: -7.502437114715576
    5. '=' → logprob: -8.877436637878418
    6. ',' → logprob: -9.627436637878418
    7. ' ):' → logprob: -9.877436637878418
    8. '   ' → logprob: -11.002436637878418
    9. ' ' → logprob: -11.752436637878418
    10. '<|end|>' → logprob: -12.627436637878418

Token 24: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34918323159217834
    2. ' int' → logprob: -1.224183201789856
    3. ')' → logprob: -7.849183082580566
    4. ':int' → logprob: -8.599183082580566
    5. '[int' → logprob: -10.099183082580566
    6. '<int' → logprob: -10.599183082580566
    7. '0' → logprob: -10.724183082580566
    8. '=int' → logprob: -10.849183082580566
    9. '<|end|>' → logprob: -11.099183082580566
    10. ' ' → logprob: -11.224183082580566

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019221604452468455
    2. ')' → logprob: -9.125192642211914
    3. '):
' → logprob: -10.000192642211914
    4. '       ' → logprob: -10.750192642211914
    5. ':' → logprob: -11.875192642211914
    6. '   ' → logprob: -12.125192642211914
    7. ',' → logprob: -12.875192642211914
    8. ' ):' → logprob: -14.250192642211914
    9. '):
' → logprob: -15.625192642211914
    10. '```' → logprob: -15.750192642211914

Token 26: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19114194810390472
    2. '           ' → logprob: -2.3161418437957764
    3. ')' → logprob: -3.0661418437957764
    4. '       ' → logprob: -4.1911420822143555
    5. ':' → logprob: -5.1911420822143555
    6. '```' → logprob: -6.6911420822143555
    7. ',' → logprob: -6.8161420822143555
    8. '):
' → logprob: -7.0661420822143555
    9. '        ' → logprob: -7.1911420822143555
    10. '   ' → logprob: -7.1911420822143555

Token 27: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.40321847796440125
    2. '               ' → logprob: -1.2782185077667236
    3. ' self' → logprob: -3.0282185077667236
    4. '           ' → logprob: -5.4032182693481445
    5. ' ' → logprob: -9.528218269348145
    6. '   ' → logprob: -9.653218269348145
    7. '             ' → logprob: -9.903218269348145
    8. '       ' → logprob: -10.153218269348145
    9. '            ' → logprob: -10.153218269348145
    10. '_self' → logprob: -10.528218269348145

Token 28: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16025854647159576
    2. '.value' → logprob: -1.9102585315704346
    3. 'value' → logprob: -10.785258293151855
    4. ' .' → logprob: -11.785258293151855
    5. ' value' → logprob: -13.910258293151855
    6. '=' → logprob: -14.785258293151855
    7. '.val' → logprob: -14.785258293151855
    8. '.code' → logprob: -14.785258293151855
    9. '<|end|>' → logprob: -15.035258293151855
    10. '.data' → logprob: -15.160258293151855

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2848159968852997
    2. ' =' → logprob: -1.409816026687622
    3. '<|end|>' → logprob: -5.909815788269043
    4. ' ' → logprob: -7.909815788269043
    5. ')' → logprob: -8.159815788269043
    6. ',' → logprob: -9.284815788269043
    7. '_' → logprob: -9.784815788269043
    8. '<|end|>' → logprob: -9.909815788269043
    9. ' =)' → logprob: -10.534815788269043
    10. '.' → logprob: -11.909815788269043

Token 30: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.061969030648469925
    2. 'value' → logprob: -2.811969041824341
    3. '(value' → logprob: -15.186968803405762
    4. ' ' → logprob: -15.186968803405762
    5. '	value' → logprob: -15.561968803405762
    6. ')value' → logprob: -15.561968803405762
    7. '"value' → logprob: -15.686968803405762
    8. '    ' → logprob: -16.311969757080078
    9. ' ' → logprob: -16.686969757080078
    10. '$value' → logprob: -17.061969757080078

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6937350630760193
    2. '
' → logprob: -1.068735122680664
    3. '<|end|>' → logprob: -3.193735122680664
    4. ' ' → logprob: -3.318735122680664
    5. ' 
' → logprob: -3.943735122680664
    6. '            
' → logprob: -4.318735122680664
    7. 'self' (adapté à ' self') → logprob: -4.443735122680664
    8. '       ' → logprob: -5.193735122680664
    9. ',' → logprob: -5.568735122680664
    10. '            ' → logprob: -5.693735122680664

Token 34: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014120421838015318
    2. '.index' → logprob: -9.375141143798828
    3. ')' → logprob: -11.500141143798828
    4. ' ' → logprob: -11.625141143798828
    5. 'index' → logprob: -11.625141143798828
    6. '.value' → logprob: -11.750141143798828
    7. ' .' → logprob: -12.000141143798828
    8. '_' → logprob: -12.500141143798828
    9. '_index' → logprob: -12.875141143798828
    10. '=' → logprob: -13.625141143798828

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769397616386414
    2. '=' → logprob: -0.8269397616386414
    3. ' ' → logprob: -7.951939582824707
    4. ')' → logprob: -8.076939582824707
    5. '<|end|>' → logprob: -8.451939582824707
    6. ' ==' → logprob: -10.201939582824707
    7. ' =
' → logprob: -10.826939582824707
    8. '<|end|>' → logprob: -11.201939582824707
    9. '.' → logprob: -11.326939582824707
    10. ' +=' → logprob: -12.201939582824707

Token 36: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.02977478876709938
    2. 'index' → logprob: -3.5297749042510986
    3. ' ' → logprob: -11.02977466583252
    4. '#index' → logprob: -12.90477466583252
    5. '(index' → logprob: -13.52977466583252
    6. '	index' → logprob: -13.65477466583252
    7. '=index' → logprob: -13.77977466583252
    8. '[index' → logprob: -14.15477466583252
    9. '@index' → logprob: -14.77977466583252
    10. ':index' → logprob: -15.40477466583252

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07294534146785736
    2. '    
' → logprob: -3.6979453563690186
    3. '   ' → logprob: -4.0729451179504395
    4. 'newline' → logprob: -5.3229451179504395
    5. '<|end|>' → logprob: -5.4479451179504395
    6. '       ' → logprob: -5.5729451179504395
    7. '\n' → logprob: -5.6979451179504395
    8. '```' → logprob: -5.8229451179504395
    9. '

' → logprob: -6.4479451179504395
    10. '        
' → logprob: -6.4479451179504395

Token 38: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007330690510571003
    2. '   ' → logprob: -6.007330894470215
    3. '    
' → logprob: -6.132330894470215
    4. '

' → logprob: -6.382330894470215
    5. '
    
' → logprob: -8.257330894470215
    6. ' 
' → logprob: -8.757330894470215
    7. '```' → logprob: -9.382330894470215
    8. '  
' → logprob: -9.382330894470215
    9. '<|end|>' → logprob: -9.382330894470215
    10. '\n' → logprob: -9.507330894470215

Token 39: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015416168607771397
    2. '   ' → logprob: -5.390416145324707
    3. 'def' (adapté à ' def') → logprob: -5.390416145324707
    4. '    
' → logprob: -6.390416145324707
    5. '

' → logprob: -6.515416145324707
    6. '       ' → logprob: -6.890416145324707
    7. '        
' → logprob: -7.390416145324707
    8. '```' → logprob: -8.265416145324707
    9. '\n' → logprob: -8.390416145324707
    10. 'newline' → logprob: -8.640416145324707

Token 40: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6760293245315552
    2. ' ' → logprob: -0.8010293245315552
    3. '_' → logprob: -3.8010292053222656
    4. ' ==' → logprob: -4.801029205322266
    5. ' _' → logprob: -5.176029205322266
    6. '__' → logprob: -5.801029205322266
    7. '.' → logprob: -7.551029205322266
    8. ' .' → logprob: -7.926029205322266
    9. '  ' → logprob: -8.051029205322266
    10. ' `' → logprob: -8.551029205322266

Token 41: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.08345086872577667
    2. 'lt' → logprob: -2.5834507942199707
    3. 'repr' → logprob: -5.458450794219971
    4. 'str' → logprob: -9.208451271057129
    5. 'init' → logprob: -9.208451271057129
    6. 'le' → logprob: -10.083451271057129
    7. 'e' → logprob: -11.208451271057129
    8. 'hash' → logprob: -11.333451271057129
    9. 'gt' → logprob: -11.958451271057129
    10. 'ne' → logprob: -12.708451271057129

Token 42: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8717042803764343
    2. '__' → logprob: -0.9967042803764343
    3. '__(' → logprob: -1.746704339981079
    4. '_' → logprob: -3.496704339981079
    5. '__(
' → logprob: -5.6217041015625
    6. '__('' → logprob: -5.8717041015625
    7. '_(' → logprob: -7.6217041015625
    8. '__((' → logprob: -8.2467041015625
    9. '__("' → logprob: -8.4967041015625
    10. '___' → logprob: -8.4967041015625

Token 43: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009918407537043095
    2. ')' → logprob: -4.634918212890625
    3. ' self' → logprob: -9.634918212890625
    4. ' ' → logprob: -10.259918212890625
    5. ' )' → logprob: -10.634918212890625
    6. 's' → logprob: -11.134918212890625
    7. '<|end|>' → logprob: -11.259918212890625
    8. '_self' → logprob: -13.634918212890625
    9. '):' → logprob: -13.759918212890625
    10. '
' → logprob: -13.759918212890625

Token 44: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8123487234115601
    2. '):' → logprob: -0.9373487234115601
    3. ',' → logprob: -1.81234872341156
    4. '.' → logprob: -7.93734884262085
    5. ' )' → logprob: -8.562348365783691
    6. ' ,' → logprob: -8.687348365783691
    7. ' ):' → logprob: -8.687348365783691
    8. '):
' → logprob: -8.812348365783691
    9. ',)' → logprob: -10.312348365783691
    10. ':' → logprob: -10.812348365783691

Token 45: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07986439764499664
    2. ' return' → logprob: -3.829864501953125
    3. '            ' → logprob: -3.954864501953125
    4. '        ' → logprob: -4.704864501953125
    5. 'return' → logprob: -4.954864501953125
    6. '       ' → logprob: -5.329864501953125
    7. '"' → logprob: -5.454864501953125
    8. ' f' → logprob: -5.579864501953125
    9. ''' → logprob: -6.329864501953125
    10. 'f' → logprob: -6.454864501953125

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3670242428779602
    2. 'return' (adapté à ' return') → logprob: -1.2420241832733154
    3. '           ' → logprob: -4.1170244216918945
    4. ' f' → logprob: -6.4920244216918945
    5. '       ' → logprob: -8.742024421691895
    6. 'f' → logprob: -9.242024421691895
    7. '   ' → logprob: -9.492024421691895
    8. '        ' → logprob: -9.617024421691895
    9. '    ' → logprob: -10.242024421691895
    10. ' ' → logprob: -10.242024421691895

Token 47: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.575950562953949
    2. 'f' → logprob: -0.825950562953949
    3. ''f' → logprob: -12.075950622558594
    4. '	f' → logprob: -13.075950622558594
    5. ''' → logprob: -13.825950622558594
    6. ' ' → logprob: -13.950950622558594
    7. ' ' → logprob: -13.950950622558594
    8. '"' → logprob: -14.700950622558594
    9. '(f' → logprob: -16.200950622558594
    10. '`' → logprob: -16.700950622558594

Token 48: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09639634191989899
    2. ''f' → logprob: -3.9713964462280273
    3. '"A' → logprob: -4.221396446228027
    4. ''' → logprob: -4.221396446228027
    5. ''S' → logprob: -4.471396446228027
    6. '"{' → logprob: -4.596396446228027
    7. ''s' → logprob: -4.846396446228027
    8. 'f' → logprob: -5.346396446228027
    9. '"S' → logprob: -5.846396446228027
    10. ''{' → logprob: -5.846396446228027

Token 49: 'Elem' (ID: 32665)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.3967114984989166
    2. 'Arithmetic' → logprob: -1.1467114686965942
    3. '{' → logprob: -4.771711349487305
    4. '({' → logprob: -7.646711349487305
    5. '(' → logprob: -7.646711349487305
    6. 'self' → logprob: -8.521711349487305
    7. 'Sequ' → logprob: -10.521711349487305
    8. '(self' → logprob: -10.521711349487305
    9. 'Ar' → logprob: -10.646711349487305
    10. 'Seq' → logprob: -11.021711349487305

Token 50: '(val' (ID: 17391)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -3.416665640543215e-05
    2. '[' → logprob: -10.50003433227539
    3. '(ent' → logprob: -12.62503433227539
    4. '```' → logprob: -13.62503433227539
    5. 'entation' → logprob: -14.00003433227539
    6. 'ents' → logprob: -15.00003433227539
    7. 'en' → logprob: -15.50003433227539
    8. '(' → logprob: -15.62503433227539
    9. '{' → logprob: -16.00003433227539
    10. 'ент' → logprob: -17.25003433227539

Token 51: '={' (ID: 1693)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.0361076593399048
    2. '=' → logprob: -1.6611076593399048
    3. 'ue' → logprob: -1.6611076593399048
    4. '={' → logprob: -2.1611075401306152
    5. ')' → logprob: -2.2861075401306152
    6. 'ent' → logprob: -3.7861075401306152
    7. ':' → logprob: -4.286107540130615
    8. '=value' → logprob: -6.036107540130615
    9. ',' → logprob: -6.161107540130615
    10. '```' → logprob: -6.286107540130615

Token 52: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002849806100130081
    2. '{' → logprob: -5.877849578857422
    3. ' self' → logprob: -10.377849578857422
    4. 'elf' → logprob: -11.377849578857422
    5. 'value' → logprob: -15.002849578857422
    6. 's' → logprob: -15.502849578857422
    7. '   ' → logprob: -15.877849578857422
    8. 'f' → logprob: -15.877849578857422
    9. '{
' → logprob: -16.002849578857422
    10. 'repr' → logprob: -16.127849578857422

Token 53: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0005923516000621021
    2. 'alue' → logprob: -7.625592231750488
    3. 'ue' → logprob: -9.750592231750488
    4. 'value' → logprob: -10.250592231750488
    5. '.' → logprob: -12.250592231750488
    6. '.val' → logprob: -13.625592231750488
    7. '(value' → logprob: -13.625592231750488
    8. 'self' → logprob: -14.625592231750488
    9. 'e' → logprob: -14.750592231750488
    10. 'ALUE' → logprob: -15.000592231750488

Token 54: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.1638326346874237
    2. ',' → logprob: -1.913832664489746
    3. '}' → logprob: -6.163832664489746
    4. ' },' → logprob: -7.413832664489746
    5. '},"' → logprob: -7.788832664489746
    6. ' ,' → logprob: -8.413832664489746
    7. '},
' → logprob: -9.663832664489746
    8. '}"' → logprob: -10.038832664489746
    9. '),' → logprob: -10.288832664489746
    10. ' ' → logprob: -10.413832664489746

Token 55: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.43036651611328125
    2. ' index' → logprob: -1.0553665161132812
    3. 'index' → logprob: -7.055366516113281
    4. ' i' → logprob: -8.055366516113281
    5. 'idx' → logprob: -8.430366516113281
    6. ' ' → logprob: -9.430366516113281
    7. ' ' → logprob: -9.680366516113281
    8. ' ind' → logprob: -10.430366516113281
    9. ' indx' → logprob: -10.430366516113281
    10. ' ix' → logprob: -10.680366516113281

Token 56: '={' (ID: 1693)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5321474671363831
    2. '={' → logprob: -0.9071474671363831
    3. '}' → logprob: -4.782147407531738
    4. '=' → logprob: -8.032147407531738
    5. '}{' → logprob: -9.157147407531738
    6. '{i' → logprob: -9.907147407531738
    7. ')' → logprob: -10.907147407531738
    8. ')}' → logprob: -11.032147407531738
    9. '})' → logprob: -11.532147407531738
    10. '=self' → logprob: -11.532147407531738

Token 57: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38705286383628845
    2. '{' → logprob: -1.1370528936386108
    3. ' self' → logprob: -8.762052536010742
    4. ' {' → logprob: -12.012052536010742
    5. '{s' → logprob: -12.762052536010742
    6. '}' → logprob: -13.012052536010742
    7. '}{' → logprob: -13.012052536010742
    8. '{
' → logprob: -13.137052536010742
    9. 'f' → logprob: -13.137052536010742
    10. '{}' → logprob: -13.387052536010742

Token 58: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.01838579773902893
    2. '.' → logprob: -4.518385887145996
    3. '}.' → logprob: -5.643385887145996
    4. '}' → logprob: -6.393385887145996
    5. 'index' → logprob: -7.393385887145996
    6. 'ex' → logprob: -7.518385887145996
    7. '})' → logprob: -8.393385887145996
    8. '.idx' → logprob: -8.393385887145996
    9. 'nd' → logprob: -9.018385887145996
    10. '.value' → logprob: -9.393385887145996

Token 59: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0644560307264328
    2. ')"' → logprob: -3.689455986022949
    3. ')' → logprob: -3.814455986022949
    4. '}"' → logprob: -4.564455986022949
    5. ')}' → logprob: -5.564455986022949
    6. '}' → logprob: -7.064455986022949
    7. '}")' → logprob: -9.06445598602295
    8. ' })' → logprob: -9.31445598602295
    9. ' )' → logprob: -9.93945598602295
    10. '))' → logprob: -11.93945598602295

Token 60: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006233552470803261
    2. ')' → logprob: -5.5062336921691895
    3. ')"' → logprob: -6.5062336921691895
    4. '"
' → logprob: -8.131233215332031
    5. '\n' → logprob: -8.756233215332031
    6. '")' → logprob: -9.756233215332031
    7. '"""' → logprob: -9.881233215332031
    8. '       ' → logprob: -11.256233215332031
    9. '```' → logprob: -11.256233215332031
    10. '
' → logprob: -11.506233215332031

Token 61: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16045483946800232
    2. '   ' → logprob: -2.035454750061035
    3. '    
' → logprob: -4.660454750061035
    4. '<|end|>' → logprob: -5.160454750061035
    5. '<|end|>' → logprob: -7.035454750061035
    6. '

' → logprob: -8.160454750061035
    7. '
    
' → logprob: -8.910454750061035
    8. '    ' → logprob: -9.035454750061035
    9. '\n' → logprob: -9.160454750061035
    10. ' 
' → logprob: -9.410454750061035

Token 62: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36331215500831604
    2. 'def' → logprob: -1.8633121252059937
    3. '
' → logprob: -2.738312244415283
    4. ' def' → logprob: -3.363312244415283
    5. '    
' → logprob: -3.488312244415283
    6. ' 
' → logprob: -4.988312244415283
    7. ' ' → logprob: -5.238312244415283
    8. '    ' → logprob: -5.863312244415283
    9. '   
' → logprob: -6.988312244415283
    10. '	def' → logprob: -7.363312244415283

Token 63: ' AP' (ID: 13165)
  Prédit: ' Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.48921364545822144
    2. ' Arithmetic' → logprob: -1.8642137050628662
    3. ' Difference' → logprob: -2.489213705062866
    4. ' Step' → logprob: -3.614213705062866
    5. ' Solution' → logprob: -4.114213466644287
    6. ' Node' → logprob: -4.364213466644287
    7. ' Helper' → logprob: -4.739213466644287
    8. ' Element' → logprob: -4.864213466644287
    9. ' Sub' → logprob: -5.114213466644287
    10. ' ' → logprob: -5.239213466644287

Token 64: 'Dynamic' (ID: 29346)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.11223503947257996
    2. 'Segment' → logprob: -3.4872350692749023
    3. 'Checker' → logprob: -3.4872350692749023
    4. 'Element' → logprob: -4.362235069274902
    5. 'Sequence' → logprob: -4.362235069274902
    6. 'Iterator' → logprob: -5.612235069274902
    7. 'Searcher' → logprob: -5.862235069274902
    8. 'Candidate' → logprob: -6.362235069274902
    9. 'Search' → logprob: -6.737235069274902
    10. 'Helper' → logprob: -6.862235069274902

Token 65: 'Table' (ID: 3429)
  Prédit: 'Programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Programming' → logprob: -0.0008082019630819559
    2. 'Program' → logprob: -7.500808238983154
    3. 'rogram' → logprob: -8.875807762145996
    4. ' Programming' → logprob: -9.500807762145996
    5. ' programming' → logprob: -10.750807762145996
    6. 'ogram' → logprob: -12.375807762145996
    7. 'program' → logprob: -12.625807762145996
    8. ' ' → logprob: -12.875807762145996
    9. 'Prog' → logprob: -13.250807762145996
    10. 'Programm' → logprob: -13.500807762145996

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000513952283654362
    2. ':
' → logprob: -8.000514030456543
    3. '(' → logprob: -9.250514030456543
    4. ' :' → logprob: -10.250514030456543
    5. '):' → logprob: -11.375514030456543
    6. '   ' → logprob: -11.875514030456543
    7. '<|end|>' → logprob: -12.250514030456543
    8. '[' → logprob: -12.375514030456543
    9. '(object' → logprob: -12.875514030456543
    10. '():' → logprob: -13.125514030456543

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010088709183037281
    2. '   ' → logprob: -5.635088920593262
    3. '(' → logprob: -6.635088920593262
    4. '    ' → logprob: -7.010088920593262
    5. '<|end|>' → logprob: -7.385088920593262
    6. '(n' → logprob: -7.760088920593262
    7. '     ' → logprob: -7.885088920593262
    8. ' ' → logprob: -8.010088920593262
    9. '
' → logprob: -8.010088920593262
    10. '        ' → logprob: -8.260088920593262

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8711374998092651
    2. ' def' → logprob: -1.1211374998092651
    3. '   ' → logprob: -2.1211376190185547
    4. '       ' → logprob: -2.8711376190185547
    5. '    ' → logprob: -3.1211376190185547
    6. ' ' → logprob: -4.121137619018555
    7. 'class' → logprob: -5.371137619018555
    8. '        ' → logprob: -5.746137619018555
    9. ':' → logprob: -6.371137619018555
    10. '(' → logprob: -6.371137619018555

Token 69: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001367261866107583
    2. '__' → logprob: -7.001367092132568
    3. ' ' → logprob: -8.501367568969727
    4. '_' → logprob: -8.876367568969727
    5. ' ___' → logprob: -10.126367568969727
    6. ' _' → logprob: -11.251367568969727
    7. ' []' → logprob: -11.626367568969727
    8. ' ' → logprob: -11.876367568969727
    9. ' "__' → logprob: -12.126367568969727
    10. ' ____' → logprob: -12.251367568969727

Token 70: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00025108797126449645
    2. 'i' → logprob: -8.750250816345215
    3. 'in' → logprob: -9.875250816345215
    4. 'int' → logprob: -11.000250816345215
    5. 'ini' → logprob: -12.250250816345215
    6. '__' → logprob: -12.375250816345215
    7. 'ap' → logprob: -12.375250816345215
    8. '   ' → logprob: -13.125250816345215
    9. '`' → logprob: -13.750250816345215
    10. ' init' → logprob: -14.000250816345215

Token 71: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9150391221046448
    2. '(self' → logprob: -1.0400390625
    3. '__(' → logprob: -2.0400390625
    4. ' (' → logprob: -2.4150390625
    5. '_' → logprob: -4.4150390625
    6. '__' → logprob: -4.9150390625
    7. '_(' → logprob: -5.2900390625
    8. ',' → logprob: -6.6650390625
    9. ')(' → logprob: -8.0400390625
    10. ' ' → logprob: -8.7900390625

Token 72: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012627330143004656
    2. ' self' → logprob: -6.751262664794922
    3. ')' → logprob: -9.626262664794922
    4. '       ' → logprob: -11.376262664794922
    5. '(self' → logprob: -13.001262664794922
    6. '           ' → logprob: -13.001262664794922
    7. '):
' → logprob: -13.376262664794922
    8. ' ' → logprob: -13.376262664794922
    9. ',' → logprob: -13.501262664794922
    10. '0' → logprob: -13.626262664794922

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0894622728228569
    2. ' ,' → logprob: -2.4644622802734375
    3. 'self' → logprob: -8.839462280273438
    4. ' ' → logprob: -8.839462280273438
    5. ')' → logprob: -9.339462280273438
    6. ' )' → logprob: -9.964462280273438
    7. '):' → logprob: -9.964462280273438
    8. ' ):' → logprob: -10.839462280273438
    9. '_,' → logprob: -11.339462280273438
    10. '  ' → logprob: -12.339462280273438

Token 74: ' size' (ID: 2349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28914740681648254
    2. ' self' → logprob: -1.7891473770141602
    3. '):' → logprob: -3.28914737701416
    4. ' ):' → logprob: -4.78914737701416
    5. '):
' → logprob: -5.03914737701416
    6. 'size' → logprob: -5.03914737701416
    7. 'capacity' → logprob: -5.78914737701416
    8. ')' → logprob: -5.78914737701416
    9. ' size' → logprob: -6.16414737701416
    10. 'n' → logprob: -6.16414737701416

Token 75: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6588417887687683
    2. '):' → logprob: -0.7838417887687683
    3. '=' → logprob: -3.908841848373413
    4. ':' → logprob: -5.533841609954834
    5. ')' → logprob: -7.033841609954834
    6. ' ):' → logprob: -7.408841609954834
    7. ' ,' → logprob: -8.283842086791992
    8. '):
' → logprob: -9.783842086791992
    9. '-' → logprob: -10.783842086791992
    10. ' ' → logprob: -11.033842086791992

Token 76: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02485441230237484
    2. ' )' → logprob: -3.8998544216156006
    3. ' size' → logprob: -6.0248541831970215
    4. ' int' → logprob: -7.2748541831970215
    5. 'int' → logprob: -8.02485466003418
    6. 'size' → logprob: -8.27485466003418
    7. ')' → logprob: -8.39985466003418
    8. '0' → logprob: -9.27485466003418
    9. ' ):' → logprob: -10.02485466003418
    10. ' None' → logprob: -10.14985466003418

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03498338162899017
    2. ',' → logprob: -3.5349833965301514
    3. ')' → logprob: -5.284983158111572
    4. ' ):' → logprob: -9.15998363494873
    5. '):
' → logprob: -11.28498363494873
    6. ':' → logprob: -11.40998363494873
    7. '   ' → logprob: -11.65998363494873
    8. ' ,' → logprob: -12.78498363494873
    9. '),' → logprob: -13.03498363494873
    10. '       ' → logprob: -13.28498363494873

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006810106802731752
    2. '               ' → logprob: -5.506810188293457
    3. '            ' → logprob: -6.881810188293457
    4. 'self' → logprob: -7.006810188293457
    5. ' ' → logprob: -8.506810188293457
    6. '       ' → logprob: -9.006810188293457
    7. ' self' → logprob: -9.006810188293457
    8. '        ' → logprob: -9.881810188293457
    9. '   ' → logprob: -10.381810188293457
    10. ',' → logprob: -10.756810188293457

Token 79: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.476457417011261
    2. ' self' → logprob: -0.976457417011261
    3. '       ' → logprob: -6.601457595825195
    4. ' ' → logprob: -7.351457595825195
    5. '           ' → logprob: -9.226457595825195
    6. '        ' → logprob: -9.226457595825195
    7. ' ' → logprob: -9.851457595825195
    8. '	self' → logprob: -9.976457595825195
    9. '   ' → logprob: -10.851457595825195
    10. '         ' → logprob: -11.101457595825195

Token 80: ' For' (ID: 2214)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15891438722610474
    2. 'self' → logprob: -2.03391432762146
    3. ' ' → logprob: -4.408914566040039
    4. '        ' → logprob: -5.783914566040039
    5. '       ' → logprob: -7.908914566040039
    6. ' ' → logprob: -9.283914566040039
    7. '    ' → logprob: -9.533914566040039
    8. '         ' → logprob: -9.783914566040039
    9. ' super' → logprob: -10.033914566040039
    10. '[' → logprob: -10.408914566040039

Token 81: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0691910982131958
    2. ' ' → logprob: -1.1941910982131958
    3. ' _' → logprob: -1.1941910982131958
    4. ' self' → logprob: -3.8191909790039062
    5. '_' → logprob: -4.444190979003906
    6. 'self' → logprob: -5.944190979003906
    7. '  ' → logprob: -6.069190979003906
    8. ' each' → logprob: -6.319190979003906
    9. ' space' → logprob: -6.569190979003906
    10. ' s' → logprob: -6.569190979003906

Token 82: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2094763219356537
    2. ' ' → logprob: -2.4594762325286865
    3. 'i' → logprob: -2.9594762325286865
    4. ' _' → logprob: -4.584476470947266
    5. ' index' → logprob: -4.834476470947266
    6. ' element' → logprob: -4.959476470947266
    7. '_' → logprob: -5.334476470947266
    8. 'n' → logprob: -5.959476470947266
    9. 'index' → logprob: -6.334476470947266
    10. 'e' → logprob: -6.459476470947266

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027612008154392242
    2. ' ,' → logprob: -3.9026119709014893
    3. 'self' → logprob: -5.777612209320068
    4. ':' → logprob: -6.277612209320068
    5. ' :' → logprob: -7.652612209320068
    6. ' self' → logprob: -7.652612209320068
    7. ' in' → logprob: -8.27761173248291
    8. ' ' → logprob: -8.40261173248291
    9. '            ' → logprob: -8.77761173248291
    10. '        ' → logprob: -8.90261173248291

Token 84: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023254329338669777
    2. ' self' → logprob: -4.02325439453125
    3. 'self' → logprob: -5.52325439453125
    4. ' we' → logprob: -7.77325439453125
    5. '            ' → logprob: -8.39825439453125
    6. ' [' → logprob: -9.52325439453125
    7. ' ' → logprob: -9.52325439453125
    8. '                ' → logprob: -9.89825439453125
    9. ' a' → logprob: -10.39825439453125
    10. '    ' → logprob: -10.52325439453125

Token 85: ' difference' (ID: 9809)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7049474120140076
    2. ' ' → logprob: -2.0799474716186523
    3. ' to' → logprob: -2.3299474716186523
    4. ' index' → logprob: -2.7049474716186523
    5. 'from' → logprob: -2.8299474716186523
    6. ')' → logprob: -3.8299474716186523
    7. ':' → logprob: -4.079947471618652
    8. ' the' → logprob: -4.454947471618652
    9. ' indices' → logprob: -4.704947471618652
    10. 's' → logprob: -4.954947471618652

Token 86: ' ->' (ID: 2747)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05552427098155022
    2. 's' → logprob: -3.6805243492126465
    3. ' ->' → logprob: -4.5555243492126465
    4. 'to' → logprob: -4.9305243492126465
    5. '_to' → logprob: -5.9305243492126465
    6. ':' → logprob: -5.9305243492126465
    7. ' ' → logprob: -6.0555243492126465
    8. ',' → logprob: -6.4305243492126465
    9. ' :' → logprob: -8.430523872375488
    10. '<|end|>' → logprob: -8.680523872375488

Token 87: ' length' (ID: 5517)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3427124619483948
    2. ' set' → logprob: -2.71771240234375
    3. ' {' → logprob: -2.84271240234375
    4. ' index' → logprob: -2.96771240234375
    5. ' length' → logprob: -3.71771240234375
    6. ' sequence' → logprob: -3.96771240234375
    7. ' ' → logprob: -4.34271240234375
    8. 'index' → logprob: -4.46771240234375
    9. ' list' → logprob: -5.34271240234375
    10. ' [' → logprob: -5.46771240234375

Token 88: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3958449363708496
    2. ' =' → logprob: -2.0208449363708496
    3. '           ' → logprob: -2.8958449363708496
    4. ',' → logprob: -3.5208449363708496
    5. '{' → logprob: -3.6458449363708496
    6. '   ' → logprob: -4.02084493637085
    7. '<|end|>' → logprob: -4.52084493637085
    8. '=' → logprob: -4.64584493637085
    9. ' and' → logprob: -4.64584493637085
    10. '        ' → logprob: -4.77084493637085

Token 89: ' AP' (ID: 13165)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7416611313819885
    2. ' the' → logprob: -1.7416610717773438
    3. ' arithmetic' → logprob: -2.2416610717773438
    4. 'sequence' → logprob: -2.6166610717773438
    5. ' longest' → logprob: -2.8666610717773438
    6. ' progression' → logprob: -2.8666610717773438
    7. ' ' → logprob: -4.116661071777344
    8. ' subse' → logprob: -4.366661071777344
    9. 'the' → logprob: -4.616661071777344
    10. ' sequences' → logprob: -5.866661071777344

Token 90: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0526294708251953
    2. '<|end|>' → logprob: -1.3026294708251953
    3. 's' → logprob: -2.3026294708251953
    4. '   ' → logprob: -2.8026294708251953
    5. '           ' → logprob: -2.8026294708251953
    6. '        ' → logprob: -3.5526294708251953
    7. ' ' → logprob: -3.6776294708251953
    8. '
' → logprob: -4.052629470825195
    9. '    ' → logprob: -4.177629470825195
    10. ' and' → logprob: -4.427629470825195

Token 91: ' here' (ID: 2105)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.01595260761678219
    2. '<|end|>' → logprob: -4.8909525871276855
    3. ' with' → logprob: -5.2659525871276855
    4. 'at' → logprob: -6.2659525871276855
    5. '<|end|>' → logprob: -8.265953063964844
    6. 'with' → logprob: -8.265953063964844
    7. ' and' → logprob: -8.765953063964844
    8. ',' → logprob: -8.890953063964844
    9. '    ' → logprob: -9.640953063964844
    10. '	at' → logprob: -9.765953063964844

Token 92: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1867447793483734
    2. ' the' → logprob: -2.8117446899414062
    3. ' this' → logprob: -3.1867446899414062
    4. 'that' → logprob: -3.5617446899414062
    5. '1' → logprob: -4.311744689941406
    6. ' ' → logprob: -4.311744689941406
    7. 'the' → logprob: -5.436744689941406
    8. '<|end|>' → logprob: -5.936744689941406
    9. 'this' → logprob: -6.936744689941406
    10. ')' → logprob: -7.061744689941406

Token 94: ' diff' (ID: 8868)
  Prédit: ' difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.48266565799713135
    2. 'difference' → logprob: -0.9826656579971313
    3. '<|end|>' → logprob: -5.482665538787842
    4. 'diff' → logprob: -6.232665538787842
    5. 'd' → logprob: -6.607665538787842
    6. '<|end|>' → logprob: -7.982665538787842
    7. ' ' → logprob: -8.357666015625
    8. ' diff' → logprob: -8.982666015625
    9. '_difference' → logprob: -9.857666015625
    10. ' sequence' → logprob: -9.857666015625

Token 95: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4097751975059509
    2. '
' → logprob: -1.9097752571105957
    3. '<|end|>' → logprob: -2.5347752571105957
    4. '       ' → logprob: -3.5347752571105957
    5. ' ' → logprob: -3.9097752571105957
    6. '            
' → logprob: -4.909775257110596
    7. '    
' → logprob: -5.159775257110596
    8. 's' → logprob: -5.409775257110596
    9. ',' → logprob: -5.409775257110596
    10. 'self' → logprob: -5.534775257110596

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017315281555056572
    2. '       ' → logprob: -4.76731538772583
    3. '
' → logprob: -5.39231538772583
    4. '   ' → logprob: -7.01731538772583
    5. ' ' → logprob: -7.26731538772583
    6. '               ' → logprob: -7.39231538772583
    7. '<|end|>' → logprob: -7.76731538772583
    8. '\n' → logprob: -8.017314910888672
    9. '            ' → logprob: -9.017314910888672
    10. '        ' → logprob: -9.017314910888672

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11569491773843765
    2. ' self' → logprob: -2.865694999694824
    3. '           ' → logprob: -2.990694999694824
    4. '       ' → logprob: -7.240694999694824
    5. ' ' → logprob: -7.615694999694824
    6. '               ' → logprob: -7.990694999694824
    7. '
' → logprob: -8.365694999694824
    8. '   ' → logprob: -9.865694999694824
    9. '            ' → logprob: -10.115694999694824
    10. '        ' → logprob: -10.365694999694824

Token 98: '.dp' (ID: 77268)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -1.2779916524887085
    2. '.data' → logprob: -1.6529916524887085
    3. '.ap' → logprob: -1.7779916524887085
    4. '.table' → logprob: -2.277991771697998
    5. '._' → logprob: -2.402991771697998
    6. '.dp' → logprob: -2.652991771697998
    7. '.' → logprob: -3.527991771697998
    8. ' .' → logprob: -4.277991771697998
    9. '.entries' → logprob: -4.277991771697998
    10. '.dynamic' → logprob: -5.027991771697998

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03896499425172806
    2. '=' → logprob: -3.2889649868011475
    3. ' ' → logprob: -7.413965225219727
    4. 's' → logprob: -8.788965225219727
    5. '   ' → logprob: -9.788965225219727
    6. '[' → logprob: -10.163965225219727
    7. '  ' → logprob: -10.413965225219727
    8. '_' → logprob: -10.788965225219727
    9. ':' → logprob: -12.038965225219727
    10. '    ' → logprob: -12.163965225219727

Token 100: ' [{}' (ID: 170238)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027295846492052078
    2. ' [{}' → logprob: -3.7772958278656006
    3. ' [' → logprob: -5.52729606628418
    4. '[{' → logprob: -10.15229606628418
    5. '{}' → logprob: -10.77729606628418
    6. '{' → logprob: -13.15229606628418
    7. ' {}' → logprob: -13.15229606628418
    8. ' [{' → logprob: -13.90229606628418
    9. 'default' → logprob: -15.15229606628418
    10. ' defaultdict' → logprob: -15.65229606628418

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019645966589450836
    2. 'for' → logprob: -4.144646167755127
    3. ')' → logprob: -6.269646167755127
    4. '}' → logprob: -7.644646167755127
    5. ',' → logprob: -7.894646167755127
    6. ']' → logprob: -8.144645690917969
    7. '<|end|>' → logprob: -8.894645690917969
    8. ' ' → logprob: -9.019645690917969
    9. '       ' → logprob: -9.144645690917969
    10. '           ' → logprob: -10.019645690917969

Token 102: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9053583741188049
    2. ' ' → logprob: -1.0303583145141602
    3. ' _' → logprob: -1.6553583145141602
    4. '_' → logprob: -3.15535831451416
    5. 'range' → logprob: -5.65535831451416
    6. '(range' → logprob: -6.90535831451416
    7. '_range' → logprob: -8.40535831451416
    8. ' i' → logprob: -8.78035831451416
    9. '	range' → logprob: -9.90535831451416
    10. ' ' → logprob: -10.53035831451416

Token 103: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04939045384526253
    2. ' range' → logprob: -3.2993905544281006
    3. ' in' → logprob: -4.6743903160095215
    4. 'in' → logprob: -6.2993903160095215
    5. ' ' → logprob: -10.29939079284668
    6. '(range' → logprob: -10.54939079284668
    7. ' xrange' → logprob: -11.17439079284668
    8. 'size' → logprob: -11.17439079284668
    9. '	range' → logprob: -12.29939079284668
    10. 'ange' → logprob: -12.42439079284668

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014375925064087
    2. ' range' → logprob: -1.7014375925064087
    3. '   ' → logprob: -11.576437950134277
    4. ' ' → logprob: -12.201437950134277
    5. '(range' → logprob: -12.951437950134277
    6. '	range' → logprob: -12.951437950134277
    7. '  ' → logprob: -13.576437950134277
    8. '    ' → logprob: -14.076437950134277
    9. '```' → logprob: -14.326437950134277
    10. ' xrange' → logprob: -14.951437950134277

Token 105: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -7.779520092299208e-05
    2. '(' → logprob: -9.625078201293945
    3. '(range' → logprob: -12.000078201293945
    4. ' (' → logprob: -12.375078201293945
    5. '(s' → logprob: -14.375078201293945
    6. 'range' → logprob: -15.750078201293945
    7. ')' → logprob: -16.375078201293945
    8. '<size' → logprob: -16.625078201293945
    9. ',size' → logprob: -16.625078201293945
    10. ')(' → logprob: -16.875078201293945

Token 106: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013576137134805322
    2. ']' → logprob: -6.751357555389404
    3. ')' → logprob: -8.876358032226562
    4. ' )' → logprob: -11.126358032226562
    5. ' ]' → logprob: -11.126358032226562
    6. ')]
' → logprob: -11.876358032226562
    7. '])' → logprob: -12.876358032226562
    8. '       ' → logprob: -13.001358032226562
    9. '}]' → logprob: -13.751358032226562
    10. '   ' → logprob: -13.876358032226562

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.038226816803216934
    2. '   ' → logprob: -3.413226842880249
    3. '       ' → logprob: -6.41322660446167
    4. '    
' → logprob: -7.03822660446167
    5. '
' → logprob: -7.28822660446167
    6. ' def' → logprob: -7.53822660446167
    7. '        
' → logprob: -8.163227081298828
    8. '

' → logprob: -8.663227081298828
    9. '    

' → logprob: -8.788227081298828
    10. '        

' → logprob: -8.913227081298828

Token 109: ' get' (ID: 717)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.10531380027532578
    2. 'update' → logprob: -2.730313777923584
    3. ' get' → logprob: -3.730313777923584
    4. 'get' → logprob: -5.730313777923584
    5. ' set' → logprob: -5.730313777923584
    6. ' __' → logprob: -6.355313777923584
    7. ' add' → logprob: -6.855313777923584
    8. 'set' → logprob: -7.480313777923584
    9. ' extend' → logprob: -7.730313777923584
    10. '__' → logprob: -8.730314254760742

Token 110: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41919973492622375
    2. '_length' → logprob: -1.6691997051239014
    3. '_diff' → logprob: -2.1691997051239014
    4. '_' → logprob: -4.7941999435424805
    5. '_lengths' → logprob: -4.7941999435424805
    6. '_max' → logprob: -5.0441999435424805
    7. '_difference' → logprob: -5.2941999435424805
    8. '_len' → logprob: -5.9191999435424805
    9. '_value' → logprob: -6.2941999435424805
    10. '_next' → logprob: -6.4191999435424805

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00326208071783185
    2. ' ,' → logprob: -6.253262042999268
    3. '_,' → logprob: -8.128262519836426
    4. ',index' → logprob: -8.503262519836426
    5. ',_' → logprob: -8.878262519836426
    6. '[' → logprob: -9.253262519836426
    7. '(' → logprob: -9.378262519836426
    8. ',(' → logprob: -9.878262519836426
    9. 'self' → logprob: -10.128262519836426
    10. '(self' → logprob: -10.128262519836426

Token 112: ' idx' (ID: 14016)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5334921479225159
    2. 'self' → logprob: -0.9084921479225159
    3. 'index' → logprob: -5.533492088317871
    4. ' i' → logprob: -5.658492088317871
    5. ' index' → logprob: -6.533492088317871
    6. 'i' → logprob: -6.783492088317871
    7. ' idx' → logprob: -9.033492088317871
    8. ')' → logprob: -9.908492088317871
    9. 'idx' → logprob: -10.408492088317871
    10. '       ' → logprob: -10.533492088317871

Token 113: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ' ,' → logprob: -10.125043869018555
    3. '):' → logprob: -12.750043869018555
    4. ',index' → logprob: -15.750043869018555
    5. '       ' → logprob: -16.250043869018555
    6. ',key' → logprob: -17.125043869018555
    7. '   ' → logprob: -17.250043869018555
    8. '[' → logprob: -17.375043869018555
    9. ',k' → logprob: -17.750043869018555
    10. '‌,' → logprob: -17.750043869018555

Token 114: ' int' (ID: 677)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3799052834510803
    2. ' idx' → logprob: -2.1299052238464355
    3. ' diff' → logprob: -2.6299052238464355
    4. ',' → logprob: -3.0049052238464355
    5. '       ' → logprob: -4.0049052238464355
    6. 'idx' → logprob: -4.0049052238464355
    7. 'index' → logprob: -4.7549052238464355
    8. ' ,' → logprob: -5.2549052238464355
    9. ')' → logprob: -5.3799052238464355
    10. 'd' → logprob: -5.5049052238464355

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005911595653742552
    2. ' ,' → logprob: -7.750591278076172
    3. '):' → logprob: -9.000591278076172
    4. ',d' → logprob: -10.625591278076172
    5. '       ' → logprob: -11.750591278076172
    6. ')' → logprob: -13.750591278076172
    7. '   ' → logprob: -14.250591278076172
    8. '           ' → logprob: -14.500591278076172
    9. ' ):' → logprob: -14.875591278076172
    10. ',k' → logprob: -14.875591278076172

Token 116: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.285362184047699
    2. ' diff' → logprob: -1.4103622436523438
    3. 'difference' → logprob: -6.410362243652344
    4. 'd' → logprob: -6.785362243652344
    5. '   ' → logprob: -7.160362243652344
    6. ' difference' → logprob: -8.660362243652344
    7. ' ' → logprob: -9.410362243652344
    8. ' d' → logprob: -9.410362243652344
    9. '	diff' → logprob: -9.535362243652344
    10. '       ' → logprob: -9.785362243652344

Token 117: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005162600893527269
    2. ',' → logprob: -5.380162715911865
    3. '):
' → logprob: -8.630162239074707
    4. ')' → logprob: -9.005162239074707
    5. ':' → logprob: -9.005162239074707
    6. ' ):' → logprob: -9.130162239074707
    7. ']:' → logprob: -12.630162239074707
    8. '}:' → logprob: -13.630162239074707
    9. '   ' → logprob: -13.880162239074707
    10. ' ,' → logprob: -14.005162239074707

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18388958275318146
    2. ' int' → logprob: -1.933889627456665
    3. '):
' → logprob: -4.683889389038086
    4. '):' → logprob: -4.683889389038086
    5. ')' → logprob: -5.933889389038086
    6. ' ):' → logprob: -6.808889389038086
    7. ':int' → logprob: -7.808889389038086
    8. ' ):
' → logprob: -8.683889389038086
    9. '[int' → logprob: -8.808889389038086
    10. ' ' → logprob: -9.183889389038086

Token 119: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03830598667263985
    2. ')' → logprob: -3.2883059978485107
    3. '):
' → logprob: -8.53830623626709
    4. ' ):' → logprob: -9.78830623626709
    5. ' )' → logprob: -12.03830623626709
    6. ')->' → logprob: -13.03830623626709
    7. '   ' → logprob: -13.16330623626709
    8. '       ' → logprob: -13.66330623626709
    9. '):
' → logprob: -14.66330623626709
    10. ' ' → logprob: -15.53830623626709

Token 120: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006333059631288052
    2. '):' → logprob: -6.006332874298096
    3. '->' → logprob: -6.881332874298096
    4. ':
' → logprob: -7.256332874298096
    5. ':return' → logprob: -7.631332874298096
    6. '           ' → logprob: -8.131333351135254
    7. ' ->' → logprob: -8.256333351135254
    8. ')' → logprob: -8.506333351135254
    9. '.setdefault' → logprob: -8.756333351135254
    10. '       ' → logprob: -8.756333351135254

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31327277421951294
    2. ' int' → logprob: -1.3132727146148682
    3. '[int' → logprob: -12.188272476196289
    4. '0' → logprob: -13.188272476196289
    5. ':int' → logprob: -13.688272476196289
    6. '(int' → logprob: -13.938272476196289
    7. '<int' → logprob: -14.188272476196289
    8. '	int' → logprob: -14.438272476196289
    9. '       ' → logprob: -15.313272476196289
    10. ' ' → logprob: -15.313272476196289

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002192852320149541
    2. ':
' → logprob: -6.252192974090576
    3. '):' → logprob: -9.002192497253418
    4. '           ' → logprob: -10.502192497253418
    5. ':return' → logprob: -10.502192497253418
    6. '       ' → logprob: -10.627192497253418
    7. ' :' → logprob: -10.877192497253418
    8. '[' → logprob: -11.877192497253418
    9. ')' → logprob: -12.002192497253418
    10. '):
' → logprob: -12.002192497253418

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24535979330539703
    2. '       ' → logprob: -2.4953598976135254
    3. '               ' → logprob: -3.4953598976135254
    4. ' ' → logprob: -3.6203598976135254
    5. '        ' → logprob: -4.495359897613525
    6. '            ' → logprob: -4.620359897613525
    7. ' return' → logprob: -4.745359897613525
    8. 'return' → logprob: -4.870359897613525
    9. '0' → logprob: -5.245359897613525
    10. ':return' → logprob: -5.245359897613525

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5437600016593933
    2. ' return' → logprob: -0.9187600016593933
    3. '           ' → logprob: -4.168759822845459
    4. '
' → logprob: -5.418759822845459
    5. '       ' → logprob: -8.418760299682617
    6. '               ' → logprob: -9.543760299682617
    7. ' 
' → logprob: -9.918760299682617
    8. ' ' → logprob: -10.168760299682617
    9. '            
' → logprob: -10.293760299682617
    10. 'self' → logprob: -10.793760299682617

Token 125: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519330680370331
    2. 'self' → logprob: -1.5019330978393555
    3. '0' → logprob: -12.626933097839355
    4. '(self' → logprob: -14.751933097839355
    5. '	self' → logprob: -16.62693214416504
    6. '1' → logprob: -16.62693214416504
    7. ' ' → logprob: -17.12693214416504
    8. '           ' → logprob: -17.62693214416504
    9. '   ' → logprob: -18.00193214416504
    10. '_self' → logprob: -18.37693214416504

Token 126: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.001337147317826748
    2. '.' → logprob: -6.626337051391602
    3. ' .' → logprob: -11.626337051391602
    4. '	dp' → logprob: -13.876337051391602
    5. '.dt' → logprob: -15.001337051391602
    6. '.py' → logprob: -15.376337051391602
    7. '.dj' → logprob: -16.0013370513916
    8. '.df' → logprob: -16.1263370513916
    9. '.db' → logprob: -16.6263370513916
    10. 'self' → logprob: -16.8763370513916

Token 127: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -11.750008583068848
    3. 'idx' → logprob: -15.750008583068848
    4. ' [' → logprob: -16.000009536743164
    5. '[id' → logprob: -16.125009536743164
    6. '[
' → logprob: -16.375009536743164
    7. '```' → logprob: -16.375009536743164
    8. '[int' → logprob: -16.750009536743164
    9. '[ind' → logprob: -17.250009536743164
    10. '[index' → logprob: -17.750009536743164

Token 128: '].' (ID: 1651)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.25003236532211304
    2. '].' → logprob: -1.6250324249267578
    3. '.' → logprob: -4.125032424926758
    4. ').' → logprob: -5.250032424926758
    5. '}.' → logprob: -5.875032424926758
    6. ' .' → logprob: -10.375032424926758
    7. '   ' → logprob: -11.250032424926758
    8. '[' → logprob: -11.500032424926758
    9. ']' → logprob: -11.750032424926758
    10. ')' → logprob: -12.000032424926758

Token 129: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.2664456789934775e-06
    2. '.get' → logprob: -13.625000953674316
    3. ' get' → logprob: -18.000001907348633
    4. 'getitem' → logprob: -18.500001907348633
    5. '_get' → logprob: -18.875001907348633
    6. 'gett' → logprob: -19.250001907348633
    7. '	get' → logprob: -21.875001907348633
    8. 'gete' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.250001907348633
    10. 'getc' → logprob: -22.500001907348633

Token 130: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.00023178798437584192
    2. '(' → logprob: -8.375231742858887
    3. 'diff' → logprob: -14.375231742858887
    4. ' (' → logprob: -14.625231742858887
    5. '(d' → logprob: -16.875232696533203
    6. '((' → logprob: -17.750232696533203
    7. '(
' → logprob: -17.875232696533203
    8. '(dim' → logprob: -18.000232696533203
    9. '(di' → logprob: -18.125232696533203
    10. '	diff' → logprob: -18.125232696533203

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031973462319001555
    2. ' ,' → logprob: -8.125319480895996
    3. ')' → logprob: -10.750319480895996
    4. '0' → logprob: -13.250319480895996
    5. '(),' → logprob: -16.125320434570312
    6. ' ' → logprob: -16.500320434570312
    7. '   ' → logprob: -16.500320434570312
    8. '1' → logprob: -16.500320434570312
    9. '    ' → logprob: -17.625320434570312
    10. '),' → logprob: -17.750320434570312

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022664932534098625
    2. '1' → logprob: -4.272665023803711
    3. ' ' → logprob: -4.772665023803711
    4. '   ' → logprob: -13.147665023803711
    5. '    ' → logprob: -13.647665023803711
    6. '       ' → logprob: -14.272665023803711
    7. '           ' → logprob: -14.272665023803711
    8. '        ' → logprob: -14.272665023803711
    9. ')' → logprob: -14.397665023803711
    10. '  ' → logprob: -15.147665023803711

Token 133: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43216103315353394
    2. '1' → logprob: -1.0571610927581787
    3. ' ' → logprob: -5.6821608543396
    4. ')' → logprob: -10.682161331176758
    5. '2' → logprob: -11.682161331176758
    6. '   ' → logprob: -12.182161331176758
    7. '    ' → logprob: -13.057161331176758
    8. '  ' → logprob: -13.182161331176758
    9. '}' → logprob: -13.807161331176758
    10. '"' → logprob: -14.182161331176758

Token 134: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005511255003511906
    2. '<|end|>' → logprob: -7.875551223754883
    3. ' )' → logprob: -9.000551223754883
    4. ')
' → logprob: -10.125551223754883
    5. ')return' → logprob: -13.375551223754883
    6. '       ' → logprob: -13.375551223754883
    7. '<|end|>' → logprob: -14.000551223754883
    8. ')

' → logprob: -14.250551223754883
    9. '
' → logprob: -14.500551223754883
    10. '        ' → logprob: -14.750551223754883

Token 135: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.10423493385314941
    2. ' update' → logprob: -2.8542349338531494
    3. 'set' → logprob: -3.2292349338531494
    4. 'update' → logprob: -6.47923469543457
    5. ' ' → logprob: -8.72923469543457
    6. ' __' → logprob: -10.10423469543457
    7. ' sets' → logprob: -11.60423469543457
    8. '__' → logprob: -11.97923469543457
    9. '   ' → logprob: -11.97923469543457
    10. ' add' → logprob: -11.97923469543457

Token 138: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5774407982826233
    2. '(' → logprob: -0.8274407982826233
    3. '<|end|>' → logprob: -7.2024407386779785
    4. ' (' → logprob: -7.7024407386779785
    5. '(idx' → logprob: -8.952441215515137
    6. '(
' → logprob: -8.952441215515137
    7. '<|end|>' → logprob: -11.327441215515137
    8. '(index' → logprob: -11.702441215515137
    9. '(i' → logprob: -12.827441215515137
    10. 'self' → logprob: -12.827441215515137

Token 139: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6198508739471436
    2. '[idx' → logprob: -0.9948508739471436
    3. '(idx' → logprob: -2.9948508739471436
    4. '(' → logprob: -3.7448508739471436
    5. ')' → logprob: -5.244851112365723
    6. ' ' → logprob: -5.994851112365723
    7. ')[' → logprob: -5.994851112365723
    8. '[
' → logprob: -6.619851112365723
    9. ' [' → logprob: -6.744851112365723
    10. ' (' → logprob: -6.869851112365723

Token 140: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3134538531303406
    2. 'idx' → logprob: -1.3134539127349854
    3. 'self' → logprob: -8.813453674316406
    4. '	idx' → logprob: -11.188453674316406
    5. ' self' → logprob: -11.688453674316406
    6. '_idx' → logprob: -11.688453674316406
    7. '[idx' → logprob: -12.563453674316406
    8. '(idx' → logprob: -12.813453674316406
    9. '.idx' → logprob: -13.063453674316406
    10. 'index' → logprob: -13.563453674316406

Token 141: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.305326966568828e-05
    2. ' ,' → logprob: -9.500093460083008
    3. ')' → logprob: -11.750093460083008
    4. '<|end|>' → logprob: -12.250093460083008
    5. '[' → logprob: -13.625093460083008
    6. '‌,' → logprob: -14.250093460083008
    7. '<|end|>' → logprob: -14.625093460083008
    8. ',index' → logprob: -15.000093460083008
    9. ' ' → logprob: -15.250093460083008
    10. ')[' → logprob: -15.375093460083008

Token 142: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0829161405563354
    2. 'diff' → logprob: -1.4579161405563354
    3. ' idx' → logprob: -1.8329161405563354
    4. ' diff' → logprob: -2.082916259765625
    5. 'int' → logprob: -2.332916259765625
    6. 'idx' → logprob: -3.582916259765625
    7. ',' → logprob: -4.082916259765625
    8. ' ' → logprob: -6.457916259765625
    9. ',int' → logprob: -8.082916259765625
    10. 'index' → logprob: -9.082916259765625

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9027791495318525e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',int' → logprob: -13.750019073486328
    4. '[' → logprob: -14.875019073486328
    5. ')' → logprob: -15.000019073486328
    6. ',
' → logprob: -15.875019073486328
    7. ',d' → logprob: -16.500019073486328
    8. '‌,' → logprob: -16.500019073486328
    9. ',[' → logprob: -17.250019073486328
    10. '   ' → logprob: -17.375019073486328

Token 144: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.25195279717445374
    2. 'diff' → logprob: -1.5019527673721313
    3. '	diff' → logprob: -11.126953125
    4. ' dif' → logprob: -12.626953125
    5. ' ' → logprob: -13.626953125
    6. '(diff' → logprob: -13.751953125
    7. '_diff' → logprob: -14.376953125
    8. '```' → logprob: -14.626953125
    9. '
' → logprob: -14.751953125
    10. '    ' → logprob: -14.876953125

Token 145: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01118080411106348
    2. '):' → logprob: -4.636180877685547
    3. ')' → logprob: -7.511180877685547
    4. ':' → logprob: -8.011180877685547
    5. ' ,' → logprob: -8.136180877685547
    6. '   ' → logprob: -9.886180877685547
    7. '           ' → logprob: -10.011180877685547
    8. '):
' → logprob: -10.511180877685547
    9. ']:' → logprob: -10.761180877685547
    10. ' ' → logprob: -11.011180877685547

Token 146: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0385067462921143
    2. '1' → logprob: -1.1635067462921143
    3. ' ' → logprob: -1.7885067462921143
    4. '):' → logprob: -3.1635067462921143
    5. ' )' → logprob: -3.2885067462921143
    6. ',' → logprob: -3.2885067462921143
    7. ')>' → logprob: -4.788506507873535
    8. ' ,' → logprob: -4.913506507873535
    9. '<|end|>' → logprob: -4.913506507873535
    10. ' ):' → logprob: -5.288506507873535

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005470905918627977
    2. ')' → logprob: -5.6304707527160645
    3. '):' → logprob: -6.3804707527160645
    4. ' ,' → logprob: -8.880471229553223
    5. '),' → logprob: -11.255471229553223
    6. ']' → logprob: -12.255471229553223
    7. ')=' → logprob: -12.255471229553223
    8. '):
' → logprob: -12.755471229553223
    9. '   ' → logprob: -13.380471229553223
    10. ' )' → logprob: -13.505471229553223

Token 148: ' length' (ID: 5517)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5226891040802002
    2. 'value' → logprob: -1.2726891040802002
    3. ' length' → logprob: -2.5226891040802
    4. 'length' → logprob: -3.5226891040802
    5. ')' → logprob: -5.647688865661621
    6. '1' → logprob: -5.772688865661621
    7. ' )' → logprob: -6.022688865661621
    8. ' ' → logprob: -6.147688865661621
    9. ' val' → logprob: -6.272688865661621
    10. 'val' → logprob: -6.397688865661621

Token 149: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008104594890028238
    2. ')' → logprob: -8.250810623168945
    3. '):
' → logprob: -8.250810623168945
    4. ':' → logprob: -8.250810623168945
    5. ' ):' → logprob: -10.625810623168945
    6. '   ' → logprob: -14.250810623168945
    7. ' ' → logprob: -14.250810623168945
    8. '=' → logprob: -15.000810623168945
    9. '):

' → logprob: -15.000810623168945
    10. ')=' → logprob: -15.750810623168945

Token 150: ' int' (ID: 677)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7421830296516418
    2. ' ):' → logprob: -0.7421830296516418
    3. ' ):
' → logprob: -4.242183208465576
    4. ' )' → logprob: -4.617183208465576
    5. '):
' → logprob: -4.617183208465576
    6. 'length' → logprob: -5.242183208465576
    7. ' length' → logprob: -5.367183208465576
    8. ')' → logprob: -6.117183208465576
    9. ' ' → logprob: -7.367183208465576
    10. '1' → logprob: -7.867183208465576

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025619841180741787
    2. '):
' → logprob: -6.252562046051025
    3. ')' → logprob: -7.377562046051025
    4. '):
' → logprob: -12.377561569213867
    5. ' ):' → logprob: -13.252561569213867
    6. ':' → logprob: -14.252561569213867
    7. '       ' → logprob: -14.252561569213867
    8. '   ' → logprob: -14.502561569213867
    9. '           ' → logprob: -16.002561569213867
    10. '):

' → logprob: -16.252561569213867

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033221999183297157
    2. ' self' → logprob: -6.503322124481201
    3. '               ' → logprob: -7.253322124481201
    4. ' 
' → logprob: -8.00332260131836
    5. '       ' → logprob: -8.75332260131836
    6. '<|end|>' → logprob: -8.75332260131836
    7. ' ' → logprob: -9.25332260131836
    8. '   ' → logprob: -9.75332260131836
    9. ' ' → logprob: -9.75332260131836
    10. '            ' → logprob: -10.00332260131836

Token 153: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2527371346950531
    2. 'self' (adapté à ' self') → logprob: -1.5027371644973755
    3. '           ' → logprob: -7.127737045288086
    4. '   ' → logprob: -13.127737045288086
    5. '	self' → logprob: -14.002737045288086
    6. '               ' → logprob: -14.377737045288086
    7. '       ' → logprob: -14.502737045288086
    8. ' ' → logprob: -14.502737045288086
    9. ' ' → logprob: -15.002737045288086
    10. '            ' → logprob: -15.252737045288086

Token 154: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.10032851994037628
    2. '.' → logprob: -2.3503284454345703
    3. ' .' → logprob: -9.22532844543457
    4. '	dp' → logprob: -11.22532844543457
    5. '.py' → logprob: -12.47532844543457
    6. '.dt' → logprob: -13.35032844543457
    7. ' dp' → logprob: -13.85032844543457
    8. '‌.' → logprob: -14.35032844543457
    9. ').' → logprob: -14.97532844543457
    10. '​.' → logprob: -14.97532844543457

Token 155: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.975612187583465e-05
    2. '[' → logprob: -10.500029563903809
    3. '][' → logprob: -14.125029563903809
    4. 'idx' → logprob: -14.250029563903809
    5. ')[' → logprob: -15.875029563903809
    6. '```' → logprob: -15.875029563903809
    7. '[
' → logprob: -16.375030517578125
    8. '	idx' → logprob: -16.500030517578125
    9. '[int' → logprob: -16.875030517578125
    10. '[i' → logprob: -17.000030517578125

Token 156: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0015924652107059956
    2. '[idx' → logprob: -7.001592636108398
    3. ']' → logprob: -7.876592636108398
    4. ' ][' → logprob: -8.251592636108398
    5. '[' → logprob: -11.126592636108398
    6. 'idx' → logprob: -11.501592636108398
    7. '   ' → logprob: -12.501592636108398
    8. '"][' → logprob: -12.876592636108398
    9. ')[' → logprob: -12.876592636108398
    10. ']][' → logprob: -13.751592636108398

Token 157: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -6.635164754698053e-05
    2. ' diff' → logprob: -9.625066757202148
    3. '	diff' → logprob: -16.37506675720215
    4. '(diff' → logprob: -16.50006675720215
    5. '_diff' → logprob: -18.75006675720215
    6. 'dif' → logprob: -18.87506675720215
    7. 'd' → logprob: -19.25006675720215
    8. '
' → logprob: -20.12506675720215
    9. '[' → logprob: -20.62506675720215
    10. ' ' → logprob: -20.75006675720215

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002762326330412179
    2. ' ]' → logprob: -8.625276565551758
    3. ']=' → logprob: -9.250276565551758
    4. '=' → logprob: -14.875276565551758
    5. ')' → logprob: -16.500276565551758
    6. ' =' → logprob: -17.125276565551758
    7. ']
' → logprob: -19.000276565551758
    8. '}' → logprob: -19.500276565551758
    9. '']' → logprob: -19.625276565551758
    10. ']+=' → logprob: -19.750276565551758

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '=len' → logprob: -18.063261032104492
    4. ']=' → logprob: -18.313261032104492
    5. ' ' → logprob: -18.438261032104492
    6. '＝' → logprob: -18.688261032104492
    7. ')=' → logprob: -18.813261032104492
    8. '=max' → logprob: -18.813261032104492
    9. '=int' → logprob: -18.813261032104492
    10. '[' → logprob: -18.938261032104492

Token 160: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004078401252627373
    2. ' length' → logprob: -5.504078388214111
    3. 'leng' → logprob: -17.254077911376953
    4. 'l' → logprob: -17.379077911376953
    5. '	length' → logprob: -19.004077911376953
    6. '(length' → logprob: -19.504077911376953
    7. 'len' → logprob: -19.754077911376953
    8. 'ength' → logprob: -20.379077911376953
    9. 'max' → logprob: -20.629077911376953
    10. ' lenght' → logprob: -20.754077911376953

Token 161: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49006110429763794
    2. '
' → logprob: -0.9900611042976379
    3. '<|end|>' → logprob: -4.490061283111572
    4. '    
' → logprob: -5.865061283111572
    5. '

' → logprob: -7.365061283111572
    6. 'class' → logprob: -7.615061283111572
    7. '       ' → logprob: -8.490060806274414
    8. '<|end|>' → logprob: -8.615060806274414
    9. 'def' → logprob: -8.990060806274414
    10. '        
' → logprob: -9.990060806274414

Token 163: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006896285805851221
    2. '   ' → logprob: -5.006896495819092
    3. ' def' → logprob: -9.256896018981934
    4. 'class' → logprob: -9.381896018981934
    5. '	def' → logprob: -14.131896018981934
    6. ' ' → logprob: -15.506896018981934
    7. '       ' → logprob: -15.631896018981934
    8. '  ' → logprob: -17.50689697265625
    9. '
' → logprob: -17.63189697265625
    10. '    
' → logprob: -17.88189697265625

Token 164: ' max' (ID: 2999)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.39868369698524475
    2. '__' → logprob: -2.023683786392212
    3. ' max' → logprob: -2.273683786392212
    4. ' merge' → logprob: -2.898683786392212
    5. 'max' → logprob: -4.648683547973633
    6. ' size' → logprob: -5.148683547973633
    7. ' items' → logprob: -5.773683547973633
    8. ' length' → logprob: -5.773683547973633
    9. 'merge' → logprob: -6.148683547973633
    10. ' get' → logprob: -6.273683547973633

Token 165: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.021375056356191635
    2. '_' → logprob: -5.0213751792907715
    3. '_lengths' → logprob: -5.0213751792907715
    4. '()' → logprob: -5.2713751792907715
    5. '_len' → logprob: -6.8963751792907715
    6. 'length' → logprob: -7.2713751792907715
    7. '_value' → logprob: -7.7713751792907715
    8. '(' → logprob: -8.646374702453613
    9. '_max' → logprob: -8.646374702453613
    10. '(self' → logprob: -9.021374702453613

Token 166: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02980082668364048
    2. '(' → logprob: -3.5298008918762207
    3. 'self' → logprob: -10.529800415039062
    4. '   ' → logprob: -11.654800415039062
    5. '(
' → logprob: -12.404800415039062
    6. ' (' → logprob: -12.654800415039062
    7. '()' → logprob: -12.904800415039062
    8. 's' → logprob: -13.529800415039062
    9. '_' → logprob: -14.154800415039062
    10. '_(' → logprob: -14.404800415039062

Token 167: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3045889735221863
    2. ',' → logprob: -1.679589033126831
    3. '):
' → logprob: -2.929589033126831
    4. ' ,' → logprob: -4.304588794708252
    5. ' ):' → logprob: -4.929588794708252
    6. 'self' → logprob: -7.054588794708252
    7. ')' → logprob: -8.17958927154541
    8. ' ):
' → logprob: -8.42958927154541
    9. '(self' → logprob: -8.55458927154541
    10. '   ' → logprob: -9.30458927154541

Token 168: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008750136941671371
    2. ':
' → logprob: -6.133749961853027
    3. '(self' → logprob: -6.258749961853027
    4. '):' → logprob: -6.258749961853027
    5. ' ->' → logprob: -6.758749961853027
    6. '->' → logprob: -7.258749961853027
    7. 'self' → logprob: -8.008749961853027
    8. ')' → logprob: -8.883749961853027
    9. '       ' → logprob: -9.008749961853027
    10. '():' → logprob: -9.258749961853027

Token 169: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06360658258199692
    2. ' int' → logprob: -3.6886065006256104
    3. '(int' → logprob: -4.5636067390441895
    4. 'max' → logprob: -4.6886067390441895
    5. 'def' → logprob: -4.8136067390441895
    6. '0' → logprob: -6.3136067390441895
    7. ' ' → logprob: -6.5636067390441895
    8. ' max' → logprob: -6.5636067390441895
    9. ' def' → logprob: -7.1886067390441895
    10. '   ' → logprob: -7.1886067390441895

Token 170: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0039919656701385975
    2. '(' → logprob: -5.628992080688477
    3. ':' → logprob: -8.253992080688477
    4. '(
' → logprob: -9.503992080688477
    5. '       ' → logprob: -10.753992080688477
    6. 'self' → logprob: -11.253992080688477
    7. ':
' → logprob: -11.503992080688477
    8. ')' → logprob: -12.378992080688477
    9. '   ' → logprob: -12.628992080688477
    10. '):' → logprob: -13.503992080688477

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24493324756622314
    2. '       ' → logprob: -2.3699331283569336
    3. ' max' → logprob: -2.6199331283569336
    4. '0' → logprob: -3.7449331283569336
    5. 'max' → logprob: -4.494933128356934
    6. ' return' → logprob: -4.869933128356934
    7. 'return' → logprob: -5.494933128356934
    8. ' length' → logprob: -6.119933128356934
    9. 'length' → logprob: -7.369933128356934
    10. ' ' → logprob: -7.869933128356934

Token 172: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.029464291408658028
    2. 'return' → logprob: -3.6544642448425293
    3. '           ' → logprob: -7.029464244842529
    4. '       ' → logprob: -7.529464244842529
    5. ' max' → logprob: -7.654464244842529
    6. 'length' → logprob: -7.779464244842529
    7. 'm' → logprob: -8.404464721679688
    8. 'ans' → logprob: -8.904464721679688
    9. 'result' → logprob: -9.279464721679688
    10. 'maximum' → logprob: -9.279464721679688

Token 173: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.19091978669166565
    2. '_len' → logprob: -2.065919876098633
    3. '_' → logprob: -3.315919876098633
    4. '(' → logprob: -4.815919876098633
    5. '(
' → logprob: -6.440919876098633
    6. '_l' → logprob: -7.565919876098633
    7. 'len' → logprob: -9.065919876098633
    8. 'length' → logprob: -9.065919876098633
    9. '_lengths' → logprob: -9.065919876098633
    10. '_val' → logprob: -10.065919876098633

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132912516593933
    2. '=' → logprob: -1.313291311264038
    3. ' ' → logprob: -10.813291549682617
    4. '   ' → logprob: -12.688291549682617
    5. '_' → logprob: -13.188291549682617
    6. '=max' → logprob: -13.688291549682617
    7. ',' → logprob: -13.938291549682617
    8. '  ' → logprob: -14.063291549682617
    9. '()' → logprob: -14.688291549682617
    10. '    ' → logprob: -15.313291549682617

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7048740386962891
    2. ' ' → logprob: -1.204874038696289
    3. '0' → logprob: -1.579874038696289
    4. '   ' → logprob: -9.579874038696289
    5. ' max' → logprob: -10.954874038696289
    6. 'max' → logprob: -11.829874038696289
    7. '  ' → logprob: -13.329874038696289
    8. '    ' → logprob: -13.704874038696289
    9. '       ' → logprob: -14.329874038696289
    10. '           ' → logprob: -15.267374038696289

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859134554862976
    2. '0' → logprob: -3.048591375350952
    3. ' ' → logprob: -12.673591613769531
    4. 'max' → logprob: -14.173591613769531
    5. '   ' → logprob: -16.04859161376953
    6. '```' → logprob: -17.04859161376953
    7. '-' → logprob: -17.67359161376953
    8. '2' → logprob: -18.61109161376953
    9. '
' → logprob: -18.67359161376953
    10. '``' → logprob: -19.04859161376953

Token 177: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39949193596839905
    2. '           ' → logprob: -1.1494919061660767
    3. '       ' → logprob: -4.899491786956787
    4. 'for' → logprob: -6.149491786956787
    5. ' for' → logprob: -6.274491786956787
    6. '
' → logprob: -8.149492263793945
    7. '    
' → logprob: -8.274492263793945
    8. '        
' → logprob: -9.024492263793945
    9. '               ' → logprob: -9.274492263793945
    10. '' → logprob: -10.024492263793945

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02310093119740486
    2. '
' → logprob: -4.273100852966309
    3. '       ' → logprob: -5.523100852966309
    4. 'for' → logprob: -5.773100852966309
    5. ' for' → logprob: -6.398100852966309
    6. '               ' → logprob: -10.648100852966309
    7. '        
' → logprob: -10.898100852966309
    8. '    
' → logprob: -10.898100852966309
    9. '
' → logprob: -11.023100852966309
    10. '   ' → logprob: -11.023100852966309

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001421187655068934
    2. '           ' → logprob: -7.251420974731445
    3. ' for' → logprob: -7.251420974731445
    4. '       ' → logprob: -13.626420974731445
    5. '   ' → logprob: -14.251420974731445
    6. '	for' → logprob: -17.751420974731445
    7. ' ' → logprob: -17.751420974731445
    8. '               ' → logprob: -19.001420974731445
    9. '  ' → logprob: -19.251420974731445
    10. 'foreach' → logprob: -20.001420974731445

Token 180: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12056192010641098
    2. 'row' → logprob: -2.9955618381500244
    3. 'entry' → logprob: -4.2455620765686035
    4. 'dict' → logprob: -4.3705620765686035
    5. 'dic' → logprob: -4.3705620765686035
    6. ' d' → logprob: -4.7455620765686035
    7. 'i' → logprob: -5.4955620765686035
    8. 'mp' → logprob: -6.1205620765686035
    9. 'sub' → logprob: -6.4955620765686035
    10. 'table' → logprob: -6.7455620765686035

Token 181: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18559835851192474
    2. 'ict' → logprob: -2.060598373413086
    3. ' in' → logprob: -3.435598373413086
    4. 'ct' → logprob: -4.810598373413086
    5. 'ic' → logprob: -6.685598373413086
    6. 'i' → logprob: -8.810598373413086
    7. 'ictionary' → logprob: -9.560598373413086
    8. 'pt' → logprob: -10.685598373413086
    9. 'd' → logprob: -11.185598373413086
    10. '[' → logprob: -11.185598373413086

Token 182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07894894480705261
    2. ' self' → logprob: -2.578948974609375
    3. 'elf' → logprob: -9.953948974609375
    4. ' ' → logprob: -12.453948974609375
    5. 'range' → logprob: -13.078948974609375
    6. '   ' → logprob: -13.828948974609375
    7. '[self' → logprob: -14.328948974609375
    8. ' range' → logprob: -14.453948974609375
    9. 'ef' → logprob: -14.578948974609375
    10. '    ' → logprob: -14.828948974609375

Token 183: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.004030787386000156
    2. '.' → logprob: -5.629030704498291
    3. 'dp' → logprob: -8.12903118133545
    4. 'p' → logprob: -9.62903118133545
    5. ' .' → logprob: -10.50403118133545
    6. '	dp' → logprob: -11.25403118133545
    7. '_dp' → logprob: -11.75403118133545
    8. ' dp' → logprob: -12.37903118133545
    9. '.py' → logprob: -12.50403118133545
    10. '.
' → logprob: -12.50403118133545

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00886557251214981
    2. ':
' → logprob: -4.8838653564453125
    3. '):' → logprob: -6.7588653564453125
    4. '):
' → logprob: -10.258865356445312
    5. ' :' → logprob: -11.508865356445312
    6. '[' → logprob: -11.508865356445312
    7. '           ' → logprob: -11.633865356445312
    8. ' in' → logprob: -12.008865356445312
    9. '       ' → logprob: -12.133865356445312
    10. '.values' → logprob: -12.883865356445312

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06772328168153763
    2. ' for' → logprob: -2.942723274230957
    3. 'for' → logprob: -4.567723274230957
    4. '           ' → logprob: -6.067723274230957
    5. ' if' → logprob: -10.817723274230957
    6. ' max' → logprob: -11.067723274230957
    7. 'max' → logprob: -11.442723274230957
    8. 'if' → logprob: -12.192723274230957
    9. '   ' → logprob: -12.817723274230957
    10. '       ' → logprob: -12.942723274230957

Token 186: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22398445010185242
    2. 'if' (adapté à ' if') → logprob: -1.7239844799041748
    3. ' for' → logprob: -4.598984241485596
    4. '           ' → logprob: -4.973984241485596
    5. ' if' → logprob: -5.723984241485596
    6. 'max' → logprob: -6.223984241485596
    7. '   ' → logprob: -10.223984718322754
    8. '               ' → logprob: -10.723984718322754
    9. '       ' → logprob: -10.973984718322754
    10. ' max' → logprob: -11.473984718322754

Token 187: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47575312852859497
    2. ' d' → logprob: -0.975753128528595
    3. 'len' → logprob: -6.600753307342529
    4. ' len' → logprob: -8.225752830505371
    5. '               ' → logprob: -10.850752830505371
    6. ' ' → logprob: -12.225752830505371
    7. '   ' → logprob: -12.350752830505371
    8. '           ' → logprob: -12.475752830505371
    9. '                   ' → logprob: -12.475752830505371
    10. ' not' → logprob: -13.100752830505371

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0061014434322714806
    2. ':
' → logprob: -5.256101608276367
    3. ':max' → logprob: -7.381101608276367
    4. 'max' → logprob: -9.006101608276367
    5. '.values' → logprob: -11.006101608276367
    6. '):' → logprob: -11.006101608276367
    7. ' and' → logprob: -11.256101608276367
    8. '           ' → logprob: -11.506101608276367
    9. '.' → logprob: -11.631101608276367
    10. 'and' → logprob: -11.756101608276367

Token 189: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27681946754455566
    2. ' for' → logprob: -2.1518194675445557
    3. ' max' → logprob: -2.2768194675445557
    4. 'max' → logprob: -4.276819229125977
    5. 'for' → logprob: -4.776819229125977
    6. '                   ' → logprob: -8.151819229125977
    7. '           ' → logprob: -8.776819229125977
    8. ' if' → logprob: -9.276819229125977
    9. 'maxlength' → logprob: -11.026819229125977
    10. ',' → logprob: -11.901819229125977

Token 190: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03931577876210213
    2. ' max' → logprob: -3.414315700531006
    3. 'current' → logprob: -6.164315700531006
    4. 'for' → logprob: -6.289315700531006
    5. 'curr' → logprob: -7.414315700531006
    6. '               ' → logprob: -7.914315700531006
    7. ' for' → logprob: -8.664316177368164
    8. 'cur' → logprob: -8.664316177368164
    9. ' current' → logprob: -9.164316177368164
    10. '                   ' → logprob: -9.539316177368164

Token 191: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0002353640884393826
    2. '               ' → logprob: -10.000235557556152
    3. 'len' → logprob: -10.000235557556152
    4. '           ' → logprob: -10.625235557556152
    5. 'd' → logprob: -10.750235557556152
    6. 'max' → logprob: -10.875235557556152
    7. '_val' → logprob: -11.125235557556152
    8. '                   ' → logprob: -11.125235557556152
    9. '=max' → logprob: -11.500235557556152
    10. '_max' → logprob: -11.625235557556152

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11407652497291565
    2. '=' → logprob: -2.239076614379883
    3. '=max' → logprob: -6.864076614379883
    4. 'max' → logprob: -8.864076614379883
    5. '                   ' → logprob: -11.364076614379883
    6. ' max' → logprob: -11.489076614379883
    7. '               ' → logprob: -11.739076614379883
    8. '                       ' → logprob: -11.739076614379883
    9. '_len' → logprob: -11.739076614379883
    10. 'len' → logprob: -12.239076614379883

Token 193: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750484973192215
    2. ' max' → logprob: -3.5297505855560303
    3. '	max' → logprob: -17.65475082397461
    4. '(max' → logprob: -17.77975082397461
    5. ',max' → logprob: -18.65475082397461
    6. '=max' → logprob: -18.77975082397461
    7. '[max' → logprob: -19.02975082397461
    8. '_max' → logprob: -20.15475082397461
    9. '.max' → logprob: -21.15475082397461
    10. ' ' → logprob: -21.27975082397461

Token 194: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0003088871017098427
    2. 'max' → logprob: -8.375308990478516
    3. '(' → logprob: -9.500308990478516
    4. '(
' → logprob: -13.000308990478516
    5. '[max' → logprob: -14.875308990478516
    6. '=max' → logprob: -15.500308990478516
    7. '([' → logprob: -15.625308990478516
    8. ' max' → logprob: -15.750308990478516
    9. '(len' → logprob: -16.250308990478516
    10. '   ' → logprob: -17.000308990478516

Token 195: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.127333340875339e-06
    2. 'len' → logprob: -12.500003814697266
    3. '_length' → logprob: -16.125003814697266
    4. 'length' → logprob: -16.375003814697266
    5. '_LEN' → logprob: -16.500003814697266
    6. 'max' → logprob: -17.375003814697266
    7. 'Len' → logprob: -17.875003814697266
    8. 'ength' → logprob: -18.125003814697266
    9. '_max' → logprob: -18.375003814697266
    10. '[len' → logprob: -18.375003814697266

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.071022629737854
    2. ',max' → logprob: -2.6960225105285645
    3. 'max' → logprob: -7.5710225105285645
    4. ',d' → logprob: -7.9460225105285645
    5. ' ,' → logprob: -8.571022987365723
    6. ',
' → logprob: -11.946022987365723
    7. ' max' → logprob: -12.071022987365723
    8. '(max' → logprob: -12.446022987365723
    9. ',len' → logprob: -12.946022987365723
    10. 'd' → logprob: -12.946022987365723

Token 197: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750952497124672
    2. ' max' → logprob: -3.5297510623931885
    3. '(max' → logprob: -16.02975082397461
    4. '   ' → logprob: -16.90475082397461
    5. ' ' → logprob: -17.15475082397461
    6. ',max' → logprob: -17.15475082397461
    7. '           ' → logprob: -17.40475082397461
    8. '	max' → logprob: -17.40475082397461
    9. '=max' → logprob: -17.52975082397461
    10. '[max' → logprob: -18.15475082397461

Token 198: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.8351892473874614e-05
    2. '(' → logprob: -10.375048637390137
    3. 'd' → logprob: -11.625048637390137
    4. '(
' → logprob: -11.750048637390137
    5. ' (' → logprob: -16.12504768371582
    6. ' d' → logprob: -17.00004768371582
    7. '	d' → logprob: -17.25004768371582
    8. '(

' → logprob: -17.25004768371582
    9. ')d' → logprob: -18.37504768371582
    10. ',d' → logprob: -19.50004768371582

Token 199: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.00039849523454904556
    2. ' .' → logprob: -8.625398635864258
    3. '().' → logprob: -8.875398635864258
    4. '.' → logprob: -9.625398635864258
    5. 'values' → logprob: -12.000398635864258
    6. '.Values' → logprob: -12.500398635864258
    7. ' values' → logprob: -13.375398635864258
    8. '.value' → logprob: -13.750398635864258
    9. '(values' → logprob: -15.375398635864258
    10. ').' → logprob: -15.750398635864258

Token 200: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.001830942346714437
    2. '()))
' → logprob: -6.6268310546875
    3. '()' → logprob: -8.1268310546875
    4. '))' → logprob: -9.1268310546875
    5. '())' → logprob: -9.3768310546875
    6. '())))' → logprob: -12.1268310546875
    7. '()));' → logprob: -12.3768310546875
    8. '()))

' → logprob: -12.6268310546875
    9. '()
' → logprob: -14.3768310546875
    10. '()))
' → logprob: -14.5018310546875

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015243870439007878
    2. '       ' → logprob: -7.376524448394775
    3. 'return' → logprob: -7.501524448394775
    4. '
' → logprob: -8.126523971557617
    5. ' return' → logprob: -10.876523971557617
    6. ')
' → logprob: -11.626523971557617
    7. '               ' → logprob: -11.751523971557617
    8. '		' → logprob: -12.001523971557617
    9. '          ' → logprob: -13.376523971557617
    10. ')' → logprob: -13.751523971557617

Token 202: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06915847212076187
    2. '       ' → logprob: -2.8191585540771484
    3. ' return' → logprob: -5.319158554077148
    4. '   ' → logprob: -6.444158554077148
    5. '
' → logprob: -7.444158554077148
    6. '           ' → logprob: -9.819158554077148
    7. '	return' → logprob: -10.319158554077148
    8. ' ' → logprob: -13.694158554077148
    9. '     ' → logprob: -13.819158554077148
    10. '	' → logprob: -14.319158554077148

Token 203: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38687145709991455
    2. ' max' → logprob: -1.1368714570999146
    3. '(max' → logprob: -15.886871337890625
    4. '   ' → logprob: -16.386871337890625
    5. '           ' → logprob: -16.636871337890625
    6. '	max' → logprob: -16.761871337890625
    7. '
' → logprob: -17.261871337890625
    8. '       ' → logprob: -17.761871337890625
    9. '[max' → logprob: -17.761871337890625
    10. ',max' → logprob: -17.886871337890625

Token 204: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.7697225252486533e-06
    2. 'len' → logprob: -13.125003814697266
    3. '_' → logprob: -14.125003814697266
    4. '_length' → logprob: -14.750003814697266
    5. '_l' → logprob: -15.625003814697266
    6. '_max' → logprob: -15.625003814697266
    7. 'max' → logprob: -16.375003814697266
    8. 'length' → logprob: -16.625003814697266
    9. '(max' → logprob: -16.750003814697266
    10. '_LEN' → logprob: -17.375003814697266

Token 205: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3278130888938904
    2. '   ' → logprob: -1.4528131484985352
    3. '<|end|>' → logprob: -3.327813148498535
    4. '    
' → logprob: -5.202813148498535
    5. 'class' → logprob: -5.952813148498535
    6. '

' → logprob: -7.202813148498535
    7. '<|end|>' → logprob: -7.952813148498535
    8. '       ' → logprob: -9.077813148498535
    9. '```' → logprob: -9.202813148498535
    10. 'def' → logprob: -9.702813148498535

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017982997000217438
    2. 'def' → logprob: -4.8929829597473145
    3. 'class' → logprob: -5.3929829597473145
    4. '
' → logprob: -5.6429829597473145
    5. '    
' → logprob: -6.1429829597473145
    6. '<|end|>' → logprob: -10.517983436584473
    7. '        
' → logprob: -11.392983436584473
    8. '  
' → logprob: -11.767983436584473
    9. '

' → logprob: -12.017983436584473
    10. '   
' → logprob: -12.142983436584473

Token 207: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00801730528473854
    2. '   ' → logprob: -5.008017539978027
    3. ' def' → logprob: -6.758017539978027
    4. 'class' (adapté à ' class') → logprob: -8.883017539978027
    5. '    
' → logprob: -14.883017539978027
    6. '	def' → logprob: -15.383017539978027
    7. ' ' → logprob: -15.758017539978027
    8. '
' → logprob: -16.00801658630371
    9. ' class' → logprob: -17.50801658630371
    10. '```' → logprob: -17.75801658630371

Token 208: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.3555772304534912
    2. ' Arithmetic' → logprob: -1.7305772304534912
    3. ' Sequence' → logprob: -2.355577230453491
    4. ' Finder' → logprob: -2.480577230453491
    5. ' Result' → logprob: -2.730577230453491
    6. 'Solution' → logprob: -3.105577230453491
    7. ' AP' → logprob: -3.230577230453491
    8. ' Solver' → logprob: -3.355577230453491
    9. ' Sub' → logprob: -3.605577230453491
    10. 'Finder' → logprob: -3.605577230453491

Token 209: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.7091189622879028
    2. 'Sequence' → logprob: -2.2091188430786133
    3. 'Parser' → logprob: -2.3341188430786133
    4. 'Array' → logprob: -2.4591188430786133
    5. 'List' → logprob: -2.7091188430786133
    6. ':' → logprob: -2.9591188430786133
    7. 'Processor' → logprob: -3.4591188430786133
    8. 'Data' → logprob: -3.7091188430786133
    9. 'Handler' → logprob: -4.334118843078613
    10. 'Provider' → logprob: -4.584118843078613

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002832576632499695
    2. ':
' → logprob: -5.877832412719727
    3. '):' → logprob: -11.002832412719727
    4. '   ' → logprob: -12.877832412719727
    5. '(' → logprob: -13.127832412719727
    6. ':def' → logprob: -13.377832412719727
    7. '():' → logprob: -13.877832412719727
    8. 'def' → logprob: -14.127832412719727
    9. '<|end|>' → logprob: -14.127832412719727
    10. ' :' → logprob: -14.502832412719727

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5864109396934509
    2. '       ' → logprob: -0.8364109396934509
    3. 'def' → logprob: -5.461410999298096
    4. ' def' → logprob: -5.586410999298096
    5. '<|end|>' → logprob: -6.961410999298096
    6. '    
' → logprob: -7.961410999298096
    7. '    ' → logprob: -8.086410522460938
    8. '     ' → logprob: -8.586410522460938
    9. '
' → logprob: -8.711410522460938
    10. ':' → logprob: -9.586410522460938

Token 212: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5148419141769409
    2. 'def' → logprob: -1.014841914176941
    3. '@' (adapté à ' @') → logprob: -4.0148420333862305
    4. '   ' → logprob: -4.5148420333862305
    5. ' @' → logprob: -4.5148420333862305
    6. ' static' → logprob: -12.88984203338623
    7. ' ' → logprob: -13.13984203338623
    8. '       ' → logprob: -13.38984203338623
    9. 'staticmethod' → logprob: -13.88984203338623
    10. 'static' → logprob: -14.13984203338623

Token 213: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00031854258850216866
    2. 'static' → logprob: -8.75031852722168
    3. 'classmethod' → logprob: -8.75031852722168
    4. 'dat' → logprob: -14.12531852722168
    5. 'stat' → logprob: -14.75031852722168
    6. 'st' → logprob: -15.12531852722168
    7. 'sta' → logprob: -15.50031852722168
    8. ' static' → logprob: -17.25031852722168
    9. 'property' → logprob: -18.00031852722168
    10. '_static' → logprob: -19.50031852722168

Token 214: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11929956078529358
    2. ' def' → logprob: -2.8692996501922607
    3. '   ' → logprob: -3.6192996501922607
    4. '       ' → logprob: -3.6192996501922607
    5. '
' → logprob: -6.244299411773682
    6. '	def' → logprob: -9.49429988861084
    7. '        
' → logprob: -10.36929988861084
    8. '    
' → logprob: -10.74429988861084
    9. ' ' → logprob: -11.74429988861084
    10. '(def' → logprob: -11.74429988861084

Token 215: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004944477695971727
    2. ' def' → logprob: -6.254944324493408
    3. '
' → logprob: -6.504944324493408
    4. '       ' → logprob: -7.129944324493408
    5. '   ' → logprob: -7.254944324493408
    6. '	def' → logprob: -12.629944801330566
    7. '        
' → logprob: -13.129944801330566
    8. '    
' → logprob: -13.379944801330566
    9. ' ' → logprob: -15.129944801330566
    10. '  
' → logprob: -15.504944801330566

Token 216: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.547789674485102e-05
    2. ' def' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '
' → logprob: -19.625036239624023
    5. 'from' → logprob: -20.500036239624023
    6. '       ' → logprob: -21.125036239624023
    7. '	def' → logprob: -21.375036239624023
    8. '```' → logprob: -21.875036239624023
    9. '        
' → logprob: -22.625036239624023
    10. 'read' → logprob: -23.000036239624023

Token 217: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.315379798412323
    2. ' parse' → logprob: -1.3153798580169678
    3. 'read' → logprob: -6.440379619598389
    4. ' read' → logprob: -7.690379619598389
    5. 'from' → logprob: -11.565380096435547
    6. 'split' → logprob: -11.815380096435547
    7. 'process' → logprob: -11.815380096435547
    8. 'get' → logprob: -12.315380096435547
    9. ' tokenize' → logprob: -12.315380096435547
    10. 'def' → logprob: -12.440380096435547

Token 218: '()' (ID: 416)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.6178467869758606
    2. '(input' → logprob: -1.6178467273712158
    3. '(lines' → logprob: -2.117846727371216
    4. '(' → logprob: -3.242846727371216
    5. '(numbers' → logprob: -3.992846727371216
    6. '(sequence' → logprob: -3.992846727371216
    7. '(nums' → logprob: -4.742846965789795
    8. '(lst' → logprob: -4.992846965789795
    9. '(data' → logprob: -5.117846965789795
    10. '(code' → logprob: -5.367846965789795

Token 219: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014823337085545063
    2. ':' → logprob: -5.1398234367370605
    3. '():
' → logprob: -5.6398234367370605
    4. '(input' → logprob: -5.6398234367370605
    5. '()' → logprob: -7.7648234367370605
    6. '(' → logprob: -7.7648234367370605
    7. '(lines' → logprob: -8.264822959899902
    8. '(line' → logprob: -8.889822959899902
    9. '(data' → logprob: -9.264822959899902
    10. '(list' → logprob: -9.514822959899902

Token 220: ' '' (ID: 461)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2629895806312561
    2. ' list' → logprob: -1.5129895210266113
    3. '[list' → logprob: -5.262989521026611
    4. '[int' → logprob: -5.637989521026611
    5. 'List' → logprob: -6.637989521026611
    6. 'int' → logprob: -8.01298999786377
    7. ' [' → logprob: -8.26298999786377
    8. '[' → logprob: -8.76298999786377
    9. '[List' → logprob: -9.13798999786377
    10. '[]' → logprob: -9.88798999786377

Token 221: 'Arithmetic' (ID: 174387)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03341491520404816
    2. 'Arithmetic' → logprob: -3.533414840698242
    3. 'List' → logprob: -5.658414840698242
    4. '[list' → logprob: -9.283414840698242
    5. 'int' → logprob: -10.658414840698242
    6. ' list' → logprob: -11.033414840698242
    7. 'tuple' → logprob: -11.408414840698242
    8. '[' → logprob: -11.658414840698242
    9. 'Sequence' → logprob: -12.908414840698242
    10. '[List' → logprob: -13.033414840698242

Token 222: 'Progress' (ID: 11356)
  Prédit: 'Progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -1.0087516784551553e-05
    2. 'Sequence' → logprob: -12.25001049041748
    3. '_progress' → logprob: -12.75001049041748
    4. ' Progress' → logprob: -13.87501049041748
    5. ' progression' → logprob: -14.12501049041748
    6. 'progress' → logprob: -15.00001049041748
    7. 'Arithmetic' → logprob: -15.75001049041748
    8. 'Pro' → logprob: -17.250009536743164
    9. '.Progress' → logprob: -17.750009536743164
    10. 'Problem' → logprob: -17.875009536743164

Token 223: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.00026050140149891376
    2. 'ession' → logprob: -9.250260353088379
    3. 'ation' → logprob: -9.750260353088379
    4. 'on' → logprob: -10.250260353088379
    5. 'Progress' → logprob: -10.500260353088379
    6. 'class' → logprob: -11.500260353088379
    7. 'iation' → logprob: -12.250260353088379
    8. 'osition' → logprob: -12.750260353088379
    9. 'ution' → logprob: -12.875260353088379
    10. 'tion' → logprob: -13.000260353088379

Token 224: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -8.41866585687967e-06
    2. 'finder' → logprob: -12.750008583068848
    3. ' Finder' → logprob: -13.000008583068848
    4. ''' → logprob: -13.500008583068848
    5. 'Length' → logprob: -13.750008583068848
    6. ' finder' → logprob: -15.500008583068848
    7. 'Sequence' → logprob: -15.875008583068848
    8. 'List' → logprob: -16.12500762939453
    9. 'Finding' → logprob: -16.25000762939453
    10. '')' → logprob: -16.37500762939453

Token 225: '.Input' (ID: 22638)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5920372605323792
    2. '':
' → logprob: -0.8420372605323792
    3. '[]' → logprob: -5.092037200927734
    4. '':
' → logprob: -5.467037200927734
    5. '.List' → logprob: -6.592037200927734
    6. '[' → logprob: -7.217037200927734
    7. ''' → logprob: -7.342037200927734
    8. '['' → logprob: -7.592037200927734
    9. '.Sequence' → logprob: -7.592037200927734
    10. 'List' → logprob: -8.342037200927734

Token 226: 'Data' (ID: 1186)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.00944474432617426
    2. 'Sequence' → logprob: -4.759444713592529
    3. 'List' → logprob: -7.259444713592529
    4. '.Parser' → logprob: -10.134445190429688
    5. '')' → logprob: -10.384445190429688
    6. '[]' → logprob: -11.384445190429688
    7. 'Elements' → logprob: -11.884445190429688
    8. ''):
' → logprob: -12.259445190429688
    9. 'Element' → logprob: -12.384445190429688
    10. 's' → logprob: -12.634445190429688

Token 227: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5738202929496765
    2. '':
' → logprob: -0.9488202929496765
    3. '.Input' → logprob: -3.8238203525543213
    4. 'Data' → logprob: -4.448820114135742
    5. '()' → logprob: -5.323820114135742
    6. '.Data' → logprob: -5.573820114135742
    7. ''' → logprob: -5.823820114135742
    8. 'Input' → logprob: -6.198820114135742
    9. '.' → logprob: -7.573820114135742
    10. '':
' → logprob: -7.573820114135742

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006697862991131842
    2. '               ' → logprob: -8.250669479370117
    3. 'return' → logprob: -8.875669479370117
    4. '       ' → logprob: -9.000669479370117
    5. '...' → logprob: -9.750669479370117
    6. ' return' → logprob: -10.750669479370117
    7. 'import' → logprob: -11.625669479370117
    8. ' pass' → logprob: -11.625669479370117
    9. 'pass' → logprob: -11.625669479370117
    10. '#' → logprob: -12.000669479370117

Token 229: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.474899411201477
    2. 'data' → logprob: -1.474899411201477
    3. 'n' (adapté à ' n') → logprob: -2.0998992919921875
    4. 'numbers' → logprob: -2.2248992919921875
    5. 'import' → logprob: -2.4748992919921875
    6. 'line' → logprob: -2.8498992919921875
    7. 'input' → logprob: -3.0998992919921875
    8. 'lines' → logprob: -3.9748992919921875
    9. 'value' → logprob: -4.0998992919921875
    10. 'raw' → logprob: -4.4748992919921875

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1033560261130333
    2. ',' → logprob: -2.478356122970581
    3. '=' → logprob: -4.353355884552002
    4. '=int' → logprob: -7.353355884552002
    5. ' ,' → logprob: -8.60335636138916
    6. ',
' → logprob: -9.35335636138916
    7. '=input' → logprob: -9.35335636138916
    8. '   ' → logprob: -9.35335636138916
    9. ' =
' → logprob: -9.60335636138916
    10. ')' → logprob: -9.85335636138916

Token 231: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889033854007721
    2. ' int' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.828890800476074
    4. 'len' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.203889846801758
    6. '[int' → logprob: -16.328889846801758
    7. '(int' → logprob: -17.078889846801758
    8. '  ' → logprob: -17.203889846801758
    9. '	int' → logprob: -17.328889846801758
    10. '<int' → logprob: -17.953889846801758

Token 232: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016325322212651372
    2. '(' → logprob: -8.750163078308105
    3. 'input' → logprob: -12.250163078308105
    4. ' input' → logprob: -18.250164031982422
    5. '(
' → logprob: -18.875164031982422
    6. '=input' → logprob: -19.125164031982422
    7. ' (' → logprob: -19.500164031982422
    8. '(in' → logprob: -20.125164031982422
    9. ',input' → logprob: -20.125164031982422
    10. '()' → logprob: -20.375164031982422

Token 233: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015345276333391666
    2. '())
' → logprob: -4.265345096588135
    3. '().' → logprob: -7.390345096588135
    4. '()' → logprob: -7.515345096588135
    5. '()
' → logprob: -11.640345573425293
    6. '())
' → logprob: -12.640345573425293
    7. '())

' → logprob: -12.890345573425293
    8. '(' → logprob: -13.140345573425293
    9. ' ())' → logprob: -13.265345573425293
    10. '()))' → logprob: -14.640345573425293

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011830959469079971
    2. '       ' → logprob: -5.886830806732178
    3. '<|end|>' → logprob: -5.886830806732178
    4. '            
' → logprob: -6.636830806732178
    5. 'n' → logprob: -7.136830806732178
    6. 'input' → logprob: -7.511830806732178
    7. 'tokens' → logprob: -7.511830806732178
    8. 'values' → logprob: -7.761830806732178
    9. 'data' → logprob: -8.261831283569336
    10. '
' → logprob: -9.011831283569336

Token 235: ' vals' (ID: 58985)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.11023033410310745
    2. 'values' → logprob: -2.7352304458618164
    3. 'data' → logprob: -4.985230445861816
    4. ' arr' → logprob: -5.110230445861816
    5. 'seq' → logprob: -5.110230445861816
    6. 'numbers' → logprob: -5.485230445861816
    7. ' values' → logprob: -5.860230445861816
    8. 'elements' → logprob: -5.985230445861816
    9. 'sequence' → logprob: -6.110230445861816
    10. 'nums' → logprob: -6.235230445861816

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026311097666621208
    2. '=' → logprob: -3.651311159133911
    3. '=[]' → logprob: -12.401310920715332
    4. '   ' → logprob: -13.151310920715332
    5. '[]' → logprob: -13.901310920715332
    6. ' ' → logprob: -14.526310920715332
    7. ' =[' → logprob: -14.526310920715332
    8. 's' → logprob: -14.651310920715332
    9. '=[]
' → logprob: -14.901310920715332
    10. '[' → logprob: -15.026310920715332

Token 237: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20148389041423798
    2. ' list' → logprob: -1.7014838457107544
    3. '[list' → logprob: -10.076483726501465
    4. '[' → logprob: -10.701483726501465
    5. ' [' → logprob: -12.076483726501465
    6. '	list' → logprob: -15.826483726501465
    7. '=list' → logprob: -17.07648468017578
    8. '   ' → logprob: -17.45148468017578
    9. '[]' → logprob: -17.45148468017578
    10. ' ' → logprob: -17.57648468017578

Token 238: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.3795937522663735e-05
    2. '(' → logprob: -10.75002384185791
    3. 'map' → logprob: -13.12502384185791
    4. '()' → logprob: -15.62502384185791
    5. '(int' → logprob: -16.875022888183594
    6. '(range' → logprob: -17.500022888183594
    7. '(
' → logprob: -18.250022888183594
    8. ' map' → logprob: -18.500022888183594
    9. '(m' → logprob: -19.750022888183594
    10. '	map' → logprob: -19.875022888183594

Token 239: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008830118924379349
    2. 'int' → logprob: -4.7588300704956055
    3. '(' → logprob: -8.633830070495605
    4. ')' → logprob: -11.758830070495605
    5. '   ' → logprob: -11.883830070495605
    6. ' int' → logprob: -12.258830070495605
    7. ',int' → logprob: -12.258830070495605
    8. ' (' → logprob: -12.883830070495605
    9. '(
' → logprob: -12.883830070495605
    10. '(str' → logprob: -13.258830070495605

Token 240: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010528572835028172
    2. ',input' → logprob: -5.010528564453125
    3. 'input' → logprob: -5.885528564453125
    4. ',' → logprob: -7.260528564453125
    5. '(' → logprob: -8.135528564453125
    6. ' (' → logprob: -11.135528564453125
    7. ' input' → logprob: -11.510528564453125
    8. '(
' → logprob: -13.260528564453125
    9. ')' → logprob: -13.510528564453125
    10. '
' → logprob: -14.135528564453125

Token 241: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151700496673584
    2. ' input' → logprob: -4.018151760101318
    3. '(input' → logprob: -14.01815128326416
    4. ',input' → logprob: -14.26815128326416
    5. '=input' → logprob: -16.268152236938477
    6. '   ' → logprob: -16.268152236938477
    7. '	input' → logprob: -16.768152236938477
    8. '<input' → logprob: -17.018152236938477
    9. 'lambda' → logprob: -17.393152236938477
    10. ')' → logprob: -17.893152236938477

Token 242: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.000000953674316
    3. '(' → logprob: -18.125
    4. '()
' → logprob: -18.625
    5. '.split' → logprob: -18.75
    6. ' ().' → logprob: -19.5
    7. 'split' → logprob: -19.625
    8. '   ' → logprob: -21.75
    9. '("").' → logprob: -21.875
    10. ')' → logprob: -22.25

Token 243: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019293478690087795
    2. 'strip' → logprob: -6.25192928314209
    3. ' split' → logprob: -14.50192928314209
    4. 'rstrip' → logprob: -15.37692928314209
    5. '(split' → logprob: -17.751930236816406
    6. ' strip' → logprob: -19.001930236816406
    7. 'spl' → logprob: -19.251930236816406
    8. '.split' → logprob: -20.251930236816406
    9. '_split' → logprob: -21.376930236816406
    10. '
' → logprob: -21.626930236816406

Token 244: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0185090284794569
    2. '()' → logprob: -4.0185089111328125
    3. '()))
' → logprob: -8.518508911132812
    4. '())' → logprob: -9.393508911132812
    5. '))' → logprob: -10.143508911132812
    6. '(' → logprob: -10.768508911132812
    7. '()));' → logprob: -11.768508911132812
    8. '())))' → logprob: -13.143508911132812
    9. '(),' → logprob: -13.518508911132812
    10. '()))

' → logprob: -14.143508911132812

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010349531657993793
    2. 'return' → logprob: -7.626034736633301
    3. '
' → logprob: -8.1260347366333
    4. ' return' → logprob: -9.5010347366333
    5. '       ' → logprob: -9.6260347366333
    6. '            
' → logprob: -10.3760347366333
    7. '		' → logprob: -11.0010347366333
    8. 'n' → logprob: -11.2510347366333
    9. ' if' → logprob: -11.2510347366333
    10. '<|end|>' → logprob: -11.5010347366333

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04537399485707283
    2. ' return' → logprob: -3.4203739166259766
    3. 'if' → logprob: -5.170373916625977
    4. '           ' → logprob: -5.795373916625977
    5. ' if' → logprob: -6.795373916625977
    6. 'input' → logprob: -7.170373916625977
    7. '       ' → logprob: -7.295373916625977
    8. 'data' → logprob: -8.920373916625977
    9. 'assert' → logprob: -9.170373916625977
    10. ' input' → logprob: -10.545373916625977

Token 247: ' Arithmetic' (ID: 179942)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -0.011049824766814709
    2. ' Arithmetic' → logprob: -4.511049747467041
    3. '   ' → logprob: -13.8860502243042
    4. '           ' → logprob: -14.7610502243042
    5. ' arithmetic' → logprob: -15.7610502243042
    6. 'Ar' → logprob: -16.136049270629883
    7. 'cls' → logprob: -16.136049270629883
    8. ' ' → logprob: -16.261049270629883
    9. '       ' → logprob: -16.386049270629883
    10. '  ' → logprob: -17.261049270629883

Token 248: 'Progress' (ID: 11356)
  Prédit: 'Progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -2.1008713702030946e-06
    2. 'Arithmetic' → logprob: -13.500001907348633
    3. 'progress' → logprob: -15.125001907348633
    4. '_progress' → logprob: -15.125001907348633
    5. ' Progress' → logprob: -16.375001907348633
    6. ' progression' → logprob: -18.625001907348633
    7. '.Progress' → logprob: -18.875001907348633
    8. 'Pro' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '`' → logprob: -19.750001907348633

Token 249: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.002284076064825058
    2. 'Progress' → logprob: -6.127284049987793
    3. 'tion' → logprob: -9.627284049987793
    4. 'ation' → logprob: -11.502284049987793
    5. 'ision' → logprob: -12.252284049987793
    6. '   ' → logprob: -12.752284049987793
    7. 'iation' → logprob: -12.877284049987793
    8. 'Sequence' → logprob: -13.127284049987793
    9. 'ition' → logprob: -13.127284049987793
    10. 'ution' → logprob: -13.752284049987793

Token 250: 'Finder' (ID: 42976)
  Prédit: 'Progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -0.00017922651022672653
    2. 'Finder' → logprob: -9.500179290771484
    3. 'Sequence' → logprob: -9.750179290771484
    4. 'Arithmetic' → logprob: -10.500179290771484
    5. 'progress' → logprob: -11.375179290771484
    6. 'Pro' → logprob: -13.000179290771484
    7. ' progression' → logprob: -14.000179290771484
    8. '_progress' → logprob: -14.000179290771484
    9. 'Pattern' → logprob: -14.250179290771484
    10. 'Prog' → logprob: -14.750179290771484

Token 251: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -4.961759259458631e-06
    2. ' .' → logprob: -13.125004768371582
    3. '.' → logprob: -14.125004768371582
    4. 'Input' → logprob: -14.375004768371582
    5. '.INPUT' → logprob: -14.875004768371582
    6. '.Experimental' → logprob: -15.500004768371582
    7. ''.' → logprob: -15.750004768371582
    8. '.Output' → logprob: -16.0000057220459
    9. '   ' → logprob: -16.1250057220459
    10. '<Input' → logprob: -16.1250057220459

Token 252: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -1.306760805164231e-05
    2. 'Parser' → logprob: -11.25001335144043
    3. 'data' → logprob: -17.37501335144043
    4. '_data' → logprob: -18.62501335144043
    5. ' Data' → logprob: -19.50001335144043
    6. '	Data' → logprob: -19.50001335144043
    7. '_Data' → logprob: -19.75001335144043
    8. 'DATA' → logprob: -20.62501335144043
    9. 'parser' → logprob: -20.62501335144043
    10. '<Data' → logprob: -20.75001335144043

Token 253: '(n' (ID: 2406)
  Prédit: '(vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -0.005660117603838444
    2. '(n' → logprob: -5.255660057067871
    3. '(' → logprob: -8.255660057067871
    4. '([' → logprob: -9.880660057067871
    5. '(len' → logprob: -10.255660057067871
    6. '(values' → logprob: -10.255660057067871
    7. '(val' → logprob: -10.630660057067871
    8. 'vals' → logprob: -11.755660057067871
    9. '(
' → logprob: -12.380660057067871
    10. '(nums' → logprob: -12.755660057067871

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ',val' → logprob: -12.625017166137695
    4. '=' → logprob: -13.500017166137695
    5. ',
' → logprob: -15.125017166137695
    6. '   ' → logprob: -16.500017166137695
    7. '(vals' → logprob: -16.750017166137695
    8. 'vals' → logprob: -17.500017166137695
    9. ',v' → logprob: -17.875017166137695
    10. ' vals' → logprob: -18.625017166137695

Token 255: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.02325444668531418
    2. ' vals' → logprob: -3.77325439453125
    3. '(vals' → logprob: -13.27325439453125
    4. '   ' → logprob: -13.39825439453125
    5. '[' → logprob: -13.77325439453125
    6. '           ' → logprob: -14.14825439453125
    7. '    ' → logprob: -14.14825439453125
    8. 'val' → logprob: -14.39825439453125
    9. '       ' → logprob: -14.64825439453125
    10. ' ' → logprob: -14.64825439453125

Token 256: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021593389101326466
    2. '       ' → logprob: -8.500215530395508
    3. ' )' → logprob: -12.250215530395508
    4. '   ' → logprob: -12.750215530395508
    5. '           ' → logprob: -12.875215530395508
    6. ')
' → logprob: -13.500215530395508
    7. '())' → logprob: -15.125215530395508
    8. '))' → logprob: -15.875215530395508
    9. '      ' → logprob: -16.500215530395508
    10. '        ' → logprob: -16.750215530395508

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0457327775657177
    2. '<|end|>' → logprob: -3.5457327365875244
    3. 'class' → logprob: -4.5457329750061035
    4. '
' → logprob: -5.6707329750061035
    5. '    
' → logprob: -6.6707329750061035
    6. '<|end|>' → logprob: -8.920732498168945
    7. '       ' → logprob: -9.420732498168945
    8. ' class' → logprob: -9.670732498168945
    9. '        
' → logprob: -10.045732498168945
    10. '```' → logprob: -10.045732498168945

Token 258: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.07972726225852966
    2. '   ' → logprob: -2.5797271728515625
    3. ' class' → logprob: -7.3297271728515625
    4. '
' → logprob: -8.829727172851562
    5. '    
' → logprob: -10.579727172851562
    6. ' ' → logprob: -12.829727172851562
    7. '	class' → logprob: -13.704727172851562
    8. '  ' → logprob: -13.829727172851562
    9. '@dat' → logprob: -13.954727172851562
    10. '

' → logprob: -14.079727172851562

Token 259: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.016039058566093445
    2. ' Input' → logprob: -4.14103889465332
    3. 'Output' → logprob: -13.64103889465332
    4. '	Input' → logprob: -13.89103889465332
    5. ' ' → logprob: -14.39103889465332
    6. 'input' → logprob: -14.64103889465332
    7. '_Input' → logprob: -15.14103889465332
    8. '_input' → logprob: -15.39103889465332
    9. ' input' → logprob: -15.39103889465332
    10. '.Input' → logprob: -15.51603889465332

Token 260: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -7.896309739408025e-07
    2. 'data' → logprob: -14.750000953674316
    3. '@Data' → logprob: -15.625000953674316
    4. '_data' → logprob: -16.375
    5. '_Data' → logprob: -16.875
    6. '<Data' → logprob: -17.75
    7. ' Data' → logprob: -17.75
    8. '	Data' → logprob: -18.125
    9. 'DATA' → logprob: -18.75
    10. 'Dat' → logprob: -19.875

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520638108253479
    2. ':
' → logprob: -1.5020637512207031
    3. '   ' → logprob: -9.752063751220703
    4. '(' → logprob: -9.877063751220703
    5. ':

' → logprob: -12.127063751220703
    6. '(object' → logprob: -12.752063751220703
    7. '):' → logprob: -12.752063751220703
    8. '):
' → logprob: -12.877063751220703
    9. ' :' → logprob: -13.002063751220703
    10. ':def' → logprob: -13.127063751220703

Token 262: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5790985822677612
    2. '       ' → logprob: -0.8290985822677612
    3. 'def' → logprob: -5.829098701477051
    4. ':
' → logprob: -9.57909870147705
    5. '    
' → logprob: -9.95409870147705
    6. '  ' → logprob: -11.32909870147705
    7. ' def' → logprob: -11.32909870147705
    8. '     ' → logprob: -11.45409870147705
    9. ':' → logprob: -11.57909870147705
    10. ' ' → logprob: -11.57909870147705

Token 263: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011139779351651669
    2. ' def' → logprob: -4.511139869689941
    3. '   ' → logprob: -9.511139869689941
    4. '       ' → logprob: -11.136139869689941
    5. '__' → logprob: -12.886139869689941
    6. '@dat' → logprob: -14.636139869689941
    7. '	def' → logprob: -15.386139869689941
    8. ' ' → logprob: -16.261138916015625
    9. ' __' → logprob: -18.011138916015625
    10. 'class' → logprob: -18.011138916015625

Token 264: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011078709736466408
    2. ' __' → logprob: -4.511078834533691
    3. 'init' → logprob: -10.636078834533691
    4. 'def' → logprob: -12.886078834533691
    5. '```' → logprob: -13.511078834533691
    6. '_init' → logprob: -13.761078834533691
    7. ' def' → logprob: -14.011078834533691
    8. '___' → logprob: -14.386078834533691
    9. '`' → logprob: -15.386078834533691
    10. '**' → logprob: -16.386077880859375

Token 265: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -17.5
    3. '__' → logprob: -17.625
    4. 'int' → logprob: -18.125
    5. '_init' → logprob: -18.125
    6. ' init' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '
' → logprob: -19.625
    9. 'inite' → logprob: -19.75
    10. 'def' → logprob: -20.0

Token 266: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03811401128768921
    2. '(self' → logprob: -3.288114070892334
    3. '__' → logprob: -10.288113594055176
    4. '__(
' → logprob: -11.163113594055176
    5. '(' → logprob: -11.288113594055176
    6. 'self' → logprob: -11.913113594055176
    7. '_(' → logprob: -12.788113594055176
    8. ' (' → logprob: -13.663113594055176
    9. '<>(' → logprob: -15.038113594055176
    10. '   ' → logprob: -15.913113594055176

Token 267: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.694766489090398e-05
    2. ' self' → logprob: -10.000066757202148
    3. '       ' → logprob: -10.875066757202148
    4. ',' → logprob: -14.000066757202148
    5. '           ' → logprob: -14.250066757202148
    6. '
' → logprob: -14.625066757202148
    7. '(self' → logprob: -15.125066757202148
    8. '0' → logprob: -16.12506675720215
    9. '   ' → logprob: -17.00006675720215
    10. ' ' → logprob: -17.25006675720215

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003993296413682401
    2. 'self' → logprob: -7.875399112701416
    3. ' ,' → logprob: -11.375399589538574
    4. '(self' → logprob: -12.500399589538574
    5. ',self' → logprob: -13.000399589538574
    6. '       ' → logprob: -13.750399589538574
    7. ' self' → logprob: -15.000399589538574
    8. ',
' → logprob: -15.125399589538574
    9. '   ' → logprob: -16.875398635864258
    10. '           ' → logprob: -17.875398635864258

Token 269: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07774306833744049
    2. ' n' → logprob: -2.9527430534362793
    3. 'self' → logprob: -4.577743053436279
    4. 'size' → logprob: -5.202743053436279
    5. '       ' → logprob: -5.827743053436279
    6. 'length' → logprob: -6.702743053436279
    7. ' size' → logprob: -6.952743053436279
    8. 'num' → logprob: -7.827743053436279
    9. ' self' → logprob: -7.952743053436279
    10. '           ' → logprob: -7.952743053436279

Token 270: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07261049747467041
    2. ',' → logprob: -2.697610378265381
    3. ':int' → logprob: -5.947610378265381
    4. ' :' → logprob: -10.322610855102539
    5. ' ,' → logprob: -11.072610855102539
    6. ':,' → logprob: -12.447610855102539
    7. 'int' → logprob: -13.447610855102539
    8. '   ' → logprob: -13.447610855102539
    9. ',int' → logprob: -13.947610855102539
    10. ',:' → logprob: -14.447610855102539

Token 271: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002615742268972099
    2. ' int' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.500261306762695
    4. '       ' → logprob: -17.000261306762695
    5. ' ' → logprob: -18.750261306762695
    6. '  ' → logprob: -18.875261306762695
    7. ':int' → logprob: -18.875261306762695
    8. '           ' → logprob: -19.250261306762695
    9. '	int' → logprob: -19.375261306762695
    10. '
' → logprob: -19.375261306762695

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.750007629394531
    3. ',
' → logprob: -16.62500762939453
    4. ',val' → logprob: -16.75000762939453
    5. '   ' → logprob: -17.12500762939453
    6. '       ' → logprob: -17.37500762939453
    7. '‌,' → logprob: -18.37500762939453
    8. ',int' → logprob: -19.12500762939453
    9. ',n' → logprob: -19.62500762939453
    10. ',value' → logprob: -20.00000762939453

Token 273: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5904346704483032
    2. ' values' → logprob: -1.2154346704483032
    3. 'vals' → logprob: -2.3404345512390137
    4. ' vals' → logprob: -2.9654345512390137
    5. 'arr' → logprob: -7.715434551239014
    6. '           ' → logprob: -8.340435028076172
    7. ' sequence' → logprob: -8.840435028076172
    8. '       ' → logprob: -8.965435028076172
    9. 'sequence' → logprob: -9.090435028076172
    10. '        ' → logprob: -9.340435028076172

Token 274: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2077600508928299
    2. '):' → logprob: -1.7077600955963135
    3. '):
' → logprob: -5.082759857177734
    4. ':list' → logprob: -9.832759857177734
    5. ' ):' → logprob: -9.957759857177734
    6. '   ' → logprob: -11.707759857177734
    7. ' :' → logprob: -12.082759857177734
    8. '):
' → logprob: -12.957759857177734
    9. ')' → logprob: -13.207759857177734
    10. '):

' → logprob: -13.832759857177734

Token 275: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014256584458053112
    2. ' list' → logprob: -4.264256477355957
    3. 'List' → logprob: -9.514256477355957
    4. '[list' → logprob: -11.139256477355957
    5. ')' → logprob: -12.639256477355957
    6. ':list' → logprob: -14.639256477355957
    7. '   ' → logprob: -15.264256477355957
    8. '=list' → logprob: -15.764256477355957
    9. '):
' → logprob: -16.139257431030273
    10. '	list' → logprob: -16.264257431030273

Token 276: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0663643404841423
    2. '):' → logprob: -2.816364288330078
    3. '):
' → logprob: -5.441364288330078
    4. '<int' → logprob: -10.566364288330078
    5. 'int' → logprob: -11.941364288330078
    6. '[' → logprob: -12.066364288330078
    7. ':' → logprob: -12.441364288330078
    8. '   ' → logprob: -12.566364288330078
    9. '[Int' → logprob: -12.941364288330078
    10. ')' → logprob: -13.816364288330078

Token 277: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.07386747747659683
    2. '):' → logprob: -3.1988675594329834
    3. ']):
' → logprob: -4.198867321014404
    4. '[int' → logprob: -4.448867321014404
    5. ']' → logprob: -6.323867321014404
    6. '])' → logprob: -7.198867321014404
    7. ')' → logprob: -7.573867321014404
    8. ' ):' → logprob: -8.698867797851562
    9. ']:' → logprob: -9.073867797851562
    10. '[' → logprob: -9.198867797851562

Token 278: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011615472845733166
    2. '       ' → logprob: -4.51161527633667
    3. 'self' → logprob: -8.511615753173828
    4. ' self' → logprob: -8.886615753173828
    5. '          ' → logprob: -9.261615753173828
    6. ',' → logprob: -9.511615753173828
    7. ':' → logprob: -11.261615753173828
    8. '):
' → logprob: -11.636615753173828
    9. '         ' → logprob: -11.761615753173828
    10. '):' → logprob: -11.886615753173828

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005809116992168128
    2. ' self' → logprob: -7.750580787658691
    3. '       ' → logprob: -9.500580787658691
    4. '           ' → logprob: -9.500580787658691
    5. '   ' → logprob: -15.000580787658691
    6. '	self' → logprob: -15.750580787658691
    7. '               ' → logprob: -16.125581741333008
    8. ' ' → logprob: -18.375581741333008
    9. 'super' → logprob: -18.375581741333008
    10. '         ' → logprob: -18.750581741333008

Token 280: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00683685252442956
    2. 'n' → logprob: -5.006836891174316
    3. '.' → logprob: -9.256836891174316
    4. '.values' → logprob: -10.756836891174316
    5. 'values' → logprob: -12.881836891174316
    6. ' .' → logprob: -13.881836891174316
    7. ' n' → logprob: -14.506836891174316
    8. '   ' → logprob: -14.756836891174316
    9. '	n' → logprob: -15.381836891174316
    10. '.length' → logprob: -17.6318359375

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324605919420719
    2. ' =' → logprob: -3.7732460498809814
    3. '=n' → logprob: -15.398245811462402
    4. '=int' → logprob: -15.648245811462402
    5. '=self' → logprob: -16.52324676513672
    6. ',' → logprob: -17.39824676513672
    7. '    ' → logprob: -17.39824676513672
    8. '   ' → logprob: -17.52324676513672
    9. ')' → logprob: -17.77324676513672
    10. ' ' → logprob: -18.02324676513672

Token 282: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931495666503906
    2. ' n' → logprob: -0.6931495666503906
    3. '	n' → logprob: -13.06814956665039
    4. '    ' → logprob: -16.81814956665039
    5. '=n' → logprob: -16.81814956665039
    6. '   ' → logprob: -17.06814956665039
    7. ',n' → logprob: -17.31814956665039
    8. ')n' → logprob: -17.44314956665039
    9. '_n' → logprob: -17.56814956665039
    10. ' ' → logprob: -17.81814956665039

Token 283: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15097807347774506
    2. 'self' → logprob: -2.0259780883789062
    3. ' self' → logprob: -4.900978088378906
    4. '       ' → logprob: -7.775978088378906
    5. '
' → logprob: -8.275978088378906
    6. '   ' → logprob: -9.650978088378906
    7. ',' → logprob: -10.275978088378906
    8. '          ' → logprob: -11.025978088378906
    9. ',self' → logprob: -11.650978088378906
    10. '(self' → logprob: -12.150978088378906

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6807814836502075
    2. 'self' → logprob: -1.1807814836502075
    3. ' self' → logprob: -1.6807814836502075
    4. '       ' → logprob: -8.055781364440918
    5. '   ' → logprob: -8.680781364440918
    6. '          ' → logprob: -12.305781364440918
    7. '	self' → logprob: -12.680781364440918
    8. ' ' → logprob: -12.680781364440918
    9. '         ' → logprob: -12.805781364440918
    10. '               ' → logprob: -13.180781364440918

Token 285: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006812188657931983
    2. ' self' → logprob: -7.375681400299072
    3. '           ' → logprob: -10.000680923461914
    4. 'values' → logprob: -11.875680923461914
    5. '       ' → logprob: -13.500680923461914
    6. '   ' → logprob: -14.375680923461914
    7. ' ' → logprob: -16.000680923461914
    8. '
' → logprob: -16.375680923461914
    9. '          ' → logprob: -16.875680923461914
    10. '         ' → logprob: -16.875680923461914

Token 286: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0236408319324255
    2. 'values' → logprob: -3.7736408710479736
    3. '=' → logprob: -8.523640632629395
    4. '.' → logprob: -9.273640632629395
    5. ' =' → logprob: -9.648640632629395
    6. ' values' → logprob: -10.898640632629395
    7. ' .' → logprob: -11.648640632629395
    8. '_values' → logprob: -12.773640632629395
    9. '	values' → logprob: -12.898640632629395
    10. '   ' → logprob: -13.898640632629395

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '   ' → logprob: -17.22520637512207
    4. '.values' → logprob: -17.35020637512207
    5. ' ' → logprob: -17.47520637512207
    6. '=self' → logprob: -17.60020637512207
    7. '.extend' → logprob: -18.10020637512207
    8. '[:]' → logprob: -18.10020637512207
    9. '=
' → logprob: -18.22520637512207
    10. '.append' → logprob: -18.47520637512207

Token 288: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.038042180240154266
    2. ' values' → logprob: -3.2880420684814453
    3. '	values' → logprob: -14.663042068481445
    4. 'value' → logprob: -15.913042068481445
    5. '(values' → logprob: -16.788042068481445
    6. '.values' → logprob: -17.538042068481445
    7. '   ' → logprob: -18.163042068481445
    8. ' ' → logprob: -18.413042068481445
    9. 'list' → logprob: -18.913042068481445
    10. '_values' → logprob: -19.913042068481445

Token 289: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10196637362241745
    2. '   ' → logprob: -2.351966381072998
    3. '<|end|>' → logprob: -6.976966381072998
    4. '

' → logprob: -7.726966381072998
    5. '    
' → logprob: -8.10196590423584
    6. '<|end|>' → logprob: -10.60196590423584
    7. '       ' → logprob: -10.72696590423584
    8. '        
' → logprob: -11.60196590423584
    9. 'def' → logprob: -12.10196590423584
    10. 'class' → logprob: -12.10196590423584

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008257107809185982
    2. 'class' → logprob: -4.883256912231445
    3. 'def' → logprob: -8.133256912231445
    4. '    
' → logprob: -8.383256912231445
    5. '
' → logprob: -9.383256912231445
    6. '<|end|>' → logprob: -10.758256912231445
    7. ' class' → logprob: -11.258256912231445
    8. '<|end|>' → logprob: -13.133256912231445
    9. '  
' → logprob: -13.508256912231445
    10. '        
' → logprob: -13.508256912231445

Token 291: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.27280405163764954
    2. '   ' → logprob: -1.5228040218353271
    3. ' def' → logprob: -3.897804021835327
    4. 'class' → logprob: -8.022804260253906
    5. '    
' → logprob: -10.647804260253906
    6. '@' → logprob: -11.772804260253906
    7. '
' → logprob: -12.397804260253906
    8. '	def' → logprob: -12.522804260253906
    9. ' ' → logprob: -13.147804260253906
    10. ' class' → logprob: -13.897804260253906

Token 292: ' __' (ID: 2516)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.25554755330085754
    2. ' __' → logprob: -1.5055475234985352
    3. ' def' → logprob: -6.630547523498535
    4. ' longest' → logprob: -6.755547523498535
    5. '__' → logprob: -7.005547523498535
    6. 'find' → logprob: -9.130547523498535
    7. ' solve' → logprob: -9.880547523498535
    8. ' _' → logprob: -10.630547523498535
    9. ' length' → logprob: -10.880547523498535
    10. ' ' → logprob: -12.005547523498535

Token 293: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'i' → logprob: -16.875
    3. 'ini' → logprob: -18.5
    4. ' init' → logprob: -18.625
    5. 'in' → logprob: -20.0
    6. 'int' → logprob: -20.125
    7. '_init' → logprob: -21.375
    8. 'inite' → logprob: -22.375
    9. 'inti' → logprob: -22.875
    10. 'innit' → logprob: -24.125

Token 294: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0035908028949052095
    2. '(self' → logprob: -6.2535905838012695
    3. '(' → logprob: -7.2535905838012695
    4. ' (' → logprob: -7.7535905838012695
    5. '__' → logprob: -8.25359058380127
    6. '__(
' → logprob: -9.00359058380127
    7. '_(' → logprob: -9.37859058380127
    8. ' ' → logprob: -11.37859058380127
    9. ')(' → logprob: -11.50359058380127
    10. '_' → logprob: -11.75359058380127

Token 295: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003049570368602872
    2. ' self' → logprob: -8.12530517578125
    3. '
' → logprob: -12.00030517578125
    4. '   ' → logprob: -13.25030517578125
    5. '       ' → logprob: -14.87530517578125
    6. ')' → logprob: -15.12530517578125
    7. ' ' → logprob: -15.25030517578125
    8. ',' → logprob: -16.62530517578125
    9. '0' → logprob: -16.75030517578125
    10. '  ' → logprob: -17.37530517578125

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014424506574869156
    2. 'self' → logprob: -4.2644243240356445
    3. ' ,' → logprob: -8.764424324035645
    4. ',self' → logprob: -10.264424324035645
    5. '(self' → logprob: -10.389424324035645
    6. ' self' → logprob: -10.389424324035645
    7. '   ' → logprob: -12.639424324035645
    8. ' ' → logprob: -13.389424324035645
    9. ')' → logprob: -13.764424324035645
    10. ',
' → logprob: -13.889424324035645

Token 297: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.028017450124025345
    2. 'values' → logprob: -4.278017520904541
    3. ' self' → logprob: -4.403017520904541
    4. ' values' → logprob: -6.778017520904541
    5. 'input' → logprob: -8.278017044067383
    6. ' input' → logprob: -9.778017044067383
    7. ')' → logprob: -10.528017044067383
    8. 'data' → logprob: -11.403017044067383
    9. '   ' → logprob: -11.403017044067383
    10. 'sequence' → logprob: -12.278017044067383

Token 298: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.03143712505698204
    2. 'Data' → logprob: -3.7814371585845947
    3. '):' → logprob: -5.281436920166016
    4. 'data' → logprob: -5.906436920166016
    5. '):
' → logprob: -8.906436920166016
    6. ':' → logprob: -9.281436920166016
    7. '   ' → logprob: -9.656436920166016
    8. 'Parser' → logprob: -11.281436920166016
    9. '_parser' → logprob: -11.281436920166016
    10. ' data' → logprob: -11.781436920166016

Token 299: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6949895024299622
    2. '):' → logprob: -0.6949895024299622
    3. '):
' → logprob: -6.4449896812438965
    4. ' :' → logprob: -9.319989204406738
    5. ' ):' → logprob: -9.444989204406738
    6. ')' → logprob: -9.694989204406738
    7. '   ' → logprob: -11.069989204406738
    8. '):

' → logprob: -14.069989204406738
    9. ' ' → logprob: -14.194989204406738
    10. '=None' → logprob: -14.194989204406738

Token 300: ' '' (ID: 461)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -0.02160969004034996
    2. ' Arithmetic' → logprob: -3.8966097831726074
    3. ''' → logprob: -7.396609783172607
    4. ')' → logprob: -8.39660930633545
    5. '   ' → logprob: -9.52160930633545
    6. ' '' → logprob: -9.52160930633545
    7. ''Ar' → logprob: -10.02160930633545
    8. ' arithmetic' → logprob: -11.39660930633545
    9. '')' → logprob: -11.89660930633545
    10. 'self' → logprob: -12.64660930633545

Token 301: 'Arithmetic' (ID: 174387)
  Prédit: 'Arithmetic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -2.045823566731997e-05
    2. ' Arithmetic' → logprob: -10.875020027160645
    3. 'self' → logprob: -13.500020027160645
    4. '
' → logprob: -16.37502098083496
    5. '   ' → logprob: -18.00002098083496
    6. 'arith' → logprob: -18.50002098083496
    7. ' ' → logprob: -18.87502098083496
    8. 'ar' → logprob: -18.87502098083496
    9. ' arithmetic' → logprob: -18.87502098083496
    10. 'Input' → logprob: -19.12502098083496

Token 302: 'Progress' (ID: 11356)
  Prédit: 'Progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -0.33373749256134033
    2. 'Data' → logprob: -1.3337374925613403
    3. 'Arithmetic' → logprob: -4.958737373352051
    4. '_data' → logprob: -5.208737373352051
    5. 'Finder' → logprob: -5.708737373352051
    6. 'Parser' → logprob: -6.208737373352051
    7. 'data' → logprob: -6.458737373352051
    8. '   ' → logprob: -7.958737373352051
    9. '_progress' → logprob: -8.08373737335205
    10. '       ' → logprob: -10.58373737335205

Token 303: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.007566168438643217
    2. 'Finder' → logprob: -5.507565975189209
    3. '   ' → logprob: -6.007565975189209
    4. 'Data' → logprob: -7.507565975189209
    5. 'on' → logprob: -9.257566452026367
    6. 'tion' → logprob: -9.632566452026367
    7. 'ision' → logprob: -9.757566452026367
    8. 'o' → logprob: -10.257566452026367
    9. 'finder' → logprob: -10.257566452026367
    10. 'data' → logprob: -10.382566452026367

Token 304: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.00016432604752480984
    2. 'finder' → logprob: -8.875164031982422
    3. 'Data' → logprob: -10.875164031982422
    4. '   ' → logprob: -14.250164031982422
    5. ' finder' → logprob: -14.625164031982422
    6. 'F' → logprob: -14.625164031982422
    7. 'Find' → logprob: -14.750164031982422
    8. 'class' → logprob: -14.750164031982422
    9. '')' → logprob: -14.750164031982422
    10. '
' → logprob: -14.750164031982422

Token 305: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -9.93710636976175e-05
    2. 'Input' → logprob: -9.250099182128906
    3. '.' → logprob: -13.250099182128906
    4. '<Input' → logprob: -14.875099182128906
    5. '\Input' → logprob: -15.000099182128906
    6. '.INPUT' → logprob: -15.375099182128906
    7. ' .' → logprob: -15.875099182128906
    8. '.Data' → logprob: -16.250099182128906
    9. '	Input' → logprob: -16.625099182128906
    10. '_Input' → logprob: -17.250099182128906

Token 306: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -2.6060808522743173e-05
    2. 'Parser' → logprob: -11.500025749206543
    3. '_Data' → logprob: -12.000025749206543
    4. '_data' → logprob: -12.000025749206543
    5. ' Data' → logprob: -14.000025749206543
    6. '	Data' → logprob: -14.125025749206543
    7. '<Data' → logprob: -14.375025749206543
    8. '   ' → logprob: -14.375025749206543
    9. 'data' → logprob: -15.375025749206543
    10. '_DATA' → logprob: -15.625025749206543

Token 307: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.22790740430355072
    2. ''):
' → logprob: -1.602907419204712
    3. '')' → logprob: -6.352907180786133
    4. '):' → logprob: -7.727907180786133
    5. ''):
' → logprob: -8.852907180786133
    6. ''' → logprob: -9.352907180786133
    7. ')' → logprob: -10.352907180786133
    8. '):
' → logprob: -10.727907180786133
    9. ' '' → logprob: -11.102907180786133
    10. ':' → logprob: -12.477907180786133

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003945688367821276
    2. ' self' → logprob: -8.500394821166992
    3. 'self' → logprob: -9.625394821166992
    4. ',' → logprob: -9.750394821166992
    5. '   ' → logprob: -10.375394821166992
    6. ':' → logprob: -10.625394821166992
    7. '<|end|>' → logprob: -13.125394821166992
    8. '      ' → logprob: -13.500394821166992
    9. '(self' → logprob: -13.500394821166992
    10. '        
' → logprob: -13.875394821166992

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5046130418777466
    2. '       ' → logprob: -1.0046130418777466
    3. ' self' → logprob: -3.504612922668457
    4. '   ' → logprob: -11.129612922668457
    5. ' ' → logprob: -14.379612922668457
    6. '	self' → logprob: -14.504612922668457
    7. '           ' → logprob: -15.379612922668457
    8. '      ' → logprob: -16.379613876342773
    9. '     ' → logprob: -17.504613876342773
    10. '(self' → logprob: -17.504613876342773

Token 310: '.n' (ID: 1835)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.37291190028190613
    2. '.n' → logprob: -2.1229119300842285
    3. '.data' → logprob: -2.1229119300842285
    4. '.values' → logprob: -2.9979119300842285
    5. '.' → logprob: -4.3729119300842285
    6. ' .' → logprob: -4.7479119300842285
    7. '.size' → logprob: -8.74791145324707
    8. '.inputs' → logprob: -8.99791145324707
    9. '.sequence' → logprob: -9.37291145324707
    10. '._' → logprob: -9.74791145324707

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061984602361917496
    2. '=' → logprob: -2.8119845390319824
    3. ' ' → logprob: -11.18698501586914
    4. '    ' → logprob: -13.56198501586914
    5. '=input' → logprob: -13.81198501586914
    6. '        ' → logprob: -15.06198501586914
    7. ',' → logprob: -15.43698501586914
    8. ' =
' → logprob: -16.31198501586914
    9. '   ' → logprob: -16.56198501586914
    10. '       ' → logprob: -17.31198501586914

Token 312: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868725001811981
    2. ' input' → logprob: -1.1368725299835205
    3. 'int' → logprob: -14.261872291564941
    4. '=input' → logprob: -15.386872291564941
    5. '(input' → logprob: -15.511872291564941
    6. '	input' → logprob: -15.886872291564941
    7. '<input' → logprob: -16.761873245239258
    8. 'self' → logprob: -17.011873245239258
    9. '       ' → logprob: -17.261873245239258
    10. '[input' → logprob: -17.636873245239258

Token 313: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.00001049041748
    3. 'data' → logprob: -12.75001049041748
    4. 'Data' → logprob: -15.37501049041748
    5. ' _' → logprob: -15.62501049041748
    6. '_Data' → logprob: -16.000009536743164
    7. '_dat' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.625009536743164
    9. '_DATA' → logprob: -16.750009536743164
    10. ' data' → logprob: -16.875009536743164

Token 314: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00024025145103223622
    2. '.' → logprob: -8.500240325927734
    3. ' .' → logprob: -10.375240325927734
    4. '.values' → logprob: -13.000240325927734
    5. 'n' → logprob: -13.875240325927734
    6. '   ' → logprob: -14.000240325927734
    7. '       ' → logprob: -14.750240325927734
    8. '
' → logprob: -15.000240325927734
    9. ').' → logprob: -15.500240325927734
    10. '.
' → logprob: -15.875240325927734

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29252156615257263
    2. '
' → logprob: -1.542521595954895
    3. 'self' → logprob: -3.2925214767456055
    4. ' self' → logprob: -6.7925214767456055
    5. '        
' → logprob: -7.6675214767456055
    6. ',' → logprob: -8.167521476745605
    7. '<|end|>' → logprob: -8.292521476745605
    8. '  
' → logprob: -9.167521476745605
    9. ' 
' → logprob: -9.292521476745605
    10. '    
' → logprob: -9.667521476745605

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008133075200021267
    2. 'self' → logprob: -4.8831329345703125
    3. ' self' → logprob: -7.6331329345703125
    4. ',' → logprob: -10.633132934570312
    5. '   ' → logprob: -11.633132934570312
    6. '           ' → logprob: -13.008132934570312
    7. '<|end|>' → logprob: -13.633132934570312
    8. '        
' → logprob: -13.883132934570312
    9. '```' → logprob: -14.008132934570312
    10. ',self' → logprob: -14.133132934570312

Token 317: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16026759147644043
    2. ' self' → logprob: -1.9102675914764404
    3. '       ' → logprob: -10.28526782989502
    4. 'input' → logprob: -11.78526782989502
    5. ' input' → logprob: -14.03526782989502
    6. '           ' → logprob: -14.66026782989502
    7. '        ' → logprob: -15.78526782989502
    8. '   ' → logprob: -16.785266876220703
    9. '	self' → logprob: -16.910266876220703
    10. '(self' → logprob: -16.910266876220703

Token 318: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0001848254178185016
    2. 'values' → logprob: -9.250185012817383
    3. ' .' → logprob: -9.625185012817383
    4. '.' → logprob: -10.750185012817383
    5. '.val' → logprob: -15.000185012817383
    6. '   ' → logprob: -15.250185012817383
    7. ' values' → logprob: -15.500185012817383
    8. '.data' → logprob: -15.750185012817383
    9. '	values' → logprob: -16.375185012817383
    10. '.value' → logprob: -16.625185012817383

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024149954319
    2. '=' → logprob: -1.9102414846420288
    3. '=input' → logprob: -11.66024112701416
    4. ' ' → logprob: -13.03524112701416
    5. '[:]' → logprob: -13.03524112701416
    6. '   ' → logprob: -13.78524112701416
    7. '    ' → logprob: -14.53524112701416
    8. '=self' → logprob: -14.53524112701416
    9. '[' → logprob: -14.66024112701416
    10. ',' → logprob: -14.66024112701416

Token 320: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020678490400314
    2. ' input' → logprob: -2.3502068519592285
    3. 'list' → logprob: -15.72520637512207
    4. '	input' → logprob: -17.22520637512207
    5. '[input' → logprob: -18.22520637512207
    6. ' list' → logprob: -18.60020637512207
    7. '(input' → logprob: -19.22520637512207
    8. '<input' → logprob: -19.47520637512207
    9. ' ' → logprob: -19.60020637512207
    10. '=input' → logprob: -19.97520637512207

Token 321: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -8.2994620242971e-06
    2. 'data' → logprob: -11.875008583068848
    3. '._' → logprob: -14.500008583068848
    4. ' _' → logprob: -15.500008583068848
    5. '_values' → logprob: -15.750008583068848
    6. '_' → logprob: -16.00000762939453
    7. 'self' → logprob: -17.12500762939453
    8. '_DATA' → logprob: -17.25000762939453
    9. '.data' → logprob: -17.37500762939453
    10. '[_' → logprob: -17.37500762939453

Token 322: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -6.229872087715194e-05
    2. 'values' → logprob: -10.000061988830566
    3. '.data' → logprob: -11.250061988830566
    4. '.' → logprob: -12.875061988830566
    5. ' .' → logprob: -14.250061988830566
    6. 'data' → logprob: -15.500061988830566
    7. 'Data' → logprob: -15.750061988830566
    8. '_data' → logprob: -16.000062942504883
    9. '	values' → logprob: -17.250062942504883
    10. '   ' → logprob: -17.250062942504883

Token 323: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06874211132526398
    2. '<|end|>' → logprob: -2.818742036819458
    3. '       ' → logprob: -5.568742275238037
    4. '   ' → logprob: -6.943742275238037
    5. 'def' → logprob: -7.068742275238037
    6. '<|end|>' → logprob: -7.943742275238037
    7. '    
' → logprob: -8.443741798400879
    8. ' def' → logprob: -8.818741798400879
    9. '

' → logprob: -9.193741798400879
    10. '        
' → logprob: -9.443741798400879

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5047205686569214
    2. '<|end|>' → logprob: -1.6297205686569214
    3. '
' → logprob: -2.004720687866211
    4. '   ' → logprob: -2.879720687866211
    5. 'def' → logprob: -5.504720687866211
    6. 'self' → logprob: -5.754720687866211
    7. '<|end|>' → logprob: -6.754720687866211
    8. ' self' → logprob: -8.504720687866211
    9. '    
' → logprob: -8.629720687866211
    10. ',' → logprob: -8.629720687866211

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04123292490839958
    2. '       ' → logprob: -3.2912328243255615
    3. ' self' → logprob: -6.041233062744141
    4. 'def' → logprob: -7.416233062744141
    5. '   ' → logprob: -9.04123306274414
    6. '
' → logprob: -9.66623306274414
    7. 'from' → logprob: -12.29123306274414
    8. '	self' → logprob: -12.66623306274414
    9. '           ' → logprob: -12.91623306274414
    10. '        
' → logprob: -13.29123306274414

Token 326: '.elements' (ID: 58318)
  Prédit: '.dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.20657093822956085
    2. '.ap' → logprob: -1.8315709829330444
    3. ' .' → logprob: -4.206571102142334
    4. '.' → logprob: -5.581571102142334
    5. '.table' → logprob: -5.706571102142334
    6. '.dynamic' → logprob: -5.956571102142334
    7. '.data' → logprob: -7.831571102142334
    8. '.d' → logprob: -8.081570625305176
    9. '.sequence' → logprob: -8.331570625305176
    10. '.values' → logprob: -8.581570625305176

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022316873073578
    2. '=' → logprob: -2.3502230644226074
    3. ' =[' → logprob: -11.475223541259766
    4. '=[]' → logprob: -12.475223541259766
    5. '=[' → logprob: -14.100223541259766
    6. '[' → logprob: -14.100223541259766
    7. '[:]' → logprob: -15.475223541259766
    8. '.append' → logprob: -15.600223541259766
    9. '=[]
' → logprob: -15.975223541259766
    10. '_' → logprob: -15.975223541259766

Token 328: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.25232216715812683
    2. '[' → logprob: -1.5023221969604492
    3. '[self' → logprob: -9.12732219696045
    4. ' [
' → logprob: -9.62732219696045
    5. '[
' → logprob: -9.87732219696045
    6. '[class' → logprob: -10.00232219696045
    7. '[list' → logprob: -10.37732219696045
    8. '[array' → logprob: -11.12732219696045
    9. '[int' → logprob: -11.25232219696045
    10. '[List' → logprob: -11.50232219696045

Token 329: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.035564638674259186
    2. 'Arithmetic' → logprob: -3.410564661026001
    3. ' self' → logprob: -6.285564422607422
    4. '[self' → logprob: -10.285564422607422
    5. ' Arithmetic' → logprob: -11.535564422607422
    6. '(self' → logprob: -12.785564422607422
    7. 'arith' → logprob: -13.535564422607422
    8. '[' → logprob: -13.910564422607422
    9. '   ' → logprob: -14.035564422607422
    10. '       ' → logprob: -14.035564422607422

Token 330: '.Sequence' (ID: 132514)
  Prédit: '.Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Sequence' → logprob: -0.0012452320661395788
    2. '.' → logprob: -7.251245021820068
    3. '.Ar' → logprob: -7.751245021820068
    4. 'Sequence' → logprob: -9.501245498657227
    5. '.Sequential' → logprob: -10.626245498657227
    6. '.Se' → logprob: -12.876245498657227
    7. 'Arithmetic' → logprob: -13.126245498657227
    8. ' Sequence' → logprob: -14.501245498657227
    9. ' .' → logprob: -14.626245498657227
    10. '.Class' → logprob: -16.001245498657227

Token 331: 'Element' (ID: 2394)
  Prédit: 'Element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Element' → logprob: 0.0
    2. 'Elem' → logprob: -19.0
    3. 'element' → logprob: -19.125
    4. '_element' → logprob: -19.125
    5. 'lement' → logprob: -19.375
    6. '<Element' → logprob: -20.5
    7. 'Ele' → logprob: -20.625
    8. '(Element' → logprob: -21.0
    9. '	Element' → logprob: -21.5
    10. '   ' → logprob: -21.625

Token 332: '(v' (ID: 6932)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.5219287276268005
    2. '(self' → logprob: -1.7719287872314453
    3. '(val' → logprob: -2.0219287872314453
    4. '(v' → logprob: -2.2719287872314453
    5. '(x' → logprob: -7.396928787231445
    6. '(' → logprob: -8.021928787231445
    7. '(i' → logprob: -8.896928787231445
    8. 'self' → logprob: -11.271928787231445
    9. '(
' → logprob: -11.896928787231445
    10. ' (' → logprob: -12.896928787231445

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023011912708170712
    2. ' ,' → logprob: -9.125229835510254
    3. ',i' → logprob: -9.125229835510254
    4. 'al' → logprob: -12.250229835510254
    5. 'alue' → logprob: -13.500229835510254
    6. ',index' → logprob: -13.750229835510254
    7. 'e' → logprob: -13.875229835510254
    8. ',
' → logprob: -14.250229835510254
    9. 'x' → logprob: -14.500229835510254
    10. '(i' → logprob: -14.875229835510254

Token 334: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048640280961990356
    2. ' i' → logprob: -3.048640251159668
    3. ' idx' → logprob: -10.548640251159668
    4. 'idx' → logprob: -10.548640251159668
    5. ')' → logprob: -15.298640251159668
    6. '   ' → logprob: -16.298641204833984
    7. '	i' → logprob: -16.548641204833984
    8. ')i' → logprob: -17.673641204833984
    9. '       ' → logprob: -18.298641204833984
    10. '
' → logprob: -18.423641204833984

Token 335: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.368984107510187e-05
    2. ' )' → logprob: -10.375033378601074
    3. ')
' → logprob: -13.125033378601074
    4. ')]' → logprob: -16.50003433227539
    5. ' for' → logprob: -16.87503433227539
    6. ']' → logprob: -16.87503433227539
    7. '),' → logprob: -17.37503433227539
    8. '))' → logprob: -17.37503433227539
    9. ')i' → logprob: -17.62503433227539
    10. '}' → logprob: -17.62503433227539

Token 336: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010428536683321
    2. 'for' → logprob: -5.010428428649902
    3. ')' → logprob: -5.635428428649902
    4. ' ' → logprob: -9.260428428649902
    5. ' )' → logprob: -11.010428428649902
    6. '           ' → logprob: -11.635428428649902
    7. '   ' → logprob: -12.760428428649902
    8. '        ' → logprob: -12.760428428649902
    9. '       ' → logprob: -12.885428428649902
    10. '    ' → logprob: -13.010428428649902

Token 337: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08645489066839218
    2. ' i' → logprob: -3.3364548683166504
    3. ' v' → logprob: -3.8364548683166504
    4. 'range' → logprob: -3.8364548683166504
    5. 'v' → logprob: -6.21145486831665
    6. 'i' → logprob: -6.33645486831665
    7. ' ' → logprob: -8.086455345153809
    8. ' in' → logprob: -10.836455345153809
    9. '  ' → logprob: -12.836455345153809
    10. '	range' → logprob: -13.086455345153809

Token 338: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04967043921351433
    2. ' range' → logprob: -3.424670457839966
    3. 'in' → logprob: -4.549670219421387
    4. 'range' → logprob: -5.424670219421387
    5. ' ' → logprob: -7.549670219421387
    6. ',' → logprob: -8.049670219421387
    7. '(range' → logprob: -10.299670219421387
    8. ' xrange' → logprob: -11.674670219421387
    9. ' i' → logprob: -11.799670219421387
    10. '	range' → logprob: -12.174670219421387

Token 339: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.038044244050979614
    2. 'v' → logprob: -3.2880442142486572
    3. '(v' → logprob: -13.663043975830078
    4. '	v' → logprob: -14.163043975830078
    5. ' in' → logprob: -14.913043975830078
    6. ',v' → logprob: -15.413043975830078
    7. ' ' → logprob: -15.913043975830078
    8. ' (' → logprob: -16.038043975830078
    9. '_v' → logprob: -16.413043975830078
    10. 'enumer' → logprob: -17.413043975830078

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016104981303215027
    2. 'in' → logprob: -4.1411051750183105
    3. 'enumer' → logprob: -9.891104698181152
    4. ' enumerate' → logprob: -11.641104698181152
    5. ')' → logprob: -12.266104698181152
    6. ' ' → logprob: -12.641104698181152
    7. '	in' → logprob: -13.891104698181152
    8. ',' → logprob: -14.141104698181152
    9. ' i' → logprob: -14.891104698181152
    10. 'n' → logprob: -15.266104698181152

Token 341: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.16022473573684692
    2. 'enumer' → logprob: -1.9102246761322021
    3. 'range' → logprob: -15.160224914550781
    4. 'Enumer' → logprob: -15.785224914550781
    5. 'en' → logprob: -16.41022491455078
    6. ' enumer' → logprob: -17.16022491455078
    7. ' range' → logprob: -17.78522491455078
    8. '(en' → logprob: -18.03522491455078
    9. ' in' → logprob: -18.16022491455078
    10. '```' → logprob: -18.16022491455078

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -11.250022888183594
    3. 'self' → logprob: -11.625022888183594
    4. ' (' → logprob: -14.000022888183594
    5. ' self' → logprob: -15.125022888183594
    6. '(
' → logprob: -18.375022888183594
    7. '(range' → logprob: -18.625022888183594
    8. ')' → logprob: -18.750022888183594
    9. '(values' → logprob: -18.875022888183594
    10. '	self' → logprob: -19.000022888183594

Token 343: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -7.624555291840807e-05
    2. 'values' → logprob: -9.500076293945312
    3. '.' → logprob: -14.375076293945312
    4. '	values' → logprob: -15.000076293945312
    5. ' .' → logprob: -15.250076293945312
    6. ' values' → logprob: -15.500076293945312
    7. '.value' → logprob: -17.750076293945312
    8. '_values' → logprob: -18.000076293945312
    9. '(values' → logprob: -18.125076293945312
    10. '.
' → logprob: -18.125076293945312

Token 344: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002214172709500417
    2. ' )' → logprob: -9.000221252441406
    3. ')' → logprob: -9.375221252441406
    4. ')]
' → logprob: -11.750221252441406
    5. ']' → logprob: -12.875221252441406
    6. '   ' → logprob: -14.125221252441406
    7. ' ]' → logprob: -14.625221252441406
    8. '       ' → logprob: -14.625221252441406
    9. ' ' → logprob: -15.250221252441406
    10. ')])' → logprob: -15.625221252441406

Token 345: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22630245983600616
    2. '<|end|>' → logprob: -1.7263025045394897
    3. 'def' → logprob: -4.101302623748779
    4. '   ' → logprob: -5.351302623748779
    5. '<|end|>' → logprob: -6.476302623748779
    6. ' def' → logprob: -7.101302623748779
    7. '    
' → logprob: -7.476302623748779
    8. '

' → logprob: -8.601302146911621
    9. '       ' → logprob: -10.101302146911621
    10. '  
' → logprob: -10.476302146911621

Token 346: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000206401280593127
    2. ' def' → logprob: -8.500205993652344
    3. '   ' → logprob: -12.750205993652344
    4. '    
' → logprob: -18.875205993652344
    5. '
' → logprob: -19.125205993652344
    6. '	def' → logprob: -19.125205993652344
    7. ' ' → logprob: -19.250205993652344
    8. '        
' → logprob: -20.625205993652344
    9. '       ' → logprob: -20.875205993652344
    10. 'from' → logprob: -21.625205993652344

Token 347: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.05298188328742981
    2. ' longest' → logprob: -3.5529818534851074
    3. 'find' → logprob: -3.8029818534851074
    4. 'long' → logprob: -7.552981853485107
    5. ' def' → logprob: -9.552982330322266
    6. 'def' → logprob: -10.052982330322266
    7. ' length' → logprob: -11.677982330322266
    8. 'length' → logprob: -13.177982330322266
    9. 'Longest' → logprob: -13.177982330322266
    10. ' long' → logprob: -13.427982330322266

Token 348: '_long' (ID: 42288)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.8860341906547546
    2. '_long' → logprob: -1.0110342502593994
    3. '_max' → logprob: -2.3860342502593994
    4. '_ap' → logprob: -2.3860342502593994
    5. '_' → logprob: -3.3860342502593994
    6. '_length' → logprob: -6.26103401184082
    7. '_all' → logprob: -6.88603401184082
    8. '_AP' → logprob: -7.38603401184082
    9. '_next' → logprob: -7.63603401184082
    10. '_cont' → logprob: -8.01103401184082

Token 349: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.004696090007201e-05
    2. '   ' → logprob: -11.250069618225098
    3. '_ap' → logprob: -11.625069618225098
    4. '```' → logprob: -12.000069618225098
    5. 'ap' → logprob: -12.375069618225098
    6. '_' → logprob: -12.500069618225098
    7. '_est' → logprob: -12.875069618225098
    8. 'gest' → logprob: -12.875069618225098
    9. 'estin' → logprob: -13.000069618225098
    10. 'apest' → logprob: -13.250069618225098

Token 350: '_ap' (ID: 45078)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.17079569399356842
    2. '_ap' → logprob: -1.9207956790924072
    3. '_sub' → logprob: -4.670795917510986
    4. '_' → logprob: -6.920795917510986
    5. '_sequence' → logprob: -10.045795440673828
    6. '_AP' → logprob: -10.795795440673828
    7. '_cont' → logprob: -10.920795440673828
    8. '_common' → logprob: -11.045795440673828
    9. '_arm' → logprob: -11.670795440673828
    10. '_progress' → logprob: -11.920795440673828

Token 351: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009690219536423683
    2. '_length' → logprob: -4.759690284729004
    3. '(' → logprob: -7.384690284729004
    4. '_sequence' → logprob: -8.384690284729004
    5. 'length' → logprob: -9.509690284729004
    6. 'self' → logprob: -10.384690284729004
    7. 's' → logprob: -10.634690284729004
    8. ' (' → logprob: -11.009690284729004
    9. '()' → logprob: -11.509690284729004
    10. '_(' → logprob: -11.759690284729004

Token 352: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16225112974643707
    2. 'self' → logprob: -2.4122512340545654
    3. '):
' → logprob: -3.2872512340545654
    4. '(self' → logprob: -4.287250995635986
    5. ')' → logprob: -5.412250995635986
    6. ',' → logprob: -6.537250995635986
    7. ' ):' → logprob: -6.912250995635986
    8. 'f' → logprob: -8.287251472473145
    9. '_' → logprob: -8.412251472473145
    10. ')_' → logprob: -8.412251472473145

Token 353: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004741741344332695
    2. 'self' → logprob: -5.879741668701172
    3. '(' → logprob: -6.379741668701172
    4. 's' → logprob: -9.629741668701172
    5. '       ' → logprob: -10.129741668701172
    6. '   ' → logprob: -10.254741668701172
    7. ':' → logprob: -11.004741668701172
    8. 'f' → logprob: -11.254741668701172
    9. 'def' → logprob: -11.504741668701172
    10. '_length' → logprob: -11.504741668701172

Token 354: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03611370921134949
    2. ' int' → logprob: -3.411113739013672
    3. '(int' → logprob: -6.411113739013672
    4. 'self' → logprob: -8.036113739013672
    5. 'list' → logprob: -8.286113739013672
    6. '[int' → logprob: -9.286113739013672
    7. ' list' → logprob: -9.911113739013672
    8. ' self' → logprob: -10.286113739013672
    9. '   ' → logprob: -11.286113739013672
    10. 'None' → logprob: -11.411113739013672

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20041267573833466
    2. ':
' → logprob: -2.2004127502441406
    3. '       ' → logprob: -3.2004127502441406
    4. '(self' → logprob: -3.5754127502441406
    5. '(
' → logprob: -7.075412750244141
    6. '(' → logprob: -7.700412750244141
    7. '   ' → logprob: -7.825412750244141
    8. '):
' → logprob: -8.70041275024414
    9. '):' → logprob: -9.70041275024414
    10. 'self' → logprob: -9.82541275024414

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006001082714647055
    2. 'dp' → logprob: -5.881000995635986
    3. ' dp' → logprob: -6.006000995635986
    4. ' if' → logprob: -7.756000995635986
    5. 'n' → logprob: -8.881001472473145
    6. ' n' → logprob: -9.631001472473145
    7. 'if' → logprob: -10.131001472473145
    8. ' length' → logprob: -11.256001472473145
    9. '   ' → logprob: -11.381001472473145
    10. ' result' → logprob: -12.006001472473145

Token 357: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7216247916221619
    2. 'if' → logprob: -1.3466248512268066
    3. '       ' → logprob: -1.9716248512268066
    4. ' if' → logprob: -2.3466248512268066
    5. ' dp' → logprob: -5.221624851226807
    6. 'ap' → logprob: -5.596624851226807
    7. 'n' → logprob: -5.721624851226807
    8. 'table' → logprob: -5.971624851226807
    9. ' ap' → logprob: -6.221624851226807
    10. 'size' → logprob: -7.221624851226807

Token 358: ' Sort' (ID: 25945)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.673015296459198
    2. 'if' → logprob: -0.923015296459198
    3. 'table' → logprob: -3.4230153560638428
    4. ' if' → logprob: -3.6730153560638428
    5. 'size' → logprob: -4.423015117645264
    6. 'ap' → logprob: -5.048015117645264
    7. '       ' → logprob: -5.298015117645264
    8. 'n' → logprob: -5.423015117645264
    9. '   ' → logprob: -5.923015117645264
    10. ' dp' → logprob: -7.298015117645264

Token 359: ' elements' (ID: 8632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0005509853363037
    2. 'self' → logprob: -1.0005509853363037
    3. '(self' → logprob: -2.1255509853363037
    4. ' self' → logprob: -2.5005509853363037
    5. 'elements' → logprob: -4.375551223754883
    6. ' =' → logprob: -4.500551223754883
    7. '()' → logprob: -5.000551223754883
    8. ' elements' → logprob: -5.000551223754883
    9. 'ed' → logprob: -5.250551223754883
    10. ' by' → logprob: -5.375551223754883

Token 360: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7432248592376709
    2. 'self' → logprob: -1.868224859237671
    3. '(self' → logprob: -1.993224859237671
    4. ' by' → logprob: -2.118224859237671
    5. ' =' → logprob: -2.743224859237671
    6. '=' → logprob: -3.993224859237671
    7. '()' → logprob: -4.86822509765625
    8. ' self' → logprob: -4.99322509765625
    9. 'by' → logprob: -5.61822509765625
    10. 'sorted' → logprob: -5.86822509765625

Token 361: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16398219764232635
    2. 'value' → logprob: -1.9139821529388428
    3. ' self' → logprob: -6.288982391357422
    4. 'self' → logprob: -6.413982391357422
    5. ' index' → logprob: -9.038982391357422
    6. ' their' → logprob: -9.663982391357422
    7. 'index' → logprob: -10.288982391357422
    8. ' lambda' → logprob: -10.788982391357422
    9. 'lambda' → logprob: -12.038982391357422
    10. '.value' → logprob: -12.163982391357422

Token 362: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09952529519796371
    2. ',' → logprob: -2.974525213241577
    3. 'sorted' → logprob: -4.224525451660156
    4. 'self' → logprob: -4.724525451660156
    5. '
' → logprob: -5.099525451660156
    6. '(self' → logprob: -5.724525451660156
    7. '(sorted' → logprob: -5.974525451660156
    8. '.sorted' → logprob: -6.349525451660156
    9. '_sorted' → logprob: -6.599525451660156
    10. '.sort' → logprob: -7.349525451660156

Token 363: ' manage' (ID: 11659)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.5875816345214844
    2. 'self' → logprob: -1.7125816345214844
    3. ' self' → logprob: -1.8375816345214844
    4. ' ensure' → logprob: -2.3375816345214844
    5. ' value' → logprob: -2.9625816345214844
    6. ' facilitate' → logprob: -3.0875816345214844
    7. ' allow' → logprob: -3.4625816345214844
    8. 'pass' → logprob: -3.7125816345214844
    9. ' index' → logprob: -4.087581634521484
    10. ' maintain' → logprob: -4.337581634521484

Token 364: ' ascending' (ID: 75564)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1674796342849731
    2. ' the' → logprob: -1.5424796342849731
    3. ' indices' → logprob: -1.5424796342849731
    4. '       ' → logprob: -2.6674795150756836
    5. ' their' → logprob: -3.2924795150756836
    6. 'self' → logprob: -3.2924795150756836
    7. ' differences' → logprob: -3.6674795150756836
    8. 'indices' → logprob: -3.9174795150756836
    9. ' for' → logprob: -4.292479515075684
    10. 'the' → logprob: -5.167479515075684

Token 365: ' AP' (ID: 13165)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.6528103351593018
    2. '       ' → logprob: -2.0278103351593018
    3. ')' → logprob: -2.5278103351593018
    4. 'order' → logprob: -2.7778103351593018
    5. '(self' → logprob: -2.9028103351593018
    6. 'self' → logprob: -3.5278103351593018
    7. ' self' → logprob: -3.6528103351593018
    8. ',' → logprob: -4.152810096740723
    9. ' elements' → logprob: -4.402810096740723
    10. '<|end|>' → logprob: -4.402810096740723

Token 366: ' easily' (ID: 7835)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04962529242038727
    2. ',' → logprob: -4.424625396728516
    3. 's' → logprob: -4.799625396728516
    4. '
' → logprob: -4.799625396728516
    5. 'elements' → logprob: -5.299625396728516
    6. ' elements' → logprob: -5.549625396728516
    7. 'sorted' → logprob: -6.299625396728516
    8. ' sorted' → logprob: -6.674625396728516
    9. '_elements' → logprob: -7.049625396728516
    10. '(elements' → logprob: -7.049625396728516

Token 367: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1260014772415161
    2. '
' → logprob: -2.2510013580322266
    3. '        
' → logprob: -5.251001358032227
    4. ',' → logprob: -5.751001358032227
    5. 'elements' → logprob: -6.001001358032227
    6. 's' → logprob: -7.876001358032227
    7. ' elements' → logprob: -8.126001358032227
    8. '<|end|>' → logprob: -8.251001358032227
    9. '(elements' → logprob: -8.376001358032227
    10. 'self' → logprob: -9.001001358032227

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08433514833450317
    2. '
' → logprob: -2.5843350887298584
    3. '        
' → logprob: -5.9593353271484375
    4. 'n' → logprob: -7.3343353271484375
    5. '<|end|>' → logprob: -7.3343353271484375
    6. ',' → logprob: -7.9593353271484375
    7. '        ' → logprob: -8.834335327148438
    8. ' 
' → logprob: -8.959335327148438
    9. '  
' → logprob: -9.084335327148438
    10. 'self' → logprob: -9.084335327148438

Token 369: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.956615149974823
    2. 'sorted' (adapté à ' sorted') → logprob: -1.7066152095794678
    3. ' self' → logprob: -2.0816152095794678
    4. '       ' → logprob: -2.0816152095794678
    5. 'elements' → logprob: -2.3316152095794678
    6. ' sorted' → logprob: -3.2066152095794678
    7. ' elements' → logprob: -3.2066152095794678
    8. ' elems' → logprob: -5.331614971160889
    9. 'arr' → logprob: -7.456614971160889
    10. 'els' → logprob: -8.081615447998047

Token 370: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.005830910988152027
    2. '_' → logprob: -5.380830764770508
    3. '_values' → logprob: -7.630830764770508
    4. '(self' → logprob: -8.130830764770508
    5. '_e' → logprob: -8.255830764770508
    6. 's' → logprob: -9.505830764770508
    7. '(' → logprob: -11.255830764770508
    8. '_items' → logprob: -11.380830764770508
    9. '_list' → logprob: -11.505830764770508
    10. '_elem' → logprob: -11.505830764770508

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889595627784729
    2. '=' → logprob: -2.5788960456848145
    3. '=self' → logprob: -13.078895568847656
    4. '       ' → logprob: -13.578895568847656
    5. '(self' → logprob: -13.953895568847656
    6. '   ' → logprob: -14.578895568847656
    7. ' ' → logprob: -14.828895568847656
    8. '        ' → logprob: -14.953895568847656
    9. '    ' → logprob: -15.703895568847656
    10. ')' → logprob: -15.703895568847656

Token 372: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3868899643421173
    2. ' sorted' → logprob: -1.136889934539795
    3. 'self' → logprob: -11.261890411376953
    4. '   ' → logprob: -12.761890411376953
    5. ' self' → logprob: -12.761890411376953
    6. '(sorted' → logprob: -15.511890411376953
    7. ' ' → logprob: -16.136890411376953
    8. '.sorted' → logprob: -17.636890411376953
    9. '       ' → logprob: -17.886890411376953
    10. '  ' → logprob: -18.261890411376953

Token 373: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.754368223482743e-05
    2. '(' → logprob: -9.750067710876465
    3. 'self' → logprob: -12.125067710876465
    4. '(
' → logprob: -12.875067710876465
    5. '((' → logprob: -13.750067710876465
    6. ' (' → logprob: -15.750067710876465
    7. '	self' → logprob: -18.12506675720215
    8. '(en' → logprob: -18.25006675720215
    9. '([' → logprob: -18.37506675720215
    10. ' self' → logprob: -18.50006675720215

Token 374: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.0006583464564755559
    2. '.' → logprob: -7.7506585121154785
    3. 'elements' → logprob: -8.87565803527832
    4. ' .' → logprob: -9.75065803527832
    5. '.values' → logprob: -10.62565803527832
    6. ',' → logprob: -13.75065803527832
    7. '   ' → logprob: -14.12565803527832
    8. ').' → logprob: -14.25065803527832
    9. '(elements' → logprob: -14.62565803527832
    10. ')' → logprob: -14.87565803527832

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03630755841732025
    2. ')' → logprob: -3.4113075733184814
    3. ',key' → logprob: -6.161307334899902
    4. ' ,' → logprob: -7.661307334899902
    5. 'key' → logprob: -10.286307334899902
    6. '(),' → logprob: -11.411307334899902
    7. ' )' → logprob: -11.411307334899902
    8. ')
' → logprob: -12.036307334899902
    9. ',
' → logprob: -12.411307334899902
    10. ' key' → logprob: -12.661307334899902

Token 376: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10020732134580612
    2. ' key' → logprob: -2.3502073287963867
    3. '   ' → logprob: -14.600207328796387
    4. '(key' → logprob: -16.22520637512207
    5. '       ' → logprob: -16.60020637512207
    6. ' ' → logprob: -17.22520637512207
    7. ',key' → logprob: -18.60020637512207
    8. '  ' → logprob: -18.72520637512207
    9. '
' → logprob: -18.72520637512207
    10. '	key' → logprob: -18.85020637512207

Token 377: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -3.607391408877447e-05
    2. '=' → logprob: -10.250036239624023
    3. 'lambda' → logprob: -14.375036239624023
    4. '(lambda' → logprob: -17.250036239624023
    5. ' =' → logprob: -17.625036239624023
    6. '=
' → logprob: -18.000036239624023
    7. ' lambda' → logprob: -19.875036239624023
    8. '   ' → logprob: -21.375036239624023
    9. '=len' → logprob: -21.375036239624023
    10. '_lambda' → logprob: -21.500036239624023

Token 378: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.85323566198349
    2. ' x' → logprob: -0.85323566198349
    3. 'e' → logprob: -2.7282357215881348
    4. 'x' → logprob: -2.9782357215881348
    5. ' el' → logprob: -4.353235721588135
    6. 'elem' → logprob: -4.728235721588135
    7. ' elem' → logprob: -5.228235721588135
    8. 'el' → logprob: -5.478235721588135
    9. ' ele' → logprob: -8.103235244750977
    10. 'ele' → logprob: -8.853235244750977

Token 379: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.498548686504364
    2. 'e' → logprob: -0.998548686504364
    3. ' e' → logprob: -3.748548746109009
    4. ':e' → logprob: -7.74854850769043
    5. ' :' → logprob: -8.62354850769043
    6. '	e' → logprob: -11.74854850769043
    7. '(e' → logprob: -13.37354850769043
    8. ' ' → logprob: -14.37354850769043
    9. '=e' → logprob: -14.87354850769043
    10. ')e' → logprob: -15.12354850769043

Token 380: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31339922547340393
    2. ' e' → logprob: -1.3133991956710815
    3. ' (' → logprob: -9.563399314880371
    4. '(e' → logprob: -9.813399314880371
    5. '(' → logprob: -11.688399314880371
    6. ' ' → logprob: -13.313399314880371
    7. '	e' → logprob: -14.313399314880371
    8. '   ' → logprob: -14.563399314880371
    9. '(
' → logprob: -14.938399314880371
    10. ')e' → logprob: -15.188399314880371

Token 381: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.125015258789062
    3. '.val' → logprob: -15.000015258789062
    4. 'value' → logprob: -15.125015258789062
    5. ' .' → logprob: -16.875015258789062
    6. '.values' → logprob: -17.000015258789062
    7. ').' → logprob: -17.250015258789062
    8. ':' → logprob: -18.500015258789062
    9. '.v' → logprob: -19.125015258789062
    10. '.
' → logprob: -19.125015258789062

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00256067281588912
    2. ')
' → logprob: -6.002560615539551
    3. ',' → logprob: -10.00256061553955
    4. ' )' → logprob: -10.50256061553955
    5. '       ' → logprob: -12.50256061553955
    6. ')
' → logprob: -13.12756061553955
    7. ')

' → logprob: -13.12756061553955
    8. '   ' → logprob: -13.75256061553955
    9. '))' → logprob: -14.25256061553955
    10. ' )
' → logprob: -14.37756061553955

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07523224502801895
    2. '
' → logprob: -2.9502322673797607
    3. 'dp' → logprob: -4.950232028961182
    4. '        
' → logprob: -5.325232028961182
    5. ' dp' → logprob: -5.575232028961182
    6. ',' → logprob: -6.325232028961182
    7. '  
' → logprob: -7.200232028961182
    8. ' ap' → logprob: -8.32523250579834
    9. '        ' → logprob: -8.32523250579834
    10. '    
' → logprob: -8.70023250579834

Token 384: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01870526187121868
    2. '       ' → logprob: -4.768705368041992
    3. 'ap' → logprob: -5.518705368041992
    4. 'table' → logprob: -5.893705368041992
    5. 'n' → logprob: -6.518705368041992
    6. 'size' → logprob: -6.768705368041992
    7. 'length' → logprob: -8.518705368041992
    8. 'd' → logprob: -9.018705368041992
    9. 'dt' → logprob: -9.643705368041992
    10. 'if' → logprob: -9.893705368041992

Token 385: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.15943896770477295
    2. 'ue' → logprob: -2.9094390869140625
    3. 'ues' → logprob: -3.0344390869140625
    4. '_index' → logprob: -4.0344390869140625
    5. 'to' → logprob: -4.7844390869140625
    6. '_indices' → logprob: -5.0344390869140625
    7. '_dp' → logprob: -5.5344390869140625
    8. '_idx' → logprob: -6.0344390869140625
    9. 'dp' → logprob: -6.2844390869140625
    10. '_map' → logprob: -7.2844390869140625

Token 386: '_idx' (ID: 15257)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6602294445037842
    2. 'index' → logprob: -0.7852294445037842
    3. '_indices' → logprob: -4.285229682922363
    4. '_index' → logprob: -5.160229682922363
    5. 'idx' → logprob: -5.410229682922363
    6. 'indexes' → logprob: -5.910229682922363
    7. '_idx' → logprob: -8.910229682922363
    8. 'elements' → logprob: -9.285229682922363
    9. '_indexes' → logprob: -9.410229682922363
    10. 'inds' → logprob: -9.660229682922363

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193944573402405
    2. '=' → logprob: -1.5019394159317017
    3. 's' → logprob: -11.75193977355957
    4. '   ' → logprob: -14.25193977355957
    5. 'x' → logprob: -14.87693977355957
    6. 'ex' → logprob: -15.00193977355957
    7. '[' → logprob: -15.37693977355957
    8. ':' → logprob: -15.37693977355957
    9. '={}' → logprob: -15.37693977355957
    10. ' ' → logprob: -15.75193977355957

Token 388: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6999061107635498
    2. '{}' → logprob: -0.6999061107635498
    3. ' {' → logprob: -5.449906349182129
    4. ' {}' → logprob: -6.074906349182129
    5. '{}
' → logprob: -9.324906349182129
    6. 'dict' → logprob: -10.824906349182129
    7. '{i' → logprob: -12.074906349182129
    8. '{id' → logprob: -12.074906349182129
    9. '{x' → logprob: -12.574906349182129
    10. '{}

' → logprob: -12.574906349182129

Token 389: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008598973974585533
    2. 'elem' → logprob: -5.008598804473877
    3. 'el' → logprob: -6.633598804473877
    4. ' e' → logprob: -8.008599281311035
    5. 'element' → logprob: -8.758599281311035
    6. 'ele' → logprob: -10.758599281311035
    7. 'v' → logprob: -11.258599281311035
    8. 'sorted' → logprob: -11.633599281311035
    9. '}' → logprob: -12.008599281311035
    10. '   ' → logprob: -12.008599281311035

Token 390: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00017910730093717575
    2. '.val' → logprob: -9.250179290771484
    3. '.index' → logprob: -10.375179290771484
    4. '.' → logprob: -10.875179290771484
    5. ' .' → logprob: -11.875179290771484
    6. '.e' → logprob: -12.125179290771484
    7. 'value' → logprob: -12.375179290771484
    8. 'e' → logprob: -12.500179290771484
    9. '.v' → logprob: -12.500179290771484
    10. '.element' → logprob: -12.625179290771484

Token 391: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39411434531211853
    2. ':i' → logprob: -1.144114375114441
    3. ':index' → logprob: -5.7691144943237305
    4. ':e' → logprob: -6.1441144943237305
    5. ' :' → logprob: -6.2691144943237305
    6. ':[' → logprob: -11.26911449432373
    7. '[i' → logprob: -11.39411449432373
    8. 'e' → logprob: -12.39411449432373
    9. '[' → logprob: -12.76911449432373
    10. '   ' → logprob: -12.89411449432373

Token 392: ' i' (ID: 575)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4798125922679901
    2. 'i' → logprob: -1.1048126220703125
    3. ' e' → logprob: -3.6048126220703125
    4. ' i' → logprob: -4.3548126220703125
    5. 'idx' → logprob: -5.3548126220703125
    6. '[]' → logprob: -5.8548126220703125
    7. ' idx' → logprob: -6.8548126220703125
    8. ' []' → logprob: -7.1048126220703125
    9. '[e' → logprob: -9.479812622070312
    10. '[i' → logprob: -9.729812622070312

Token 393: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07936504483222961
    2. 'for' → logprob: -2.5793650150299072
    3. ':' → logprob: -7.704365253448486
    4. '
' → logprob: -11.704364776611328
    5. ' ' → logprob: -11.954364776611328
    6. '   ' → logprob: -12.579364776611328
    7. '	for' → logprob: -13.079364776611328
    8. '}' → logprob: -14.329364776611328
    9. ')' → logprob: -14.579364776611328
    10. ' 
' → logprob: -14.704364776611328

Token 394: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014196380507200956
    2. ' i' → logprob: -6.626419544219971
    3. 'e' → logprob: -9.376420021057129
    4. ',' → logprob: -11.751420021057129
    5. ' e' → logprob: -14.251420021057129
    6. ',i' → logprob: -16.251419067382812
    7. '   ' → logprob: -16.501419067382812
    8. ' ' → logprob: -16.626419067382812
    9. 'enumer' → logprob: -17.001419067382812
    10. '  ' → logprob: -17.001419067382812

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018195364624261856
    2. ',e' → logprob: -4.018195152282715
    3. ',i' → logprob: -10.643195152282715
    4. 'e' → logprob: -11.268195152282715
    5. ' ,' → logprob: -12.018195152282715
    6. 'i' → logprob: -14.393195152282715
    7. ',
' → logprob: -14.518195152282715
    8. ' e' → logprob: -14.643195152282715
    9. 'enumer' → logprob: -15.268195152282715
    10. ',v' → logprob: -15.643195152282715

Token 396: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005276449490338564
    2. ' e' → logprob: -5.255276679992676
    3. ' in' → logprob: -10.755276679992676
    4. 'enumer' → logprob: -10.880276679992676
    5. 'in' → logprob: -13.255276679992676
    6. ',' → logprob: -15.005276679992676
    7. ' enumerate' → logprob: -15.880276679992676
    8. ',e' → logprob: -16.50527572631836
    9. '(e' → logprob: -16.88027572631836
    10. '```' → logprob: -17.38027572631836

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08249049633741379
    2. 'in' → logprob: -2.5824904441833496
    3. 'n' → logprob: -5.83249044418335
    4. ',' → logprob: -8.582490921020508
    5. 'lement' → logprob: -8.582490921020508
    6. 'lements' → logprob: -9.332490921020508
    7. 'enumer' → logprob: -9.832490921020508
    8. 's' → logprob: -10.332490921020508
    9. ' ' → logprob: -10.457490921020508
    10. 'e' → logprob: -11.707490921020508

Token 398: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20144598186016083
    2. ' enumerate' → logprob: -1.7014459371566772
    3. 'e' → logprob: -11.076445579528809
    4. 'en' → logprob: -11.326445579528809
    5. '```' → logprob: -13.076445579528809
    6. 'enum' → logprob: -14.076445579528809
    7. 'Enumer' → logprob: -14.576445579528809
    8. 'sorted' → logprob: -15.076445579528809
    9. '`' → logprob: -15.076445579528809
    10. 'in' → logprob: -15.201445579528809

Token 399: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -9.615255839889869e-05
    2. 'sorted' → logprob: -9.250096321105957
    3. ' sorted' → logprob: -17.62509536743164
    4. '(' → logprob: -19.87509536743164
    5. '(sort' → logprob: -20.00009536743164
    6. ' (' → logprob: -20.62509536743164
    7. 'Sorted' → logprob: -20.87509536743164
    8. '.sorted' → logprob: -21.25009536743164
    9. '_sorted' → logprob: -21.50009536743164
    10. '(s' → logprob: -21.75009536743164

Token 400: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -9.491498531133402e-06
    2. 'elements' → logprob: -11.625009536743164
    3. '(elements' → logprob: -15.000009536743164
    4. '_ELEMENTS' → logprob: -16.625009536743164
    5. 'Elements' → logprob: -17.250009536743164
    6. ' elements' → logprob: -18.250009536743164
    7. ')' → logprob: -18.375009536743164
    8. '(sorted' → logprob: -18.375009536743164
    9. '```' → logprob: -19.750009536743164
    10. '_element' → logprob: -19.875009536743164

Token 401: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.008065075613558292
    2. ')}' → logprob: -4.883065223693848
    3. ' }' → logprob: -8.758065223693848
    4. ')' → logprob: -8.883065223693848
    5. '       ' → logprob: -9.383065223693848
    6. '}
' → logprob: -9.508065223693848
    7. '   ' → logprob: -13.508065223693848
    8. '})' → logprob: -14.008065223693848
    9. ')}
' → logprob: -14.383065223693848
    10. '}
' → logprob: -15.133065223693848

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032476816326379776
    2. 'dp' → logprob: -3.6574769020080566
    3. ' dp' → logprob: -5.407476902008057
    4. ' ap' → logprob: -7.157476902008057
    5. '        
' → logprob: -8.532476425170898
    6. 'ap' → logprob: -8.532476425170898
    7. 'table' → logprob: -9.157476425170898
    8. '
' → logprob: -9.532476425170898
    9. '	dp' → logprob: -9.532476425170898
    10. '   ' → logprob: -10.032476425170898

Token 403: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009709708392620087
    2. 'ap' → logprob: -5.00970983505249
    3. '       ' → logprob: -6.13470983505249
    4. 'table' → logprob: -8.384709358215332
    5. 'n' → logprob: -8.634709358215332
    6. 'd' → logprob: -8.884709358215332
    7. ' dp' → logprob: -9.384709358215332
    8. ' ap' → logprob: -10.384709358215332
    9. 'length' → logprob: -10.634709358215332
    10. 'aps' → logprob: -10.634709358215332

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055013738572597504
    2. '=' → logprob: -2.930013656616211
    3. '_table' → logprob: -9.055013656616211
    4. 'Table' → logprob: -11.430013656616211
    5. '_' → logprob: -13.305013656616211
    6. 'table' → logprob: -14.555013656616211
    7. '   ' → logprob: -14.805013656616211
    8. ' ' → logprob: -15.430013656616211
    9. ':' → logprob: -16.05501365661621
    10. '.' → logprob: -16.18001365661621

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18000146746635437
    2. ' self' → logprob: -1.8050014972686768
    3. 'Arithmetic' → logprob: -8.805001258850098
    4. '       ' → logprob: -9.430001258850098
    5. '[self' → logprob: -11.305001258850098
    6. ' Arithmetic' → logprob: -12.055001258850098
    7. '(self' → logprob: -12.430001258850098
    8. '   ' → logprob: -13.555001258850098
    9. '	self' → logprob: -14.180001258850098
    10. '=self' → logprob: -14.805001258850098

Token 406: '.A' (ID: 1336)
  Prédit: '.AP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.AP' → logprob: -0.007916182279586792
    2. '.A' → logprob: -4.88291597366333
    3. 'class' → logprob: -8.382916450500488
    4. '.' → logprob: -10.382916450500488
    5. '.Ap' → logprob: -10.882916450500488
    6. '.AR' → logprob: -11.132916450500488
    7. '.ap' → logprob: -12.757916450500488
    8. ' .' → logprob: -13.132916450500488
    9. 'AP' → logprob: -13.507916450500488
    10. '.CLASS' → logprob: -13.507916450500488

Token 407: 'PD' (ID: 26583)
  Prédit: 'PD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PD' → logprob: -0.20287644863128662
    2. 'P' → logprob: -1.7028764486312866
    3. 'p' → logprob: -6.702876567840576
    4. 'PCell' → logprob: -8.827876091003418
    5. 'П' → logprob: -10.452876091003418
    6. 'Ｐ' → logprob: -11.327876091003418
    7. 'PDF' → logprob: -11.452876091003418
    8. 'PDO' → logprob: -11.577876091003418
    9. 'PP' → logprob: -11.952876091003418
    10. 'PG' → logprob: -12.952876091003418

Token 408: 'ynamic' (ID: 7617)
  Prédit: 'ynamic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ynamic' → logprob: -0.47407856583595276
    2. 'Dynamic' → logprob: -0.9740785360336304
    3. 'dynamic' → logprob: -14.974078178405762
    4. '.Dynamic' → logprob: -15.224078178405762
    5. 'ynam' → logprob: -15.474078178405762
    6. 'YNAMIC' → logprob: -15.849078178405762
    7. '_dynamic' → logprob: -15.849078178405762
    8. 'yn' → logprob: -16.099079132080078
    9. 'ynamics' → logprob: -16.099079132080078
    10. 'y' → logprob: -16.224079132080078

Token 409: 'Table' (ID: 3429)
  Prédit: 'Table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Table' → logprob: -3.128163257315464e-07
    2. 'Tab' → logprob: -16.25
    3. 'table' → logprob: -17.25
    4. '<Table' → logprob: -17.375
    5. '	Table' → logprob: -18.25
    6. '@Table' → logprob: -18.5
    7. 'Tables' → logprob: -18.5
    8. '   ' → logprob: -18.875
    9. 'able' → logprob: -19.0
    10. '```' → logprob: -19.125

Token 410: '(self' (ID: 2402)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00013393278641160578
    2. '(self' → logprob: -9.500133514404297
    3. '(n' → logprob: -10.500133514404297
    4. '(' → logprob: -10.875133514404297
    5. '       ' → logprob: -12.625133514404297
    6. ' (' → logprob: -12.625133514404297
    7. 'len' → logprob: -13.000133514404297
    8. '(
' → logprob: -13.000133514404297
    9. '(size' → logprob: -14.750133514404297
    10. '(s' → logprob: -15.250133514404297

Token 411: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0037826199550181627
    2. 'n' → logprob: -5.628782749176025
    3. '.' → logprob: -9.753782272338867
    4. 'len' → logprob: -10.128782272338867
    5. '(n' → logprob: -11.128782272338867
    6. ',n' → logprob: -11.128782272338867
    7. ' n' → logprob: -11.378782272338867
    8. '   ' → logprob: -11.628782272338867
    9. '       ' → logprob: -12.128782272338867
    10. ',' → logprob: -12.253782272338867

Token 412: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009003336541354656
    2. ')
' → logprob: -4.759003162384033
    3. ')

' → logprob: -8.384003639221191
    4. '       ' → logprob: -9.384003639221191
    5. ')
' → logprob: -10.259003639221191
    6. ' )' → logprob: -10.509003639221191
    7. ')`' → logprob: -12.509003639221191
    8. '   ' → logprob: -12.884003639221191
    9. ')

' → logprob: -13.759003639221191
    10. ')`
' → logprob: -13.884003639221191

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03027002140879631
    2. '
' → logprob: -4.280270099639893
    3. '        
' → logprob: -4.530270099639893
    4. '<|end|>' → logprob: -6.155270099639893
    5. ' for' → logprob: -6.780270099639893
    6. '    
' → logprob: -7.405270099639893
    7. '  
' → logprob: -8.280269622802734
    8. 'for' → logprob: -8.405269622802734
    9. ' 
' → logprob: -8.405269622802734
    10. '   ' → logprob: -8.780269622802734

Token 414: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.12491092085838318
    2. 'for' → logprob: -2.874910831451416
    3. ' max' → logprob: -3.499910831451416
    4. 'result' → logprob: -4.249910831451416
    5. ' for' → logprob: -4.624910831451416
    6. '       ' → logprob: -5.749910831451416
    7. 'res' → logprob: -5.874910831451416
    8. ' result' → logprob: -8.124911308288574
    9. 'answer' → logprob: -8.624911308288574
    10. 'best' → logprob: -9.749911308288574

Token 415: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.06222591549158096
    2. '_length' → logprob: -2.812225818634033
    3. '_' → logprob: -8.812226295471191
    4. 'len' → logprob: -9.187226295471191
    5. '_l' → logprob: -13.187226295471191
    6. 'length' → logprob: -13.562226295471191
    7. '_max' → logprob: -13.687226295471191
    8. ' _' → logprob: -14.062226295471191
    9. '_ap' → logprob: -15.062226295471191
    10. '_val' → logprob: -15.187226295471191

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014182209968567
    2. '=' → logprob: -1.701418161392212
    3. ' ' → logprob: -12.576417922973633
    4. ',' → logprob: -14.201417922973633
    5. '   ' → logprob: -15.201417922973633
    6. '_' → logprob: -15.701417922973633
    7. ' =
' → logprob: -16.326417922973633
    8. '  ' → logprob: -16.451417922973633
    9. ')' → logprob: -16.451417922973633
    10. ' ' → logprob: -16.951417922973633

Token 417: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015105740167200565
    2. ' ' → logprob: -6.5015106201171875
    3. '   ' → logprob: -12.376510620117188
    4. '       ' → logprob: -12.501510620117188
    5. '2' → logprob: -16.251510620117188
    6. '           ' → logprob: -16.876510620117188
    7. '  ' → logprob: -16.876510620117188
    8. '=' → logprob: -17.251510620117188
    9. '     ' → logprob: -17.251510620117188
    10. '    ' → logprob: -17.376510620117188

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375
    4. '0' → logprob: -18.5
    5. '2' → logprob: -18.75
    6. '```' → logprob: -20.375
    7. '１' → logprob: -20.5
    8. '  ' → logprob: -21.125
    9. '       ' → logprob: -21.375
    10. '=' → logprob: -21.375

Token 419: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04421034827828407
    2. '       ' → logprob: -3.169210433959961
    3. '        
' → logprob: -7.169210433959961
    4. '
' → logprob: -8.919210433959961
    5. '  
' → logprob: -9.544210433959961
    6. ' for' → logprob: -9.794210433959961
    7. '<|end|>' → logprob: -10.044210433959961
    8. '    
' → logprob: -10.419210433959961
    9. '		
' → logprob: -10.669210433959961
    10. ' 
' → logprob: -10.669210433959961

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015043997205793858
    2. ' for' → logprob: -4.390044212341309
    3. 'for' → logprob: -6.140044212341309
    4. '   ' → logprob: -8.765044212341309
    5. '	for' → logprob: -8.890044212341309
    6. '
' → logprob: -10.515044212341309
    7. '        
' → logprob: -10.890044212341309
    8. '	' → logprob: -11.640044212341309
    9. '<|end|>' → logprob: -11.640044212341309
    10. '	   ' → logprob: -12.015044212341309

Token 421: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030753443017601967
    2. ' for' → logprob: -3.5307533740997314
    3. '       ' → logprob: -6.9057536125183105
    4. '	for' → logprob: -15.155753135681152
    5. '   ' → logprob: -16.03075408935547
    6. '
' → logprob: -17.15575408935547
    7. ' ' → logprob: -17.53075408935547
    8. 'n' → logprob: -17.65575408935547
    9. '```' → logprob: -17.90575408935547
    10. 'from' → logprob: -18.03075408935547

Token 422: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.466968650580384e-05
    2. ' for' → logprob: -10.000054359436035
    3. '       ' → logprob: -11.625054359436035
    4. '#' → logprob: -15.875054359436035
    5. 'from' → logprob: -16.25005531311035
    6. '   ' → logprob: -17.75005531311035
    7. 'index' → logprob: -18.25005531311035
    8. 'n' → logprob: -18.25005531311035
    9. '	for' → logprob: -18.75005531311035
    10. 'prev' → logprob: -19.00005531311035

Token 423: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6369378566741943
    2. 'i' → logprob: -0.7619378566741943
    3. ' j' → logprob: -5.886938095092773
    4. 'j' → logprob: -6.511938095092773
    5. ' idx' → logprob: -10.886938095092773
    6. '   ' → logprob: -11.511938095092773
    7. 'idx' → logprob: -11.636938095092773
    8. ' ' → logprob: -11.636938095092773
    9. ' length' → logprob: -12.511938095092773
    10. ' right' → logprob: -13.136938095092773

Token 424: ' pair' (ID: 10610)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.782389760017395
    2. 'j' → logprob: -1.032389760017395
    3. ' j' → logprob: -2.1573896408081055
    4. ' i' → logprob: -2.6573896408081055
    5. '   ' → logprob: -8.407389640808105
    6. ' ' → logprob: -9.157389640808105
    7. ' current' → logprob: -9.282389640808105
    8. 'curr' → logprob: -9.657389640808105
    9. 'current' → logprob: -9.782389640808105
    10. 'right' → logprob: -10.657389640808105

Token 425: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06729952245950699
    2. ' of' → logprob: -3.1922996044158936
    3. 'i' → logprob: -4.6922993659973145
    4. ' (' → logprob: -4.6922993659973145
    5. '       ' → logprob: -6.0672993659973145
    6. ' in' → logprob: -6.6922993659973145
    7. '(i' → logprob: -6.9422993659973145
    8. ' for' → logprob: -8.317299842834473
    9. ',' → logprob: -8.567299842834473
    10. '        ' → logprob: -8.692299842834473

Token 426: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07851052284240723
    2. 'j' → logprob: -2.7035105228424072
    3. ' i' → logprob: -4.953510284423828
    4. ' j' → logprob: -7.203510284423828
    5. '       ' → logprob: -8.078510284423828
    6. ')' → logprob: -8.578510284423828
    7. '   ' → logprob: -9.078510284423828
    8. '           ' → logprob: -10.453510284423828
    9. ')i' → logprob: -11.203510284423828
    10. 'prev' → logprob: -11.453510284423828

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1687612682580948
    2. ' in' → logprob: -2.0437612533569336
    3. 'in' → logprob: -4.918761253356934
    4. ')' → logprob: -5.043761253356934
    5. '),' → logprob: -5.543761253356934
    6. ' ,' → logprob: -5.543761253356934
    7. '=' → logprob: -5.793761253356934
    8. ' =' → logprob: -7.293761253356934
    9. '   ' → logprob: -9.543761253356934
    10. ' ' → logprob: -9.918761253356934

Token 428: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0063972617499530315
    2. ' i' → logprob: -5.381397247314453
    3. ')' → logprob: -6.506397247314453
    4. 'k' → logprob: -8.631397247314453
    5. '
' → logprob: -10.131397247314453
    6. ')i' → logprob: -11.006397247314453
    7. '   ' → logprob: -11.881397247314453
    8. 'for' → logprob: -12.256397247314453
    9. ' ' → logprob: -12.256397247314453
    10. 'idx' → logprob: -12.381397247314453

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26833319664001465
    2. '):' → logprob: -1.6433331966400146
    3. '),' → logprob: -3.6433331966400146
    4. '):
' → logprob: -4.643333435058594
    5. ' in' → logprob: -5.393333435058594
    6. 'in' → logprob: -6.893333435058594
    7. ' )' → logprob: -8.518333435058594
    8. ')
' → logprob: -8.893333435058594
    9. ' ):' → logprob: -9.643333435058594
    10. '):

' → logprob: -9.768333435058594

Token 430: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006702108308672905
    2. 'in' → logprob: -6.006701946258545
    3. ':' → logprob: -6.381701946258545
    4. ',' → logprob: -6.631701946258545
    5. '       ' → logprob: -7.256701946258545
    6. ' for' → logprob: -7.881701946258545
    7. 'for' → logprob: -10.006702423095703
    8. ':
' → logprob: -10.381702423095703
    9. '   ' → logprob: -11.006702423095703
    10. '           ' → logprob: -11.631702423095703

Token 431: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.399867445230484
    2. 'j' → logprob: -1.8998674154281616
    3. ' i' → logprob: -2.024867534637451
    4. '0' → logprob: -3.399867534637451
    5. ' j' → logprob: -4.274867534637451
    6. ' ' → logprob: -7.399867534637451
    7. '1' → logprob: -9.649867057800293
    8. '   ' → logprob: -11.649867057800293
    9. '`' → logprob: -13.399867057800293
    10. 'indices' → logprob: -13.524867057800293

Token 432: ' <' (ID: 464)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11564023792743683
    2. 'in' → logprob: -2.490640163421631
    3. ' <' → logprob: -3.740640163421631
    4. '<' → logprob: -6.490640163421631
    5. '<i' → logprob: -7.865640163421631
    6. 'range' → logprob: -8.615640640258789
    7. ')' → logprob: -8.865640640258789
    8. ' ' → logprob: -9.115640640258789
    9. ' range' → logprob: -9.240640640258789
    10. '   ' → logprob: -9.990640640258789

Token 433: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11282901465892792
    2. ' i' → logprob: -2.2378289699554443
    3. '           ' → logprob: -13.612829208374023
    4. '   ' → logprob: -14.362829208374023
    5. 'j' → logprob: -14.487829208374023
    6. ' ' → logprob: -14.487829208374023
    7. '
' → logprob: -14.612829208374023
    8. '       ' → logprob: -14.737829208374023
    9. '_i' → logprob: -14.737829208374023
    10. '               ' → logprob: -14.987829208374023

Token 434: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32241350412368774
    2. ':
' → logprob: -1.697413444519043
    3. ',' → logprob: -2.447413444519043
    4. '       ' → logprob: -5.322413444519043
    5. ',
' → logprob: -7.697413444519043
    6. ' in' → logprob: -7.947413444519043
    7. '           ' → logprob: -9.447413444519043
    8. ' for' → logprob: -10.072413444519043
    9. '   ' → logprob: -10.947413444519043
    10. '):
' → logprob: -11.072413444519043

Token 435: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08722496777772903
    2. '           ' → logprob: -2.7122249603271484
    3. 'for' → logprob: -4.712224960327148
    4. '       ' → logprob: -4.962224960327148
    5. ' ' → logprob: -9.087224960327148
    6. '               ' → logprob: -9.087224960327148
    7. '        ' → logprob: -9.087224960327148
    8. '	       ' → logprob: -9.462224960327148
    9. ' if' → logprob: -9.587224960327148
    10. '   ' → logprob: -9.962224960327148

Token 436: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8277414441108704
    2. '           ' → logprob: -0.9527414441108704
    3. 'to' → logprob: -2.0777413845062256
    4. ':' → logprob: -3.4527413845062256
    5. ':
' → logprob: -5.327741622924805
    6. '   ' → logprob: -5.452741622924805
    7. '       ' → logprob: -5.827741622924805
    8. '               ' → logprob: -6.452741622924805
    9. 'ing' → logprob: -6.702741622924805
    10. '{' → logprob: -6.702741622924805

Token 437: ' build' (ID: 3024)
  Prédit: ' extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extend' → logprob: -0.9663727283477783
    2. 'extend' → logprob: -1.0913727283477783
    3. ' find' → logprob: -1.7163727283477783
    4. 'find' → logprob: -2.8413727283477783
    5. ' build' → logprob: -4.341372489929199
    6. ' form' → logprob: -4.591372489929199
    7. 'build' → logprob: -5.091372489929199
    8. ' update' → logprob: -5.716372489929199
    9. 'update' → logprob: -5.966372489929199
    10. 'form' → logprob: -5.966372489929199

Token 438: ' AP' (ID: 13165)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.6404416561126709
    2. 'an' → logprob: -1.765441656112671
    3. ' the' → logprob: -2.140441656112671
    4. 'the' → logprob: -3.015441656112671
    5. 'ar' → logprob: -3.390441656112671
    6. 'dp' → logprob: -3.765441656112671
    7. 'ap' → logprob: -3.765441656112671
    8. '       ' → logprob: -4.64044189453125
    9. ' a' → logprob: -4.89044189453125
    10. ' longer' → logprob: -4.89044189453125

Token 439: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6958333849906921
    2. '
' → logprob: -0.8208333849906921
    3. ':' → logprob: -4.195833206176758
    4. ':
' → logprob: -4.320833206176758
    5. ' for' → logprob: -4.320833206176758
    6. '        
' → logprob: -4.445833206176758
    7. '  
' → logprob: -6.695833206176758
    8. ',' → logprob: -6.820833206176758
    9. 'for' → logprob: -6.820833206176758
    10. ' with' → logprob: -7.320833206176758

Token 440: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6180140972137451
    2. ' at' → logprob: -1.1180140972137451
    3. 'with' → logprob: -2.743014097213745
    4. '       ' → logprob: -2.868014097213745
    5. ' with' → logprob: -5.118014335632324
    6. 'here' → logprob: -5.993014335632324
    7. '           ' → logprob: -6.118014335632324
    8. ',' → logprob: -7.493014335632324
    9. 'in' → logprob: -7.993014335632324
    10. ' here' → logprob: -8.118014335632324

Token 441: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14299601316452026
    2. ' i' → logprob: -2.017996072769165
    3. '       ' → logprob: -9.517995834350586
    4. '[i' → logprob: -10.267995834350586
    5. '           ' → logprob: -10.392995834350586
    6. ')' → logprob: -10.392995834350586
    7. '   ' → logprob: -10.392995834350586
    8. 'sorted' → logprob: -10.392995834350586
    9. '```' → logprob: -11.267995834350586
    10. 'index' → logprob: -11.392995834350586

Token 442: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006854142528027296
    2. '        
' → logprob: -6.006854057312012
    3. ',' → logprob: -6.256854057312012
    4. ' for' → logprob: -7.006854057312012
    5. '.' → logprob: -7.756854057312012
    6. ' with' → logprob: -8.256854057312012
    7. 'for' → logprob: -8.381854057312012
    8. '<|end|>' → logprob: -8.756854057312012
    9. ':' → logprob: -9.131854057312012
    10. '
' → logprob: -9.256854057312012

Token 443: ' difference' (ID: 9809)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.8928563594818115
    2. 'j' → logprob: -1.0178563594818115
    3. ' j' → logprob: -2.3928563594818115
    4. 'sorted' → logprob: -3.0178563594818115
    5. 'the' → logprob: -4.392856597900391
    6. 'diff' → logprob: -4.392856597900391
    7. ' difference' → logprob: -4.767856597900391
    8. 'element' → logprob: -4.767856597900391
    9. '[j' → logprob: -5.142856597900391
    10. 'i' → logprob: -5.267856597900391

Token 444: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7838619947433472
    2. '=' → logprob: -1.6588619947433472
    3. ' between' → logprob: -2.0338621139526367
    4. 'diff' → logprob: -2.7838621139526367
    5. ' ' → logprob: -3.2838621139526367
    6. ' in' → logprob: -3.4088621139526367
    7. ' (' → logprob: -3.7838621139526367
    8. 'between' → logprob: -4.158862113952637
    9. ' of' → logprob: -4.658862113952637
    10. ' e' → logprob: -5.283862113952637

Token 445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47537848353385925
    2. '
' → logprob: -1.1003785133361816
    3. '        
' → logprob: -3.2253785133361816
    4. '  
' → logprob: -6.600378513336182
    5. '    
' → logprob: -6.975378513336182
    6. ',' → logprob: -6.975378513336182
    7. '        ' → logprob: -8.350378036499023
    8. '   ' → logprob: -8.475378036499023
    9. '       
' → logprob: -8.475378036499023
    10. '.' → logprob: -8.475378036499023

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028248466551303864
    2. '        
' → logprob: -6.502824783325195
    3. '
' → logprob: -7.377824783325195
    4. ',' → logprob: -8.752824783325195
    5. '  
' → logprob: -9.002824783325195
    6. ' for' → logprob: -9.002824783325195
    7. '    
' → logprob: -9.502824783325195
    8. '   ' → logprob: -9.627824783325195
    9. '           ' → logprob: -10.627824783325195
    10. ':' → logprob: -10.752824783325195

Token 447: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12520453333854675
    2. ' for' → logprob: -2.250204563140869
    3. 'for' (adapté à ' for') → logprob: -4.750204563140869
    4. '
' → logprob: -5.750204563140869
    5. '   ' → logprob: -8.250204086303711
    6. ' 
' → logprob: -10.125204086303711
    7. ' ' → logprob: -10.125204086303711
    8. '```' → logprob: -10.250204086303711
    9. '        
' → logprob: -10.500204086303711
    10. '           ' → logprob: -11.000204086303711

Token 448: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10022673010826111
    2. 'i' → logprob: -2.350226640701294
    3. ' ' → logprob: -12.600226402282715
    4. '   ' → logprob: -12.725226402282715
    5. ' j' → logprob: -12.725226402282715
    6. '	i' → logprob: -12.850226402282715
    7. '_i' → logprob: -13.100226402282715
    8. 'j' → logprob: -13.475226402282715
    9. ' ' → logprob: -13.975226402282715
    10. ' in' → logprob: -14.225226402282715

Token 449: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07927574217319489
    2. 'in' → logprob: -2.5792758464813232
    3. ' ' → logprob: -8.079276084899902
    4. '	in' → logprob: -10.954276084899902
    5. ' i' → logprob: -11.329276084899902
    6. '  ' → logprob: -11.829276084899902
    7. ',' → logprob: -11.829276084899902
    8. '   ' → logprob: -11.954276084899902
    9. 'n' → logprob: -11.954276084899902
    10. '    ' → logprob: -12.329276084899902

Token 450: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061976756900548935
    2. ' range' → logprob: -2.811976671218872
    3. '   ' → logprob: -12.186976432800293
    4. ' ' → logprob: -13.436976432800293
    5. '(range' → logprob: -14.061976432800293
    6. '  ' → logprob: -14.061976432800293
    7. '    ' → logprob: -14.811976432800293
    8. '	range' → logprob: -14.936976432800293
    9. '     ' → logprob: -16.43697738647461
    10. '
' → logprob: -17.06197738647461

Token 451: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005666632670909166
    2. '(self' → logprob: -5.255666732788086
    3. '1' → logprob: -7.755666732788086
    4. '(
' → logprob: -13.505666732788086
    5. '       ' → logprob: -13.880666732788086
    6. 'self' → logprob: -14.130666732788086
    7. ' (' → logprob: -14.505666732788086
    8. '           ' → logprob: -15.005666732788086
    9. '(len' → logprob: -15.505666732788086
    10. ' ' → logprob: -16.005666732788086

Token 452: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.33944833278656006
    2. 'n' → logprob: -1.33944833278656
    3. '1' → logprob: -3.7144484519958496
    4. '       ' → logprob: -7.71444845199585
    5. '.' → logprob: -7.83944845199585
    6. ')' → logprob: -8.589447975158691
    7. 'self' → logprob: -8.714447975158691
    8. '   ' → logprob: -9.589447975158691
    9. '           ' → logprob: -10.464447975158691
    10. '0' → logprob: -10.589447975158691

Token 453: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2812317907810211
    2. '):
' → logprob: -1.4062317609786987
    3. ':' → logprob: -10.656231880187988
    4. '):
' → logprob: -10.781231880187988
    5. '   ' → logprob: -11.406231880187988
    6. '       ' → logprob: -11.406231880187988
    7. ' ):' → logprob: -12.156231880187988
    8. '):

' → logprob: -13.531231880187988
    9. ')' → logprob: -13.781231880187988
    10. ' ' → logprob: -13.906231880187988

Token 454: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01544270571321249
    2. '   ' → logprob: -4.765442848205566
    3. ' for' → logprob: -5.390442848205566
    4. '           ' → logprob: -7.390442848205566
    5. '<|end|>' → logprob: -7.390442848205566
    6. ',' → logprob: -7.515442848205566
    7. ' ' → logprob: -8.515442848205566
    8. '	   ' → logprob: -9.765442848205566
    9. '    ' → logprob: -10.515442848205566
    10. '<|end|>' → logprob: -10.515442848205566

Token 455: ' current' (ID: 2208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10548780858516693
    2. 'for' → logprob: -2.355487823486328
    3. '   ' → logprob: -6.105487823486328
    4. '           ' → logprob: -6.230487823486328
    5. '       ' → logprob: -6.980487823486328
    6. ' ' → logprob: -9.480487823486328
    7. '	for' → logprob: -10.355487823486328
    8. '               ' → logprob: -11.855487823486328
    9. '    ' → logprob: -11.980487823486328
    10. ' ' → logprob: -12.355487823486328

Token 456: ' =' (ID: 314)
  Prédit: '_elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.6827731728553772
    2. '_element' → logprob: -0.8077731728553772
    3. '_' → logprob: -4.557773113250732
    4. '_val' → logprob: -4.682773113250732
    5. ' =' → logprob: -4.682773113250732
    6. '=' → logprob: -5.057773113250732
    7. 'for' → logprob: -5.307773113250732
    8. '_value' → logprob: -5.932773113250732
    9. ' for' → logprob: -6.057773113250732
    10. '_elements' → logprob: -6.557773113250732

Token 457: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3132856786251068
    2. ' sorted' → logprob: -1.3132857084274292
    3. '(sorted' → logprob: -11.563285827636719
    4. 'Sorted' → logprob: -12.063285827636719
    5. '.sorted' → logprob: -12.063285827636719
    6. '_sorted' → logprob: -13.188285827636719
    7. '   ' → logprob: -15.813285827636719
    8. 's' → logprob: -16.06328582763672
    9. ' ' → logprob: -16.06328582763672
    10. '<|end|>' → logprob: -16.31328582763672

Token 458: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -2.3199920178740285e-05
    2. 'elements' → logprob: -10.750022888183594
    3. '_' → logprob: -14.375022888183594
    4. 'Elements' → logprob: -15.375022888183594
    5. '```' → logprob: -15.375022888183594
    6. '_ELEMENTS' → logprob: -15.875022888183594
    7. '_element' → logprob: -16.250022888183594
    8. ')_' → logprob: -16.875022888183594
    9. ' elements' → logprob: -17.250022888183594
    10. '
' → logprob: -17.250022888183594

Token 459: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004557461477816105
    2. 'i' → logprob: -6.6295576095581055
    3. '[' → logprob: -6.7545576095581055
    4. ' i' → logprob: -7.5045576095581055
    5. '
' → logprob: -7.7545576095581055
    6. '(i' → logprob: -7.8795576095581055
    7. '[
' → logprob: -7.8795576095581055
    8. '   ' → logprob: -9.129557609558105
    9. '       ' → logprob: -10.254557609558105
    10. '.' → logprob: -11.004557609558105

Token 460: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38574451208114624
    2. ')' → logprob: -1.260744571685791
    3. '           ' → logprob: -3.635744571685791
    4. '       ' → logprob: -5.510744571685791
    5. '
' → logprob: -5.760744571685791
    6. ']
' → logprob: -7.010744571685791
    7. ']' → logprob: -7.385744571685791
    8. 'for' → logprob: -7.510744571685791
    9. '   ' → logprob: -8.010744094848633
    10. ' for' → logprob: -8.760744094848633

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49231433868408203
    2. '
' → logprob: -2.117314338684082
    3. '       ' → logprob: -2.242314338684082
    4. ' for' → logprob: -2.867314338684082
    5. ' 
' → logprob: -3.367314338684082
    6. '   ' → logprob: -3.492314338684082
    7. '<|end|>' → logprob: -4.367314338684082
    8. '    
' → logprob: -4.867314338684082
    9. '  
' → logprob: -5.117314338684082
    10. ' ' → logprob: -5.617314338684082

Token 462: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05164133757352829
    2. ' for' → logprob: -3.0516412258148193
    3. '           ' → logprob: -6.676641464233398
    4. '       ' → logprob: -6.926641464233398
    5. '   ' → logprob: -7.176641464233398
    6. '	for' → logprob: -10.176641464233398
    7. ' ' → logprob: -12.801641464233398
    8. 'j' → logprob: -14.301641464233398
    9. '	   ' → logprob: -14.551641464233398
    10. '```' → logprob: -14.551641464233398

Token 463: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132721483707428
    2. ' j' → logprob: -1.3132721185684204
    3. '	j' → logprob: -11.938272476196289
    4. '   ' → logprob: -13.688272476196289
    5. '    ' → logprob: -13.813272476196289
    6. '[j' → logprob: -14.938272476196289
    7. ' ' → logprob: -14.938272476196289
    8. '$j' → logprob: -15.688272476196289
    9. '_j' → logprob: -15.813272476196289
    10. '  ' → logprob: -16.31327247619629

Token 464: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054892994463443756
    2. 'in' → logprob: -2.9298930168151855
    3. ' ' → logprob: -11.929892539978027
    4. 'i' → logprob: -13.929892539978027
    5. ' i' → logprob: -13.929892539978027
    6. 'range' → logprob: -14.179892539978027
    7. '	in' → logprob: -14.554892539978027
    8. ')' → logprob: -15.554892539978027
    9. '0' → logprob: -15.679892539978027
    10. '```' → logprob: -16.554893493652344

Token 465: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022484004497528
    2. ' range' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.285224914550781
    4. '	range' → logprob: -15.535224914550781
    5. '(range' → logprob: -16.03522491455078
    6. '   ' → logprob: -16.41022491455078
    7. '  ' → logprob: -17.66022491455078
    8. 'rang' → logprob: -17.78522491455078
    9. 'ange' → logprob: -17.91022491455078
    10. '`' → logprob: -18.03522491455078

Token 466: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00023882099776528776
    2. '(' → logprob: -8.375238418579102
    3. 'i' → logprob: -12.375238418579102
    4. ' i' → logprob: -13.125238418579102
    5. ' (' → logprob: -13.875238418579102
    6. '(j' → logprob: -14.375238418579102
    7. '0' → logprob: -15.000238418579102
    8. '(
' → logprob: -16.3752384185791
    9. '           ' → logprob: -18.2502384185791
    10. '{i' → logprob: -18.2502384185791

Token 467: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14657703042030334
    2. '):
' → logprob: -2.0215771198272705
    3. ' ):' → logprob: -6.021576881408691
    4. ')' → logprob: -7.146576881408691
    5. '       ' → logprob: -8.396576881408691
    6. ' ):
' → logprob: -9.021576881408691
    7. '           ' → logprob: -9.271576881408691
    8. '        ' → logprob: -9.771576881408691
    9. '+' → logprob: -10.271576881408691
    10. '):

' → logprob: -10.896576881408691

Token 468: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012111874530091882
    2. ' current' → logprob: -8.001211166381836
    3. '                
' → logprob: -8.001211166381836
    4. '           ' → logprob: -8.376211166381836
    5. ',' → logprob: -9.626211166381836
    6. '                ' → logprob: -10.126211166381836
    7. ':
' → logprob: -10.376211166381836
    8. ' 
' → logprob: -11.001211166381836
    9. '            
' → logprob: -11.001211166381836
    10. 'current' → logprob: -11.251211166381836

Token 469: ' prev' (ID: 10258)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.825363039970398
    2. 'current' → logprob: -1.200363039970398
    3. '               ' → logprob: -2.0753631591796875
    4. ' current' → logprob: -2.9503631591796875
    5. ' diff' → logprob: -3.3253631591796875
    6. 'prev' (adapté à ' prev') → logprob: -3.4503631591796875
    7. '                   ' → logprob: -4.5753631591796875
    8. ' prev' → logprob: -6.2003631591796875
    9. 'previous' → logprob: -7.0753631591796875
    10. 'd' → logprob: -7.0753631591796875

Token 470: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04093888774514198
    2. '=' → logprob: -3.4159388542175293
    3. ' ' → logprob: -5.040938854217529
    4. '_' → logprob: -8.290939331054688
    5. ')' → logprob: -9.040939331054688
    6. '_token' → logprob: -9.165939331054688
    7. ',' → logprob: -10.040939331054688
    8. 'current' → logprob: -10.040939331054688
    9. '.' → logprob: -10.290939331054688
    10. '=current' → logprob: -10.290939331054688

Token 471: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.03805778920650482
    2. ' sorted' → logprob: -3.288057804107666
    3. '(sorted' → logprob: -11.413057327270508
    4. '           ' → logprob: -13.663057327270508
    5. '               ' → logprob: -13.663057327270508
    6. '_sorted' → logprob: -13.663057327270508
    7. '.sorted' → logprob: -13.913057327270508
    8. '                   ' → logprob: -15.163057327270508
    9. '                       ' → logprob: -15.663057327270508
    10. ' ' → logprob: -16.413057327270508

Token 472: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00014215784904081374
    2. 'elements' → logprob: -8.875142097473145
    3. '_ELEMENTS' → logprob: -14.375142097473145
    4. '_' → logprob: -15.000142097473145
    5. '_sorted' → logprob: -15.250142097473145
    6. ' elements' → logprob: -15.500142097473145
    7. 'Elements' → logprob: -15.500142097473145
    8. '_tokens' → logprob: -15.625142097473145
    9. '```' → logprob: -16.12514305114746
    10. 's' → logprob: -16.62514305114746

Token 473: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.7888184528565034e-05
    2. 'j' → logprob: -10.3750581741333
    3. '               ' → logprob: -10.8750581741333
    4. '[' → logprob: -13.0000581741333
    5. '                   ' → logprob: -13.6250581741333
    6. '[i' → logprob: -13.6250581741333
    7. '           ' → logprob: -14.3750581741333
    8. '[
' → logprob: -14.5000581741333
    9. '                ' → logprob: -14.6250581741333
    10. ' j' → logprob: -15.3750581741333

Token 474: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5604541301727295
    2. ')' → logprob: -1.4354541301727295
    3. '               ' → logprob: -1.6854541301727295
    4. ']
' → logprob: -5.685454368591309
    5. ']' → logprob: -7.060454368591309
    6. '           ' → logprob: -7.560454368591309
    7. '):
' → logprob: -8.435454368591309
    8. '                   ' → logprob: -8.435454368591309
    9. ',' → logprob: -9.685454368591309
    10. '                ' → logprob: -9.935454368591309

Token 475: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018329687882214785
    2. '                
' → logprob: -6.626832962036133
    3. '                   ' → logprob: -8.501832962036133
    4. '                ' → logprob: -9.376832962036133
    5. '
' → logprob: -9.751832962036133
    6. 'diff' → logprob: -9.876832962036133
    7. '                    
' → logprob: -11.001832962036133
    8. 'd' → logprob: -11.251832962036133
    9. '              ' → logprob: -11.376832962036133
    10. '           ' → logprob: -11.501832962036133

Token 476: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.17837540805339813
    2. ' diff' → logprob: -2.428375482559204
    3. 'd' → logprob: -2.678375482559204
    4. '               ' → logprob: -5.678375244140625
    5. ' d' → logprob: -5.803375244140625
    6. '                   ' → logprob: -9.928375244140625
    7. '	diff' → logprob: -11.178375244140625
    8. 'difference' → logprob: -12.053375244140625
    9. '                ' → logprob: -12.678375244140625
    10. '                
' → logprob: -12.928375244140625

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602255403995514
    2. '=' → logprob: -1.910225510597229
    3. '                ' → logprob: -15.160225868225098
    4. '                   ' → logprob: -15.285225868225098
    5. '            ' → logprob: -15.785225868225098
    6. '           ' → logprob: -15.785225868225098
    7. '                    ' → logprob: -15.785225868225098
    8. '               ' → logprob: -15.910225868225098
    9. ' ' → logprob: -15.910225868225098
    10. '    ' → logprob: -16.28522491455078

Token 478: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03804344683885574
    2. ' current' → logprob: -3.28804349899292
    3. '(current' → logprob: -14.663043022155762
    4. 'curr' → logprob: -15.038043022155762
    5. 'cur' → logprob: -15.038043022155762
    6. '[current' → logprob: -15.538043022155762
    7. '$current' → logprob: -15.788043022155762
    8. '.current' → logprob: -15.913043022155762
    9. '	current' → logprob: -15.913043022155762
    10. '   ' → logprob: -16.163043975830078

Token 479: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0001431114797014743
    2. '.' → logprob: -9.125143051147461
    3. ' .' → logprob: -10.500143051147461
    4. 'value' → logprob: -12.000143051147461
    5. '.val' → logprob: -15.875143051147461
    6. ' value' → logprob: -16.87514305114746
    7. '   ' → logprob: -17.00014305114746
    8. '"value' → logprob: -17.12514305114746
    9. '```' → logprob: -17.25014305114746
    10. '`.' → logprob: -18.00014305114746

Token 480: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029751067981123924
    2. '-' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.15475082397461
    4. '   ' → logprob: -16.52975082397461
    5. '-current' → logprob: -16.65475082397461
    6. ' ' → logprob: -16.90475082397461
    7. '-prev' → logprob: -17.15475082397461
    8. '           ' → logprob: -17.52975082397461
    9. 'current' → logprob: -19.02975082397461
    10. '  ' → logprob: -19.02975082397461

Token 481: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00014036978245712817
    2. ' prev' → logprob: -8.875140190124512
    3. '(prev' → logprob: -15.375140190124512
    4. '	prev' → logprob: -15.875140190124512
    5. 'previous' → logprob: -17.750141143798828
    6. '   ' → logprob: -18.250141143798828
    7. '.prev' → logprob: -18.375141143798828
    8. '           ' → logprob: -18.500141143798828
    9. '```' → logprob: -18.750141143798828
    10. '
' → logprob: -19.250141143798828

Token 482: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0007261329446919262
    2. 'value' → logprob: -7.250726222991943
    3. '.' → logprob: -11.250725746154785
    4. ' .' → logprob: -12.875725746154785
    5. ' value' → logprob: -15.500725746154785
    6. '.current' → logprob: -16.2507266998291
    7. '.val' → logprob: -16.5007266998291
    8. '   ' → logprob: -16.7507266998291
    9. ').' → logprob: -17.1257266998291
    10. '"value' → logprob: -17.2507266998291

Token 483: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011672371067106724
    2. '                
' → logprob: -4.761672496795654
    3. '
' → logprob: -6.636672496795654
    4. ',' → logprob: -7.511672496795654
    5. ' length' → logprob: -8.136672019958496
    6. 'length' → logprob: -8.511672019958496
    7. '                ' → logprob: -8.636672019958496
    8. ')' → logprob: -9.261672019958496
    9. '<|end|>' → logprob: -9.636672019958496
    10. '           ' → logprob: -9.886672019958496

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034618061035871506
    2. ' length' → logprob: -3.5346181392669678
    3. 'length' → logprob: -6.409617900848389
    4. ' dp' → logprob: -6.909617900848389
    5. '                
' → logprob: -7.034617900848389
    6. 'dp' → logprob: -7.784617900848389
    7. 'prev' → logprob: -8.659618377685547
    8. ' prev' → logprob: -8.909618377685547
    9. ',' → logprob: -9.409618377685547
    10. ' current' → logprob: -9.534618377685547

Token 485: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.3700743019580841
    2. 'length' → logprob: -1.2450742721557617
    3. 'current' → logprob: -5.120074272155762
    4. '               ' → logprob: -5.370074272155762
    5. 'curr' → logprob: -5.495074272155762
    6. 'len' → logprob: -5.495074272155762
    7. 'cur' → logprob: -7.120074272155762
    8. 'old' → logprob: -7.745074272155762
    9. ' prev' → logprob: -7.870074272155762
    10. 'previous' → logprob: -7.870074272155762

Token 486: ' length' (ID: 5517)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5803467035293579
    2. 'length' → logprob: -0.8303467035293579
    3. 'curr' → logprob: -5.955346584320068
    4. 'current' → logprob: -7.080346584320068
    5. 'cur' → logprob: -8.830347061157227
    6. 'cand' → logprob: -8.830347061157227
    7. 'previous' → logprob: -8.955347061157227
    8. 'len' → logprob: -9.080347061157227
    9. ' prev' → logprob: -9.205347061157227
    10. ' length' → logprob: -9.205347061157227

Token 487: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007551728282123804
    2. '=' → logprob: -5.007551670074463
    3. '               ' → logprob: -7.507551670074463
    4. '_prev' → logprob: -8.632552146911621
    5. '                   ' → logprob: -9.382552146911621
    6. '           ' → logprob: -12.257552146911621
    7. '                ' → logprob: -12.507552146911621
    8. 'prev' → logprob: -12.757552146911621
    9. '_' → logprob: -13.257552146911621
    10. '   ' → logprob: -13.507552146911621

Token 488: ' AP' (ID: 13165)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.03206060826778412
    2. 'current' → logprob: -4.532060623168945
    3. 'curr' → logprob: -4.657060623168945
    4. 'ap' → logprob: -5.782060623168945
    5. 'previous' → logprob: -5.907060623168945
    6. 'new' → logprob: -6.782060623168945
    7. 'existing' → logprob: -6.907060623168945
    8. 'cur' → logprob: -7.032060623168945
    9. 'length' → logprob: -7.407060623168945
    10. 'dp' → logprob: -7.407060623168945

Token 489: ' ending' (ID: 22013)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20335885882377625
    2. '=' → logprob: -1.7033588886260986
    3. '               ' → logprob: -6.8283586502075195
    4. '                   ' → logprob: -8.82835865020752
    5. 'prev' → logprob: -8.82835865020752
    6. '_so' → logprob: -8.95335865020752
    7. '_at' → logprob: -9.07835865020752
    8. '_prev' → logprob: -9.20335865020752
    9. '_here' → logprob: -9.45335865020752
    10. 'ending' → logprob: -9.95335865020752

Token 490: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.296065092086792
    2. ' =' → logprob: -2.796065092086792
    3. 'here' → logprob: -3.046065092086792
    4. '=' → logprob: -3.171065092086792
    5. ' at' → logprob: -3.171065092086792
    6. 'with' → logprob: -3.671065092086792
    7. '_here' → logprob: -4.046065330505371
    8. '               ' → logprob: -4.921065330505371
    9. 'prev' → logprob: -4.921065330505371
    10. '_at' → logprob: -5.796065330505371

Token 491: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067037660628557205
    2. 'prev' → logprob: -5.631703853607178
    3. ' j' → logprob: -6.256703853607178
    4. 'i' → logprob: -7.631703853607178
    5. '[j' → logprob: -8.00670337677002
    6. '```' → logprob: -9.38170337677002
    7. 'previous' → logprob: -9.63170337677002
    8. 'index' → logprob: -9.88170337677002
    9. ' prev' → logprob: -10.63170337677002
    10. 'current' → logprob: -10.63170337677002

Token 492: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28072819113731384
    2. 'with' → logprob: -2.0307281017303467
    3. '=' → logprob: -2.6557281017303467
    4. '               ' → logprob: -4.405728340148926
    5. ' with' → logprob: -4.530728340148926
    6. 'prev' → logprob: -4.655728340148926
    7. ',' → logprob: -6.280728340148926
    8. ')' → logprob: -6.280728340148926
    9. 'curr' → logprob: -6.280728340148926
    10. 'length' → logprob: -6.905728340148926

Token 493: ' difference' (ID: 9809)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.009917576797306538
    2. ' diff' → logprob: -4.634917736053467
    3. 'that' → logprob: -9.509917259216309
    4. ' that' → logprob: -10.009917259216309
    5. 'this' → logprob: -11.384917259216309
    6. 'd' → logprob: -11.884917259216309
    7. ' this' → logprob: -11.884917259216309
    8. '               ' → logprob: -12.009917259216309
    9. 'the' → logprob: -12.759917259216309
    10. ' the' → logprob: -13.384917259216309

Token 494: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6564033627510071
    2. 'diff' → logprob: -0.7814033627510071
    3. ' =' → logprob: -4.156403541564941
    4. '=' → logprob: -5.531403541564941
    5. 'd' → logprob: -6.281403541564941
    6. ' d' → logprob: -6.906403541564941
    7. '               ' → logprob: -7.656403541564941
    8. '                ' → logprob: -8.656403541564941
    9. '(diff' → logprob: -8.781403541564941
    10. '                   ' → logprob: -9.906403541564941

Token 495: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49532705545425415
    2. '               ' → logprob: -1.3703269958496094
    3. '=' → logprob: -2.3703269958496094
    4. 'prev' → logprob: -3.9953269958496094
    5. 'length' → logprob: -4.245326995849609
    6. ' length' → logprob: -5.620326995849609
    7. ' is' → logprob: -6.995326995849609
    8. ',' → logprob: -6.995326995849609
    9. 'curr' → logprob: -7.120326995849609
    10. ' prev' → logprob: -7.245326995849609

Token 496: ' default' (ID: 2787)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.35760921239852905
    2. 'prev' → logprob: -1.6076092720031738
    3. ' length' → logprob: -2.607609272003174
    4. 'len' → logprob: -4.982609272003174
    5. ' prev' → logprob: -5.107609272003174
    6. '               ' → logprob: -5.357609272003174
    7. 'curr' → logprob: -5.357609272003174
    8. 'current' → logprob: -6.482609272003174
    9. ' curr' → logprob: -7.482609272003174
    10. 'cur' → logprob: -7.482609272003174

Token 497: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27887070178985596
    2. ' ' → logprob: -2.4038705825805664
    3. '1' → logprob: -2.7788705825805664
    4. ' is' → logprob: -2.7788705825805664
    5. 'is' → logprob: -4.653870582580566
    6. ' =' → logprob: -4.778870582580566
    7. '2' → logprob: -6.028870582580566
    8. '               ' → logprob: -6.028870582580566
    9. '+' → logprob: -6.153870582580566
    10. ' +' → logprob: -7.028870582580566

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08643237501382828
    2. '=' → logprob: -2.711432456970215
    3. ' ' → logprob: -4.711432456970215
    4. '2' → logprob: -5.461432456970215
    5. 'to' → logprob: -6.711432456970215
    6. ' =' → logprob: -7.336432456970215
    7. ' to' → logprob: -7.961432456970215
    8. ' is' → logprob: -8.211432456970215
    9. '               ' → logprob: -8.461432456970215
    10. ':' → logprob: -8.711432456970215

Token 499: ' means' (ID: 4748)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.287829726934433
    2. ' =' → logprob: -1.7878297567367554
    3. '=' → logprob: -3.537829637527466
    4. ',' → logprob: -3.912829637527466
    5. '+' → logprob: -4.662829875946045
    6. ' +' → logprob: -4.912829875946045
    7. '                ' → logprob: -5.287829875946045
    8. 'length' → logprob: -5.537829875946045
    9. '                
' → logprob: -6.287829875946045
    10. ' length' → logprob: -6.662829875946045

Token 500: ' just' (ID: 1327)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.3755597174167633
    2. '2' → logprob: -1.750559687614441
    3. 'length' → logprob: -2.7505598068237305
    4. 'starting' → logprob: -4.1255598068237305
    5. ' at' → logprob: -4.5005598068237305
    6. 'sequence' → logprob: -5.0005598068237305
    7. 'we' → logprob: -5.2505598068237305
    8. 'start' → logprob: -5.2505598068237305
    9. 'dp' → logprob: -5.6255598068237305
    10. 'the' → logprob: -5.6255598068237305

Token 501: ' prev' (ID: 10258)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0457227230072021
    2. 'prev' → logprob: -1.0457227230072021
    3. 'the' → logprob: -1.4207227230072021
    4. 'current' → logprob: -4.045722961425781
    5. '[' → logprob: -4.670722961425781
    6. 'two' → logprob: -4.670722961425781
    7. 'starting' → logprob: -4.795722961425781
    8. 'adding' → logprob: -5.795722961425781
    9. ' prev' → logprob: -6.045722961425781
    10. 'elements' → logprob: -6.545722961425781

Token 502: ' element' (ID: 3577)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8084168434143066
    2. ' +' → logprob: -1.6834168434143066
    3. 'length' → logprob: -2.3084168434143066
    4. '_length' → logprob: -2.4334168434143066
    5. '               ' → logprob: -2.8084168434143066
    6. '_len' → logprob: -2.8084168434143066
    7. ')' → logprob: -3.4334168434143066
    8. 'len' → logprob: -4.433416843414307
    9. ' length' → logprob: -4.933416843414307
    10. ')
' → logprob: -5.933416843414307

Token 503: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018688879907131195
    2. 'length' → logprob: -4.768688678741455
    3. ' length' → logprob: -5.268688678741455
    4. ',' → logprob: -6.018688678741455
    5. '                
' → logprob: -6.893688678741455
    6. '+' → logprob: -7.518688678741455
    7. ',length' → logprob: -8.768689155578613
    8. ')' → logprob: -8.893689155578613
    9. '                ' → logprob: -8.893689155578613
    10. ' +' → logprob: -9.518689155578613

Token 504: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02829919569194317
    2. 'length' → logprob: -4.278299331665039
    3. ' length' → logprob: -4.278299331665039
    4. 'len' → logprob: -10.153299331665039
    5. '                
' → logprob: -10.653299331665039
    6. 'next' → logprob: -11.278299331665039
    7. 'token' → logprob: -11.403299331665039
    8. 'prev' → logprob: -11.653299331665039
    9. 'new' → logprob: -11.903299331665039
    10. 'current' → logprob: -11.903299331665039

Token 505: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.03426586464047432
    2. 'prev' → logprob: -3.5342657566070557
    3. 'curr' → logprob: -5.909265995025635
    4. 'cur' → logprob: -7.159265995025635
    5. 'current' → logprob: -7.159265995025635
    6. 'len' → logprob: -9.284265518188477
    7. ' length' → logprob: -9.534265518188477
    8. '               ' → logprob: -11.409265518188477
    9. 'l' → logprob: -11.659265518188477
    10. '           ' → logprob: -12.034265518188477

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023357212543488
    2. '=' → logprob: -1.9102336168289185
    3. '               ' → logprob: -13.035233497619629
    4. '                ' → logprob: -13.785233497619629
    5. '           ' → logprob: -13.910233497619629
    6. '                   ' → logprob: -14.035233497619629
    7. '_' → logprob: -14.035233497619629
    8. '_prev' → logprob: -14.160233497619629
    9. '            ' → logprob: -15.035233497619629
    10. ' ' → logprob: -15.160233497619629

Token 507: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007636916358023882
    2. ' dp' → logprob: -4.882637023925781
    3. 'max' → logprob: -11.132637023925781
    4. '               ' → logprob: -11.882637023925781
    5. '                   ' → logprob: -12.257637023925781
    6. ' max' → logprob: -13.507637023925781
    7. '	dp' → logprob: -13.632637023925781
    8. '1' → logprob: -14.382637023925781
    9. '(dp' → logprob: -14.757637023925781
    10. '           ' → logprob: -15.632637023925781

Token 508: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004091458860784769
    2. '.' → logprob: -5.504091262817383
    3. ' .' → logprob: -11.629091262817383
    4. ').' → logprob: -13.629091262817383
    5. '   ' → logprob: -13.879091262817383
    6. '.set' → logprob: -14.504091262817383
    7. '].' → logprob: -15.754091262817383
    8. '```' → logprob: -15.879091262817383
    9. '       ' → logprob: -16.004091262817383
    10. 'get' → logprob: -16.129091262817383

Token 509: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0005753128207288682
    2. 'j' → logprob: -7.500575542449951
    3. '[j' → logprob: -12.000575065612793
    4. '(' → logprob: -12.500575065612793
    5. '(i' → logprob: -12.750575065612793
    6. ' j' → logprob: -12.750575065612793
    7. ' (' → logprob: -13.125575065612793
    8. '(
' → logprob: -13.625575065612793
    9. '(prev' → logprob: -14.375575065612793
    10. ',j' → logprob: -14.625575065612793

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014047559816390276
    2. ',d' → logprob: -7.251404762268066
    3. ' ,' → logprob: -7.501404762268066
    4. 'diff' → logprob: -9.751404762268066
    5. '(diff' → logprob: -9.751404762268066
    6. ')' → logprob: -11.501404762268066
    7. ' diff' → logprob: -12.126404762268066
    8. '[' → logprob: -13.251404762268066
    9. ',
' → logprob: -13.251404762268066
    10. '   ' → logprob: -13.376404762268066

Token 511: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0002613358374219388
    2. ' diff' → logprob: -8.250261306762695
    3. '(diff' → logprob: -17.625261306762695
    4. '	diff' → logprob: -17.875261306762695
    5. '   ' → logprob: -20.000261306762695
    6. '               ' → logprob: -20.125261306762695
    7. 'dif' → logprob: -20.750261306762695
    8. '           ' → logprob: -20.750261306762695
    9. '.diff' → logprob: -21.000261306762695
    10. 'd' → logprob: -21.250261306762695

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.251091377227567e-05
    2. ' )' → logprob: -10.750042915344238
    3. ')+' → logprob: -11.375042915344238
    4. ')
' → logprob: -11.625042915344238
    5. '`)' → logprob: -16.250041961669922
    6. '           ' → logprob: -16.250041961669922
    7. '```' → logprob: -16.375041961669922
    8. '               ' → logprob: -16.500041961669922
    9. '）' → logprob: -17.125041961669922
    10. ']' → logprob: -17.125041961669922

Token 513: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.474099338054657
    2. '+' → logprob: -0.974099338054657
    3. '               ' → logprob: -12.224099159240723
    4. ')' → logprob: -12.724099159240723
    5. '
' → logprob: -12.849099159240723
    6. '           ' → logprob: -12.974099159240723
    7. ')+' → logprob: -12.974099159240723
    8. '+
' → logprob: -12.974099159240723
    9. ' +
' → logprob: -13.474099159240723
    10. ' ' → logprob: -14.349099159240723

Token 514: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. '```' → logprob: -19.375158309936523
    5. '+' → logprob: -19.750158309936523
    6. '    ' → logprob: -19.875158309936523
    7. '  ' → logprob: -20.250158309936523
    8. '۱' → logprob: -20.625158309936523
    9. '       ' → logprob: -21.437658309936523
    10. ' ' → logprob: -21.875158309936523

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.750030517578125
    4. '```' → logprob: -19.000030517578125
    5. '  ' → logprob: -19.875030517578125
    6. '+' → logprob: -20.750030517578125
    7. '۱' → logprob: -21.250030517578125
    8. '    ' → logprob: -21.250030517578125
    9. '       ' → logprob: -21.625030517578125
    10. '           ' → logprob: -21.625030517578125

Token 516: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1490750014781952
    2. '           ' → logprob: -2.7740750312805176
    3. '<|end|>' → logprob: -3.2740750312805176
    4. '
' → logprob: -3.3990750312805176
    5. '                
' → logprob: -7.024075031280518
    6. ')' → logprob: -7.024075031280518
    7. '            
' → logprob: -7.149075031280518
    8. '       ' → logprob: -7.774075031280518
    9. '<|end|>' → logprob: -8.02407455444336
    10. '  
' → logprob: -8.02407455444336

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016683997819200158
    2. '           ' → logprob: -7.251668453216553
    3. '<|end|>' → logprob: -7.626668453216553
    4. '                
' → logprob: -8.126667976379395
    5. '       ' → logprob: -10.376667976379395
    6. ' dp' → logprob: -10.501667976379395
    7. '                   ' → logprob: -10.751667976379395
    8. 'dp' → logprob: -11.126667976379395
    9. '            
' → logprob: -11.376667976379395
    10. '<|end|>' → logprob: -11.501667976379395

Token 518: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.4226796627044678
    2. '               ' → logprob: -1.2976796627044678
    3. ' dp' → logprob: -2.6726796627044678
    4. '           ' → logprob: -6.047679901123047
    5. '       ' → logprob: -10.672679901123047
    6. '	dp' → logprob: -10.922679901123047
    7. ' if' → logprob: -11.047679901123047
    8. '                   ' → logprob: -11.172679901123047
    9. 'if' → logprob: -11.297679901123047
    10. '(dp' → logprob: -11.422679901123047

Token 519: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0009117019944824278
    2. '.' → logprob: -7.000911712646484
    3. '.setdefault' → logprob: -15.875911712646484
    4. ' .' → logprob: -16.500911712646484
    5. ').' → logprob: -17.125911712646484
    6. 'set' → logprob: -17.500911712646484
    7. '​.' → logprob: -18.625911712646484
    8. '```' → logprob: -18.625911712646484
    9. '>.' → logprob: -18.750911712646484
    10. '.s' → logprob: -19.000911712646484

Token 520: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. '(
' → logprob: -16.5
    4. 'i' → logprob: -16.625
    5. '[i' → logprob: -18.625
    6. ',i' → logprob: -19.125
    7. '```' → logprob: -19.875
    8. '<|end|>' → logprob: -20.0
    9. ' i' → logprob: -20.125
    10. ' (' → logprob: -20.25

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001182607957161963
    2. ' ,' → logprob: -7.501182556152344
    3. ',i' → logprob: -7.876182556152344
    4. '(i' → logprob: -8.626182556152344
    5. '<|end|>' → logprob: -10.501182556152344
    6. ')' → logprob: -10.626182556152344
    7. 'i' → logprob: -12.501182556152344
    8. '(' → logprob: -12.751182556152344
    9. ',d' → logprob: -12.876182556152344
    10. ' i' → logprob: -13.001182556152344

Token 522: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -5.848420551046729e-05
    2. ' diff' → logprob: -9.7500581741333
    3. '	diff' → logprob: -16.500059127807617
    4. '(diff' → logprob: -19.250059127807617
    5. '_diff' → logprob: -21.000059127807617
    6. 'd' → logprob: -21.000059127807617
    7. '.diff' → logprob: -21.375059127807617
    8. 'dif' → logprob: -21.750059127807617
    9. '   ' → logprob: -22.625059127807617
    10. '```' → logprob: -22.750059127807617

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009786247974261642
    2. ',length' → logprob: -7.000978469848633
    3. ' ,' → logprob: -9.750978469848633
    4. 'length' → logprob: -12.000978469848633
    5. '(length' → logprob: -13.750978469848633
    6. ' length' → logprob: -14.125978469848633
    7. '[length' → logprob: -14.250978469848633
    8. ',
' → logprob: -15.500978469848633
    9. ')' → logprob: -16.500978469848633
    10. ',len' → logprob: -17.500978469848633

Token 524: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00019030878320336342
    2. ' length' → logprob: -9.000190734863281
    3. 'max' → logprob: -9.625190734863281
    4. ' max' → logprob: -15.000190734863281
    5. '           ' → logprob: -16.37519073486328
    6. 'leng' → logprob: -16.37519073486328
    7. '   ' → logprob: -16.50019073486328
    8. 'len' → logprob: -16.75019073486328
    9. 'l' → logprob: -17.12519073486328
    10. '	length' → logprob: -17.12519073486328

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5916508436203003
    2. '               ' → logprob: -0.8416508436203003
    3. ')
' → logprob: -4.21665096282959
    4. '<|end|>' → logprob: -7.71665096282959
    5. '           ' → logprob: -8.34165096282959
    6. '
' → logprob: -9.71665096282959
    7. '),' → logprob: -11.09165096282959
    8. ',' → logprob: -11.34165096282959
    9. '              ' → logprob: -11.71665096282959
    10. ')\
' → logprob: -11.96665096282959

Token 526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012893013656139374
    2. 'if' → logprob: -4.512893199920654
    3. ' if' → logprob: -6.387893199920654
    4. '           ' → logprob: -9.137892723083496
    5. '                   ' → logprob: -10.512892723083496
    6. '```' → logprob: -11.387892723083496
    7. '                
' → logprob: -12.387892723083496
    8. '              ' → logprob: -12.762892723083496
    9. '                       ' → logprob: -12.887892723083496
    10. 'max' → logprob: -13.012892723083496

Token 527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6988879442214966
    2. 'max' → logprob: -0.6988879442214966
    3. '               ' → logprob: -5.448887825012207
    4. ' if' → logprob: -7.198887825012207
    5. '           ' → logprob: -7.573887825012207
    6. ' max' → logprob: -8.948887825012207
    7. '                   ' → logprob: -10.448887825012207
    8. '                       ' → logprob: -13.573887825012207
    9. '```' → logprob: -14.948887825012207
    10. '       ' → logprob: -15.073887825012207

Token 528: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.018150877207517624
    2. 'length' → logprob: -4.018150806427002
    3. '               ' → logprob: -15.14315128326416
    4. '(length' → logprob: -15.51815128326416
    5. ' max' → logprob: -15.64315128326416
    6. '	length' → logprob: -15.89315128326416
    7. '                ' → logprob: -16.018150329589844
    8. '_length' → logprob: -17.393150329589844
    9. ' lenght' → logprob: -17.393150329589844
    10. '            ' → logprob: -17.393150329589844

Token 529: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12693357467651367
    2. '>' → logprob: -2.1269335746765137
    3. ' ' → logprob: -12.876934051513672
    4. ' ' → logprob: -14.751934051513672
    5. '   ' → logprob: -15.126934051513672
    6. '           ' → logprob: -15.251934051513672
    7. '<|end|>' → logprob: -15.251934051513672
    8. ' >
' → logprob: -15.376934051513672
    9. '.' → logprob: -15.751934051513672
    10. '[' → logprob: -15.876934051513672

Token 530: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889595627784729
    2. ' max' → logprob: -2.5788960456848145
    3. '               ' → logprob: -12.328895568847656
    4. '                   ' → logprob: -13.703895568847656
    5. '           ' → logprob: -15.328895568847656
    6. '(max' → logprob: -15.578895568847656
    7. '	max' → logprob: -16.953895568847656
    8. '=max' → logprob: -17.078895568847656
    9. '_max' → logprob: -17.203895568847656
    10. '
' → logprob: -17.328895568847656

Token 531: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. 'len' → logprob: -15.875
    3. '_LEN' → logprob: -18.25
    4. 'Len' → logprob: -18.625
    5. '_length' → logprob: -19.125
    6. '_l' → logprob: -19.25
    7. '_' → logprob: -19.625
    8. '[len' → logprob: -19.875
    9. 'length' → logprob: -20.0
    10. '_le' → logprob: -20.5

Token 532: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03449277952313423
    2. ':
' → logprob: -3.4094927310943604
    3. '                   ' → logprob: -8.034492492675781
    4. '               ' → logprob: -9.034492492675781
    5. '           ' → logprob: -9.284492492675781
    6. '                       ' → logprob: -9.284492492675781
    7. '<|end|>' → logprob: -9.909492492675781
    8. '                           ' → logprob: -10.034492492675781
    9. '):' → logprob: -10.284492492675781
    10. '):
' → logprob: -10.534492492675781

Token 533: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01361825130879879
    2. '                       ' → logprob: -5.263618469238281
    3. '               ' → logprob: -5.513618469238281
    4. ' max' → logprob: -6.138618469238281
    5. '           ' → logprob: -7.013618469238281
    6. 'max' → logprob: -7.138618469238281
    7. '                    
' → logprob: -9.013618469238281
    8. '                           ' → logprob: -9.138618469238281
    9. '
' → logprob: -10.138618469238281
    10. '(max' → logprob: -10.388618469238281

Token 534: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31338563561439514
    2. 'max' (adapté à ' max') → logprob: -1.3133856058120728
    3. '                   ' → logprob: -9.188385963439941
    4. '                       ' → logprob: -11.063385963439941
    5. '               ' → logprob: -13.188385963439941
    6. '
' → logprob: -13.438385963439941
    7. '[max' → logprob: -13.938385963439941
    8. '           ' → logprob: -14.813385963439941
    9. '	max' → logprob: -15.188385963439941
    10. '(max' → logprob: -15.313385963439941

Token 535: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. 'Len' → logprob: -16.75
    3. '_length' → logprob: -17.0
    4. 'len' → logprob: -17.0
    5. '_LEN' → logprob: -18.125
    6. '_l' → logprob: -19.125
    7. '_' → logprob: -19.625
    8. 'length' → logprob: -20.0
    9. '_lengths' → logprob: -20.625
    10. '[len' → logprob: -21.5

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759629607200623
    2. '=' → logprob: -0.8259629607200623
    3. '=max' → logprob: -11.200963020324707
    4. 'max' → logprob: -12.700963020324707
    5. '=
' → logprob: -12.950963020324707
    6. ' =
' → logprob: -13.075963020324707
    7. '                       ' → logprob: -14.700963020324707
    8. ' ' → logprob: -14.825963020324707
    9. '                   ' → logprob: -14.950963020324707
    10. '_max' → logprob: -15.450963020324707

Token 537: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3868710398674011
    2. ' length' → logprob: -1.136871099472046
    3. '	length' → logprob: -17.261871337890625
    4. '(length' → logprob: -17.636871337890625
    5. 'leng' → logprob: -18.011871337890625
    6. '                   ' → logprob: -18.261871337890625
    7. 'ength' → logprob: -18.511871337890625
    8. '_length' → logprob: -18.636871337890625
    9. ' lenght' → logprob: -18.636871337890625
    10. '[length' → logprob: -19.261871337890625

Token 538: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32280367612838745
    2. '
' → logprob: -1.4478037357330322
    3. '        
' → logprob: -3.4478037357330322
    4. 'return' → logprob: -5.822803497314453
    5. '<|end|>' → logprob: -6.197803497314453
    6. ' return' → logprob: -6.822803497314453
    7. '  
' → logprob: -6.947803497314453
    8. '    
' → logprob: -7.572803497314453
    9. ' 
' → logprob: -7.947803497314453
    10. '\n' → logprob: -8.447803497314453

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037559019401669502
    2. 'return' → logprob: -6.378756046295166
    3. '
' → logprob: -7.503756046295166
    4. '	' → logprob: -7.628756046295166
    5. '        
' → logprob: -7.878756046295166
    6. ' return' → logprob: -8.253755569458008
    7. '	return' → logprob: -9.253755569458008
    8. '<|end|>' → logprob: -9.378755569458008
    9. '```' → logprob: -9.878755569458008
    10. '   ' → logprob: -10.003755569458008

Token 540: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935476660728455
    2. 'return' (adapté à ' return') → logprob: -0.6935476660728455
    3. ' return' → logprob: -8.193547248840332
    4. '   ' → logprob: -9.068547248840332
    5. '	return' → logprob: -11.943547248840332
    6. '
' → logprob: -13.818547248840332
    7. '	' → logprob: -15.068547248840332
    8. '```' → logprob: -15.318547248840332
    9. '           ' → logprob: -15.443547248840332
    10. '      ' → logprob: -16.19354820251465

Token 541: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25192955136299133
    2. ' max' → logprob: -1.501929521560669
    3. '(max' → logprob: -15.50192928314209
    4. '[max' → logprob: -16.626930236816406
    5. '	max' → logprob: -16.626930236816406
    6. '_max' → logprob: -16.626930236816406
    7. ',max' → logprob: -17.251930236816406
    8. '
' → logprob: -17.501930236816406
    9. '       ' → logprob: -17.626930236816406
    10. '=max' → logprob: -17.751930236816406

Token 542: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.5
    3. '_' → logprob: -15.75
    4. '_l' → logprob: -16.875
    5. '_val' → logprob: -17.625
    6. '_length' → logprob: -18.25
    7. '_LEN' → logprob: -18.25
    8. 'Len' → logprob: -18.625
    9. '(_' → logprob: -18.875
    10. ' _' → logprob: -18.875

Token 543: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06198617070913315
    2. '__' → logprob: -2.811986207962036
    3. '_' → logprob: -11.936985969543457
    4. 'name' → logprob: -12.061985969543457
    5. '_name' → logprob: -12.686985969543457
    6. ' ' → logprob: -13.561985969543457
    7. '___' → logprob: -14.561985969543457
    8. 'Name' → logprob: -14.811985969543457
    9. ' ' → logprob: -14.936985969543457
    10. ' name' → logprob: -16.061986923217773

Token 546: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03230266645550728
    2. ' __' → logprob: -3.5323026180267334
    3. 'name' → logprob: -6.0323028564453125
    4. ' ==' → logprob: -9.657302856445312
    5. '__.__' → logprob: -10.657302856445312
    6. '.__' → logprob: -11.782302856445312
    7. '__.' → logprob: -11.907302856445312
    8. ' ' → logprob: -12.032302856445312
    9. '_name' → logprob: -12.157302856445312
    10. '.name' → logprob: -12.407302856445312

Token 547: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. 'name' → logprob: -12.87500286102295
    3. '__.__' → logprob: -15.87500286102295
    4. '____' → logprob: -16.625001907348633
    5. '___' → logprob: -17.625001907348633
    6. '__.' → logprob: -17.625001907348633
    7. '==' → logprob: -18.000001907348633
    8. '__
' → logprob: -18.000001907348633
    9. '__

' → logprob: -18.875001907348633
    10. ' ==' → logprob: -19.125001907348633

Token 548: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2630288302898407
    2. ' ==' → logprob: -1.513028860092163
    3. '==' → logprob: -4.638028621673584
    4. '=="' → logprob: -6.638028621673584
    5. '=='' → logprob: -11.388029098510742
    6. '__.__' → logprob: -11.388029098510742
    7. '"' → logprob: -11.513029098510742
    8. ' ' → logprob: -12.138029098510742
    9. '_' → logprob: -13.388029098510742
    10. 'name' → logprob: -13.513029098510742

Token 549: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02326737530529499
    2. ''' → logprob: -3.7732672691345215
    3. '__' → logprob: -11.27326774597168
    4. ' "__' → logprob: -11.64826774597168
    5. '"class' → logprob: -15.52326774597168
    6. ' '__' → logprob: -15.77326774597168
    7. '"user' → logprob: -16.77326774597168
    8. '"'' → logprob: -17.39826774597168
    9. '"name' → logprob: -17.52326774597168
    10. ''"' → logprob: -18.14826774597168

Token 550: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. 'name' → logprob: -15.125
    3. ' main' → logprob: -18.125
    4. '_main' → logprob: -20.125
    5. '__' → logprob: -21.625
    6. '(main' → logprob: -21.875
    7. '	main' → logprob: -22.75
    8. 'ma' → logprob: -22.875
    9. '-main' → logprob: -23.375
    10. '"' → logprob: -23.625

Token 551: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0019740730058401823
    2. '__' → logprob: -6.251974105834961
    3. '__':
' → logprob: -10.001974105834961
    4. '__:' → logprob: -15.751974105834961
    5. '__["' → logprob: -19.12697410583496
    6. '__",' → logprob: -20.37697410583496
    7. '__.' → logprob: -20.75197410583496
    8. '__("' → logprob: -21.00197410583496
    9. '_' → logprob: -21.25197410583496
    10. '___' → logprob: -21.37697410583496

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017477693036198616
    2. ' input' → logprob: -6.5017476081848145
    3. 'input' → logprob: -9.001748085021973
    4. ' data' → logprob: -9.501748085021973
    5. '    
' → logprob: -11.501748085021973
    6. '	input' → logprob: -11.751748085021973
    7. 'data' → logprob: -11.876748085021973
    8. '   ' → logprob: -12.001748085021973
    9. '```' → logprob: -12.126748085021973
    10. ' parser' → logprob: -13.251748085021973

Token 553: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.09376290440559387
    2. ' input' → logprob: -2.7187628746032715
    3. 'data' → logprob: -3.9687628746032715
    4. ' data' → logprob: -5.5937628746032715
    5. '   ' → logprob: -7.7187628746032715
    6. 'parser' → logprob: -7.9687628746032715
    7. ' parser' → logprob: -9.59376335144043
    8. 'inp' → logprob: -10.46876335144043
    9. 'import' → logprob: -10.84376335144043
    10. ' inp' → logprob: -12.21876335144043

Token 554: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.0014294054126366973
    2. '_' → logprob: -6.626429557800293
    3. '()' → logprob: -9.626429557800293
    4. 'data' → logprob: -11.126429557800293
    5. '_parser' → logprob: -11.751429557800293
    6. '_Data' → logprob: -13.376429557800293
    7. '_line' → logprob: -13.376429557800293
    8. '_input' → logprob: -13.501429557800293
    9. '_=' → logprob: -13.501429557800293
    10. 'Data' → logprob: -13.626429557800293

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931589841842651
    2. ' =' → logprob: -0.6931589841842651
    3. '   ' → logprob: -11.568159103393555
    4. '_' → logprob: -14.068159103393555
    5. '=input' → logprob: -14.193159103393555
    6. ')' → logprob: -15.693159103393555
    7. '  ' → logprob: -16.068159103393555
    8. '    ' → logprob: -16.068159103393555
    9. '.' → logprob: -16.818159103393555
    10. ',' → logprob: -16.818159103393555

Token 556: ' Arithmetic' (ID: 179942)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -0.048587486147880554
    2. ' Arithmetic' → logprob: -3.0485875606536865
    3. ' arithmetic' → logprob: -16.173587799072266
    4. 'Ar' → logprob: -19.298587799072266
    5. 'ar' → logprob: -19.673587799072266
    6. 'arith' → logprob: -20.048587799072266
    7. 'Arduino' → logprob: -23.173587799072266
    8. ' ' → logprob: -23.548587799072266
    9. ' Ar' → logprob: -24.173587799072266
    10. '   ' → logprob: -24.173587799072266

Token 557: 'Progress' (ID: 11356)
  Prédit: 'Progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -3.054500666621607e-06
    2. '_progress' → logprob: -12.87500286102295
    3. 'Arithmetic' → logprob: -15.37500286102295
    4. ' Progress' → logprob: -15.87500286102295
    5. '.Progress' → logprob: -16.750003814697266
    6. 'progress' → logprob: -17.875003814697266
    7. 'Pro' → logprob: -17.875003814697266
    8. 'Prog' → logprob: -18.125003814697266
    9. '_PROGRESS' → logprob: -18.250003814697266
    10. 'Process' → logprob: -18.500003814697266

Token 558: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -1.0683535037969705e-05
    2. 'Progress' → logprob: -11.75001049041748
    3. 'ession' → logprob: -13.37501049041748
    4. 'tion' → logprob: -14.50001049041748
    5. 'ision' → logprob: -15.62501049041748
    6. 'progress' → logprob: -15.75001049041748
    7. 'ition' → logprob: -16.375011444091797
    8. 'otion' → logprob: -16.875011444091797
    9. 'ression' → logprob: -17.000011444091797
    10. 'on' → logprob: -17.125011444091797

Token 559: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -6.704273118884885e-07
    2. 'finder' → logprob: -14.500000953674316
    3. 'Find' → logprob: -16.25
    4. ' Finder' → logprob: -17.0
    5. 'Fetcher' → logprob: -18.25
    6. 'Finding' → logprob: -18.25
    7. ' finder' → logprob: -19.0
    8. 'F' → logprob: -19.0
    9. 'Searcher' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 560: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -0.00018911674851551652
    2. '.' → logprob: -9.000188827514648
    3. 'Input' → logprob: -9.750188827514648
    4. '   ' → logprob: -12.500188827514648
    5. ' .' → logprob: -13.625188827514648
    6. '<Input' → logprob: -14.000188827514648
    7. '.I' → logprob: -14.750188827514648
    8. '.Parser' → logprob: -15.000188827514648
    9. '.INPUT' → logprob: -15.000188827514648
    10. '	Input' → logprob: -15.875188827514648

Token 561: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.25192973017692566
    2. 'Data' → logprob: -1.501929759979248
    3. 'parser' → logprob: -15.12692928314209
    4. 'data' → logprob: -16.001930236816406
    5. 'Parse' → logprob: -16.126930236816406
    6. '(Parser' → logprob: -17.251930236816406
    7. 'Reader' → logprob: -18.001930236816406
    8. 'Processor' → logprob: -18.126930236816406
    9. '.Parser' → logprob: -18.626930236816406
    10. '_parser' → logprob: -18.876930236816406

Token 562: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -9.209963900502771e-05
    2. '.' → logprob: -9.500092506408691
    3. '().' → logprob: -11.125092506408691
    4. ' .' → logprob: -13.250092506408691
    5. 'parse' → logprob: -15.000092506408691
    6. '   ' → logprob: -15.250092506408691
    7. '.decode' → logprob: -17.750091552734375
    8. '.load' → logprob: -17.875091552734375
    9. '       ' → logprob: -18.250091552734375
    10. '  ' → logprob: -18.500091552734375

Token 563: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.919942486798391e-05
    2. '()
' → logprob: -9.750059127807617
    3. '()

' → logprob: -15.000059127807617
    4. '(' → logprob: -15.375059127807617
    5. '()`' → logprob: -16.375059127807617
    6. '())' → logprob: -16.750059127807617
    7. '().' → logprob: -16.750059127807617
    8. ' ()' → logprob: -17.000059127807617
    9. '()
' → logprob: -17.000059127807617
    10. '()]' → logprob: -17.625059127807617

Token 564: '   ' (ID: 271)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.18283143639564514
    2. '   ' → logprob: -2.5578315258026123
    3. 'ap' → logprob: -2.6828315258026123
    4. ' ap' → logprob: -4.307831287384033
    5. ' finder' → logprob: -4.932831287384033
    6. 'f' → logprob: -7.807831287384033
    7. 'af' → logprob: -9.307831764221191
    8. 'solver' → logprob: -10.932831764221191
    9. 'arf' → logprob: -11.557831764221191
    10. '	ap' → logprob: -11.807831764221191

Token 565: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' (adapté à ' finder') → logprob: -0.07901250571012497
    2. 'ap' → logprob: -2.579012393951416
    3. 'solver' → logprob: -9.454012870788574
    4. 'f' → logprob: -11.079012870788574
    5. ' finder' → logprob: -11.829012870788574
    6. 'print' → logprob: -12.329012870788574
    7. ' ap' → logprob: -12.954012870788574
    8. 'find' → logprob: -13.079012870788574
    9. 'result' → logprob: -13.204012870788574
    10. 'app' → logprob: -13.454012870788574

Token 566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313262403011322
    2. '=' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.688261985778809
    4. '.' → logprob: -15.688261985778809
    5. '   ' → logprob: -16.063262939453125
    6. '=find' → logprob: -16.563262939453125
    7. ')' → logprob: -17.188262939453125
    8. '  ' → logprob: -17.313262939453125
    9. '.=' → logprob: -17.438262939453125
    10. '(' → logprob: -17.688262939453125

Token 567: ' Arithmetic' (ID: 179942)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -0.575939953327179
    2. ' Arithmetic' → logprob: -0.825939953327179
    3. ' arithmetic' → logprob: -14.700940132141113
    4. 'Ar' → logprob: -17.200939178466797
    5. '   ' → logprob: -18.950939178466797
    6. ' Ar' → logprob: -20.075939178466797
    7. 'arith' → logprob: -20.075939178466797
    8. ' ' → logprob: -20.075939178466797
    9. ' ' → logprob: -20.200939178466797
    10. '    ' → logprob: -22.325939178466797

Token 568: 'Progress' (ID: 11356)
  Prédit: 'Progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Progress' → logprob: -3.292907877039397e-06
    2. 'Arithmetic' → logprob: -12.75000286102295
    3. 'Pro' → logprob: -15.87500286102295
    4. 'progress' → logprob: -16.500003814697266
    5. ' Progress' → logprob: -16.875003814697266
    6. 'Prog' → logprob: -17.000003814697266
    7. '_progress' → logprob: -17.125003814697266
    8. 'Sequence' → logprob: -18.125003814697266
    9. ' progression' → logprob: -18.375003814697266
    10. '.Progress' → logprob: -18.375003814697266

Token 569: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.004697476513683796
    2. 'Finder' → logprob: -6.379697322845459
    3. 'ation' → logprob: -6.754697322845459
    4. 'tion' → logprob: -6.879697322845459
    5. 'Progress' → logprob: -7.879697322845459
    6. 'er' → logprob: -8.879697799682617
    7. 'ition' → logprob: -9.129697799682617
    8. 'ution' → logprob: -9.879697799682617
    9. 'ision' → logprob: -10.629697799682617
    10. 'otion' → logprob: -10.629697799682617

Token 570: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -7.93448489275761e-05
    2. 'Progress' → logprob: -10.000079154968262
    3. 'finder' → logprob: -10.500079154968262
    4. 'Finding' → logprob: -13.250079154968262
    5. 'Find' → logprob: -13.500079154968262
    6. 'ion' → logprob: -13.875079154968262
    7. ' finder' → logprob: -14.375079154968262
    8. 'er' → logprob: -15.000079154968262
    9. ' Finder' → logprob: -15.000079154968262
    10. 'ation' → logprob: -15.125079154968262

Token 571: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002392540453001857
    2. '(' → logprob: -6.252392768859863
    3. '(f' → logprob: -8.252392768859863
    4. '(find' → logprob: -8.752392768859863
    5. '.find' → logprob: -10.752392768859863
    6. '(
' → logprob: -11.877392768859863
    7. '.' → logprob: -12.252392768859863
    8. ' (' → logprob: -12.627392768859863
    9. '.(' → logprob: -12.627392768859863
    10. '(output' → logprob: -14.002392768859863

Token 572: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -8.268254896393046e-05
    2. 'data' → logprob: -10.500082969665527
    3. '(data' → logprob: -10.750082969665527
    4. ')(' → logprob: -11.250082969665527
    5. ')' → logprob: -11.625082969665527
    6. 'Data' → logprob: -12.250082969665527
    7. '   ' → logprob: -13.375082969665527
    8. ')(
' → logprob: -13.750082969665527
    9. '_' → logprob: -14.000082969665527
    10. ')data' → logprob: -14.125082969665527

Token 573: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04468661546707153
    2. ')
' → logprob: -3.7946865558624268
    3. '.find' → logprob: -4.794686794281006
    4. '   ' → logprob: -4.794686794281006
    5. ').' → logprob: -6.044686794281006
    6. ')find' → logprob: -6.919686794281006
    7. '.' → logprob: -7.044686794281006
    8. '.findall' → logprob: -8.919686317443848
    9. ')
' → logprob: -9.544686317443848
    10. ' ' → logprob: -9.919686317443848

Token 574: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005643534241244197
    2. '   ' → logprob: -7.7505645751953125
    3. 'result' → logprob: -9.000564575195312
    4. ' print' → logprob: -11.625564575195312
    5. 'length' → logprob: -13.750564575195312
    6. '```' → logprob: -15.375564575195312
    7. 'output' → logprob: -18.500564575195312
    8. '
' → logprob: -18.750564575195312
    9. ' result' → logprob: -18.875564575195312
    10. 'res' → logprob: -19.125564575195312

Token 575: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003364158037584275
    2. 'result' → logprob: -8.000336647033691
    3. 'length' → logprob: -14.000336647033691
    4. 'res' → logprob: -17.000335693359375
    5. ' print' → logprob: -17.500335693359375
    6. 'answer' → logprob: -18.500335693359375
    7. '```' → logprob: -18.625335693359375
    8. '   ' → logprob: -19.125335693359375
    9. 'ans' → logprob: -19.750335693359375
    10. '
' → logprob: -19.750335693359375

Token 576: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. '(find' → logprob: -15.625553131103516
    4. '(found' → logprob: -17.500553131103516
    5. '(F' → logprob: -18.375553131103516
    6. 'finder' → logprob: -18.875553131103516
    7. '(
' → logprob: -19.125553131103516
    8. '()' → logprob: -19.875553131103516
    9. ' (' → logprob: -20.125553131103516
    10. '(fid' → logprob: -20.625553131103516

Token 577: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -3.128163257315464e-07
    2. 'ind' → logprob: -15.625
    3. 'finder' → logprob: -17.375
    4. '{' → logprob: -18.625
    5. 'inde' → logprob: -18.875
    6. 'inal' → logprob: -19.375
    7. 'onder' → logprob: -19.5
    8. 'inter' → logprob: -20.0
    9. 'inding' → logprob: -20.0
    10. '(' → logprob: -20.125

Token 578: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0014731991104781628
    2. '.' → logprob: -6.751473426818848
    3. '.findall' → logprob: -8.126473426818848
    4. ').' → logprob: -12.126473426818848
    5. ' .' → logprob: -14.751473426818848
    6. ')find' → logprob: -14.876473426818848
    7. '.)' → logprob: -15.126473426818848
    8. '.
' → logprob: -15.501473426818848
    9. '.Find' → logprob: -15.626473426818848
    10. 'find' → logprob: -15.876473426818848

Token 579: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -2.5776860184123507e-06
    2. ')_' → logprob: -13.12500286102295
    3. '_' → logprob: -15.12500286102295
    4. 'long' → logprob: -16.625001907348633
    5. 'Longest' → logprob: -17.125001907348633
    6. '_last' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. ')' → logprob: -17.625001907348633
    9. ' _' → logprob: -17.750001907348633
    10. '._' → logprob: -18.500001907348633

Token 580: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -7.226628895296017e-06
    2. 'gest' → logprob: -12.375007629394531
    3. 'ests' → logprob: -13.625007629394531
    4. 'test' → logprob: -14.750007629394531
    5. 'st' → logprob: -15.250007629394531
    6. '_est' → logprob: -15.250007629394531
    7. '_ap' → logprob: -15.500007629394531
    8. 'es' → logprob: -15.625007629394531
    9. 'thest' → logprob: -16.37500762939453
    10. 'ест' → logprob: -16.62500762939453

Token 581: '_ap' (ID: 45078)
  Prédit: '_ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ap' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.625
    3. 'ap' → logprob: -16.25
    4. '_ar' → logprob: -16.75
    5. '	ap' → logprob: -18.5
    6. '_ac' → logprob: -19.0
    7. '(ap' → logprob: -19.625
    8. ')_' → logprob: -20.125
    9. '_lp' → logprob: -20.25
    10. '_an' → logprob: -20.375

Token 582: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018153805285692215
    2. '()' → logprob: -4.018153667449951
    3. '())
' → logprob: -13.39315414428711
    4. ')' → logprob: -13.89315414428711
    5. '()
' → logprob: -14.64315414428711
    6. '()))' → logprob: -15.01815414428711
    7. ' ())' → logprob: -15.26815414428711
    8. '()]' → logprob: -15.51815414428711
    9. '();)' → logprob: -16.01815414428711
    10. '()}' → logprob: -16.39315414428711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 580
Tokens correctement prédits (1ère position, stricte): 256
Tokens correctement prédits (1ère position, avec adaptation): 287
Tokens correctement prédits (top 10): 500
Précision stricte (1ère position): 44.14%
Précision adaptée (1ère position): 49.48%
Précision (top 10): 86.21%
================================================================================
