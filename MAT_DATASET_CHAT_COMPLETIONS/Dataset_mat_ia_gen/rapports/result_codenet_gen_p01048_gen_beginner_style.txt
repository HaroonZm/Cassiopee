================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

def count_divisors(x):
    count = 0
    for i in range(1, x+1):
        if x % i == 0:
            count += 1
    return count

num = 1
while True:
    if count_divisors(num) == N:
        print(num)
        break
    num += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4828980565071106
    2. ')' → logprob: -0.9828980565071106
    3. '()' → logprob: -5.107898235321045
    4. '())' → logprob: -6.607898235321045
    5. '(
' → logprob: -7.732898235321045
    6. '```' → logprob: -8.732897758483887
    7. '))' → logprob: -9.107897758483887
    8. '")' → logprob: -9.357897758483887
    9. '')' → logprob: -9.482897758483887
    10. '(

' → logprob: -9.857897758483887

Token 5: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6036834716796875
    2. 'if' → logprob: -1.1036834716796875
    3. 's' → logprob: -2.8536834716796875
    4. 'result' → logprob: -3.9786834716796875
    5. 'total' → logprob: -4.4786834716796875
    6. 'i' → logprob: -4.9786834716796875
    7. 'factor' → logprob: -4.9786834716796875
    8. 'f' → logprob: -5.3536834716796875
    9. 'sum' → logprob: -5.6036834716796875
    10. 'x' → logprob: -5.8536834716796875

Token 6: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06717067956924438
    2. ' factorial' → logprob: -3.0671706199645996
    3. ' f' → logprob: -5.0671706199646
    4. ' space' → logprob: -5.9421706199646
    5. ' factor' → logprob: -6.0671706199646
    6. ' main' → logprob: -6.9421706199646
    7. ' my' → logprob: -7.4421706199646
    8. ' solution' → logprob: -7.4421706199646
    9. ' func' → logprob: -7.4421706199646
    10. ' fibonacci' → logprob: -7.5671706199646

Token 7: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01094571128487587
    2. '(' → logprob: -5.260945796966553
    3. '_words' → logprob: -6.010945796966553
    4. '_tokens' → logprob: -7.635945796966553
    5. '_chars' → logprob: -8.010945320129395
    6. '_occ' → logprob: -8.260945320129395
    7. '_s' → logprob: -8.385945320129395
    8. '_spaces' → logprob: -8.635945320129395
    9. '_items' → logprob: -8.885945320129395
    10. '_v' → logprob: -9.135945320129395

Token 8: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011485722847282887
    2. 'isible' → logprob: -5.261485576629639
    3. '_' → logprob: -5.636485576629639
    4. 'i' → logprob: -7.011485576629639
    5. 'iders' → logprob: -7.261485576629639
    6. 's' → logprob: -7.636485576629639
    7. 'isor' → logprob: -8.886486053466797
    8. '```' → logprob: -9.386486053466797
    9. 'idors' → logprob: -9.761486053466797
    10. '_i' → logprob: -10.386486053466797

Token 9: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0002545448951423168
    2. '```' → logprob: -9.25025463104248
    3. 'or' → logprob: -9.75025463104248
    4. 'o' → logprob: -10.00025463104248
    5. '   ' → logprob: -11.50025463104248
    6. 'on' → logprob: -12.12525463104248
    7. 'ons' → logprob: -12.50025463104248
    8. '0' → logprob: -12.62525463104248
    9. '[' → logprob: -12.75025463104248
    10. '{' → logprob: -12.87525463104248

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00947533268481493
    2. '_' → logprob: -4.759475231170654
    3. '```' → logprob: -8.509475708007812
    4. '("("' → logprob: -8.759475708007812
    5. '(_' → logprob: -8.884475708007812
    6. '('' → logprob: -9.259475708007812
    7. '(n' → logprob: -10.259475708007812
    8. 's' → logprob: -10.384475708007812
    9. ' (' → logprob: -10.509475708007812
    10. ':' → logprob: -10.884475708007812

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026584630832076073
    2. ')' → logprob: -3.6515846252441406
    3. ':' → logprob: -8.40158462524414
    4. '(' → logprob: -11.27658462524414
    5. '):
' → logprob: -11.27658462524414
    6. ' ):' → logprob: -11.65158462524414
    7. ''):' → logprob: -12.52658462524414
    8. '   ' → logprob: -12.65158462524414
    9. '():' → logprob: -12.90158462524414
    10. ')：' → logprob: -13.15158462524414

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48683562874794006
    2. '   ' → logprob: -1.1118355989456177
    3. ':
' → logprob: -3.9868357181549072
    4. '```' → logprob: -3.9868357181549072
    5. ' :' → logprob: -5.111835479736328
    6. ' ' → logprob: -5.236835479736328
    7. '    ' → logprob: -6.736835479736328
    8. '`:' → logprob: -7.236835479736328
    9. '`' → logprob: -7.361835479736328
    10. '``' → logprob: -7.361835479736328

Token 13: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776013731956482
    2. ' count' → logprob: -1.202601432800293
    3. 'count' (adapté à ' count') → logprob: -2.077601432800293
    4. ' c' → logprob: -5.327601432800293
    5. 'c' → logprob: -5.577601432800293
    6. ' cnt' → logprob: -6.702601432800293
    7. ' ' → logprob: -7.077601432800293
    8. '```' → logprob: -7.452601432800293
    9. '    ' → logprob: -7.702601432800293
    10. 'cnt' → logprob: -7.952601432800293

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7623317837715149
    2. '=' → logprob: -1.3873317241668701
    3. '_' → logprob: -2.51233172416687
    4. ' ' → logprob: -2.51233172416687
    5. ')' → logprob: -3.01233172416687
    6. ' =' → logprob: -3.13733172416687
    7. ' +=' → logprob: -4.762331962585449
    8. '  ' → logprob: -4.887331962585449
    9. ' (' → logprob: -5.762331962585449
    10. '[' → logprob: -6.012331962585449

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11288992315530777
    2. '0' → logprob: -2.2378900051116943
    3. '1' → logprob: -9.612890243530273
    4. '   ' → logprob: -15.362890243530273
    5. '2' → logprob: -15.487890243530273
    6. ' ' → logprob: -15.862890243530273
    7. '  ' → logprob: -16.987890243530273
    8. '```' → logprob: -17.175390243530273
    9. ' x' → logprob: -17.675390243530273
    10. '=' → logprob: -17.925390243530273

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0232830997556448
    2. ' ' → logprob: -3.773283004760742
    3. '1' → logprob: -10.273283004760742
    4. '   ' → logprob: -13.273283004760742
    5. '2' → logprob: -14.023283004760742
    6. '  ' → logprob: -15.773283004760742
    7. '```' → logprob: -16.023283004760742
    8. '    ' → logprob: -16.148283004760742
    9. '=' → logprob: -16.273283004760742
    10. ')' → logprob: -17.148283004760742

Token 17: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7322623133659363
    2. '   ' → logprob: -1.107262372970581
    3. ' ' → logprob: -2.732262372970581
    4. 'for' → logprob: -2.732262372970581
    5. '<|end|>' → logprob: -3.982262372970581
    6. '
' → logprob: -4.232262134552002
    7. '    
' → logprob: -5.107262134552002
    8. ')' → logprob: -5.357262134552002
    9. ' 
' → logprob: -5.357262134552002
    10. '```' → logprob: -6.357262134552002

Token 18: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2963295876979828
    2. 'for' → logprob: -1.6713296175003052
    3. '   ' → logprob: -2.9213294982910156
    4. '
' → logprob: -5.421329498291016
    5. ' ' → logprob: -5.546329498291016
    6. '\' → logprob: -6.421329498291016
    7. '\n' → logprob: -6.671329498291016
    8. '    
' → logprob: -6.921329498291016
    9. '<|end|>' → logprob: -7.671329498291016
    10. '```' → logprob: -7.796329498291016

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23310379683971405
    2. 'for' (adapté à ' for') → logprob: -2.1081037521362305
    3. '   ' → logprob: -2.4831037521362305
    4. ' ' → logprob: -6.7331037521362305
    5. '```' → logprob: -7.4831037521362305
    6. ' 
' → logprob: -7.6081037521362305
    7. '    ' → logprob: -8.85810375213623
    8. '    
' → logprob: -8.98310375213623
    9. ' ```' → logprob: -9.48310375213623
    10. '
' → logprob: -9.73310375213623

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01060995738953352
    2. ' ' → logprob: -4.760610103607178
    3. 'i' → logprob: -6.385610103607178
    4. ' range' → logprob: -8.88560962677002
    5. ' _' → logprob: -9.01060962677002
    6. ' in' → logprob: -11.13560962677002
    7. '_' → logprob: -11.51060962677002
    8. ' d' → logprob: -12.26060962677002
    9. '```' → logprob: -12.76060962677002
    10. '	i' → logprob: -13.13560962677002

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021645331289619207
    2. 'in' → logprob: -6.252164363861084
    3. ' ' → logprob: -8.502164840698242
    4. '1' → logprob: -12.127164840698242
    5. '  ' → logprob: -12.252164840698242
    6. 'range' → logprob: -12.627164840698242
    7. ' range' → logprob: -12.752164840698242
    8. '   ' → logprob: -12.752164840698242
    9. '    ' → logprob: -12.877164840698242
    10. ',' → logprob: -13.127164840698242

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0025574727915227413
    2. 'range' → logprob: -6.002557277679443
    3. ' ' → logprob: -9.502557754516602
    4. '	range' → logprob: -12.752557754516602
    5. '(range' → logprob: -13.002557754516602
    6. ' xrange' → logprob: -14.502557754516602
    7. '1' → logprob: -14.627557754516602
    8. ' in' → logprob: -15.002557754516602
    9. ' r' → logprob: -15.752557754516602
    10. ')' → logprob: -16.0025577545166

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.935296834039036e-06
    2. '(x' → logprob: -13.50000286102295
    3. '1' → logprob: -14.25000286102295
    4. ' (' → logprob: -14.37500286102295
    5. '(i' → logprob: -16.125003814697266
    6. ' ' → logprob: -16.250003814697266
    7. '(
' → logprob: -17.125003814697266
    8. '((' → logprob: -17.625003814697266
    9. '(int' → logprob: -17.875003814697266
    10. ')' → logprob: -18.000003814697266

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '(' → logprob: -14.87515926361084
    4. 'x' → logprob: -15.00015926361084
    5. '2' → logprob: -17.000158309936523
    6. ' x' → logprob: -18.750158309936523
    7. '```' → logprob: -19.125158309936523
    8. 'N' → logprob: -19.375158309936523
    9. '   ' → logprob: -19.375158309936523
    10. ')' → logprob: -19.375158309936523

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045746441930532455
    2. ' ,' → logprob: -3.170746326446533
    3. ',x' → logprob: -6.045746326446533
    4. 'x' → logprob: -8.795746803283691
    5. ',int' → logprob: -9.670746803283691
    6. '(x' → logprob: -9.795746803283691
    7. ',i' → logprob: -10.295746803283691
    8. ' x' → logprob: -10.420746803283691
    9. ' ' → logprob: -11.670746803283691
    10. ',N' → logprob: -11.795746803283691

Token 26: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16538923978805542
    2. 'x' → logprob: -1.9153892993927002
    3. ' int' → logprob: -5.415389060974121
    4. 'int' → logprob: -7.290389060974121
    5. ' ' → logprob: -11.415389060974121
    6. ' N' → logprob: -12.290389060974121
    7. ')' → logprob: -13.790389060974121
    8. ' (' → logprob: -13.915389060974121
    9. ' i' → logprob: -13.915389060974121
    10. ' )' → logprob: -14.290389060974121

Token 27: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25216561555862427
    2. ' +' → logprob: -1.5021655559539795
    3. ' ' → logprob: -9.002165794372559
    4. ' //' → logprob: -9.502165794372559
    5. '//' → logprob: -10.752165794372559
    6. '**' → logprob: -12.252165794372559
    7. ' **' → logprob: -12.752165794372559
    8. '```' → logprob: -12.877165794372559
    9. ')' → logprob: -13.377165794372559
    10. ' )' → logprob: -13.502165794372559

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -19.37510871887207
    4. '  ' → logprob: -19.87510871887207
    5. '   ' → logprob: -20.25010871887207
    6. '１' → logprob: -20.25010871887207
    7. '(' → logprob: -20.25010871887207
    8. '১' → logprob: -20.87510871887207
    9. '۱' → logprob: -21.06260871887207
    10. '2' → logprob: -21.25010871887207

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004329341172706336
    2. '   ' → logprob: -8.875432968139648
    3. '):
' → logprob: -9.125432968139648
    4. ')' → logprob: -9.500432968139648
    5. ' ):' → logprob: -10.000432968139648
    6. ':' → logprob: -10.125432968139648
    7. ' if' → logprob: -11.375432968139648
    8. 'if' → logprob: -12.500432968139648
    9. ',' → logprob: -12.750432968139648
    10. '       ' → logprob: -13.250432968139648

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05146550387144089
    2. '    ' → logprob: -3.9264655113220215
    3. '   ' → logprob: -4.4264655113220215
    4. ' ' → logprob: -4.5514655113220215
    5. ' if' → logprob: -5.0514655113220215
    6. ':' → logprob: -7.8014655113220215
    7. 'if' → logprob: -8.551465034484863
    8. '      ' → logprob: -8.801465034484863
    9. '<|end|>' → logprob: -9.051465034484863
    10. '  ' → logprob: -9.176465034484863

Token 31: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22834090888500214
    2. 'if' (adapté à ' if') → logprob: -1.8533408641815186
    3. '   ' → logprob: -3.8533408641815186
    4. '       ' → logprob: -4.103341102600098
    5. '    ' → logprob: -4.978341102600098
    6. '```' → logprob: -7.103341102600098
    7. '        ' → logprob: -7.228341102600098
    8. ' ' → logprob: -7.228341102600098
    9. '           ' → logprob: -8.853341102600098
    10. ' ```' → logprob: -9.103341102600098

Token 32: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.006721995305269957
    2. 'x' → logprob: -5.0067219734191895
    3. ' ' → logprob: -12.381722450256348
    4. ' (' → logprob: -13.256722450256348
    5. '(x' → logprob: -15.381722450256348
    6. '(' → logprob: -15.631722450256348
    7. ' ' → logprob: -16.13172149658203
    8. '```' → logprob: -16.88172149658203
    9. '    ' → logprob: -17.00672149658203
    10. '	x' → logprob: -17.13172149658203

Token 33: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16028189659118652
    2. '%' → logprob: -1.9102818965911865
    3. '%i' → logprob: -9.910282135009766
    4. ' ' → logprob: -11.910282135009766
    5. '%x' → logprob: -14.285282135009766
    6. '%s' → logprob: -15.910282135009766
    7. ' ' → logprob: -15.910282135009766
    8. '%c' → logprob: -16.410282135009766
    9. '%e' → logprob: -16.660282135009766
    10. '%d' → logprob: -16.785282135009766

Token 34: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12694312632083893
    2. ' i' → logprob: -2.1269431114196777
    3. ' ' → logprob: -11.376943588256836
    4. '	i' → logprob: -12.751943588256836
    5. '<|end|>' → logprob: -15.376943588256836
    6. '  ' → logprob: -15.751943588256836
    7. '   ' → logprob: -15.751943588256836
    8. ' ‌' → logprob: -17.251943588256836
    9. '<|end|>' → logprob: -17.376943588256836
    10. '```' → logprob: -17.751943588256836

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008735588751733303
    2. '==' → logprob: -4.758735656738281
    3. ' =' → logprob: -9.883735656738281
    4. ' ' → logprob: -10.258735656738281
    5. '=' → logprob: -10.383735656738281
    6. ' ===' → logprob: -13.383735656738281
    7. ')==' → logprob: -13.883735656738281
    8. '===' → logprob: -14.258735656738281
    9. ')' → logprob: -14.758735656738281
    10. ']==' → logprob: -15.883735656738281

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759395360946655
    2. '0' → logprob: -0.8259395360946655
    3. '<|end|>' → logprob: -15.825939178466797
    4. ' ' → logprob: -17.700939178466797
    5. '```' → logprob: -18.325939178466797
    6. '۰' → logprob: -19.200939178466797
    7. ' 
' → logprob: -19.325939178466797
    8. '  ' → logprob: -19.888439178466797
    9. '<|end|>' → logprob: -19.950939178466797
    10. '   ' → logprob: -20.325939178466797

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -20.750158309936523
    4. '  ' → logprob: -22.125158309936523
    5. '<|end|>' → logprob: -22.375158309936523
    6. '٠' → logprob: -22.750158309936523
    7. '```' → logprob: -22.750158309936523
    8. '   ' → logprob: -23.125158309936523
    9. ' ' → logprob: -23.250158309936523
    10. '०' → logprob: -23.250158309936523

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008439337252639234
    2. '):' → logprob: -7.6258440017700195
    3. ':
' → logprob: -8.00084400177002
    4. ' :' → logprob: -12.00084400177002
    5. ':return' → logprob: -12.50084400177002
    6. '):
' → logprob: -12.62584400177002
    7. '       ' → logprob: -12.75084400177002
    8. '           ' → logprob: -12.87584400177002
    9. ':**' → logprob: -14.25084400177002
    10. '   ' → logprob: -15.12584400177002

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001474748714827001
    2. '       ' → logprob: -7.251474857330322
    3. 'count' → logprob: -8.501474380493164
    4. '               ' → logprob: -9.001474380493164
    5. ' count' → logprob: -9.376474380493164
    6. '            ' → logprob: -9.376474380493164
    7. ' ' → logprob: -10.001474380493164
    8. '          ' → logprob: -10.251474380493164
    9. '1' → logprob: -10.501474380493164
    10. '   ' → logprob: -10.626474380493164

Token 40: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08743710815906525
    2. ' count' → logprob: -2.587437152862549
    3. '               ' → logprob: -4.837437152862549
    4. '           ' → logprob: -7.837437152862549
    5. '            ' → logprob: -9.33743667602539
    6. '	count' → logprob: -11.08743667602539
    7. '1' → logprob: -11.21243667602539
    8. '                ' → logprob: -11.46243667602539
    9. '```' → logprob: -11.46243667602539
    10. '   ' → logprob: -11.58743667602539

Token 41: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6704772710800171
    2. '+=' → logprob: -0.7954772710800171
    3. '+' → logprob: -3.2954773902893066
    4. '=' → logprob: -9.795476913452148
    5. '<|end|>' → logprob: -11.295476913452148
    6. '+='' → logprob: -11.420476913452148
    7. ' ' → logprob: -11.670476913452148
    8. ']+=' → logprob: -11.670476913452148
    9. ' +' → logprob: -11.795476913452148
    10. '```' → logprob: -12.170476913452148

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '```' → logprob: -17.129619598388672
    4. '   ' → logprob: -18.004619598388672
    5. ' ' → logprob: -18.692119598388672
    6. '۱' → logprob: -18.942119598388672
    7. '１' → logprob: -19.192119598388672
    8. '    ' → logprob: -19.629619598388672
    9. '2' → logprob: -19.754619598388672
    10. '<|end|>' → logprob: -20.067119598388672

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.5
    5. '１' → logprob: -20.75
    6. '2' → logprob: -21.0
    7. '  ' → logprob: -21.1875
    8. '۱' → logprob: -21.1875
    9. '१' → logprob: -21.4375
    10. 'i' → logprob: -22.25

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014136354438960552
    2. '
' → logprob: -4.76413631439209
    3. '    
' → logprob: -6.38913631439209
    4. '```' → logprob: -6.88913631439209
    5. '\n' → logprob: -7.38913631439209
    6. '       ' → logprob: -7.88913631439209
    7. '  
' → logprob: -7.88913631439209
    8. ' ' → logprob: -8.26413631439209
    9. 'return' → logprob: -8.38913631439209
    10. '	return' → logprob: -8.63913631439209

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003428528143558651
    2. '       ' → logprob: -9.125343322753906
    3. 'return' → logprob: -9.500343322753906
    4. '```' → logprob: -9.625343322753906
    5. ' return' → logprob: -9.750343322753906
    6. '    
' → logprob: -11.375343322753906
    7. '	return' → logprob: -11.625343322753906
    8. '
' → logprob: -11.750343322753906
    9. '``' → logprob: -13.375343322753906
    10. ' ' → logprob: -13.750343322753906

Token 46: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04490524157881737
    2. 'return' (adapté à ' return') → logprob: -3.419905185699463
    3. ' return' → logprob: -5.294905185699463
    4. '```' → logprob: -6.169905185699463
    5. ':return' → logprob: -7.169905185699463
    6. ' ' → logprob: -7.294905185699463
    7. '       ' → logprob: -7.544905185699463
    8. ')' → logprob: -7.544905185699463
    9. '<|end|>' → logprob: -7.669905185699463
    10. 'r' → logprob: -8.669905662536621

Token 47: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022910177707672
    2. ' count' → logprob: -1.9102290868759155
    3. 'x' → logprob: -13.285228729248047
    4. '[count' → logprob: -13.910228729248047
    5. ' x' → logprob: -14.285228729248047
    6. '(count' → logprob: -14.660228729248047
    7. '	count' → logprob: -14.910228729248047
    8. '<count' → logprob: -15.160228729248047
    9. 'c' → logprob: -15.285228729248047
    10. ' ' → logprob: -15.410228729248047

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40852367877960205
    2. 'n' → logprob: -1.908523678779602
    3. 'result' → logprob: -3.0335235595703125
    4. '```' → logprob: -3.1585235595703125
    5. 'd' → logprob: -3.4085235595703125
    6. '

' → logprob: -4.2835235595703125
    7. 'for' → logprob: -4.2835235595703125
    8. '<|end|>' → logprob: -4.7835235595703125
    9. '\n' → logprob: -5.6585235595703125
    10. '#' → logprob: -5.7835235595703125

Token 49: 'num' (ID: 4571)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6726289391517639
    2. 'for' → logprob: -0.9226289391517639
    3. 'answer' → logprob: -3.422628879547119
    4. 'div' → logprob: -3.797628879547119
    5. 'max' → logprob: -4.797628879547119
    6. 'print' → logprob: -5.172628879547119
    7. 'ans' → logprob: -5.172628879547119
    8. 'total' → logprob: -5.172628879547119
    9. 'count' → logprob: -5.422628879547119
    10. 'if' → logprob: -6.172628879547119

Token 50: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35749784111976624
    2. '_' → logprob: -1.2324978113174438
    3. '(' → logprob: -5.982497692108154
    4. ' =' → logprob: -6.107497692108154
    5. '_s' → logprob: -6.232497692108154
    6. ')' → logprob: -7.357497692108154
    7. 'ber' → logprob: -7.607497692108154
    8. '=' → logprob: -7.857497692108154
    9. ' ' → logprob: -9.232498168945312
    10. '()' → logprob: -9.357498168945312

Token 51: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5934035181999207
    2. 'N' → logprob: -0.8434035181999207
    3. '1' → logprob: -4.843403339385986
    4. ' ' → logprob: -5.468403339385986
    5. ' int' → logprob: -6.218403339385986
    6. '0' → logprob: -6.468403339385986
    7. 'int' → logprob: -6.593403339385986
    8. ' max' → logprob: -8.593403816223145
    9. 'max' → logprob: -9.718403816223145
    10. '2' → logprob: -11.843403816223145

Token 52: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02857276052236557
    2. '1' → logprob: -3.7785727977752686
    3. 'int' → logprob: -5.4035725593566895
    4. '0' → logprob: -7.6535725593566895
    5. 'max' → logprob: -9.278573036193848
    6. 'i' → logprob: -9.778573036193848
    7. 'sum' → logprob: -10.028573036193848
    8. 'num' → logprob: -10.528573036193848
    9. ' N' → logprob: -10.528573036193848
    10. 'input' → logprob: -10.653573036193848

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03985626995563507
    2. ' while' → logprob: -4.039856433868408
    3. '
' → logprob: -4.414856433868408
    4. 'count' → logprob: -5.164856433868408
    5. 'for' → logprob: -6.164856433868408
    6. '<|end|>' → logprob: -7.664856433868408
    7. '```' → logprob: -8.66485595703125
    8. 'max' → logprob: -8.66485595703125
    9. 'total' → logprob: -9.16485595703125
    10. ' 
' → logprob: -9.41485595703125

Token 55: ' True' (ID: 6432)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.01112091913819313
    2. 'num' → logprob: -4.511120796203613
    3. ' ' → logprob: -9.886120796203613
    4. ' True' → logprob: -11.761120796203613
    5. '<num' → logprob: -12.511120796203613
    6. '(num' → logprob: -12.886120796203613
    7. ' ' → logprob: -13.011120796203613
    8. ' count' → logprob: -13.136120796203613
    9. '	num' → logprob: -13.386120796203613
    10. 'True' → logprob: -14.261120796203613

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012725738633889705
    2. ' :' → logprob: -10.250126838684082
    3. ':
' → logprob: -10.375126838684082
    4. '):' → logprob: -10.500126838684082
    5. '<|end|>' → logprob: -11.250126838684082
    6. '   ' → logprob: -11.750126838684082
    7. ':**' → logprob: -12.250126838684082
    8. '():' → logprob: -12.750126838684082
    9. ',' → logprob: -14.500126838684082
    10. '<|end|>' → logprob: -14.500126838684082

Token 57: '   ' (ID: 271)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5486131310462952
    2. '   ' → logprob: -1.5486130714416504
    3. ' if' → logprob: -1.7986130714416504
    4. 'num' → logprob: -4.29861307144165
    5. '    ' → logprob: -4.42361307144165
    6. ' ' → logprob: -4.67361307144165
    7. ' 
' → logprob: -5.42361307144165
    8. '    
' → logprob: -6.04861307144165
    9. '     
' → logprob: -7.29861307144165
    10. '```' → logprob: -8.048613548278809

Token 58: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.23057913780212402
    2. ' count' → logprob: -1.605579137802124
    3. '   ' → logprob: -6.105579376220703
    4. ' if' → logprob: -6.230579376220703
    5. 'if' (adapté à ' if') → logprob: -7.480579376220703
    6. 'num' → logprob: -8.605579376220703
    7. ' num' → logprob: -9.855579376220703
    8. '    ' → logprob: -10.355579376220703
    9. '```' → logprob: -10.730579376220703
    10. '    
' → logprob: -10.980579376220703

Token 59: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.023310698568820953
    2. 'count' → logprob: -3.773310661315918
    3. ' num' → logprob: -9.898310661315918
    4. 'num' → logprob: -12.273310661315918
    5. ' ' → logprob: -12.898310661315918
    6. '(count' → logprob: -13.023310661315918
    7. '   ' → logprob: -13.148310661315918
    8. '    ' → logprob: -14.148310661315918
    9. '	count' → logprob: -14.398310661315918
    10. '[count' → logprob: -14.523310661315918

Token 60: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.00010592726175673306
    2. '_' → logprob: -9.500105857849121
    3. '(num' → logprob: -12.000105857849121
    4. '(div' → logprob: -12.125105857849121
    5. '(_' → logprob: -12.500105857849121
    6. 'div' → logprob: -12.625105857849121
    7. '_DIV' → logprob: -12.875105857849121
    8. '(' → logprob: -13.000105857849121
    9. '<div' → logprob: -13.125105857849121
    10. '_num' → logprob: -13.750105857849121

Token 61: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0005643534241244197
    2. '_' → logprob: -8.250564575195312
    3. 's' → logprob: -8.500564575195312
    4. '_div' → logprob: -10.750564575195312
    5. 'isible' → logprob: -11.000564575195312
    6. '_is' → logprob: -11.375564575195312
    7. '_s' → logprob: -11.500564575195312
    8. '_count' → logprob: -12.250564575195312
    9. 'isor' → logprob: -12.625564575195312
    10. '_num' → logprob: -12.875564575195312

Token 62: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0003926615754608065
    2. 's' → logprob: -8.12539291381836
    3. 'tors' → logprob: -10.00039291381836
    4. 'orsi' → logprob: -11.25039291381836
    5. 'or' → logprob: -12.37539291381836
    6. 'rors' → logprob: -12.50039291381836
    7. '_' → logprob: -12.75039291381836
    8. 'is' → logprob: -12.87539291381836
    9. 'o' → logprob: -12.87539291381836
    10. '{' → logprob: -13.12539291381836

Token 63: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.00000286102295
    4. '(nums' → logprob: -16.750003814697266
    5. '<num' → logprob: -17.875003814697266
    6. '(n' → logprob: -18.000003814697266
    7. 'num' → logprob: -18.000003814697266
    8. ' num' → logprob: -18.375003814697266
    9. ',num' → logprob: -18.625003814697266
    10. '(NUM' → logprob: -18.875003814697266

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015756867360323668
    2. ' )' → logprob: -7.126575469970703
    3. '()' → logprob: -7.501575469970703
    4. ')==' → logprob: -9.126575469970703
    5. '())' → logprob: -9.501575469970703
    6. '==' → logprob: -12.126575469970703
    7. ' ==' → logprob: -12.251575469970703
    8. ')>' → logprob: -12.376575469970703
    9. ')>=' → logprob: -12.376575469970703
    10. ' ' → logprob: -12.626575469970703

Token 65: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4009398818016052
    2. ' >=' → logprob: -2.02593994140625
    3. '==' → logprob: -2.77593994140625
    4. ' %' → logprob: -2.90093994140625
    5. ' >' → logprob: -3.15093994140625
    6. '%' → logprob: -4.40093994140625
    7. '>' → logprob: -4.40093994140625
    8. ' ' → logprob: -5.02593994140625
    9. '>=' → logprob: -5.15093994140625
    10. '()' → logprob: -7.65093994140625

Token 66: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002507643774151802
    2. ' N' → logprob: -6.12750768661499
    3. '   ' → logprob: -8.252507209777832
    4. ' ' → logprob: -11.002507209777832
    5. '2' → logprob: -11.502507209777832
    6. 'n' → logprob: -11.877507209777832
    7. '  ' → logprob: -12.377507209777832
    8. '3' → logprob: -12.502507209777832
    9. '10' → logprob: -12.752507209777832
    10. '4' → logprob: -12.877507209777832

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8193366486229934e-05
    2. ':
' → logprob: -11.125018119812012
    3. '):' → logprob: -13.125018119812012
    4. ' :' → logprob: -14.625018119812012
    5. ':return' → logprob: -14.875018119812012
    6. ':**' → logprob: -15.375018119812012
    7. '   ' → logprob: -16.250019073486328
    8. ' and' → logprob: -16.875019073486328
    9. '>:' → logprob: -17.500019073486328
    10. '():' → logprob: -17.625019073486328

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031043924391269684
    2. '   ' → logprob: -6.253104209899902
    3. '\n' → logprob: -7.503104209899902
    4. '    ' → logprob: -8.878104209899902
    5. '        
' → logprob: -9.003104209899902
    6. '    
' → logprob: -9.628104209899902
    7. ' ' → logprob: -9.878104209899902
    8. ' 
' → logprob: -10.003104209899902
    9. '<|end|>' → logprob: -10.003104209899902
    10. '\' → logprob: -10.128104209899902

Token 69: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5729985237121582
    2. ' print' → logprob: -1.5729985237121582
    3. 'print' (adapté à ' print') → logprob: -2.197998523712158
    4. ' break' → logprob: -2.697998523712158
    5. '   ' → logprob: -3.072998523712158
    6. 'break' → logprob: -5.572998523712158
    7. '```' → logprob: -9.822998046875
    8. ' ' → logprob: -9.947998046875
    9. '	break' → logprob: -10.072998046875
    10. ' ' → logprob: -10.322998046875

Token 70: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.014164687134325504
    2. '(' → logprob: -4.264164924621582
    3. 'num' → logprob: -14.139164924621582
    4. '(
' → logprob: -16.389163970947266
    5. '(nums' → logprob: -16.389163970947266
    6. ' (' → logprob: -16.639163970947266
    7. '(n' → logprob: -16.889163970947266
    8. '('' → logprob: -17.889163970947266
    9. '(

' → logprob: -17.889163970947266
    10. '(number' → logprob: -17.889163970947266

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014198172837495804
    2. ')
' → logprob: -4.264198303222656
    3. ')
' → logprob: -10.389198303222656
    4. '   ' → logprob: -13.264198303222656
    5. ' )' → logprob: -13.889198303222656
    6. ' )
' → logprob: -15.764198303222656
    7. ')

' → logprob: -16.014198303222656
    8. ':' → logprob: -16.014198303222656
    9. ')return' → logprob: -16.139198303222656
    10. '*' → logprob: -16.264198303222656

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012630540877580643
    2. '   ' → logprob: -4.387630462646484
    3. '        
' → logprob: -10.387630462646484
    4. '    
' → logprob: -11.262630462646484
    5. '           ' → logprob: -11.637630462646484
    6. '     ' → logprob: -11.637630462646484
    7. '```' → logprob: -11.637630462646484
    8. '
' → logprob: -12.012630462646484
    9. '<|end|>' → logprob: -12.012630462646484
    10. ')' → logprob: -12.012630462646484

Token 73: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0016962457448244095
    2. ' break' → logprob: -6.5016961097717285
    3. '   ' → logprob: -8.876696586608887
    4. '	break' → logprob: -10.376696586608887
    5. '       ' → logprob: -10.751696586608887
    6. '```' → logprob: -13.751696586608887
    7. 'b' → logprob: -14.876696586608887
    8. '_break' → logprob: -15.751696586608887
    9. 'br' → logprob: -16.25169563293457
    10. 'breaking' → logprob: -17.12669563293457

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001514557225164026
    2. '    
' → logprob: -9.000151634216309
    3. '```' → logprob: -11.125151634216309
    4. 'num' → logprob: -12.625151634216309
    5. '<|end|>' → logprob: -12.750151634216309
    6. '+' → logprob: -13.250151634216309
    7. '  ' → logprob: -14.250151634216309
    8. '1' → logprob: -14.500151634216309
    9. '
' → logprob: -14.750151634216309
    10. '   
' → logprob: -14.750151634216309

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048143533058464527
    2. 'num' → logprob: -8.000481605529785
    3. '```' → logprob: -9.375481605529785
    4. '+' → logprob: -10.500481605529785
    5. '    
' → logprob: -11.500481605529785
    6. '[num' → logprob: -12.000481605529785
    7. ' num' → logprob: -12.125481605529785
    8. '`' → logprob: -13.500481605529785
    9. '	num' → logprob: -13.500481605529785
    10. '  ' → logprob: -13.750481605529785

Token 76: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023340750485658646
    2. 'num' (adapté à ' num') → logprob: -3.7733407020568848
    3. ' num' → logprob: -9.523341178894043
    4. '```' → logprob: -11.648341178894043
    5. '    
' → logprob: -11.773341178894043
    6. '	num' → logprob: -13.273341178894043
    7. '
' → logprob: -13.773341178894043
    8. '[num' → logprob: -14.273341178894043
    9. 'else' → logprob: -14.898341178894043
    10. '1' → logprob: -14.898341178894043

Token 77: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0395154170691967
    2. '+=' → logprob: -3.289515495300293
    3. ' +=' → logprob: -6.539515495300293
    4. '++' → logprob: -10.914515495300293
    5. ' +' → logprob: -12.664515495300293
    6. '```' → logprob: -13.289515495300293
    7. '<|end|>' → logprob: -13.539515495300293
    8. '+++' → logprob: -14.414515495300293
    9. '+="' → logprob: -14.414515495300293
    10. '+='' → logprob: -14.414515495300293

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '2' → logprob: -20.125001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '１' → logprob: -21.125001907348633
    8. '<|end|>' → logprob: -21.375001907348633
    9. '+' → logprob: -21.875001907348633
    10. '१' → logprob: -22.750001907348633

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -16.937503814697266
    4. '<|end|>' → logprob: -17.687503814697266
    5. '```' → logprob: -17.812503814697266
    6. '  ' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.000003814697266
    8. '!' → logprob: -18.562503814697266
    9. '+' → logprob: -18.625003814697266
    10. '१' → logprob: -18.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 49.35%
Précision adaptée (1ère position): 51.95%
Précision (top 10): 89.61%
================================================================================
