================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline
    while True:
        n,a,s,g = map(int,input().split())
        if n==0 and a==0 and s==0 and g==0:
            break
        graph = [[] for _ in range(n)]
        for _ in range(a):
            x,y,lab = input().split()
            x=int(x)
            y=int(y)
            graph[x].append((lab,y))
        # Sort edges to visit lex smaller labels first for deterministic order
        for edges in graph:
            edges.sort(key=lambda e:e[0])
        dp = [None]*n
        visiting = [False]*n

        def dfs(u):
            if dp[u] is not None:
                return dp[u]
            if visiting[u]:
                # Detect cycle on path -> infinite possibility -> no smallest
                dp[u] = None
                return None
            visiting[u]=True
            if u == g:
                dp[u] = ""
                visiting[u]=False
                return dp[u]
            candidates = []
            for lab,v in graph[u]:
                suffix = dfs(v)
                if suffix is not None:
                    candidates.append(lab+suffix)
            visiting[u]=False
            if not candidates:
                dp[u] = None
            else:
                dp[u] = min(candidates)
            return dp[u]

        ans = dfs(s)
        if ans is None:
            print("NO")
        else:
            # Check for infinite improvement by cycles:
            # if there exists a cycle on reachable path from s to g,
            # which can prepend 'a' to any spell to get lex smaller,
            # then answer is NO.
            # Actually above dp with cycle detection returns None for cycles,
            # so no infinite better spell possible.
            print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007818726007826626
    2. 'ursive' → logprob: -7.375782012939453
    3. 'urs' → logprob: -10.125782012939453
    4. 'ursor' → logprob: -10.875782012939453
    5. 'ision' → logprob: -11.250782012939453
    6. 'alc' → logprob: -11.625782012939453
    7. 'set' → logprob: -11.625782012939453
    8. '_limit' → logprob: -11.750782012939453
    9. 'ursively' → logprob: -11.875782012939453
    10. 't' → logprob: -12.125782012939453

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.015033785253763199
    2. '_limit' → logprob: -4.390033721923828
    3. 'depth' → logprob: -6.515033721923828
    4. '_depth' → logprob: -7.515033721923828
    5. '(' → logprob: -8.390033721923828
    6. ' limit' → logprob: -9.265033721923828
    7. 'error' → logprob: -10.390033721923828
    8. '(limit' → logprob: -10.640033721923828
    9. 'lim' → logprob: -11.140033721923828
    10. '('' → logprob: -11.390033721923828

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.282920129597187e-05
    2. '(.' → logprob: -12.750012397766113
    3. '(
' → logprob: -12.875012397766113
    4. ' (' → logprob: -12.875012397766113
    5. '(

' → logprob: -13.625012397766113
    6. '((' → logprob: -13.750012397766113
    7. '("("' → logprob: -13.875012397766113
    8. '```' → logprob: -14.625012397766113
    9. '('' → logprob: -15.250012397766113
    10. '(`' → logprob: -15.500012397766113

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005622061900794506
    2. '00' → logprob: -6.005621910095215
    3. '000' → logprob: -6.005621910095215
    4. '4' → logprob: -7.505621910095215
    5. '6' → logprob: -9.255621910095215
    6. '5' → logprob: -11.755621910095215
    7. '```' → logprob: -12.255621910095215
    8. ')' → logprob: -12.505621910095215
    9. '3' → logprob: -12.630621910095215
    10. '**' → logprob: -12.630621910095215

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004525180906057358
    2. '9' → logprob: -6.004525184631348
    3. '8' → logprob: -6.504525184631348
    4. '6' → logprob: -7.504525184631348
    5. ' ' → logprob: -16.25452423095703
    6. '```' → logprob: -17.25452423095703
    7. ')' → logprob: -17.62952423095703
    8. '(' → logprob: -19.75452423095703
    9. '``' → logprob: -20.00452423095703
    10. '}' → logprob: -20.00452423095703

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. '))' → logprob: -12.500006675720215
    3. ' )' → logprob: -12.875006675720215
    4. ')
' → logprob: -15.250006675720215
    5. ')))' → logprob: -17.62500762939453
    6. ')`' → logprob: -17.87500762939453
    7. '```' → logprob: -18.00000762939453
    8. ')
' → logprob: -18.25000762939453
    9. ' ' → logprob: -18.25000762939453
    10. '),' → logprob: -18.62500762939453

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005483233369886875
    2. '\' → logprob: -6.380483150482178
    3. ')' → logprob: -6.505483150482178
    4. '```' → logprob: -7.130483150482178
    5. 'n' → logprob: -8.255483627319336
    6. '\n' → logprob: -8.880483627319336
    7. 'import' → logprob: -8.880483627319336
    8. '`' → logprob: -9.005483627319336
    9. ',' → logprob: -9.005483627319336
    10. 'a' → logprob: -9.130483627319336

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16084302961826324
    2. ' factorial' → logprob: -2.1608431339263916
    3. ' dfs' → logprob: -3.7858431339263916
    4. ' fibonacci' → logprob: -5.6608428955078125
    5. ' space' → logprob: -6.6608428955078125
    6. ' factor' → logprob: -6.7858428955078125
    7. ' recursive' → logprob: -7.5358428955078125
    8. ' fib' → logprob: -7.6608428955078125
    9. ' main' → logprob: -7.7858428955078125
    10. '_' → logprob: -7.9108428955078125

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004128030501306057
    2. '():' → logprob: -5.8791279792785645
    3. '(:' → logprob: -7.0041279792785645
    4. '_' → logprob: -9.379128456115723
    5. ':' → logprob: -9.629128456115723
    6. '):' → logprob: -10.004128456115723
    7. '(**' → logprob: -10.129128456115723
    8. '("("' → logprob: -10.379128456115723
    9. '(":' → logprob: -10.629128456115723
    10. ' (' → logprob: -11.129128456115723

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031042320653796196
    2. '    ' → logprob: -4.281042098999023
    3. ' ' → logprob: -5.406042098999023
    4. 'n' → logprob: -5.781042098999023
    5. '\n' → logprob: -5.906042098999023
    6. '    
' → logprob: -6.156042098999023
    7. '\' → logprob: -6.656042098999023
    8. '(n' → logprob: -7.531042098999023
    9. ' 
' → logprob: -8.031042098999023
    10. 'a' → logprob: -8.281042098999023

Token 17: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8246524333953857
    2. ' n' → logprob: -1.1996524333953857
    3. 'n' → logprob: -1.5746524333953857
    4. '    ' → logprob: -4.949652671813965
    5. 'print' → logprob: -5.324652671813965
    6. ' print' → logprob: -5.449652671813965
    7. 'i' → logprob: -5.574652671813965
    8. ' while' → logprob: -5.574652671813965
    9. 'a' → logprob: -5.574652671813965
    10. ' i' → logprob: -6.074652671813965

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28038790822029114
    2. '_data' → logprob: -1.6553878784179688
    3. '_str' → logprob: -3.4053878784179688
    4. '_line' → logprob: -5.030387878417969
    5. '().' → logprob: -5.530387878417969
    6. '_string' → logprob: -6.155387878417969
    7. '_' → logprob: -6.405387878417969
    8. '(' → logprob: -6.405387878417969
    9. '_text' → logprob: -6.655387878417969
    10. 'data' → logprob: -6.780387878417969

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2565239667892456
    2. 'sys' → logprob: -1.8815239667892456
    3. 'input' → logprob: -3.006524085998535
    4. ' input' → logprob: -3.756524085998535
    5. ' lambda' → logprob: -7.881524085998535
    6. 'lambda' → logprob: -8.006524085998535
    7. ' ' → logprob: -8.381524085998535
    8. 'raw' → logprob: -10.006524085998535
    9. ' raw' → logprob: -10.256524085998535
    10. '	sys' → logprob: -11.256524085998535

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00029923528200015426
    2. '.stdout' → logprob: -9.125299453735352
    3. '.' → logprob: -9.500299453735352
    4. ' .' → logprob: -9.750299453735352
    5. '.readline' → logprob: -10.375299453735352
    6. '.std' → logprob: -11.125299453735352
    7. '.argv' → logprob: -11.875299453735352
    8. '.input' → logprob: -14.375299453735352
    9. 'stdin' → logprob: -14.375299453735352
    10. '.stderr' → logprob: -14.500299453735352

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004113900475203991
    2. '.read' → logprob: -5.504113674163818
    3. '.' → logprob: -10.504114151000977
    4. '.buffer' → logprob: -12.004114151000977
    5. '.readlines' → logprob: -13.379114151000977
    6. 'read' → logprob: -15.754114151000977
    7. '.Read' → logprob: -17.254114151000977
    8. ' readline' → logprob: -17.754114151000977
    9. ' .' → logprob: -18.129114151000977
    10. '.re' → logprob: -18.504114151000977

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008162037469446659
    2. '()
' → logprob: -4.883162021636963
    3. '(' → logprob: -8.633162498474121
    4. '()\' → logprob: -8.758162498474121
    5. '
' → logprob: -9.633162498474121
    6. '().' → logprob: -10.258162498474121
    7. '   ' → logprob: -10.258162498474121
    8. '(
' → logprob: -10.758162498474121
    9. '()

' → logprob: -10.883162498474121
    10. ')' → logprob: -11.633162498474121

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10782087594270706
    2. '    
' → logprob: -2.982820987701416
    3. '()' → logprob: -3.232820987701416
    4. '(' → logprob: -4.857820987701416
    5. '()
' → logprob: -7.107820987701416
    6. ')' → logprob: -7.357820987701416
    7. '
' → logprob: -7.357820987701416
    8. 'def' → logprob: -8.107820510864258
    9. '(n' → logprob: -8.232820510864258
    10. '(
' → logprob: -8.482820510864258

Token 24: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2700045704841614
    2. '   ' → logprob: -1.5200045108795166
    3. '(n' → logprob: -5.020004749298096
    4. '()' → logprob: -6.145004749298096
    5. 's' → logprob: -6.270004749298096
    6. 'N' → logprob: -6.895004749298096
    7. 'count' → logprob: -6.895004749298096
    8. 'data' → logprob: -7.020004749298096
    9. 'line' → logprob: -7.020004749298096
    10. ' n' → logprob: -7.020004749298096

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0010619866661727428
    2. 'True' → logprob: -6.876061916351318
    3. '(True' → logprob: -10.751062393188477
    4. ' ' → logprob: -12.001062393188477
    5. '    ' → logprob: -14.126062393188477
    6. ' not' → logprob: -14.751062393188477
    7. '  ' → logprob: -15.626062393188477
    8. ' Tru' → logprob: -15.876062393188477
    9. ' true' → logprob: -16.626062393188477
    10. '   ' → logprob: -16.751062393188477

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005428581032902002
    2. '():' → logprob: -5.255428791046143
    3. ':
' → logprob: -9.755428314208984
    4. '):' → logprob: -10.380428314208984
    5. ' :' → logprob: -10.630428314208984
    6. '       ' → logprob: -10.755428314208984
    7. ':**' → logprob: -10.755428314208984
    8. '   ' → logprob: -11.255428314208984
    9. ',' → logprob: -11.755428314208984
    10. '():
' → logprob: -12.130428314208984

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006597425322979689
    2. '    ' → logprob: -5.631597518920898
    3. '        
' → logprob: -6.506597518920898
    4. '   ' → logprob: -7.256597518920898
    5. ' ' → logprob: -7.756597518920898
    6. '      ' → logprob: -9.756597518920898
    7. '    
' → logprob: -9.881597518920898
    8. '     ' → logprob: -10.131597518920898
    9. '```' → logprob: -10.756597518920898
    10. '        ' → logprob: -10.881597518920898

Token 28: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20431023836135864
    2. 'line' → logprob: -2.079310178756714
    3. 'data' → logprob: -4.079310417175293
    4. '   ' → logprob: -4.079310417175293
    5. ' data' → logprob: -4.454310417175293
    6. 's' → logprob: -5.329310417175293
    7. ' s' → logprob: -6.079310417175293
    8. '       ' → logprob: -6.079310417175293
    9. ' try' → logprob: -6.829310417175293
    10. 'n' (adapté à ' n') → logprob: -6.829310417175293

Token 29: ',a' (ID: 26776)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0029578504618257284
    2. '=' → logprob: -5.877957820892334
    3. ' ==' → logprob: -9.877958297729492
    4. ' >' → logprob: -9.877958297729492
    5. ' ' → logprob: -10.127958297729492
    6. ' :=' → logprob: -12.502958297729492
    7. '>' → logprob: -13.627958297729492
    8. ' =)' → logprob: -13.752958297729492
    9. '=int' → logprob: -13.752958297729492
    10. ' <' → logprob: -13.877958297729492

Token 30: ',s' (ID: 20379)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3124946653842926
    2. ' =' → logprob: -1.8124946355819702
    3. '=' → logprob: -2.5624947547912598
    4. ',' → logprob: -3.8124947547912598
    5. 'b' → logprob: -6.31249475479126
    6. ',p' → logprob: -7.68749475479126
    7. ',r' → logprob: -7.68749475479126
    8. ' ' → logprob: -8.062494277954102
    9. ',l' → logprob: -8.062494277954102
    10. ',d' → logprob: -8.187494277954102

Token 31: ',g' (ID: 44461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14521196484565735
    2. '=' → logprob: -2.020211935043335
    3. '=input' → logprob: -6.520212173461914
    4. ',' → logprob: -7.645212173461914
    5. '=line' → logprob: -8.395212173461914
    6. '=sys' → logprob: -9.270212173461914
    7. ' ' → logprob: -10.145212173461914
    8. ',b' → logprob: -10.395212173461914
    9. ',p' → logprob: -10.645212173461914
    10. ',input' → logprob: -11.145212173461914

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2531958818435669
    2. ' =' → logprob: -1.503195881843567
    3. ',' → logprob: -6.878195762634277
    4. ' ' → logprob: -9.503195762634277
    5. '=input' → logprob: -9.878195762634277
    6. '=line' → logprob: -11.628195762634277
    7. ',a' → logprob: -12.190695762634277
    8. '=sys' → logprob: -12.253195762634277
    9. ',i' → logprob: -12.253195762634277
    10. '=int' → logprob: -12.378195762634277

Token 33: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20893476903438568
    2. 'map' → logprob: -1.9589347839355469
    3. ' input' → logprob: -3.333934783935547
    4. 'input' → logprob: -4.583934783935547
    5. ' list' → logprob: -6.833934783935547
    6. 'list' → logprob: -8.333934783935547
    7. ' sys' → logprob: -9.083934783935547
    8. ' ' → logprob: -9.083934783935547
    9. ' [' → logprob: -10.583934783935547
    10. '(map' → logprob: -10.708934783935547

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06249930337071419
    2. '(' → logprob: -2.8124992847442627
    3. '(str' → logprob: -8.062499046325684
    4. '(input' → logprob: -8.937499046325684
    5. '(lambda' → logprob: -9.937499046325684
    6. '(eval' → logprob: -11.562499046325684
    7. '(list' → logprob: -11.937499046325684
    8. '(in' → logprob: -12.562499046325684
    9. '(
' → logprob: -12.562499046325684
    10. '<|end|>' → logprob: -12.687499046325684

Token 35: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08920237421989441
    2. ',input' → logprob: -2.464202404022217
    3. '(input' → logprob: -9.714201927185059
    4. '(sys' → logprob: -9.964201927185059
    5. '(' → logprob: -9.964201927185059
    6. 'input' → logprob: -10.089201927185059
    7. '(),' → logprob: -10.714201927185059
    8. ')' → logprob: -11.339201927185059
    9. ' ,' → logprob: -11.714201927185059
    10. ',(' → logprob: -12.589201927185059

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.153795766294934e-06
    2. '()' → logprob: -12.250005722045898
    3. '())' → logprob: -13.875005722045898
    4. ' ().' → logprob: -15.500005722045898
    5. ')' → logprob: -15.750005722045898
    6. '()))' → logprob: -17.3750057220459
    7. '(' → logprob: -18.3750057220459
    8. '.readline' → logprob: -18.6250057220459
    9. '()),' → logprob: -19.0000057220459
    10. '()
' → logprob: -19.0000057220459

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10632301867008209
    2. 'strip' → logprob: -2.356323003768921
    3. 'rstrip' → logprob: -5.1063232421875
    4. ')' → logprob: -10.3563232421875
    5. ' split' → logprob: -12.8563232421875
    6. '(split' → logprob: -12.9813232421875
    7. 'read' → logprob: -13.8563232421875
    8. 'plit' → logprob: -14.3563232421875
    9. ' strip' → logprob: -15.3563232421875
    10. 's' → logprob: -15.6063232421875

Token 38: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05149879306554794
    2. ')' → logprob: -3.0514988899230957
    3. '()' → logprob: -6.051498889923096
    4. '()))' → logprob: -8.051498413085938
    5. '))' → logprob: -8.676498413085938
    6. '())
' → logprob: -9.926498413085938
    7. '(' → logprob: -12.676498413085938
    8. ' ())' → logprob: -12.801498413085938
    9. '(),' → logprob: -12.926498413085938
    10. '()),' → logprob: -13.801498413085938

Token 39: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15025052428245544
    2. ' if' → logprob: -2.1502504348754883
    3. '<|end|>' → logprob: -4.400250434875488
    4. 'if' (adapté à ' if') → logprob: -5.275250434875488
    5. '
' → logprob: -6.275250434875488
    6. '   ' → logprob: -6.400250434875488
    7. ' ' → logprob: -7.650250434875488
    8. '        ' → logprob: -7.775250434875488
    9. '<|end|>' → logprob: -7.900250434875488
    10. '\n' → logprob: -8.275250434875488

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03334585577249527
    2. 'n' → logprob: -3.533345937728882
    3. ' not' → logprob: -5.658345699310303
    4. ' ' → logprob: -9.908346176147461
    5. 'not' → logprob: -10.783346176147461
    6. ' s' → logprob: -11.158346176147461
    7. '	n' → logprob: -11.908346176147461
    8. '(n' → logprob: -12.908346176147461
    9. ' (' → logprob: -12.908346176147461
    10. 's' → logprob: -13.658346176147461

Token 42: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18055053055286407
    2. '==' → logprob: -1.8055505752563477
    3. ' <=' → logprob: -8.180550575256348
    4. ' <' → logprob: -8.680550575256348
    5. '<=' → logprob: -9.055550575256348
    6. '=' → logprob: -9.305550575256348
    7. '<' → logprob: -9.555550575256348
    8. ' ' → logprob: -10.305550575256348
    9. ')' → logprob: -11.055550575256348
    10. ' =' → logprob: -11.430550575256348

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005676874425262213
    2. ' ' → logprob: -7.50056791305542
    3. 's' → logprob: -12.750567436218262
    4. 'g' → logprob: -12.875567436218262
    5. '-' → logprob: -13.000567436218262
    6. 'a' → logprob: -13.125567436218262
    7. '  ' → logprob: -13.688067436218262
    8. '    ' → logprob: -14.563067436218262
    9. '   ' → logprob: -14.688067436218262
    10. '```' → logprob: -14.688067436218262

Token 44: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01787223480641842
    2. ' and' → logprob: -4.142872333526611
    3. ' :' → logprob: -6.517872333526611
    4. ':
' → logprob: -9.392871856689453
    5. ' or' → logprob: -9.517871856689453
    6. 'and' → logprob: -9.642871856689453
    7. ':return' → logprob: -9.767871856689453
    8. '   ' → logprob: -10.017871856689453
    9. ',' → logprob: -11.392871856689453
    10. ' ' → logprob: -11.892871856689453

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.029788676649332047
    2. 'a' → logprob: -3.5297887325286865
    3. ' ' → logprob: -10.279788970947266
    4. '	a' → logprob: -12.654788970947266
    5. '<|end|>' → logprob: -15.404788970947266
    6. ' s' → logprob: -15.779788970947266
    7. '  ' → logprob: -16.279788970947266
    8. ',a' → logprob: -16.654788970947266
    9. ' ' → logprob: -16.654788970947266
    10. '>a' → logprob: -16.904788970947266

Token 46: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00012487331696320325
    2. ' ==' → logprob: -9.00012493133545
    3. '0' → logprob: -15.12512493133545
    4. '=' → logprob: -15.50012493133545
    5. '()==' → logprob: -15.62512493133545
    6. '===' → logprob: -15.62512493133545
    7. '==
' → logprob: -15.62512493133545
    8. 'a' → logprob: -15.87512493133545
    9. '==-' → logprob: -16.125123977661133
    10. ')==' → logprob: -16.500123977661133

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0020742492051795e-05
    2. ' ' → logprob: -10.000049591064453
    3. 's' → logprob: -12.375049591064453
    4. 'g' → logprob: -15.750049591064453
    5. 'b' → logprob: -15.750049591064453
    6. ' s' → logprob: -16.750049591064453
    7. 'a' → logprob: -17.125049591064453
    8. '۰' → logprob: -17.625049591064453
    9. '  ' → logprob: -17.750049591064453
    10. ' and' → logprob: -18.625049591064453

Token 48: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026319922879338264
    2. 'and' → logprob: -3.651319980621338
    3. ' ' → logprob: -11.52631950378418
    4. '<|end|>' → logprob: -12.40131950378418
    5. '	and' → logprob: -12.90131950378418
    6. '<|end|>' → logprob: -13.27631950378418
    7. 'そして' → logprob: -14.65131950378418
    8. '0' → logprob: -15.65131950378418
    9. '   ' → logprob: -16.02631950378418
    10. '  ' → logprob: -16.02631950378418

Token 49: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.043001025915145874
    2. 's' → logprob: -3.1680009365081787
    3. ' ' → logprob: -14.043001174926758
    4. '	s' → logprob: -14.543001174926758
    5. '   ' → logprob: -15.918001174926758
    6. '    ' → logprob: -16.543001174926758
    7. '<|end|>' → logprob: -16.543001174926758
    8. ' and' → logprob: -16.668001174926758
    9. '0' → logprob: -17.168001174926758
    10. '  ' → logprob: -17.605501174926758

Token 50: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -3.8889261304575484e-06
    2. ' ==' → logprob: -12.625003814697266
    3. '()==' → logprob: -16.250003814697266
    4. ']==' → logprob: -16.375003814697266
    5. '=' → logprob: -16.500003814697266
    6. ')==' → logprob: -16.750003814697266
    7. '```' → logprob: -17.000003814697266
    8. '==
' → logprob: -17.250003814697266
    9. '==-' → logprob: -17.500003814697266
    10. '===' → logprob: -17.750003814697266

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.297462171758525e-05
    2. ' ' → logprob: -10.625033378601074
    3. 'g' → logprob: -11.875033378601074
    4. ' and' → logprob: -14.750033378601074
    5. 'and' → logprob: -14.875033378601074
    6. 's' → logprob: -15.625033378601074
    7. '1' → logprob: -15.937533378601074
    8. 'a' → logprob: -16.312532424926758
    9. '  ' → logprob: -16.437532424926758
    10. '=' → logprob: -16.500032424926758

Token 52: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023252584040164948
    2. 'and' → logprob: -3.773252487182617
    3. ' ' → logprob: -12.773252487182617
    4. '	and' → logprob: -13.398252487182617
    5. '0' → logprob: -13.898252487182617
    6. '<|end|>' → logprob: -14.648252487182617
    7. 'a' → logprob: -14.898252487182617
    8. '<|end|>' → logprob: -15.273252487182617
    9. '```' → logprob: -15.648252487182617
    10. 'そして' → logprob: -15.773252487182617

Token 53: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.02981077879667282
    2. 'g' → logprob: -3.529810667037964
    3. ' ' → logprob: -10.904810905456543
    4. '   ' → logprob: -10.904810905456543
    5. '  ' → logprob: -11.279810905456543
    6. '	g' → logprob: -11.904810905456543
    7. '    ' → logprob: -12.779810905456543
    8. '0' → logprob: -14.154810905456543
    9. ' ' → logprob: -14.779810905456543
    10. '<|end|>' → logprob: -16.654809951782227

Token 54: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002491237595677376
    2. ' ==' → logprob: -6.002491474151611
    3. '=' → logprob: -11.502490997314453
    4. ')==' → logprob: -13.627490997314453
    5. ']==' → logprob: -14.002490997314453
    6. '0' → logprob: -14.127490997314453
    7. '<|end|>' → logprob: -14.127490997314453
    8. '()==' → logprob: -14.252490997314453
    9. '==(' → logprob: -15.127490997314453
    10. '==
' → logprob: -15.377490997314453

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000629279064014554
    2. ' ' → logprob: -7.375629425048828
    3. '   ' → logprob: -14.063129425048828
    4. '  ' → logprob: -14.438129425048828
    5. '<|end|>' → logprob: -15.563129425048828
    6. '۰' → logprob: -16.000629425048828
    7. 's' → logprob: -16.313129425048828
    8. '```' → logprob: -16.500629425048828
    9. '1' → logprob: -16.563129425048828
    10. '<|end|>' → logprob: -16.563129425048828

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000251326389843598
    2. ':
' → logprob: -8.375251770019531
    3. ':return' → logprob: -10.875251770019531
    4. ' :' → logprob: -13.625251770019531
    5. '):' → logprob: -15.625251770019531
    6. '   ' → logprob: -15.625251770019531
    7. '       ' → logprob: -16.25025177001953
    8. ':
' → logprob: -16.87525177001953
    9. '.' → logprob: -17.87525177001953
    10. ',' → logprob: -18.00025177001953

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004257188644260168
    2. '       ' → logprob: -5.5042572021484375
    3. ':' → logprob: -10.254257202148438
    4. '   ' → logprob: -10.504257202148438
    5. ' break' → logprob: -10.504257202148438
    6. '<|end|>' → logprob: -11.504257202148438
    7. '          ' → logprob: -11.629257202148438
    8. '
' → logprob: -11.629257202148438
    9. '               ' → logprob: -11.629257202148438
    10. ',' → logprob: -11.629257202148438

Token 58: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.23743748664855957
    2. 'break' (adapté à ' break') → logprob: -2.2374374866485596
    3. '           ' → logprob: -2.3624374866485596
    4. '       ' → logprob: -5.1124372482299805
    5. ' return' → logprob: -6.3624372482299805
    6. 'return' → logprob: -6.3624372482299805
    7. '               ' → logprob: -7.4874372482299805
    8. '	break' → logprob: -8.23743724822998
    9. '   ' → logprob: -9.61243724822998
    10. '```' → logprob: -10.86243724822998

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22334468364715576
    2. '<|end|>' → logprob: -1.8483446836471558
    3. '
' → logprob: -3.7233448028564453
    4. ',' → logprob: -5.473344802856445
    5. '        
' → logprob: -5.598344802856445
    6. ')' → logprob: -5.598344802856445
    7. '<|end|>' → logprob: -6.473344802856445
    8. '\n' → logprob: -6.473344802856445
    9. '        ' → logprob: -6.723344802856445
    10. '   ' → logprob: -7.973344802856445

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003586295060813427
    2. '   ' → logprob: -6.628586292266846
    3. '<|end|>' → logprob: -7.128586292266846
    4. '
' → logprob: -7.378586292266846
    5. '        
' → logprob: -8.253586769104004
    6. '        ' → logprob: -9.378586769104004
    7. '    ' → logprob: -9.503586769104004
    8. ')' → logprob: -9.753586769104004
    9. ',' → logprob: -10.003586769104004
    10. '<|end|>' → logprob: -10.003586769104004

Token 61: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15676157176494598
    2. 'dp' → logprob: -2.781761646270752
    3. ' dp' → logprob: -4.031761646270752
    4. '   ' → logprob: -4.156761646270752
    5. '        ' → logprob: -5.156761646270752
    6. '        
' → logprob: -5.531761646270752
    7. 'd' → logprob: -5.781761646270752
    8. ' dist' → logprob: -5.906761646270752
    9. 'dist' → logprob: -6.156761646270752
    10. '```' → logprob: -6.281761646270752

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0612306073307991
    2. '[' → logprob: -3.0612306594848633
    3. '=' → logprob: -4.436230659484863
    4. '<|end|>' → logprob: -9.186230659484863
    5. '[]' → logprob: -9.561230659484863
    6. '=[]' → logprob: -9.686230659484863
    7. ' =[' → logprob: -9.686230659484863
    8. ' ' → logprob: -9.811230659484863
    9. ',' → logprob: -9.811230659484863
    10. '.setdefault' → logprob: -9.811230659484863

Token 63: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19660161435604095
    2. '{}' → logprob: -2.071601629257202
    3. ' [[]' → logprob: -3.821601629257202
    4. '{' → logprob: -3.946601629257202
    5. '[]' → logprob: -4.696601390838623
    6. '[[' → logprob: -7.071601390838623
    7. ' [' → logprob: -7.696601390838623
    8. ' [{}' → logprob: -8.321601867675781
    9. ' {}' → logprob: -8.696601867675781
    10. '[{' → logprob: -8.821601867675781

Token 64: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9319877624511719
    2. ',' → logprob: -1.4319877624511719
    3. ' for' → logprob: -1.4319877624511719
    4. 'for' → logprob: -2.431987762451172
    5. ',n' → logprob: -3.931987762451172
    6. ')' → logprob: -4.306987762451172
    7. ' ]' → logprob: -6.556987762451172
    8. ',(' → logprob: -6.681987762451172
    9. '(n' → logprob: -6.806987762451172
    10. ',
' → logprob: -6.806987762451172

Token 65: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47677743434906006
    2. '_' → logprob: -1.47677743434906
    3. 'range' → logprob: -1.97677743434906
    4. ' _' → logprob: -4.85177755355835
    5. '(range' → logprob: -6.35177755355835
    6. '_range' → logprob: -6.35177755355835
    7. ' in' → logprob: -7.10177755355835
    8. '	range' → logprob: -9.226777076721191
    9. 'in' → logprob: -9.726777076721191
    10. ' ' → logprob: -10.476777076721191

Token 66: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14308983087539673
    2. ' in' → logprob: -2.143089771270752
    3. 'range' → logprob: -4.143089771270752
    4. ' range' → logprob: -9.01809024810791
    5. 'n' → logprob: -10.64309024810791
    6. '_' → logprob: -12.64309024810791
    7. ' ' → logprob: -12.89309024810791
    8. 'ange' → logprob: -13.51809024810791
    9. '(range' → logprob: -13.76809024810791
    10. ')' → logprob: -14.01809024810791

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804171830415726
    2. ' range' → logprob: -3.288041830062866
    3. '(range' → logprob: -15.913042068481445
    4. ' ' → logprob: -16.913042068481445
    5. '	range' → logprob: -17.038042068481445
    6. '   ' → logprob: -17.413042068481445
    7. 'r' → logprob: -18.163042068481445
    8. 'rang' → logprob: -18.663042068481445
    9. '  ' → logprob: -19.038042068481445
    10. 'ran' → logprob: -19.163042068481445

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.000017166137695
    3. 'n' → logprob: -14.625017166137695
    4. '(N' → logprob: -15.625017166137695
    5. ' (' → logprob: -15.750017166137695
    6. '((' → logprob: -17.375017166137695
    7. ')(' → logprob: -18.500017166137695
    8. ')n' → logprob: -18.750017166137695
    9. ' n' → logprob: -19.250017166137695
    10. '[n' → logprob: -19.500017166137695

Token 69: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.15310683415737e-05
    2. ']' → logprob: -11.750021934509277
    3. ')' → logprob: -12.000021934509277
    4. ')]
' → logprob: -12.250021934509277
    5. ' )' → logprob: -13.375021934509277
    6. '+' → logprob: -15.250021934509277
    7. '>]' → logprob: -15.375021934509277
    8. ' ]' → logprob: -16.12502098083496
    9. ')]

' → logprob: -16.12502098083496
    10. '       ' → logprob: -16.62502098083496

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7025203704833984
    2. 'for' (adapté à ' for') → logprob: -0.7025203704833984
    3. '   ' → logprob: -5.327520370483398
    4. '       ' → logprob: -5.577520370483398
    5. '<|end|>' → logprob: -8.452520370483398
    6. 'a' → logprob: -8.952520370483398
    7. '	for' → logprob: -9.077520370483398
    8. ' ' → logprob: -10.452520370483398
    9. 'while' → logprob: -10.452520370483398
    10. ' while' → logprob: -10.702520370483398

Token 72: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.576404869556427
    2. '_' → logprob: -0.826404869556427
    3. '_i' → logprob: -8.326404571533203
    4. ' i' → logprob: -8.451404571533203
    5. ' ' → logprob: -11.826404571533203
    6. 'i' → logprob: -13.076404571533203
    7. '_a' → logprob: -15.951404571533203
    8. '_j' → logprob: -17.076404571533203
    9. '_s' → logprob: -17.451404571533203
    10. ' in' → logprob: -17.826404571533203

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016142871230840683
    2. 'in' → logprob: -4.141142845153809
    3. ' ' → logprob: -9.391142845153809
    4. ' _' → logprob: -11.391142845153809
    5. '_' → logprob: -12.266142845153809
    6. 'range' → logprob: -12.516142845153809
    7. '  ' → logprob: -13.016142845153809
    8. 's' → logprob: -13.891142845153809
    9. ' range' → logprob: -14.516142845153809
    10. 'a' → logprob: -14.641142845153809

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011078709736466408
    2. ' range' → logprob: -4.511078834533691
    3. 'a' → logprob: -11.011078834533691
    4. 's' → logprob: -12.761078834533691
    5. 'ange' → logprob: -13.136078834533691
    6. ' ' → logprob: -13.136078834533691
    7. 'r' → logprob: -13.511078834533691
    8. 'ra' → logprob: -13.636078834533691
    9. 'rang' → logprob: -13.636078834533691
    10. 'ran' → logprob: -14.386078834533691

Token 75: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00455924216657877
    2. ' (' → logprob: -6.12955904006958
    3. '(s' → logprob: -6.62955904006958
    4. ' a' → logprob: -7.37955904006958
    5. '(' → logprob: -8.004559516906738
    6. 'a' → logprob: -9.379559516906738
    7. ' s' → logprob: -13.379559516906738
    8. '	a' → logprob: -13.754559516906738
    9. ' ' → logprob: -13.879559516906738
    10. '   ' → logprob: -13.879559516906738

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00822837557643652
    2. '):
' → logprob: -4.883228302001953
    3. ' ):' → logprob: -8.133228302001953
    4. ',' → logprob: -8.508228302001953
    5. ':' → logprob: -9.883228302001953
    6. '):
' → logprob: -10.258228302001953
    7. ')' → logprob: -11.383228302001953
    8. '       ' → logprob: -12.508228302001953
    9. ' ,' → logprob: -12.758228302001953
    10. '   ' → logprob: -12.883228302001953

Token 77: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5471795201301575
    2. ' u' → logprob: -0.9221795201301575
    3. 'b' → logprob: -4.547179698944092
    4. 'x' (adapté à ' x') → logprob: -5.297179698944092
    5. ' b' → logprob: -5.297179698944092
    6. ' x' → logprob: -6.672179698944092
    7. 'f' → logprob: -8.547179222106934
    8. 'v' → logprob: -8.797179222106934
    9. 's' → logprob: -8.797179222106934
    10. 'a' → logprob: -8.922179222106934

Token 79: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03966850787401199
    2. ',y' → logprob: -3.414668560028076
    3. ' ,' → logprob: -5.164668560028076
    4. ',b' → logprob: -9.289668083190918
    5. ',x' → logprob: -9.914668083190918
    6. ' y' → logprob: -10.664668083190918
    7. ',v' → logprob: -10.789668083190918
    8. ',s' → logprob: -10.789668083190918
    9. ',n' → logprob: -10.914668083190918
    10. ',a' → logprob: -11.039668083190918

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35507819056510925
    2. ',w' → logprob: -1.6050782203674316
    3. ',c' → logprob: -3.9800782203674316
    4. ' =' → logprob: -4.230078220367432
    5. ',x' → logprob: -4.480078220367432
    6. '=' → logprob: -4.480078220367432
    7. ',d' → logprob: -4.730078220367432
    8. ',y' → logprob: -5.355078220367432
    9. ',a' → logprob: -5.605078220367432
    10. ',s' → logprob: -5.730078220367432

Token 81: 'lab' (ID: 21048)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1442276239395142
    2. 'z' → logprob: -1.1442276239395142
    3. 'w' → logprob: -1.7692276239395142
    4. 'd' → logprob: -2.2692275047302246
    5. 'p' → logprob: -3.6442275047302246
    6. 't' → logprob: -3.6442275047302246
    7. 'l' → logprob: -4.769227504730225
    8. 'cost' → logprob: -5.019227504730225
    9. 'b' → logprob: -5.519227504730225
    10. ' w' → logprob: -6.144227504730225

Token 82: ' =' (ID: 314)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.002728909719735384
    2. ',' → logprob: -6.5027289390563965
    3. ' =' → logprob: -7.3777289390563965
    4. '=' → logprob: -8.502728462219238
    5. 'els' → logprob: -8.502728462219238
    6. ',l' → logprob: -9.252728462219238
    7. ',e' → logprob: -10.752728462219238
    8. 'e' → logprob: -11.127728462219238
    9. ',c' → logprob: -11.627728462219238
    10. 'eled' → logprob: -11.627728462219238

Token 83: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49843648076057434
    2. ' map' → logprob: -0.998436450958252
    3. 'input' → logprob: -4.373436450958252
    4. 'map' → logprob: -4.498436450958252
    5. ' sys' → logprob: -8.24843692779541
    6. ' ' → logprob: -9.87343692779541
    7. 'sys' → logprob: -11.74843692779541
    8. ' list' → logprob: -12.49843692779541
    9. 'int' → logprob: -13.74843692779541
    10. ' int' → logprob: -14.31093692779541

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.014684110297821e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.250008583068848
    4. '(' → logprob: -15.125008583068848
    5. '.split' → logprob: -16.625009536743164
    6. '.' → logprob: -17.625009536743164
    7. '()
' → logprob: -18.125009536743164
    8. '()).' → logprob: -19.500009536743164
    9. '.readline' → logprob: -19.500009536743164
    10. 'split' → logprob: -19.625009536743164

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01120485458523035
    2. 'strip' → logprob: -4.511204719543457
    3. 'rstrip' → logprob: -8.761204719543457
    4. ' split' → logprob: -15.511204719543457
    5. 'spl' → logprob: -16.261205673217773
    6. '(split' → logprob: -18.011205673217773
    7. 'rs' → logprob: -19.386205673217773
    8. ' strip' → logprob: -19.886205673217773
    9. 'sp' → logprob: -20.261205673217773
    10. '_split' → logprob: -20.511205673217773

Token 86: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002064257161691785
    2. '()
' → logprob: -7.002064228057861
    3. '<|end|>' → logprob: -7.877064228057861
    4. '(' → logprob: -8.00206470489502
    5. '()\' → logprob: -8.25206470489502
    6. '<|end|>' → logprob: -10.50206470489502
    7. '       ' → logprob: -10.75206470489502
    8. '(),' → logprob: -10.87706470489502
    9. '();' → logprob: -10.87706470489502
    10. ',' → logprob: -11.25206470489502

Token 87: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1533948928117752
    2. '<|end|>' → logprob: -2.278394937515259
    3. ' ' → logprob: -3.778394937515259
    4. '           ' → logprob: -5.15339469909668
    5. 'x' (adapté à ' x') → logprob: -5.40339469909668
    6. '<|end|>' → logprob: -6.15339469909668
    7. ' graph' → logprob: -6.90339469909668
    8. '	x' → logprob: -7.02839469909668
    9. '       ' → logprob: -7.27839469909668
    10. '   ' → logprob: -7.90339469909668

Token 89: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21515382826328278
    2. '=' → logprob: -1.9651538133621216
    3. ',' → logprob: -3.340153932571411
    4. '=int' → logprob: -4.090153694152832
    5. '-' → logprob: -7.215153694152832
    6. ' -=' → logprob: -8.465153694152832
    7. '-=' → logprob: -8.965153694152832
    8. ' ,' → logprob: -9.715153694152832
    9. 'int' → logprob: -10.590153694152832
    10. ',int' → logprob: -10.965153694152832

Token 90: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011057726107537746
    2. '(' → logprob: -4.5110578536987305
    3. 'x' → logprob: -12.01105785369873
    4. '(y' → logprob: -13.51105785369873
    5. '(
' → logprob: -14.01105785369873
    6. ')' → logprob: -14.26105785369873
    7. ' (' → logprob: -14.76105785369873
    8. '<|end|>' → logprob: -15.76105785369873
    9. ')x' → logprob: -16.386056900024414
    10. '()' → logprob: -16.386056900024414

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08383319526910782
    2. ')-' → logprob: -2.5838332176208496
    3. '-' → logprob: -5.83383321762085
    4. ')
' → logprob: -6.33383321762085
    5. ' -' → logprob: -9.583832740783691
    6. '-)' → logprob: -9.833832740783691
    7. ' )' → logprob: -9.958832740783691
    8. '<|end|>' → logprob: -11.083832740783691
    9. '),' → logprob: -12.083832740783691
    10. '[' → logprob: -12.083832740783691

Token 92: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7608169317245483
    2. 'y' → logprob: -1.0108169317245483
    3. '<|end|>' → logprob: -2.385817050933838
    4. ',y' → logprob: -2.885817050933838
    5. ')' → logprob: -4.635817050933838
    6. ',' → logprob: -5.510817050933838
    7. ')y' → logprob: -6.135817050933838
    8. '	y' → logprob: -6.385817050933838
    9. ' ' → logprob: -6.760817050933838
    10. '           ' → logprob: -6.885817050933838

Token 93: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.10045715421438217
    2. ' y' → logprob: -2.350457191467285
    3. '<|end|>' → logprob: -8.725457191467285
    4. ',y' → logprob: -9.975457191467285
    5. '	y' → logprob: -10.475457191467285
    6. ' ' → logprob: -12.225457191467285
    7. ',' → logprob: -12.475457191467285
    8. '<|end|>' → logprob: -13.975457191467285
    9. 'int' → logprob: -14.350457191467285
    10. ')y' → logprob: -14.350457191467285

Token 94: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.00020926215802319348
    2. '=' → logprob: -8.500208854675293
    3. ' =' → logprob: -12.500208854675293
    4. 'int' → logprob: -14.250208854675293
    5. '=Integer' → logprob: -15.250208854675293
    6. '=(' → logprob: -15.250208854675293
    7. '<|end|>' → logprob: -15.375208854675293
    8. '<int' → logprob: -16.12520980834961
    9. '=
' → logprob: -16.25020980834961
    10. '=input' → logprob: -16.37520980834961

Token 95: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00015514736878685653
    2. '(' → logprob: -8.875155448913574
    3. ')' → logprob: -11.750155448913574
    4. 'y' → logprob: -12.500155448913574
    5. ' (' → logprob: -13.500155448913574
    6. '(x' → logprob: -14.000155448913574
    7. '<|end|>' → logprob: -14.125155448913574
    8. ')y' → logprob: -14.875155448913574
    9. ')(' → logprob: -15.750155448913574
    10. ' y' → logprob: -16.250154495239258

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010642479173839092
    2. ')
' → logprob: -6.876064300537109
    3. '           ' → logprob: -11.62606430053711
    4. '<|end|>' → logprob: -11.87606430053711
    5. ' )' → logprob: -12.12606430053711
    6. ')x' → logprob: -12.75106430053711
    7. ')
' → logprob: -13.50106430053711
    8. ')

' → logprob: -13.87606430053711
    9. '<|end|>' → logprob: -14.12606430053711
    10. ')return' → logprob: -14.12606430053711

Token 97: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' graph' (ID: 7465)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.076218025758862e-05
    2. '[' → logprob: -9.750070571899414
    3. '[y' → logprob: -11.750070571899414
    4. 'x' → logprob: -12.875070571899414
    5. '```' → logprob: -13.875070571899414
    6. '][' → logprob: -15.625070571899414
    7. '[int' → logprob: -15.750070571899414
    8. ')[' → logprob: -16.000070571899414
    9. '<|end|>' → logprob: -16.125070571899414
    10. ' [' → logprob: -16.625070571899414

Token 100: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.839121826691553e-05
    2. ']' → logprob: -9.500078201293945
    3. ' ].' → logprob: -13.375078201293945
    4. '.append' → logprob: -14.125078201293945
    5. '][' → logprob: -14.875078201293945
    6. '.' → logprob: -15.125078201293945
    7. ').' → logprob: -15.250078201293945
    8. '[' → logprob: -15.500078201293945
    9. '   ' → logprob: -16.125078201293945
    10. '],' → logprob: -18.625078201293945

Token 101: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -14.750000953674316
    4. '_append' → logprob: -17.500001907348633
    5. 'appen' → logprob: -17.500001907348633
    6. 'Append' → logprob: -18.125001907348633
    7. '	append' → logprob: -18.750001907348633
    8. 'add' → logprob: -19.500001907348633
    9. 'extend' → logprob: -20.500001907348633
    10. 'app' → logprob: -20.500001907348633

Token 102: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.016160117462277412
    2. '(' → logprob: -4.766160011291504
    3. '(y' → logprob: -4.891160011291504
    4. '([' → logprob: -13.641160011291504
    5. '(x' → logprob: -13.891160011291504
    6. '<|end|>' → logprob: -13.891160011291504
    7. ' (' → logprob: -15.141160011291504
    8. '(
' → logprob: -15.266160011291504
    9. '(('' → logprob: -15.266160011291504
    10. '[(' → logprob: -15.641160011291504

Token 103: 'lab' (ID: 21048)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.107425062713446e-06
    2. ' y' → logprob: -11.875006675720215
    3. ''y' → logprob: -17.37500762939453
    4. ')y' → logprob: -17.62500762939453
    5. '(y' → logprob: -18.37500762939453
    6. ')' → logprob: -18.62500762939453
    7. '   ' → logprob: -18.75000762939453
    8. '	y' → logprob: -18.87500762939453
    9. '<|end|>' → logprob: -19.25000762939453
    10. ',y' → logprob: -20.12500762939453

Token 104: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.25264638662338257
    2. ',' → logprob: -1.5026464462280273
    3. ' ,' → logprob: -7.252646446228027
    4. ',x' → logprob: -12.127646446228027
    5. ',n' → logprob: -14.377646446228027
    6. ',int' → logprob: -14.752646446228027
    7. ',g' → logprob: -14.752646446228027
    8. 'y' → logprob: -15.377646446228027
    9. ' y' → logprob: -15.502646446228027
    10. ',index' → logprob: -15.752646446228027

Token 105: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017258725129067898
    2. ')' → logprob: -6.376725673675537
    3. ' ))' → logprob: -11.501726150512695
    4. '))
' → logprob: -11.876726150512695
    5. ',' → logprob: -12.376726150512695
    6. ')))' → logprob: -13.501726150512695
    7. '),' → logprob: -15.251726150512695
    8. ' )' → logprob: -15.376726150512695
    9. ' ' → logprob: -15.876726150512695
    10. '<|end|>' → logprob: -16.501726150512695

Token 106: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32879719138145447
    2. '   ' → logprob: -1.5787972211837769
    3. '<|end|>' → logprob: -3.4537971019744873
    4. ' ' → logprob: -4.453797340393066
    5. '    ' → logprob: -4.828797340393066
    6. '        ' → logprob: -5.453797340393066
    7. ')' → logprob: -5.453797340393066
    8. ' for' → logprob: -5.828797340393066
    9. '  ' → logprob: -5.828797340393066
    10. ' while' → logprob: -6.453797340393066

Token 108: ' Sort' (ID: 25945)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1186107397079468
    2. 'def' → logprob: -1.3686107397079468
    3. ' from' → logprob: -2.3686108589172363
    4. 'visited' → logprob: -2.4936108589172363
    5. 'import' → logprob: -2.7436108589172363
    6. ' for' → logprob: -3.1186108589172363
    7. ' visited' → logprob: -3.3686108589172363
    8. '   ' → logprob: -3.7436108589172363
    9. 'for' → logprob: -3.9936108589172363
    10. '#' → logprob: -4.243610858917236

Token 109: ' edges' (ID: 22569)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.967562198638916
    2. 'each' → logprob: -1.092562198638916
    3. ' each' → logprob: -2.092562198638916
    4. 'graph' → logprob: -2.467562198638916
    5. 'for' → logprob: -3.717562198638916
    6. ' for' → logprob: -4.217562198638916
    7. ' graph' → logprob: -4.217562198638916
    8. '<|end|>' → logprob: -4.467562198638916
    9. '(' → logprob: -5.467562198638916
    10. 's' → logprob: -6.092562198638916

Token 110: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.677329957485199
    2. ' for' → logprob: -0.802329957485199
    3. '       ' → logprob: -3.9273300170898438
    4. '   ' → logprob: -4.427330017089844
    5. '<|end|>' → logprob: -5.302330017089844
    6. ' each' → logprob: -6.052330017089844
    7. 'each' → logprob: -6.427330017089844
    8. '[' → logprob: -6.677330017089844
    9. 'graph' → logprob: -7.927330017089844
    10. ' graph' → logprob: -9.052330017089844

Token 111: ' visit' (ID: 4030)
  Prédit: ' ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ensure' → logprob: -0.16048133373260498
    2. 'ensure' → logprob: -2.5354814529418945
    3. '<|end|>' → logprob: -3.2854814529418945
    4. 'for' → logprob: -5.1604814529418945
    5. ' for' → logprob: -5.2854814529418945
    6. 'each' → logprob: -5.7854814529418945
    7. ' each' → logprob: -5.9104814529418945
    8. 's' → logprob: -5.9104814529418945
    9. ' maintain' → logprob: -6.4104814529418945
    10. 'make' → logprob: -6.6604814529418945

Token 112: ' lex' (ID: 37772)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7508645057678223
    2. '(graph' → logprob: -1.2508645057678223
    3. ' graph' → logprob: -1.7508645057678223
    4. ' edges' → logprob: -4.125864505767822
    5. ' them' → logprob: -4.250864505767822
    6. ' the' → logprob: -4.875864505767822
    7. ' in' → logprob: -5.125864505767822
    8. ' by' → logprob: -5.625864505767822
    9. '	graph' → logprob: -5.625864505767822
    10. 'edges' → logprob: -5.750864505767822

Token 113: ' smaller' (ID: 13679)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0002153378736693412
    2. ' order' → logprob: -10.000215530395508
    3. 'ical' → logprob: -10.375215530395508
    4. 'ographically' → logprob: -10.625215530395508
    5. 'sorted' → logprob: -10.625215530395508
    6. ' ' → logprob: -11.000215530395508
    7. 'ico' → logprob: -11.500215530395508
    8. 'ically' → logprob: -11.500215530395508
    9. ' smaller' → logprob: -11.750215530395508
    10. 'ographical' → logprob: -12.000215530395508

Token 114: ' labels' (ID: 17125)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.322508841753006
    2. ' for' → logprob: -1.4475088119506836
    3. '   ' → logprob: -4.572508811950684
    4. 'for' → logprob: -4.822508811950684
    5. ' in' → logprob: -5.197508811950684
    6. '.sort' → logprob: -5.822508811950684
    7. '        
' → logprob: -6.072508811950684
    8. ' each' → logprob: -6.197508811950684
    9. '
' → logprob: -6.322508811950684
    10. '<|end|>' → logprob: -6.822508811950684

Token 116: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012104588560760021
    2. '<|end|>' → logprob: -4.512104511260986
    3. ' for' → logprob: -7.887104511260986
    4. '   ' → logprob: -8.512104988098145
    5. '        
' → logprob: -8.637104988098145
    6. '
' → logprob: -9.262104988098145
    7. '<|end|>' → logprob: -9.512104988098145
    8. 'for' → logprob: -10.387104988098145
    9. '        ' → logprob: -11.262104988098145
    10. ',' → logprob: -11.387104988098145

Token 117: ' deterministic' (ID: 164009)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.46198832988739014
    2. 'dfs' → logprob: -2.0869884490966797
    3. ' correct' → logprob: -2.7119884490966797
    4. ' DFS' → logprob: -2.8369884490966797
    5. ' top' → logprob: -3.8369884490966797
    6. ' consistent' → logprob: -4.21198844909668
    7. ' lex' → logprob: -4.33698844909668
    8. ' depth' → logprob: -4.58698844909668
    9. ' d' → logprob: -4.58698844909668
    10. ' BFS' → logprob: -4.96198844909668

Token 118: ' order' (ID: 2569)
  Prédit: ' traversal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -0.008837451227009296
    2. 'dfs' → logprob: -5.7588372230529785
    3. ' DFS' → logprob: -6.0088372230529785
    4. ' dfs' → logprob: -6.7588372230529785
    5. ' behavior' → logprob: -7.2588372230529785
    6. ' exploration' → logprob: -8.008837699890137
    7. 'DFS' → logprob: -8.508837699890137
    8. ' BFS' → logprob: -8.508837699890137
    9. '<|end|>' → logprob: -8.883837699890137
    10. ' depth' → logprob: -9.258837699890137

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01053612120449543
    2. '<|end|>' → logprob: -4.760536193847656
    3. '        
' → logprob: -7.010536193847656
    4. '   ' → logprob: -8.135536193847656
    5. ' for' → logprob: -8.385536193847656
    6. '
' → logprob: -8.760536193847656
    7. '<|end|>' → logprob: -9.385536193847656
    8. ',' → logprob: -10.010536193847656
    9. 'for' → logprob: -10.635536193847656
    10. ' ' → logprob: -10.635536193847656

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07816717028617859
    2. '<|end|>' → logprob: -2.703167200088501
    3. '        
' → logprob: -6.078166961669922
    4. '
' → logprob: -6.203166961669922
    5. '   ' → logprob: -6.203166961669922
    6. '<|end|>' → logprob: -7.328166961669922
    7. ' ' → logprob: -8.078166961669922
    8. '	' → logprob: -8.828166961669922
    9. '    
' → logprob: -9.578166961669922
    10. '  
' → logprob: -9.578166961669922

Token 121: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5469789505004883
    2. 'for' (adapté à ' for') → logprob: -0.9219789505004883
    3. '       ' → logprob: -4.296978950500488
    4. 'graph' → logprob: -5.046978950500488
    5. ' graph' → logprob: -6.046978950500488
    6. '   ' → logprob: -6.796978950500488
    7. ' ' → logprob: -11.296978950500488
    8. '<|end|>' → logprob: -11.671978950500488
    9. '           ' → logprob: -12.046978950500488
    10. '
' → logprob: -12.421978950500488

Token 122: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.19394363462924957
    2. ' i' → logprob: -1.9439436197280884
    3. 'edges' → logprob: -4.193943500518799
    4. ' adj' → logprob: -4.568943500518799
    5. 'i' → logprob: -5.443943500518799
    6. 'adj' → logprob: -6.943943500518799
    7. ' edge' → logprob: -7.693943500518799
    8. ' node' → logprob: -7.943943500518799
    9. ' adjacency' → logprob: -8.443943977355957
    10. ' neighbors' → logprob: -8.443943977355957

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16033460199832916
    2. 'in' → logprob: -1.910334587097168
    3. '_in' → logprob: -10.535334587097168
    4. '<|end|>' → logprob: -10.535334587097168
    5. '	in' → logprob: -10.660334587097168
    6. 's' → logprob: -11.535334587097168
    7. ' ' → logprob: -12.035334587097168
    8. 'In' → logprob: -12.410334587097168
    9. '[in' → logprob: -13.285334587097168
    10. '

' → logprob: -13.910334587097168

Token 124: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5759451985359192
    2. ' graph' → logprob: -0.8259451985359192
    3. '	graph' → logprob: -12.450944900512695
    4. '(graph' → logprob: -13.200944900512695
    5. 'Graph' → logprob: -17.825944900512695
    6. 'raph' → logprob: -19.450944900512695
    7. '.graph' → logprob: -19.700944900512695
    8. '_graph' → logprob: -20.075944900512695
    9. ' ' → logprob: -20.450944900512695
    10. 'graphql' → logprob: -20.950944900512695

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010545680299401283
    2. '.sort' → logprob: -5.13554573059082
    3. ':
' → logprob: -5.38554573059082
    4. 'sort' → logprob: -12.01054573059082
    5. ' in' → logprob: -12.26054573059082
    6. '):' → logprob: -12.88554573059082
    7. '):
' → logprob: -13.38554573059082
    8. '[:]' → logprob: -13.38554573059082
    9. '.' → logprob: -13.51054573059082
    10. ':**' → logprob: -13.88554573059082

Token 126: '           ' (ID: 352)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.10999605804681778
    2. 'edges' → logprob: -3.4849960803985596
    3. '(edges' → logprob: -3.4849960803985596
    4. '.edges' → logprob: -3.7349960803985596
    5. '           ' → logprob: -4.6099958419799805
    6. '.sort' → logprob: -4.9849958419799805
    7. '<|end|>' → logprob: -7.4849958419799805
    8. ' sort' → logprob: -7.4849958419799805
    9. '   ' → logprob: -7.8599958419799805
    10. '.' → logprob: -8.10999584197998

Token 127: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.048746559768915176
    2. ' edges' → logprob: -3.0487465858459473
    3. '.edges' → logprob: -9.923746109008789
    4. '(edges' → logprob: -10.173746109008789
    5. '           ' → logprob: -10.298746109008789
    6. '   ' → logprob: -11.173746109008789
    7. '_edges' → logprob: -11.798746109008789
    8. 'sort' → logprob: -12.548746109008789
    9. '
' → logprob: -12.673746109008789
    10. '       ' → logprob: -12.923746109008789

Token 128: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001503313542343676
    2. '.' → logprob: -6.5015034675598145
    3. ' .' → logprob: -14.876502990722656
    4. '.reverse' → logprob: -15.501502990722656
    5. 'sort' → logprob: -15.751502990722656
    6. '.s' → logprob: -16.001502990722656
    7. ' sort' → logprob: -16.126502990722656
    8. '.Sort' → logprob: -17.126502990722656
    9. '	sort' → logprob: -18.001502990722656
    10. '<|end|>' → logprob: -18.501502990722656

Token 129: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002966291969642043
    2. '(key' → logprob: -6.002966403961182
    3. '()
' → logprob: -7.877966403961182
    4. '(reverse' → logprob: -9.502965927124023
    5. '(' → logprob: -11.127965927124023
    6. '<|end|>' → logprob: -12.377965927124023
    7. '(lambda' → logprob: -12.502965927124023
    8. '()

' → logprob: -12.877965927124023
    9. 'key' → logprob: -13.002965927124023
    10. '();' → logprob: -13.127965927124023

Token 130: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. 'lambda' → logprob: -16.253177642822266
    4. '=
' → logprob: -16.378177642822266
    5. '=len' → logprob: -17.878177642822266
    6. ' =' → logprob: -18.503177642822266
    7. '=_' → logprob: -18.628177642822266
    8. '=l' → logprob: -18.753177642822266
    9. '=str' → logprob: -19.003177642822266
    10. '(lambda' → logprob: -19.128177642822266

Token 131: ' e' (ID: 319)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020095430314540863
    2. 'lambda' → logprob: -4.520095348358154
    3. ' x' → logprob: -4.895095348358154
    4. ' lambda' → logprob: -6.520095348358154
    5. '=lambda' → logprob: -10.395095825195312
    6. 'e' → logprob: -11.520095825195312
    7. 'xy' → logprob: -12.520095825195312
    8. 'item' → logprob: -13.895095825195312
    9. 'a' → logprob: -14.020095825195312
    10. '(lambda' → logprob: -14.270095825195312

Token 132: ':e' (ID: 87596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005386725999414921
    2. ':e' → logprob: -5.380386829376221
    3. 'e' → logprob: -7.380386829376221
    4. ' :' → logprob: -8.880386352539062
    5. ':
' → logprob: -13.380386352539062
    6. ' e' → logprob: -13.630386352539062
    7. '	e' → logprob: -15.255386352539062
    8. '(e' → logprob: -15.630386352539062
    9. '1' → logprob: -16.130386352539062
    10. '[' → logprob: -16.630386352539062

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12726634740829468
    2. '0' → logprob: -2.1272664070129395
    3. ' ' → logprob: -8.627265930175781
    4. 'e' → logprob: -9.377265930175781
    5. ' [' → logprob: -10.877265930175781
    6. '012' → logprob: -11.627265930175781
    7. '(' → logprob: -12.002265930175781
    8. '.' → logprob: -12.127265930175781
    9. ':' → logprob: -12.502265930175781
    10. '[e' → logprob: -12.752265930175781

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002366753324167803
    2. '[' → logprob: -8.500236511230469
    3. ' ' → logprob: -10.375236511230469
    4. '
' → logprob: -14.250236511230469
    5. '(' → logprob: -14.875236511230469
    6. '1' → logprob: -16.25023651123047
    7. '```' → logprob: -16.25023651123047
    8. ':' → logprob: -16.31273651123047
    9. '{' → logprob: -16.50023651123047
    10. '   ' → logprob: -16.56273651123047

Token 135: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008847765857353806
    2. '))' → logprob: -7.125885009765625
    3. '])' → logprob: -10.625885009765625
    4. '<|end|>' → logprob: -11.000885009765625
    5. ' )' → logprob: -11.250885009765625
    6. ')
' → logprob: -12.375885009765625
    7. ')])' → logprob: -12.375885009765625
    8. ')]' → logprob: -12.750885009765625
    9. ')#' → logprob: -13.000885009765625
    10. '})' → logprob: -13.000885009765625

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6620930433273315
    2. '<|end|>' → logprob: -0.7870930433273315
    3. '   ' → logprob: -4.037093162536621
    4. '
' → logprob: -5.537093162536621
    5. '<|end|>' → logprob: -6.037093162536621
    6. 'def' → logprob: -6.412093162536621
    7. '        
' → logprob: -6.787093162536621
    8. ')' → logprob: -7.037093162536621
    9. '```' → logprob: -7.412093162536621
    10. '    ' → logprob: -8.662093162536621

Token 137: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3372909724712372
    2. 'visited' → logprob: -1.7122910022735596
    3. '   ' → logprob: -2.9622910022735596
    4. ' visited' → logprob: -3.9622910022735596
    5. 'def' → logprob: -4.0872907638549805
    6. 'dp' (adapté à ' dp') → logprob: -5.3372907638549805
    7. 'distance' → logprob: -6.2122907638549805
    8. 'dist' → logprob: -6.5872907638549805
    9. 'stack' → logprob: -6.5872907638549805
    10. '        
' → logprob: -6.7122907638549805

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00462972279638052
    2. '=' → logprob: -5.379629611968994
    3. '[' → logprob: -12.879630088806152
    4. '=[]' → logprob: -13.504630088806152
    5. ',' → logprob: -13.629630088806152
    6. '=[' → logprob: -14.379630088806152
    7. ' ' → logprob: -14.379630088806152
    8. '={}' → logprob: -14.504630088806152
    9. 's' → logprob: -15.004630088806152
    10. '<|end|>' → logprob: -15.254630088806152

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07831037044525146
    2. '[-' → logprob: -3.328310489654541
    3. '{}' → logprob: -3.328310489654541
    4. '[[' → logprob: -5.703310489654541
    5. ' [' → logprob: -8.703310012817383
    6. '{' → logprob: -10.203310012817383
    7. '[{' → logprob: -10.453310012817383
    8. ' [{}' → logprob: -11.328310012817383
    9. '[['' → logprob: -11.953310012817383
    10. '["' → logprob: -12.203310012817383

Token 140: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.002492070198059
    2. '{}' → logprob: -1.252492070198059
    3. '[' → logprob: -2.2524919509887695
    4. '[-' → logprob: -2.5024919509887695
    5. '-' → logprob: -2.6274919509887695
    6. 'False' → logprob: -3.1274919509887695
    7. 'set' → logprob: -3.6274919509887695
    8. '0' → logprob: -4.6274919509887695
    9. '{' → logprob: -6.3774919509887695
    10. 'float' → logprob: -6.6274919509887695

Token 141: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06234901025891304
    2. ' for' → logprob: -3.0623490810394287
    3. ']*(' → logprob: -4.93734884262085
    4. 'for' → logprob: -5.81234884262085
    5. ']*' → logprob: -6.06234884262085
    6. ' ]' → logprob: -7.68734884262085
    7. ')' → logprob: -8.687349319458008
    8. '(' → logprob: -8.937349319458008
    9. '<|end|>' → logprob: -9.312349319458008
    10. '](' → logprob: -9.687349319458008

Token 142: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02566923387348652
    2. '(' → logprob: -4.150669097900391
    3. '(n' → logprob: -4.650669097900391
    4. ' n' → logprob: -11.52566909790039
    5. ' (' → logprob: -11.65066909790039
    6. '100' → logprob: -12.65066909790039
    7. '102' → logprob: -13.15066909790039
    8. '((' → logprob: -13.40066909790039
    9. '101' → logprob: -13.77566909790039
    10. '501' → logprob: -13.90066909790039

Token 143: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' visiting' (ID: 18798)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020742444321513176
    2. '   ' → logprob: -7.252074241638184
    3. '<|end|>' → logprob: -8.002074241638184
    4. ')' → logprob: -8.252074241638184
    5. '```' → logprob: -8.377074241638184
    6. ' def' → logprob: -8.627074241638184
    7. 'import' → logprob: -9.002074241638184
    8. '
' → logprob: -9.002074241638184
    9. 'from' → logprob: -9.752074241638184
    10. ':' → logprob: -11.002074241638184

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20160502195358276
    2. '=' → logprob: -1.7016050815582275
    3. '[' → logprob: -9.201604843139648
    4. '=[' → logprob: -9.951604843139648
    5. '=True' → logprob: -11.451604843139648
    6. ' ' → logprob: -11.951604843139648
    7. ' =[' → logprob: -12.076604843139648
    8. '=[]' → logprob: -12.451604843139648
    9. '=set' → logprob: -12.576604843139648
    10. ',' → logprob: -12.826604843139648

Token 147: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12733909487724304
    2. 'set' → logprob: -2.1273391246795654
    3. ' set' → logprob: -8.377339363098145
    4. ' [' → logprob: -8.627339363098145
    5. '[]' → logprob: -14.502339363098145
    6. '(set' → logprob: -14.627339363098145
    7. '=set' → logprob: -14.627339363098145
    8. '[n' → logprob: -16.502338409423828
    9. '	set' → logprob: -16.627338409423828
    10. '   ' → logprob: -16.877338409423828

Token 148: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -8.180258191714529e-06
    2. ' False' → logprob: -11.750008583068848
    3. '0' → logprob: -15.625008583068848
    4. '(False' → logprob: -18.00000762939453
    5. '=False' → logprob: -20.00000762939453
    6. ']' → logprob: -21.25000762939453
    7. 'True' → logprob: -21.37500762939453
    8. '.False' → logprob: -21.75000762939453
    9. 'None' → logprob: -22.00000762939453
    10. '   ' → logprob: -22.37500762939453

Token 149: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008622690802440047
    2. ']*' → logprob: -7.125862121582031
    3. ' ]' → logprob: -9.875862121582031
    4. '<|end|>' → logprob: -13.500862121582031
    5. ']*(' → logprob: -13.625862121582031
    6. ']+' → logprob: -13.875862121582031
    7. ']>' → logprob: -14.750862121582031
    8. ']
' → logprob: -14.750862121582031
    9. ')' → logprob: -15.250862121582031
    10. ')]' → logprob: -15.375862121582031

Token 150: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.250001907348633
    3. '(n' → logprob: -18.750001907348633
    4. '(' → logprob: -19.000001907348633
    5. '<|end|>' → logprob: -21.125001907348633
    6. ' (' → logprob: -21.375001907348633
    7. '
' → logprob: -22.250001907348633
    8. '	n' → logprob: -22.375001907348633
    9. ')n' → logprob: -22.625001907348633
    10. 'len' → logprob: -22.625001907348633

Token 151: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28577351570129395
    2. '<|end|>' → logprob: -1.535773515701294
    3. 'def' → logprob: -3.910773515701294
    4. '       ' → logprob: -5.160773277282715
    5. '    
' → logprob: -6.035773277282715
    6. '        
' → logprob: -6.410773277282715
    7. '   ' → logprob: -6.535773277282715
    8. '  
' → logprob: -7.660773277282715
    9. ' def' → logprob: -7.785773277282715
    10. ' 
' → logprob: -8.160773277282715

Token 152: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14540402591228485
    2. '<|end|>' → logprob: -2.145404100418091
    3. '   ' → logprob: -4.520403861999512
    4. ' def' → logprob: -5.770403861999512
    5. '
' → logprob: -6.270403861999512
    6. '       ' → logprob: -7.270403861999512
    7. ')' → logprob: -7.520403861999512
    8. '    
' → logprob: -8.020403861999512
    9. '```' → logprob: -8.395403861999512
    10. '<|end|>' → logprob: -8.520403861999512

Token 153: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.023293538717553e-05
    2. ' def' → logprob: -10.875030517578125
    3. '
' → logprob: -12.500030517578125
    4. '   ' → logprob: -12.750030517578125
    5. '```' → logprob: -13.250030517578125
    6. '       ' → logprob: -13.625030517578125
    7. 'from' → logprob: -13.625030517578125
    8. 'import' → logprob: -15.625030517578125
    9. '        
' → logprob: -16.500030517578125
    10. ')' → logprob: -16.500030517578125

Token 154: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.004133968614041805
    2. 'dfs' → logprob: -5.504134178161621
    3. ' dp' → logprob: -10.004134178161621
    4. 'dp' → logprob: -12.879134178161621
    5. ' solve' → logprob: -13.129134178161621
    6. ' can' → logprob: -13.254134178161621
    7. ' bfs' → logprob: -13.629134178161621
    8. ' rec' → logprob: -13.879134178161621
    9. ' is' → logprob: -14.754134178161621
    10. ' visit' → logprob: -15.379134178161621

Token 155: '(u' (ID: 17057)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.31041622161865234
    2. '(u' → logprob: -1.4354162216186523
    3. '(v' → logprob: -4.060416221618652
    4. '(' → logprob: -4.560416221618652
    5. '(vertex' → logprob: -7.935416221618652
    6. '(token' → logprob: -8.310416221618652
    7. ' (' → logprob: -8.685416221618652
    8. '(x' → logprob: -9.060416221618652
    9. '(current' → logprob: -10.060416221618652
    10. '(start' → logprob: -10.435416221618652

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03843114152550697
    2. ',' → logprob: -3.288431167602539
    3. '):
' → logprob: -8.538431167602539
    4. ':' → logprob: -9.913431167602539
    5. ' ):' → logprob: -9.913431167602539
    6. ')' → logprob: -10.038431167602539
    7. ',k' → logprob: -11.038431167602539
    8. ' ,' → logprob: -11.913431167602539
    9. ',u' → logprob: -11.913431167602539
    10. ',p' → logprob: -12.663431167602539

Token 157: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6047089099884033
    2. '<|end|>' → logprob: -1.2297089099884033
    3. ' if' → logprob: -2.2297089099884033
    4. '           ' → logprob: -4.104708671569824
    5. ':' → logprob: -4.604708671569824
    6. '   ' → logprob: -5.104708671569824
    7. ' 
' → logprob: -5.729708671569824
    8. ',' → logprob: -5.979708671569824
    9. '        ' → logprob: -6.229708671569824
    10. '[' → logprob: -6.354708671569824

Token 158: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00044401636114344
    2. ' if' → logprob: -7.750443935394287
    3. '       ' → logprob: -11.625444412231445
    4. '   ' → logprob: -12.375444412231445
    5. 'vis' → logprob: -16.000444412231445
    6. '           ' → logprob: -16.875444412231445
    7. 'res' → logprob: -17.000444412231445
    8. '```' → logprob: -17.000444412231445
    9. '	if' → logprob: -17.250444412231445
    10. '
' → logprob: -17.250444412231445

Token 159: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24219341576099396
    2. 'vis' → logprob: -1.6171934604644775
    3. ' dp' → logprob: -4.867193222045898
    4. 'u' → logprob: -4.992193222045898
    5. ' visiting' → logprob: -6.367193222045898
    6. ' u' → logprob: -8.492193222045898
    7. 'visited' → logprob: -8.992193222045898
    8. 'v' → logprob: -10.617193222045898
    9. ' vis' → logprob: -10.992193222045898
    10. 'visit' → logprob: -11.492193222045898

Token 160: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -15.125
    3. '```' → logprob: -17.875
    4. '
' → logprob: -19.5
    5. '[' → logprob: -19.5
    6. ' [' → logprob: -20.625
    7. '[user' → logprob: -20.625
    8. '<u' → logprob: -20.75
    9. '(u' → logprob: -21.125
    10. '\[' → logprob: -21.375

Token 161: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15530742704868317
    2. 'is' → logprob: -2.4053075313568115
    3. ']' → logprob: -3.5303075313568115
    4. ')' → logprob: -3.7803075313568115
    5. ')is' → logprob: -7.030307292938232
    6. '==' → logprob: -8.40530776977539
    7. '!=' → logprob: -8.90530776977539
    8. ']!=' → logprob: -9.78030776977539
    9. '[' → logprob: -10.28030776977539
    10. ']==' → logprob: -10.65530776977539

Token 162: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47492995858192444
    2. 'is' → logprob: -0.974929928779602
    3. '!=' → logprob: -7.7249298095703125
    4. '==' → logprob: -8.099929809570312
    5. ')' → logprob: -9.474929809570312
    6. ')is' → logprob: -11.099929809570312
    7. ':' → logprob: -12.474929809570312
    8. '=' → logprob: -13.099929809570312
    9. ' !=' → logprob: -13.349929809570312
    10. ' ==' → logprob: -13.599929809570312

Token 163: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.005952975247055292
    2. ' not' → logprob: -5.130952835083008
    3. 'None' → logprob: -11.130952835083008
    4. 'False' → logprob: -12.005952835083008
    5. '   ' → logprob: -13.880952835083008
    6. '0' → logprob: -14.505952835083008
    7. '
' → logprob: -14.630952835083008
    8. ' ' → logprob: -15.005952835083008
    9. '    ' → logprob: -15.505952835083008
    10. '

' → logprob: -15.630952835083008

Token 164: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005533903022296727
    2. ' None' → logprob: -7.500553607940674
    3. '(None' → logprob: -15.250553131103516
    4. 'False' → logprob: -16.250553131103516
    5. '_None' → logprob: -17.500553131103516
    6. '
' → logprob: -17.625553131103516
    7. '   ' → logprob: -17.625553131103516
    8. '...' → logprob: -18.625553131103516
    9. ' ' → logprob: -18.750553131103516
    10. 'none' → logprob: -18.875553131103516

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04576455056667328
    2. ':
' → logprob: -3.170764446258545
    3. ':return' → logprob: -6.045764446258545
    4. '           ' → logprob: -8.545764923095703
    5. '       ' → logprob: -9.045764923095703
    6. ' and' → logprob: -10.920764923095703
    7. '               ' → logprob: -11.295764923095703
    8. '   ' → logprob: -11.295764923095703
    9. '):' → logprob: -11.795764923095703
    10. '):
' → logprob: -12.170764923095703

Token 166: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8259313702583313
    2. ' return' → logprob: -1.2009313106536865
    3. '           ' → logprob: -1.5759313106536865
    4. '               ' → logprob: -2.9509313106536865
    5. '       ' → logprob: -7.075931549072266
    6. '   ' → logprob: -7.200931549072266
    7. ' ' → logprob: -7.950931549072266
    8. ':return' → logprob: -9.700931549072266
    9. '"' → logprob: -10.700931549072266
    10. '{return' → logprob: -11.075931549072266

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03880859538912773
    2. ' return' → logprob: -3.288808584213257
    3. '           ' → logprob: -7.288808822631836
    4. '               ' → logprob: -9.663808822631836
    5. ':return' → logprob: -11.788808822631836
    6. '
' → logprob: -12.288808822631836
    7. '                   ' → logprob: -13.038808822631836
    8. '   ' → logprob: -13.038808822631836
    9. '{return' → logprob: -14.163808822631836
    10. '       ' → logprob: -14.413808822631836

Token 168: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012514007277786732
    2. ' dp' → logprob: -4.387514114379883
    3. '(dp' → logprob: -13.637514114379883
    4. '"' → logprob: -13.762514114379883
    5. '	dp' → logprob: -14.637514114379883
    6. ' ' → logprob: -15.012514114379883
    7. 'False' → logprob: -15.262514114379883
    8. '
' → logprob: -15.637514114379883
    9. 'True' → logprob: -15.887514114379883
    10. '0' → logprob: -15.887514114379883

Token 169: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.8889261304575484e-06
    2. 'u' → logprob: -12.500003814697266
    3. '```' → logprob: -16.875003814697266
    4. '[' → logprob: -17.875003814697266
    5. '(u' → logprob: -18.250003814697266
    6. '<u' → logprob: -19.125003814697266
    7. '
' → logprob: -19.125003814697266
    8. ' [' → logprob: -19.750003814697266
    9. '\[' → logprob: -20.000003814697266
    10. '[user' → logprob: -20.250003814697266

Token 170: ']
' (ID: 1592)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.09792157262563705
    2. ']' → logprob: -3.09792160987854
    3. 'u' → logprob: -3.09792160987854
    4. '])' → logprob: -5.972921371459961
    5. ')' → logprob: -8.347921371459961
    6. '][' → logprob: -8.847921371459961
    7. '(u' → logprob: -11.597921371459961
    8. '   ' → logprob: -11.722921371459961
    9. ']
' → logprob: -11.847921371459961
    10. '[' → logprob: -11.972921371459961

Token 171: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5196821689605713
    2. 'None' → logprob: -1.7696821689605713
    3. ' None' → logprob: -2.3946821689605713
    4. '\n' → logprob: -2.5196821689605713
    5. ':' → logprob: -2.6446821689605713
    6. 'False' → logprob: -3.1446821689605713
    7. ' 
' → logprob: -3.1446821689605713
    8. '<|end|>' → logprob: -3.3946821689605713
    9. ''\' → logprob: -3.6446821689605713
    10. '  
' → logprob: -3.8946821689605713

Token 172: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5951938629150391
    2. 'res' → logprob: -1.220193862915039
    3. 'dp' → logprob: -2.720193862915039
    4. ' if' → logprob: -3.970193862915039
    5. 'ans' → logprob: -4.220193862915039
    6. 'result' → logprob: -4.470193862915039
    7. 'max' → logprob: -4.845193862915039
    8. ' res' → logprob: -4.970193862915039
    9. 'best' → logprob: -4.970193862915039
    10. 'path' → logprob: -5.345193862915039

Token 173: ' visiting' (ID: 18798)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.0001097417771234177
    2. ' visiting' → logprob: -9.750109672546387
    3. 'u' → logprob: -10.000109672546387
    4. 'not' → logprob: -13.125109672546387
    5. '
' → logprob: -13.750109672546387
    6. 'visited' → logprob: -13.750109672546387
    7. '(vis' → logprob: -13.875109672546387
    8. 'visit' → logprob: -14.750109672546387
    9. ' vis' → logprob: -15.625109672546387
    10. '   ' → logprob: -16.125110626220703

Token 174: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.75
    3. '[' → logprob: -17.25
    4. '
' → logprob: -17.625
    5. '(u' → logprob: -17.625
    6. ' [' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. '[
' → logprob: -18.875
    9. '<u' → logprob: -19.375
    10. '

' → logprob: -20.125

Token 175: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.1307868957519531
    2. '[u' → logprob: -1.1307868957519531
    3. '):' → logprob: -1.3807868957519531
    4. '):
' → logprob: -2.880786895751953
    5. ':' → logprob: -3.630786895751953
    6. ']:
' → logprob: -4.380786895751953
    7. ']' → logprob: -5.755786895751953
    8. ']==' → logprob: -6.255786895751953
    9. ':
' → logprob: -6.880786895751953
    10. ']):' → logprob: -7.380786895751953

Token 176: '               ' (ID: 506)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.0333895683288574
    2. ' return' → logprob: -1.5333895683288574
    3. '               ' → logprob: -1.7833895683288574
    4. ' False' → logprob: -2.9083895683288574
    5. 'None' → logprob: -2.9083895683288574
    6. '"' → logprob: -3.1583895683288574
    7. 'return' → logprob: -3.5333895683288574
    8. 'False' → logprob: -3.6583895683288574
    9. '           ' → logprob: -3.9083895683288574
    10. '[' → logprob: -5.283389568328857

Token 177: ' #' (ID: 1069)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.25279510021209717
    2. 'return' → logprob: -2.3777952194213867
    3. '"' → logprob: -2.5027952194213867
    4. '''' → logprob: -3.7527952194213867
    5. 'None' → logprob: -4.627795219421387
    6. '           ' → logprob: -5.877795219421387
    7. 'False' → logprob: -5.877795219421387
    8. ' ""' → logprob: -5.877795219421387
    9. ' return' → logprob: -6.502795219421387
    10. '[]' → logprob: -7.002795219421387

Token 178: ' Detect' (ID: 60694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1301233321428299
    2. 'return' → logprob: -2.2551233768463135
    3. '""' → logprob: -4.505123138427734
    4. '"' → logprob: -6.380123138427734
    5. ' return' → logprob: -6.755123138427734
    6. ' dp' → logprob: -7.005123138427734
    7. 'None' → logprob: -7.130123138427734
    8. '''' → logprob: -7.380123138427734
    9. '[]' → logprob: -8.880123138427734
    10. ''' → logprob: -8.880123138427734

Token 179: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.03942213952541351
    2. ' cycles' → logprob: -3.914422035217285
    3. '_cycle' → logprob: -5.039422035217285
    4. 'cycle' → logprob: -5.414422035217285
    5. '"' → logprob: -6.664422035217285
    6. ' None' → logprob: -6.914422035217285
    7. ' ' → logprob: -7.164422035217285
    8. ' cyclic' → logprob: -7.289422035217285
    9. ' True' → logprob: -7.414422035217285
    10. ' a' → logprob: -7.789422035217285

Token 180: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.107241153717041
    2. ' return' → logprob: -1.732241153717041
    3. '               ' → logprob: -2.107241153717041
    4. 'return' → logprob: -2.107241153717041
    5. ':
' → logprob: -2.857241153717041
    6. ':' → logprob: -3.232241153717041
    7. '
' → logprob: -3.232241153717041
    8. ' =' → logprob: -3.607241153717041
    9. 'None' → logprob: -4.232241153717041
    10. ' None' → logprob: -4.482241153717041

Token 181: ' path' (ID: 3104)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.35628169775009155
    2. ' u' → logprob: -1.9812817573547363
    3. ' the' → logprob: -3.1062817573547363
    4. '[u' → logprob: -3.1062817573547363
    5. 'the' → logprob: -4.106281757354736
    6. 'path' → logprob: -4.856281757354736
    7. 'False' → logprob: -5.106281757354736
    8. 'True' → logprob: -5.231281757354736
    9. 'cycle' → logprob: -5.356281757354736
    10. ' True' → logprob: -5.356281757354736

Token 182: ' ->' (ID: 2747)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7275590896606445
    2. '           ' → logprob: -1.7275590896606445
    3. 'return' → logprob: -1.9775590896606445
    4. ' dp' → logprob: -2.6025590896606445
    5. 'dp' → logprob: -2.8525590896606445
    6. '               ' → logprob: -2.8525590896606445
    7. '
' → logprob: -6.3525590896606445
    8. '   ' → logprob: -6.3525590896606445
    9. ',' → logprob: -6.7275590896606445
    10. '       ' → logprob: -6.8525590896606445

Token 183: ' infinite' (ID: 48413)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.7094094157218933
    2. 'dp' → logprob: -1.209409475326538
    3. 'return' → logprob: -2.209409475326538
    4. 'None' → logprob: -3.459409475326538
    5. '''' → logprob: -3.459409475326538
    6. '"' → logprob: -3.584409475326538
    7. 'False' → logprob: -5.959409236907959
    8. ' return' → logprob: -6.584409236907959
    9. ''' → logprob: -6.834409236907959
    10. '[]' → logprob: -7.334409236907959

Token 184: ' possibility' (ID: 21568)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' ->' (ID: 2747)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8197126388549805
    2. 'return' → logprob: -1.4447126388549805
    3. ' return' → logprob: -1.4447126388549805
    4. '               ' → logprob: -3.4447126388549805
    5. ' =' → logprob: -3.8197126388549805
    6. 'dp' → logprob: -4.0697126388549805
    7. ' dp' → logprob: -5.1947126388549805
    8. ',' → logprob: -6.5697126388549805
    9. '=' → logprob: -6.5697126388549805
    10. 'None' → logprob: -7.1947126388549805

Token 186: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6206603646278381
    2. 'print' → logprob: -1.8706603050231934
    3. '"' → logprob: -2.4956603050231934
    4. 'dp' → logprob: -2.6206603050231934
    5. '""' → logprob: -2.6206603050231934
    6. 'None' → logprob: -2.9956603050231934
    7. '-' → logprob: -4.995660305023193
    8. '''' → logprob: -5.120660305023193
    9. ' return' → logprob: -5.745660305023193
    10. 'float' → logprob: -5.745660305023193

Token 187: ' smallest' (ID: 42173)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.520650327205658
    2. 'answer' → logprob: -1.6456503868103027
    3. ''s' → logprob: -3.2706503868103027
    4. 's' → logprob: -3.3956503868103027
    5. 'dp' → logprob: -3.6456503868103027
    6. 'def' → logprob: -4.020650386810303
    7. 'valid' → logprob: -4.395650386810303
    8. ' return' → logprob: -4.520650386810303
    9. 'result' → logprob: -4.520650386810303
    10. '"' → logprob: -4.895650386810303

Token 188: '
' (ID: 198)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7264743447303772
    2. ' None' → logprob: -1.2264742851257324
    3. '"' → logprob: -2.4764742851257324
    4. ' return' → logprob: -2.6014742851257324
    5. 'return' → logprob: -3.8514742851257324
    6. ' ' → logprob: -4.226474285125732
    7. 'dp' → logprob: -5.226474285125732
    8. '""' → logprob: -5.726474285125732
    9. ' "' → logprob: -5.851474285125732
    10. ' dp' → logprob: -5.976474285125732

Token 189: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9726170301437378
    2. 'return' → logprob: -1.3476170301437378
    3. 'None' → logprob: -2.0976171493530273
    4. '           ' → logprob: -2.0976171493530273
    5. ' None' → logprob: -2.3476171493530273
    6. '               ' → logprob: -4.347617149353027
    7. 'dp' → logprob: -5.722617149353027
    8. '"' → logprob: -6.722617149353027
    9. ' dp' → logprob: -6.722617149353027
    10. '"\' → logprob: -7.847617149353027

Token 190: ' dp' (ID: 21546)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07748110592365265
    2. 'dp' (adapté à ' dp') → logprob: -3.0774810314178467
    3. ' return' → logprob: -3.8274810314178467
    4. 'None' → logprob: -5.452481269836426
    5. '""' → logprob: -6.952481269836426
    6. ' dp' → logprob: -7.452481269836426
    7. '"' → logprob: -7.952481269836426
    8. ' None' → logprob: -8.577481269836426
    9. 'raise' → logprob: -8.827481269836426
    10. '           ' → logprob: -9.327481269836426

Token 191: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0280383548888494e-06
    2. 'u' → logprob: -14.375000953674316
    3. '=u' → logprob: -16.000001907348633
    4. '=' → logprob: -16.375001907348633
    5. '[' → logprob: -16.750001907348633
    6. ' =' → logprob: -16.875001907348633
    7. 'return' → logprob: -17.750001907348633
    8. '=None' → logprob: -18.125001907348633
    9. '[user' → logprob: -18.500001907348633
    10. '[n' → logprob: -18.500001907348633

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04104381799697876
    2. ']=' → logprob: -3.791043758392334
    3. '=' → logprob: -4.041043758392334
    4. ' =' → logprob: -10.041044235229492
    5. ')' → logprob: -12.166044235229492
    6. '=None' → logprob: -12.291044235229492
    7. ' ]' → logprob: -12.666044235229492
    8. ']==' → logprob: -13.416044235229492
    9. ']=-' → logprob: -13.541044235229492
    10. ')=' → logprob: -14.041044235229492

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006722826045006514
    2. ' =' → logprob: -5.006722927093506
    3. '=None' → logprob: -12.381722450256348
    4. '=-' → logprob: -14.131722450256348
    5. '=""' → logprob: -14.381722450256348
    6. '=''' → logprob: -14.506722450256348
    7. '=False' → logprob: -14.756722450256348
    8. '='' → logprob: -15.631722450256348
    9. '=sys' → logprob: -15.756722450256348
    10. '=float' → logprob: -16.006723403930664

Token 194: ' None' (ID: 4662)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.45996013283729553
    2. 'None' → logprob: -1.0849601030349731
    3. '''' → logprob: -3.5849602222442627
    4. '"' → logprob: -5.959959983825684
    5. '-' → logprob: -8.709959983825684
    6. ' None' → logprob: -9.084959983825684
    7. 'float' → logprob: -10.334959983825684
    8. '[]' → logprob: -10.709959983825684
    9. '"-' → logprob: -10.709959983825684
    10. ''' → logprob: -11.084959983825684

Token 195: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6330116987228394
    2. '           ' → logprob: -0.7580116987228394
    3. 'return' → logprob: -8.883011817932129
    4. '
' → logprob: -9.258011817932129
    5. '                   ' → logprob: -10.133011817932129
    6. ' return' → logprob: -10.383011817932129
    7. '<|end|>' → logprob: -10.383011817932129
    8. '       ' → logprob: -11.008011817932129
    9. ',' → logprob: -11.008011817932129
    10. ')' → logprob: -11.508011817932129

Token 196: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4747123122215271
    2. '               ' → logprob: -0.9747123122215271
    3. 'return' → logprob: -8.224712371826172
    4. '       ' → logprob: -9.474712371826172
    5. ' return' → logprob: -9.599712371826172
    6. '<|end|>' → logprob: -9.724712371826172
    7. '                   ' → logprob: -9.974712371826172
    8. ',' → logprob: -10.474712371826172
    9. ')' → logprob: -10.599712371826172
    10. '```' → logprob: -11.349712371826172

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024047186598181725
    2. '           ' → logprob: -4.274047374725342
    3. '               ' → logprob: -5.149047374725342
    4. ' return' → logprob: -5.524047374725342
    5. '       ' → logprob: -10.774046897888184
    6. '   ' → logprob: -11.899046897888184
    7. '                   ' → logprob: -12.274046897888184
    8. '
' → logprob: -12.774046897888184
    9. '	return' → logprob: -14.149046897888184
    10. ':return' → logprob: -14.149046897888184

Token 198: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019534912426024675
    2. 'dp' → logprob: -6.251953601837158
    3. ' None' → logprob: -10.626953125
    4. 'none' → logprob: -14.751953125
    5. '(None' → logprob: -15.501953125
    6. '[]' → logprob: -17.626953125
    7. '0' → logprob: -17.876953125
    8. ' dp' → logprob: -18.001953125
    9. '```' → logprob: -18.126953125
    10. ',None' → logprob: -18.126953125

Token 199: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04697631672024727
    2. '       ' → logprob: -3.296976327896118
    3. '
' → logprob: -5.421976089477539
    4. '    
' → logprob: -6.671976089477539
    5. '        
' → logprob: -6.921976089477539
    6. '<|end|>' → logprob: -7.296976089477539
    7. '            
' → logprob: -7.421976089477539
    8. '   ' → logprob: -7.921976089477539
    9. '```' → logprob: -9.046976089477539
    10. '\n' → logprob: -9.296976089477539

Token 200: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2072373330593109
    2. '           ' → logprob: -1.7072373628616333
    3. '        
' → logprob: -6.082237243652344
    4. '
' → logprob: -6.957237243652344
    5. '    
' → logprob: -6.957237243652344
    6. '   ' → logprob: -7.082237243652344
    7. '            
' → logprob: -8.082237243652344
    8. 'n' → logprob: -9.457237243652344
    9. '```' → logprob: -9.457237243652344
    10. '<|end|>' → logprob: -9.707237243652344

Token 201: ' visiting' (ID: 18798)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12308046221733093
    2. '   ' → logprob: -2.3730804920196533
    3. 'vis' → logprob: -3.9980804920196533
    4. ' visiting' → logprob: -6.123080253601074
    5. '           ' → logprob: -6.248080253601074
    6. '    ' → logprob: -9.998080253601074
    7. '      ' → logprob: -11.123080253601074
    8. '(vis' → logprob: -11.123080253601074
    9. '     ' → logprob: -11.248080253601074
    10. '  ' → logprob: -11.748080253601074

Token 202: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. 'u' → logprob: -16.625001907348633
    5. '[user' → logprob: -17.500001907348633
    6. ' [' → logprob: -17.875001907348633
    7. '\[' → logprob: -18.625001907348633
    8. '[s' → logprob: -19.250001907348633
    9. '<u' → logprob: -19.375001907348633
    10. '(u' → logprob: -19.500001907348633

Token 203: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05024560168385506
    2. '[u' → logprob: -3.050245523452759
    3. ']=' → logprob: -6.425245761871338
    4. 'u' → logprob: -10.42524528503418
    5. '[' → logprob: -12.80024528503418
    6. ' ]' → logprob: -13.17524528503418
    7. '=' → logprob: -14.17524528503418
    8. ']
' → logprob: -14.67524528503418
    9. '])' → logprob: -14.80024528503418
    10. ')' → logprob: -15.42524528503418

Token 204: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -18.62520408630371
    4. '=True' → logprob: -20.50020408630371
    5. '[' → logprob: -22.50020408630371
    6. 'true' → logprob: -22.62520408630371
    7. '1' → logprob: -22.75020408630371
    8. 'Tr' → logprob: -23.12520408630371
    9. '.True' → logprob: -24.00020408630371
    10. 'TRUE' → logprob: -24.25020408630371

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43521037697792053
    2. '<|end|>' → logprob: -1.0602103471755981
    3. '<|end|>' → logprob: -6.060210227966309
    4. '           ' → logprob: -7.060210227966309
    5. ' for' → logprob: -7.185210227966309
    6. '       ' → logprob: -7.560210227966309
    7. '\n' → logprob: -7.810210227966309
    8. ')' → logprob: -8.185210227966309
    9. 'for' → logprob: -8.560210227966309
    10. 'newline' → logprob: -8.685210227966309

Token 206: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1138584613800049
    2. 'result' → logprob: -1.4888584613800049
    3. '   ' → logprob: -1.7388584613800049
    4. 'for' → logprob: -2.613858461380005
    5. ' result' → logprob: -2.738858461380005
    6. ' res' → logprob: -3.238858461380005
    7. '       ' → logprob: -3.363858461380005
    8. 'res' → logprob: -4.113858222961426
    9. 'max' → logprob: -4.988858222961426
    10. ' ans' → logprob: -5.238858222961426

Token 207: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5006892681121826
    2. 'best' → logprob: -1.0006892681121826
    3. 'c' → logprob: -4.000689506530762
    4. 'ans' → logprob: -5.875689506530762
    5. 'min' → logprob: -5.875689506530762
    6. 'results' → logprob: -7.375689506530762
    7. 'next' → logprob: -7.500689506530762
    8. 'result' → logprob: -8.250689506530762
    9. 'paths' → logprob: -8.875689506530762
    10. ' best' → logprob: -9.250689506530762

Token 208: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.4391956685576588e-05
    2. ' u' → logprob: -10.750024795532227
    3. 's' → logprob: -14.000024795532227
    4. 'g' → logprob: -14.750024795532227
    5. 'len' → logprob: -15.000024795532227
    6. '   ' → logprob: -15.125024795532227
    7. '[u' → logprob: -15.250024795532227
    8. 'not' → logprob: -15.375024795532227
    9. '	u' → logprob: -15.625024795532227
    10. '(u' → logprob: -16.750024795532227

Token 209: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021239519119263
    2. ' ==' → logprob: -2.350212335586548
    3. '=' → logprob: -13.600212097167969
    4. '>=' → logprob: -13.600212097167969
    5. ']==' → logprob: -14.100212097167969
    6. ')==' → logprob: -14.350212097167969
    7. '==(' → logprob: -14.475212097167969
    8. '==
' → logprob: -15.225212097167969
    9. '()==' → logprob: -15.350212097167969
    10. ')' → logprob: -15.725212097167969

Token 210: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.001754310796968639
    2. 's' → logprob: -6.501754283905029
    3. ' g' → logprob: -8.876754760742188
    4. 'n' → logprob: -9.126754760742188
    5. ' s' → logprob: -13.626754760742188
    6. '   ' → logprob: -14.001754760742188
    7. '(g' → logprob: -14.376754760742188
    8. '	g' → logprob: -15.626754760742188
    9. ' n' → logprob: -15.751754760742188
    10. '(s' → logprob: -15.876754760742188

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.57616126537323
    2. ':
' → logprob: -0.82616126537323
    3. ':return' → logprob: -8.57616138458252
    4. '):
' → logprob: -11.07616138458252
    5. '           ' → logprob: -11.95116138458252
    6. ':
' → logprob: -12.32616138458252
    7. '):' → logprob: -12.82616138458252
    8. ' or' → logprob: -13.57616138458252
    9. '       ' → logprob: -14.07616138458252
    10. ')' → logprob: -14.57616138458252

Token 212: '               ' (ID: 506)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.11004689335823059
    2. '"' → logprob: -3.110046863555908
    3. 'dp' → logprob: -3.485046863555908
    4. 'return' → logprob: -4.485046863555908
    5. '''' → logprob: -4.735046863555908
    6. ' ""' → logprob: -6.235046863555908
    7. '[]' → logprob: -6.860046863555908
    8. ''' → logprob: -6.985046863555908
    9. '           ' → logprob: -6.985046863555908
    10. '[' → logprob: -7.235046863555908

Token 213: ' dp' (ID: 21546)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.04187321290373802
    2. '''' → logprob: -3.2918732166290283
    3. '"' → logprob: -5.916872978210449
    4. '[]' → logprob: -7.541872978210449
    5. 'return' → logprob: -8.54187297821045
    6. ' ""' → logprob: -9.29187297821045
    7. '0' → logprob: -9.29187297821045
    8. '[' → logprob: -9.79187297821045
    9. 'dp' (adapté à ' dp') → logprob: -10.66687297821045
    10. ''' → logprob: -10.66687297821045

Token 214: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.5577775128767826e-06
    2. 'u' → logprob: -12.125005722045898
    3. '[' → logprob: -17.7500057220459
    4. '	u' → logprob: -18.0000057220459
    5. '<u' → logprob: -18.5000057220459
    6. '[user' → logprob: -19.7500057220459
    7. '(u' → logprob: -19.7500057220459
    8. '```' → logprob: -19.7500057220459
    9. '=u' → logprob: -20.5000057220459
    10. '[
' → logprob: -20.6250057220459

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16068701446056366
    2. ']=' → logprob: -2.03568696975708
    3. '=' → logprob: -4.03568696975708
    4. ']="' → logprob: -9.285687446594238
    5. ']='' → logprob: -9.910687446594238
    6. ']=(' → logprob: -10.785687446594238
    7. ' =' → logprob: -12.410687446594238
    8. '"]=' → logprob: -13.410687446594238
    9. ' ]' → logprob: -13.660687446594238
    10. '=""' → logprob: -13.785687446594238

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001079133595339954
    2. ' =' → logprob: -6.876079082489014
    3. '=""' → logprob: -10.251079559326172
    4. '=''' → logprob: -11.501079559326172
    5. '=[]' → logprob: -15.251079559326172
    6. '="' → logprob: -15.876079559326172
    7. '=[' → logprob: -15.876079559326172
    8. '='' → logprob: -16.751079559326172
    9. '=('' → logprob: -17.251079559326172
    10. '=b' → logprob: -17.251079559326172

Token 217: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.00698827626183629
    2. '''' → logprob: -5.006988048553467
    3. '"' → logprob: -8.631988525390625
    4. '["' → logprob: -10.256988525390625
    5. '[]' → logprob: -10.506988525390625
    6. '("")' → logprob: -11.631988525390625
    7. ' ""' → logprob: -11.631988525390625
    8. '['' → logprob: -12.256988525390625
    9. '"":' → logprob: -12.381988525390625
    10. ''' → logprob: -13.506988525390625

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2017473727464676
    2. '           ' → logprob: -1.7017474174499512
    3. '       ' → logprob: -9.326746940612793
    4. '<|end|>' → logprob: -9.826746940612793
    5. '   ' → logprob: -10.576746940612793
    6. 'else' → logprob: -10.826746940612793
    7. 'return' → logprob: -10.951746940612793
    8. '\n' → logprob: -10.951746940612793
    9. '(vis' → logprob: -11.451746940612793
    10. '[' → logprob: -11.451746940612793

Token 219: ' visiting' (ID: 18798)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.14679794013500214
    2. 'return' → logprob: -2.2717978954315186
    3. '           ' → logprob: -3.7717978954315186
    4. '               ' → logprob: -5.146798133850098
    5. ' visiting' → logprob: -5.646798133850098
    6. '       ' → logprob: -7.646798133850098
    7. 'visit' → logprob: -8.396798133850098
    8. 'visited' → logprob: -9.146798133850098
    9. ' return' → logprob: -9.396798133850098
    10. '
' → logprob: -9.771798133850098

Token 220: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.250003814697266
    3. 'u' → logprob: -13.250003814697266
    4. '	u' → logprob: -17.375003814697266
    5. '[user' → logprob: -17.500003814697266
    6. 'False' → logprob: -18.125003814697266
    7. '=False' → logprob: -18.125003814697266
    8. '(u' → logprob: -18.500003814697266
    9. '```' → logprob: -18.750003814697266
    10. ']' → logprob: -19.000003814697266

Token 221: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.25196391344070435
    2. ']' → logprob: -1.5019638538360596
    3. '=False' → logprob: -11.00196361541748
    4. '=' → logprob: -11.25196361541748
    5. ')=' → logprob: -13.50196361541748
    6. ']==' → logprob: -13.50196361541748
    7. ']=-' → logprob: -14.62696361541748
    8. ' ]' → logprob: -14.75196361541748
    9. '"]=' → logprob: -14.75196361541748
    10. 'False' → logprob: -15.12696361541748

Token 222: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.935296834039036e-06
    2. ' False' → logprob: -12.75000286102295
    3. '(False' → logprob: -20.750003814697266
    4. '   ' → logprob: -21.625003814697266
    5. '=False' → logprob: -22.500003814697266
    6. 'F' → logprob: -22.625003814697266
    7. 'FALSE' → logprob: -23.125003814697266
    8. 'false' → logprob: -23.125003814697266
    9. 'True' → logprob: -23.625003814697266
    10. '.False' → logprob: -23.750003814697266

Token 223: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2896063029766083
    2. '           ' → logprob: -1.4146063327789307
    3. '<|end|>' → logprob: -4.914606094360352
    4. '       ' → logprob: -8.164606094360352
    5. '
' → logprob: -8.414606094360352
    6. '<|end|>' → logprob: -9.039606094360352
    7. '   ' → logprob: -9.414606094360352
    8. '\n' → logprob: -9.664606094360352
    9. '	           ' → logprob: -9.914606094360352
    10. '            
' → logprob: -10.164606094360352

Token 224: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05851495638489723
    2. '               ' → logprob: -3.0585150718688965
    3. '       ' → logprob: -5.5585150718688965
    4. '   ' → logprob: -6.0585150718688965
    5. '<|end|>' → logprob: -6.8085150718688965
    6. '\n' → logprob: -6.9335150718688965
    7. 'return' → logprob: -7.6835150718688965
    8. '
' → logprob: -7.8085150718688965
    9. '	       ' → logprob: -9.183514595031738
    10. '	return' → logprob: -9.558514595031738

Token 225: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0018142868066206574
    2. '               ' → logprob: -6.751814365386963
    3. ' return' → logprob: -7.376814365386963
    4. '           ' → logprob: -11.126813888549805
    5. '	return' → logprob: -13.001813888549805
    6. '   ' → logprob: -14.501813888549805
    7. ':return' → logprob: -14.876813888549805
    8. '       ' → logprob: -15.876813888549805
    9. '                   ' → logprob: -16.626813888549805
    10. '{return' → logprob: -16.751813888549805

Token 226: ' dp' (ID: 21546)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -7.398067828034982e-05
    2. '"' → logprob: -10.37507438659668
    3. 'dp' → logprob: -10.50007438659668
    4. '''' → logprob: -11.12507438659668
    5. ' ""' → logprob: -15.25007438659668
    6. '"":' → logprob: -15.75007438659668
    7. '"""' → logprob: -17.25007438659668
    8. '"",' → logprob: -17.37507438659668
    9. '""""' → logprob: -18.75007438659668
    10. ' dp' → logprob: -19.00007438659668

Token 227: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.625000953674316
    3. '<u' → logprob: -18.625
    4. '[' → logprob: -20.0
    5. '	u' → logprob: -20.0
    6. '(u' → logprob: -20.125
    7. ' u' → logprob: -20.375
    8. ',u' → logprob: -21.0
    9. '```' → logprob: -21.75
    10. '_u' → logprob: -21.875

Token 228: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016317633911967278
    2. '           ' → logprob: -4.516317844390869
    3. ')
' → logprob: -5.266317844390869
    4. ']' → logprob: -9.891317367553711
    5. '')' → logprob: -11.641317367553711
    6. '")' → logprob: -11.641317367553711
    7. '       ' → logprob: -12.016317367553711
    8. '<|end|>' → logprob: -12.891317367553711
    9. '   ' → logprob: -13.016317367553711
    10. '               ' → logprob: -13.141317367553711

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018502715975046158
    2. '       ' → logprob: -5.268502712249756
    3. '   ' → logprob: -5.643502712249756
    4. ' for' → logprob: -5.643502712249756
    5. '
' → logprob: -6.643502712249756
    6. 'for' → logprob: -6.643502712249756
    7. '            
' → logprob: -6.643502712249756
    8. '    
' → logprob: -7.518502712249756
    9. 'n' → logprob: -7.518502712249756
    10. '```' → logprob: -8.268503189086914

Token 230: ' candidates' (ID: 18116)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0385721921920776
    2. 'for' → logprob: -1.1635721921920776
    3. 'best' → logprob: -1.6635721921920776
    4. ' best' → logprob: -2.788572311401367
    5. 'min' → logprob: -3.913572311401367
    6. 'res' → logprob: -3.913572311401367
    7. ' min' → logprob: -4.538572311401367
    8. ' res' → logprob: -4.913572311401367
    9. '   ' → logprob: -5.038572311401367
    10. 'result' → logprob: -5.413572311401367

Token 231: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08046426624059677
    2. ' =' → logprob: -2.5804643630981445
    3. '=[]' → logprob: -6.4554643630981445
    4. '=[]
' → logprob: -13.955464363098145
    5. '[]' → logprob: -15.955464363098145
    6. '=[' → logprob: -16.580463409423828
    7. ',' → logprob: -16.580463409423828
    8. '={}' → logprob: -16.830463409423828
    9. '＝' → logprob: -17.080463409423828
    10. '=[],' → logprob: -17.205463409423828

Token 232: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.251962274312973
    2. '[]
' → logprob: -1.5019623041152954
    3. '[]

' → logprob: -10.751962661743164
    4. '[' → logprob: -11.751962661743164
    5. ' []' → logprob: -13.626962661743164
    6. '[
' → logprob: -13.751962661743164
    7. '[]"' → logprob: -14.501962661743164
    8. ' []
' → logprob: -14.751962661743164
    9. '[])' → logprob: -15.001962661743164
    10. '[]}' → logprob: -16.376962661743164

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14707252383232117
    2. ' for' → logprob: -2.2720725536346436
    3. '       ' → logprob: -4.1470723152160645
    4. 'for' → logprob: -4.1470723152160645
    5. '   ' → logprob: -6.8970723152160645
    6. '            
' → logprob: -8.147072792053223
    7. '
' → logprob: -8.772072792053223
    8. ' 
' → logprob: -8.897072792053223
    9. '	for' → logprob: -9.147072792053223
    10. '        
' → logprob: -9.522072792053223

Token 234: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12770290672779083
    2. ' for' → logprob: -2.1277029514312744
    3. '           ' → logprob: -7.502702713012695
    4. '       ' → logprob: -8.502702713012695
    5. '   ' → logprob: -11.127702713012695
    6. '
' → logprob: -13.127702713012695
    7. '	for' → logprob: -14.127702713012695
    8. ' 
' → logprob: -14.377702713012695
    9. ' ' → logprob: -14.627702713012695
    10. '               ' → logprob: -14.752702713012695

Token 235: ' lab' (ID: 9887)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.012736836448311806
    2. 'label' → logprob: -4.387736797332764
    3. ' lab' → logprob: -8.887737274169922
    4. 'l' → logprob: -11.012737274169922
    5. 'lbl' → logprob: -11.012737274169922
    6. '(' → logprob: -11.137737274169922
    7. '(label' → logprob: -11.262737274169922
    8. 'c' → logprob: -12.137737274169922
    9. '(l' → logprob: -12.512737274169922
    10. '_lab' → logprob: -12.512737274169922

Token 236: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1559886634349823
    2. ',e' → logprob: -2.1559886932373047
    3. ',v' → logprob: -4.405988693237305
    4. ',u' → logprob: -5.030988693237305
    5. ',c' → logprob: -5.155988693237305
    6. ',val' → logprob: -6.905988693237305
    7. ',value' → logprob: -7.405988693237305
    8. ',pos' → logprob: -7.530988693237305
    9. ',next' → logprob: -7.780988693237305
    10. ',l' → logprob: -7.905988693237305

Token 237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06308314204216003
    2. 'in' → logprob: -2.8130831718444824
    3. ',' → logprob: -7.188083171844482
    4. ')' → logprob: -8.188082695007324
    5. ',v' → logprob: -11.563082695007324
    6. '[' → logprob: -11.688082695007324
    7. '```' → logprob: -11.938082695007324
    8. '   ' → logprob: -12.188082695007324
    9. '
' → logprob: -12.188082695007324
    10. ',in' → logprob: -12.313082695007324

Token 238: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -9.65101717156358e-05
    2. ' graph' → logprob: -9.250096321105957
    3. '(graph' → logprob: -15.250096321105957
    4. '	graph' → logprob: -16.000097274780273
    5. '_graph' → logprob: -19.500097274780273
    6. '   ' → logprob: -19.875097274780273
    7. '
' → logprob: -20.000097274780273
    8. 'Graph' → logprob: -20.125097274780273
    9. 'graphql' → logprob: -20.375097274780273
    10. 'raph' → logprob: -20.375097274780273

Token 239: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.4021237802808173e-05
    2. 'u' → logprob: -11.375014305114746
    3. '[' → logprob: -13.250014305114746
    4. '[v' → logprob: -15.375014305114746
    5. '(u' → logprob: -16.25001335144043
    6. '[s' → logprob: -16.62501335144043
    7. 's' → logprob: -16.87501335144043
    8. ',u' → logprob: -17.62501335144043
    9. '[a' → logprob: -17.87501335144043
    10. '```' → logprob: -18.00001335144043

Token 240: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.14316557347774506
    2. ']:
' → logprob: -2.1431655883789062
    3. '):' → logprob: -4.893165588378906
    4. '):
' → logprob: -5.393165588378906
    5. ':' → logprob: -6.518165588378906
    6. ']):' → logprob: -6.768165588378906
    7. ']' → logprob: -7.018165588378906
    8. ']):
' → logprob: -8.393165588378906
    9. ']:
' → logprob: -9.643165588378906
    10. '       ' → logprob: -10.018165588378906

Token 241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007344625773839653
    2. '           ' → logprob: -8.625734329223633
    3. '                
' → logprob: -9.000734329223633
    4. 'next' → logprob: -9.250734329223633
    5. '```' → logprob: -9.750734329223633
    6. 'token' → logprob: -9.875734329223633
    7. 'tokens' → logprob: -10.250734329223633
    8. '                   ' → logprob: -10.625734329223633
    9. ' if' → logprob: -10.625734329223633
    10. ' next' → logprob: -11.125734329223633

Token 242: ' suffix' (ID: 43412)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14684848487377167
    2. ' res' → logprob: -2.896848440170288
    3. 'next' → logprob: -3.521848440170288
    4. '                   ' → logprob: -3.646848440170288
    5. '               ' → logprob: -4.521848678588867
    6. 'path' → logprob: -5.021848678588867
    7. ' nxt' → logprob: -5.646848678588867
    8. 'result' → logprob: -6.646848678588867
    9. ' next' → logprob: -7.021848678588867
    10. 'sub' → logprob: -7.771848678588867

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022859513759613
    2. ' =' → logprob: -1.9102286100387573
    3. '_result' → logprob: -13.410228729248047
    4. '=result' → logprob: -14.285228729248047
    5. 's' → logprob: -15.035228729248047
    6. '_res' → logprob: -15.535228729248047
    7. 'result' → logprob: -15.535228729248047
    8. '_=' → logprob: -15.660228729248047
    9. '=s' → logprob: -15.785228729248047
    10. 'dfs' → logprob: -15.785228729248047

Token 244: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.04300342872738838
    2. ' dfs' → logprob: -3.1680033206939697
    3. 'df' → logprob: -13.29300308227539
    4. '               ' → logprob: -14.29300308227539
    5. '
' → logprob: -14.41800308227539
    6. 'd' → logprob: -14.54300308227539
    7. 'dp' → logprob: -15.54300308227539
    8. '           ' → logprob: -15.54300308227539
    9. '                   ' → logprob: -15.79300308227539
    10. 'None' → logprob: -16.16800308227539

Token 245: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.452426608419046e-05
    2. '(' → logprob: -10.62503433227539
    3. '(
' → logprob: -11.62503433227539
    4. ' (' → logprob: -14.00003433227539
    5. 'v' → logprob: -14.87503433227539
    6. '```' → logprob: -18.12503433227539
    7. ')v' → logprob: -18.37503433227539
    8. ')' → logprob: -18.87503433227539
    9. ',v' → logprob: -19.00003433227539
    10. '
' → logprob: -19.12503433227539

Token 246: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029756855219602585
    2. ')' → logprob: -3.529756784439087
    3. ' )
' → logprob: -12.404756546020508
    4. ')
' → logprob: -13.279756546020508
    5. ')

' → logprob: -15.279756546020508
    6. '               ' → logprob: -16.279756546020508
    7. ' )' → logprob: -16.404756546020508
    8. ')`
' → logprob: -16.529756546020508
    9. '           ' → logprob: -17.029756546020508
    10. '
' → logprob: -17.279756546020508

Token 247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.507972572464496e-05
    2. '<|end|>' → logprob: -10.12509536743164
    3. '           ' → logprob: -10.50009536743164
    4. ' if' → logprob: -11.25009536743164
    5. 'if' → logprob: -12.50009536743164
    6. '       ' → logprob: -12.87509536743164
    7. '```' → logprob: -13.12509536743164
    8. '                   ' → logprob: -13.50009536743164
    9. '<|end|>' → logprob: -13.50009536743164
    10. '              ' → logprob: -14.25009536743164

Token 248: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5046237707138062
    2. '               ' → logprob: -1.0046237707138062
    3. ' if' → logprob: -3.5046238899230957
    4. '           ' → logprob: -11.379623413085938
    5. ' ' → logprob: -11.879623413085938
    6. '<|end|>' → logprob: -12.879623413085938
    7. 'If' → logprob: -13.879623413085938
    8. '                   ' → logprob: -14.129623413085938
    9. '```' → logprob: -14.254623413085938
    10. '       ' → logprob: -14.254623413085938

Token 249: ' suffix' (ID: 43412)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.038043782114982605
    2. ' suffix' → logprob: -3.288043737411499
    3. 's' → logprob: -13.038043975830078
    4. '_suffix' → logprob: -16.788043975830078
    5. 'Suffix' → logprob: -17.413043975830078
    6. 'uffix' → logprob: -17.538043975830078
    7. '                       ' → logprob: -17.788043975830078
    8. '                   ' → logprob: -18.413043975830078
    9. '               ' → logprob: -18.663043975830078
    10. ' ' → logprob: -18.663043975830078

Token 250: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1269630640745163
    2. 'is' → logprob: -2.1269631385803223
    3. '!=' → logprob: -11.001962661743164
    4. '==' → logprob: -11.626962661743164
    5. ')' → logprob: -12.126962661743164
    6. 's' → logprob: -14.376962661743164
    7. ' ' → logprob: -14.501962661743164
    8. ')is' → logprob: -14.501962661743164
    9. 'i' → logprob: -14.876962661743164
    10. 'if' → logprob: -15.126962661743164

Token 251: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.019076436758041382
    2. ' not' → logprob: -4.019076347351074
    3. 'None' → logprob: -7.019076347351074
    4. ' None' → logprob: -11.019076347351074
    5. 'Not' → logprob: -12.394076347351074
    6. '
' → logprob: -12.644076347351074
    7. '""' → logprob: -13.394076347351074
    8. 'none' → logprob: -13.519076347351074
    9. '	not' → logprob: -14.144076347351074
    10. ' ' → logprob: -14.894076347351074

Token 252: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.4391956685576588e-05
    2. ' None' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.000024795532227
    4. 'not' → logprob: -17.000024795532227
    5. '
' → logprob: -17.125024795532227
    6. 'none' → logprob: -17.750024795532227
    7. '       ' → logprob: -18.750024795532227
    8. '```' → logprob: -18.750024795532227
    9. '_None' → logprob: -18.750024795532227
    10. '(None' → logprob: -18.750024795532227

Token 253: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06847909092903137
    2. ':' → logprob: -3.318479061126709
    3. '                   ' → logprob: -3.693479061126709
    4. ' and' → logprob: -5.568479061126709
    5. '               ' → logprob: -7.193479061126709
    6. '           ' → logprob: -8.693479537963867
    7. '):
' → logprob: -8.943479537963867
    8. '                       ' → logprob: -9.318479537963867
    9. ',' → logprob: -10.318479537963867
    10. ' :
' → logprob: -10.443479537963867

Token 254: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017985886661335826
    2. '               ' → logprob: -6.751798629760742
    3. '           ' → logprob: -8.376798629760742
    4. ' candidates' → logprob: -8.376798629760742
    5. 'c' → logprob: -9.376798629760742
    6. '                       ' → logprob: -11.126798629760742
    7. ',' → logprob: -11.501798629760742
    8. 'candidate' → logprob: -11.501798629760742
    9. ' c' → logprob: -11.876798629760742
    10. '
' → logprob: -12.251798629760742

Token 255: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18129564821720123
    2. ' candidates' → logprob: -2.18129563331604
    3. '               ' → logprob: -3.30629563331604
    4. '                   ' → logprob: -4.306295871734619
    5. ' c' → logprob: -7.056295871734619
    6. 'candidate' → logprob: -7.306295871734619
    7. '   ' → logprob: -7.806295871734619
    8. 'cand' → logprob: -8.181295394897461
    9. '           ' → logprob: -8.431295394897461
    10. ' candidate' → logprob: -10.056295394897461

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.015305552864447e-05
    2. ' .' → logprob: -10.375060081481934
    3. '.' → logprob: -10.500060081481934
    4. '                   ' → logprob: -14.750060081481934
    5. '           ' → logprob: -15.250060081481934
    6. 'append' → logprob: -15.750060081481934
    7. '.app' → logprob: -16.12506103515625
    8. '=' → logprob: -16.50006103515625
    9. '               ' → logprob: -16.62506103515625
    10. '].' → logprob: -17.12506103515625

Token 257: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00024715426843613386
    2. '(' → logprob: -8.75024700164795
    3. '((' → logprob: -9.37524700164795
    4. '(str' → logprob: -13.62524700164795
    5. '(s' → logprob: -14.12524700164795
    6. 'lab' → logprob: -14.62524700164795
    7. ' (' → logprob: -14.87524700164795
    8. 'l' → logprob: -15.50024700164795
    9. '(f' → logprob: -16.125247955322266
    10. '(L' → logprob: -16.375247955322266

Token 258: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.02787892520427704
    2. 'suffix' → logprob: -4.527878761291504
    3. 'lab' → logprob: -5.027878761291504
    4. '(ab' → logprob: -5.402878761291504
    5. 'abel' → logprob: -6.777878761291504
    6. '(s' → logprob: -6.902878761291504
    7. '(l' → logprob: -7.777878761291504
    8. '(' → logprob: -7.777878761291504
    9. 'abs' → logprob: -7.902878761291504
    10. '(c' → logprob: -8.277878761291504

Token 259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020828247070312
    2. ' +' → logprob: -2.350208282470703
    3. '+s' → logprob: -14.350208282470703
    4. '+
' → logprob: -14.975208282470703
    5. ' ' → logprob: -15.100208282470703
    6. '＋' → logprob: -15.975208282470703
    7. ' +
' → logprob: -16.350208282470703
    8. 'suffix' → logprob: -17.350208282470703
    9. ')+' → logprob: -17.600208282470703
    10. '+xml' → logprob: -17.725208282470703

Token 260: 'suffix' (ID: 71868)
  Prédit: 'suffix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.0007115975022315979
    2. ' suffix' → logprob: -7.250711441040039
    3. 's' → logprob: -14.000711441040039
    4. '(s' → logprob: -14.500711441040039
    5. '_suffix' → logprob: -15.750711441040039
    6. 'uffix' → logprob: -16.25071144104004
    7. '```' → logprob: -16.87571144104004
    8. 'Suffix' → logprob: -18.00071144104004
    9. ' ' → logprob: -18.37571144104004
    10. '`s' → logprob: -18.37571144104004

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25447553396224976
    2. ')
' → logprob: -1.5044755935668945
    3. '           ' → logprob: -6.0044755935668945
    4. '               ' → logprob: -10.754475593566895
    5. ' )
' → logprob: -11.004475593566895
    6. ' )' → logprob: -11.254475593566895
    7. '       ' → logprob: -11.379475593566895
    8. ')`
' → logprob: -13.004475593566895
    9. '')' → logprob: -13.254475593566895
    10. ')

' → logprob: -13.379475593566895

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016877970192581415
    2. '```' → logprob: -7.126688003540039
    3. '       ' → logprob: -7.751688003540039
    4. '
' → logprob: -8.626688003540039
    5. '<|end|>' → logprob: -9.376688003540039
    6. '            
' → logprob: -9.501688003540039
    7. ')' → logprob: -11.126688003540039
    8. '               ' → logprob: -11.251688003540039
    9. '   ' → logprob: -11.376688003540039
    10. '    
' → logprob: -11.626688003540039

Token 263: ' visiting' (ID: 18798)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6412931084632874
    2. ' if' → logprob: -1.1412930488586426
    3. 'if' → logprob: -2.5162930488586426
    4. '       ' → logprob: -2.6412930488586426
    5. '```' → logprob: -6.891293048858643
    6. '   ' → logprob: -7.516293048858643
    7. '
' → logprob: -8.7662935256958
    8. ' candidates' → logprob: -9.2662935256958
    9. '               ' → logprob: -10.2662935256958
    10. ')' → logprob: -10.8912935256958

Token 264: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.15441757265944e-05
    2. '[' → logprob: -10.375031471252441
    3. '[v' → logprob: -15.625031471252441
    4. '```' → logprob: -17.500032424926758
    5. 'u' → logprob: -17.750032424926758
    6. ' [' → logprob: -17.875032424926758
    7. '[user' → logprob: -18.125032424926758
    8. '[:]' → logprob: -18.125032424926758
    9. '=u' → logprob: -18.375032424926758
    10. ']' → logprob: -19.000032424926758

Token 265: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.10025358200073242
    2. ']' → logprob: -2.3502535820007324
    3. '=' → logprob: -10.10025405883789
    4. '=False' → logprob: -12.60025405883789
    5. ' ]' → logprob: -14.10025405883789
    6. ']=-' → logprob: -14.72525405883789
    7. ']==' → logprob: -14.85025405883789
    8. '']=' → logprob: -14.85025405883789
    9. '=True' → logprob: -15.60025405883789
    10. '"]=' → logprob: -15.72525405883789

Token 266: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.9361264946837764e-07
    2. ' False' → logprob: -15.75
    3. '(False' → logprob: -20.875
    4. 'false' → logprob: -21.75
    5. '=False' → logprob: -23.125
    6. '[' → logprob: -24.25
    7. 'FALSE' → logprob: -24.25
    8. 'F' → logprob: -24.5
    9. '.False' → logprob: -24.5
    10. '   ' → logprob: -24.75

Token 267: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01297950278967619
    2. ' if' → logprob: -5.012979507446289
    3. 'if' → logprob: -5.262979507446289
    4. '
' → logprob: -8.012979507446289
    5. '       ' → logprob: -8.012979507446289
    6. '   ' → logprob: -8.262979507446289
    7. 'dp' → logprob: -9.512979507446289
    8. '```' → logprob: -10.512979507446289
    9. '<|end|>' → logprob: -11.137979507446289
    10. ' dp' → logprob: -12.262979507446289

Token 268: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0203839540481567
    2. 'if' → logprob: -1.1453839540481567
    3. '           ' → logprob: -1.2703839540481567
    4. '   ' → logprob: -3.770383834838867
    5. '       ' → logprob: -4.145383834838867
    6. 'dp' → logprob: -6.770383834838867
    7. '```' → logprob: -8.270383834838867
    8. '
' → logprob: -8.270383834838867
    9. ' dp' → logprob: -8.895383834838867
    10. ' ' → logprob: -10.770383834838867

Token 269: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005901061464101076
    2. ' if' → logprob: -5.255900859832764
    3. 'dp' → logprob: -7.755900859832764
    4. '   ' → logprob: -8.505901336669922
    5. '       ' → logprob: -10.380901336669922
    6. '           ' → logprob: -12.505901336669922
    7. ' dp' → logprob: -13.380901336669922
    8. '```' → logprob: -15.880901336669922
    9. ' ' → logprob: -16.380901336669922
    10. '  ' → logprob: -18.255901336669922

Token 270: ' not' (ID: 625)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04758632555603981
    2. ' candidates' → logprob: -3.422586441040039
    3. ' not' → logprob: -4.422586441040039
    4. 'not' → logprob: -6.422586441040039
    5. 'len' → logprob: -8.797586441040039
    6. ' len' → logprob: -9.922586441040039
    7. ' c' → logprob: -11.297586441040039
    8. 'cand' → logprob: -13.047586441040039
    9. ' ' → logprob: -14.172586441040039
    10. '   ' → logprob: -15.547586441040039

Token 271: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.06196914613246918
    2. 'c' → logprob: -2.811969041824341
    3. '_candidates' → logprob: -14.436968803405762
    4. 'cand' → logprob: -14.686968803405762
    5. ' candidats' → logprob: -15.686968803405762
    6. 'andidates' → logprob: -16.561969757080078
    7. 'Candidates' → logprob: -16.686969757080078
    8. ' candidatos' → logprob: -16.936969757080078
    9. '   ' → logprob: -16.936969757080078
    10. '	c' → logprob: -17.436969757080078

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07091257721185684
    2. ':
' → logprob: -2.6959125995635986
    3. ':return' → logprob: -6.9459123611450195
    4. ')' → logprob: -12.07091236114502
    5. '):
' → logprob: -13.57091236114502
    6. '):' → logprob: -13.57091236114502
    7. ' or' → logprob: -13.94591236114502
    8. '=' → logprob: -14.07091236114502
    9. '==' → logprob: -14.44591236114502
    10. 'return' → logprob: -14.82091236114502

Token 273: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4237390160560608
    2. 'dp' → logprob: -2.048738956451416
    3. '           ' → logprob: -2.173738956451416
    4. ' dp' → logprob: -2.548738956451416
    5. 'return' → logprob: -4.673738956451416
    6. ' return' → logprob: -5.048738956451416
    7. '   ' → logprob: -5.048738956451416
    8. '       ' → logprob: -6.173738956451416
    9. ',' → logprob: -9.923739433288574
    10. 'None' → logprob: -9.923739433288574

Token 274: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.02366049587726593
    2. ' dp' → logprob: -3.77366042137146
    3. '               ' → logprob: -8.273660659790039
    4. 'return' → logprob: -9.523660659790039
    5. '           ' → logprob: -10.148660659790039
    6. '   ' → logprob: -10.648660659790039
    7. '	dp' → logprob: -11.523660659790039
    8. ' return' → logprob: -12.148660659790039
    9. '
' → logprob: -12.898660659790039
    10. '       ' → logprob: -13.023660659790039

Token 275: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.625
    3. '[' → logprob: -21.125
    4. '[n' → logprob: -22.125
    5. '<u' → logprob: -22.125
    6. '\[' → logprob: -22.125
    7. '[v' → logprob: -22.25
    8. '```' → logprob: -22.375
    9. '	u' → logprob: -22.5
    10. '[user' → logprob: -22.75

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04920094460248947
    2. ']=' → logprob: -3.049201011657715
    3. '=' → logprob: -7.799201011657715
    4. '[u' → logprob: -8.799201011657715
    5. ']==' → logprob: -10.549201011657715
    6. ' =' → logprob: -11.924201011657715
    7. '[' → logprob: -12.174201011657715
    8. '=None' → logprob: -12.924201011657715
    9. '=u' → logprob: -12.924201011657715
    10. ']={' → logprob: -12.924201011657715

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.052377623040229e-05
    2. ' =' → logprob: -9.625070571899414
    3. '=None' → logprob: -12.500070571899414
    4. '=[]' → logprob: -14.250070571899414
    5. '=False' → logprob: -17.250070571899414
    6. '=[' → logprob: -17.625070571899414
    7. '=
' → logprob: -17.750070571899414
    8. '=set' → logprob: -18.375070571899414
    9. '=

' → logprob: -18.500070571899414
    10. '=[]
' → logprob: -18.875070571899414

Token 278: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.590104698669165e-05
    2. ' None' → logprob: -9.750085830688477
    3. '""' → logprob: -10.875085830688477
    4. '"' → logprob: -12.000085830688477
    5. '   ' → logprob: -13.750085830688477
    6. 'False' → logprob: -15.000085830688477
    7. '''' → logprob: -15.000085830688477
    8. '(None' → logprob: -15.625085830688477
    9. '0' → logprob: -15.750085830688477
    10. '  ' → logprob: -16.000085830688477

Token 279: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047687262296676636
    2. 'else' → logprob: -3.297687292098999
    3. ' else' → logprob: -4.79768705368042
    4. '       ' → logprob: -6.92268705368042
    5. '               ' → logprob: -9.172687530517578
    6. 'return' → logprob: -9.297687530517578
    7. '<|end|>' → logprob: -10.047687530517578
    8. '   ' → logprob: -10.297687530517578
    9. '```' → logprob: -10.422687530517578
    10. '
' → logprob: -10.922687530517578

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05086293816566467
    2. 'else' → logprob: -3.425863027572632
    3. '       ' → logprob: -4.925862789154053
    4. ' else' → logprob: -5.175862789154053
    5. '               ' → logprob: -5.800862789154053
    6. 'return' → logprob: -7.175862789154053
    7. '   ' → logprob: -8.425863265991211
    8. ' return' → logprob: -9.925863265991211
    9. '=' → logprob: -10.675863265991211
    10. '
' → logprob: -10.675863265991211

Token 281: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0038412867579609156
    2. '           ' → logprob: -6.503841400146484
    3. ' else' → logprob: -6.753841400146484
    4. '       ' → logprob: -6.753841400146484
    5. '   ' → logprob: -13.253841400146484
    6. 'return' → logprob: -14.628841400146484
    7. '	else' → logprob: -14.878841400146484
    8. 'elif' → logprob: -15.128841400146484
    9. '_else' → logprob: -15.878841400146484
    10. '```' → logprob: -16.003841400146484

Token 282: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7611646056175232
    2. ' dp' → logprob: -1.511164665222168
    3. '               ' → logprob: -1.511164665222168
    4. '           ' → logprob: -3.386164665222168
    5. ':' → logprob: -3.886164665222168
    6. 'dp' → logprob: -4.136164665222168
    7. ' candidates' → logprob: -4.511164665222168
    8. '):
' → logprob: -5.261164665222168
    9. ' =' → logprob: -5.886164665222168
    10. ' :
' → logprob: -7.386164665222168

Token 283: '               ' (ID: 506)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.1340932846069336
    2. 'dp' → logprob: -2.1340932846069336
    3. '           ' → logprob: -5.009093284606934
    4. '   ' → logprob: -8.134093284606934
    5. '       ' → logprob: -9.384093284606934
    6. ' candidates' → logprob: -10.384093284606934
    7. '               ' → logprob: -10.634093284606934
    8. '	dp' → logprob: -10.634093284606934
    9. ' ' → logprob: -12.884093284606934
    10. '(dp' → logprob: -14.009093284606934

Token 284: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.20145757496356964
    2. ' dp' → logprob: -1.7014576196670532
    3. '           ' → logprob: -10.701457977294922
    4. '   ' → logprob: -11.326457977294922
    5. '	dp' → logprob: -12.076457977294922
    6. ' candidates' → logprob: -13.076457977294922
    7. '       ' → logprob: -14.076457977294922
    8. ' ' → logprob: -14.826457977294922
    9. '_dp' → logprob: -15.326457977294922
    10. 'c' → logprob: -15.826457977294922

Token 285: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -15.0
    3. '[' → logprob: -18.75
    4. '=u' → logprob: -21.125
    5. '<u' → logprob: -21.5
    6. '   ' → logprob: -21.5
    7. '(u' → logprob: -21.875
    8. '	u' → logprob: -21.875
    9. '           ' → logprob: -22.375
    10. '[v' → logprob: -22.75

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4542773962020874
    2. ']=' → logprob: -1.0792773962020874
    3. '=' → logprob: -3.704277515411377
    4. ' =' → logprob: -8.329277038574219
    5. '=min' → logprob: -8.329277038574219
    6. ']=(' → logprob: -9.954277038574219
    7. ')=' → logprob: -11.204277038574219
    8. ')' → logprob: -11.329277038574219
    9. '[' → logprob: -11.454277038574219
    10. ' ]' → logprob: -11.829277038574219

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06671322137117386
    2. '=min' → logprob: -3.316713333129883
    3. ' =' → logprob: -3.566713333129883
    4. '=max' → logprob: -11.566713333129883
    5. '=sys' → logprob: -13.566713333129883
    6. '=len' → logprob: -13.566713333129883
    7. '=c' → logprob: -14.066713333129883
    8. '=str' → logprob: -14.691713333129883
    9. '=
' → logprob: -14.816713333129883
    10. '=set' → logprob: -15.191713333129883

Token 288: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.061967913061380386
    2. ' min' → logprob: -2.8119678497314453
    3. 'sorted' → logprob: -16.561967849731445
    4. '(min' → logprob: -16.686967849731445
    5. '	min' → logprob: -18.311967849731445
    6. 'max' → logprob: -19.186967849731445
    7. ' ' → logprob: -19.311967849731445
    8. '   ' → logprob: -19.561967849731445
    9. 'minimum' → logprob: -20.311967849731445
    10. '[min' → logprob: -20.311967849731445

Token 289: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.054500666621607e-06
    2. 'c' → logprob: -13.00000286102295
    3. '(' → logprob: -14.25000286102295
    4. '(candidate' → logprob: -17.000003814697266
    5. ')c' → logprob: -18.375003814697266
    6. '(
' → logprob: -19.500003814697266
    7. '_candidates' → logprob: -19.625003814697266
    8. ' (' → logprob: -19.625003814697266
    9. ',c' → logprob: -19.875003814697266
    10. 'cand' → logprob: -20.375003814697266

Token 290: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.0007940204231999815
    2. 'and' → logprob: -7.250793933868408
    3. 'andi' → logprob: -10.750794410705566
    4. 'c' → logprob: -10.750794410705566
    5. '(c' → logprob: -10.875794410705566
    6. 'andid' → logprob: -11.875794410705566
    7. '[c' → logprob: -12.375794410705566
    8. '[' → logprob: -13.000794410705566
    9. '_candidates' → logprob: -13.000794410705566
    10. '{' → logprob: -13.500794410705566

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027110804803669453
    2. ')
' → logprob: -6.002711296081543
    3. ' )' → logprob: -8.377711296081543
    4. ' )
' → logprob: -12.877711296081543
    5. '       ' → logprob: -13.877711296081543
    6. '())' → logprob: -14.127711296081543
    7. '           ' → logprob: -15.002711296081543
    8. '   ' → logprob: -15.127711296081543
    9. ')

' → logprob: -15.502711296081543
    10. ')return' → logprob: -16.002710342407227

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14154614508152008
    2. 'return' → logprob: -2.2665462493896484
    3. '       ' → logprob: -4.016546249389648
    4. '   ' → logprob: -4.766546249389648
    5. ' return' → logprob: -6.391546249389648
    6. '
' → logprob: -10.516546249389648
    7. '	return' → logprob: -10.516546249389648
    8. '```' → logprob: -10.766546249389648
    9. '<|end|>' → logprob: -11.141546249389648
    10. '               ' → logprob: -12.641546249389648

Token 293: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26413941383361816
    2. 'return' (adapté à ' return') → logprob: -1.5141394138336182
    3. ' return' → logprob: -5.014139175415039
    4. '       ' → logprob: -5.639139175415039
    5. '   ' → logprob: -6.264139175415039
    6. '	return' → logprob: -10.764139175415039
    7. ' ' → logprob: -13.139139175415039
    8. '```' → logprob: -13.264139175415039
    9. '               ' → logprob: -13.389139175415039
    10. '          ' → logprob: -13.764139175415039

Token 294: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033546582562848926
    2. ' dp' → logprob: -8.000335693359375
    3. '(dp' → logprob: -17.875335693359375
    4. '	dp' → logprob: -20.625335693359375
    5. 'df' → logprob: -22.000335693359375
    6. '_dp' → logprob: -23.000335693359375
    7. 'db' → logprob: -24.250335693359375
    8. 'dc' → logprob: -24.625335693359375
    9. '   ' → logprob: -24.625335693359375
    10. 'dt' → logprob: -24.875335693359375

Token 295: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.704273118884885e-07
    2. 'u' → logprob: -14.375000953674316
    3. '(u' → logprob: -17.625
    4. '[' → logprob: -17.75
    5. '[v' → logprob: -20.125
    6. '[user' → logprob: -20.25
    7. ' u' → logprob: -21.0
    8. '<u' → logprob: -21.25
    9. '	u' → logprob: -21.375
    10. '```' → logprob: -22.0

Token 296: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ')
' → logprob: -11.500031471252441
    3. ']' → logprob: -11.875031471252441
    4. '<|end|>' → logprob: -12.125031471252441
    5. '       ' → logprob: -12.750031471252441
    6. ')return' → logprob: -13.125031471252441
    7. '}' → logprob: -13.500031471252441
    8. ' )' → logprob: -14.000031471252441
    9. '   ' → logprob: -14.875031471252441
    10. '）' → logprob: -15.125031471252441

Token 297: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07378567010164261
    2. 'print' → logprob: -3.1987857818603516
    3. '   ' → logprob: -4.573785781860352
    4. '    
' → logprob: -5.323785781860352
    5. '```' → logprob: -5.573785781860352
    6. 'res' → logprob: -5.823785781860352
    7. 'output' → logprob: -5.948785781860352
    8. '
' → logprob: -6.198785781860352
    9. ' result' → logprob: -6.323785781860352
    10. 'token' → logprob: -7.823785781860352

Token 298: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09270083159208298
    2. 'res' → logprob: -2.717700719833374
    3. 'print' → logprob: -3.967700719833374
    4. ' result' → logprob: -6.967700958251953
    5. '       ' → logprob: -7.092700958251953
    6. '   ' → logprob: -7.467700958251953
    7. ' res' → logprob: -7.592700958251953
    8. 'answer' → logprob: -7.592700958251953
    9. 'ret' → logprob: -9.842700958251953
    10. '
' → logprob: -10.092700958251953

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692883610725403
    2. '=' → logprob: -2.1269288063049316
    3. '=sys' → logprob: -15.00192928314209
    4. ',' → logprob: -15.37692928314209
    5. '＝' → logprob: -16.251928329467773
    6. ' ' → logprob: -17.001928329467773
    7. ' =)' → logprob: -17.251928329467773
    8. '=input' → logprob: -17.626928329467773
    9. '=int' → logprob: -18.001928329467773
    10. '   ' → logprob: -18.251928329467773

Token 300: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.07003624737262726
    2. ' dfs' → logprob: -2.6950361728668213
    3. 'df' → logprob: -10.070035934448242
    4. 'dp' → logprob: -10.070035934448242
    5. '   ' → logprob: -11.445035934448242
    6. ' ' → logprob: -13.570035934448242
    7. ' dp' → logprob: -13.695035934448242
    8. '  ' → logprob: -14.695035934448242
    9. ' df' → logprob: -14.945035934448242
    10. 'dfa' → logprob: -15.320035934448242

Token 301: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.20897161960601807
    2. '(g' → logprob: -1.708971619606018
    3. '(' → logprob: -4.9589715003967285
    4. 'g' → logprob: -7.8339715003967285
    5. 's' → logprob: -9.333971977233887
    6. '(
' → logprob: -11.708971977233887
    7. '(n' → logprob: -11.958971977233887
    8. '(u' → logprob: -12.333971977233887
    9. '0' → logprob: -12.708971977233887
    10. ' (' → logprob: -13.708971977233887

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018232580623589456
    2. ')
' → logprob: -8.625182151794434
    3. ' )' → logprob: -13.875182151794434
    4. ')

' → logprob: -14.375182151794434
    5. ')`' → logprob: -14.625182151794434
    6. '])' → logprob: -15.125182151794434
    7. '))' → logprob: -15.375182151794434
    8. ')
' → logprob: -16.12518310546875
    9. '）' → logprob: -16.50018310546875
    10. ')#' → logprob: -16.75018310546875

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001147006405517459
    2. '   ' → logprob: -7.8761467933654785
    3. 'if' → logprob: -8.376147270202637
    4. 'print' → logprob: -8.376147270202637
    5. '```' → logprob: -8.876147270202637
    6. ' if' → logprob: -9.001147270202637
    7. '<|end|>' → logprob: -10.751147270202637
    8. '
' → logprob: -11.501147270202637
    9. '        
' → logprob: -12.001147270202637
    10. 'return' → logprob: -14.001147270202637

Token 304: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16363903880119324
    2. 'print' → logprob: -2.1636390686035156
    3. '       ' → logprob: -3.4136390686035156
    4. ' if' → logprob: -5.788639068603516
    5. '```' → logprob: -9.913639068603516
    6. ' print' → logprob: -11.538639068603516
    7. '   ' → logprob: -13.413639068603516
    8. '``' → logprob: -14.913639068603516
    9. '	if' → logprob: -15.913639068603516
    10. '        
' → logprob: -15.913639068603516

Token 305: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07889242470264435
    2. 'ans' → logprob: -2.578892469406128
    3. '(ans' → logprob: -13.078892707824707
    4. '	ans' → logprob: -15.078892707824707
    5. 'Ans' → logprob: -16.57889175415039
    6. '_ans' → logprob: -16.70389175415039
    7. '   ' → logprob: -17.57889175415039
    8. ' ' → logprob: -17.82889175415039
    9. ' ' → logprob: -17.95389175415039
    10. ' Ans' → logprob: -18.20389175415039

Token 306: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002862177789211273
    2. ' ==' → logprob: -6.877861976623535
    3. 'is' → logprob: -7.002861976623535
    4. '==' → logprob: -7.002861976623535
    5. '===' → logprob: -12.002861976623535
    6. ' !=' → logprob: -14.502861976623535
    7. ' ' → logprob: -14.502861976623535
    8. '!=' → logprob: -14.627861976623535
    9. ' ===' → logprob: -15.502861976623535
    10. '    ' → logprob: -15.627861976623535

Token 307: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008636788465082645
    2. ' None' → logprob: -4.758636951446533
    3. '   ' → logprob: -11.133636474609375
    4. 'not' → logprob: -12.383636474609375
    5. ' not' → logprob: -12.633636474609375
    6. '       ' → logprob: -17.258636474609375
    7. ' ' → logprob: -17.633636474609375
    8. 'Not' → logprob: -17.758636474609375
    9. '(None' → logprob: -18.508636474609375
    10. '  ' → logprob: -18.883636474609375

Token 308: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4385211765766144
    2. ':' → logprob: -1.063521146774292
    3. '           ' → logprob: -4.813521385192871
    4. ' or' → logprob: -6.563521385192871
    5. '       ' → logprob: -8.813521385192871
    6. '   ' → logprob: -11.063521385192871
    7. '():
' → logprob: -11.188521385192871
    8. ':
' → logprob: -11.438521385192871
    9. '.' → logprob: -11.688521385192871
    10. 'print' → logprob: -11.688521385192871

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4086897075176239
    2. '       ' → logprob: -1.2836897373199463
    3. 'print' → logprob: -2.9086897373199463
    4. ' print' → logprob: -5.908689498901367
    5. '   ' → logprob: -6.908689498901367
    6. '```' → logprob: -8.908689498901367
    7. '
' → logprob: -10.283689498901367
    8. '               ' → logprob: -11.533689498901367
    9. '        
' → logprob: -12.033689498901367
    10. '            
' → logprob: -12.408689498901367

Token 310: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.055499568581581116
    2. ' print' → logprob: -3.43049955368042
    3. '       ' → logprob: -4.05549955368042
    4. '           ' → logprob: -5.55549955368042
    5. '   ' → logprob: -8.055500030517578
    6. '```' → logprob: -9.805500030517578
    7. '               ' → logprob: -11.180500030517578
    8. '	print' → logprob: -11.805500030517578
    9. '-' → logprob: -11.930500030517578
    10. ' ' → logprob: -12.555500030517578

Token 311: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.11754016578197479
    2. '(-' → logprob: -2.367540121078491
    3. '("-' → logprob: -4.49254035949707
    4. '(' → logprob: -5.86754035949707
    5. '('' → logprob: -6.74254035949707
    6. '("*' → logprob: -7.74254035949707
    7. '-' → logprob: -7.86754035949707
    8. '"' → logprob: -8.24254035949707
    9. '("?' → logprob: -8.24254035949707
    10. '()' → logprob: -8.49254035949707

Token 312: 'NO' (ID: 14695)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8326694369316101
    2. '-' → logprob: -2.082669496536255
    3. 'INF' → logprob: -2.207669496536255
    4. 'IN' → logprob: -2.332669496536255
    5. '")' → logprob: -3.332669496536255
    6. 'None' → logprob: -3.457669496536255
    7. 'IMP' → logprob: -3.582669496536255
    8. 'No' → logprob: -3.707669496536255
    9. 'NO' → logprob: -3.832669496536255
    10. '"No' → logprob: -4.082669258117676

Token 313: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1330437958240509
    2. ' PATH' → logprob: -2.2580437660217285
    3. 'PATH' → logprob: -5.0080437660217285
    4. 'ANSWER' → logprob: -5.6330437660217285
    5. ' SOL' → logprob: -5.7580437660217285
    6. ' ANSW' → logprob: -6.1330437660217285
    7. ')' → logprob: -6.2580437660217285
    8. '"' → logprob: -6.7580437660217285
    9. '")
' → logprob: -8.133044242858887
    10. '_PATH' → logprob: -8.633044242858887

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003452368837315589
    2. 'else' → logprob: -8.500345230102539
    3. ' else' → logprob: -9.250345230102539
    4. '<|end|>' → logprob: -10.625345230102539
    5. '           ' → logprob: -11.875345230102539
    6. '   ' → logprob: -12.000345230102539
    7. '```' → logprob: -12.875345230102539
    8. ')' → logprob: -13.000345230102539
    9. '	' → logprob: -14.625345230102539
    10. '      ' → logprob: -14.625345230102539

Token 315: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11885784566402435
    2. 'else' (adapté à ' else') → logprob: -2.3688578605651855
    3. ' else' → logprob: -3.9938578605651855
    4. '   ' → logprob: -10.243857383728027
    5. 'elif' → logprob: -11.993857383728027
    6. '	else' → logprob: -12.868857383728027
    7. '           ' → logprob: -13.368857383728027
    8. '	' → logprob: -13.743857383728027
    9. '```' → logprob: -14.118857383728027
    10. '      ' → logprob: -14.618857383728027

Token 316: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03943222388625145
    2. ':' → logprob: -3.4144322872161865
    3. ':
' → logprob: -5.164432048797607
    4. '	       ' → logprob: -11.539432525634766
    5. ' :' → logprob: -11.664432525634766
    6. ' print' → logprob: -11.664432525634766
    7. '          ' → logprob: -12.289432525634766
    8. '		' → logprob: -12.664432525634766
    9. '               ' → logprob: -12.664432525634766
    10. 'print' → logprob: -12.664432525634766

Token 317: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24826264381408691
    2. '           ' → logprob: -1.998262643814087
    3. '       ' → logprob: -2.998262643814087
    4. ' print' → logprob: -3.373262643814087
    5. '   ' → logprob: -9.498262405395508
    6. '               ' → logprob: -10.998262405395508
    7. '(print' → logprob: -11.373262405395508
    8. '	print' → logprob: -11.748262405395508
    9. '         ' → logprob: -12.873262405395508
    10. '	       ' → logprob: -12.873262405395508

Token 318: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001515576965175569
    2. ' print' → logprob: -6.5015153884887695
    3. '           ' → logprob: -11.25151538848877
    4. '       ' → logprob: -15.62651538848877
    5. '   ' → logprob: -16.626516342163086
    6. '```' → logprob: -18.626516342163086
    7. '	print' → logprob: -18.876516342163086
    8. '
' → logprob: -20.251516342163086
    9. '               ' → logprob: -20.626516342163086
    10. '.print' → logprob: -20.751516342163086

Token 319: ' Check' (ID: 6208)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0035622965078800917
    2. ' print' → logprob: -5.7535624504089355
    3. '           ' → logprob: -7.8785624504089355
    4. '       ' → logprob: -12.503561973571777
    5. '   ' → logprob: -13.253561973571777
    6. 'if' → logprob: -16.753562927246094
    7. 'for' → logprob: -16.878562927246094
    8. '	print' → logprob: -17.003562927246094
    9. '```' → logprob: -17.128562927246094
    10. '               ' → logprob: -17.753562927246094

Token 320: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9228377342224121
    2. ' if' → logprob: -1.172837734222412
    3. 'len' → logprob: -1.422837734222412
    4. '(ans' → logprob: -4.047837734222412
    5. ' ans' → logprob: -4.297837734222412
    6. 'ans' → logprob: -4.422837734222412
    7. 'print' → logprob: -5.672837734222412
    8. ' len' → logprob: -5.797837734222412
    9. '   ' → logprob: -6.547837734222412
    10. '(len' → logprob: -7.297837734222412

Token 321: ' infinite' (ID: 48413)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06193496286869049
    2. 'len' → logprob: -3.4369349479675293
    3. ' ans' → logprob: -4.436934947967529
    4. '(ans' → logprob: -5.311934947967529
    5. '""' → logprob: -5.311934947967529
    6. 'any' → logprob: -6.186934947967529
    7. '"' → logprob: -6.686934947967529
    8. 'a' → logprob: -7.311934947967529
    9. '''' → logprob: -7.686934947967529
    10. ' len' → logprob: -7.936934947967529

Token 322: ' improvement' (ID: 20692)
  Prédit: ' loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.8081139326095581
    2. 'loop' → logprob: -1.433113932609558
    3. ' possibility' → logprob: -2.8081140518188477
    4. ' possibilities' → logprob: -2.8081140518188477
    5. ' loops' → logprob: -3.0581140518188477
    6. '<|end|>' → logprob: -3.0581140518188477
    7. '...' → logprob: -3.5581140518188477
    8. 'loops' → logprob: -4.183114051818848
    9. ' recursion' → logprob: -4.308114051818848
    10. '_loop' → logprob: -4.683114051818848

Token 323: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5076479315757751
    2. ' if' → logprob: -1.13264799118042
    3. '       ' → logprob: -3.00764799118042
    4. 'if' → logprob: -5.38264799118042
    5. ':' → logprob: -5.63264799118042
    6. '   ' → logprob: -6.00764799118042
    7. ' and' → logprob: -6.50764799118042
    8. ' for' → logprob: -6.63264799118042
    9. '               ' → logprob: -6.63264799118042
    10. ' =' → logprob: -6.75764799118042

Token 324: ' cycles' (ID: 41478)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.560943841934204
    2. 'len' → logprob: -1.810943841934204
    3. 'for' → logprob: -2.310943841934204
    4. 'dfs' → logprob: -2.310943841934204
    5. 'any' → logprob: -2.435943841934204
    6. ''' → logprob: -2.810943841934204
    7. 'sys' → logprob: -2.810943841934204
    8. 'print' → logprob: -3.310943841934204
    9. 'if' → logprob: -3.435943841934204
    10. ' any' → logprob: -3.435943841934204

Token 325: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0822124108672142
    2. '       ' → logprob: -3.082212448120117
    3. '            
' → logprob: -4.832212448120117
    4. ' if' → logprob: -5.457212448120117
    5. '        
' → logprob: -5.957212448120117
    6. '   ' → logprob: -5.957212448120117
    7. '
' → logprob: -6.082212448120117
    8. ' 
' → logprob: -6.082212448120117
    9. '    
' → logprob: -6.332212448120117
    10. '<|end|>' → logprob: -6.707212448120117

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11744382232427597
    2. ' for' → logprob: -2.992443799972534
    3. ' if' → logprob: -3.242443799972534
    4. '       ' → logprob: -4.867444038391113
    5. ' visited' → logprob: -6.117444038391113
    6. '```' → logprob: -6.242444038391113
    7. ' current' → logprob: -6.492444038391113
    8. '   ' → logprob: -6.742444038391113
    9. ' cycle' → logprob: -6.742444038391113
    10. ' while' → logprob: -7.492444038391113

Token 327: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5527979135513306
    2. 'for' → logprob: -1.5527979135513306
    3. '           ' → logprob: -2.177797794342041
    4. 'inf' → logprob: -2.427797794342041
    5. 'def' → logprob: -2.802797794342041
    6. 'im' → logprob: -3.552797794342041
    7. 'in' → logprob: -3.552797794342041
    8. '       ' → logprob: -3.677797794342041
    9. ' cycle' → logprob: -3.677797794342041
    10. 'print' → logprob: -3.927797794342041

Token 328: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.065367341041565
    2. '           ' → logprob: -1.690367341041565
    3. '#' → logprob: -2.0653672218322754
    4. ' for' → logprob: -2.1903672218322754
    5. ' #' → logprob: -3.1903672218322754
    6. 'if' → logprob: -3.1903672218322754
    7. 'from' → logprob: -3.5653672218322754
    8. 'inf' → logprob: -3.9403672218322754
    9. 'import' → logprob: -4.315367221832275
    10. 'def' → logprob: -4.315367221832275

Token 329: ' there' (ID: 1354)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.612983226776123
    2. ' any' → logprob: -1.862983226776123
    3. 'len' → logprob: -1.862983226776123
    4. 'any' → logprob: -1.987983226776123
    5. ' len' → logprob: -2.237983226776123
    6. '"' → logprob: -2.487983226776123
    7. 'dp' → logprob: -2.987983226776123
    8. 'dfs' → logprob: -3.362983226776123
    9. ' ans' → logprob: -3.487983226776123
    10. ' dfs' → logprob: -3.987983226776123

Token 330: ' exists' (ID: 13031)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5181900858879089
    2. 'is' → logprob: -1.2681901454925537
    3. 'exists' → logprob: -2.7681901454925537
    4. ' exists' → logprob: -3.2681901454925537
    5. ' are' → logprob: -4.643189907073975
    6. 'are' → logprob: -5.268189907073975
    7. ' was' → logprob: -6.268189907073975
    8. ''s' → logprob: -6.518189907073975
    9. 'any' → logprob: -6.893189907073975
    10. '#' → logprob: -7.018189907073975

Token 331: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9495398998260498
    2. ' any' → logprob: -0.9495398998260498
    3. 'a' → logprob: -2.44953989982605
    4. 'any' → logprob: -2.94953989982605
    5. ' an' → logprob: -2.94953989982605
    6. ' another' → logprob: -3.94953989982605
    7. 'an' → logprob: -5.074540138244629
    8. 'another' → logprob: -6.199540138244629
    9. ' next' → logprob: -6.324540138244629
    10. '"' → logprob: -6.699540138244629

Token 332: ' cycle' (ID: 15839)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.5536324381828308
    2. ' cycle' → logprob: -1.0536324977874756
    3. ' lex' → logprob: -3.6786324977874756
    4. 'path' → logprob: -3.8036324977874756
    5. 'cycle' → logprob: -4.6786322593688965
    6. ' longer' → logprob: -6.0536322593688965
    7. ' shorter' → logprob: -6.1786322593688965
    8. ' reachable' → logprob: -6.1786322593688965
    9. ' strictly' → logprob: -6.5536322593688965
    10. ' suffix' → logprob: -6.8036322593688965

Token 333: ' on' (ID: 402)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8107248544692993
    2. 'in' → logprob: -1.8107248544692993
    3. ' that' → logprob: -2.1857247352600098
    4. ' reachable' → logprob: -2.1857247352600098
    5. 'reachable' → logprob: -2.9357247352600098
    6. ' and' → logprob: -3.9357247352600098
    7. ' on' → logprob: -4.06072473526001
    8. ' involving' → logprob: -4.18572473526001
    9. 'and' → logprob: -4.43572473526001
    10. '           ' → logprob: -4.81072473526001

Token 334: ' reachable' (ID: 143580)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6562913656234741
    2. 'path' → logprob: -1.1562913656234741
    3. 'a' → logprob: -2.6562914848327637
    4. 'any' → logprob: -2.7812914848327637
    5. ' the' → logprob: -4.656291484832764
    6. 'some' → logprob: -5.281291484832764
    7. ' any' → logprob: -5.406291484832764
    8. ' path' → logprob: -5.531291484832764
    9. 'dfs' → logprob: -5.656291484832764
    10. 'graph' → logprob: -5.656291484832764

Token 335: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.1386253833770752
    2. ' path' → logprob: -2.263625383377075
    3. 'paths' → logprob: -5.013625144958496
    4. 'node' → logprob: -5.513625144958496
    5. ' paths' → logprob: -5.513625144958496
    6. 'nodes' → logprob: -6.013625144958496
    7. 'u' → logprob: -6.138625144958496
    8. ' nodes' → logprob: -6.513625144958496
    9. ' node' → logprob: -7.013625144958496
    10. '_path' → logprob: -7.013625144958496

Token 336: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6169556379318237
    2. ' from' → logprob: -2.2419557571411133
    3. 'from' → logprob: -2.2419557571411133
    4. ',' → logprob: -2.3669557571411133
    5. ' and' → logprob: -2.8669557571411133
    6. ' that' → logprob: -2.9919557571411133
    7. '       ' → logprob: -4.616955757141113
    8. 'and' → logprob: -4.616955757141113
    9. ' with' → logprob: -4.991955757141113
    10. ' or' → logprob: -5.866955757141113

Token 337: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01295632403343916
    2. 'u' → logprob: -4.512956142425537
    3. 'dfs' → logprob: -7.387956142425537
    4. 'ans' → logprob: -7.512956142425537
    5. ' s' → logprob: -8.012956619262695
    6. 'main' → logprob: -9.012956619262695
    7. '   ' → logprob: -9.762956619262695
    8. 'the' → logprob: -10.137956619262695
    9. 'graph' → logprob: -10.262956619262695
    10. 'a' → logprob: -10.887956619262695

Token 338: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2123641073703766
    2. '           ' → logprob: -2.3373641967773438
    3. ',' → logprob: -3.3373641967773438
    4. 'and' → logprob: -3.5873641967773438
    5. ' that' → logprob: -3.9623641967773438
    6. ' or' → logprob: -5.087364196777344
    7. ' to' → logprob: -5.587364196777344
    8. ':' → logprob: -7.087364196777344
    9. ' with' → logprob: -7.962364196777344
    10. '       ' → logprob: -8.712364196777344

Token 339: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08112554252147675
    2. 's' → logprob: -2.831125497817993
    3. 'u' → logprob: -4.456125736236572
    4. ' g' → logprob: -5.456125736236572
    5. 'ans' → logprob: -6.706125736236572
    6. ' s' → logprob: -6.956125736236572
    7. '#' → logprob: -8.081125259399414
    8. 'a' → logprob: -9.081125259399414
    9. ' u' → logprob: -9.206125259399414
    10. '
' → logprob: -9.331125259399414

Token 340: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13597166538238525
    2. ',' → logprob: -3.0109715461730957
    3. '       ' → logprob: -3.1359715461730957
    4. '
' → logprob: -4.260971546173096
    5. '            
' → logprob: -5.260971546173096
    6. ' and' → logprob: -5.760971546173096
    7. '        
' → logprob: -6.635971546173096
    8. ':' → logprob: -6.635971546173096
    9. '   ' → logprob: -6.760971546173096
    10. ',
' → logprob: -7.260971546173096

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006346557289361954
    2. '       ' → logprob: -5.381346702575684
    3. '               ' → logprob: -7.756346702575684
    4. '   ' → logprob: -7.881346702575684
    5. '#' → logprob: -8.131346702575684
    6. ' continue' → logprob: -8.756346702575684
    7. ' and' → logprob: -9.506346702575684
    8. 'continue' → logprob: -9.881346702575684
    9. '          ' → logprob: -10.131346702575684
    10. '```' → logprob: -10.256346702575684

Token 342: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09385441243648529
    2. '       ' → logprob: -3.0938544273376465
    3. '#' (adapté à ' #') → logprob: -3.9688544273376465
    4. '               ' → logprob: -5.0938544273376465
    5. ' continue' → logprob: -5.3438544273376465
    6. '   ' → logprob: -5.4688544273376465
    7. ' #' → logprob: -5.9688544273376465
    8. 'continue' → logprob: -6.7188544273376465
    9. 'print' → logprob: -6.9688544273376465
    10. '
' → logprob: -6.9688544273376465

Token 343: ' which' (ID: 1118)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3428490161895752
    2. '           ' → logprob: -1.8428490161895752
    3. ' #' → logprob: -2.217849016189575
    4. '       ' → logprob: -5.467848777770996
    5. 'print' → logprob: -5.592848777770996
    6. ' continue' → logprob: -5.842848777770996
    7. ' if' → logprob: -5.967848777770996
    8. ' print' → logprob: -6.092848777770996
    9. 'continue' → logprob: -6.092848777770996
    10. 'if' → logprob: -6.842848777770996

Token 344: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2132733315229416
    2. 'can' → logprob: -2.088273286819458
    3. ' is' → logprob: -3.963273286819458
    4. '#' → logprob: -5.088273525238037
    5. ' could' → logprob: -5.213273525238037
    6. '           ' → logprob: -5.338273525238037
    7. 'is' → logprob: -5.463273525238037
    8. ' allows' → logprob: -5.588273525238037
    9. 'could' → logprob: -5.713273525238037
    10. 'allows' → logprob: -5.713273525238037

Token 345: ' prepend' (ID: 176253)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10089898109436035
    2. 'be' → logprob: -3.6008989810943604
    3. ' potentially' → logprob: -4.725898742675781
    4. ' lead' → logprob: -4.850898742675781
    5. 'append' → logprob: -4.850898742675781
    6. ' produce' → logprob: -5.475898742675781
    7. 'make' → logprob: -5.600898742675781
    8. ' give' → logprob: -6.100898742675781
    9. 'im' → logprob: -6.225898742675781
    10. 'repeat' → logprob: -6.225898742675781

Token 346: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4926762580871582
    2. ' the' → logprob: -1.8676762580871582
    3. 'a' → logprob: -2.242676258087158
    4. ' to' → logprob: -2.367676258087158
    5. ' any' → logprob: -2.617676258087158
    6. ' an' → logprob: -2.742676258087158
    7. ' ans' → logprob: -3.492676258087158
    8. ' some' → logprob: -3.492676258087158
    9. ' more' → logprob: -3.617676258087158
    10. 's' → logprob: -3.742676258087158

Token 347: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6292081475257874
    2. ' a' → logprob: -1.2542080879211426
    3. ' any' → logprob: -3.7542080879211426
    4. 'some' → logprob: -3.8792080879211426
    5. 'any' → logprob: -4.004208087921143
    6. 'an' → logprob: -4.129208087921143
    7. 'sm' → logprob: -4.129208087921143
    8. 'lex' → logprob: -4.379208087921143
    9. ' lex' → logprob: -4.379208087921143
    10. 'ans' → logprob: -4.379208087921143

Token 348: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013431611470878124
    2. 'a' → logprob: -5.638431549072266
    3. 'n' → logprob: -5.638431549072266
    4. ''+' → logprob: -6.638431549072266
    5. 'b' → logprob: -7.138431549072266
    6. 'z' → logprob: -7.388431549072266
    7. ''s' → logprob: -7.513431549072266
    8. ' to' → logprob: -8.013431549072266
    9. '...' → logprob: -8.013431549072266
    10. '...'' → logprob: -8.263431549072266

Token 349: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5610986948013306
    2. ',' → logprob: -1.9360986948013306
    3. ' to' → logprob: -2.061098575592041
    4. ' and' → logprob: -2.436098575592041
    5. ' or' → logprob: -2.561098575592041
    6. ' if' → logprob: -3.061098575592041
    7. '<|end|>' → logprob: -3.186098575592041
    8. ' for' → logprob: -3.811098575592041
    9. ' with' → logprob: -3.811098575592041
    10. ' then' → logprob: -3.936098575592041

Token 350: ' any' (ID: 1062)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24319568276405334
    2. ' ans' → logprob: -1.618195652961731
    3. 'the' → logprob: -4.618195533752441
    4. ' the' → logprob: -5.493195533752441
    5. 'any' → logprob: -6.743195533752441
    6. '(ans' → logprob: -7.243195533752441
    7. 'a' → logprob: -7.493195533752441
    8. ' any' → logprob: -8.243195533752441
    9. '	ans' → logprob: -8.243195533752441
    10. ' a' → logprob: -8.493195533752441

Token 351: ' spell' (ID: 29176)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6469437479972839
    2. 'path' → logprob: -1.1469438076019287
    3. 'string' → logprob: -3.1469438076019287
    4. 'ans' → logprob: -3.7719438076019287
    5. ' string' → logprob: -3.7719438076019287
    6. ' ans' → logprob: -4.02194356918335
    7. 'prefix' → logprob: -4.52194356918335
    8. 'answer' → logprob: -5.02194356918335
    9. ' prefix' → logprob: -5.27194356918335
    10. ' answer' → logprob: -5.27194356918335

Token 352: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34503495693206787
    2. '           ' → logprob: -1.8450349569320679
    3. ',
' → logprob: -3.4700350761413574
    4. 's' → logprob: -4.345035076141357
    5. ' or' → logprob: -4.345035076141357
    6. '            
' → logprob: -4.345035076141357
    7. '   ' → logprob: -4.470035076141357
    8. ' and' → logprob: -4.970035076141357
    9. ' that' → logprob: -4.970035076141357
    10. ' then' → logprob: -5.345035076141357

Token 353: ' get' (ID: 717)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -1.2304866313934326
    2. ' get' → logprob: -2.2304866313934326
    3. 'make' → logprob: -2.3554866313934326
    4. 'reach' → logprob: -2.3554866313934326
    5. 'generate' → logprob: -2.6054866313934326
    6. 'get' → logprob: -2.9804866313934326
    7. 'im' → logprob: -3.3554866313934326
    8. ' form' → logprob: -3.4804866313934326
    9. ' produce' → logprob: -3.4804866313934326
    10. ' make' → logprob: -3.4804866313934326

Token 354: ' lex' (ID: 37772)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.30286332964897156
    2. 'a' → logprob: -1.677863359451294
    3. ' an' → logprob: -3.552863359451294
    4. 'an' → logprob: -3.927863359451294
    5. 'better' → logprob: -5.177863121032715
    6. ' better' → logprob: -5.427863121032715
    7. ' lex' → logprob: -5.552863121032715
    8. ' shorter' → logprob: -5.802863121032715
    9. ' smaller' → logprob: -6.927863121032715
    10. ' strictly' → logprob: -7.052863121032715

Token 355: ' smaller' (ID: 13679)
  Prédit: ' smaller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smaller' → logprob: -0.16078954935073853
    2. 'sm' → logprob: -2.1607894897460938
    3. 'ic' → logprob: -3.9107894897460938
    4. '_sm' → logprob: -4.910789489746094
    5. '-sm' → logprob: -5.160789489746094
    6. ' Smaller' → logprob: -10.035789489746094
    7. ' better' → logprob: -10.660789489746094
    8. 'Sm' → logprob: -10.910789489746094
    9. 'ically' → logprob: -11.035789489746094
    10. '(sm' → logprob: -11.160789489746094

Token 356: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5891133546829224
    2. '
' → logprob: -1.7141133546829224
    3. ',' → logprob: -2.089113235473633
    4. ':' → logprob: -2.589113235473633
    5. ':
' → logprob: -3.089113235473633
    6. ',
' → logprob: -3.089113235473633
    7. ' string' → logprob: -3.089113235473633
    8. ' and' → logprob: -3.464113235473633
    9. ' if' → logprob: -3.964113235473633
    10. 'string' → logprob: -4.089113235473633

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015039891935884953
    2. '       ' → logprob: -4.265039920806885
    3. '               ' → logprob: -8.515039443969727
    4. '#' → logprob: -9.390039443969727
    5. '   ' → logprob: -9.765039443969727
    6. '            
' → logprob: -9.765039443969727
    7. ' then' → logprob: -9.890039443969727
    8. ' continue' → logprob: -9.890039443969727
    9. ' and' → logprob: -10.140039443969727
    10. '            ' → logprob: -10.265039443969727

Token 358: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06667643040418625
    2. '       ' → logprob: -2.816676378250122
    3. '#' (adapté à ' #') → logprob: -6.316676616668701
    4. ' continue' → logprob: -7.066676616668701
    5. '               ' → logprob: -8.441676139831543
    6. '   ' → logprob: -8.566676139831543
    7. 'continue' → logprob: -8.566676139831543
    8. ' #' → logprob: -8.691676139831543
    9. '            
' → logprob: -9.191676139831543
    10. '            ' → logprob: -9.191676139831543

Token 359: ' then' (ID: 1815)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38427260518074036
    2. '       ' → logprob: -1.634272575378418
    3. ' continue' → logprob: -2.509272575378418
    4. 'continue' → logprob: -4.009272575378418
    5. ' if' → logprob: -5.009272575378418
    6. '#' → logprob: -5.134272575378418
    7. ' #' → logprob: -6.259272575378418
    8. '   ' → logprob: -6.259272575378418
    9. '
' → logprob: -6.634272575378418
    10. '               ' → logprob: -7.009272575378418

Token 360: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2965761423110962
    2. ' print' → logprob: -1.4215761423110962
    3. '           ' → logprob: -4.546576023101807
    4. ' pass' → logprob: -6.671576023101807
    5. '#' → logprob: -6.921576023101807
    6. 'pass' → logprob: -7.421576023101807
    7. ' if' → logprob: -7.546576023101807
    8. '   ' → logprob: -8.171576499938965
    9. 'if' → logprob: -8.421576499938965
    10. ' #' → logprob: -8.546576499938965

Token 361: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3428677022457123
    2. '=' → logprob: -1.9678677320480347
    3. '           ' → logprob: -2.717867612838745
    4. ':' → logprob: -3.342867612838745
    5. '   ' → logprob: -4.342867851257324
    6. ' is' → logprob: -4.967867851257324
    7. ' ==' → logprob: -5.467867851257324
    8. ' +=' → logprob: -5.467867851257324
    9. '==' → logprob: -5.592867851257324
    10. 'print' → logprob: -5.842867851257324

Token 362: ' NO' (ID: 9319)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.397285521030426
    2. '-' → logprob: -1.5222854614257812
    3. '"-' → logprob: -3.0222854614257812
    4. '"No' → logprob: -4.022285461425781
    5. 'NO' → logprob: -4.522285461425781
    6. ' "' → logprob: -5.147285461425781
    7. '"a' → logprob: -5.272285461425781
    8. '"""' → logprob: -6.272285461425781
    9. '"A' → logprob: -6.522285461425781
    10. '"in' → logprob: -6.772285461425781

Token 363: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25181594491004944
    2. '           ' → logprob: -1.751815915107727
    3. '<|end|>' → logprob: -3.6268160343170166
    4. '
' → logprob: -4.1268157958984375
    5. '        
' → logprob: -6.2518157958984375
    6. ' else' → logprob: -6.3768157958984375
    7. 'else' → logprob: -7.1268157958984375
    8. '            
' → logprob: -7.6268157958984375
    9. '```' → logprob: -8.001815795898438
    10. '<|end|>' → logprob: -8.626815795898438

Token 364: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11624649912118912
    2. '           ' → logprob: -2.866246461868286
    3. '<|end|>' → logprob: -3.116246461868286
    4. '
' → logprob: -5.491246700286865
    5. '        
' → logprob: -6.491246700286865
    6. '   ' → logprob: -6.866246700286865
    7. '        ' → logprob: -7.616246700286865
    8. '<|end|>' → logprob: -8.491246223449707
    9. '            
' → logprob: -8.616246223449707
    10. '    ' → logprob: -8.616246223449707

Token 365: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9190521836280823
    2. 'def' → logprob: -1.7940521240234375
    3. 'reachable' → logprob: -2.2940521240234375
    4. 'from' → logprob: -2.6690521240234375
    5. '           ' → logprob: -2.6690521240234375
    6. 'visited' → logprob: -3.0440521240234375
    7. ' from' → logprob: -3.4190521240234375
    8. ' reachable' → logprob: -3.7940521240234375
    9. '   ' → logprob: -4.2940521240234375
    10. 'for' → logprob: -4.4190521240234375

Token 366: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32061663269996643
    2. '           ' → logprob: -2.4456167221069336
    3. 'reachable' → logprob: -2.9456167221069336
    4. 'from' → logprob: -3.9456167221069336
    5. 'visited' → logprob: -4.070616722106934
    6. 'def' → logprob: -4.195616722106934
    7. '   ' → logprob: -4.320616722106934
    8. 'for' → logprob: -4.570616722106934
    9. ' reachable' → logprob: -4.570616722106934
    10. 'found' → logprob: -4.945616722106934

Token 367: ' above' (ID: 5151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9327744841575623
    2. '           ' → logprob: -0.9327744841575623
    3. '
' → logprob: -3.182774543762207
    4. ' for' → logprob: -3.182774543762207
    5. '        ' → logprob: -3.557774543762207
    6. '    ' → logprob: -4.307774543762207
    7. ' if' → logprob: -4.432774543762207
    8. '#' → logprob: -4.557774543762207
    9. ' #' → logprob: -4.557774543762207
    10. '            ' → logprob: -5.057774543762207

Token 368: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1056339740753174
    2. ' is' → logprob: -2.3556339740753174
    3. ' code' → logprob: -2.4806339740753174
    4. ' continues' → logprob: -2.7306339740753174
    5. 'if' → logprob: -2.8556339740753174
    6. '    ' → logprob: -2.8556339740753174
    7. '#' → logprob: -3.1056339740753174
    8. '
' → logprob: -3.2306339740753174
    9. ':' → logprob: -3.2306339740753174
    10. 'def' → logprob: -3.3556339740753174

Token 369: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39341914653778076
    2. '       ' → logprob: -2.0184192657470703
    3. '=' → logprob: -3.1434192657470703
    4. '           ' → logprob: -3.3934192657470703
    5. '   ' → logprob: -4.26841926574707
    6. '        ' → logprob: -4.64341926574707
    7. ' continues' → logprob: -4.76841926574707
    8. '[' → logprob: -4.89341926574707
    9. ':' → logprob: -5.14341926574707
    10. ' is' → logprob: -5.26841926574707

Token 370: ' cycle' (ID: 15839)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.8850890398025513
    2. 'vis' → logprob: -1.3850890398025513
    3. 'cycle' → logprob: -1.8850890398025513
    4. 'visited' → logprob: -2.3850889205932617
    5. 'dp' → logprob: -3.8850889205932617
    6. ' cycle' → logprob: -4.135088920593262
    7. 'the' → logprob: -4.135088920593262
    8. 'detect' → logprob: -4.760088920593262
    9. 'cycles' → logprob: -5.010088920593262
    10. 'memo' → logprob: -5.135088920593262

Token 371: ' detection' (ID: 28385)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0069595081731677055
    2. ' detection' → logprob: -5.131959438323975
    3. 'check' → logprob: -7.756959438323975
    4. 'det' → logprob: -8.506959915161133
    5. 'detect' → logprob: -8.756959915161133
    6. 'break' → logprob: -9.631959915161133
    7. '-d' → logprob: -10.256959915161133
    8. '_detection' → logprob: -10.381959915161133
    9. ' check' → logprob: -10.506959915161133
    10. 's' → logprob: -10.506959915161133

Token 372: ' returns' (ID: 7377)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0185545682907104
    2. '       ' → logprob: -1.8935545682907104
    3. ' already' → logprob: -2.3935546875
    4. ' does' → logprob: -2.7685546875
    5. ' is' → logprob: -3.0185546875
    6. ' continues' → logprob: -3.0185546875
    7. ' will' → logprob: -3.1435546875
    8. '#' → logprob: -3.1435546875
    9. ' handles' → logprob: -3.3935546875
    10. ' has' → logprob: -4.5185546875

Token 373: ' None' (ID: 4662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4457820653915405
    2. '"No' → logprob: -1.1957820653915405
    3. 'NO' → logprob: -2.94578218460083
    4. 'None' → logprob: -5.44578218460083
    5. ''' → logprob: -9.070781707763672
    6. 'No' → logprob: -9.945781707763672
    7. 'already' → logprob: -10.195781707763672
    8. '```' → logprob: -10.320781707763672
    9. 'no' → logprob: -10.570781707763672
    10. 'correct' → logprob: -11.445781707763672

Token 374: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' cycles' (ID: 41478)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.23096990585327148
    2. 'any' → logprob: -2.8559699058532715
    3. 'paths' → logprob: -3.2309699058532715
    4. 'dp' → logprob: -3.3559699058532715
    5. 'nodes' → logprob: -4.4809699058532715
    6. 'all' → logprob: -4.6059699058532715
    7. 'in' → logprob: -4.6059699058532715
    8. ' cycles' → logprob: -4.8559699058532715
    9. 'dfs' → logprob: -5.1059699058532715
    10. 'cycle' → logprob: -5.2309699058532715

Token 376: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09545353055000305
    2. '       ' → logprob: -2.7204535007476807
    3. '<|end|>' → logprob: -3.7204535007476807
    4. '   ' → logprob: -8.095453262329102
    5. '<|end|>' → logprob: -8.595453262329102
    6. '#' → logprob: -8.595453262329102
    7. ' ' → logprob: -10.095453262329102
    8. ')' → logprob: -10.095453262329102
    9. '```' → logprob: -10.095453262329102
    10. ' but' → logprob: -10.720453262329102

Token 378: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1550396829843521
    2. '           ' → logprob: -2.2800397872924805
    3. ' continue' → logprob: -4.6550397872924805
    4. '#' (adapté à ' #') → logprob: -4.9050397872924805
    5. 'continue' → logprob: -5.2800397872924805
    6. 'return' → logprob: -5.5300397872924805
    7. ' so' → logprob: -5.5300397872924805
    8. ' return' → logprob: -5.9050397872924805
    9. '
' → logprob: -6.0300397872924805
    10. ' but' → logprob: -6.4050397872924805

Token 379: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2958657443523407
    2. '           ' → logprob: -2.045865774154663
    3. '#' → logprob: -2.420865774154663
    4. 'return' → logprob: -3.795865774154663
    5. 'continue' → logprob: -5.295865535736084
    6. '   ' → logprob: -5.795865535736084
    7. ' return' → logprob: -6.045865535736084
    8. ' continue' → logprob: -6.295865535736084
    9. ' #' → logprob: -7.170865535736084
    10. '
' → logprob: -7.670865535736084

Token 380: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6535782814025879
    2. 'print' → logprob: -1.403578281402588
    3. '#' → logprob: -1.653578281402588
    4. '           ' → logprob: -3.778578281402588
    5. ' continue' → logprob: -4.278578281402588
    6. '       ' → logprob: -6.028578281402588
    7. 'pass' → logprob: -6.403578281402588
    8. ' print' → logprob: -7.403578281402588
    9. '#print' → logprob: -8.02857780456543
    10. 'return' → logprob: -8.27857780456543

Token 381: ' infinite' (ID: 48413)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6428399085998535
    2. 'f' → logprob: -1.7678399085998535
    3. ' need' → logprob: -2.2678399085998535
    4. ' further' → logprob: -2.6428399085998535
    5. 'more' → logprob: -2.8928399085998535
    6. 'in' → logprob: -3.2678399085998535
    7. 'additional' → logprob: -4.0178399085998535
    8. 'else' → logprob: -5.3928399085998535
    9. 'cycles' → logprob: -5.6428399085998535
    10. ' more' → logprob: -6.3928399085998535

Token 382: ' better' (ID: 3432)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -1.3346483707427979
    2. ' possibility' → logprob: -1.7096483707427979
    3. 'im' → logprob: -1.9596483707427979
    4. 'loop' → logprob: -2.084648370742798
    5. ' loops' → logprob: -2.209648370742798
    6. ' loop' → logprob: -2.459648370742798
    7. ' possibilities' → logprob: -3.209648370742798
    8. 'loops' → logprob: -3.334648370742798
    9. ' improvement' → logprob: -4.334648132324219
    10. 'answer' → logprob: -6.959648132324219

Token 383: ' spell' (ID: 29176)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.350241780281067
    2. ' possibilities' → logprob: -1.475241780281067
    3. ' possibility' → logprob: -2.1002416610717773
    4. 'poss' → logprob: -2.2252416610717773
    5. 'else' → logprob: -3.2252416610717773
    6. ' else' → logprob: -3.2252416610717773
    7. 'im' → logprob: -3.7252416610717773
    8. 'possible' → logprob: -3.7252416610717773
    9. 'answer' → logprob: -3.9752416610717773
    10. 'print' → logprob: -4.100241661071777

Token 384: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3320583701133728
    2. '       ' → logprob: -1.9570584297180176
    3. '   ' → logprob: -2.7070584297180176
    4. 'print' → logprob: -3.2070584297180176
    5. '<|end|>' → logprob: -3.4570584297180176
    6. '```' → logprob: -6.832058429718018
    7. ' print' → logprob: -7.707058429718018
    8. ' ' → logprob: -8.58205795288086
    9. '  ' → logprob: -8.83205795288086
    10. '<|end|>' → logprob: -9.08205795288086

Token 385: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32092899084091187
    2. '       ' → logprob: -1.3209290504455566
    3. '<|end|>' → logprob: -5.445929050445557
    4. '   ' → logprob: -5.945929050445557
    5. 'print' → logprob: -7.945929050445557
    6. '```' → logprob: -9.195928573608398
    7. 'else' → logprob: -10.195928573608398
    8. '<|end|>' → logprob: -10.195928573608398
    9. ',' → logprob: -10.570928573608398
    10. '
' → logprob: -11.070928573608398

Token 386: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4881010353565216
    2. '           ' → logprob: -1.2381010055541992
    3. 'print' → logprob: -2.738101005554199
    4. '   ' → logprob: -3.488101005554199
    5. '```' → logprob: -7.488101005554199
    6. ' print' → logprob: -8.1131010055542
    7. '<|end|>' → logprob: -9.6131010055542
    8. 'if' → logprob: -9.9881010055542
    9. ' ' → logprob: -10.6131010055542
    10. '  ' → logprob: -12.2381010055542

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09003240615129471
    2. '       ' → logprob: -2.7150323390960693
    3. '           ' → logprob: -4.340032577514648
    4. ' print' → logprob: -5.340032577514648
    5. '   ' → logprob: -6.215032577514648
    6. '```' → logprob: -10.590032577514648
    7. 'if' → logprob: -11.090032577514648
    8. '<|end|>' → logprob: -12.215032577514648
    9. 'else' → logprob: -12.465032577514648
    10. ' ' → logprob: -12.840032577514648

Token 388: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.320199877838604e-07
    2. 'ans' → logprob: -15.375
    3. '(' → logprob: -16.5
    4. '(len' → logprob: -18.25
    5. '((' → logprob: -19.125
    6. '(answer' → logprob: -19.25
    7. '(ord' → logprob: -19.75
    8. '("' → logprob: -20.25
    9. ' (' → logprob: -20.375
    10. '	ans' → logprob: -20.375

Token 389: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6934557505883276e-05
    2. '())' → logprob: -10.125057220458984
    3. ' )' → logprob: -11.625057220458984
    4. '()' → logprob: -12.625057220458984
    5. ')
' → logprob: -13.625057220458984
    6. '[' → logprob: -14.000057220458984
    7. '.replace' → logprob: -15.000057220458984
    8. '   ' → logprob: -15.000057220458984
    9. '```' → logprob: -15.125057220458984
    10. '))' → logprob: -15.375057220458984

Token 390: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02957586944103241
    2. 'main' → logprob: -3.654575824737549
    3. '<|end|>' → logprob: -6.654575824737549
    4. '```' → logprob: -6.779575824737549
    5. '
' → logprob: -8.029576301574707
    6. ' if' → logprob: -8.654576301574707
    7. '#' → logprob: -9.154576301574707
    8. '(main' → logprob: -10.154576301574707
    9. '\' → logprob: -10.279576301574707
    10. ' main' → logprob: -10.529576301574707

Token 391: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18007074296474457
    2. '__' → logprob: -1.8050707578659058
    3. '_' → logprob: -8.305070877075195
    4. '___' → logprob: -10.805070877075195
    5. '_name' → logprob: -10.930070877075195
    6. ' ' → logprob: -11.930070877075195
    7. ' _' → logprob: -12.055070877075195
    8. '  ' → logprob: -12.180070877075195
    9. ' ' → logprob: -12.305070877075195
    10. 'if' → logprob: -12.305070877075195

Token 392: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40109387040138245
    2. ' ==' → logprob: -1.65109384059906
    3. '==' → logprob: -2.0260939598083496
    4. '=="' → logprob: -5.15109395980835
    5. '__.__' → logprob: -8.401093482971191
    6. '.__' → logprob: -9.026093482971191
    7. '=='' → logprob: -9.026093482971191
    8. 'name' → logprob: -9.026093482971191
    9. ' __' → logprob: -9.776093482971191
    10. 'main' → logprob: -9.901093482971191

Token 393: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000738038623239845
    2. '==' → logprob: -7.625738143920898
    3. '__.__' → logprob: -8.500738143920898
    4. '=="' → logprob: -10.250738143920898
    5. ' ==' → logprob: -12.250738143920898
    6. '__["' → logprob: -12.875738143920898
    7. '__.' → logprob: -13.625738143920898
    8. '__[' → logprob: -14.875738143920898
    9. '__("' → logprob: -15.125738143920898
    10. '===' → logprob: -15.250738143920898

Token 394: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5926331877708435
    2. '==' → logprob: -1.2176332473754883
    3. ' ==' → logprob: -2.4676332473754883
    4. '=="' → logprob: -2.7176332473754883
    5. '=='' → logprob: -8.092633247375488
    6. '_' → logprob: -10.467633247375488
    7. '==="' → logprob: -11.467633247375488
    8. ' =="' → logprob: -11.467633247375488
    9. '=' → logprob: -12.092633247375488
    10. '===' → logprob: -12.467633247375488

Token 395: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002477796748280525
    2. ''' → logprob: -6.002477645874023
    3. '__' → logprob: -13.377477645874023
    4. ' "__' → logprob: -14.377477645874023
    5. '"user' → logprob: -17.377477645874023
    6. '"name' → logprob: -18.627477645874023
    7. '   ' → logprob: -18.752477645874023
    8. ''"' → logprob: -18.877477645874023
    9. ' '__' → logprob: -19.377477645874023
    10. ' ' → logprob: -19.377477645874023

Token 396: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.650518920039758e-06
    2. '__' → logprob: -12.875003814697266
    3. '"' → logprob: -13.875003814697266
    4. 'name' → logprob: -16.250003814697266
    5. ''' → logprob: -16.750003814697266
    6. ' main' → logprob: -17.375003814697266
    7. '_main' → logprob: -19.375003814697266
    8. '	main' → logprob: -19.750003814697266
    9. '(main' → logprob: -19.750003814697266
    10. 'built' → logprob: -20.750003814697266

Token 397: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04908052459359169
    2. '__' → logprob: -3.0490806102752686
    3. '__':
' → logprob: -7.6740803718566895
    4. '__.' → logprob: -10.924080848693848
    5. '__:' → logprob: -12.549080848693848
    6. '__["' → logprob: -12.674080848693848
    7. '__.__' → logprob: -13.049080848693848
    8. '__
' → logprob: -15.049080848693848
    9. '.' → logprob: -15.174080848693848
    10. '__",' → logprob: -15.299080848693848

Token 398: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4153604507446289
    2. '   ' → logprob: -1.665360450744629
    3. '	main' → logprob: -1.915360450744629
    4. ' main' → logprob: -5.665360450744629
    5. ' ' → logprob: -11.415360450744629
    6. '_main' → logprob: -12.290360450744629
    7. '  ' → logprob: -12.790360450744629
    8. '	Main' → logprob: -13.540360450744629
    9. '   ' → logprob: -14.415360450744629
    10. '(main' → logprob: -14.665360450744629

Token 399: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -22.875
    5. '_main' → logprob: -23.25
    6. '.main' → logprob: -24.125
    7. '(main' → logprob: -24.125
    8. 'Main' → logprob: -25.25
    9. 'import' → logprob: -25.75
    10. 'mainwindow' → logprob: -28.25

Token 400: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 398
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 159
Tokens correctement prédits (top 10): 299
Précision stricte (1ère position): 35.43%
Précision adaptée (1ère position): 39.95%
Précision (top 10): 75.13%
================================================================================
