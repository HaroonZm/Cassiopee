================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

coins = [10, 50, 100, 500]

def coin_count(cnts):
    return sum(cnts)

def add_coins(a, b):
    return tuple(a[i] + b[i] for i in range(4))

def sub_coins(a, b):
    return tuple(a[i] - b[i] for i in range(4))

def leq(a, b):
    return all(a[i] <= b[i] for i in range(4))

def solve(pay, wallet):
    max_sum = sum(c*w for c,w in zip(coins, wallet))
    dp = {}
    # dp[(used_coins_tuple)] = minimal total coins after change
    # Using BFS to try all payment patterns
    # State: (used_coins_tuple)
    # Constraint: used_coins <= wallet
    # For each payment, change = usage_sum - pay
    # Change is given optimally from infinite coins
    # Condition: no coin type used both in pay and returned as change
    # For each usage tuple, compute usage_sum and usage_coin_count
    # Compute change = usage_sum - pay, minimal coins for change with unlimited coins
    # For minimal change coins, check which coins are used
    # if intersection of used coins and return coins is empty, valid
    # total = usage_coin_count + minimal change coins count
    # minimize total over all valid usage tuples

    # First, precompute change minimal coins and coins used for each amount <= max_sum
    INF = 10**9
    ch_mincoins = [INF]*(max_sum+1)
    ch_used = [set() for _ in range(max_sum+1)]
    ch_mincoins[0] = 0
    for x in range(max_sum+1):
        for i,c in enumerate(coins):
            if x+c <= max_sum and ch_mincoins[x]+1 < ch_mincoins[x+c]:
                ch_mincoins[x+c] = ch_mincoins[x]+1
                ch_used[x+c] = ch_used[x].copy()
                ch_used[x+c].add(coins[i])
    # BFS over usage of coins (avoid huge states, but wallet max 20 coins each)
    # Use nested loops, acceptably small 21**4=~200k
    best = INF
    ans = None
    for a in range(wallet[0]+1):
        for b in range(wallet[1]+1):
            for c_ in range(wallet[2]+1):
                for d in range(wallet[3]+1):
                    usage = [a,b,c_,d]
                    usage_sum = sum(u*co for u,co in zip(usage,coins))
                    if usage_sum < pay:
                        continue
                    change = usage_sum - pay
                    if ch_mincoins[change] == INF:
                        continue
                    # check intersection of coins used in usage and in change
                    used_coins_set = set(coins[i] for i,u in enumerate(usage) if u>0)
                    if used_coins_set & ch_used[change]:
                        continue
                    total_coins = sum(usage) + ch_mincoins[change]
                    if total_coins < best:
                        best = total_coins
                        ans = usage
    return ans

def main():
    input = sys.stdin.readline
    first = True
    while True:
        line = input()
        if not line:
            break
        pay = int(line)
        if pay == 0:
            break
        wallet = tuple(map(int,input().split()))
        usage = solve(pay,wallet)
        if not first:
            print()
        first = False
        for c,u in sorted(zip(coins,usage)):
            if u > 0:
                print(c,u)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5945318937301636
    2. '.' → logprob: -0.9695318937301636
    3. 'import' → logprob: -3.844532012939453
    4. 'newline' → logprob: -4.219532012939453
    5. '\' → logprob: -4.719532012939453
    6. '<|end|>' → logprob: -4.844532012939453
    7. '```' → logprob: -5.344532012939453
    8. '
' → logprob: -5.719532012939453
    9. '<|end|>' → logprob: -6.469532012939453
    10. '' → logprob: -6.469532012939453

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010235155932605267
    2. 'os' → logprob: -4.76023530960083
    3. ' collections' → logprob: -7.76023530960083
    4. ' pathlib' → logprob: -7.76023530960083
    5. ' Py' → logprob: -8.885234832763672
    6. ' math' → logprob: -9.010234832763672
    7. 'collections' → logprob: -9.385234832763672
    8. ' datetime' → logprob: -9.760234832763672
    9. ' import' → logprob: -9.885234832763672
    10. ' typing' → logprob: -9.885234832763672

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6514273285865784
    2. 'import' → logprob: -0.7764273285865784
    3. '.' → logprob: -4.026427268981934
    4. '```' → logprob: -7.901427268981934
    5. ' ' → logprob: -8.526427268981934
    6. '.import' → logprob: -9.651427268981934
    7. '_' → logprob: -10.026427268981934
    8. '<|end|>' → logprob: -10.276427268981934
    9. '	import' → logprob: -10.401427268981934
    10. '_import' → logprob: -11.026427268981934

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2553475499153137
    2. ' deque' → logprob: -1.630347490310669
    3. ' abc' → logprob: -3.880347490310669
    4. 'deque' → logprob: -5.005347728729248
    5. ' Counter' → logprob: -6.755347728729248
    6. ' named' → logprob: -8.00534725189209
    7. 'abc' → logprob: -8.13034725189209
    8. ' import' → logprob: -9.25534725189209
    9. ' collections' → logprob: -10.00534725189209
    10. 'Counter' → logprob: -10.13034725189209

Token 7: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9286866784095764
    2. '\n' → logprob: -1.0536866188049316
    3. '
' → logprob: -1.9286866188049316
    4. 'import' → logprob: -3.1786866188049316
    5. '```' → logprob: -3.3036866188049316
    6. '\' → logprob: -3.8036866188049316
    7. '<|end|>' → logprob: -5.803686618804932
    8. 'newline' → logprob: -6.178686618804932
    9. '' → logprob: -6.928686618804932
    10. '<|end|>' → logprob: -7.053686618804932

Token 8: 'coins' (ID: 48264)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0939600467681885
    2. 'def' → logprob: -1.4689600467681885
    3. '`' → logprob: -2.3439600467681885
    4. '```' → logprob: -2.4689600467681885
    5. 'import' → logprob: -3.4689600467681885
    6. '\' → logprob: -3.4689600467681885
    7. 'b' → logprob: -3.5939600467681885
    8. 'a' → logprob: -3.8439600467681885
    9. '
' → logprob: -4.218959808349609
    10. '#' → logprob: -4.343959808349609

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04505487531423569
    2. '=' → logprob: -3.5450549125671387
    3. '.' → logprob: -4.420054912567139
    4. ' ' → logprob: -6.420054912567139
    5. 's' → logprob: -7.795054912567139
    6. '[' → logprob: -7.920054912567139
    7. '_' → logprob: -8.54505443572998
    8. ')' → logprob: -8.92005443572998
    9. '[:]' → logprob: -9.17005443572998
    10. '  ' → logprob: -9.67005443572998

Token 10: ' [' (ID: 723)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.16938206553459167
    2. 'deque' → logprob: -1.919382095336914
    3. ' [' → logprob: -4.919382095336914
    4. ' []' → logprob: -6.544382095336914
    5. ' ' → logprob: -8.544382095336914
    6. ' defaultdict' → logprob: -9.919382095336914
    7. '[]' → logprob: -10.419382095336914
    8. '[' → logprob: -10.419382095336914
    9. 'Deque' → logprob: -11.294382095336914
    10. ' de' → logprob: -11.419382095336914

Token 11: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32872432470321655
    2. '0' → logprob: -1.8287243843078613
    3. '10' → logprob: -2.4537243843078613
    4. ']' → logprob: -4.078724384307861
    5. '100' → logprob: -4.953724384307861
    6. '5' → logprob: -5.078724384307861
    7. '50' → logprob: -6.703724384307861
    8. ' ' → logprob: -7.453724384307861
    9. ']int' → logprob: -7.703724384307861
    10. '20' → logprob: -8.328723907470703

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007637646631337702
    2. ']' → logprob: -7.625763893127441
    3. ',
' → logprob: -8.625763893127441
    4. ' ,' → logprob: -10.250763893127441
    5. '0' → logprob: -10.500763893127441
    6. ' ' → logprob: -12.125763893127441
    7. ')' → logprob: -12.125763893127441
    8. '<|end|>' → logprob: -12.125763893127441
    9. '```' → logprob: -13.125763893127441
    10. ',

' → logprob: -13.375763893127441

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014411942102015018
    2. '20' → logprob: -4.264411926269531
    3. '5' → logprob: -9.014411926269531
    4. '25' → logprob: -9.889411926269531
    5. '50' → logprob: -10.139411926269531
    6. '1' → logprob: -10.764411926269531
    7. '```' → logprob: -12.514411926269531
    8. '2' → logprob: -12.639411926269531
    9. 'space' → logprob: -13.576911926269531
    10. '10' → logprob: -13.576911926269531

Token 14: '50' (ID: 1434)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8470311760902405
    2. ' ' → logprob: -1.3470311164855957
    3. '20' → logprob: -1.7220311164855957
    4. '50' → logprob: -2.4720311164855957
    5. '25' → logprob: -3.2220311164855957
    6. '9' → logprob: -5.722031116485596
    7. '1' → logprob: -5.722031116485596
    8. '2' → logprob: -6.972031116485596
    9. '10' → logprob: -8.347031593322754
    10. '7' → logprob: -8.597031593322754

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010541265364736319
    2. ']' → logprob: -6.876054286956787
    3. ',
' → logprob: -11.376053810119629
    4. '0' → logprob: -12.876053810119629
    5. ' ,' → logprob: -13.001053810119629
    6. ',

' → logprob: -13.251053810119629
    7. ')' → logprob: -13.876053810119629
    8. '```' → logprob: -14.626053810119629
    9. ',
' → logprob: -15.376053810119629
    10. ' ]' → logprob: -15.751053810119629

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2028137743473053
    2. '100' → logprob: -1.702813744544983
    3. '20' → logprob: -6.827813625335693
    4. '1' → logprob: -9.202814102172852
    5. '200' → logprob: -9.452814102172852
    6. '25' → logprob: -9.952814102172852
    7. '5' → logprob: -10.577814102172852
    8. '500' → logprob: -11.077814102172852
    9. '10' → logprob: -11.515314102172852
    10. '2' → logprob: -11.640314102172852

Token 17: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.05712692439556122
    2. ' ' → logprob: -2.932126998901367
    3. '20' → logprob: -6.807126998901367
    4. '25' → logprob: -7.557126998901367
    5. '1' → logprob: -8.057126998901367
    6. '5' → logprob: -9.432126998901367
    7. '10' → logprob: -9.557126998901367
    8. '200' → logprob: -10.432126998901367
    9. '90' → logprob: -10.807126998901367
    10. '500' → logprob: -10.807126998901367

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10025348514318466
    2. ']' → logprob: -2.3502535820007324
    3. ')' → logprob: -10.350253105163574
    4. ',
' → logprob: -12.100253105163574
    5. '`]' → logprob: -13.225253105163574
    6. ' ]' → logprob: -13.350253105163574
    7. '```' → logprob: -13.475253105163574
    8. ')]' → logprob: -13.975253105163574
    9. ',

' → logprob: -14.350253105163574
    10. '])' → logprob: -14.475253105163574

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1480322629213333
    2. '500' → logprob: -2.2730321884155273
    3. '200' → logprob: -3.3980321884155273
    4. '250' → logprob: -6.898032188415527
    5. '25' → logprob: -9.523032188415527
    6. '20' → logprob: -11.023032188415527
    7. '5' → logprob: -11.148032188415527
    8. '1' → logprob: -11.398032188415527
    9. '100' → logprob: -11.898032188415527
    10. '300' → logprob: -12.273032188415527

Token 20: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.04140644147992134
    2. ' ' → logprob: -3.2914063930511475
    3. '200' → logprob: -5.791406631469727
    4. '250' → logprob: -8.291406631469727
    5. '100' → logprob: -11.416406631469727
    6. '5' → logprob: -11.416406631469727
    7. '1' → logprob: -11.541406631469727
    8. '300' → logprob: -11.541406631469727
    9. '25' → logprob: -12.666406631469727
    10. 'd' → logprob: -13.666406631469727

Token 21: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011057606898248196
    2. ',' → logprob: -4.511057376861572
    3. ')' → logprob: -12.13605785369873
    4. ' ]' → logprob: -13.38605785369873
    5. '```' → logprob: -14.13605785369873
    6. '`]' → logprob: -14.38605785369873
    7. '']' → logprob: -14.88605785369873
    8. '])' → logprob: -15.01105785369873
    9. ',
' → logprob: -15.26105785369873
    10. '],' → logprob: -15.63605785369873

Token 22: 'def' (ID: 1314)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.1008126735687256
    2. 'dp' → logprob: -1.3508126735687256
    3. 'n' → logprob: -1.9758126735687256
    4. 'change' → logprob: -2.7258126735687256
    5. 'def' → logprob: -2.9758126735687256
    6. 'max' → logprob: -3.8508126735687256
    7. 'coin' → logprob: -3.8508126735687256
    8. 'amount' → logprob: -3.9758126735687256
    9. 'coins' → logprob: -4.225812911987305
    10. 'for' → logprob: -4.225812911987305

Token 23: ' coin' (ID: 22179)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12443146854639053
    2. ' coin' → logprob: -2.8744313716888428
    3. ' change' → logprob: -3.9994313716888428
    4. ' make' → logprob: -4.249431610107422
    5. ' calculate' → logprob: -5.374431610107422
    6. ' bfs' → logprob: -5.499431610107422
    7. ' can' → logprob: -5.874431610107422
    8. ' max' → logprob: -5.874431610107422
    9. ' get' → logprob: -5.999431610107422
    10. ' find' → logprob: -6.249431610107422

Token 24: '_count' (ID: 7536)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.06234285980463028
    2. '_' → logprob: -3.562342882156372
    3. 's' → logprob: -4.062342643737793
    4. '_count' → logprob: -4.562342643737793
    5. '_ch' → logprob: -6.562342643737793
    6. '_counter' → logprob: -7.437342643737793
    7. 'Change' → logprob: -7.437342643737793
    8. 'change' → logprob: -7.562342643737793
    9. '_s' → logprob: -7.812342643737793
    10. '_exchange' → logprob: -8.062342643737793

Token 25: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008290443220175803
    2. '_' → logprob: -7.625829219818115
    3. 's' → logprob: -9.000828742980957
    4. '():' → logprob: -10.250828742980957
    5. '(:' → logprob: -10.500828742980957
    6. '(count' → logprob: -11.125828742980957
    7. '(_' → logprob: -11.500828742980957
    8. '```' → logprob: -11.500828742980957
    9. '("("' → logprob: -11.750828742980957
    10. ' (' → logprob: -12.000828742980957

Token 26: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4944806694984436
    2. ')' → logprob: -0.9944806694984436
    3. ',' → logprob: -3.994480609893799
    4. 's' → logprob: -6.869480609893799
    5. '(' → logprob: -7.994480609893799
    6. '=' → logprob: -9.369481086730957
    7. ':' → logprob: -9.494481086730957
    8. '_' → logprob: -9.619481086730957
    9. '),' → logprob: -10.619481086730957
    10. '[' → logprob: -10.869481086730957

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04482089728116989
    2. ',' → logprob: -3.419820785522461
    3. ')' → logprob: -4.544820785522461
    4. '[' → logprob: -8.294820785522461
    5. ':' → logprob: -9.669820785522461
    6. 's' → logprob: -10.044820785522461
    7. ' ):' → logprob: -10.669820785522461
    8. ']:' → logprob: -10.794820785522461
    9. '[]):' → logprob: -10.919820785522461
    10. '):
' → logprob: -11.294820785522461

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05926425755023956
    2. '    ' → logprob: -3.5592641830444336
    3. ' ' → logprob: -4.184264183044434
    4. ':' → logprob: -4.934264183044434
    5. '    
' → logprob: -6.434264183044434
    6. ' return' → logprob: -6.434264183044434
    7. '  ' → logprob: -7.434264183044434
    8. ' total' → logprob: -8.059264183044434
    9. '[' → logprob: -8.184264183044434
    10. '```' → logprob: -8.309264183044434

Token 29: ' return' (ID: 622)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8306506872177124
    2. ' return' → logprob: -1.5806506872177124
    3. '   ' → logprob: -2.080650806427002
    4. ' result' → logprob: -2.705650806427002
    5. ' ' → logprob: -2.830650806427002
    6. 'total' → logprob: -3.705650806427002
    7. '    ' → logprob: -4.080650806427002
    8. 'result' → logprob: -4.330650806427002
    9. 'return' (adapté à ' return') → logprob: -4.705650806427002
    10. ' res' → logprob: -4.705650806427002

Token 30: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.026936998590826988
    2. ' ' → logprob: -4.276937007904053
    3. 'sum' → logprob: -4.401937007904053
    4. ' [' → logprob: -8.401936531066895
    5. '  ' → logprob: -9.901936531066895
    6. ' max' → logprob: -9.901936531066895
    7. '[' → logprob: -10.401936531066895
    8. ' ' → logprob: -10.526936531066895
    9. '   ' → logprob: -11.401936531066895
    10. '	sum' → logprob: -12.151936531066895

Token 31: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.2061658501625061
    2. '(' → logprob: -1.7061657905578613
    3. '([' → logprob: -5.706165790557861
    4. '(x' → logprob: -7.456165790557861
    5. '((' → logprob: -8.33116626739502
    6. '(count' → logprob: -8.45616626739502
    7. '(co' → logprob: -9.08116626739502
    8. '([(' → logprob: -9.20616626739502
    9. '(c' → logprob: -9.83116626739502
    10. '(i' → logprob: -10.70616626739502

Token 32: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00034893216798081994
    2. '*s' → logprob: -8.625349044799805
    3. '(s' → logprob: -9.125349044799805
    4. ')s' → logprob: -11.125349044799805
    5. '(' → logprob: -11.625349044799805
    6. '*' → logprob: -11.750349044799805
    7. 'ts' → logprob: -12.000349044799805
    8. '`s' → logprob: -12.125349044799805
    9. '[s' → logprob: -12.500349044799805
    10. ')' → logprob: -13.125349044799805

Token 33: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003912764601409435
    2. '.values' → logprob: -6.003912925720215
    3. '*' → logprob: -7.378912925720215
    4. ' )' → logprob: -7.878912925720215
    5. '*)' → logprob: -8.503912925720215
    6. '[' → logprob: -9.003912925720215
    7. ' *' → logprob: -10.003912925720215
    8. '`)' → logprob: -11.253912925720215
    9. ' ' → logprob: -11.503912925720215
    10. '[i' → logprob: -12.253912925720215

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23577407002449036
    2. '(' → logprob: -1.735774040222168
    3. '(
' → logprob: -5.110774040222168
    4. '```' → logprob: -5.360774040222168
    5. '(cnt' → logprob: -5.360774040222168
    6. '_' → logprob: -5.610774040222168
    7. '[]' → logprob: -6.485774040222168
    8. '(def' → logprob: -6.485774040222168
    9. '*' → logprob: -6.610774040222168
    10. '[' → logprob: -6.860774040222168

Token 35: ' add' (ID: 1147)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.1173497885465622
    2. ' main' → logprob: -3.242349863052368
    3. ' calculate' → logprob: -3.867349863052368
    4. ' get' → logprob: -4.242349624633789
    5. ' make' → logprob: -5.242349624633789
    6. ' find' → logprob: -5.242349624633789
    7. ' total' → logprob: -5.492349624633789
    8. ' count' → logprob: -5.617349624633789
    9. ' coins' → logprob: -5.867349624633789
    10. ' max' → logprob: -6.242349624633789

Token 36: '_co' (ID: 21102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18880479037761688
    2. '_coin' → logprob: -2.563804864883423
    3. '(' → logprob: -2.813804864883423
    4. '_co' → logprob: -3.563804864883423
    5. '_counts' → logprob: -6.188804626464844
    6. '(a' → logprob: -7.063804626464844
    7. '_(' → logprob: -7.688804626464844
    8. ' (' → logprob: -7.938804626464844
    9. '(_)' → logprob: -7.938804626464844
    10. ' ' → logprob: -8.438804626464844

Token 37: 'ins' (ID: 1564)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.04164774343371391
    2. 'unts' → logprob: -3.6666476726531982
    3. 'ins' → logprob: -5.291647911071777
    4. '_' → logprob: -5.666647911071777
    5. 'in' → logprob: -6.291647911071777
    6. ' unt' → logprob: -6.541647911071777
    7. 'i' → logprob: -6.916647911071777
    8. '   ' → logprob: -7.291647911071777
    9. '```' → logprob: -8.666647911071777
    10. 'unter' → logprob: -8.666647911071777

Token 38: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13565196096897125
    2. '(cnt' → logprob: -2.1356520652770996
    3. '(count' → logprob: -5.1356520652771
    4. ' (' → logprob: -7.0106520652771
    5. '(co' → logprob: -7.3856520652771
    6. '(c' → logprob: -8.260651588439941
    7. '(_' → logprob: -8.760651588439941
    8. '(s' → logprob: -9.010651588439941
    9. '(prev' → logprob: -9.260651588439941
    10. '((' → logprob: -9.260651588439941

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006839334033429623
    2. ' ,' → logprob: -5.131839275360107
    3. ',b' → logprob: -7.381839275360107
    4. ',d' → logprob: -9.631839752197266
    5. ',a' → logprob: -9.881839752197266
    6. ',r' → logprob: -10.631839752197266
    7. '):' → logprob: -10.756839752197266
    8. ',c' → logprob: -10.881839752197266
    9. '[' → logprob: -11.381839752197266
    10. '_,' → logprob: -11.506839752197266

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03366021811962128
    2. 'b' → logprob: -3.4086601734161377
    3. ' ' → logprob: -12.283659934997559
    4. ')' → logprob: -13.033659934997559
    5. ',b' → logprob: -13.158659934997559
    6. ')b' → logprob: -13.533659934997559
    7. ',' → logprob: -13.658659934997559
    8. ' ' → logprob: -14.158659934997559
    9. 'space' → logprob: -15.033659934997559
    10. ' б' → logprob: -15.158659934997559

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021093101531732827
    2. ',' → logprob: -9.125210762023926
    3. '):
' → logprob: -9.875210762023926
    4. ')' → logprob: -10.250210762023926
    5. ':' → logprob: -12.125210762023926
    6. ' ):' → logprob: -12.250210762023926
    7. '):
' → logprob: -13.375210762023926
    8. '[' → logprob: -13.875210762023926
    9. '[]):' → logprob: -14.250210762023926
    10. ']:' → logprob: -14.625210762023926

Token 42: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8305810689926147
    2. ':' → logprob: -1.0805810689926147
    3. '[:]' → logprob: -2.2055811882019043
    4. ' =' → logprob: -3.5805811882019043
    5. '):' → logprob: -3.8305811882019043
    6. '   ' → logprob: -3.9555811882019043
    7. '[a' → logprob: -3.9555811882019043
    8. '[i' → logprob: -4.330581188201904
    9. ',' → logprob: -5.580581188201904
    10. '[:' → logprob: -5.830581188201904

Token 43: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.15125150978565216
    2. '[' → logprob: -2.1512515544891357
    3. '[a' → logprob: -3.7762515544891357
    4. ' [
' → logprob: -7.526251316070557
    5. '[cnt' → logprob: -9.276251792907715
    6. '[i' → logprob: -9.401251792907715
    7. '   ' → logprob: -9.401251792907715
    8. ' ' → logprob: -9.526251792907715
    9. '[
' → logprob: -9.651251792907715
    10. '[:]' → logprob: -9.901251792907715

Token 44: ' tuple' (ID: 31311)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2524832487106323
    2. ' [' → logprob: -1.7524832487106323
    3. '[' → logprob: -3.002483367919922
    4. '[i' → logprob: -10.252483367919922
    5. 'a' → logprob: -10.252483367919922
    6. ' a' → logprob: -10.627483367919922
    7. '[(' → logprob: -11.502483367919922
    8. '[list' → logprob: -12.877483367919922
    9. '[len' → logprob: -13.002483367919922
    10. '[
' → logprob: -13.377483367919922

Token 45: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1522110551595688
    2. '(x' → logprob: -2.2772109508514404
    3. '(map' → logprob: -3.5272109508514404
    4. '([' → logprob: -5.6522111892700195
    5. '(i' → logprob: -6.1522111892700195
    6. '(' → logprob: -6.7772111892700195
    7. '(sum' → logprob: -7.1522111892700195
    8. '(c' → logprob: -7.4022111892700195
    9. '(int' → logprob: -8.15221118927002
    10. '((' → logprob: -8.27721118927002

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021212305000517517
    2. 'i' → logprob: -9.000211715698242
    3. '_i' → logprob: -10.125211715698242
    4. '[' → logprob: -10.250211715698242
    5. '+' → logprob: -11.625211715698242
    6. '[x' → logprob: -14.000211715698242
    7. '+i' → logprob: -14.000211715698242
    8. ')' → logprob: -14.125211715698242
    9. '[idx' → logprob: -14.125211715698242
    10. ' +' → logprob: -15.625211715698242

Token 47: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3364132344722748
    2. ' +' → logprob: -1.7114132642745972
    3. ']' → logprob: -2.7114131450653076
    4. ']+' → logprob: -3.3364131450653076
    5. ')' → logprob: -6.336413383483887
    6. ')+' → logprob: -7.211413383483887
    7. ' ]' → logprob: -8.211413383483887
    8. ' ' → logprob: -8.961413383483887
    9. '+]' → logprob: -10.336413383483887
    10. ']+=' → logprob: -11.086413383483887

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931619048118591
    2. ' +' → logprob: -0.6931619048118591
    3. ')+' → logprob: -12.568161964416504
    4. '+b' → logprob: -12.943161964416504
    5. ' plus' → logprob: -13.318161964416504
    6. ')' → logprob: -13.443161964416504
    7. '+i' → logprob: -13.693161964416504
    8. ' ' → logprob: -14.068161964416504
    9. ']+' → logprob: -14.693161964416504
    10. '+k' → logprob: -14.818161964416504

Token 49: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759403705596924
    2. 'b' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.825940132141113
    4. ')b' → logprob: -15.325940132141113
    5. '	b' → logprob: -15.950940132141113
    6. ' ' → logprob: -16.82594108581543
    7. ' б' → logprob: -17.07594108581543
    8. '1' → logprob: -17.45094108581543
    9. '   ' → logprob: -17.82594108581543
    10. ')' → logprob: -17.82594108581543

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004534334584604949
    2. ')' → logprob: -8.000452995300293
    3. '(i' → logprob: -9.625452995300293
    4. ']' → logprob: -10.750452995300293
    5. '[' → logprob: -11.000452995300293
    6. '<|end|>' → logprob: -13.000452995300293
    7. '[I' → logprob: -13.125452995300293
    8. ')i' → logprob: -13.250452995300293
    9. 'i' → logprob: -13.500452995300293
    10. '```' → logprob: -13.750452995300293

Token 51: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0070461672730743885
    2. ' for' → logprob: -5.257046222686768
    3. ']' → logprob: -6.507046222686768
    4. 'for' → logprob: -8.13204574584961
    5. ' ' → logprob: -11.88204574584961
    6. '}' → logprob: -11.88204574584961
    7. ' )' → logprob: -12.38204574584961
    8. '	for' → logprob: -13.50704574584961
    9. '<|end|>' → logprob: -13.75704574584961
    10. '])' → logprob: -14.13204574584961

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17272299528121948
    2. ')' → logprob: -1.9227230548858643
    3. 'for' → logprob: -4.422722816467285
    4. ' ' → logprob: -8.172722816467285
    5. '   ' → logprob: -9.922722816467285
    6. ' )' → logprob: -10.172722816467285
    7. '	for' → logprob: -10.422722816467285
    8. '<|end|>' → logprob: -11.797722816467285
    9. ' ' → logprob: -12.797722816467285
    10. '  ' → logprob: -12.797722816467285

Token 53: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004310480318963528
    2. 'range' → logprob: -5.879310607910156
    3. ' i' → logprob: -6.504310607910156
    4. 'i' → logprob: -12.629310607910156
    5. ' ' → logprob: -13.379310607910156
    6. '	range' → logprob: -13.629310607910156
    7. ' xrange' → logprob: -13.754310607910156
    8. '(range' → logprob: -15.129310607910156
    9. ' in' → logprob: -16.004310607910156
    10. '_range' → logprob: -16.629310607910156

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012983977794647217
    2. ' range' → logprob: -5.012983798980713
    3. 'in' → logprob: -5.262983798980713
    4. 'range' → logprob: -6.887983798980713
    5. ' ' → logprob: -10.262984275817871
    6. '<|end|>' → logprob: -11.637984275817871
    7. ' xrange' → logprob: -13.512984275817871
    8. '	range' → logprob: -14.137984275817871
    9. '(range' → logprob: -14.262984275817871
    10. '  ' → logprob: -14.387984275817871

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759395956993103
    2. 'range' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.450939178466797
    4. '	range' → logprob: -16.700939178466797
    5. '(range' → logprob: -17.450939178466797
    6. ' xrange' → logprob: -18.325939178466797
    7. '.range' → logprob: -19.825939178466797
    8. '_range' → logprob: -20.325939178466797
    9. 'rang' → logprob: -20.575939178466797
    10. ' rang' → logprob: -21.075939178466797

Token 56: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3959597647190094
    2. '(' → logprob: -1.145959734916687
    3. '4' → logprob: -5.020959854125977
    4. 'len' → logprob: -6.020959854125977
    5. ' len' → logprob: -10.895959854125977
    6. ' (' → logprob: -13.020959854125977
    7. ' ' → logprob: -13.895959854125977
    8. '	len' → logprob: -16.270959854125977
    9. '   ' → logprob: -16.395959854125977
    10. '(
' → logprob: -16.520959854125977

Token 57: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.054974477738142014
    2. 'len' → logprob: -2.9299745559692383
    3. ' len' → logprob: -9.554974555969238
    4. ' ' → logprob: -10.804974555969238
    5. '(len' → logprob: -14.679974555969238
    6. '   ' → logprob: -16.179973602294922
    7. '5' → logprob: -16.429973602294922
    8. '6' → logprob: -16.679973602294922
    9. '```' → logprob: -16.679973602294922
    10. '3' → logprob: -16.804973602294922

Token 58: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014165629632771015
    2. '))' → logprob: -4.26416540145874
    3. ')))' → logprob: -14.139165878295898
    4. ' )' → logprob: -14.264165878295898
    5. ')
' → logprob: -14.889165878295898
    6. '),' → logprob: -15.889165878295898
    7. '   ' → logprob: -16.2641658782959
    8. ')")' → logprob: -16.8891658782959
    9. ')}' → logprob: -17.3891658782959
    10. ' ))' → logprob: -17.6391658782959

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02418694645166397
    2. '

' → logprob: -4.024187088012695
    3. 'visited' → logprob: -6.274187088012695
    4. 'coins' → logprob: -6.524187088012695
    5. '
' → logprob: -7.149187088012695
    6. 'max' → logprob: -7.774187088012695
    7. 'distance' → logprob: -8.649187088012695
    8. 'coin' → logprob: -8.774187088012695
    9. 'dist' → logprob: -8.774187088012695
    10. 'dp' → logprob: -8.899187088012695

Token 60: ' sub' (ID: 1543)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.22308966517448425
    2. ' bfs' → logprob: -2.3480896949768066
    3. 'coin' → logprob: -2.7230896949768066
    4. ' get' → logprob: -4.848089694976807
    5. 'b' → logprob: -4.973089694976807
    6. ' main' → logprob: -5.223089694976807
    7. 'sub' → logprob: -6.473089694976807
    8. ' can' → logprob: -6.473089694976807
    9. 'subtract' → logprob: -6.473089694976807
    10. ' solve' → logprob: -6.598089694976807

Token 61: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0005425465060397983
    2. 'tract' → logprob: -7.750542640686035
    3. 'stract' → logprob: -9.750542640686035
    4. '_' → logprob: -10.250542640686035
    5. 's' → logprob: -11.750542640686035
    6. '_coin' → logprob: -13.000542640686035
    7. '(co' → logprob: -13.125542640686035
    8. 't' → logprob: -13.625542640686035
    9. '_(' → logprob: -13.625542640686035
    10. '_tokens' → logprob: -13.750542640686035

Token 62: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0076425946317613125
    2. 'in' → logprob: -5.38264274597168
    3. 'unt' → logprob: -6.50764274597168
    4. 'unts' → logprob: -6.75764274597168
    5. 'ints' → logprob: -8.88264274597168
    6. '(ins' → logprob: -9.75764274597168
    7. '   ' → logprob: -10.00764274597168
    8. '(' → logprob: -10.63264274597168
    9. '()' → logprob: -11.25764274597168
    10. '```' → logprob: -11.63264274597168

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003377270477358252
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -13.125337600708008
    4. '((' → logprob: -16.250337600708008
    5. '(
' → logprob: -16.750337600708008
    6. '(A' → logprob: -17.250337600708008
    7. '(s' → logprob: -17.625337600708008
    8. '(lhs' → logprob: -18.125337600708008
    9. '(

' → logprob: -19.000337600708008
    10. '\(' → logprob: -19.250337600708008

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010545044642640278
    2. ' ,' → logprob: -9.250105857849121
    3. ',b' → logprob: -12.125105857849121
    4. ',i' → logprob: -13.500105857849121
    5. ')' → logprob: -14.375105857849121
    6. ',a' → logprob: -15.125105857849121
    7. ',
' → logprob: -15.625105857849121
    8. '<|end|>' → logprob: -15.625105857849121
    9. '‌,' → logprob: -16.125104904174805
    10. '[i' → logprob: -16.125104904174805

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022889316082
    2. ' b' → logprob: -1.9102288484573364
    3. ')b' → logprob: -13.410228729248047
    4. 'a' → logprob: -13.535228729248047
    5. ')' → logprob: -14.160228729248047
    6. ' ' → logprob: -14.535228729248047
    7. ' a' → logprob: -14.910228729248047
    8. ',b' → logprob: -16.535228729248047
    9. '	b' → logprob: -17.410228729248047
    10. 's' → logprob: -17.410228729248047

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021343429398257285
    2. ')' → logprob: -8.750213623046875
    3. '):
' → logprob: -9.875213623046875
    4. ' ):' → logprob: -13.250213623046875
    5. '):
' → logprob: -13.875213623046875
    6. ',' → logprob: -15.250213623046875
    7. ':' → logprob: -15.750213623046875
    8. ')：' → logprob: -15.875213623046875
    9. '):

' → logprob: -16.500213623046875
    10. '   ' → logprob: -16.625213623046875

Token 67: '   ' (ID: 271)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.19445784389972687
    2. '   ' → logprob: -2.069457769393921
    3. ' return' → logprob: -3.069457769393921
    4. '(tuple' → logprob: -6.3194580078125
    5. 'tuple' → logprob: -6.9444580078125
    6. '    ' → logprob: -7.6944580078125
    7. ' ' → logprob: -8.4444580078125
    8. ' (' → logprob: -8.6944580078125
    9. 'return' → logprob: -8.9444580078125
    10. ' ' → logprob: -9.8194580078125

Token 68: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03162308782339096
    2. ' tuple' → logprob: -3.906623125076294
    3. 'return' (adapté à ' return') → logprob: -4.531622886657715
    4. '   ' → logprob: -8.781622886657715
    5. 'tuple' → logprob: -9.656622886657715
    6. ' ' → logprob: -10.781622886657715
    7. ')' → logprob: -12.156622886657715
    8. '	return' → logprob: -12.406622886657715
    9. 'eturn' → logprob: -13.156622886657715
    10. '    ' → logprob: -13.156622886657715

Token 69: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.03805813565850258
    2. 'tuple' → logprob: -3.288058042526245
    3. '(tuple' → logprob: -11.038058280944824
    4. ' ' → logprob: -15.913058280944824
    5. ' (' → logprob: -15.913058280944824
    6. ' ' → logprob: -16.038057327270508
    7. '(' → logprob: -16.163057327270508
    8. 't' → logprob: -17.538057327270508
    9. ' tup' → logprob: -17.538057327270508
    10. '_tuple' → logprob: -18.038057327270508

Token 70: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011161656584590673
    2. 'a' → logprob: -6.8761162757873535
    3. '(' → logprob: -9.501115798950195
    4. '(
' → logprob: -12.376115798950195
    5. ' (' → logprob: -13.251115798950195
    6. ' a' → logprob: -13.626115798950195
    7. '((' → logprob: -13.876115798950195
    8. '(max' → logprob: -15.626115798950195
    9. '(

' → logprob: -16.626115798950195
    10. '   ' → logprob: -17.126115798950195

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.50000286102295
    3. '[' → logprob: -13.62500286102295
    4. 'i' → logprob: -15.75000286102295
    5. '(i' → logprob: -16.875003814697266
    6. ']' → logprob: -16.875003814697266
    7. '[I' → logprob: -16.875003814697266
    8. '[j' → logprob: -17.250003814697266
    9. '[
' → logprob: -17.375003814697266
    10. '
' → logprob: -17.500003814697266

Token 72: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004769022576510906
    2. '-' → logprob: -5.3797688484191895
    3. ')' → logprob: -9.379769325256348
    4. ' ' → logprob: -9.754769325256348
    5. ']' → logprob: -13.254769325256348
    6. ' ' → logprob: -13.254769325256348
    7. '>' → logprob: -14.004769325256348
    8. ' )' → logprob: -14.254769325256348
    9. '}' → logprob: -15.629769325256348
    10. ')-' → logprob: -16.12976837158203

Token 73: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0160506758838892
    2. '-' → logprob: -4.141050815582275
    3. ' ' → logprob: -11.266050338745117
    4. ')' → logprob: -12.766050338745117
    5. ' ' → logprob: -14.891050338745117
    6. ' -
' → logprob: -16.141050338745117
    7. ' –' → logprob: -16.766050338745117
    8. '>' → logprob: -16.891050338745117
    9. ' −' → logprob: -17.141050338745117
    10. '<|end|>' → logprob: -17.391050338745117

Token 74: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03804171830415726
    2. 'b' → logprob: -3.288041830062866
    3. '1' → logprob: -16.288042068481445
    4. ' ' → logprob: -16.288042068481445
    5. ')b' → logprob: -16.663042068481445
    6. ' ' → logprob: -16.913042068481445
    7. ' б' → logprob: -18.413042068481445
    8. '0' → logprob: -18.788042068481445
    9. '	b' → logprob: -18.788042068481445
    10. '>b' → logprob: -19.163042068481445

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009623279795050621
    2. '[' → logprob: -4.759623050689697
    3. ']' → logprob: -7.634623050689697
    4. ')' → logprob: -8.134623527526855
    5. '][' → logprob: -9.009623527526855
    6. ')[' → logprob: -10.509623527526855
    7. '(i' → logprob: -10.759623527526855
    8. '[I' → logprob: -10.759623527526855
    9. '[
' → logprob: -11.634623527526855
    10. '[]' → logprob: -12.134623527526855

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021685787942260504
    2. ')' → logprob: -6.627168655395508
    3. ' ]' → logprob: -7.502168655395508
    4. ' for' → logprob: -8.627168655395508
    5. 'for' → logprob: -9.502168655395508
    6. ' ' → logprob: -11.002168655395508
    7. '](' → logprob: -12.002168655395508
    8. '])' → logprob: -12.002168655395508
    9. '}' → logprob: -14.127168655395508
    10. '1' → logprob: -14.127168655395508

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009457140229642391
    2. 'for' → logprob: -5.009457111358643
    3. ' ' → logprob: -6.384457111358643
    4. ')' → logprob: -6.884457111358643
    5. ' )' → logprob: -11.3844575881958
    6. '	for' → logprob: -12.2594575881958
    7. ' ' → logprob: -13.2594575881958
    8. ' in' → logprob: -13.2594575881958
    9. ' (' → logprob: -13.5094575881958
    10. ']' → logprob: -13.6344575881958

Token 78: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.35920289158821106
    2. ' i' → logprob: -1.3592028617858887
    3. 'range' → logprob: -3.2342028617858887
    4. 'i' → logprob: -5.234202861785889
    5. ' ' → logprob: -8.734203338623047
    6. ')' → logprob: -12.359203338623047
    7. ' in' → logprob: -12.359203338623047
    8. '(range' → logprob: -12.859203338623047
    9. ' )' → logprob: -13.609203338623047
    10. '  ' → logprob: -13.734203338623047

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20696240663528442
    2. ' range' → logprob: -2.3319623470306396
    3. '(' → logprob: -3.0819623470306396
    4. 'range' → logprob: -3.9569623470306396
    5. ' (' → logprob: -4.456962585449219
    6. ' ' → logprob: -4.456962585449219
    7. '(range' → logprob: -7.206962585449219
    8. 'in' → logprob: -7.456962585449219
    9. ' i' → logprob: -8.581962585449219
    10. ')' → logprob: -9.706962585449219

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31327277421951294
    2. 'range' → logprob: -1.3132727146148682
    3. ' ' → logprob: -12.313272476196289
    4. '4' → logprob: -12.688272476196289
    5. '(' → logprob: -13.313272476196289
    6. '(range' → logprob: -13.438272476196289
    7. '[' → logprob: -15.813272476196289
    8. '	range' → logprob: -15.938272476196289
    9. ' (' → logprob: -17.18827247619629
    10. ' xrange' → logprob: -17.68827247619629

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10766385495662689
    2. 'range' → logprob: -2.607663869857788
    3. ' range' → logprob: -3.607663869857788
    4. '(range' → logprob: -6.732663631439209
    5. ' (' → logprob: -10.357664108276367
    6. '4' → logprob: -11.232664108276367
    7. ' ' → logprob: -11.482664108276367
    8. ')' → logprob: -13.607664108276367
    9. '	range' → logprob: -14.482664108276367
    10. '(
' → logprob: -15.607664108276367

Token 82: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00030161935137584805
    2. ' ' → logprob: -8.125301361083984
    3. 'range' → logprob: -12.625301361083984
    4. ' range' → logprob: -13.250301361083984
    5. ')' → logprob: -14.875301361083984
    6. 'len' → logprob: -17.000301361083984
    7. '' → logprob: -18.000301361083984
    8. '  ' → logprob: -18.250301361083984
    9. '   ' → logprob: -18.312801361083984
    10. '(' → logprob: -18.750301361083984

Token 83: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '))' → logprob: -13.62500286102295
    3. '):' → logprob: -13.62500286102295
    4. ' )' → logprob: -15.87500286102295
    5. ')
' → logprob: -16.250001907348633
    6. ')>' → logprob: -18.125001907348633
    7. ')}' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.375001907348633
    9. ')`' → logprob: -18.375001907348633
    10. '),' → logprob: -18.500001907348633

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002561268862336874
    2. '

' → logprob: -6.377561092376709
    3. '
' → logprob: -7.377561092376709
    4. '#' → logprob: -9.752561569213867
    5. '\' → logprob: -9.877561569213867
    6. '<|end|>' → logprob: -10.752561569213867
    7. 'class' → logprob: -11.127561569213867
    8. ')' → logprob: -11.127561569213867
    9. '```' → logprob: -11.127561569213867
    10. ':' → logprob: -11.252561569213867

Token 85: ' le' (ID: 505)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.48583653569221497
    2. 'b' → logprob: -1.4858365058898926
    3. ' bfs' → logprob: -2.4858365058898926
    4. ' can' → logprob: -3.3608365058898926
    5. 'coin' → logprob: -3.6108365058898926
    6. 'is' → logprob: -5.860836505889893
    7. ' coin' → logprob: -6.235836505889893
    8. 'possible' → logprob: -6.860836505889893
    9. 'min' → logprob: -7.235836505889893
    10. 'get' → logprob: -7.235836505889893

Token 86: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5103813409805298
    2. '(a' → logprob: -1.5103813409805298
    3. 'ss' → logprob: -2.6353812217712402
    4. 's' → logprob: -3.0103812217712402
    5. '_(' → logprob: -3.7603812217712402
    6. '(c' → logprob: -4.51038122177124
    7. '_' → logprob: -5.13538122177124
    8. '(co' → logprob: -5.63538122177124
    9. 'xico' → logprob: -5.88538122177124
    10. '(' → logprob: -6.13538122177124

Token 87: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02044600620865822
    2. '(' → logprob: -4.395445823669434
    3. '_co' → logprob: -5.270445823669434
    4. '(co' → logprob: -6.020445823669434
    5. ' (' → logprob: -8.520445823669434
    6. '(_' → logprob: -9.895445823669434
    7. '_' → logprob: -10.895445823669434
    8. '_coin' → logprob: -11.145445823669434
    9. '_(' → logprob: -11.270445823669434
    10. '(A' → logprob: -12.020445823669434

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00976305641233921
    2. ' ,' → logprob: -4.634763240814209
    3. ',b' → logprob: -12.25976276397705
    4. ',a' → logprob: -13.38476276397705
    5. ')' → logprob: -14.63476276397705
    6. ',c' → logprob: -17.009763717651367
    7. ',
' → logprob: -17.384763717651367
    8. '_,' → logprob: -17.384763717651367
    9. ',i' → logprob: -17.509763717651367
    10. '),' → logprob: -17.509763717651367

Token 89: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10021281987428665
    2. 'b' → logprob: -2.350212812423706
    3. ' ' → logprob: -12.475213050842285
    4. ')b' → logprob: -13.850213050842285
    5. ')' → logprob: -14.850213050842285
    6. '    ' → logprob: -14.975213050842285
    7. '   ' → logprob: -15.850213050842285
    8. '  ' → logprob: -15.975213050842285
    9. '	b' → logprob: -16.72521209716797
    10. ' ' → logprob: -16.72521209716797

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004309076175559312
    2. ')' → logprob: -7.875431060791016
    3. ' ):' → logprob: -10.000431060791016
    4. '):
' → logprob: -12.250431060791016
    5. ':' → logprob: -16.000431060791016
    6. ')：' → logprob: -16.125431060791016
    7. ' )' → logprob: -16.750431060791016
    8. ',' → logprob: -16.875431060791016
    9. '):

' → logprob: -17.125431060791016
    10. ')):' → logprob: -17.250431060791016

Token 91: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03479250147938728
    2. '():' → logprob: -4.034792423248291
    3. '   ' → logprob: -5.159792423248291
    4. ' :' → logprob: -5.159792423248291
    5. '):' → logprob: -6.534792423248291
    6. '(' → logprob: -6.659792423248291
    7. '(a' → logprob: -7.409792423248291
    8. ' ():' → logprob: -7.409792423248291
    9. ' (' → logprob: -8.28479290008545
    10. ':return' → logprob: -8.78479290008545

Token 92: ' return' (ID: 622)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.011072466149926186
    2. 'all' → logprob: -4.761072635650635
    3. ' al' → logprob: -6.386072635650635
    4. ' ' → logprob: -7.386072635650635
    5. ' a' → logprob: -9.886072158813477
    6. '    ' → logprob: -10.386072158813477
    7. '   ' → logprob: -10.761072158813477
    8. '  ' → logprob: -11.261072158813477
    9. ' True' → logprob: -11.261072158813477
    10. ' ' → logprob: -12.261072158813477

Token 93: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.020655058324337006
    2. 'all' → logprob: -3.8956551551818848
    3. ' al' → logprob: -9.520654678344727
    4. '	all' → logprob: -11.145654678344727
    5. ' ' → logprob: -11.770654678344727
    6. ' a' → logprob: -11.895654678344727
    7. 'a' → logprob: -12.270654678344727
    8. 'al' → logprob: -13.395654678344727
    9. '(all' → logprob: -13.770654678344727
    10. ' ' → logprob: -13.770654678344727

Token 94: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0014617849374189973
    2. '(' → logprob: -6.626461982727051
    3. '((' → logprob: -9.00146198272705
    4. '(ai' → logprob: -12.00146198272705
    5. '(
' → logprob: -13.25146198272705
    6. '(x' → logprob: -13.50146198272705
    7. '([' → logprob: -13.62646198272705
    8. 'a' → logprob: -14.50146198272705
    9. '(b' → logprob: -14.50146198272705
    10. '(i' → logprob: -15.00146198272705

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -14.750000953674316
    4. '[j' → logprob: -18.250001907348633
    5. '[
' → logprob: -18.625001907348633
    6. '[I' → logprob: -18.750001907348633
    7. '[idx' → logprob: -19.000001907348633
    8. '_i' → logprob: -19.000001907348633
    9. '[x' → logprob: -20.125001907348633
    10. '```' → logprob: -20.500001907348633

Token 96: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31673672795295715
    2. '<=' → logprob: -1.3167366981506348
    3. ']' → logprob: -6.441736698150635
    4. ']<=' → logprob: -6.691736698150635
    5. '[i' → logprob: -7.691736698150635
    6. '[' → logprob: -9.066737174987793
    7. ')<=' → logprob: -10.691737174987793
    8. ' ]' → logprob: -11.941737174987793
    9. ')' → logprob: -12.066737174987793
    10. ' ' → logprob: -12.066737174987793

Token 97: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.038113780319690704
    2. '<=' → logprob: -3.288113832473755
    3. ')<=' → logprob: -10.913113594055176
    4. '[' → logprob: -11.038113594055176
    5. ' ' → logprob: -11.038113594055176
    6. ']<=' → logprob: -11.288113594055176
    7. ')' → logprob: -12.288113594055176
    8. ' ' → logprob: -14.288113594055176
    9. ']' → logprob: -14.413113594055176
    10. '```' → logprob: -14.538113594055176

Token 98: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1269284337759018
    2. 'b' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.626928329467773
    5. ')b' → logprob: -17.001928329467773
    6. '	b' → logprob: -17.751928329467773
    7. ' б' → logprob: -19.626928329467773
    8. '_b' → logprob: -20.376928329467773
    9. ')' → logprob: -20.626928329467773
    10. '```' → logprob: -21.001928329467773

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0087516784551553e-05
    2. '[' → logprob: -12.50001049041748
    3. '(i' → logprob: -12.75001049041748
    4. ')' → logprob: -13.37501049041748
    5. '[
' → logprob: -14.50001049041748
    6. ' [' → logprob: -14.75001049041748
    7. ')[' → logprob: -15.25001049041748
    8. ']' → logprob: -16.125009536743164
    9. ' i' → logprob: -16.125009536743164
    10. ' ' → logprob: -16.125009536743164

Token 100: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011528274044394493
    2. ' for' → logprob: -4.636528491973877
    3. ' )' → logprob: -6.636528491973877
    4. 'for' → logprob: -8.136528015136719
    5. ']' → logprob: -9.011528015136719
    6. ' ' → logprob: -10.386528015136719
    7. '])' → logprob: -11.886528015136719
    8. ' ' → logprob: -13.011528015136719
    9. '	for' → logprob: -14.511528015136719
    10. '}' → logprob: -14.511528015136719

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01732219196856022
    2. 'for' → logprob: -4.267322063446045
    3. ')' → logprob: -5.767322063446045
    4. ' ' → logprob: -11.017322540283203
    5. ' )' → logprob: -12.142322540283203
    6. '	for' → logprob: -12.892322540283203
    7. '   ' → logprob: -15.017322540283203
    8. '  ' → logprob: -15.267322540283203
    9. ' ' → logprob: -15.392322540283203
    10. ' or' → logprob: -16.017322540283203

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18502222001552582
    2. ' range' → logprob: -1.935022234916687
    3. 'range' → logprob: -3.9350221157073975
    4. 'i' → logprob: -5.310022354125977
    5. ' ' → logprob: -12.435022354125977
    6. ' in' → logprob: -14.810022354125977
    7. '  ' → logprob: -15.060022354125977
    8. 'Range' → logprob: -15.310022354125977
    9. '	i' → logprob: -15.435022354125977
    10. ' ' → logprob: -15.560022354125977

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005672083701938391
    2. 'in' → logprob: -5.255671977996826
    3. 'range' → logprob: -8.505672454833984
    4. ' range' → logprob: -8.630672454833984
    5. ' ' → logprob: -9.880672454833984
    6. ',' → logprob: -13.130672454833984
    7. ')' → logprob: -13.880672454833984
    8. '4' → logprob: -14.005672454833984
    9. '  ' → logprob: -14.380672454833984
    10. '<|end|>' → logprob: -15.005672454833984

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020796209573746
    2. 'range' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.350208282470703
    4. '(range' → logprob: -15.600208282470703
    5. '	range' → logprob: -15.600208282470703
    6. '[' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.600208282470703
    8. '  ' → logprob: -16.725208282470703
    9. '4' → logprob: -17.725208282470703
    10. 'Range' → logprob: -17.975208282470703

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011009939044015482
    2. '(len' → logprob: -9.125109672546387
    3. '4' → logprob: -14.000109672546387
    4. 'len' → logprob: -15.500109672546387
    5. '(
' → logprob: -16.500110626220703
    6. ' (' → logprob: -17.375110626220703
    7. ' ' → logprob: -18.375110626220703
    8. ' len' → logprob: -19.500110626220703
    9. ')' → logprob: -19.750110626220703
    10. '   ' → logprob: -20.125110626220703

Token 106: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0017100441036745906
    2. ' ' → logprob: -6.376709938049316
    3. 'len' → logprob: -12.126709938049316
    4. ')' → logprob: -13.376709938049316
    5. ' len' → logprob: -14.501709938049316
    6. '   ' → logprob: -16.439210891723633
    7. '  ' → logprob: -16.439210891723633
    8. '(' → logprob: -16.751710891723633
    9. '1' → logprob: -17.876710891723633
    10. ' )' → logprob: -17.876710891723633

Token 107: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.250001907348633
    4. ' )' → logprob: -14.875001907348633
    5. ')return' → logprob: -16.000001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.375001907348633
    8. ')

' → logprob: -17.625001907348633
    9. ')**' → logprob: -18.250001907348633
    10. ')}' → logprob: -18.500001907348633

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015854990109801292
    2. ':' → logprob: -4.765854835510254
    3. 'coins' → logprob: -5.640854835510254
    4. ')' → logprob: -6.515854835510254
    5. 'deque' → logprob: -7.390854835510254
    6. '.' → logprob: -8.390854835510254
    7. 'class' → logprob: -8.515854835510254
    8. '#' → logprob: -8.515854835510254
    9. '
' → logprob: -9.140854835510254
    10. '(' → logprob: -9.640854835510254

Token 109: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.8806397318840027
    2. ' can' → logprob: -1.2556397914886475
    3. ' coin' → logprob: -2.6306397914886475
    4. ' main' → logprob: -3.2556397914886475
    5. 'can' → logprob: -3.6306397914886475
    6. 'coin' → logprob: -3.7556397914886475
    7. ' make' → logprob: -3.8806397914886475
    8. 'dp' → logprob: -4.005639553070068
    9. ' get' → logprob: -4.130639553070068
    10. ' dp' → logprob: -4.130639553070068

Token 110: '(pay' (ID: 163383)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08196226507425308
    2. '(amount' → logprob: -2.9569623470306396
    3. '(' → logprob: -3.9569623470306396
    4. '(co' → logprob: -6.0819621086120605
    5. '()' → logprob: -6.3319621086120605
    6. ' ():' → logprob: -7.0819621086120605
    7. '(m' → logprob: -7.7069621086120605
    8. '(s' → logprob: -7.8319621086120605
    9. '(total' → logprob: -8.706962585449219
    10. '(a' → logprob: -8.831962585449219

Token 111: ',' (ID: 11)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.15251252055168152
    2. '(amount' → logprob: -2.902512550354004
    3. '):' → logprob: -3.152512550354004
    4. '_amount' → logprob: -3.527512550354004
    5. ')' → logprob: -5.277512550354004
    6. '(' → logprob: -5.777512550354004
    7. '(m' → logprob: -6.652512550354004
    8. 'amount' → logprob: -6.902512550354004
    9. '_amt' → logprob: -6.902512550354004
    10. '):
' → logprob: -7.652512550354004

Token 112: ' wallet' (ID: 22762)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.45788583159446716
    2. ' have' → logprob: -2.0828857421875
    3. 'change' → logprob: -3.4578857421875
    4. 'use' → logprob: -3.9578857421875
    5. ' use' → logprob: -4.0828857421875
    6. ' cnt' → logprob: -4.3328857421875
    7. 'give' → logprob: -4.4578857421875
    8. ' get' → logprob: -4.4578857421875
    9. ' coins' → logprob: -4.5828857421875
    10. ' change' → logprob: -4.5828857421875

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007565218023955822
    2. ',' → logprob: -5.007565021514893
    3. ')' → logprob: -7.132565021514893
    4. ' ):' → logprob: -10.88256549835205
    5. '):
' → logprob: -11.38256549835205
    6. ':' → logprob: -12.00756549835205
    7. ')):' → logprob: -12.50756549835205
    8. ' ' → logprob: -13.00756549835205
    9. '   ' → logprob: -13.13256549835205
    10. '_counts' → logprob: -14.13256549835205

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06506118923425674
    2. ':' → logprob: -2.815061092376709
    3. '    ' → logprob: -6.815061092376709
    4. '    
' → logprob: -7.065061092376709
    5. ' ' → logprob: -8.440061569213867
    6. ' :' → logprob: -8.565061569213867
    7. '
' → logprob: -9.690061569213867
    8. ',' → logprob: -9.815061569213867
    9. '\' → logprob: -9.815061569213867
    10. '  ' → logprob: -9.815061569213867

Token 115: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37695154547691345
    2. ' queue' → logprob: -2.0019514560699463
    3. ' q' → logprob: -2.7519514560699463
    4. ' dp' → logprob: -2.8769514560699463
    5. ' visited' → logprob: -4.001951694488525
    6. 'dp' → logprob: -4.501951694488525
    7. 'queue' → logprob: -5.001951694488525
    8. ' from' → logprob: -5.126951694488525
    9. ' if' → logprob: -5.501951694488525
    10. ' dist' → logprob: -6.001951694488525

Token 116: '_sum' (ID: 29859)
  Prédit: '_pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pay' → logprob: -0.8155763745307922
    2. '_amount' → logprob: -1.9405763149261475
    3. '_' → logprob: -2.0655763149261475
    4. '_value' → logprob: -2.3155763149261475
    5. '_coin' → logprob: -3.1905763149261475
    6. '_co' → logprob: -3.1905763149261475
    7. '_sum' → logprob: -3.5655763149261475
    8. '_count' → logprob: -3.5655763149261475
    9. '_val' → logprob: -4.190576553344727
    10. '_payment' → logprob: -4.565576553344727

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017734732246026397
    2. '=' → logprob: -6.376773357391357
    3. '_' → logprob: -10.251773834228516
    4. ',' → logprob: -10.751773834228516
    5. ' ' → logprob: -11.751773834228516
    6. 's' → logprob: -13.376773834228516
    7. '  ' → logprob: -14.251773834228516
    8. ')' → logprob: -14.251773834228516
    9. ' =
' → logprob: -14.376773834228516
    10. '   ' → logprob: -14.626773834228516

Token 118: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.15941885113716125
    2. ' ' → logprob: -2.534418821334839
    3. ' pay' → logprob: -2.784418821334839
    4. 'sum' → logprob: -5.909419059753418
    5. ' max' → logprob: -6.409419059753418
    6. 'pay' → logprob: -6.909419059753418
    7. '500' → logprob: -8.034419059753418
    8. '100' → logprob: -8.409419059753418
    9. ' sys' → logprob: -8.659419059753418
    10. ' coin' → logprob: -10.784419059753418

Token 119: '(c' (ID: 2410)
  Prédit: '(wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -0.022744525223970413
    2. '(' → logprob: -4.397744655609131
    3. '(co' → logprob: -4.897744655609131
    4. '([' → logprob: -7.022744655609131
    5. '(pay' → logprob: -7.147744655609131
    6. 'wallet' → logprob: -7.772744655609131
    7. ' wallet' → logprob: -9.022744178771973
    8. 'coins' → logprob: -9.147744178771973
    9. '(w' → logprob: -9.272744178771973
    10. '(max' → logprob: -10.022744178771973

Token 120: '*w' (ID: 147727)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.08763139694929123
    2. '*' → logprob: -3.8376314640045166
    3. 'oints' → logprob: -3.8376314640045166
    4. 'coins' → logprob: -3.9626314640045166
    5. 'oin' → logprob: -4.2126312255859375
    6. '[' → logprob: -5.5876312255859375
    7. 's' → logprob: -7.4626312255859375
    8. '   ' → logprob: -8.087631225585938
    9. ')' → logprob: -8.462631225585938
    10. ' coins' → logprob: -8.712631225585938

Token 121: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5166783332824707
    2. 'allet' → logprob: -1.2666783332824707
    3. 'a' → logprob: -3.8916783332824707
    4. ' coins' → logprob: -4.516678333282471
    5. 'e' → logprob: -4.641678333282471
    6. '[' → logprob: -4.766678333282471
    7. 't' → logprob: -4.766678333282471
    8. 'o' → logprob: -5.016678333282471
    9. 'for' → logprob: -5.016678333282471
    10. 'coins' → logprob: -5.016678333282471

Token 122: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2846115529537201
    2. 'c' → logprob: -1.4096115827560425
    3. ',c' → logprob: -6.159611701965332
    4. ',' → logprob: -6.909611701965332
    5. '(c' → logprob: -9.284611701965332
    6. 'w' → logprob: -9.409611701965332
    7. '	c' → logprob: -9.534611701965332
    8. ' w' → logprob: -10.659611701965332
    9. ' ' → logprob: -10.659611701965332
    10. ' ' → logprob: -11.722111701965332

Token 123: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2289057970046997
    2. ',w' → logprob: -1.6039057970046997
    3. ',c' → logprob: -5.72890567779541
    4. ' ,' → logprob: -8.97890567779541
    5. ',i' → logprob: -9.85390567779541
    6. 'w' → logprob: -10.97890567779541
    7. ',b' → logprob: -11.22890567779541
    8. ',s' → logprob: -12.47890567779541
    9. ',count' → logprob: -12.72890567779541
    10. ',d' → logprob: -12.85390567779541

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019651511684060097
    2. ',' → logprob: -6.626965045928955
    3. ' zip' → logprob: -8.001965522766113
    4. 'in' → logprob: -8.376965522766113
    5. ' ' → logprob: -10.501965522766113
    6. 'zip' → logprob: -11.001965522766113
    7. ' coin' → logprob: -12.126965522766113
    8. ' ,' → logprob: -12.251965522766113
    9. ',i' → logprob: -12.876965522766113
    10. ',c' → logprob: -13.001965522766113

Token 125: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.00030578780570067465
    2. 'zip' → logprob: -8.125306129455566
    3. '(zip' → logprob: -11.750306129455566
    4. ' coin' → logprob: -13.625306129455566
    5. ' enumerate' → logprob: -15.125306129455566
    6. ' ' → logprob: -15.750306129455566
    7. '.zip' → logprob: -15.750306129455566
    8. '_zip' → logprob: -16.50030517578125
    9. '```' → logprob: -18.25030517578125
    10. '   ' → logprob: -18.25030517578125

Token 126: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.014233083464205265
    2. '(pay' → logprob: -4.764233112335205
    3. '(wallet' → logprob: -5.389233112335205
    4. 'coins' → logprob: -7.764233112335205
    5. ' coins' → logprob: -8.264232635498047
    6. '(' → logprob: -8.639232635498047
    7. '(c' → logprob: -10.139232635498047
    8. '(payment' → logprob: -10.764232635498047
    9. '(coeff' → logprob: -11.139232635498047
    10. ' (' → logprob: -11.264232635498047

Token 127: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0009879115968942642
    2. 'coins' → logprob: -7.125988006591797
    3. '```' → logprob: -9.375988006591797
    4. 'ns' → logprob: -9.750988006591797
    5. 's' → logprob: -11.875988006591797
    6. ' coins' → logprob: -12.125988006591797
    7. 'in' → logprob: -12.500988006591797
    8. '   ' → logprob: -12.625988006591797
    9. 'i' → logprob: -13.125988006591797
    10. ')' → logprob: -13.250988006591797

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010801267810165882
    2. ',w' → logprob: -4.760801315307617
    3. ' ,' → logprob: -6.135801315307617
    4. '[' → logprob: -11.885801315307617
    5. '

' → logprob: -12.635801315307617
    6. '(wallet' → logprob: -13.135801315307617
    7. 'wallet' → logprob: -13.385801315307617
    8. ' wallet' → logprob: -13.635801315307617
    9. ',p' → logprob: -13.760801315307617
    10. '```' → logprob: -14.010801315307617

Token 129: ' wallet' (ID: 22762)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.2521248459815979
    2. ' wallet' → logprob: -1.5021247863769531
    3. 'pay' → logprob: -8.877124786376953
    4. '(wallet' → logprob: -10.502124786376953
    5. ' pay' → logprob: -11.502124786376953
    6. 'coin' → logprob: -11.877124786376953
    7. ' coin' → logprob: -13.002124786376953
    8. 'payment' → logprob: -13.877124786376953
    9. 'w' → logprob: -13.877124786376953
    10. '   ' → logprob: -14.002124786376953

Token 130: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002700377954170108
    2. ' ))' → logprob: -6.377700328826904
    3. ')' → logprob: -7.127700328826904
    4. '))
' → logprob: -8.627700805664062
    5. '))

' → logprob: -12.502700805664062
    6. ' )' → logprob: -12.502700805664062
    7. ' ))
' → logprob: -13.127700805664062
    8. '])' → logprob: -13.252700805664062
    9. ')))' → logprob: -13.502700805664062
    10. ' if' → logprob: -14.752700805664062

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02597849629819393
    2. '
' → logprob: -3.9009785652160645
    3. ' if' → logprob: -6.5259785652160645
    4. '    
' → logprob: -6.5259785652160645
    5. '    ' → logprob: -7.2759785652160645
    6. ' queue' → logprob: -7.7759785652160645
    7. '<|end|>' → logprob: -8.275978088378906
    8. ')' → logprob: -8.400978088378906
    9. ',' → logprob: -8.400978088378906
    10. 'queue' → logprob: -8.650978088378906

Token 132: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5114004611968994
    2. ' if' → logprob: -1.3864004611968994
    3. ' dp' → logprob: -2.3864004611968994
    4. 'dp' (adapté à ' dp') → logprob: -3.6364004611968994
    5. ' 
' → logprob: -3.7614004611968994
    6. '   ' → logprob: -5.63640022277832
    7. '    
' → logprob: -6.01140022277832
    8. 'if' → logprob: -6.38640022277832
    9. ' DP' → logprob: -8.63640022277832
    10. '  
' → logprob: -9.26140022277832

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019419649615883827
    2. '=' → logprob: -6.251942157745361
    3. '[' → logprob: -11.501941680908203
    4. ' =[' → logprob: -13.126941680908203
    5. ' ' → logprob: -14.626941680908203
    6. ',' → logprob: -15.001941680908203
    7. '=[' → logprob: -16.126941680908203
    8. '.' → logprob: -16.626941680908203
    9. ']' → logprob: -16.876941680908203
    10. '   ' → logprob: -17.001941680908203

Token 134: ' {}
' (ID: 11421)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18718163669109344
    2. '[' → logprob: -2.1871817111968994
    3. ' {' → logprob: -3.8121817111968994
    4. ' [-' → logprob: -4.18718147277832
    5. '[-' → logprob: -4.31218147277832
    6. '{' → logprob: -5.18718147277832
    7. ' [[' → logprob: -7.68718147277832
    8. '{}' → logprob: -7.81218147277832
    9. ' {}' → logprob: -8.18718147277832
    10. ' {(' → logprob: -8.56218147277832

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024571802467107773
    2. '
' → logprob: -4.399571895599365
    3. '    
' → logprob: -5.024571895599365
    4. ' =' → logprob: -6.524571895599365
    5. '  
' → logprob: -7.274571895599365
    6. '(queue' → logprob: -7.649571895599365
    7. ',' → logprob: -7.774571895599365
    8. '    ' → logprob: -8.024571418762207
    9. ' 
' → logprob: -8.274571418762207
    10. ' queue' → logprob: -8.524571418762207

Token 136: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5958154797554016
    2. ' queue' → logprob: -1.0958154201507568
    3. 'dp' → logprob: -2.595815420150757
    4. '   ' → logprob: -3.595815420150757
    5. 'q' → logprob: -5.220815658569336
    6. ' dp' → logprob: -5.970815658569336
    7. 'dq' → logprob: -6.095815658569336
    8. ' q' → logprob: -7.720815658569336
    9. 'deque' → logprob: -7.720815658569336
    10. 'from' → logprob: -7.845815658569336

Token 137: ' dp' (ID: 21546)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6182551980018616
    2. 'queue' → logprob: -0.8682551980018616
    3. 'dp' → logprob: -3.743255138397217
    4. ' dp' → logprob: -5.368255138397217
    5. 'q' → logprob: -5.743255138397217
    6. 'dq' → logprob: -6.493255138397217
    7. 'from' → logprob: -6.618255138397217
    8. ' for' → logprob: -6.743255138397217
    9. 'for' → logprob: -6.868255138397217
    10. '   ' → logprob: -7.118255138397217

Token 138: '[(' (ID: 20542)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47192925214767456
    2. '[' → logprob: -1.2219293117523193
    3. '[(' → logprob: -2.8469293117523193
    4. '<|end|>' → logprob: -4.09692907333374
    5. '=' → logprob: -6.34692907333374
    6. ' ' → logprob: -6.84692907333374
    7. '.setdefault' → logprob: -7.47192907333374
    8. '<|end|>' → logprob: -7.84692907333374
    9. ']' → logprob: -8.096929550170898
    10. '_queue' → logprob: -8.471929550170898

Token 139: 'used' (ID: 4943)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.9265236258506775
    2. '0' → logprob: -1.1765236854553223
    3. ')' → logprob: -2.6765236854553223
    4. 'cnt' → logprob: -3.6765236854553223
    5. ' pay' → logprob: -3.8015236854553223
    6. ' ' → logprob: -3.9265236854553223
    7. 'tuple' → logprob: -4.051523685455322
    8. 'coin' → logprob: -4.176523685455322
    9. 'wallet' → logprob: -4.176523685455322
    10. 'coins' → logprob: -4.301523685455322

Token 140: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.6511943936347961
    2. ')]' → logprob: -1.6511943340301514
    3. ',' → logprob: -2.2761943340301514
    4. '_' → logprob: -2.4011943340301514
    5. '_counts' → logprob: -3.1511943340301514
    6. ')' → logprob: -4.4011945724487305
    7. ' ,' → logprob: -5.0261945724487305
    8. '_tokens' → logprob: -5.0261945724487305
    9. '_mask' → logprob: -5.6511945724487305
    10. ' )' → logprob: -5.7761945724487305

Token 141: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.1403549313545227
    2. 'ints' → logprob: -2.765354871749878
    3. 'unts' → logprob: -3.765354871749878
    4. 'nts' → logprob: -4.265355110168457
    5. ')' → logprob: -5.390355110168457
    6. ',' → logprob: -5.515355110168457
    7. 'i' → logprob: -5.640355110168457
    8. 'unt' → logprob: -5.640355110168457
    9. 'oints' → logprob: -6.140355110168457
    10. ']' → logprob: -6.140355110168457

Token 142: '_tuple' (ID: 53371)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23962438106536865
    2. ')]' → logprob: -1.6146243810653687
    3. '_counts' → logprob: -5.614624500274658
    4. ' ,' → logprob: -5.614624500274658
    5. '_count' → logprob: -5.864624500274658
    6. '_,' → logprob: -6.864624500274658
    7. ')' → logprob: -6.989624500274658
    8. '_' → logprob: -7.864624500274658
    9. ',_' → logprob: -8.1146240234375
    10. ' )' → logprob: -8.2396240234375

Token 143: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28307825326919556
    2. ')]' → logprob: -1.4080781936645508
    3. ')' → logprob: -7.408078193664551
    4. ' ,' → logprob: -7.658078193664551
    5. ']' → logprob: -7.783078193664551
    6. ' )' → logprob: -8.78307819366455
    7. '):' → logprob: -9.40807819366455
    8. ' ' → logprob: -10.28307819366455
    9. ',
' → logprob: -10.78307819366455
    10. '   ' → logprob: -10.90807819366455

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043456193059682846
    2. '=' → logprob: -3.1684560775756836
    3. ']' → logprob: -8.168456077575684
    4. ',' → logprob: -9.418456077575684
    5. ':' → logprob: -10.918456077575684
    6. ' ' → logprob: -11.168456077575684
    7. ')' → logprob: -11.293456077575684
    8. ' =
' → logprob: -11.918456077575684
    9. '<|end|>' → logprob: -11.918456077575684
    10. 'def' → logprob: -12.043456077575684

Token 145: ' minimal' (ID: 19957)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4412719011306763
    2. '(pay' → logprob: -1.4412719011306763
    3. '(' → logprob: -2.3162717819213867
    4. 'number' → logprob: -2.6912717819213867
    5. 'pay' → logprob: -2.8162717819213867
    6. ' (' → logprob: -3.0662717819213867
    7. ' number' → logprob: -3.0662717819213867
    8. 'True' → logprob: -3.8162717819213867
    9. '(min' → logprob: -3.8162717819213867
    10. 'min' → logprob: -3.9412717819213867

Token 146: ' total' (ID: 3609)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.10437358915805817
    2. 'number' → logprob: -3.2293736934661865
    3. ' coins' → logprob: -3.4793736934661865
    4. 'coins' → logprob: -4.229373455047607
    5. ' coin' → logprob: -5.729373455047607
    6. ' change' → logprob: -5.854373455047607
    7. ' count' → logprob: -6.229373455047607
    8. 'coin' → logprob: -6.729373455047607
    9. ' total' → logprob: -7.229373455047607
    10. 'change' → logprob: -7.229373455047607

Token 147: ' coins' (ID: 28969)
  Prédit: ' coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.6240598559379578
    2. 'coins' → logprob: -1.1240599155426025
    3. ' number' → logprob: -2.7490599155426025
    4. ' amount' → logprob: -3.8740599155426025
    5. '_co' → logprob: -3.9990599155426025
    6. 'amount' → logprob: -5.499059677124023
    7. 'count' → logprob: -5.499059677124023
    8. ' coin' → logprob: -5.499059677124023
    9. ' used' → logprob: -5.499059677124023
    10. ' count' → logprob: -5.624059677124023

Token 148: ' after' (ID: 1934)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.36826586723327637
    2. '   ' → logprob: -2.2432658672332764
    3. 'used' → logprob: -2.8682658672332764
    4. ',' → logprob: -3.3682658672332764
    5. 'count' → logprob: -3.8682658672332764
    6. ' count' → logprob: -3.8682658672332764
    7. ' =' → logprob: -3.9932658672332764
    8. '_used' → logprob: -4.2432661056518555
    9. '
' → logprob: -5.4932661056518555
    10. ' ' → logprob: -5.6182661056518555

Token 149: ' change' (ID: 3343)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'using' → logprob: -1.1449730396270752
    2. 'pay' → logprob: -1.1449730396270752
    3. 'used' → logprob: -1.3949730396270752
    4. 'payment' → logprob: -3.519973039627075
    5. ' using' → logprob: -4.144972801208496
    6. 'use' → logprob: -4.519972801208496
    7. ' used' → logprob: -5.019972801208496
    8. 'def' → logprob: -5.394972801208496
    9. 'purchase' → logprob: -5.394972801208496
    10. 'the' → logprob: -5.769972801208496

Token 150: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11227105557918549
    2. '<|end|>' → logprob: -2.8622710704803467
    3. '    ' → logprob: -4.112270832061768
    4. '
' → logprob: -4.112270832061768
    5. '    
' → logprob: -5.487270832061768
    6. '<|end|>' → logprob: -6.112270832061768
    7. ')' → logprob: -6.362270832061768
    8. 'def' → logprob: -6.487270832061768
    9. ',' → logprob: -6.487270832061768
    10. ' ' → logprob: -6.987270832061768

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20574495196342468
    2. '
' → logprob: -2.455744981765747
    3. '    
' → logprob: -2.455744981765747
    4. ' 
' → logprob: -5.455744743347168
    5. ')' → logprob: -5.955744743347168
    6. '  
' → logprob: -5.955744743347168
    7. '<|end|>' → logprob: -6.330744743347168
    8. '    ' → logprob: -7.330744743347168
    9. '   
' → logprob: -7.955744743347168
    10. ',' → logprob: -7.955744743347168

Token 152: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5277003049850464
    2. '   ' → logprob: -1.2777003049850464
    3. 'queue' → logprob: -2.402700424194336
    4. ' dp' → logprob: -4.027700424194336
    5. 'dp' → logprob: -4.402700424194336
    6. ' q' → logprob: -5.777700424194336
    7. 'q' → logprob: -6.402700424194336
    8. ' for' → logprob: -6.652700424194336
    9. ' dq' → logprob: -6.902700424194336
    10. ' initial' → logprob: -7.027700424194336

Token 153: ' Using' (ID: 17511)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.132308840751648
    2. ' for' → logprob: -1.257308840751648
    3. 'for' → logprob: -2.0073089599609375
    4. 'queue' → logprob: -2.2573089599609375
    5. 'dp' → logprob: -2.7573089599609375
    6. '   ' → logprob: -3.5073089599609375
    7. ' dp' → logprob: -3.7573089599609375
    8. 'from' → logprob: -4.6323089599609375
    9. '#' → logprob: -4.8823089599609375
    10. ' from' → logprob: -5.1323089599609375

Token 154: ' BFS' (ID: 190016)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7985481023788452
    2. 'deque' → logprob: -1.6735481023788452
    3. ' deque' → logprob: -2.2985482215881348
    4. 'a' → logprob: -2.5485482215881348
    5. ' bfs' → logprob: -2.7985482215881348
    6. ' BFS' → logprob: -3.4235482215881348
    7. 'b' → logprob: -3.7985482215881348
    8. ' sys' → logprob: -4.923548221588135
    9. 'B' → logprob: -5.048548221588135
    10. ' coins' → logprob: -5.173548221588135

Token 155: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06330103427171707
    2. '   ' → logprob: -2.9383010864257812
    3. '    
' → logprob: -5.688301086425781
    4. ' queue' → logprob: -5.813301086425781
    5. 'queue' → logprob: -6.688301086425781
    6. '	queue' → logprob: -8.313301086425781
    7. '  
' → logprob: -8.438301086425781
    8. '   
' → logprob: -9.438301086425781
    9. ' 
' → logprob: -10.188301086425781
    10. '_queue' → logprob: -10.438301086425781

Token 156: ' try' (ID: 2075)
  Prédit: ' explore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' explore' → logprob: -0.2911168038845062
    2. 'expl' → logprob: -2.791116714477539
    3. 'queue' → logprob: -2.791116714477539
    4. ' find' → logprob: -3.166116714477539
    5. ' queue' → logprob: -3.166116714477539
    6. '   ' → logprob: -4.541116714477539
    7. 'find' → logprob: -5.291116714477539
    8. 'deque' → logprob: -5.416116714477539
    9. ' search' → logprob: -5.541116714477539
    10. 'expand' → logprob: -5.666116714477539

Token 157: ' all' (ID: 722)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6131220459938049
    2. ' all' → logprob: -1.9881219863891602
    3. '   ' → logprob: -2.11312198638916
    4. ' coins' → logprob: -2.36312198638916
    5. ':' → logprob: -3.61312198638916
    6. '    ' → logprob: -4.11312198638916
    7. '  ' → logprob: -4.23812198638916
    8. 'coins' → logprob: -4.36312198638916
    9. ' a' → logprob: -5.11312198638916
    10. 'to' → logprob: -5.61312198638916

Token 158: ' payment' (ID: 9277)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.0330077409744263
    2. ' used' → logprob: -1.4080077409744263
    3. ' states' → logprob: -1.9080077409744263
    4. 'possible' → logprob: -2.1580076217651367
    5. ' possibilities' → logprob: -3.1580076217651367
    6. ' combinations' → logprob: -3.9080076217651367
    7. ' coin' → logprob: -3.9080076217651367
    8. 'used' → logprob: -4.533007621765137
    9. '   ' → logprob: -4.658007621765137
    10. 'coin' → logprob: -4.783007621765137

Token 159: ' patterns' (ID: 18587)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.38837602734565735
    2. ':' → logprob: -2.013375997543335
    3. '   ' → logprob: -3.138375997543335
    4. 'states' → logprob: -3.388375997543335
    5. ' queue' → logprob: -3.513375997543335
    6. '_states' → logprob: -4.013376235961914
    7. ' options' → logprob: -4.263376235961914
    8. '_queue' → logprob: -4.763376235961914
    9. 'queue' → logprob: -4.888376235961914
    10. '):' → logprob: -4.888376235961914

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10229023545980453
    2. '
' → logprob: -2.602290153503418
    3. '    
' → logprob: -4.352290153503418
    4. ' queue' → logprob: -5.102290153503418
    5. 'queue' → logprob: -6.102290153503418
    6. '  
' → logprob: -7.602290153503418
    7. '	queue' → logprob: -7.852290153503418
    8. '   
' → logprob: -8.352290153503418
    9. ' 
' → logprob: -8.852290153503418
    10. '    ' → logprob: -9.102290153503418

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031429845839738846
    2. '
' → logprob: -4.156429767608643
    3. ' queue' → logprob: -5.031429767608643
    4. 'queue' → logprob: -5.531429767608643
    5. '    
' → logprob: -5.781429767608643
    6. 'q' → logprob: -7.656429767608643
    7. '	queue' → logprob: -8.0314302444458
    8. '    ' → logprob: -8.9064302444458
    9. '  
' → logprob: -9.0314302444458
    10. '_queue' → logprob: -9.6564302444458

Token 162: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.07608645409345627
    2. 'queue' → logprob: -2.7010865211486816
    3. '   ' → logprob: -5.326086521148682
    4. ' q' → logprob: -7.701086521148682
    5. 'q' → logprob: -8.326086044311523
    6. '
' → logprob: -8.451086044311523
    7. '    
' → logprob: -9.076086044311523
    8. ' from' → logprob: -9.701086044311523
    9. ' que' → logprob: -9.826086044311523
    10. 'deque' → logprob: -10.451086044311523

Token 163: ' State' (ID: 5388)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.36188775300979614
    2. ' queue' → logprob: -1.3618876934051514
    3. '   ' → logprob: -3.3618876934051514
    4. 'q' → logprob: -4.4868879318237305
    5. ' q' → logprob: -7.2368879318237305
    6. 'que' → logprob: -8.23688793182373
    7. '
' → logprob: -8.48688793182373
    8. 'from' → logprob: -8.73688793182373
    9. ' que' → logprob: -9.36188793182373
    10. ' from' → logprob: -10.73688793182373

Token 164: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11448144912719727
    2. '=' → logprob: -2.7394814491271973
    3. '_queue' → logprob: -3.4894814491271973
    4. ',' → logprob: -5.114481449127197
    5. 's' → logprob: -5.239481449127197
    6. ' queue' → logprob: -7.614481449127197
    7. ')' → logprob: -7.614481449127197
    8. 'queue' → logprob: -8.364480972290039
    9. ':' → logprob: -9.114480972290039
    10. '_space' → logprob: -9.114480972290039

Token 165: ' (' (ID: 350)
  Prédit: '(wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -1.10703444480896
    2. '(' → logprob: -1.35703444480896
    3. ' (' → logprob: -2.23203444480896
    4. ' wallet' → logprob: -2.48203444480896
    5. '(queue' → logprob: -2.73203444480896
    6. 'wallet' → logprob: -3.10703444480896
    7. 'used' → logprob: -3.35703444480896
    8. ' used' → logprob: -3.35703444480896
    9. 'deque' → logprob: -4.357034683227539
    10. '(de' → logprob: -5.107034683227539

Token 166: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.24736542999744415
    2. ' used' → logprob: -2.4973654747009277
    3. 'pay' → logprob: -2.6223654747009277
    4. 'wallet' → logprob: -3.9973654747009277
    5. '(' → logprob: -4.122365474700928
    6. ')' → logprob: -5.247365474700928
    7. 'tuple' → logprob: -5.247365474700928
    8. ' pay' → logprob: -5.747365474700928
    9. 'payment' → logprob: -5.872365474700928
    10. ' wallet' → logprob: -5.872365474700928

Token 167: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0010056582977995276
    2. '_' → logprob: -7.62600564956665
    3. '_coin' → logprob: -8.751006126403809
    4. 'coins' → logprob: -9.126006126403809
    5. '_tokens' → logprob: -9.626006126403809
    6. ')_' → logprob: -9.751006126403809
    7. ')' → logprob: -10.126006126403809
    8. '_wallet' → logprob: -11.001006126403809
    9. '_tuple' → logprob: -11.376006126403809
    10. '_c' → logprob: -11.626006126403809

Token 168: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.39711397886276245
    2. '_' → logprob: -2.1471140384674072
    3. '_co' → logprob: -2.8971140384674072
    4. 'in' → logprob: -3.0221140384674072
    5. 'coins' → logprob: -4.147113800048828
    6. '       ' → logprob: -4.397113800048828
    7. '```' → logprob: -4.522113800048828
    8. '   ' → logprob: -4.772113800048828
    9. '_tokens' → logprob: -5.022113800048828
    10. '_ins' → logprob: -5.147113800048828

Token 169: '_tuple' (ID: 53371)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7527799606323242
    2. ',' → logprob: -1.0027799606323242
    3. '_tuple' → logprob: -2.127779960632324
    4. ',)' → logprob: -4.002779960632324
    5. '_t' → logprob: -4.752779960632324
    6. ')_' → logprob: -5.377779960632324
    7. '_counts' → logprob: -6.127779960632324
    8. '_' → logprob: -6.252779960632324
    9. ',_' → logprob: -6.377779960632324
    10. '_count' → logprob: -6.627779960632324

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0342390276491642
    2. ',' → logprob: -3.4092390537261963
    3. '):' → logprob: -8.034238815307617
    4. ',)' → logprob: -8.659238815307617
    5. ' )' → logprob: -10.034238815307617
    6. '   ' → logprob: -11.159238815307617
    7. ')
' → logprob: -11.659238815307617
    8. '),' → logprob: -11.659238815307617
    9. ')=' → logprob: -12.034238815307617
    10. '))' → logprob: -12.534238815307617

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012724604457616806
    2. '
' → logprob: -4.88772439956665
    3. '    
' → logprob: -6.38772439956665
    4. ' queue' → logprob: -6.88772439956665
    5. ',' → logprob: -7.13772439956665
    6. ')' → logprob: -7.76272439956665
    7. 'queue' → logprob: -7.76272439956665
    8. '  
' → logprob: -8.262724876403809
    9. '	queue' → logprob: -9.637724876403809
    10. '    ' → logprob: -9.762724876403809

Token 172: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6489818096160889
    2. ' queue' → logprob: -0.8989818096160889
    3. 'queue' → logprob: -3.398981809616089
    4. '
' → logprob: -3.398981809616089
    5. ' from' → logprob: -6.773982048034668
    6. '    
' → logprob: -6.773982048034668
    7. 'from' → logprob: -7.773982048034668
    8. 'q' → logprob: -8.273982048034668
    9. ' 
' → logprob: -8.773982048034668
    10. ' q' → logprob: -8.898982048034668

Token 173: ' Constraint' (ID: 86056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8382804989814758
    2. 'queue' → logprob: -0.8382804989814758
    3. ' queue' → logprob: -2.088280439376831
    4. 'q' → logprob: -4.96328067779541
    5. 'from' → logprob: -6.58828067779541
    6. '
' → logprob: -7.46328067779541
    7. ' q' → logprob: -7.46328067779541
    8. 'start' → logprob: -7.58828067779541
    9. ' start' → logprob: -7.83828067779541
    10. 'que' → logprob: -8.33828067779541

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20575736463069916
    2. ' =' → logprob: -1.9557573795318604
    3. ' :' → logprob: -3.5807573795318604
    4. '=' → logprob: -4.705757141113281
    5. ',' → logprob: -5.580757141113281
    6. '   ' → logprob: -7.080757141113281
    7. '):' → logprob: -7.080757141113281
    8. ':
' → logprob: -7.830757141113281
    9. '<|end|>' → logprob: -8.455757141113281
    10. ' on' → logprob: -8.455757141113281

Token 175: ' used' (ID: 2061)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6391507387161255
    2. ' all' → logprob: -1.3891507387161255
    3. 'le' → logprob: -2.139150619506836
    4. ' used' → logprob: -3.014150619506836
    5. 'all' → logprob: -3.889150619506836
    6. ' sum' → logprob: -4.389150619506836
    7. ' True' → logprob: -5.639150619506836
    8. 'used' → logprob: -5.639150619506836
    9. 'sum' → logprob: -5.889150619506836
    10. ' for' → logprob: -6.639150619506836

Token 176: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.011145791970193386
    2. '_' → logprob: -4.76114559173584
    3. '_tokens' → logprob: -7.01114559173584
    4. 'coins' → logprob: -7.13614559173584
    5. '_coin' → logprob: -8.26114559173584
    6. ' coins' → logprob: -9.13614559173584
    7. '_counts' → logprob: -9.76114559173584
    8. ' =' → logprob: -9.88614559173584
    9. '<=' → logprob: -10.26114559173584
    10. ' <=' → logprob: -10.63614559173584

Token 177: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00938226468861103
    2. '_ins' → logprob: -5.634382247924805
    3. '_' → logprob: -6.009382247924805
    4. 'in' → logprob: -6.384382247924805
    5. '_co' → logprob: -7.759382247924805
    6. '```' → logprob: -8.384382247924805
    7. 'coins' → logprob: -8.634382247924805
    8. 'i' → logprob: -8.759382247924805
    9. 'ns' → logprob: -9.009382247924805
    10. 'ints' → logprob: -9.759382247924805

Token 178: ' <=' (ID: 5017)
  Prédit: '_tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -1.1471229791641235
    2. ')' → logprob: -1.2721229791641235
    3. '_' → logprob: -1.8971229791641235
    4. ' =' → logprob: -3.022122859954834
    5. ' <=' → logprob: -3.522122859954834
    6. '<=' → logprob: -3.647122859954834
    7. '_count' → logprob: -3.772122859954834
    8. '_counts' → logprob: -3.772122859954834
    9. '_t' → logprob: -4.022122859954834
    10. '=' → logprob: -4.022122859954834

Token 179: ' wallet' (ID: 22762)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.6326562762260437
    2. ' wallet' → logprob: -0.7576562762260437
    3. '(wallet' → logprob: -10.25765609741211
    4. 'w' → logprob: -12.13265609741211
    5. '_wallet' → logprob: -12.50765609741211
    6. '.wallet' → logprob: -13.00765609741211
    7. ' tuple' → logprob: -13.00765609741211
    8. 'wal' → logprob: -13.63265609741211
    9. 'tuple' → logprob: -14.00765609741211
    10. 'pay' → logprob: -14.00765609741211

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43817389011383057
    2. '
' → logprob: -1.0631738901138306
    3. '    
' → logprob: -4.813173770904541
    4. '  
' → logprob: -8.4381742477417
    5. '<|end|>' → logprob: -8.5631742477417
    6. ')' → logprob: -8.8131742477417
    7. '    ' → logprob: -9.3131742477417
    8. '
' → logprob: -9.3131742477417
    9. '	queue' → logprob: -9.3131742477417
    10. '' → logprob: -9.4381742477417

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014376101084053516
    2. '
' → logprob: -4.639376163482666
    3. '    
' → logprob: -5.514376163482666
    4. ' queue' → logprob: -8.139375686645508
    5. '  
' → logprob: -9.764375686645508
    6. 'queue' → logprob: -9.889375686645508
    7. '    ' → logprob: -9.889375686645508
    8. '   
' → logprob: -10.639375686645508
    9. '```' → logprob: -10.764375686645508
    10. 'from' → logprob: -11.014375686645508

Token 182: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1413356363773346
    2. '
' → logprob: -2.6413357257843018
    3. ' queue' → logprob: -3.1413357257843018
    4. 'queue' → logprob: -4.891335487365723
    5. '    
' → logprob: -4.891335487365723
    6. 'q' → logprob: -7.766335487365723
    7. '  
' → logprob: -7.891335487365723
    8. ' q' → logprob: -8.141335487365723
    9. ' 
' → logprob: -8.266335487365723
    10. '	queue' → logprob: -8.641335487365723

Token 183: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18603916466236115
    2. 'queue' → logprob: -2.3110392093658447
    3. ' queue' → logprob: -3.0610392093658447
    4. 'start' → logprob: -4.811038970947266
    5. ' start' → logprob: -4.936038970947266
    6. 'q' → logprob: -5.061038970947266
    7. 'from' → logprob: -7.186038970947266
    8. ' q' → logprob: -7.561038970947266
    9. '    
' → logprob: -8.061038970947266
    10. '
' → logprob: -8.936038970947266

Token 184: ' each' (ID: 2454)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.5717432498931885
    2. ' used' → logprob: -1.5717432498931885
    3. ' c' → logprob: -2.8217432498931885
    4. 'used' → logprob: -3.1967432498931885
    5. 'coin' → logprob: -3.3217432498931885
    6. ' i' → logprob: -3.4467432498931885
    7. ' u' → logprob: -4.196743011474609
    8. ' w' → logprob: -5.071743011474609
    9. ' _' → logprob: -5.196743011474609
    10. ' amount' → logprob: -5.321743011474609

Token 185: ' payment' (ID: 9277)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.3001636862754822
    2. ' used' → logprob: -2.050163745880127
    3. 'coin' → logprob: -2.425163745880127
    4. 'used' → logprob: -4.050163745880127
    5. ' payment' → logprob: -5.175163745880127
    6. ' c' → logprob: -5.175163745880127
    7. ' state' → logprob: -5.550163745880127
    8. ' next' → logprob: -6.050163745880127
    9. 'state' → logprob: -7.050163745880127
    10. ' i' → logprob: -7.300163745880127

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8789124488830566
    2. ' coin' → logprob: -2.0039124488830566
    3. 'coin' → logprob: -2.2539124488830566
    4. 'pattern' → logprob: -2.3789124488830566
    5. '   ' → logprob: -2.7539124488830566
    6. ' pattern' → logprob: -3.0039124488830566
    7. 'state' → logprob: -3.0039124488830566
    8. ' state' → logprob: -3.6289124488830566
    9. ' combination' → logprob: -4.503912448883057
    10. ' ,' → logprob: -4.753912448883057

Token 187: ' change' (ID: 3343)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1762939691543579
    2. ' used' → logprob: -2.8012938499450684
    3. ' queue' → logprob: -2.8012938499450684
    4. 'for' → logprob: -4.051293849945068
    5. '   ' → logprob: -4.551293849945068
    6. ' pass' → logprob: -5.551293849945068
    7. '    ' → logprob: -6.426293849945068
    8. 'queue' → logprob: -6.426293849945068
    9. ' visited' → logprob: -6.551293849945068
    10. ' q' → logprob: -7.176293849945068

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24929256737232208
    2. '_given' → logprob: -3.2492926120758057
    3. '   ' → logprob: -3.3742926120758057
    4. '=' → logprob: -3.4992926120758057
    5. '_amount' → logprob: -3.8742926120758057
    6. ',' → logprob: -4.499292373657227
    7. '_co' → logprob: -4.624292373657227
    8. '_states' → logprob: -4.749292373657227
    9. '_received' → logprob: -4.749292373657227
    10. '_' → logprob: -5.124292373657227

Token 189: ' usage' (ID: 16622)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8540341854095459
    2. 'pay' → logprob: -1.354034185409546
    3. ' max' → logprob: -1.604034185409546
    4. ' pay' → logprob: -3.229034185409546
    5. 'add' → logprob: -4.104034423828125
    6. ' used' → logprob: -4.729034423828125
    7. 'sub' → logprob: -4.729034423828125
    8. ' add' → logprob: -4.729034423828125
    9. 'used' → logprob: -4.854034423828125
    10. ' sub' → logprob: -4.979034423828125

Token 190: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5275837182998657
    2. '_amount' → logprob: -2.777583599090576
    3. ' -' → logprob: -3.152583599090576
    4. '_co' → logprob: -3.277583599090576
    5. '_used' → logprob: -3.652583599090576
    6. '=' → logprob: -4.027583599090576
    7. '   ' → logprob: -4.027583599090576
    8. '_' → logprob: -4.402583599090576
    9. ' +' → logprob: -4.527583599090576
    10. '_sum' → logprob: -4.652583599090576

Token 191: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30759018659591675
    2. '   ' → logprob: -2.4325902462005615
    3. '<|end|>' → logprob: -3.0575902462005615
    4. ' =' → logprob: -3.4325902462005615
    5. '<|end|>' → logprob: -3.5575902462005615
    6. ',' → logprob: -4.057590007781982
    7. '
' → logprob: -4.057590007781982
    8. '=' → logprob: -4.682590007781982
    9. ')
' → logprob: -5.432590007781982
    10. '    ' → logprob: -5.557590007781982

Token 192: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.12696747481822968
    2. ' pay' → logprob: -2.126967430114746
    3. '(pay' → logprob: -10.376967430114746
    4. '   ' → logprob: -13.376967430114746
    5. ' ' → logprob: -13.751967430114746
    6. 'p' → logprob: -14.126967430114746
    7. '_pay' → logprob: -14.251967430114746
    8. '
' → logprob: -14.376967430114746
    9. 'Pay' → logprob: -14.876967430114746
    10. 'payment' → logprob: -15.001967430114746

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15513728559017181
    2. ')' → logprob: -2.905137300491333
    3. '
' → logprob: -3.155137300491333
    4. '    
' → logprob: -3.280137300491333
    5. '    ' → logprob: -6.030137062072754
    6. '  
' → logprob: -6.655137062072754
    7. ':' → logprob: -7.030137062072754
    8. '<|end|>' → logprob: -7.280137062072754
    9. ',' → logprob: -7.780137062072754
    10. ')
' → logprob: -7.905137062072754

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001638408051803708
    2. ' for' → logprob: -7.001638412475586
    3. '
' → logprob: -8.501638412475586
    4. ' queue' → logprob: -8.501638412475586
    5. 'for' → logprob: -9.876638412475586
    6. '    
' → logprob: -10.001638412475586
    7. 'def' → logprob: -10.126638412475586
    8. 'queue' → logprob: -10.501638412475586
    9. '    ' → logprob: -10.751638412475586
    10. '<|end|>' → logprob: -10.876638412475586

Token 195: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009302312508225441
    2. '    
' → logprob: -5.759302139282227
    3. '
' → logprob: -5.884302139282227
    4. ' queue' → logprob: -6.509302139282227
    5. 'queue' → logprob: -7.634302139282227
    6. ' for' → logprob: -7.884302139282227
    7. '    ' → logprob: -7.884302139282227
    8. 'for' → logprob: -9.384302139282227
    9. 'from' → logprob: -9.509302139282227
    10. '	queue' → logprob: -9.759302139282227

Token 196: ' Change' (ID: 16167)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.3456927239894867
    2. '   ' → logprob: -1.345692753791809
    3. 'queue' → logprob: -4.0956926345825195
    4. ' for' → logprob: -5.2206926345825195
    5. ' q' → logprob: -5.4706926345825195
    6. ' from' → logprob: -5.9706926345825195
    7. 'from' → logprob: -6.9706926345825195
    8. 'q' → logprob: -7.2206926345825195
    9. 'for' → logprob: -7.8456926345825195
    10. '    ' → logprob: -8.59569263458252

Token 197: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367278724908829
    2. '=' → logprob: -3.78367280960083
    3. '_' → logprob: -6.03367280960083
    4. ' is' → logprob: -6.03367280960083
    5. ' ' → logprob: -6.78367280960083
    6. ',' → logprob: -7.53367280960083
    7. 's' → logprob: -7.53367280960083
    8. ' can' → logprob: -8.158672332763672
    9. '_states' → logprob: -8.158672332763672
    10. ' must' → logprob: -8.283672332763672

Token 198: ' given' (ID: 4335)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.9290077090263367
    2. ' always' → logprob: -2.4290077686309814
    3. ' calculated' → logprob: -2.5540077686309814
    4. ' tuple' → logprob: -2.9290077686309814
    5. ' coins' → logprob: -3.3040077686309814
    6. ' ' → logprob: -3.8040077686309814
    7. '[' → logprob: -3.9290077686309814
    8. ' coin' → logprob: -3.9290077686309814
    9. ' returned' → logprob: -4.054007530212402
    10. ' a' → logprob: -4.054007530212402

Token 199: ' optim' (ID: 9367)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.8200545907020569
    2. ' as' → logprob: -1.445054531097412
    3. ' =' → logprob: -2.820054531097412
    4. '   ' → logprob: -3.070054531097412
    5. ',' → logprob: -3.570054531097412
    6. ')' → logprob: -3.695054531097412
    7. ' in' → logprob: -4.070054531097412
    8. '    ' → logprob: -4.070054531097412
    9. 'by' → logprob: -4.320054531097412
    10. ' to' → logprob: -4.320054531097412

Token 200: 'ally' (ID: 2146)
  Prédit: 'ally'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ally' → logprob: -0.10196378827095032
    2. 'al' → logprob: -2.976963758468628
    3. 'aly' → logprob: -3.726963758468628
    4. 'ized' → logprob: -4.101963996887207
    5. '```' → logprob: -6.351963996887207
    6. 'istically' → logprob: -6.726963996887207
    7. 'ly' → logprob: -6.851963996887207
    8. 'um' → logprob: -7.976963996887207
    9. 'def' → logprob: -8.976963996887207
    10. '   ' → logprob: -9.351963996887207

Token 201: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002309646224603057
    2. '    
' → logprob: -6.752309799194336
    3. '
' → logprob: -7.252309799194336
    4. 'queue' → logprob: -8.752309799194336
    5. ' queue' → logprob: -8.877309799194336
    6. '    ' → logprob: -9.627309799194336
    7. 'from' → logprob: -11.002309799194336
    8. '  
' → logprob: -12.252309799194336
    9. '	queue' → logprob: -12.252309799194336
    10. '   
' → logprob: -12.877309799194336

Token 202: ' infinite' (ID: 48413)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.5061413049697876
    2. 'coins' → logprob: -1.3811413049697876
    3. ' wallet' → logprob: -2.256141185760498
    4. 'wallet' → logprob: -3.256141185760498
    5. ' the' → logprob: -7.256141185760498
    6. ' coin' → logprob: -7.631141185760498
    7. 'coin' → logprob: -8.006141662597656
    8. '500' → logprob: -8.756141662597656
    9. '[' → logprob: -8.756141662597656
    10. 'the' → logprob: -8.881141662597656

Token 203: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.2679298222064972
    2. ' coins' → logprob: -1.6429297924041748
    3. 'coin' → logprob: -4.642930030822754
    4. '<|end|>' → logprob: -4.892930030822754
    5. ' coin' → logprob: -5.267930030822754
    6. ')' → logprob: -5.392930030822754
    7. 'tokens' → logprob: -6.017930030822754
    8. 'def' → logprob: -6.642930030822754
    9. 'amount' → logprob: -6.642930030822754
    10. '
' → logprob: -7.017930030822754

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028647126629948616
    2. '
' → logprob: -4.028646945953369
    3. '    
' → logprob: -4.653646945953369
    4. '    ' → logprob: -8.153647422790527
    5. ')' → logprob: -9.028647422790527
    6. ',' → logprob: -9.278647422790527
    7. 'def' → logprob: -9.528647422790527
    8. '  
' → logprob: -10.028647422790527
    9. ' 
' → logprob: -10.278647422790527
    10. '   
' → logprob: -10.278647422790527

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005343567114323378
    2. '    
' → logprob: -5.880343437194824
    3. ')' → logprob: -6.755343437194824
    4. '    ' → logprob: -7.380343437194824
    5. '
' → logprob: -8.255343437194824
    6. ',' → logprob: -9.630343437194824
    7. 'def' → logprob: -9.630343437194824
    8. '<|end|>' → logprob: -9.755343437194824
    9. '  
' → logprob: -10.130343437194824
    10. '  ' → logprob: -10.380343437194824

Token 206: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074293846264481544
    2. '    
' → logprob: -5.632429599761963
    3. '
' → logprob: -6.007429599761963
    4. ' queue' → logprob: -7.007429599761963
    5. 'queue' → logprob: -8.632429122924805
    6. '    ' → logprob: -9.132429122924805
    7. '	queue' → logprob: -10.632429122924805
    8. ' 
' → logprob: -10.632429122924805
    9. '  
' → logprob: -11.132429122924805
    10. '   
' → logprob: -11.632429122924805

Token 207: ' Condition' (ID: 30255)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12698228657245636
    2. ' queue' → logprob: -2.5019822120666504
    3. 'queue' → logprob: -3.3769822120666504
    4. ' for' → logprob: -7.12698221206665
    5. 'pay' → logprob: -7.62698221206665
    6. 'q' → logprob: -7.87698221206665
    7. 'for' → logprob: -8.001982688903809
    8. ' q' → logprob: -8.001982688903809
    9. ' pay' → logprob: -9.376982688903809
    10. 'from' → logprob: -9.876982688903809

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4871220886707306
    2. ' =' → logprob: -1.9871220588684082
    3. '   ' → logprob: -2.112122058868408
    4. ' for' → logprob: -2.612122058868408
    5. ' :' → logprob: -3.362122058868408
    6. '=' → logprob: -5.112122058868408
    7. 'for' → logprob: -5.612122058868408
    8. '    ' → logprob: -6.362122058868408
    9. ' if' → logprob: -6.362122058868408
    10. ' is' → logprob: -6.487122058868408

Token 209: ' no' (ID: 860)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.9506874084472656
    2. ' pay' → logprob: -1.9506874084472656
    3. ' usage' → logprob: -1.9506874084472656
    4. 'pay' → logprob: -2.0756874084472656
    5. ' sum' → logprob: -2.7006874084472656
    6. 'sum' → logprob: -3.7006874084472656
    7. ' max' → logprob: -3.8256874084472656
    8. 'used' → logprob: -3.8256874084472656
    9. ' for' → logprob: -4.325687408447266
    10. ' all' → logprob: -4.700687408447266

Token 210: ' coin' (ID: 22179)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.1206727027893066
    2. ' more' → logprob: -1.4956727027893066
    3. ' coins' → logprob: -2.7456727027893066
    4. 'w' → logprob: -3.1206727027893066
    5. ' change' → logprob: -3.3706727027893066
    6. 'used' → logprob: -3.3706727027893066
    7. 't' → logprob: -3.3706727027893066
    8. ' payment' → logprob: -3.9956727027893066
    9. ' space' → logprob: -4.245672702789307
    10. ' over' → logprob: -4.495672702789307

Token 211: ' type' (ID: 1490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09218011796474457
    2. ' used' → logprob: -3.342180013656616
    3. ' usage' → logprob: -3.967180013656616
    4. ' is' → logprob: -5.092180252075195
    5. ' s' → logprob: -5.092180252075195
    6. '_used' → logprob: -5.092180252075195
    7. ' ' → logprob: -5.717180252075195
    8. 'used' → logprob: -6.592180252075195
    9. '_' → logprob: -7.092180252075195
    10. ' can' → logprob: -7.217180252075195

Token 212: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5279369950294495
    2. ' is' → logprob: -2.2779369354248047
    3. ' has' → logprob: -2.5279369354248047
    4. ' can' → logprob: -2.7779369354248047
    5. 'used' → logprob: -3.2779369354248047
    6. ' with' → logprob: -3.9029369354248047
    7. ' counts' → logprob: -4.402936935424805
    8. ' in' → logprob: -4.652936935424805
    9. ' usage' → logprob: -4.902936935424805
    10. '_used' → logprob: -4.902936935424805

Token 213: ' both' (ID: 2973)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4373513162136078
    2. ' ==' → logprob: -2.1873512268066406
    3. '=' → logprob: -3.1873512268066406
    4. ' ' → logprob: -3.8123512268066406
    5. ' for' → logprob: -3.8123512268066406
    6. '==' → logprob: -3.9373512268066406
    7. ' used' → logprob: -4.187351226806641
    8. '_used' → logprob: -4.312351226806641
    9. 'in' → logprob: -4.562351226806641
    10. ' =' → logprob: -4.562351226806641

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37417060136795044
    2. '_' → logprob: -1.8741705417633057
    3. ' _' → logprob: -2.2491705417633057
    4. 'in' → logprob: -4.249170780181885
    5. ' ' → logprob: -4.499170780181885
    6. '_in' → logprob: -5.749170780181885
    7. ')' → logprob: -5.874170780181885
    8. ' =' → logprob: -5.874170780181885
    9. '=' → logprob: -6.249170780181885
    10. ',' → logprob: -6.374170780181885

Token 215: ' pay' (ID: 2777)
  Prédit: 'payment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'payment' → logprob: -0.6968081593513489
    2. 'pay' → logprob: -1.196808099746704
    3. 'used' → logprob: -1.821808099746704
    4. ' payment' → logprob: -3.946808099746704
    5. 'usage' → logprob: -4.571808338165283
    6. ' used' → logprob: -5.446808338165283
    7. ' usage' → logprob: -6.696808338165283
    8. ' pay' → logprob: -7.071808338165283
    9. 'use' → logprob: -7.821808338165283
    10. 'paid' → logprob: -7.946808338165283

Token 216: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5325329303741455
    2. '   ' → logprob: -1.4075329303741455
    3. '):' → logprob: -3.1575329303741455
    4. ',' → logprob: -3.7825329303741455
    5. ' )' → logprob: -3.7825329303741455
    6. ')
' → logprob: -4.532532691955566
    7. '
' → logprob: -4.657532691955566
    8. '_used' → logprob: -4.782532691955566
    9. '_' → logprob: -5.157532691955566
    10. '    ' → logprob: -5.157532691955566

Token 217: ' returned' (ID: 10508)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.0555645227432251
    2. ' change' → logprob: -2.9305644035339355
    3. 'return' → logprob: -8.805564880371094
    4. ' ' → logprob: -8.930564880371094
    5. '   ' → logprob: -9.055564880371094
    6. 'receive' → logprob: -9.430564880371094
    7. 'give' → logprob: -10.430564880371094
    8. 'in' → logprob: -10.555564880371094
    9. ' in' → logprob: -10.930564880371094
    10. 'get' → logprob: -10.930564880371094

Token 218: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04411795735359192
    2. '    
' → logprob: -3.5441179275512695
    3. '
' → logprob: -4.4191179275512695
    4. '    ' → logprob: -6.7941179275512695
    5. ')' → logprob: -8.04411792755127
    6. ' 
' → logprob: -9.16911792755127
    7. 'def' → logprob: -9.54411792755127
    8. '   
' → logprob: -9.54411792755127
    9. '     
' → logprob: -9.66911792755127
    10. ',' → logprob: -9.79411792755127

Token 219: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.010696647688746452
    2. ' change' → logprob: -4.8856964111328125
    3. 'payment' → logprob: -6.3856964111328125
    4. '   ' → logprob: -8.010696411132812
    5. 'pay' → logprob: -8.010696411132812
    6. 'part' → logprob: -8.885696411132812
    7. 'used' → logprob: -9.260696411132812
    8. '```' → logprob: -9.635696411132812
    9. 'chang' → logprob: -9.885696411132812
    10. ' payment' → logprob: -9.885696411132812

Token 220: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038344405591487885
    2. '
' → logprob: -3.788344383239746
    3. '    
' → logprob: -4.288344383239746
    4. ' queue' → logprob: -7.788344383239746
    5. 'queue' → logprob: -7.788344383239746
    6. '    ' → logprob: -9.163344383239746
    7. '  
' → logprob: -10.038344383239746
    8. '   
' → logprob: -10.163344383239746
    9. ',' → logprob: -10.538344383239746
    10. '	queue' → logprob: -10.538344383239746

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009298650547862053
    2. '    
' → logprob: -5.634298801422119
    3. ')' → logprob: -6.259298801422119
    4. '
' → logprob: -6.884298801422119
    5. '    ' → logprob: -7.134298801422119
    6. ':' → logprob: -8.009298324584961
    7. 'def' → logprob: -8.134298324584961
    8. ',' → logprob: -8.384298324584961
    9. '  
' → logprob: -8.759298324584961
    10. '<|end|>' → logprob: -8.884298324584961

Token 222: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16989538073539734
    2. '
' → logprob: -2.0448954105377197
    3. '    
' → logprob: -3.7948954105377197
    4. '  
' → logprob: -6.919895172119141
    5. ' 
' → logprob: -7.294895172119141
    6. '    ' → logprob: -7.544895172119141
    7. '   
' → logprob: -7.669895172119141
    8. ' queue' → logprob: -7.669895172119141
    9. 'queue' → logprob: -7.919895172119141
    10. '\n' → logprob: -8.79489517211914

Token 223: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03682807460427284
    2. 'queue' → logprob: -3.66182804107666
    3. ' queue' → logprob: -4.78682804107666
    4. '
' → logprob: -7.16182804107666
    5. 'q' → logprob: -7.41182804107666
    6. '    
' → logprob: -7.78682804107666
    7. 'from' → logprob: -8.91182804107666
    8. ' q' → logprob: -9.91182804107666
    9. 'start' → logprob: -10.66182804107666
    10. 'def' → logprob: -11.03682804107666

Token 224: ' each' (ID: 2454)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.1596509218215942
    2. 'used' → logprob: -1.4096509218215942
    3. ' u' → logprob: -2.2846508026123047
    4. ' coin' → logprob: -2.6596508026123047
    5. ' i' → logprob: -2.9096508026123047
    6. ' c' → logprob: -3.0346508026123047
    7. ' usage' → logprob: -3.0346508026123047
    8. ' p' → logprob: -4.409650802612305
    9. 'u' → logprob: -4.409650802612305
    10. 'coin' → logprob: -4.534650802612305

Token 225: ' usage' (ID: 16622)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.779003918170929
    2. ' coin' → logprob: -1.1540038585662842
    3. ' usage' → logprob: -2.154003858566284
    4. 'used' → logprob: -3.154003858566284
    5. 'coin' → logprob: -4.029004096984863
    6. ' c' → logprob: -4.904004096984863
    7. ' state' → logprob: -5.154004096984863
    8. ' u' → logprob: -5.154004096984863
    9. 'usage' → logprob: -5.154004096984863
    10. ' payment' → logprob: -5.279004096984863

Token 226: ' tuple' (ID: 31311)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14276652038097382
    2. '_co' → logprob: -3.3927664756774902
    3. '   ' → logprob: -3.6427664756774902
    4. ',' → logprob: -3.7677664756774902
    5. ' =' → logprob: -3.7677664756774902
    6. '_coin' → logprob: -5.51776647567749
    7. '_counts' → logprob: -5.51776647567749
    8. 'in' → logprob: -5.76776647567749
    9. '_count' → logprob: -6.26776647567749
    10. '_' → logprob: -6.39276647567749

Token 227: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.205224871635437
    2. ':' → logprob: -2.2052249908447266
    3. ',' → logprob: -3.3302249908447266
    4. 'in' → logprob: -4.205224990844727
    5. ' =' → logprob: -4.455224990844727
    6. '   ' → logprob: -5.080224990844727
    7. '):' → logprob: -5.955224990844727
    8. ' :' → logprob: -7.080224990844727
    9. ':
' → logprob: -7.330224990844727
    10. '=' → logprob: -7.705224990844727

Token 228: ' compute' (ID: 23864)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8935558795928955
    2. ' queue' → logprob: -1.0185558795928955
    3. 'queue' → logprob: -2.5185558795928955
    4. ' if' → logprob: -3.1435558795928955
    5. ' q' → logprob: -3.1435558795928955
    6. ' usage' → logprob: -4.268555641174316
    7. ' dp' → logprob: -4.643555641174316
    8. ' for' → logprob: -4.893555641174316
    9. 'q' → logprob: -4.893555641174316
    10. 'dp' → logprob: -5.143555641174316

Token 229: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.8476178050041199
    2. '   ' → logprob: -1.7226178646087646
    3. ' used' → logprob: -2.4726178646087646
    4. 'usage' → logprob: -2.5976178646087646
    5. ' total' → logprob: -2.7226178646087646
    6. 'used' → logprob: -3.3476178646087646
    7. ' its' → logprob: -3.4726178646087646
    8. ' the' → logprob: -3.9726178646087646
    9. ' minimal' → logprob: -4.4726176261901855
    10. ' payment' → logprob: -4.5976176261901855

Token 230: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.053995952010154724
    2. '   ' → logprob: -4.0539960861206055
    3. 'sum' → logprob: -4.6789960861206055
    4. ' =' → logprob: -5.0539960861206055
    5. '_co' → logprob: -5.1789960861206055
    6. '_s' → logprob: -5.5539960861206055
    7. 's' → logprob: -5.6789960861206055
    8. ',' → logprob: -6.4289960861206055
    9. '_count' → logprob: -6.9289960861206055
    10. '_' → logprob: -7.4289960861206055

Token 231: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30927014350891113
    2. ' =' → logprob: -1.4342701435089111
    3. '=' → logprob: -4.059269905090332
    4. ',' → logprob: -4.934269905090332
    5. '    
' → logprob: -7.309269905090332
    6. '    ' → logprob: -7.684269905090332
    7. ')' → logprob: -7.809269905090332
    8. ':' → logprob: -8.059269905090332
    9. '
' → logprob: -8.309269905090332
    10. '.' → logprob: -8.934269905090332

Token 232: ' usage' (ID: 16622)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.3165852427482605
    2. 'if' → logprob: -2.4415853023529053
    3. '   ' → logprob: -2.8165853023529053
    4. ' change' → logprob: -3.0665853023529053
    5. 'usage' → logprob: -3.0665853023529053
    6. ' usage' → logprob: -4.316585063934326
    7. ' if' → logprob: -5.191585063934326
    8. 'pay' → logprob: -5.441585063934326
    9. 'used' → logprob: -6.566585063934326
    10. 'dp' → logprob: -6.816585063934326

Token 233: '_coin' (ID: 187802)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.4971530437469482
    2. '_count' → logprob: -1.6221530437469482
    3. '_cnt' → logprob: -1.6221530437469482
    4. '_sum' → logprob: -1.8721530437469482
    5. '_co' → logprob: -2.8721530437469482
    6. '   ' → logprob: -3.4971530437469482
    7. 's' → logprob: -3.4971530437469482
    8. '_s' → logprob: -3.8721530437469482
    9. 'sum' → logprob: -4.247153282165527
    10. 'cnt' → logprob: -4.497153282165527

Token 234: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12969601154327393
    2. 'count' → logprob: -3.0046958923339844
    3. 'counts' → logprob: -3.6296958923339844
    4. '_counts' → logprob: -4.004695892333984
    5. 'cnt' → logprob: -4.379695892333984
    6. '_count' → logprob: -4.504695892333984
    7. '_cnt' → logprob: -6.879695892333984
    8. ' counts' → logprob: -7.254695892333984
    9. 'sum' → logprob: -7.629695892333984
    10. '   ' → logprob: -8.504695892333984

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026233356911689043
    2. '
' → logprob: -6.877623558044434
    3. '    
' → logprob: -7.252623558044434
    4. ' for' → logprob: -8.627623558044434
    5. 'from' → logprob: -9.127623558044434
    6. ',' → logprob: -9.252623558044434
    7. ' queue' → logprob: -9.502623558044434
    8. 'for' → logprob: -9.877623558044434
    9. 'queue' → logprob: -9.877623558044434
    10. 'def' → logprob: -10.127623558044434

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010604655370116234
    2. '    
' → logprob: -5.3856048583984375
    3. ',' → logprob: -6.0106048583984375
    4. ':' → logprob: -6.3856048583984375
    5. ')' → logprob: -7.6356048583984375
    6. '
' → logprob: -8.135604858398438
    7. '<|end|>' → logprob: -8.385604858398438
    8. '    ' → logprob: -9.135604858398438
    9. '):' → logprob: -9.385604858398438
    10. ' =' → logprob: -9.760604858398438

Token 237: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018383823335170746
    2. '    
' → logprob: -4.518383979797363
    3. ')' → logprob: -6.768383979797363
    4. ':' → logprob: -6.768383979797363
    5. ',' → logprob: -7.018383979797363
    6. '
' → logprob: -7.143383979797363
    7. '  
' → logprob: -7.393383979797363
    8. ' 
' → logprob: -7.768383979797363
    9. '    ' → logprob: -8.018383979797363
    10. '\n' → logprob: -8.393383979797363

Token 238: ' Compute' (ID: 45438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13764211535453796
    2. ' queue' → logprob: -2.5126421451568604
    3. 'queue' → logprob: -3.1376421451568604
    4. 'q' → logprob: -6.887641906738281
    5. 'from' → logprob: -7.387641906738281
    6. ' for' → logprob: -7.762641906738281
    7. ' q' → logprob: -7.887641906738281
    8. 'def' → logprob: -8.012641906738281
    9. ' from' → logprob: -8.512641906738281
    10. '	queue' → logprob: -8.512641906738281

Token 239: ' change' (ID: 3343)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.6630290746688843
    2. ' change' → logprob: -1.4130290746688843
    3. 'change' → logprob: -2.163029193878174
    4. 'usage' → logprob: -2.288029193878174
    5. '   ' → logprob: -5.038029193878174
    6. 'pay' → logprob: -5.663029193878174
    7. ' payment' → logprob: -6.038029193878174
    8. ' used' → logprob: -6.163029193878174
    9. '(change' → logprob: -6.413029193878174
    10. ' pay' → logprob: -6.663029193878174

Token 240: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.8838505744934082
    2. ' =' → logprob: -1.3838505744934082
    3. '   ' → logprob: -1.7588505744934082
    4. '_co' → logprob: -2.383850574493408
    5. '_' → logprob: -3.633850574493408
    6. '_amount' → logprob: -4.883850574493408
    7. '=' → logprob: -5.133850574493408
    8. '  ' → logprob: -6.133850574493408
    9. '_value' → logprob: -6.133850574493408
    10. 'sum' → logprob: -6.133850574493408

Token 241: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.7007620930671692
    2. 'usage' → logprob: -0.7007620930671692
    3. '   ' → logprob: -6.7007622718811035
    4. ' sum' → logprob: -6.9507622718811035
    5. 'max' → logprob: -6.9507622718811035
    6. 'sum' → logprob: -7.0757622718811035
    7. ' max' → logprob: -7.5757622718811035
    8. '(' → logprob: -7.5757622718811035
    9. 'used' → logprob: -7.5757622718811035
    10. 'pay' → logprob: -8.200761795043945

Token 242: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0049747284501791
    2. '_co' → logprob: -5.504974842071533
    3. ' _' → logprob: -7.504974842071533
    4. 'sum' → logprob: -9.129974365234375
    5. '_' → logprob: -9.504974365234375
    6. '   ' → logprob: -10.504974365234375
    7. '_s' → logprob: -10.504974365234375
    8. '_amount' → logprob: -10.754974365234375
    9. ' ' → logprob: -10.754974365234375
    10. '_tokens' → logprob: -11.879974365234375

Token 243: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.056335337460041046
    2. '-' → logprob: -2.93133544921875
    3. '   ' → logprob: -6.80633544921875
    4. ' ' → logprob: -8.68133544921875
    5. ')' → logprob: -10.30633544921875
    6. '  ' → logprob: -10.55633544921875
    7. ' =' → logprob: -11.30633544921875
    8. '=' → logprob: -11.30633544921875
    9. ' -
' → logprob: -11.30633544921875
    10. ',' → logprob: -11.80633544921875

Token 244: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.3132675588130951
    2. ' pay' → logprob: -1.3132675886154175
    3. '(pay' → logprob: -12.563267707824707
    4. '   ' → logprob: -13.813267707824707
    5. ' ' → logprob: -14.688267707824707
    6. '
' → logprob: -15.563267707824707
    7. 'p' → logprob: -15.813267707824707
    8. 'Pay' → logprob: -16.18826675415039
    9. ' ' → logprob: -16.31326675415039
    10. '_pay' → logprob: -17.12576675415039

Token 245: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016255702823400497
    2. '    
' → logprob: -4.766255855560303
    3. '
' → logprob: -5.891255855560303
    4. ')' → logprob: -6.516255855560303
    5. '<|end|>' → logprob: -7.016255855560303
    6. ',' → logprob: -7.141255855560303
    7. ':' → logprob: -8.266255378723145
    8. '  
' → logprob: -8.391255378723145
    9. '<|end|>' → logprob: -8.391255378723145
    10. 'def' → logprob: -8.516255378723145

Token 246: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058027222752571106
    2. '    
' → logprob: -4.808027267456055
    3. '
' → logprob: -4.933027267456055
    4. ')' → logprob: -4.933027267456055
    5. '<|end|>' → logprob: -5.058027267456055
    6. ' tokens' → logprob: -5.308027267456055
    7. ' tokenize' → logprob: -6.058027267456055
    8. ' if' → logprob: -6.058027267456055
    9. ' 
' → logprob: -6.183027267456055
    10. ',' → logprob: -6.433027267456055

Token 247: ' coins' (ID: 28969)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3772392272949219
    2. '_co' → logprob: -1.5022392272949219
    3. ' coins' → logprob: -2.377239227294922
    4. ' coin' → logprob: -2.377239227294922
    5. 'coins' → logprob: -2.877239227294922
    6. '_coin' → logprob: -2.877239227294922
    7. ')' → logprob: -3.252239227294922
    8. '_change' → logprob: -3.752239227294922
    9. ' _' → logprob: -3.752239227294922
    10. 'coin' → logprob: -3.752239227294922

Token 248: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2436186522245407
    2. ' =' → logprob: -2.4936187267303467
    3. ')' → logprob: -3.2436187267303467
    4. '
' → logprob: -3.9936187267303467
    5. ' for' → logprob: -4.743618488311768
    6. 'def' → logprob: -4.743618488311768
    7. ',' → logprob: -4.993618488311768
    8. '    ' → logprob: -5.118618488311768
    9. '<|end|>' → logprob: -5.243618488311768
    10. '  ' → logprob: -5.493618488311768

Token 249: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.3134598731994629
    2. ' change' → logprob: -1.313459873199463
    3. 'coin' → logprob: -9.688459396362305
    4. '(change' → logprob: -10.563459396362305
    5. ' all' → logprob: -10.938459396362305
    6. 'all' → logprob: -10.938459396362305
    7. 'coins' → logprob: -11.063459396362305
    8. ' coin' → logprob: -11.938459396362305
    9. 'amount' → logprob: -12.063459396362305
    10. ' coins' → logprob: -12.063459396362305

Token 250: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07222507894039154
    2. '
' → logprob: -3.1972250938415527
    3. '    
' → logprob: -3.6972250938415527
    4. ')' → logprob: -6.822225093841553
    5. 'def' → logprob: -7.572225093841553
    6. ',' → logprob: -7.572225093841553
    7. ':' → logprob: -7.947225093841553
    8. '    ' → logprob: -8.697224617004395
    9. '  
' → logprob: -8.822224617004395
    10. '<|end|>' → logprob: -8.822224617004395

Token 251: ' unlimited' (ID: 34136)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.9390049576759338
    2. 'coin' → logprob: -1.939004898071289
    3. 'change' → logprob: -2.314004898071289
    4. 'def' → logprob: -2.689004898071289
    5. 'dp' → logprob: -2.939004898071289
    6. 'sys' → logprob: -2.939004898071289
    7. '[' → logprob: -2.939004898071289
    8. 'div' → logprob: -3.814004898071289
    9. ' coins' → logprob: -4.064004898071289
    10. 'in' → logprob: -4.064004898071289

Token 252: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.06302550435066223
    2. ' coins' → logprob: -2.93802547454834
    3. '<|end|>' → logprob: -5.68802547454834
    4. 'import' → logprob: -7.06302547454834
    5. 'coin' → logprob: -7.18802547454834
    6. ' coin' → logprob: -7.68802547454834
    7. ')' → logprob: -7.93802547454834
    8. ' ' → logprob: -8.31302547454834
    9. 'tokens' → logprob: -8.31302547454834
    10. 'amount' → logprob: -8.43802547454834

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06762300431728363
    2. '
' → logprob: -2.9426229000091553
    3. '    
' → logprob: -4.692623138427734
    4. '  
' → logprob: -7.192623138427734
    5. 'def' → logprob: -7.817623138427734
    6. ',' → logprob: -7.942623138427734
    7. '    ' → logprob: -8.317623138427734
    8. ' 
' → logprob: -8.317623138427734
    9. 'from' → logprob: -8.567623138427734
    10. '   
' → logprob: -8.567623138427734

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061547658406198025
    2. '    
' → logprob: -5.756154537200928
    3. '
' → logprob: -6.131154537200928
    4. 'def' → logprob: -8.631155014038086
    5. '    ' → logprob: -9.256155014038086
    6. '<|end|>' → logprob: -9.256155014038086
    7. ',' → logprob: -9.381155014038086
    8. ')' → logprob: -9.881155014038086
    9. 'from' → logprob: -10.256155014038086
    10. 'for' → logprob: -10.506155014038086

Token 255: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017955828458070755
    2. '    
' → logprob: -4.767955780029297
    3. '
' → logprob: -5.517955780029297
    4. ')' → logprob: -7.017955780029297
    5. ',' → logprob: -7.017955780029297
    6. '    ' → logprob: -7.142955780029297
    7. 'def' → logprob: -7.892955780029297
    8. ' 
' → logprob: -8.392955780029297
    9. ' for' → logprob: -8.517955780029297
    10. 'for' → logprob: -8.517955780029297

Token 256: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365042433142662
    2. 'queue' → logprob: -4.6586503982543945
    3. ' queue' → logprob: -4.7836503982543945
    4. ' for' → logprob: -5.1586503982543945
    5. 'for' → logprob: -5.7836503982543945
    6. 'def' → logprob: -6.2836503982543945
    7. '    
' → logprob: -7.5336503982543945
    8. 'from' → logprob: -7.6586503982543945
    9. '    ' → logprob: -7.7836503982543945
    10. ' def' → logprob: -7.7836503982543945

Token 257: ' minimal' (ID: 19957)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.6718872785568237
    2. 'usage' → logprob: -1.6718872785568237
    3. ' change' → logprob: -1.9218872785568237
    4. 'change' → logprob: -2.6718873977661133
    5. ' used' → logprob: -3.9218873977661133
    6. 'used' → logprob: -4.046887397766113
    7. ' coin' → logprob: -5.171887397766113
    8. ' i' → logprob: -5.296887397766113
    9. ' c' → logprob: -5.546887397766113
    10. ' amount' → logprob: -5.796887397766113

Token 258: ' change' (ID: 3343)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.9815444946289062
    2. 'coins' → logprob: -1.4815444946289062
    3. ' change' → logprob: -1.7315444946289062
    4. ' coin' → logprob: -2.6065444946289062
    5. '_change' → logprob: -3.1065444946289062
    6. 'change' → logprob: -3.2315444946289062
    7. '_co' → logprob: -3.8565444946289062
    8. 'coin' → logprob: -4.481544494628906
    9. ' usage' → logprob: -5.106544494628906
    10. '_coin' → logprob: -5.231544494628906

Token 259: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -1.4821054935455322
    2. 'coins' → logprob: -1.7321054935455322
    3. '_count' → logprob: -1.9821054935455322
    4. ',' → logprob: -2.3571054935455322
    5. 'def' → logprob: -2.6071054935455322
    6. ' coins' → logprob: -3.1071054935455322
    7. '_counts' → logprob: -3.2321054935455322
    8. '   ' → logprob: -3.3571054935455322
    9. '_amount' → logprob: -3.8571054935455322
    10. ' =' → logprob: -3.9821054935455322

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9532598853111267
    2. ' =' → logprob: -2.2032599449157715
    3. ':' → logprob: -2.4532599449157715
    4. '   ' → logprob: -2.7032599449157715
    5. '_needed' → logprob: -2.9532599449157715
    6. 'def' → logprob: -3.4532599449157715
    7. '_count' → logprob: -3.4532599449157715
    8. '):' → logprob: -3.4532599449157715
    9. 'coins' → logprob: -3.4532599449157715
    10. '_amount' → logprob: -4.2032599449157715

Token 261: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.53895503282547
    2. 'for' → logprob: -1.5389549732208252
    3. '   ' → logprob: -3.413954973220825
    4. ' change' → logprob: -3.663954973220825
    5. 'change' → logprob: -3.913954973220825
    6. ' return' → logprob: -4.288955211639404
    7. ' pass' → logprob: -4.413955211639404
    8. 'def' → logprob: -4.788955211639404
    9. ' #' → logprob: -4.913955211639404
    10. '#' → logprob: -5.038955211639404

Token 262: ' which' (ID: 1118)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46078377962112427
    2. ' coins' → logprob: -1.9607837200164795
    3. 'coins' → logprob: -2.4607837200164795
    4. 'if' → logprob: -3.3357837200164795
    5. ' coin' → logprob: -3.7107837200164795
    6. 'coin' → logprob: -3.9607837200164795
    7. '   ' → logprob: -4.460783958435059
    8. ' all' → logprob: -4.460783958435059
    9. ' for' → logprob: -4.710783958435059
    10. ' change' → logprob: -5.210783958435059

Token 263: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.46182140707969666
    2. 'coin' → logprob: -1.211821436882019
    3. ' coins' → logprob: -3.5868213176727295
    4. ' coin' → logprob: -3.8368213176727295
    5. 'types' → logprob: -3.9618213176727295
    6. '<|end|>' → logprob: -7.086821556091309
    7. 'co' → logprob: -7.336821556091309
    8. ' types' → logprob: -7.586821556091309
    9. 'def' → logprob: -8.211821556091309
    10. 'type' → logprob: -8.336821556091309

Token 264: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.19980323314666748
    2. ' used' → logprob: -3.199803352355957
    3. ' in' → logprob: -3.199803352355957
    4. ')' → logprob: -4.074803352355957
    5. ' can' → logprob: -4.449803352355957
    6. '_used' → logprob: -4.449803352355957
    7. ',' → logprob: -4.574803352355957
    8. ' were' → logprob: -4.824803352355957
    9. 'are' → logprob: -4.949803352355957
    10. '<|end|>' → logprob: -5.324803352355957

Token 265: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.7309471368789673
    2. 'used' → logprob: -0.8559471368789673
    3. 'needed' → logprob: -3.7309470176696777
    4. ' needed' → logprob: -4.230947017669678
    5. '_used' → logprob: -4.730947017669678
    6. 'returned' → logprob: -4.980947017669678
    7. 'not' → logprob: -5.480947017669678
    8. 'available' → logprob: -5.605947017669678
    9. 'included' → logprob: -6.105947017669678
    10. 'possible' → logprob: -6.105947017669678

Token 266: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03521748632192612
    2. ':' → logprob: -4.41021728515625
    3. '
' → logprob: -5.41021728515625
    4. ')' → logprob: -5.53521728515625
    5. '    
' → logprob: -5.66021728515625
    6. ',' → logprob: -6.28521728515625
    7. 'def' → logprob: -6.41021728515625
    8. '.' → logprob: -6.66021728515625
    9. '<|end|>' → logprob: -7.16021728515625
    10. '#' → logprob: -7.53521728515625

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004494923632591963
    2. '    
' → logprob: -6.754495143890381
    3. ' queue' → logprob: -7.254495143890381
    4. ')' → logprob: -7.754495143890381
    5. 'queue' → logprob: -7.879495143890381
    6. '
' → logprob: -8.129494667053223
    7. ' for' → logprob: -8.379494667053223
    8. ',' → logprob: -8.379494667053223
    9. 'def' → logprob: -8.379494667053223
    10. '    ' → logprob: -8.629494667053223

Token 268: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004987424239516258
    2. '    
' → logprob: -6.1299872398376465
    3. '
' → logprob: -7.5049872398376465
    4. ',' → logprob: -8.004987716674805
    5. ' for' → logprob: -8.254987716674805
    6. 'def' → logprob: -8.379987716674805
    7. ')' → logprob: -8.379987716674805
    8. '<|end|>' → logprob: -8.379987716674805
    9. '    ' → logprob: -8.629987716674805
    10. '  
' → logprob: -9.379987716674805

Token 269: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4712316393852234
    2. 'queue' → logprob: -1.5962316989898682
    3. 'for' → logprob: -2.471231698989868
    4. ' queue' → logprob: -3.346231698989868
    5. ' for' → logprob: -3.721231698989868
    6. 'from' → logprob: -3.971231698989868
    7. 'def' → logprob: -5.471231460571289
    8. ' from' → logprob: -6.346231460571289
    9. 'q' → logprob: -7.096231460571289
    10. 'dp' → logprob: -7.721231460571289

Token 270: ' intersection' (ID: 42002)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.05812350660562515
    2. ' not' → logprob: -3.9331235885620117
    3. ' all' → logprob: -4.433123588562012
    4. ' usage' → logprob: -4.433123588562012
    5. ' change' → logprob: -5.433123588562012
    6. ' sub' → logprob: -6.433123588562012
    7. ' used' → logprob: -6.683123588562012
    8. ' ' → logprob: -6.808123588562012
    9. ' coin' → logprob: -6.808123588562012
    10. ' pay' → logprob: -7.058123588562012

Token 271: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4702950716018677
    2. '_' → logprob: -1.5952950716018677
    3. ' =' → logprob: -2.720294952392578
    4. '=' → logprob: -3.470294952392578
    5. '(
' → logprob: -4.345294952392578
    6. ' _' → logprob: -4.470294952392578
    7. ' of' → logprob: -4.595294952392578
    8. ' (' → logprob: -4.720294952392578
    9. ' ' → logprob: -5.220294952392578
    10. 'of' → logprob: -5.470294952392578

Token 272: ' used' (ID: 2061)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7608849406242371
    2. 'set' → logprob: -1.2608850002288818
    3. ' used' → logprob: -2.010885000228882
    4. 'used' → logprob: -2.635885000228882
    5. ' usage' → logprob: -4.260884761810303
    6. '(set' → logprob: -4.260884761810303
    7. 'usage' → logprob: -5.510884761810303
    8. ' coins' → logprob: -5.635884761810303
    9. 'pay' → logprob: -6.135884761810303
    10. 'coins' → logprob: -6.885884761810303

Token 273: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0053248354233801365
    2. '_' → logprob: -6.505324840545654
    3. '_used' → logprob: -7.005324840545654
    4. '_coin' → logprob: -7.130324840545654
    5. 'coins' → logprob: -7.880324840545654
    6. '_usage' → logprob: -7.880324840545654
    7. '```' → logprob: -8.505324363708496
    8. '   ' → logprob: -8.755324363708496
    9. '_tokens' → logprob: -8.755324363708496
    10. '(_' → logprob: -9.005324363708496

Token 274: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.579543948173523
    2. '_used' → logprob: -1.579543948173523
    3. ' in' → logprob: -2.9545440673828125
    4. ')' → logprob: -3.2045440673828125
    5. ' used' → logprob: -3.2045440673828125
    6. ' _' → logprob: -3.3295440673828125
    7. '   ' → logprob: -3.7045440673828125
    8. 'used' → logprob: -3.9545440673828125
    9. '```' → logprob: -6.3295440673828125
    10. ' ' → logprob: -6.5795440673828125

Token 275: ' return' (ID: 622)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pay' → logprob: -1.2132843732833862
    2. 'used' → logprob: -1.7132843732833862
    3. ' set' → logprob: -2.088284492492676
    4. 'set' → logprob: -2.463284492492676
    5. ' used' → logprob: -2.588284492492676
    6. ' usage' → logprob: -2.838284492492676
    7. 'usage' → logprob: -2.838284492492676
    8. ' pay' → logprob: -3.338284492492676
    9. '   ' → logprob: -4.713284492492676
    10. '{' → logprob: -4.963284492492676

Token 276: ' coins' (ID: 28969)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9661884307861328
    2. '_co' → logprob: -0.9661884307861328
    3. ' _' → logprob: -2.091188430786133
    4. 'ed' → logprob: -3.341188430786133
    5. '_used' → logprob: -3.966188430786133
    6. ' coins' → logprob: -4.216188430786133
    7. 's' → logprob: -4.341188430786133
    8. '_type' → logprob: -4.716188430786133
    9. '_types' → logprob: -5.091188430786133
    10. ' ' → logprob: -5.591188430786133

Token 277: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8713365793228149
    2. ':' → logprob: -1.371336579322815
    3. '):' → logprob: -1.746336579322815
    4. '_' → logprob: -2.6213364601135254
    5. '   ' → logprob: -4.496336460113525
    6. ' ' → logprob: -4.996336460113525
    7. ' is' → logprob: -5.246336460113525
    8. '):
' → logprob: -5.496336460113525
    9. ' in' → logprob: -5.496336460113525
    10. ',' → logprob: -5.621336460113525

Token 278: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.09429874271154404
    2. ' empty' → logprob: -2.469298839569092
    3. 'set' → logprob: -6.469298839569092
    4. ' not' → logprob: -6.594298839569092
    5. 'not' → logprob: -6.594298839569092
    6. ' set' → logprob: -8.094298362731934
    7. '   ' → logprob: -8.094298362731934
    8. '0' → logprob: -8.469298362731934
    9. '_empty' → logprob: -9.219298362731934
    10. 'non' → logprob: -10.719298362731934

Token 279: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10884149372577667
    2. '):' → logprob: -2.7338414192199707
    3. ',' → logprob: -3.9838414192199707
    4. '   ' → logprob: -4.233841419219971
    5. ')' → logprob: -5.858841419219971
    6. ':
' → logprob: -7.108841419219971
    7. '):
' → logprob: -7.983841419219971
    8. '.' → logprob: -8.108841896057129
    9. ' :' → logprob: -8.483841896057129
    10. '       ' → logprob: -9.483841896057129

Token 280: ' valid' (ID: 4529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2975119352340698
    2. '    ' → logprob: -2.1725120544433594
    3. ' continue' → logprob: -2.4225120544433594
    4. ' return' → logprob: -4.047512054443359
    5. '   ' → logprob: -5.047512054443359
    6. 'continue' → logprob: -5.172512054443359
    7. '           ' → logprob: -5.422512054443359
    8. '<|end|>' → logprob: -5.797512054443359
    9. '        ' → logprob: -6.047512054443359
    10. ',' → logprob: -6.047512054443359

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35627835988998413
    2. '
' → logprob: -2.106278419494629
    3. ':' → logprob: -2.231278419494629
    4. '    
' → logprob: -3.356278419494629
    5. '):' → logprob: -4.731278419494629
    6. ',' → logprob: -5.356278419494629
    7. '):
' → logprob: -5.731278419494629
    8. '  
' → logprob: -5.731278419494629
    9. ')' → logprob: -6.106278419494629
    10. ':
' → logprob: -6.606278419494629

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05949656292796135
    2. ':' → logprob: -3.6844966411590576
    3. '
' → logprob: -4.1844964027404785
    4. '    
' → logprob: -5.1844964027404785
    5. 'def' → logprob: -5.1844964027404785
    6. ',' → logprob: -6.6844964027404785
    7. '):' → logprob: -6.9344964027404785
    8. ')' → logprob: -7.4344964027404785
    9. '):
' → logprob: -7.4344964027404785
    10. ':
' → logprob: -7.5594964027404785

Token 283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012015421874821186
    2. '    
' → logprob: -4.762015342712402
    3. '
' → logprob: -6.637015342712402
    4. ' for' → logprob: -7.512015342712402
    5. ')' → logprob: -7.887015342712402
    6. '    ' → logprob: -8.637015342712402
    7. 'def' → logprob: -8.637015342712402
    8. 'for' → logprob: -8.637015342712402
    9. ',' → logprob: -9.387015342712402
    10. '  
' → logprob: -9.512015342712402

Token 284: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3063274323940277
    2. ' queue' → logprob: -2.0563273429870605
    3. 'queue' → logprob: -2.0563273429870605
    4. 'q' → logprob: -6.1813273429870605
    5. ' q' → logprob: -6.5563273429870605
    6. '
' → logprob: -7.0563273429870605
    7. 'def' → logprob: -7.0563273429870605
    8. 'from' → logprob: -7.1813273429870605
    9. '    
' → logprob: -7.3063273429870605
    10. ' for' → logprob: -8.306327819824219

Token 285: ' =' (ID: 314)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.23718823492527008
    2. '_' → logprob: -1.6121882200241089
    3. '_cost' → logprob: -5.112188339233398
    4. '_tokens' → logprob: -6.237188339233398
    5. '_coin' → logprob: -6.612188339233398
    6. ' _' → logprob: -7.487188339233398
    7. '_usage' → logprob: -7.487188339233398
    8. '_used' → logprob: -7.737188339233398
    9. 'coins' → logprob: -8.612188339233398
    10. ' =' → logprob: -9.112188339233398

Token 286: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.34171804785728455
    2. 'usage' → logprob: -1.841718077659607
    3. ' coin' → logprob: -2.9667179584503174
    4. 'coin' → logprob: -3.2167179584503174
    5. ' dp' → logprob: -4.5917181968688965
    6. ' sum' → logprob: -4.7167181968688965
    7. '   ' → logprob: -4.9667181968688965
    8. 'sum' → logprob: -5.5917181968688965
    9. 'dp' → logprob: -5.7167181968688965
    10. ' ' → logprob: -6.7167181968688965

Token 287: '_coin' (ID: 187802)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.5472086071968079
    2. '_sum' → logprob: -1.922208547592163
    3. '_count' → logprob: -2.297208547592163
    4. '_' → logprob: -3.297208547592163
    5. '   ' → logprob: -3.672208547592163
    6. ')' → logprob: -3.672208547592163
    7. 's' → logprob: -3.922208547592163
    8. '_coin' → logprob: -4.297208786010742
    9. '_tokens' → logprob: -4.547208786010742
    10. '_counts' → logprob: -4.672208786010742

Token 288: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.47896498441696167
    2. 's' → logprob: -0.9789649844169617
    3. '   ' → logprob: -5.978964805603027
    4. '_' → logprob: -6.603964805603027
    5. ' s' → logprob: -8.603964805603027
    6. '_counts' → logprob: -8.603964805603027
    7. '_cnt' → logprob: -8.853964805603027
    8. ' _' → logprob: -9.103964805603027
    9. 'count' → logprob: -9.228964805603027
    10. '_co' → logprob: -9.353964805603027

Token 289: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9336720108985901
    2. ' +' → logprob: -1.5586719512939453
    3. '   ' → logprob: -2.0586719512939453
    4. '+' → logprob: -2.3086719512939453
    5. ',' → logprob: -2.9336719512939453
    6. ' =' → logprob: -3.3086719512939453
    7. ':' → logprob: -4.183671951293945
    8. '=' → logprob: -4.558671951293945
    9. 'def' → logprob: -5.183671951293945
    10. '
' → logprob: -5.433671951293945

Token 290: ' minimal' (ID: 19957)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9733321070671082
    2. 'dp' → logprob: -1.598332166671753
    3. 'min' → logprob: -2.098332166671753
    4. ' min' → logprob: -2.723332166671753
    5. ' minimal' → logprob: -2.973332166671753
    6. ' coin' → logprob: -3.723332166671753
    7. 'change' → logprob: -3.848332166671753
    8. 'sum' → logprob: -3.848332166671753
    9. ' sub' → logprob: -4.098331928253174
    10. ' change' → logprob: -4.098331928253174

Token 291: ' change' (ID: 3343)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.32758545875549316
    2. '_' → logprob: -2.202585458755493
    3. '_coin' → logprob: -2.327585458755493
    4. '_change' → logprob: -3.577585458755493
    5. ' _' → logprob: -4.702585220336914
    6. 'coins' → logprob: -4.827585220336914
    7. '_tokens' → logprob: -4.952585220336914
    8. ' coins' → logprob: -5.577585220336914
    9. ' coin' → logprob: -6.077585220336914
    10. '_token' → logprob: -6.077585220336914

Token 292: ' coins' (ID: 28969)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0719548463821411
    2. ')' → logprob: -1.4469548463821411
    3. '_' → logprob: -1.8219548463821411
    4. '_co' → logprob: -2.1969547271728516
    5. ' =' → logprob: -3.4469547271728516
    6. '_used' → logprob: -4.571954727172852
    7. ',' → logprob: -4.696954727172852
    8. '_count' → logprob: -4.696954727172852
    9. ':' → logprob: -4.821954727172852
    10. '_counts' → logprob: -4.946954727172852

Token 293: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03726218268275261
    2. '    
' → logprob: -4.662261962890625
    3. ':' → logprob: -5.037261962890625
    4. '
' → logprob: -5.162261962890625
    5. 'def' → logprob: -5.162261962890625
    6. ')' → logprob: -5.912261962890625
    7. ',' → logprob: -6.787261962890625
    8. '):' → logprob: -6.912261962890625
    9. '  
' → logprob: -7.037261962890625
    10. '):
' → logprob: -7.912261962890625

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13436084985733032
    2. '    
' → logprob: -2.5093607902526855
    3. '
' → logprob: -3.2593607902526855
    4. '  
' → logprob: -6.3843607902526855
    5. 'def' → logprob: -7.2593607902526855
    6. '<|end|>' → logprob: -7.2593607902526855
    7. '    ' → logprob: -7.5093607902526855
    8. '   
' → logprob: -8.259361267089844
    9. ' 
' → logprob: -8.384361267089844
    10. '        
' → logprob: -8.509361267089844

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031188150867819786
    2. '    
' → logprob: -3.6561882495880127
    3. ':' → logprob: -7.281188011169434
    4. ')' → logprob: -7.281188011169434
    5. '
' → logprob: -7.406188011169434
    6. '<|end|>' → logprob: -7.531188011169434
    7. ',' → logprob: -7.781188011169434
    8. 'def' → logprob: -7.906188011169434
    9. '    ' → logprob: -8.531188011169434
    10. '\' → logprob: -8.531188011169434

Token 296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059145160019397736
    2. '    
' → logprob: -3.059145212173462
    3. '
' → logprob: -5.434144973754883
    4. '\n' → logprob: -7.059144973754883
    5. '  
' → logprob: -7.059144973754883
    6. '\' → logprob: -7.309144973754883
    7. ' for' → logprob: -7.309144973754883
    8. ' 
' → logprob: -7.559144973754883
    9. '    ' → logprob: -7.934144973754883
    10. '   
' → logprob: -8.184144973754883

Token 297: ' minimize' (ID: 41776)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8691175580024719
    2. ' for' → logprob: -1.1191174983978271
    3. '   ' → logprob: -1.4941174983978271
    4. 'queue' → logprob: -4.119117736816406
    5. ' queue' → logprob: -4.744117736816406
    6. 'from' → logprob: -6.369117736816406
    7. 'max' → logprob: -7.244117736816406
    8. '
' → logprob: -7.369117736816406
    9. 'import' → logprob: -8.119117736816406
    10. ' from' → logprob: -8.244117736816406

Token 298: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9096579551696777
    2. ' total' → logprob: -1.1596579551696777
    3. '_' → logprob: -2.4096579551696777
    4. ' _' → logprob: -3.1596579551696777
    5. ' =' → logprob: -3.4096579551696777
    6. ' dp' → logprob: -3.6596579551696777
    7. '    ' → logprob: -4.034657955169678
    8. ' ' → logprob: -4.659657955169678
    9. '_total' → logprob: -4.659657955169678
    10. ' for' → logprob: -4.909657955169678

Token 299: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054802387952804565
    2. '    
' → logprob: -3.429802417755127
    3. '
' → logprob: -4.054802417755127
    4. ' for' → logprob: -6.804802417755127
    5. 'for' → logprob: -7.679802417755127
    6. '  
' → logprob: -7.804802417755127
    7. 'def' → logprob: -7.929802417755127
    8. 'queue' → logprob: -8.679801940917969
    9. ' queue' → logprob: -8.804801940917969
    10. '    ' → logprob: -9.054801940917969

Token 300: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09114378690719604
    2. 'all' → logprob: -2.466143846511841
    3. '   ' → logprob: -7.216143608093262
    4. ' possible' → logprob: -7.841143608093262
    5. ' usage' → logprob: -8.091143608093262
    6. ' payment' → logprob: -8.966143608093262
    7. ' used' → logprob: -9.216143608093262
    8. 'possible' → logprob: -9.341143608093262
    9. '    ' → logprob: -9.716143608093262
    10. ' dp' → logprob: -9.966143608093262

Token 301: ' valid' (ID: 4529)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05343852937221527
    2. '    
' → logprob: -3.803438425064087
    3. '    ' → logprob: -4.678438663482666
    4. ' for' → logprob: -5.178438663482666
    5. '
' → logprob: -5.928438663482666
    6. 'for' → logprob: -6.303438663482666
    7. ')' → logprob: -6.678438663482666
    8. '  
' → logprob: -7.053438663482666
    9. '_' → logprob: -7.178438663482666
    10. ' 
' → logprob: -7.178438663482666

Token 302: ' usage' (ID: 16622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4508208632469177
    2. '_co' → logprob: -1.8258209228515625
    3. '
' → logprob: -3.5758209228515625
    4. '_states' → logprob: -3.5758209228515625
    5. ' states' → logprob: -3.9508209228515625
    6. 'def' → logprob: -4.0758209228515625
    7. ':' → logprob: -4.2008209228515625
    8. '  
' → logprob: -4.2008209228515625
    9. '_usage' → logprob: -4.3258209228515625
    10. '    
' → logprob: -4.3258209228515625

Token 303: ' tuples' (ID: 112464)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00887454766780138
    2. '
' → logprob: -5.758874416351318
    3. '    
' → logprob: -6.383874416351318
    4. ' queue' → logprob: -6.508874416351318
    5. 'queue' → logprob: -6.758874416351318
    6. ' for' → logprob: -8.008874893188477
    7. 'def' → logprob: -8.133874893188477
    8. 'for' → logprob: -8.758874893188477
    9. 'q' → logprob: -9.383874893188477
    10. '_queue' → logprob: -10.133874893188477

Token 304: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014985533431172371
    2. 'queue' → logprob: -5.88998556137085
    3. 'for' → logprob: -6.01498556137085
    4. 'def' → logprob: -6.26498556137085
    5. ' queue' → logprob: -6.26498556137085
    6. '    
' → logprob: -6.51498556137085
    7. ' for' → logprob: -6.51498556137085
    8. 'from' → logprob: -7.38998556137085
    9. 'q' → logprob: -7.76498556137085
    10. 'max' → logprob: -8.014985084533691

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05251392349600792
    2. ':' → logprob: -3.427513837814331
    3. '    
' → logprob: -5.17751407623291
    4. '
' → logprob: -5.67751407623291
    5. ',' → logprob: -6.30251407623291
    6. ':
' → logprob: -6.80251407623291
    7. 'def' → logprob: -6.92751407623291
    8. '(queue' → logprob: -7.42751407623291
    9. '  
' → logprob: -7.42751407623291
    10. '.' → logprob: -7.55251407623291

Token 306: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478122353553772
    2. 'queue' → logprob: -1.103122353553772
    3. ' queue' → logprob: -3.4781222343444824
    4. 'q' → logprob: -4.728122234344482
    5. 'from' → logprob: -5.353122234344482
    6. 'for' → logprob: -6.478122234344482
    7. ' q' → logprob: -7.478122234344482
    8. 'start' → logprob: -7.728122234344482
    9. 'que' → logprob: -8.22812271118164
    10. ' from' → logprob: -8.22812271118164

Token 307: ' First' (ID: 8338)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7961039543151855
    2. '   ' → logprob: -1.1711039543151855
    3. 'from' → logprob: -2.4211039543151855
    4. ' queue' → logprob: -2.5461039543151855
    5. 'q' → logprob: -3.0461039543151855
    6. ' from' → logprob: -5.0461039543151855
    7. ' q' → logprob: -5.5461039543151855
    8. 'for' → logprob: -5.5461039543151855
    9. 'max' → logprob: -6.1711039543151855
    10. 'def' → logprob: -6.2961039543151855

Token 308: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8384396433830261
    2. 'from' → logprob: -1.588439702987671
    3. '=' → logprob: -2.713439702987671
    4. '   ' → logprob: -2.963439702987671
    5. ' from' → logprob: -2.963439702987671
    6. '_queue' → logprob: -2.963439702987671
    7. ')' → logprob: -4.088439464569092
    8. 'def' → logprob: -4.088439464569092
    9. 'queue' → logprob: -4.463439464569092
    10. ',' → logprob: -4.713439464569092

Token 309: ' pre' (ID: 876)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.1170631647109985
    2. 'from' → logprob: -1.6170631647109985
    3. ' queue' → logprob: -1.9920631647109985
    4. ' wallet' → logprob: -2.742063045501709
    5. 'queue' → logprob: -2.867063045501709
    6. ' max' → logprob: -3.742063045501709
    7. ' def' → logprob: -3.867063045501709
    8. ' usage' → logprob: -3.992063045501709
    9. 'def' → logprob: -4.117063045501709
    10. '   ' → logprob: -4.117063045501709

Token 310: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.1286429464817047
    2. 'pare' → logprob: -2.128643035888672
    3. 'calculate' → logprob: -7.128643035888672
    4. 'fix' → logprob: -8.253643035888672
    5. 'sum' → logprob: -8.253643035888672
    6. 'dict' → logprob: -9.378643035888672
    7. 'sent' → logprob: -9.503643035888672
    8. ' compute' → logprob: -10.128643035888672
    9. 'process' → logprob: -10.628643035888672
    10. 'computed' → logprob: -11.003643035888672

Token 311: ' change' (ID: 3343)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9893301725387573
    2. ' min' → logprob: -1.3643301725387573
    3. ' minimal' → logprob: -1.3643301725387573
    4. 'minimal' → logprob: -3.239330291748047
    5. 'max' → logprob: -3.364330291748047
    6. ' max' → logprob: -3.989330291748047
    7. 'change' → logprob: -4.614330291748047
    8. 'dp' → logprob: -5.614330291748047
    9. ' dp' → logprob: -5.739330291748047
    10. 'def' → logprob: -5.989330291748047

Token 312: ' minimal' (ID: 19957)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.606669008731842
    2. '_co' → logprob: -1.8566689491271973
    3. '_min' → logprob: -1.9816689491271973
    4. ' =' → logprob: -2.8566689491271973
    5. 'dp' → logprob: -3.3566689491271973
    6. '_counts' → logprob: -3.4816689491271973
    7. '_count' → logprob: -4.481668949127197
    8. '_cnt' → logprob: -4.731668949127197
    9. '_' → logprob: -5.106668949127197
    10. '_coin' → logprob: -5.731668949127197

Token 313: ' coins' (ID: 28969)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0450531542301178
    2. '_change' → logprob: -3.920053243637085
    3. 'coins' → logprob: -4.420053005218506
    4. ' =' → logprob: -5.670053005218506
    5. '_coin' → logprob: -6.045053005218506
    6. '_count' → logprob: -6.545053005218506
    7. '_cnt' → logprob: -6.795053005218506
    8. '_counts' → logprob: -7.295053005218506
    9. 'Coins' → logprob: -7.420053005218506
    10. 'change' → logprob: -7.795053005218506

Token 314: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37614676356315613
    2. '   ' → logprob: -1.5011467933654785
    3. '_change' → logprob: -3.6261467933654785
    4. 'change' → logprob: -4.3761467933654785
    5. '_count' → logprob: -4.5011467933654785
    6. '_min' → logprob: -5.1261467933654785
    7. 'dp' → logprob: -5.3761467933654785
    8. 'count' → logprob: -5.7511467933654785
    9. '_cnt' → logprob: -5.8761467933654785
    10. 'min' → logprob: -5.8761467933654785

Token 315: ' coins' (ID: 28969)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.34226998686790466
    2. ' used' → logprob: -2.7172698974609375
    3. 'coin' → logprob: -2.7172698974609375
    4. 'ways' → logprob: -3.7172698974609375
    5. 'coins' → logprob: -3.7172698974609375
    6. 'max' → logprob: -4.2172698974609375
    7. 'usage' → logprob: -4.2172698974609375
    8. 'change' → logprob: -4.2172698974609375
    9. ' usage' → logprob: -4.5922698974609375
    10. 'min' → logprob: -4.7172698974609375

Token 316: ' used' (ID: 2061)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.10939612239599228
    2. '_usage' → logprob: -2.35939621925354
    3. '_use' → logprob: -5.984395980834961
    4. 'used' → logprob: -6.359395980834961
    5. '_count' → logprob: -6.484395980834961
    6. '_needed' → logprob: -6.484395980834961
    7. '_counts' → logprob: -7.234395980834961
    8. 'usage' → logprob: -8.109395980834961
    9. 's' → logprob: -8.609395980834961
    10. '_required' → logprob: -8.984395980834961

Token 317: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36089763045310974
    2. '_count' → logprob: -1.3608976602554321
    3. '_used' → logprob: -4.110897541046143
    4. '_needed' → logprob: -4.735897541046143
    5. '_counts' → logprob: -5.235897541046143
    6. '_co' → logprob: -5.610897541046143
    7. '_cnt' → logprob: -6.360897541046143
    8. '_for' → logprob: -6.360897541046143
    9. '=' → logprob: -6.485897541046143
    10. '_usage' → logprob: -6.610897541046143

Token 318: ' each' (ID: 2454)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.9182981848716736
    2. 'all' → logprob: -1.1682982444763184
    3. ' all' → logprob: -1.6682982444763184
    4. 'change' → logprob: -3.5432982444763184
    5. ' amounts' → logprob: -3.6682982444763184
    6. ' amount' → logprob: -3.7932982444763184
    7. 'each' → logprob: -4.793298244476318
    8. 'amt' → logprob: -5.668298244476318
    9. ' each' → logprob: -5.668298244476318
    10. ' change' → logprob: -6.293298244476318

Token 319: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.9827457666397095
    2. ' amount' → logprob: -1.2327457666397095
    3. 'change' → logprob: -1.4827457666397095
    4. ' change' → logprob: -2.48274564743042
    5. 'value' → logprob: -5.10774564743042
    6. ' value' → logprob: -5.48274564743042
    7. ' amt' → logprob: -5.85774564743042
    8. 'v' → logprob: -6.35774564743042
    9. 'amt' → logprob: -6.35774564743042
    10. ' c' → logprob: -6.35774564743042

Token 320: ' <=' (ID: 5017)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.348885178565979
    2. 'max' → logprob: -1.473885178565979
    3. ' =' → logprob: -1.848885178565979
    4. '_change' → logprob: -2.0988850593566895
    5. '_max' → logprob: -3.0988850593566895
    6. ',' → logprob: -3.2238850593566895
    7. ' change' → logprob: -3.7238850593566895
    8. 'amount' → logprob: -3.8488850593566895
    9. 'MAX' → logprob: -4.2238850593566895
    10. ':' → logprob: -4.3488850593566895

Token 321: ' max' (ID: 2999)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13568733632564545
    2. 'max' → logprob: -2.5106873512268066
    3. 'pay' → logprob: -3.3856873512268066
    4. '500' → logprob: -5.385687351226807
    5. '200' → logprob: -6.010687351226807
    6. ' ' → logprob: -6.760687351226807
    7. '10' → logprob: -6.760687351226807
    8. '150' → logprob: -6.885687351226807
    9. ' max' → logprob: -7.885687351226807
    10. '300' → logprob: -7.885687351226807

Token 322: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00019030878320336342
    2. 'sum' → logprob: -8.875190734863281
    3. '_change' → logprob: -11.375190734863281
    4. '_' → logprob: -12.250190734863281
    5. 'max' → logprob: -12.375190734863281
    6. '_max' → logprob: -12.375190734863281
    7. '   ' → logprob: -12.375190734863281
    8. '_amount' → logprob: -12.500190734863281
    9. ')' → logprob: -12.500190734863281
    10. ' ' → logprob: -13.500190734863281

Token 323: '
' (ID: 198)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.2975865602493286
    2. 'max' → logprob: -3.047586441040039
    3. ':' → logprob: -3.172586441040039
    4. '_change' → logprob: -3.297586441040039
    5. '   ' → logprob: -3.422586441040039
    6. ' =' → logprob: -3.422586441040039
    7. ' change' → logprob: -3.922586441040039
    8. ',' → logprob: -4.172586441040039
    9. '
' → logprob: -4.672586441040039
    10. '=' → logprob: -5.922586441040039

Token 324: '   ' (ID: 271)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.41034144163131714
    2. '_change' → logprob: -2.410341501235962
    3. ' change' → logprob: -2.660341501235962
    4. ':' → logprob: -3.160341501235962
    5. 'dp' → logprob: -3.535341501235962
    6. ' =' → logprob: -3.660341501235962
    7. '
' → logprob: -3.785341501235962
    8. '_min' → logprob: -4.910341262817383
    9. 'max' → logprob: -5.160341262817383
    10. ':
' → logprob: -5.285341262817383

Token 325: ' INF' (ID: 69196)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5055074095726013
    2. '   ' → logprob: -1.505507469177246
    3. ' change' → logprob: -2.630507469177246
    4. 'max' → logprob: -3.755507469177246
    5. '
' → logprob: -3.880507469177246
    6. ' minimal' → logprob: -4.380507469177246
    7. 'dp' → logprob: -4.505507469177246
    8. 'min' → logprob: -4.630507469177246
    9. ' max' → logprob: -5.130507469177246
    10. 'minimal' → logprob: -5.380507469177246

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543403923511505
    2. '=' → logprob: -3.895543336868286
    3. '=int' → logprob: -13.770543098449707
    4. '＝' → logprob: -16.270544052124023
    5. ',' → logprob: -16.395544052124023
    6. ')' → logprob: -16.520544052124023
    7. '_' → logprob: -16.770544052124023
    8. ' =)' → logprob: -17.145544052124023
    9. ' ' → logprob: -17.395544052124023
    10. 'int' → logprob: -17.520544052124023

Token 327: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0032125303987413645
    2. 'float' → logprob: -5.7532124519348145
    3. '1' → logprob: -10.753212928771973
    4. 'int' → logprob: -11.378212928771973
    5. '100' → logprob: -14.003212928771973
    6. ' ' → logprob: -14.253212928771973
    7. ' float' → logprob: -14.878212928771973
    8. '999' → logprob: -16.753211975097656
    9. 'max' → logprob: -17.253211975097656
    10. 'sys' → logprob: -17.503211975097656

Token 328: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00870947539806366
    2. 'float' → logprob: -4.75870943069458
    3. '1' → logprob: -9.508709907531738
    4. 'int' → logprob: -10.883709907531738
    5. '100' → logprob: -13.633709907531738
    6. ' float' → logprob: -14.633709907531738
    7. ' ' → logprob: -15.883709907531738
    8. '999' → logprob: -16.133708953857422
    9. 'sys' → logprob: -17.008708953857422
    10. '123' → logprob: -17.508708953857422

Token 329: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06482423841953278
    2. '7' → logprob: -2.814824342727661
    3. '8' → logprob: -6.814824104309082
    4. '6' → logprob: -7.189824104309082
    5. '10' → logprob: -7.564824104309082
    6. '**' → logprob: -7.689824104309082
    7. '18' → logprob: -11.314824104309082
    8. '12' → logprob: -12.064824104309082
    9. '09' → logprob: -13.189824104309082
    10. '000' → logprob: -13.439824104309082

Token 330: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.195421494543552e-05
    2. '7' → logprob: -10.12507152557373
    3. '8' → logprob: -11.12507152557373
    4. '15' → logprob: -11.87507152557373
    5. '10' → logprob: -12.50007152557373
    6. '18' → logprob: -12.62507152557373
    7. '6' → logprob: -13.00007152557373
    8. '12' → logprob: -14.50007152557373
    9. '5' → logprob: -15.12507152557373
    10. '
' → logprob: -17.625072479248047

Token 331: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0035709692165255547
    2. '
' → logprob: -6.128571033477783
    3. 'dp' → logprob: -7.628571033477783
    4. 'change' → logprob: -7.753571033477783
    5. '    
' → logprob: -9.128570556640625
    6. '

' → logprob: -9.378570556640625
    7. ',
' → logprob: -9.628570556640625
    8. '' → logprob: -10.128570556640625
    9. '  
' → logprob: -10.628570556640625
    10. ' 
' → logprob: -10.753570556640625

Token 332: '   ' (ID: 271)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.4961884915828705
    2. '
' → logprob: -1.1211885213851929
    3. ' change' → logprob: -3.8711884021759033
    4. 'dp' → logprob: -3.9961884021759033
    5. 'min' → logprob: -5.371188640594482
    6. '   ' → logprob: -5.496188640594482
    7. 'max' → logprob: -5.621188640594482
    8. 'coin' → logprob: -6.121188640594482
    9. '_change' → logprob: -6.246188640594482
    10. '
' → logprob: -6.746188640594482

Token 333: ' ch' (ID: 549)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.7242294549942017
    2. 'min' → logprob: -0.8492294549942017
    3. 'dp' → logprob: -3.224229335784912
    4. 'max' → logprob: -3.474229335784912
    5. '   ' → logprob: -4.849229335784912
    6. ' min' → logprob: -5.474229335784912
    7. ' change' → logprob: -6.724229335784912
    8. 'minimal' → logprob: -6.724229335784912
    9. 'coin' → logprob: -6.974229335784912
    10. ' dp' → logprob: -7.599229335784912

Token 334: '_min' (ID: 15950)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.025029988959431648
    2. '_min' → logprob: -4.025030136108398
    3. 'min' → logprob: -5.650030136108398
    4. 'anges' → logprob: -7.275030136108398
    5. 'e' → logprob: -7.525030136108398
    6. ' =' → logprob: -8.025030136108398
    7. '_change' → logprob: -8.275030136108398
    8. 'anged' → logprob: -8.650030136108398
    9. '_count' → logprob: -8.900030136108398
    10. 'g' → logprob: -8.900030136108398

Token 335: 'coins' (ID: 48264)
  Prédit: '_co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.0034170090220868587
    2. 'coins' → logprob: -6.628417015075684
    3. '_count' → logprob: -7.003417015075684
    4. '_cnt' → logprob: -7.253417015075684
    5. '_coin' → logprob: -9.003417015075684
    6. ' =' → logprob: -9.128417015075684
    7. '_change' → logprob: -9.503417015075684
    8. '_counts' → logprob: -10.628417015075684
    9. 'co' → logprob: -10.878417015075684
    10. '_cost' → logprob: -10.878417015075684

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07895974069833755
    2. '=' → logprob: -2.5789597034454346
    3. ',' → logprob: -9.953959465026855
    4. 's' → logprob: -11.828959465026855
    5. ')' → logprob: -12.453959465026855
    6. '[' → logprob: -12.578959465026855
    7. ' ' → logprob: -12.953959465026855
    8. 'o' → logprob: -13.828959465026855
    9. ']' → logprob: -13.953959465026855
    10. '```' → logprob: -14.578959465026855

Token 337: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004746406921185553
    2. ' [' → logprob: -7.750474452972412
    3. '[-' → logprob: -11.00047492980957
    4. '[int' → logprob: -12.00047492980957
    5. '[in' → logprob: -12.12547492980957
    6. '[max' → logprob: -12.37547492980957
    7. '[min' → logprob: -12.87547492980957
    8. '   ' → logprob: -13.37547492980957
    9. '[size' → logprob: -14.12547492980957
    10. '{' → logprob: -14.12547492980957

Token 338: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.500001907348633
    3. '-INF' → logprob: -15.875001907348633
    4. ' INF' → logprob: -16.375001907348633
    5. '-' → logprob: -16.750001907348633
    6. 'IN' → logprob: -18.375001907348633
    7. '_INF' → logprob: -19.750001907348633
    8. '[' → logprob: -20.500001907348633
    9. 'inf' → logprob: -20.625001907348633
    10. '(IN' → logprob: -20.875001907348633

Token 339: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008188001229427755
    2. ' ]' → logprob: -7.875818729400635
    3. ']*' → logprob: -8.250819206237793
    4. ' for' → logprob: -8.875819206237793
    5. ']*(' → logprob: -11.500819206237793
    6. 'for' → logprob: -11.750819206237793
    7. ']+' → logprob: -12.250819206237793
    8. ',' → logprob: -12.375819206237793
    9. '+' → logprob: -12.500819206237793
    10. ')' → logprob: -13.000819206237793

Token 340: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.088346359931165e-07
    2. '(max' → logprob: -14.000000953674316
    3. ' max' → logprob: -17.0
    4. '[max' → logprob: -19.375
    5. '=max' → logprob: -20.5
    6. 'MAX' → logprob: -21.125
    7. '_max' → logprob: -21.375
    8. ',max' → logprob: -21.375
    9. ':max' → logprob: -22.0
    10. 'maxlength' → logprob: -22.625

Token 341: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.676292231422849e-05
    2. '+' → logprob: -11.750017166137695
    3. '_' → logprob: -12.125017166137695
    4. 'sum' → logprob: -13.125017166137695
    5. '_co' → logprob: -14.750017166137695
    6. '_max' → logprob: -15.250017166137695
    7. ')' → logprob: -16.250017166137695
    8. '_s' → logprob: -16.250017166137695
    9. '
' → logprob: -16.375017166137695
    10. '_len' → logprob: -16.750017166137695

Token 342: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019297054968774319
    2. ' +' → logprob: -6.251929759979248
    3. '+
' → logprob: -14.50192928314209
    4. ')+' → logprob: -15.62692928314209
    5. '
' → logprob: -16.126930236816406
    6. '＋' → logprob: -17.001930236816406
    7. ')' → logprob: -17.251930236816406
    8. '1' → logprob: -17.501930236816406
    9. ']+' → logprob: -17.751930236816406
    10. '()+' → logprob: -18.126930236816406

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -15.625027656555176
    4. '   ' → logprob: -16.375028610229492
    5. '  ' → logprob: -17.875028610229492
    6. '101' → logprob: -19.375028610229492
    7. '10' → logprob: -19.500028610229492
    8. '１' → logprob: -19.625028610229492
    9. '100' → logprob: -19.750028610229492
    10. '+' → logprob: -20.125028610229492

Token 344: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016091616824269295
    2. ')
' → logprob: -4.141091823577881
    3. ' )' → logprob: -10.391091346740723
    4. ')
' → logprob: -10.891091346740723
    5. ' )
' → logprob: -12.391091346740723
    6. '+' → logprob: -13.391091346740723
    7. ')

' → logprob: -13.641091346740723
    8. '   ' → logprob: -14.391091346740723
    9. ']' → logprob: -15.766091346740723
    10. ');' → logprob: -16.39109230041504

Token 345: '   ' (ID: 271)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.000553151941858232
    2. 'coins' → logprob: -8.375553131103516
    3. '   ' → logprob: -9.250553131103516
    4. 'change' → logprob: -9.625553131103516
    5. ' ch' → logprob: -9.750553131103516
    6. 'coin' → logprob: -10.375553131103516
    7. '0' → logprob: -10.625553131103516
    8. 'used' → logprob: -11.375553131103516
    9. '	ch' → logprob: -12.250553131103516
    10. '<|end|>' → logprob: -12.250553131103516

Token 346: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.021792829036712646
    2. 'coins' → logprob: -4.646792888641357
    3. '0' → logprob: -5.021792888641357
    4. 'used' → logprob: -5.521792888641357
    5. 'coin' → logprob: -7.271792888641357
    6. ' ch' → logprob: -8.6467924118042
    7. '[' → logprob: -9.1467924118042
    8. 'True' → logprob: -9.1467924118042
    9. 'change' → logprob: -10.0217924118042
    10. ' used' → logprob: -10.0217924118042

Token 347: '_used' (ID: 67016)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.020039815455675125
    2. '_used' → logprob: -4.020040035247803
    3. '_co' → logprob: -6.645040035247803
    4. 'min' → logprob: -8.395039558410645
    5. '_max' → logprob: -9.270039558410645
    6. '_m' → logprob: -9.395039558410645
    7. '_use' → logprob: -10.270039558410645
    8. 'used' → logprob: -10.395039558410645
    9. '_count' → logprob: -10.520039558410645
    10. 'coins' → logprob: -11.395039558410645

Token 348: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038795750588178635
    2. ' =' → logprob: -3.4137957096099854
    3. 'coins' → logprob: -5.4137959480285645
    4. '_co' → logprob: -7.4137959480285645
    5. 'Coins' → logprob: -10.788795471191406
    6. '[' → logprob: -11.163795471191406
    7. '=[' → logprob: -11.163795471191406
    8. '=[]' → logprob: -11.788795471191406
    9. ' =[' → logprob: -12.288795471191406
    10. 'coin' → logprob: -12.663795471191406

Token 349: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003596859984099865
    2. ' [' → logprob: -5.753596782684326
    3. '[-' → logprob: -8.628597259521484
    4. '[[' → logprob: -8.753597259521484
    5. '[(' → logprob: -9.503597259521484
    6. ' [[]' → logprob: -12.128597259521484
    7. ' [[' → logprob: -14.503597259521484
    8. '[s' → logprob: -15.003597259521484
    9. ' [-' → logprob: -15.253597259521484
    10. '[n' → logprob: -15.628597259521484

Token 350: 'set' (ID: 977)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14360637962818146
    2. 'set' → logprob: -2.268606424331665
    3. 'None' → logprob: -3.893606424331665
    4. '0' → logprob: -5.393606185913086
    5. '[]' → logprob: -5.768606185913086
    6. '[-' → logprob: -6.768606185913086
    7. ' [' → logprob: -7.518606185913086
    8. '(' → logprob: -8.018606185913086
    9. ' set' → logprob: -10.018606185913086
    10. '(None' → logprob: -10.143606185913086

Token 351: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.16024738550186157
    2. '()' → logprob: -1.9102473258972168
    3. '()]
' → logprob: -10.910247802734375
    4. ']()' → logprob: -13.660247802734375
    5. ' ()' → logprob: -13.785247802734375
    6. '()
' → logprob: -14.535247802734375
    7. '()}' → logprob: -14.660247802734375
    8. '()-' → logprob: -15.535247802734375
    9. '()*' → logprob: -15.785247802734375
    10. '(' → logprob: -16.035247802734375

Token 352: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.286562979221344
    2. '()]' → logprob: -1.4115629196166992
    3. ']' → logprob: -5.661562919616699
    4. ' for' → logprob: -7.411562919616699
    5. ']()' → logprob: -7.536562919616699
    6. 'for' → logprob: -7.661562919616699
    7. '()]
' → logprob: -8.6615629196167
    8. '(' → logprob: -9.7865629196167
    9. '()
' → logprob: -10.9115629196167
    10. '(range' → logprob: -11.0365629196167

Token 353: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007796363905072212
    2. ' range' → logprob: -5.507796287536621
    3. 'range' → logprob: -6.382796287536621
    4. ' _' → logprob: -6.507796287536621
    5. '_range' → logprob: -7.632796287536621
    6. '_amount' → logprob: -11.382796287536621
    7. '_s' → logprob: -12.257796287536621
    8. '_coin' → logprob: -12.382796287536621
    9. '_i' → logprob: -12.632796287536621
    10. 'i' → logprob: -12.632796287536621

Token 354: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019293478690087795
    2. ' range' → logprob: -6.25192928314209
    3. '_range' → logprob: -15.00192928314209
    4. '(range' → logprob: -15.12692928314209
    5. '	range' → logprob: -16.751930236816406
    6. '_' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.126930236816406
    8. '   ' → logprob: -18.751930236816406
    9. '  ' → logprob: -18.876930236816406
    10. '
' → logprob: -19.376930236816406

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.255233764648438
    4. ' ' → logprob: -19.380233764648438
    5. '   ' → logprob: -19.880233764648438
    6. '	range' → logprob: -20.380233764648438
    7. '  ' → logprob: -22.255233764648438
    8. '
' → logprob: -22.505233764648438
    9. '.range' → logprob: -23.505233764648438
    10. 'rang' → logprob: -23.630233764648438

Token 356: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.39082103967666626
    2. 'range' → logprob: -1.5158209800720215
    3. 'max' → logprob: -3.0158209800720215
    4. ' range' → logprob: -3.1408209800720215
    5. '(range' → logprob: -4.7658209800720215
    6. ' max' → logprob: -6.3908209800720215
    7. ' (' → logprob: -6.6408209800720215
    8. '[max' → logprob: -10.14082145690918
    9. '   ' → logprob: -10.51582145690918
    10. ',max' → logprob: -10.89082145690918

Token 357: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.893480243277736e-05
    2. 'sum' → logprob: -10.750039100646973
    3. '+' → logprob: -11.125039100646973
    4. '_co' → logprob: -14.250039100646973
    5. ')' → logprob: -15.000039100646973
    6. '_len' → logprob: -15.250039100646973
    7. '_' → logprob: -15.500039100646973
    8. '_s' → logprob: -15.500039100646973
    9. 'Sum' → logprob: -15.625039100646973
    10. 'coins' → logprob: -16.500038146972656

Token 358: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.726595241460018e-05
    2. ' +' → logprob: -10.37503719329834
    3. ')]' → logprob: -13.25003719329834
    4. '1' → logprob: -13.62503719329834
    5. ')+' → logprob: -13.62503719329834
    6. ']+' → logprob: -14.37503719329834
    7. '+
' → logprob: -14.87503719329834
    8. ')])' → logprob: -15.25003719329834
    9. '()+' → logprob: -16.000038146972656
    10. ')' → logprob: -16.000038146972656

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000116655595775228
    2. ' ' → logprob: -9.875116348266602
    3. '+' → logprob: -10.250116348266602
    4. '(' → logprob: -12.125116348266602
    5. 'max' → logprob: -12.250116348266602
    6. '0' → logprob: -12.625116348266602
    7. 'range' → logprob: -12.750116348266602
    8. '2' → logprob: -13.000116348266602
    9. '(max' → logprob: -13.375116348266602
    10. '   ' → logprob: -13.375116348266602

Token 360: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007053864188492298
    2. ')' → logprob: -5.007053852081299
    3. ']' → logprob: -8.007054328918457
    4. ')]
' → logprob: -13.007054328918457
    5. ')
' → logprob: -14.007054328918457
    6. ')])' → logprob: -14.632054328918457
    7. '])' → logprob: -14.882054328918457
    8. ' )' → logprob: -15.132054328918457
    9. '   ' → logprob: -15.507054328918457
    10. ')]
' → logprob: -15.632054328918457

Token 361: '   ' (ID: 271)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16181480884552002
    2. '   ' → logprob: -1.91181480884552
    3. ' ch' → logprob: -6.5368146896362305
    4. 'def' → logprob: -10.66181468963623
    5. '	ch' → logprob: -10.78681468963623
    6. 'coin' → logprob: -11.03681468963623
    7. '
' → logprob: -11.28681468963623
    8. 'for' → logprob: -11.28681468963623
    9. 'coins' → logprob: -11.78681468963623
    10. '```' → logprob: -11.91181468963623

Token 362: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.005727794487029314
    2. ' ch' → logprob: -5.255727767944336
    3. '   ' → logprob: -7.880727767944336
    4. '0' → logprob: -9.380727767944336
    5. '	ch' → logprob: -11.630727767944336
    6. '_ch' → logprob: -12.630727767944336
    7. '[ch' → logprob: -12.755727767944336
    8. 'def' → logprob: -13.255727767944336
    9. '-ch' → logprob: -13.255727767944336
    10. 'coin' → logprob: -13.380727767944336

Token 363: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.881560041918419e-05
    2. 'min' → logprob: -10.500039100646973
    3. '_m' → logprob: -12.875039100646973
    4. '_' → logprob: -13.125039100646973
    5. '_sum' → logprob: -13.625039100646973
    6. '_co' → logprob: -13.875039100646973
    7. '_ch' → logprob: -14.500039100646973
    8. '[' → logprob: -14.500039100646973
    9. '_amount' → logprob: -14.750039100646973
    10. '_max' → logprob: -14.875039100646973

Token 364: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -2.963691804325208e-05
    2. '_co' → logprob: -11.250029563903809
    3. 'coin' → logprob: -12.000029563903809
    4. 'count' → logprob: -12.500029563903809
    5. 'co' → logprob: -12.750029563903809
    6. 'change' → logprob: -14.375029563903809
    7. ' coins' → logprob: -14.500029563903809
    8. '=' → logprob: -15.000029563903809
    9. '_count' → logprob: -15.125029563903809
    10. 'c' → logprob: -15.125029563903809

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -13.750001907348633
    3. '0' → logprob: -15.000001907348633
    4. '=' → logprob: -15.875001907348633
    5. '][' → logprob: -17.500001907348633
    6. ' =' → logprob: -17.625001907348633
    7. '[ch' → logprob: -18.125001907348633
    8. '[
' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.375001907348633
    10. '```' → logprob: -18.500001907348633

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '[' → logprob: -15.50000286102295
    4. ']' → logprob: -17.562501907348633
    5. '000' → logprob: -17.875001907348633
    6. '00' → logprob: -18.062501907348633
    7. '۰' → logprob: -18.437501907348633
    8. '   ' → logprob: -18.562501907348633
    9. '
' → logprob: -18.625001907348633
    10. '1' → logprob: -18.750001907348633

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1757945418357849
    2. '=' → logprob: -2.4257946014404297
    3. ']=' → logprob: -2.6757946014404297
    4. ' =' → logprob: -5.55079460144043
    5. ' ]' → logprob: -9.67579460144043
    6. ')=' → logprob: -13.67579460144043
    7. ')' → logprob: -13.92579460144043
    8. '']=' → logprob: -15.67579460144043
    9. ',' → logprob: -16.05079460144043
    10. ' ' → logprob: -16.67579460144043

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '=int' → logprob: -17.548587799072266
    4. '=}' → logprob: -17.548587799072266
    5. '＝' → logprob: -17.673587799072266
    6. ']=' → logprob: -17.673587799072266
    7. ' ' → logprob: -17.673587799072266
    8. ')=' → logprob: -18.048587799072266
    9. ' ' → logprob: -18.548587799072266
    10. '.=' → logprob: -18.798587799072266

Token 369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -21.375
    4. '０' → logprob: -22.875
    5. '00' → logprob: -23.125
    6. '   ' → logprob: -23.625
    7. '000' → logprob: -24.0
    8. '০' → logprob: -24.5
    9. '(' → logprob: -25.5
    10. ' ' → logprob: -25.5

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -19.75
    4. '   ' → logprob: -22.125
    5. '{' → logprob: -22.25
    6. '000' → logprob: -22.375
    7. '０' → logprob: -22.375
    8. '```' → logprob: -22.375
    9. 'zero' → logprob: -22.5
    10. '[' → logprob: -22.5

Token 371: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29810261726379395
    2. ' for' → logprob: -1.798102617263794
    3. '   ' → logprob: -2.423102617263794
    4. '
' → logprob: -6.173102378845215
    5. '	for' → logprob: -6.673102378845215
    6. '    
' → logprob: -9.798102378845215
    7. ',' → logprob: -10.923102378845215
    8. 'coin' → logprob: -11.173102378845215
    9. '  
' → logprob: -11.673102378845215
    10. 'coins' → logprob: -11.673102378845215

Token 372: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07714523375034332
    2. ' for' → logprob: -2.8271453380584717
    3. '   ' → logprob: -4.202145099639893
    4. 'queue' → logprob: -10.32714557647705
    5. 'from' → logprob: -10.32714557647705
    6. 'coin' → logprob: -11.70214557647705
    7. '	for' → logprob: -12.07714557647705
    8. 'import' → logprob: -12.20214557647705
    9. '
' → logprob: -12.70214557647705
    10. ' queue' → logprob: -12.82714557647705

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003943279385566711
    2. ' for' → logprob: -6.00394344329834
    3. 'from' → logprob: -6.87894344329834
    4. '   ' → logprob: -7.87894344329834
    5. 'queue' → logprob: -9.87894344329834
    6. 'import' → logprob: -12.87894344329834
    7. ' from' → logprob: -13.25394344329834
    8. 'coin' → logprob: -14.12894344329834
    9. 'q' → logprob: -14.25394344329834
    10. ' queue' → logprob: -14.37894344329834

Token 374: ' x' (ID: 1215)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.6463404893875122
    2. ' c' → logprob: -1.1463404893875122
    3. 'coin' → logprob: -2.5213403701782227
    4. 'c' → logprob: -3.1463403701782227
    5. ' amt' → logprob: -4.146340370178223
    6. ' amount' → logprob: -4.646340370178223
    7. 'amount' → logprob: -5.646340370178223
    8. 'amt' → logprob: -6.021340370178223
    9. ' v' → logprob: -7.146340370178223
    10. ' x' → logprob: -7.521340370178223

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07017761468887329
    2. 'in' → logprob: -2.6951775550842285
    3. ' ' → logprob: -9.320178031921387
    4. ',' → logprob: -10.195178031921387
    5. '	in' → logprob: -10.445178031921387
    6. '1' → logprob: -10.820178031921387
    7. 'coin' → logprob: -11.445178031921387
    8. '_in' → logprob: -12.195178031921387
    9. 'In' → logprob: -12.320178031921387
    10. ' ,' → logprob: -12.570178031921387

Token 376: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3976125717163086
    2. 'coins' → logprob: -1.1476125717163086
    3. ' range' → logprob: -4.647612571716309
    4. ' coins' → logprob: -6.897612571716309
    5. '[' → logprob: -9.772612571716309
    6. 'co' → logprob: -11.147612571716309
    7. 'coin' → logprob: -12.147612571716309
    8. '(range' → logprob: -12.397612571716309
    9. 'Coins' → logprob: -13.022612571716309
    10. '(' → logprob: -13.522612571716309

Token 377: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006303803995251656
    2. '1' → logprob: -5.381303787231445
    3. '(max' → logprob: -6.631303787231445
    4. '(co' → logprob: -8.006303787231445
    5. '(ch' → logprob: -11.881303787231445
    6. 'coins' → logprob: -11.881303787231445
    7. ' ' → logprob: -12.256303787231445
    8. '(len' → logprob: -12.381303787231445
    9. 'max' → logprob: -12.631303787231445
    10. '(min' → logprob: -13.256303787231445

Token 378: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0022686126176267862
    2. ' ' → logprob: -7.3772687911987305
    3. '+' → logprob: -7.6272687911987305
    4. '(' → logprob: -8.00226879119873
    5. '1' → logprob: -8.37726879119873
    6. '_min' → logprob: -8.50226879119873
    7. 'sum' → logprob: -9.00226879119873
    8. '   ' → logprob: -9.37726879119873
    9. 'min' → logprob: -9.75226879119873
    10. 'coins' → logprob: -10.87726879119873

Token 379: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01003879215568304
    2. ' +' → logprob: -4.63503885269165
    3. '1' → logprob: -9.135038375854492
    4. '):' → logprob: -9.260038375854492
    5. '):
' → logprob: -9.885038375854492
    6. '   ' → logprob: -10.885038375854492
    7. ' ' → logprob: -13.010038375854492
    8. '
' → logprob: -13.385038375854492
    9. '-' → logprob: -14.135038375854492
    10. ')+' → logprob: -14.260038375854492

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '501' → logprob: -16.000003814697266
    4. '500' → logprob: -16.375003814697266
    5. '+' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.812503814697266
    7. '-' → logprob: -17.812503814697266
    8. '
' → logprob: -18.000003814697266
    9. '51' → logprob: -18.125003814697266
    10. 'coins' → logprob: -18.250003814697266

Token 381: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14287947118282318
    2. '):
' → logprob: -2.0178794860839844
    3. ':' → logprob: -9.642879486083984
    4. ' ):' → logprob: -9.642879486083984
    5. ')' → logprob: -10.267879486083984
    6. '):
' → logprob: -10.767879486083984
    7. '   ' → logprob: -11.642879486083984
    8. ' ):
' → logprob: -11.892879486083984
    9. '):

' → logprob: -14.017879486083984
    10. ',' → logprob: -14.142879486083984

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0679422914981842
    2. ' for' → logprob: -3.0679423809051514
    3. '   ' → logprob: -4.067942142486572
    4. 'for' → logprob: -6.317942142486572
    5. ' if' → logprob: -8.81794261932373
    6. '	   ' → logprob: -9.94294261932373
    7. '    ' → logprob: -11.44294261932373
    8. '	for' → logprob: -11.69294261932373
    9. '    ' → logprob: -11.69294261932373
    10. '   ' → logprob: -11.94294261932373

Token 383: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5916321277618408
    2. 'for' (adapté à ' for') → logprob: -0.9666321277618408
    3. '   ' → logprob: -2.716632127761841
    4. '       ' → logprob: -9.841631889343262
    5. '	for' → logprob: -10.841631889343262
    6. ' if' → logprob: -10.841631889343262
    7. 'if' → logprob: -10.966631889343262
    8. '   ' → logprob: -12.341631889343262
    9. ' ' → logprob: -13.591631889343262
    10. '    ' → logprob: -13.716631889343262

Token 384: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8347333073616028
    2. 'coin' → logprob: -0.9597333073616028
    3. ' c' → logprob: -2.584733247756958
    4. 'i' → logprob: -2.959733247756958
    5. ' coin' → logprob: -3.084733247756958
    6. ' i' → logprob: -5.084733486175537
    7. 'idx' → logprob: -6.459733486175537
    8. 'v' → logprob: -6.584733486175537
    9. ' idx' → logprob: -8.334733009338379
    10. ' v' → logprob: -8.959733009338379

Token 385: ',c' (ID: 22261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.286528080701828
    2. 'in' → logprob: -1.6615281105041504
    3. ',' → logprob: -3.0365281105041504
    4. ' ,' → logprob: -4.78652811050415
    5. ' ' → logprob: -6.03652811050415
    6. '	in' → logprob: -8.911527633666992
    7. ',in' → logprob: -8.911527633666992
    8. 'coin' → logprob: -9.411527633666992
    9. ' coin' → logprob: -9.411527633666992
    10. '_in' → logprob: -10.786527633666992

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25497522950172424
    2. 'in' → logprob: -1.5049751996994019
    3. 'oin' → logprob: -6.629975318908691
    4. ',' → logprob: -7.004975318908691
    5. 'o' → logprob: -8.004975318908691
    6. 'n' → logprob: -9.254975318908691
    7. 's' → logprob: -10.004975318908691
    8. 'coins' → logprob: -10.004975318908691
    9. '	in' → logprob: -10.129975318908691
    10. ' ' → logprob: -10.254975318908691

Token 387: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0031830633524805307
    2. ' enumerate' → logprob: -5.753182888031006
    3. 'range' → logprob: -12.628183364868164
    4. 'coins' → logprob: -14.003183364868164
    5. '[(' → logprob: -14.753183364868164
    6. 'zip' → logprob: -15.128183364868164
    7. 'enum' → logprob: -15.753183364868164
    8. 'en' → logprob: -16.003183364868164
    9. 'coin' → logprob: -16.003183364868164
    10. '```' → logprob: -16.378183364868164

Token 388: '(co' (ID: 41772)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -9.412610233994201e-05
    2. ' coins' → logprob: -9.375094413757324
    3. '(co' → logprob: -12.250094413757324
    4. 'co' → logprob: -12.375094413757324
    5. '   ' → logprob: -16.250093460083008
    6. '[' → logprob: -16.375093460083008
    7. 'coin' → logprob: -17.000093460083008
    8. '```' → logprob: -17.625093460083008
    9. ')' → logprob: -17.875093460083008
    10. ' ' → logprob: -18.875093460083008

Token 389: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0015224798116832972
    2. 'coins' → logprob: -6.501522541046143
    3. 'in' → logprob: -12.001522064208984
    4. '   ' → logprob: -12.626522064208984
    5. ' coins' → logprob: -12.626522064208984
    6. 'i' → logprob: -13.626522064208984
    7. 'ns' → logprob: -14.001522064208984
    8. '
' → logprob: -14.126522064208984
    9. '[' → logprob: -14.376522064208984
    10. '```' → logprob: -15.001522064208984

Token 390: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22571933269500732
    2. '):' → logprob: -1.6007193326950073
    3. '):
' → logprob: -8.725719451904297
    4. '       ' → logprob: -9.850719451904297
    5. '   ' → logprob: -10.100719451904297
    6. ':' → logprob: -10.475719451904297
    7. ':
' → logprob: -11.975719451904297
    8. '[' → logprob: -12.600719451904297
    9. ' ):
' → logprob: -12.600719451904297
    10. '           ' → logprob: -13.100719451904297

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001748126931488514
    2. ' if' → logprob: -6.751748085021973
    3. ':' → logprob: -8.751748085021973
    4. '	       ' → logprob: -9.001748085021973
    5. ',' → logprob: -9.126748085021973
    6. '          ' → logprob: -10.126748085021973
    7. '    	   ' → logprob: -10.251748085021973
    8. '	   ' → logprob: -11.126748085021973
    9. ':
' → logprob: -11.626748085021973
    10. '   ' → logprob: -11.626748085021973

Token 392: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33130308985710144
    2. 'if' (adapté à ' if') → logprob: -1.3313031196594238
    3. '           ' → logprob: -4.081303119659424
    4. '   ' → logprob: -6.956303119659424
    5. '               ' → logprob: -10.331302642822266
    6. '       ' → logprob: -12.581302642822266
    7. '	if' → logprob: -12.706302642822266
    8. ' ' → logprob: -14.081302642822266
    9. 'If' → logprob: -15.206302642822266
    10. 'n' → logprob: -15.831302642822266

Token 393: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01489733811467886
    2. ' x' → logprob: -4.264897346496582
    3. 'c' → logprob: -7.264897346496582
    4. ' c' → logprob: -10.889897346496582
    5. '   ' → logprob: -11.514897346496582
    6. ' ' → logprob: -12.639897346496582
    7. '	x' → logprob: -14.264897346496582
    8. '  ' → logprob: -14.389897346496582
    9. '(x' → logprob: -15.264897346496582
    10. ' ' → logprob: -15.389897346496582

Token 394: '+c' (ID: 114860)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5987092852592468
    2. '>=' → logprob: -1.3487093448638916
    3. ' -' → logprob: -1.9737093448638916
    4. ' >=' → logprob: -2.9737093448638916
    5. '+' → logprob: -7.9737091064453125
    6. '-c' → logprob: -8.223709106445312
    7. '-
' → logprob: -9.723709106445312
    8. ']>=' → logprob: -9.848709106445312
    9. ')>=' → logprob: -10.223709106445312
    10. ' ' → logprob: -10.473709106445312

Token 395: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2519910931587219
    2. ' <=' → logprob: -1.5019910335540771
    3. '<' → logprob: -10.251991271972656
    4. ' <' → logprob: -11.126991271972656
    5. ']<=' → logprob: -12.376991271972656
    6. ')<=' → logprob: -12.376991271972656
    7. ')' → logprob: -13.751991271972656
    8. '<len' → logprob: -13.751991271972656
    9. '```' → logprob: -15.126991271972656
    10. ']' → logprob: -15.126991271972656

Token 396: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001584850688232109
    2. ' max' → logprob: -8.750158309936523
    3. '	max' → logprob: -19.000158309936523
    4. '   ' → logprob: -21.250158309936523
    5. '(max' → logprob: -22.125158309936523
    6. '
' → logprob: -22.125158309936523
    7. '_max' → logprob: -22.750158309936523
    8. ' ' → logprob: -22.875158309936523
    9. '[max' → logprob: -22.875158309936523
    10. '=max' → logprob: -23.000158309936523

Token 397: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.4849443838757e-06
    2. 'sum' → logprob: -12.375004768371582
    3. '_' → logprob: -15.375004768371582
    4. '_s' → logprob: -17.250003814697266
    5. '_max' → logprob: -17.750003814697266
    6. '_SUM' → logprob: -18.000003814697266
    7. 'Sum' → logprob: -18.625003814697266
    8. '\' → logprob: -18.875003814697266
    9. 'um' → logprob: -19.000003814697266
    10. 'max' → logprob: -19.375003814697266

Token 398: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03919966518878937
    2. 'and' → logprob: -3.2891995906829834
    3. ':
' → logprob: -6.9141998291015625
    4. ':' → logprob: -8.914199829101562
    5. '	and' → logprob: -11.289199829101562
    6. '           ' → logprob: -11.664199829101562
    7. '   ' → logprob: -12.914199829101562
    8. ' ' → logprob: -13.914199829101562
    9. '):
' → logprob: -14.039199829101562
    10. '       ' → logprob: -14.414199829101562

Token 399: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -2.339278580620885e-06
    2. ' ch' → logprob: -13.125001907348633
    3. '(ch' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '	ch' → logprob: -17.750001907348633
    6. '[ch' → logprob: -19.000001907348633
    7. '
' → logprob: -19.500001907348633
    8. 'Ch' → logprob: -20.625001907348633
    9. '```' → logprob: -21.125001907348633
    10. '  ' → logprob: -21.125001907348633

Token 400: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9743012671824545e-05
    2. 'min' → logprob: -10.875020027160645
    3. '_max' → logprob: -15.625020027160645
    4. '_ch' → logprob: -15.625020027160645
    5. '[min' → logprob: -16.125019073486328
    6. '_' → logprob: -16.500019073486328
    7. '
' → logprob: -16.875019073486328
    8. '```' → logprob: -17.375019073486328
    9. '_m' → logprob: -18.000019073486328
    10. '	min' → logprob: -18.250019073486328

Token 401: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.00014585316239390522
    2. 'min' → logprob: -8.87514591217041
    3. '_min' → logprob: -12.75014591217041
    4. ' coins' → logprob: -14.12514591217041
    5. 'co' → logprob: -14.87514591217041
    6. 'coin' → logprob: -15.00014591217041
    7. 'chips' → logprob: -15.25014591217041
    8. '
' → logprob: -15.50014591217041
    9. '```' → logprob: -15.62514591217041
    10. 'mins' → logprob: -15.62514591217041

Token 402: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.875007629394531
    3. ' [' → logprob: -12.875007629394531
    4. '[
' → logprob: -13.125007629394531
    5. 'x' → logprob: -15.625007629394531
    6. '[i' → logprob: -16.50000762939453
    7. '   ' → logprob: -17.12500762939453
    8. '
' → logprob: -17.62500762939453
    9. '<x' → logprob: -17.75000762939453
    10. '(x' → logprob: -17.87500762939453

Token 403: ']+' (ID: 15344)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.03117786906659603
    2. '[c' → logprob: -4.031177997589111
    3. ']' → logprob: -5.156177997589111
    4. '+' → logprob: -6.531177997589111
    5. '+x' → logprob: -6.531177997589111
    6. ']+' → logprob: -6.781177997589111
    7. ' +' → logprob: -6.906177997589111
    8. '[x' → logprob: -7.031177997589111
    9. '[' → logprob: -7.656177997589111
    10. 'c' → logprob: -7.906177997589111

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.375009536743164
    4. 'coin' → logprob: -18.375009536743164
    5. '
' → logprob: -18.500009536743164
    6. '```' → logprob: -18.875009536743164
    7. '{' → logprob: -19.812509536743164
    8. '+' → logprob: -20.000009536743164
    9. '  ' → logprob: -20.187509536743164
    10. '(' → logprob: -20.312509536743164

Token 405: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25193676352500916
    2. ' <' → logprob: -1.5019367933273315
    3. '<
' → logprob: -12.751936912536621
    4. '<int' → logprob: -13.876936912536621
    5. '[' → logprob: -14.626936912536621
    6. ')' → logprob: -14.751936912536621
    7. ' ' → logprob: -15.376936912536621
    8. '<x' → logprob: -15.376936912536621
    9. '<class' → logprob: -15.501936912536621
    10. '   ' → logprob: -15.501936912536621

Token 406: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -7.505351095460355e-05
    2. ' ch' → logprob: -9.500075340270996
    3. '=' → logprob: -16.25007438659668
    4. '	ch' → logprob: -17.12507438659668
    5. '[ch' → logprob: -17.75007438659668
    6. '   ' → logprob: -18.87507438659668
    7. '  ' → logprob: -20.62507438659668
    8. '(ch' → logprob: -20.75007438659668
    9. '_ch' → logprob: -20.87507438659668
    10. ' ' → logprob: -21.62507438659668

Token 407: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00020354038861114532
    2. 'min' → logprob: -8.500203132629395
    3. '_m' → logprob: -17.75020408630371
    4. '_max' → logprob: -18.00020408630371
    5. '[min' → logprob: -18.12520408630371
    6. '	min' → logprob: -18.37520408630371
    7. '_' → logprob: -18.75020408630371
    8. '-min' → logprob: -19.00020408630371
    9. ' min' → logprob: -19.12520408630371
    10. '_MIN' → logprob: -19.25020408630371

Token 408: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.0280383548888494e-06
    2. 'co' → logprob: -14.625000953674316
    3. ' coins' → logprob: -15.500000953674316
    4. 'o' → logprob: -16.750001907348633
    5. 'coin' → logprob: -16.750001907348633
    6. 'Coins' → logprob: -17.375001907348633
    7. 'c' → logprob: -17.500001907348633
    8. 'chips' → logprob: -18.250001907348633
    9. 'cards' → logprob: -18.500001907348633
    10. '_co' → logprob: -18.625001907348633

Token 409: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.625
    3. '[' → logprob: -15.75
    4. '   ' → logprob: -17.875
    5. '[
' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '\[' → logprob: -20.75
    8. '(x' → logprob: -20.875
    9. '	x' → logprob: -20.875
    10. ' [' → logprob: -20.875

Token 410: '+c' (ID: 114860)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004416705574840307
    2. '+x' → logprob: -5.6294169425964355
    3. 'x' → logprob: -7.3794169425964355
    4. '[c' → logprob: -8.879416465759277
    5. '[' → logprob: -10.254416465759277
    6. ' x' → logprob: -12.629416465759277
    7. '+c' → logprob: -12.754416465759277
    8. '{x' → logprob: -12.754416465759277
    9. '[
' → logprob: -13.129416465759277
    10. ' +' → logprob: -13.629416465759277

Token 411: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012451021932065487
    2. ':
' → logprob: -4.512451171875
    3. ']:' → logprob: -6.887451171875
    4. '):' → logprob: -8.637451171875
    5. ']' → logprob: -9.887451171875
    6. '[' → logprob: -10.012451171875
    7. ']:
' → logprob: -10.012451171875
    8. '):
' → logprob: -10.637451171875
    9. ' :' → logprob: -11.137451171875
    10. ':

' → logprob: -12.012451171875

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01840943843126297
    2. ':' → logprob: -4.393409252166748
    3. ':
' → logprob: -5.893409252166748
    4. '           ' → logprob: -7.143409252166748
    5. '                
' → logprob: -7.893409252166748
    6. '              ' → logprob: -8.268409729003906
    7. '<|end|>' → logprob: -8.518409729003906
    8. '                       ' → logprob: -8.643409729003906
    9. '):
' → logprob: -8.768409729003906
    10. ',' → logprob: -8.768409729003906

Token 413: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.0047738878056406975
    2. ' ch' → logprob: -5.50477409362793
    3. '               ' → logprob: -7.75477409362793
    4. '                   ' → logprob: -8.25477409362793
    5. '   ' → logprob: -12.75477409362793
    6. '	ch' → logprob: -13.37977409362793
    7. '           ' → logprob: -14.25477409362793
    8. '                       ' → logprob: -14.50477409362793
    9. '[ch' → logprob: -14.62977409362793
    10. '                ' → logprob: -15.25477409362793

Token 414: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.796184723294573e-06
    2. 'min' → logprob: -12.125005722045898
    3. '_' → logprob: -16.3750057220459
    4. '_m' → logprob: -16.3750057220459
    5. '	min' → logprob: -17.8750057220459
    6. '_max' → logprob: -18.5000057220459
    7. '[min' → logprob: -18.6250057220459
    8. ' min' → logprob: -19.3750057220459
    9. '
' → logprob: -19.5000057220459
    10. '_MIN' → logprob: -19.7500057220459

Token 415: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.9361264946837764e-07
    2. 'coin' → logprob: -16.875
    3. ' coins' → logprob: -16.875
    4. 'co' → logprob: -17.0
    5. 'min' → logprob: -17.0
    6. 'c' → logprob: -18.25
    7. '```' → logprob: -19.25
    8. 'chips' → logprob: -19.375
    9. '_co' → logprob: -19.625
    10. 'cards' → logprob: -19.75

Token 416: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.25
    3. '[' → logprob: -16.375
    4. ' [' → logprob: -17.5
    5. '[
' → logprob: -17.5
    6. ' =' → logprob: -18.25
    7. '=x' → logprob: -18.75
    8. '(x' → logprob: -19.0
    9. '=' → logprob: -19.125
    10. ',x' → logprob: -19.25

Token 417: '+c' (ID: 114860)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.23781037330627441
    2. '+' → logprob: -2.1128103733062744
    3. ']' → logprob: -2.9878103733062744
    4. '[x' → logprob: -3.2378103733062744
    5. '+x' → logprob: -7.737810134887695
    6. '[' → logprob: -8.362810134887695
    7. 'x' → logprob: -9.237810134887695
    8. ']+=' → logprob: -9.237810134887695
    9. '[i' → logprob: -9.862810134887695
    10. ')+' → logprob: -9.987810134887695

Token 418: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25630423426628113
    2. '=' → logprob: -1.5063042640686035
    3. ']' → logprob: -5.5063042640686035
    4. ']=' → logprob: -8.131303787231445
    5. ' ]' → logprob: -12.881303787231445
    6. '[' → logprob: -12.881303787231445
    7. ')' → logprob: -13.256303787231445
    8. ' =
' → logprob: -13.881303787231445
    9. ',' → logprob: -14.006303787231445
    10. '=
' → logprob: -15.256303787231445

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '=
' → logprob: -15.02975082397461
    4. ',' → logprob: -16.15475082397461
    5. '＝' → logprob: -16.90475082397461
    6. '.=' → logprob: -17.15475082397461
    7. ']=' → logprob: -17.52975082397461
    8. '=

' → logprob: -17.52975082397461
    9. ')' → logprob: -18.15475082397461
    10. '[' → logprob: -18.27975082397461

Token 420: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0019307781476527452
    2. ' ch' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.751931190490723
    4. '	ch' → logprob: -13.751931190490723
    5. '           ' → logprob: -17.376930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '  ' → logprob: -17.751930236816406
    8. '               ' → logprob: -17.876930236816406
    9. '[ch' → logprob: -18.001930236816406
    10. '(ch' → logprob: -18.001930236816406

Token 421: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.4391956685576588e-05
    2. 'min' → logprob: -10.625024795532227
    3. '[min' → logprob: -18.000024795532227
    4. '_MIN' → logprob: -18.125024795532227
    5. 'Min' → logprob: -18.250024795532227
    6. 'm' → logprob: -18.875024795532227
    7. '_' → logprob: -19.000024795532227
    8. '	min' → logprob: -19.125024795532227
    9. '_max' → logprob: -19.375024795532227
    10. 'in' → logprob: -19.625024795532227

Token 422: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -1.9361264946837764e-07
    2. ' coins' → logprob: -17.0
    3. 'coin' → logprob: -17.625
    4. 'co' → logprob: -18.5
    5. '_co' → logprob: -18.75
    6. 'cards' → logprob: -18.875
    7. 'c' → logprob: -20.0
    8. 'chips' → logprob: -20.25
    9. 'min' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 423: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.596781946020201e-05
    2. 'x' → logprob: -10.000045776367188
    3. '[' → logprob: -14.875045776367188
    4. '[
' → logprob: -15.750045776367188
    5. '```' → logprob: -17.250045776367188
    6. '{x' → logprob: -17.875045776367188
    7. '	x' → logprob: -18.000045776367188
    8. ' x' → logprob: -18.250045776367188
    9. ' [' → logprob: -18.625045776367188
    10. '(x' → logprob: -19.750045776367188

Token 424: ']+' (ID: 15344)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.005602141842246056
    2. 'x' → logprob: -5.5056023597717285
    3. '+' → logprob: -7.0056023597717285
    4. ']+' → logprob: -8.50560188293457
    5. '[' → logprob: -8.63060188293457
    6. '+x' → logprob: -8.63060188293457
    7. ']' → logprob: -10.38060188293457
    8. '{x' → logprob: -11.88060188293457
    9. '][' → logprob: -12.38060188293457
    10. '[c' → logprob: -13.13060188293457

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -20.0
    4. '```' → logprob: -20.5
    5. '<|end|>' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. '[' → logprob: -22.75
    8. '0' → logprob: -23.5
    9. '۱' → logprob: -23.5
    10. '  ' → logprob: -23.75

Token 426: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016053172294050455
    2. 'ch' → logprob: -6.75160551071167
    3. ',ch' → logprob: -8.751605033874512
    4. ' ch' → logprob: -9.376605033874512
    5. ',' → logprob: -9.501605033874512
    6. '           ' → logprob: -10.251605033874512
    7. '              ' → logprob: -10.501605033874512
    8. '                   ' → logprob: -10.876605033874512
    9. '       ' → logprob: -11.376605033874512
    10. '                ' → logprob: -11.501605033874512

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008632226963527501
    2. 'ch' → logprob: -7.500863075256348
    3. ',ch' → logprob: -9.000863075256348
    4. ' ch' → logprob: -9.125863075256348
    5. '           ' → logprob: -10.500863075256348
    6. '                   ' → logprob: -11.250863075256348
    7. ',' → logprob: -11.750863075256348
    8. '              ' → logprob: -11.750863075256348
    9. '       ' → logprob: -11.875863075256348
    10. '                ' → logprob: -12.000863075256348

Token 428: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -4.008129963040119e-06
    2. '
' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '#' → logprob: -16.875003814697266
    5. '```' → logprob: -17.750003814697266
    6. 'if' → logprob: -18.250003814697266
    7. '

' → logprob: -18.750003814697266
    8. '[ch' → logprob: -19.000003814697266
    9. '	ch' → logprob: -19.250003814697266
    10. '{' → logprob: -19.500003814697266

Token 429: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.7120533811976202e-05
    2. 'used' → logprob: -11.000017166137695
    3. '_use' → logprob: -16.125017166137695
    4. '_' → logprob: -16.250017166137695
    5. '_us' → logprob: -16.500017166137695
    6. '_usage' → logprob: -16.750017166137695
    7. '_unused' → logprob: -19.000017166137695
    8. '_USED' → logprob: -19.000017166137695
    9. '_using' → logprob: -19.000017166137695
    10. '_user' → logprob: -19.250017166137695

Token 430: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.375012397766113
    3. '[c' → logprob: -15.125012397766113
    4. 'x' → logprob: -16.000011444091797
    5. '[
' → logprob: -16.375011444091797
    6. '{x' → logprob: -16.500011444091797
    7. ' [' → logprob: -16.750011444091797
    8. '[max' → logprob: -17.250011444091797
    9. '(x' → logprob: -17.500011444091797
    10. '[int' → logprob: -18.125011444091797

Token 431: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.006105235777795315
    2. '[c' → logprob: -5.256105422973633
    3. '[x' → logprob: -7.506105422973633
    4. '+x' → logprob: -8.131105422973633
    5. '+[' → logprob: -11.631105422973633
    6. '{x' → logprob: -11.881105422973633
    7. 'x' → logprob: -12.131105422973633
    8. '+' → logprob: -12.756105422973633
    9. 'xc' → logprob: -13.506105422973633
    10. '[' → logprob: -14.881105422973633

Token 432: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00011117222311440855
    2. ' =' → logprob: -9.12511157989502
    3. '=set' → logprob: -13.12511157989502
    4. ']=' → logprob: -16.125110626220703
    5. ')=' → logprob: -17.125110626220703
    6. '.add' → logprob: -18.500110626220703
    7. '=}' → logprob: -18.625110626220703
    8. ')' → logprob: -18.750110626220703
    9. '.=' → logprob: -18.875110626220703
    10. '.clear' → logprob: -18.875110626220703

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. '=set' → logprob: -17.50007438659668
    4. '=

' → logprob: -19.12507438659668
    5. '＝' → logprob: -20.25007438659668
    6. '.=' → logprob: -20.62507438659668
    7. '=
' → logprob: -21.00007438659668
    8. '=}' → logprob: -21.12507438659668
    9. '=com' → logprob: -21.37507438659668
    10. ')=' → logprob: -22.00007438659668

Token 434: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.027444204315543175
    2. '{' → logprob: -3.6524441242218018
    3. 'set' → logprob: -6.902444362640381
    4. ' ch' → logprob: -9.652443885803223
    5. '{x' → logprob: -9.902443885803223
    6. '(ch' → logprob: -12.277443885803223
    7. 'copy' → logprob: -12.402443885803223
    8. '	ch' → logprob: -12.527443885803223
    9. ' {' → logprob: -12.652443885803223
    10. '[ch' → logprob: -13.027443885803223

Token 435: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.676981345459353e-06
    2. 'used' → logprob: -12.125005722045898
    3. '_USED' → logprob: -16.3750057220459
    4. '_' → logprob: -17.3750057220459
    5. '_use' → logprob: -17.8750057220459
    6. 'Used' → logprob: -18.0000057220459
    7. '_us' → logprob: -18.5000057220459
    8. '_using' → logprob: -18.7500057220459
    9. '{' → logprob: -18.8750057220459
    10. '_usage' → logprob: -19.5000057220459

Token 436: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.842555426876061e-06
    2. 'x' → logprob: -12.500004768371582
    3. '[' → logprob: -13.875004768371582
    4. ' [' → logprob: -16.7500057220459
    5. '[
' → logprob: -17.3750057220459
    6. ' x' → logprob: -17.5000057220459
    7. '{x' → logprob: -18.2500057220459
    8. '```' → logprob: -19.2500057220459
    9. '[u' → logprob: -19.5000057220459
    10. '[i' → logprob: -19.6250057220459

Token 437: '].' (ID: 1651)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.07070712000131607
    2. '].' → logprob: -2.695707082748413
    3. 'x' → logprob: -7.945707321166992
    4. '(x' → logprob: -8.195707321166992
    5. '[' → logprob: -10.445707321166992
    6. '{x' → logprob: -10.695707321166992
    7. '|' → logprob: -10.820707321166992
    8. 's' → logprob: -10.945707321166992
    9. ').' → logprob: -11.195707321166992
    10. ']' → logprob: -11.695707321166992

Token 438: 'copy' (ID: 14730)
  Prédit: 'copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.023246875032782555
    2. 'union' → logprob: -3.7732467651367188
    3. '|' → logprob: -13.523246765136719
    4. ' copy' → logprob: -16.89824676513672
    5. '.union' → logprob: -18.52324676513672
    6. '.copy' → logprob: -19.14824676513672
    7. '(copy' → logprob: -19.39824676513672
    8. ' |' → logprob: -19.39824676513672
    9. ' union' → logprob: -19.52324676513672
    10. '	copy' → logprob: -20.52324676513672

Token 439: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.011069044470787048
    2. '()' → logprob: -4.511068820953369
    3. '()

' → logprob: -12.136069297790527
    4. '();' → logprob: -12.386069297790527
    5. '()
' → logprob: -12.511069297790527
    6. '(' → logprob: -12.761069297790527
    7. ' ()
' → logprob: -13.886069297790527
    8. '())
' → logprob: -13.886069297790527
    9. '().' → logprob: -14.136069297790527
    10. '()}
' → logprob: -14.511069297790527

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01630801521241665
    2. 'ch' → logprob: -4.266307830810547
    3. '{' → logprob: -6.391307830810547
    4. ' ch' → logprob: -9.516307830810547
    5. '           ' → logprob: -9.641307830810547
    6. ',ch' → logprob: -10.016307830810547
    7. '                   ' → logprob: -10.141307830810547
    8. '              ' → logprob: -10.266307830810547
    9. '	ch' → logprob: -10.266307830810547
    10. '                       ' → logprob: -10.641307830810547

Token 441: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -7.941850526549388e-06
    2. '_ch' → logprob: -12.875007629394531
    3. '	ch' → logprob: -13.000007629394531
    4. ' ch' → logprob: -13.125007629394531
    5. '.ch' → logprob: -15.125007629394531
    6. '               ' → logprob: -15.500007629394531
    7. 'chid' → logprob: -15.875007629394531
    8. 'add' → logprob: -16.25000762939453
    9. '
' → logprob: -16.50000762939453
    10. ',ch' → logprob: -16.62500762939453

Token 442: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.512236498361744e-07
    2. 'used' → logprob: -14.500000953674316
    3. '_added' → logprob: -16.875
    4. '_USED' → logprob: -17.5
    5. '_unused' → logprob: -17.875
    6. '_created' → logprob: -18.125
    7. 'Used' → logprob: -18.5
    8. '_using' → logprob: -19.25
    9. '_use' → logprob: -19.5
    10. '.used' → logprob: -19.625

Token 443: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.45848218582978e-06
    2. '[c' → logprob: -13.62500286102295
    3. '[' → logprob: -14.00000286102295
    4. ' [' → logprob: -16.375001907348633
    5. 'x' → logprob: -16.500001907348633
    6. '[
' → logprob: -16.500001907348633
    7. '```' → logprob: -17.125001907348633
    8. '{x' → logprob: -17.875001907348633
    9. '(x' → logprob: -18.250001907348633
    10. '[u' → logprob: -19.125001907348633

Token 444: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -9.29340603761375e-05
    2. '[c' → logprob: -9.500092506408691
    3. '+x' → logprob: -11.625092506408691
    4. '+' → logprob: -12.625092506408691
    5. '+[' → logprob: -13.500092506408691
    6. '_c' → logprob: -13.500092506408691
    7. 'c' → logprob: -13.625092506408691
    8. '].' → logprob: -15.125092506408691
    9. '+C' → logprob: -15.250092506408691
    10. '+
' → logprob: -15.625092506408691

Token 445: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0007778270519338548
    2. '].' → logprob: -7.750777721405029
    3. ').' → logprob: -8.125778198242188
    4. ' .' → logprob: -11.000778198242188
    5. '.' → logprob: -11.125778198242188
    6. '.append' → logprob: -11.625778198242188
    7. '}.' → logprob: -11.750778198242188
    8. '.update' → logprob: -14.250778198242188
    9. ')add' → logprob: -14.250778198242188
    10. 'add' → logprob: -15.000778198242188

Token 446: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -2.5776860184123507e-06
    2. ' add' → logprob: -13.00000286102295
    3. '.add' → logprob: -15.25000286102295
    4. 'update' → logprob: -17.000001907348633
    5. '	add' → logprob: -19.125001907348633
    6. 'append' → logprob: -19.500001907348633
    7. '_add' → logprob: -19.625001907348633
    8. 'a' → logprob: -20.250001907348633
    9. 'ad' → logprob: -20.250001907348633
    10. '
' → logprob: -21.000001907348633

Token 447: '(co' (ID: 41772)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00028278882382437587
    2. '(co' → logprob: -8.750283241271973
    3. '(c' → logprob: -9.000283241271973
    4. 'i' → logprob: -14.750283241271973
    5. '(' → logprob: -15.000283241271973
    6. '((' → logprob: -16.250282287597656
    7. '{i' → logprob: -17.000282287597656
    8. '(
' → logprob: -17.750282287597656
    9. '({' → logprob: -17.750282287597656
    10. ' (' → logprob: -19.375282287597656

Token 448: 'ins' (ID: 1564)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2957627773284912
    2. 'in' → logprob: -1.7957627773284912
    3. 'ins' → logprob: -2.420762777328491
    4. ' i' → logprob: -7.29576301574707
    5. ' ' → logprob: -8.92076301574707
    6. '   ' → logprob: -9.42076301574707
    7. '  ' → logprob: -10.54576301574707
    8. ')' → logprob: -10.54576301574707
    9. 'de' → logprob: -10.54576301574707
    10. 'ine' → logprob: -10.79576301574707

Token 449: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.500001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '(i' → logprob: -17.500001907348633
    6. ' [' → logprob: -17.500001907348633
    7. '
' → logprob: -17.500001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[I' → logprob: -18.125001907348633
    10. ')' → logprob: -18.125001907348633

Token 450: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.024356946349143982
    2. '[i' → logprob: -3.7743568420410156
    3. '])
' → logprob: -7.024356842041016
    4. '[x' → logprob: -9.399356842041016
    5. ']' → logprob: -10.274356842041016
    6. ' ])' → logprob: -10.274356842041016
    7. '[' → logprob: -11.274356842041016
    8. ')])' → logprob: -11.399356842041016
    9. ']])' → logprob: -11.899356842041016
    10. '])

' → logprob: -12.149356842041016

Token 451: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7319884300231934
    2. ' for' → logprob: -1.3569884300231934
    3. '   ' → logprob: -1.7319884300231934
    4. 'from' → logprob: -3.2319884300231934
    5. 'import' → logprob: -4.231988430023193
    6. '
' → logprob: -4.856988430023193
    7. 'deque' → logprob: -4.856988430023193
    8. ' from' → logprob: -5.981988430023193
    9. 'def' → logprob: -6.356988430023193
    10. ')' → logprob: -6.606988430023193

Token 452: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2734197676181793
    2. '
' → logprob: -2.0234198570251465
    3. '    
' → logprob: -3.1484198570251465
    4. ' for' → logprob: -3.6484198570251465
    5. '  
' → logprob: -4.5234198570251465
    6. 'for' → logprob: -4.6484198570251465
    7. ' 
' → logprob: -5.1484198570251465
    8. ')' → logprob: -5.8984198570251465
    9. '   
' → logprob: -6.3984198570251465
    10. ' ' → logprob: -6.6484198570251465

Token 453: ' BFS' (ID: 190016)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.39726051688194275
    2. '   ' → logprob: -1.6472605466842651
    3. ' queue' → logprob: -2.5222604274749756
    4. 'q' → logprob: -3.5222604274749756
    5. 'for' → logprob: -4.272260665893555
    6. ' for' → logprob: -6.022260665893555
    7. 'start' → logprob: -6.147260665893555
    8. ' q' → logprob: -6.272260665893555
    9. 'from' → logprob: -6.772260665893555
    10. 'que' → logprob: -7.147260665893555

Token 454: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031474437564611435
    2. ' queue' → logprob: -3.6564743518829346
    3. 'queue' → logprob: -5.656474590301514
    4. '
' → logprob: -6.781474590301514
    5. 'q' → logprob: -8.906474113464355
    6. ' q' → logprob: -8.906474113464355
    7. '    
' → logprob: -9.281474113464355
    8. ' que' → logprob: -10.406474113464355
    9. '	queue' → logprob: -10.656474113464355
    10. ' dq' → logprob: -11.156474113464355

Token 455: ' usage' (ID: 16622)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.20588178932666779
    2. ' deque' → logprob: -1.7058818340301514
    3. 'queue' → logprob: -6.705881595611572
    4. 'from' → logprob: -6.955881595611572
    5. '   ' → logprob: -7.205881595611572
    6. ' queue' → logprob: -7.705881595611572
    7. 'wallet' → logprob: -7.830881595611572
    8. 'used' → logprob: -8.45588207244873
    9. ' wallet' → logprob: -8.83088207244873
    10. ' used' → logprob: -9.33088207244873

Token 456: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03634215518832207
    2. ' queue' → logprob: -4.036342144012451
    3. 'queue' → logprob: -4.911342144012451
    4. ' =' → logprob: -5.286342144012451
    5. '_queue' → logprob: -5.911342144012451
    6. '=' → logprob: -6.661342144012451
    7. 'q' → logprob: -8.03634262084961
    8. '
' → logprob: -8.16134262084961
    9. ' q' → logprob: -8.41134262084961
    10. ' ' → logprob: -8.53634262084961

Token 457: ' coins' (ID: 28969)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.6977578997612
    2. 'deque' → logprob: -1.5727579593658447
    3. ' coins' → logprob: -1.9477579593658447
    4. 'wallet' → logprob: -2.6977579593658447
    5. ' deque' → logprob: -2.9477579593658447
    6. ' wallet' → logprob: -3.8227579593658447
    7. 'de' → logprob: -5.697757720947266
    8. 'coin' → logprob: -6.322757720947266
    9. 'range' → logprob: -6.447757720947266
    10. ' range' → logprob: -7.572757720947266

Token 458: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004891569726169109
    2. ' queue' → logprob: -5.504891395568848
    3. 'queue' → logprob: -7.879891395568848
    4. '    
' → logprob: -9.129891395568848
    5. ' q' → logprob: -9.254891395568848
    6. '
' → logprob: -9.379891395568848
    7. 'q' → logprob: -9.629891395568848
    8. ' Q' → logprob: -11.379891395568848
    9. '  ' → logprob: -11.379891395568848
    10. '	queue' → logprob: -11.629891395568848

Token 459: 'avoid' (ID: 138714)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9856834411621094
    2. '   ' → logprob: -1.6106834411621094
    3. 'from' → logprob: -2.1106834411621094
    4. 'queue' → logprob: -2.3606834411621094
    5. 'deque' → logprob: -2.4856834411621094
    6. ' queue' → logprob: -3.3606834411621094
    7. ' from' → logprob: -4.235683441162109
    8. ' used' → logprob: -4.235683441162109
    9. 'used' → logprob: -4.235683441162109
    10. ' deque' → logprob: -4.735683441162109

Token 460: ' huge' (ID: 9560)
  Prédit: ' coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coins' → logprob: -0.6930962204933167
    2. 'coins' → logprob: -2.193096160888672
    3. ' using' → logprob: -2.193096160888672
    4. ')' → logprob: -3.193096160888672
    5. ' exceeding' → logprob: -3.693096160888672
    6. ' wallet' → logprob: -3.943096160888672
    7. ' ' → logprob: -4.068096160888672
    8. '   ' → logprob: -4.193096160888672
    9. ' duplicates' → logprob: -4.193096160888672
    10. ' tuple' → logprob: -4.318096160888672

Token 461: ' states' (ID: 9407)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.1791471540927887
    2. ' states' → logprob: -2.679147243499756
    3. 'queue' → logprob: -3.804147243499756
    4. '   ' → logprob: -4.429147243499756
    5. ')' → logprob: -4.679147243499756
    6. 'from' → logprob: -4.804147243499756
    7. ' from' → logprob: -5.054147243499756
    8. ' queues' → logprob: -5.179147243499756
    9. ' memory' → logprob: -5.429147243499756
    10. ' state' → logprob: -5.804147243499756

Token 462: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26221784949302673
    2. ')' → logprob: -2.0122177600860596
    3. '):' → logprob: -2.6372177600860596
    4. '):
' → logprob: -4.137217998504639
    5. ')
' → logprob: -5.387217998504639
    6. 'queue' → logprob: -6.262217998504639
    7. ' )' → logprob: -6.762217998504639
    8. ' queue' → logprob: -7.137217998504639
    9. '  ' → logprob: -8.76221752166748
    10. '    ' → logprob: -9.13721752166748

Token 463: ' but' (ID: 889)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.08168456703424454
    2. ')' → logprob: -3.7066845893859863
    3. ' wallet' → logprob: -4.081684589385986
    4. 'queue' → logprob: -4.206684589385986
    5. ' def' → logprob: -5.081684589385986
    6. '   ' → logprob: -5.581684589385986
    7. ' q' → logprob: -5.581684589385986
    8. 'def' → logprob: -6.706684589385986
    9. '    ' → logprob: -7.081684589385986
    10. ' from' → logprob: -7.581684589385986

Token 464: ' wallet' (ID: 22762)
  Prédit: ' wallet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wallet' → logprob: -0.5643165707588196
    2. ' queue' → logprob: -1.9393165111541748
    3. ' from' → logprob: -2.814316511154175
    4. 'from' → logprob: -3.064316511154175
    5. '   ' → logprob: -3.689316511154175
    6. 'wallet' → logprob: -3.814316511154175
    7. '
' → logprob: -3.814316511154175
    8. ' def' → logprob: -3.939316511154175
    9. 'queue' → logprob: -4.064316749572754
    10. 'def' → logprob: -4.439316749572754

Token 465: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0211708545684814
    2. '_counts' → logprob: -1.5211708545684814
    3. '_len' → logprob: -1.8961708545684814
    4. '_' → logprob: -3.3961708545684814
    5. '_states' → logprob: -3.6461708545684814
    6. '_items' → logprob: -3.7711708545684814
    7. '_size' → logprob: -3.8961708545684814
    8. '_count' → logprob: -4.271170616149902
    9. 'len' → logprob: -4.396170616149902
    10. '_queue' → logprob: -4.521170616149902

Token 466: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5368009805679321
    2. ')' → logprob: -1.6618009805679321
    3. '_counts' → logprob: -2.2868008613586426
    4. '_size' → logprob: -2.9118008613586426
    5. ' _' → logprob: -4.036800861358643
    6. ' )' → logprob: -4.161800861358643
    7. '_count' → logprob: -4.286800861358643
    8. '_co' → logprob: -5.411800861358643
    9. ')_' → logprob: -5.661800861358643
    10. '_)' → logprob: -5.786800861358643

Token 467: '20' (ID: 455)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2404377460479736
    2. '4' → logprob: -1.8654377460479736
    3. '=' → logprob: -2.1154377460479736
    4. '(' → logprob: -2.7404377460479736
    5. ' is' → logprob: -2.8654377460479736
    6. '=(' → logprob: -2.8654377460479736
    7. ' ' → logprob: -2.9904377460479736
    8. '5' → logprob: -3.2404377460479736
    9. ' counts' → logprob: -3.4904377460479736
    10. ' (' → logprob: -3.8654377460479736

Token 468: ' coins' (ID: 28969)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05549585074186325
    2. '):' → logprob: -3.6804957389831543
    3. ' )' → logprob: -3.9304957389831543
    4. ' coins' → logprob: -5.555495738983154
    5. '):
' → logprob: -5.805495738983154
    6. ')
' → logprob: -7.305495738983154
    7. 'coins' → logprob: -7.555495738983154
    8. ',' → logprob: -9.180496215820312
    9. ' ):' → logprob: -9.305496215820312
    10. '   ' → logprob: -9.305496215820312

Token 469: ' each' (ID: 2454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.064140684902668
    2. '   ' → logprob: -3.689140796661377
    3. ' )' → logprob: -3.689140796661377
    4. ')
' → logprob: -4.814140796661377
    5. '):
' → logprob: -7.314140796661377
    6. '):' → logprob: -7.314140796661377
    7. ' for' → logprob: -7.564140796661377
    8. ',' → logprob: -7.939140796661377
    9. ' )
' → logprob: -7.939140796661377
    10. 'max' → logprob: -8.314140319824219

Token 470: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03429005667567253
    2. ')
' → logprob: -4.284289836883545
    3. ' )' → logprob: -4.659289836883545
    4. '):' → logprob: -5.659289836883545
    5. ' per' → logprob: -6.284289836883545
    6. ',' → logprob: -7.284289836883545
    7. ' for' → logprob: -7.409289836883545
    8. '):
' → logprob: -7.784289836883545
    9. 'max' → logprob: -8.409290313720703
    10. '])' → logprob: -8.409290313720703

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033113888930529356
    2. ' queue' → logprob: -5.7533111572265625
    3. 'queue' → logprob: -10.003311157226562
    4. '    
' → logprob: -10.253311157226562
    5. ' from' → logprob: -11.128311157226562
    6. ' q' → logprob: -11.503311157226562
    7. '
' → logprob: -11.503311157226562
    8. ' que' → logprob: -12.628311157226562
    9. 'q' → logprob: -13.128311157226562
    10. 'from' → logprob: -13.253311157226562

Token 472: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4538081884384155
    2. '   ' → logprob: -1.5788081884384155
    3. ' queue' → logprob: -2.453808307647705
    4. 'from' → logprob: -3.203808307647705
    5. 'q' → logprob: -3.703808307647705
    6. ' from' → logprob: -5.328808307647705
    7. ' q' → logprob: -6.453808307647705
    8. 'que' → logprob: -8.078807830810547
    9. ' que' → logprob: -9.578807830810547
    10. '
' → logprob: -9.578807830810547

Token 473: ' Use' (ID: 7649)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8481837511062622
    2. 'from' → logprob: -0.9731837511062622
    3. 'q' → logprob: -2.0981836318969727
    4. ' queue' → logprob: -3.5981836318969727
    5. ' from' → logprob: -3.7231836318969727
    6. '   ' → logprob: -4.723183631896973
    7. ' q' → logprob: -5.598183631896973
    8. 'start' → logprob: -5.848183631896973
    9. 'que' → logprob: -6.598183631896973
    10. 'initial' → logprob: -7.098183631896973

Token 474: ' nested' (ID: 47576)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3784714937210083
    2. 'deque' → logprob: -1.8784714937210083
    3. ' queue' → logprob: -2.3784713745117188
    4. 'from' → logprob: -3.3784713745117188
    5. ' deque' → logprob: -4.003471374511719
    6. 'q' → logprob: -4.378471374511719
    7. ' q' → logprob: -6.128471374511719
    8. ' from' → logprob: -6.878471374511719
    9. '   ' → logprob: -7.503471374511719
    10. 'que' → logprob: -8.003471374511719

Token 475: ' loops' (ID: 57130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7368766665458679
    2. ' loops' → logprob: -0.7368766665458679
    3. ' for' → logprob: -3.2368767261505127
    4. 'def' → logprob: -6.361876487731934
    5. 'loops' → logprob: -6.361876487731934
    6. ' def' → logprob: -10.361876487731934
    7. ' loop' → logprob: -11.361876487731934
    8. 'loop' → logprob: -12.736876487731934
    9. '   ' → logprob: -13.986876487731934
    10. ' ' → logprob: -14.111876487731934

Token 476: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17002885043621063
    2. ' for' → logprob: -1.920028805732727
    3. 'for' → logprob: -4.6700286865234375
    4. '
' → logprob: -8.920028686523438
    5. '    
' → logprob: -9.295028686523438
    6. '	for' → logprob: -9.670028686523438
    7. ',' → logprob: -10.295028686523438
    8. ':' → logprob: -11.170028686523438
    9. '    ' → logprob: -11.295028686523438
    10. '       ' → logprob: -12.170028686523438

Token 477: ' accept' (ID: 5923)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26804426312446594
    2. 'for' → logprob: -1.8930442333221436
    3. '   ' → logprob: -2.5180442333221436
    4. ' usage' → logprob: -6.893044471740723
    5. ' used' → logprob: -7.018044471740723
    6. 'def' → logprob: -8.018044471740723
    7. ' result' → logprob: -8.268044471740723
    8. ' def' → logprob: -8.393044471740723
    9. '    ' → logprob: -8.643044471740723
    10. 'result' → logprob: -8.768044471740723

Token 478: 'ably' (ID: 4235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6551834344863892
    2. ' for' → logprob: -1.9051834344863892
    3. 'able' → logprob: -2.0301833152770996
    4. 'ed' → logprob: -2.1551833152770996
    5. 'for' → logprob: -2.7801833152770996
    6. 'ion' → logprob: -2.9051833152770996
    7. 'ions' → logprob: -3.1551833152770996
    8. 'ing' → logprob: -3.1551833152770996
    9. ' ' → logprob: -3.5301833152770996
    10. 'import' → logprob: -4.0301833152771

Token 479: ' small' (ID: 3291)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09790189564228058
    2. '   ' → logprob: -2.7229018211364746
    3. 'for' → logprob: -3.5979018211364746
    4. ' to' → logprob: -10.097902297973633
    5. '    ' → logprob: -10.222902297973633
    6. '    
' → logprob: -10.347902297973633
    7. '
' → logprob: -10.597902297973633
    8. ' ' → logprob: -11.597902297973633
    9. ' from' → logprob: -11.722902297973633
    10. '  ' → logprob: -12.097902297973633

Token 480: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5981367230415344
    2. '   ' → logprob: -0.8481367230415344
    3. 'for' → logprob: -3.8481366634368896
    4. '    
' → logprob: -8.598136901855469
    5. '
' → logprob: -8.973136901855469
    6. ':' → logprob: -9.598136901855469
    7. '    ' → logprob: -10.348136901855469
    8. '```' → logprob: -10.348136901855469
    9. '	for' → logprob: -10.723136901855469
    10. ' ' → logprob: -10.848136901855469

Token 481: '21' (ID: 2040)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31940895318984985
    2. ' for' → logprob: -1.444408893585205
    3. '   ' → logprob: -3.319408893585205
    4. '
' → logprob: -7.694408893585205
    5. '    
' → logprob: -7.944408893585205
    6. 'result' → logprob: -7.944408893585205
    7. ' ' → logprob: -10.194409370422363
    8. 'results' → logprob: -10.444409370422363
    9. ' result' → logprob: -11.069409370422363
    10. 'res' → logprob: -11.194409370422363

Token 482: '**' (ID: 410)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12837152183055878
    2. 'for' → logprob: -2.503371477127075
    3. '
' → logprob: -4.503371715545654
    4. '   ' → logprob: -5.003371715545654
    5. '    ' → logprob: -5.628371715545654
    6. '<|end|>' → logprob: -5.878371715545654
    7. '**' → logprob: -6.003371715545654
    8. ':' → logprob: -6.128371715545654
    9. '):
' → logprob: -6.503371715545654
    10. ' ' → logprob: -6.753371715545654

Token 483: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00013047587708570063
    2. ' ' → logprob: -9.625130653381348
    3. '5' → logprob: -9.750130653381348
    4. '```' → logprob: -12.625130653381348
    5. '[' → logprob: -13.875130653381348
    6. '   ' → logprob: -14.125130653381348
    7. 'for' → logprob: -14.875130653381348
    8. '
' → logprob: -16.00012969970703
    9. '(' → logprob: -16.31262969970703
    10. '**' → logprob: -16.81262969970703

Token 484: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6338049173355103
    2. ' for' → logprob: -0.8838049173355103
    3. 'for' → logprob: -2.8838047981262207
    4. '
' → logprob: -9.258805274963379
    5. '    
' → logprob: -9.258805274963379
    6. '	for' → logprob: -10.758805274963379
    7. ',' → logprob: -11.008805274963379
    8. ':' → logprob: -11.508805274963379
    9. '    ' → logprob: -11.758805274963379
    10. ' ' → logprob: -11.946305274963379

Token 485: '~' (ID: 93)
  Prédit: '194'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '194' → logprob: -0.005759080406278372
    2. '176' → logprob: -5.255759239196777
    3. '21' → logprob: -8.380759239196777
    4. '177' → logprob: -9.755759239196777
    5. '``' → logprob: -9.880759239196777
    6. ' ' → logprob: -10.630759239196777
    7. '(' → logprob: -10.755759239196777
    8. '```' → logprob: -10.755759239196777
    9. '178' → logprob: -10.880759239196777
    10. '"' → logprob: -11.005759239196777

Token 486: '200' (ID: 1179)
  Prédit: '194'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '194' → logprob: -0.3904361128807068
    2. '200' → logprob: -1.1404361724853516
    3. '180' → logprob: -6.640436172485352
    4. '176' → logprob: -6.890436172485352
    5. '20' → logprob: -8.265436172485352
    6. '175' → logprob: -8.640436172485352
    7. '177' → logprob: -8.890436172485352
    8. '170' → logprob: -9.265436172485352
    9. '``' → logprob: -9.390436172485352
    10. '```' → logprob: -9.640436172485352

Token 487: 'k' (ID: 74)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6945491433143616
    2. '   ' → logprob: -2.194549083709717
    3. '```' → logprob: -2.319549083709717
    4. '00' → logprob: -2.444549083709717
    5. '0' → logprob: -3.319549083709717
    6. '1' → logprob: -3.819549083709717
    7. '       ' → logprob: -4.069549083709717
    8. 'for' → logprob: -4.069549083709717
    9. '``' → logprob: -4.444549083709717
    10. '41' → logprob: -4.569549083709717

Token 488: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41126108169555664
    2. '   ' → logprob: -1.5362610816955566
    3. 'for' → logprob: -2.1612610816955566
    4. '
' → logprob: -5.161261081695557
    5. '    
' → logprob: -7.161261081695557
    6. 'result' → logprob: -10.161260604858398
    7. ' ' → logprob: -10.286260604858398
    8. '	for' → logprob: -10.411260604858398
    9. '  
' → logprob: -10.661260604858398
    10. '```' → logprob: -10.661260604858398

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08244658261537552
    2. ' for' → logprob: -3.082446575164795
    3. 'for' → logprob: -3.832446575164795
    4. 'min' → logprob: -6.082446575164795
    5. 'result' → logprob: -6.207446575164795
    6. ' min' → logprob: -6.707446575164795
    7. ' best' → logprob: -6.707446575164795
    8. ' result' → logprob: -6.832446575164795
    9. ' ans' → logprob: -6.957446575164795
    10. 'best' → logprob: -7.332446575164795

Token 490: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017106126993894577
    2. ' for' → logprob: -5.517106056213379
    3. 'for' → logprob: -5.642106056213379
    4. 'min' → logprob: -5.892106056213379
    5. 'result' → logprob: -6.267106056213379
    6. 'best' (adapté à ' best') → logprob: -6.642106056213379
    7. ' best' → logprob: -6.767106056213379
    8. ' ans' → logprob: -7.517106056213379
    9. ' result' → logprob: -7.767106056213379
    10. 'res' → logprob: -8.267106056213379

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01621067337691784
    2. '=' → logprob: -4.141210556030273
    3. '_' → logprob: -9.141210556030273
    4. '_total' → logprob: -9.891210556030273
    5. ' ' → logprob: -11.891210556030273
    6. 'total' → logprob: -12.766210556030273
    7. '=_' → logprob: -12.891210556030273
    8. '  ' → logprob: -14.016210556030273
    9. ',' → logprob: -14.141210556030273
    10. '   ' → logprob: -14.266210556030273

Token 492: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1591591238975525
    2. '10' → logprob: -2.2841591835021973
    3. '[' → logprob: -4.034159183502197
    4. 'sys' → logprob: -4.159159183502197
    5. ' INF' → logprob: -5.284159183502197
    6. 'coin' → logprob: -6.159159183502197
    7. ' [' → logprob: -6.659159183502197
    8. 'float' → logprob: -7.034159183502197
    9. ' ' → logprob: -7.159159183502197
    10. 'None' → logprob: -7.784159183502197

Token 493: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01610615663230419
    2. ' 
' → logprob: -5.516106128692627
    3. '    
' → logprob: -5.641106128692627
    4. 'for' → logprob: -6.516106128692627
    5. ' for' → logprob: -6.641106128692627
    6. '   ' → logprob: -6.641106128692627
    7. ' =' → logprob: -6.891106128692627
    8. '  
' → logprob: -7.016106128692627
    9. 'usage' → logprob: -7.641106128692627
    10. '   
' → logprob: -7.766106128692627

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.658391535282135
    2. ' for' → logprob: -1.1583914756774902
    3. 'for' → logprob: -1.7833914756774902
    4. '    
' → logprob: -9.408391952514648
    5. '	for' → logprob: -9.533391952514648
    6. ' ' → logprob: -10.033391952514648
    7. '    ' → logprob: -10.908391952514648
    8. '
' → logprob: -11.533391952514648
    9. '  ' → logprob: -11.908391952514648
    10. ' wallet' → logprob: -12.408391952514648

Token 495: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008325085043907166
    2. ' for' → logprob: -5.508325099945068
    3. 'w' → logprob: -6.008325099945068
    4. 'from' → logprob: -7.508325099945068
    5. 'used' → logprob: -7.883325099945068
    6. 'wallet' → logprob: -8.25832462310791
    7. '   ' → logprob: -8.38332462310791
    8. 'usage' → logprob: -8.75832462310791
    9. 'result' → logprob: -10.00832462310791
    10. ' w' → logprob: -10.38332462310791

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47453898191452026
    2. '=' → logprob: -0.9745389819145203
    3. '_' → logprob: -7.849538803100586
    4. ',' → logprob: -10.849538803100586
    5. '_=' → logprob: -11.599538803100586
    6. ')' → logprob: -11.724538803100586
    7. '=None' → logprob: -11.974538803100586
    8. ' =
' → logprob: -12.474538803100586
    9. '_counts' → logprob: -12.724538803100586
    10. '=[]' → logprob: -12.724538803100586

Token 497: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01920917257666588
    2. '()' → logprob: -4.644209384918213
    3. '(' → logprob: -5.269209384918213
    4. '(None' → logprob: -6.019209384918213
    5. '0' → logprob: -7.269209384918213
    6. '(-' → logprob: -7.769209384918213
    7. ' None' → logprob: -8.269208908081055
    8. '-' → logprob: -9.019208908081055
    9. '[' → logprob: -9.394208908081055
    10. 'sys' → logprob: -10.019208908081055

Token 498: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5950774550437927
    2. '   ' → logprob: -0.8450774550437927
    3. ' for' → logprob: -3.9700775146484375
    4. '```' → logprob: -10.095077514648438
    5. '    
' → logprob: -10.970077514648438
    6. '
' → logprob: -11.095077514648438
    7. '	for' → logprob: -11.970077514648438
    8. ' ' → logprob: -13.595077514648438
    9. '``' → logprob: -14.970077514648438
    10. 'def' → logprob: -14.970077514648438

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09779531508684158
    2. 'for' → logprob: -2.847795248031616
    3. ' for' → logprob: -3.347795248031616
    4. '    
' → logprob: -10.847795486450195
    5. '	for' → logprob: -11.722795486450195
    6. '
' → logprob: -13.597795486450195
    7. '```' → logprob: -13.722795486450195
    8. ' ' → logprob: -14.972795486450195
    9. '   ' → logprob: -15.347795486450195
    10. '       ' → logprob: -15.347795486450195

Token 500: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02813243493437767
    2. '   ' → logprob: -4.278132438659668
    3. ' for' → logprob: -4.278132438659668
    4. ' ' → logprob: -13.778132438659668
    5. '    
' → logprob: -14.028132438659668
    6. '```' → logprob: -14.528132438659668
    7. '
' → logprob: -14.903132438659668
    8. 'def' → logprob: -15.278132438659668
    9. '	for' → logprob: -15.653132438659668
    10. '  ' → logprob: -16.77813148498535

Token 501: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8166998028755188
    2. 'c' → logprob: -1.816699743270874
    3. ' c' → logprob: -2.066699743270874
    4. 'w' → logprob: -2.316699743270874
    5. ' a' → logprob: -2.566699743270874
    6. ' w' → logprob: -3.066699743270874
    7. 'i' → logprob: -3.816699743270874
    8. ' i' → logprob: -4.941699981689453
    9. 'used' → logprob: -5.691699981689453
    10. 'x' → logprob: -5.941699981689453

Token 502: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011736469343304634
    2. ' in' → logprob: -5.1367363929748535
    3. '_' → logprob: -5.3867363929748535
    4. '[' → logprob: -7.7617363929748535
    5. 'in' → logprob: -8.136736869812012
    6. 'w' → logprob: -8.511736869812012
    7. '1' → logprob: -9.136736869812012
    8. ' ' → logprob: -10.136736869812012
    9. '_w' → logprob: -10.261736869812012
    10. 'i' → logprob: -10.636736869812012

Token 503: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20225974917411804
    2. ' range' → logprob: -1.7022597789764404
    3. '[' → logprob: -8.20226001739502
    4. '(' → logprob: -8.32726001739502
    5. '0' → logprob: -8.95226001739502
    6. '(range' → logprob: -8.95226001739502
    7. '[(' → logprob: -10.45226001739502
    8. '((' → logprob: -11.70226001739502
    9. ' (' → logprob: -11.70226001739502
    10. '(
' → logprob: -11.82726001739502

Token 504: '(wallet' (ID: 173937)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.1509784758090973
    2. '(wallet' → logprob: -2.0259785652160645
    3. '0' → logprob: -5.1509785652160645
    4. ' wallet' → logprob: -6.4009785652160645
    5. '(w' → logprob: -7.7759785652160645
    6. '(' → logprob: -8.275978088378906
    7. 'w' → logprob: -9.900978088378906
    8. 'min' → logprob: -10.400978088378906
    9. ' ' → logprob: -11.025978088378906
    10. '(min' → logprob: -11.275978088378906

Token 505: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02068471349775791
    2. '[a' → logprob: -3.8956847190856934
    3. '[i' → logprob: -9.020684242248535
    4. 'a' → logprob: -10.895684242248535
    5. ' [' → logprob: -13.520684242248535
    6. '+' → logprob: -14.895684242248535
    7. '   ' → logprob: -14.895684242248535
    8. ' ' → logprob: -15.270684242248535
    9. '(a' → logprob: -15.770684242248535
    10. ',a' → logprob: -15.895684242248535

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41129949549213e-05
    2. '[' → logprob: -10.000083923339844
    3. '4' → logprob: -10.875083923339844
    4. 'a' → logprob: -11.625083923339844
    5. '3' → logprob: -12.125083923339844
    6. ' ' → logprob: -13.125083923339844
    7. '1' → logprob: -13.500083923339844
    8. '   ' → logprob: -14.250083923339844
    9. '
' → logprob: -14.625083923339844
    10. '(' → logprob: -15.375083923339844

Token 507: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16094766557216644
    2. ' +' → logprob: -1.9109476804733276
    3. ']+' → logprob: -7.285947799682617
    4. ']' → logprob: -11.035947799682617
    5. '   ' → logprob: -11.535947799682617
    6. ')+' → logprob: -12.160947799682617
    7. ' ' → logprob: -12.535947799682617
    8. '()+' → logprob: -13.660947799682617
    9. '
' → logprob: -14.535947799682617
    10. '[' → logprob: -14.660947799682617

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '+' → logprob: -15.375140190124512
    4. '   ' → logprob: -16.375141143798828
    5. '
' → logprob: -16.875141143798828
    6. '2' → logprob: -17.500141143798828
    7. '21' → logprob: -17.750141143798828
    8. '0' → logprob: -18.062641143798828
    9. '```' → logprob: -18.562641143798828
    10. ' +' → logprob: -18.562641143798828

Token 509: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2834392488002777
    2. '):
' → logprob: -1.4084392786026
    3. '   ' → logprob: -6.4084391593933105
    4. ':' → logprob: -8.283439636230469
    5. ',' → logprob: -8.908439636230469
    6. '):
' → logprob: -9.283439636230469
    7. ')' → logprob: -9.283439636230469
    8. ' for' → logprob: -10.658439636230469
    9. 'for' → logprob: -11.033439636230469
    10. '       ' → logprob: -12.033439636230469

Token 510: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3357442021369934
    2. ' for' → logprob: -1.5857441425323486
    3. '       ' → logprob: -2.5857441425323486
    4. ' ' → logprob: -6.335744380950928
    5. ':' → logprob: -6.710744380950928
    6. 'for' → logprob: -6.960744380950928
    7. '    ' → logprob: -7.460744380950928
    8. '	for' → logprob: -8.21074390411377
    9. '	' → logprob: -9.96074390411377
    10. ':
' → logprob: -10.33574390411377

Token 511: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48171481490135193
    2. 'for' (adapté à ' for') → logprob: -0.9817148447036743
    3. '   ' → logprob: -4.981714725494385
    4. '       ' → logprob: -7.356714725494385
    5. '	for' → logprob: -9.606715202331543
    6. ' ' → logprob: -10.731715202331543
    7. '    ' → logprob: -11.731715202331543
    8. '	   ' → logprob: -12.106715202331543
    9. '           ' → logprob: -12.731715202331543
    10. '     ' → logprob: -14.106715202331543

Token 512: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8502956628799438
    2. ' b' → logprob: -1.4752956628799438
    3. '0' → logprob: -2.1002955436706543
    4. 'wallet' → logprob: -2.3502955436706543
    5. 'a' → logprob: -2.7252955436706543
    6. ' wallet' → logprob: -3.3502955436706543
    7. ' a' → logprob: -5.100295543670654
    8. ' ' → logprob: -5.225295543670654
    9. 'range' → logprob: -5.225295543670654
    10. ' range' → logprob: -5.350295543670654

Token 513: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004620591644197702
    2. 'in' → logprob: -5.379620552062988
    3. ' ' → logprob: -15.129620552062988
    4. '```' → logprob: -17.254621505737305
    5. '1' → logprob: -17.754621505737305
    6. '0' → logprob: -17.754621505737305
    7. ',' → logprob: -18.129621505737305
    8. '	in' → logprob: -18.254621505737305
    9. '   ' → logprob: -18.379621505737305
    10. 'range' → logprob: -18.379621505737305

Token 514: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197597458958626
    2. ' range' → logprob: -2.8119759559631348
    3. '(range' → logprob: -11.936976432800293
    4. '   ' → logprob: -14.686976432800293
    5. '0' → logprob: -14.811976432800293
    6. 'wallet' → logprob: -14.936976432800293
    7. 'ange' → logprob: -15.436976432800293
    8. ' ' → logprob: -16.061975479125977
    9. ' wallet' → logprob: -16.061975479125977
    10. '(wallet' → logprob: -16.561975479125977

Token 515: '(wallet' (ID: 173937)
  Prédit: '(wallet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -0.004098823759704828
    2. 'wallet' → logprob: -5.504098892211914
    3. ' wallet' → logprob: -11.254098892211914
    4. '0' → logprob: -12.504098892211914
    5. '(' → logprob: -12.879098892211914
    6. '   ' → logprob: -14.754098892211914
    7. '(w' → logprob: -15.129098892211914
    8. '.wallet' → logprob: -15.879098892211914
    9. ' ' → logprob: -16.129098892211914
    10. '1' → logprob: -16.254098892211914

Token 516: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03106728568673134
    2. '1' → logprob: -3.531067371368408
    3. '(' → logprob: -6.656067371368408
    4. '0' → logprob: -11.78106689453125
    5. '   ' → logprob: -11.90606689453125
    6. ' ' → logprob: -12.28106689453125
    7. ')' → logprob: -13.53106689453125
    8. '```' → logprob: -13.53106689453125
    9. '       ' → logprob: -13.65606689453125
    10. '{' → logprob: -13.78106689453125

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. '0' → logprob: -11.375015258789062
    3. ' ' → logprob: -13.250015258789062
    4. '
' → logprob: -13.750015258789062
    5. '   ' → logprob: -14.250015258789062
    6. '```' → logprob: -15.250015258789062
    7. '3' → logprob: -16.500015258789062
    8. '2' → logprob: -17.062515258789062
    9. '(' → logprob: -17.375015258789062
    10. ']' → logprob: -17.500015258789062

Token 518: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010735770774772391
    2. ' +' → logprob: -9.500107765197754
    3. ']+' → logprob: -11.500107765197754
    4. ')+' → logprob: -11.625107765197754
    5. '1' → logprob: -12.500107765197754
    6. '[' → logprob: -12.625107765197754
    7. '()+' → logprob: -12.625107765197754
    8. '0' → logprob: -13.250107765197754
    9. '   ' → logprob: -14.750107765197754
    10. 'a' → logprob: -15.375107765197754

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '+' → logprob: -13.125004768371582
    3. 'a' → logprob: -13.125004768371582
    4. ' ' → logprob: -13.750004768371582
    5. 'b' → logprob: -16.8750057220459
    6. '2' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.8750057220459
    8. ')' → logprob: -17.8750057220459
    9. '(a' → logprob: -18.2500057220459
    10. '21' → logprob: -18.3750057220459

Token 520: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00760887423530221
    2. '):' → logprob: -5.132608890533447
    3. '       ' → logprob: -6.507608890533447
    4. '           ' → logprob: -9.257608413696289
    5. ':
' → logprob: -10.757608413696289
    6. '   ' → logprob: -11.007608413696289
    7. ')' → logprob: -11.507608413696289
    8. ':' → logprob: -11.632608413696289
    9. '):
' → logprob: -11.757608413696289
    10. '[' → logprob: -11.882608413696289

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006853073835372925
    2. ' for' → logprob: -5.131853103637695
    3. 'for' → logprob: -7.381853103637695
    4. '       ' → logprob: -8.631853103637695
    5. '               ' → logprob: -10.006853103637695
    6. '            ' → logprob: -10.506853103637695
    7. '        ' → logprob: -11.256853103637695
    8. '         ' → logprob: -11.756853103637695
    9. '```' → logprob: -12.256853103637695
    10. '          ' → logprob: -12.381853103637695

Token 522: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5901844501495361
    2. ' for' → logprob: -0.8401844501495361
    3. '               ' → logprob: -4.340184211730957
    4. '           ' → logprob: -6.840184211730957
    5. '       ' → logprob: -10.840184211730957
    6. '```' → logprob: -11.340184211730957
    7. '	for' → logprob: -13.215184211730957
    8. '   ' → logprob: -13.340184211730957
    9. '            ' → logprob: -13.840184211730957
    10. ' ' → logprob: -13.840184211730957

Token 523: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07889342308044434
    2. ' c' → logprob: -2.5788934230804443
    3. '   ' → logprob: -13.328893661499023
    4. '0' → logprob: -13.578893661499023
    5. ' ' → logprob: -14.453893661499023
    6. '       ' → logprob: -17.078893661499023
    7. '  ' → logprob: -17.078893661499023
    8. 'coin' → logprob: -17.328893661499023
    9. '	c' → logprob: -17.453893661499023
    10. '     ' → logprob: -18.203893661499023

Token 524: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00523612555116415
    2. 'in' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.63023567199707
    4. 'range' → logprob: -14.75523567199707
    5. '0' → logprob: -16.13023567199707
    6. '   ' → logprob: -16.38023567199707
    7. ' range' → logprob: -16.50523567199707
    8. ' i' → logprob: -16.75523567199707
    9. '1' → logprob: -17.13023567199707
    10. 'i' → logprob: -17.63023567199707

Token 525: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4924801290035248
    2. ' range' → logprob: -1.2424801588058472
    3. ' in' → logprob: -2.3674800395965576
    4. '0' → logprob: -5.242480278015137
    5. 'in' → logprob: -7.242480278015137
    6. ' ' → logprob: -7.867480278015137
    7. '(range' → logprob: -9.742480278015137
    8. '   ' → logprob: -10.617480278015137
    9. '_range' → logprob: -11.742480278015137
    10. '1' → logprob: -11.867480278015137

Token 526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132714629173279
    2. ' range' → logprob: -1.3132715225219727
    3. '(range' → logprob: -11.563271522521973
    4. ' ' → logprob: -16.313270568847656
    5. '0' → logprob: -16.438270568847656
    6. '	range' → logprob: -16.563270568847656
    7. '_range' → logprob: -17.313270568847656
    8. '   ' → logprob: -17.938270568847656
    9. 'Range' → logprob: -18.313270568847656
    10. '(' → logprob: -18.313270568847656

Token 527: '(wallet' (ID: 173937)
  Prédit: '(wallet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -0.004159364849328995
    2. 'wallet' → logprob: -5.504159450531006
    3. ' wallet' → logprob: -10.004158973693848
    4. '(w' → logprob: -10.754158973693848
    5. '0' → logprob: -11.754158973693848
    6. ' (' → logprob: -13.504158973693848
    7. '(' → logprob: -13.754158973693848
    8. '   ' → logprob: -13.879158973693848
    9. '.wallet' → logprob: -13.879158973693848
    10. '_wallet' → logprob: -15.004158973693848

Token 528: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014299227041192353
    2. '2' → logprob: -8.875143051147461
    3. '(' → logprob: -13.000143051147461
    4. 'c' → logprob: -14.875143051147461
    5. '
' → logprob: -15.875143051147461
    6. '[
' → logprob: -16.25014305114746
    7. '```' → logprob: -16.37514305114746
    8. '   ' → logprob: -16.62514305114746
    9. '           ' → logprob: -17.50014305114746
    10. '{' → logprob: -17.62514305114746

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '3' → logprob: -17.25
    4. '[' → logprob: -17.5
    5. '   ' → logprob: -17.5
    6. '
' → logprob: -17.75
    7. '```' → logprob: -18.25
    8. '(' → logprob: -19.375
    9. '۲' → logprob: -20.375
    10. '２' → logprob: -20.5

Token 530: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00022034443099983037
    2. ']+' → logprob: -8.75022029876709
    3. ' +' → logprob: -10.12522029876709
    4. '[' → logprob: -10.87522029876709
    5. ')+' → logprob: -13.87522029876709
    6. '()+' → logprob: -14.00022029876709
    7. '0' → logprob: -15.00022029876709
    8. '}+' → logprob: -16.375221252441406
    9. '1' → logprob: -16.500221252441406
    10. '```' → logprob: -16.750221252441406

Token 531: '1' (ID: 16)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.43373677134513855
    2. '1' → logprob: -1.683736801147461
    3. 'c' → logprob: -2.183736801147461
    4. '(wallet' → logprob: -3.433736801147461
    5. 'a' → logprob: -5.308736801147461
    6. 'w' → logprob: -5.558736801147461
    7. '0' → logprob: -5.683736801147461
    8. '+' → logprob: -6.058736801147461
    9. ' wallet' → logprob: -6.183736801147461
    10. '21' → logprob: -6.808736801147461

Token 532: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8021653294563293
    2. '):' → logprob: -0.8021653294563293
    3. '+' → logprob: -2.5521652698516846
    4. '           ' → logprob: -3.8021652698516846
    5. '[' → logprob: -7.052165508270264
    6. ' +' → logprob: -7.302165508270264
    7. '       ' → logprob: -7.927165508270264
    8. ')' → logprob: -8.177165031433105
    9. ',' → logprob: -8.677165031433105
    10. ')+' → logprob: -9.302165031433105

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038980069803074
    2. ' for' → logprob: -8.50039005279541
    3. 'for' → logprob: -9.25039005279541
    4. '           ' → logprob: -10.50039005279541
    5. '	           ' → logprob: -11.00039005279541
    6. '			' → logprob: -11.25039005279541
    7. '		       ' → logprob: -11.62539005279541
    8. '                   ' → logprob: -12.37539005279541
    9. '             ' → logprob: -12.62539005279541
    10. '       ' → logprob: -12.62539005279541

Token 534: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3509109914302826
    2. ' for' → logprob: -1.850911021232605
    3. 'for' (adapté à ' for') → logprob: -1.975911021232605
    4. '           ' → logprob: -9.350911140441895
    5. '               ' → logprob: -9.850911140441895
    6. '                  ' → logprob: -10.850911140441895
    7. '                    ' → logprob: -11.100911140441895
    8. '   ' → logprob: -11.100911140441895
    9. '                 ' → logprob: -11.850911140441895
    10. '                ' → logprob: -12.475911140441895

Token 535: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00978595856577158
    2. ' d' → logprob: -4.634786128997803
    3. 'wallet' → logprob: -11.259785652160645
    4. 'c' → logprob: -12.009785652160645
    5. 'a' → logprob: -12.259785652160645
    6. 'w' → logprob: -13.509785652160645
    7. ' wallet' → logprob: -13.634785652160645
    8. ' ' → logprob: -14.134785652160645
    9. '   ' → logprob: -15.009785652160645
    10. 'coin' → logprob: -15.134785652160645

Token 536: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014181148260831833
    2. 'in' → logprob: -4.264181137084961
    3. '_' → logprob: -11.764181137084961
    4. ' ' → logprob: -12.264181137084961
    5. 'range' → logprob: -13.389181137084961
    6. '0' → logprob: -13.764181137084961
    7. '   ' → logprob: -14.389181137084961
    8. 'd' → logprob: -14.639181137084961
    9. ')' → logprob: -14.764181137084961
    10. '_in' → logprob: -15.389181137084961

Token 537: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -17.62747573852539
    4. '   ' → logprob: -19.00247573852539
    5. ' ' → logprob: -19.25247573852539
    6. '0' → logprob: -20.25247573852539
    7. 'r' → logprob: -21.25247573852539
    8. 'Range' → logprob: -21.87747573852539
    9. 'ran' → logprob: -22.12747573852539
    10. '_range' → logprob: -22.25247573852539

Token 538: '(wallet' (ID: 173937)
  Prédit: '(wallet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wallet' → logprob: -0.0012072573881596327
    2. 'wallet' → logprob: -6.75120735168457
    3. ' wallet' → logprob: -11.12620735168457
    4. 'range' → logprob: -11.50120735168457
    5. '(w' → logprob: -12.62620735168457
    6. '(' → logprob: -13.00120735168457
    7. '   ' → logprob: -13.12620735168457
    8. '0' → logprob: -13.25120735168457
    9. ' (' → logprob: -13.75120735168457
    10. '(range' → logprob: -14.37620735168457

Token 539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014342782087624073
    2. 'd' → logprob: -6.626434326171875
    3. '+' → logprob: -9.376434326171875
    4. ')+' → logprob: -11.501434326171875
    5. ']+' → logprob: -13.251434326171875
    6. '(' → logprob: -13.251434326171875
    7. '0' → logprob: -13.626434326171875
    8. '{' → logprob: -13.626434326171875
    9. ' d' → logprob: -14.001434326171875
    10. '       ' → logprob: -14.126434326171875

Token 540: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.60414821645827e-06
    2. 'd' → logprob: -12.625004768371582
    3. '   ' → logprob: -15.000004768371582
    4. '
' → logprob: -15.125004768371582
    5. '0' → logprob: -15.250004768371582
    6. ' ' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. '(' → logprob: -17.375003814697266
    9. ']' → logprob: -17.500003814697266
    10. '[' → logprob: -17.750003814697266

Token 541: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026608314365148544
    2. ']+' → logprob: -3.6516082286834717
    3. ')+' → logprob: -8.65160846710205
    4. ' +' → logprob: -9.40160846710205
    5. '()+' → logprob: -10.27660846710205
    6. ']' → logprob: -12.15160846710205
    7. '1' → logprob: -12.40160846710205
    8. '}+' → logprob: -13.27660846710205
    9. '0' → logprob: -13.65160846710205
    10. '   ' → logprob: -14.02660846710205

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011546355381142348
    2. 'd' → logprob: -9.125115394592285
    3. ' ' → logprob: -12.875115394592285
    4. '21' → logprob: -13.000115394592285
    5. ')' → logprob: -14.125115394592285
    6. '+' → logprob: -15.375115394592285
    7. '```' → logprob: -15.500115394592285
    8. '   ' → logprob: -15.875115394592285
    9. ')d' → logprob: -16.3751163482666
    10. '11' → logprob: -16.3751163482666

Token 543: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3142492175102234
    2. '):
' → logprob: -1.3142492771148682
    3. ':' → logprob: -7.064249038696289
    4. ':
' → logprob: -9.689249038696289
    5. '                   ' → logprob: -10.564249038696289
    6. '):

' → logprob: -11.064249038696289
    7. '):
' → logprob: -11.564249038696289
    8. '               ' → logprob: -11.564249038696289
    9. '           ' → logprob: -13.064249038696289
    10. '   ' → logprob: -13.564249038696289

Token 544: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001673061487963423
    2. '       ' → logprob: -10.000166893005371
    3. '               ' → logprob: -10.250166893005371
    4. '                       ' → logprob: -10.500166893005371
    5. '                    
' → logprob: -11.000166893005371
    6. '                  ' → logprob: -11.625166893005371
    7. ' used' → logprob: -12.375166893005371
    8. '           ' → logprob: -12.375166893005371
    9. '                    ' → logprob: -12.500166893005371
    10. '```' → logprob: -12.625166893005371

Token 545: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.46873724460601807
    2. ' usage' → logprob: -1.343737244606018
    3. '                       ' → logprob: -3.2187371253967285
    4. ' used' → logprob: -3.3437371253967285
    5. 'used' → logprob: -3.7187371253967285
    6. '                   ' → logprob: -4.4687371253967285
    7. ' total' → logprob: -8.343737602233887
    8. '                     ' → logprob: -8.343737602233887
    9. 'total' → logprob: -8.468737602233887
    10. 'sum' → logprob: -8.593737602233887

Token 546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014911025762558
    2. '=' → logprob: -1.701491117477417
    3. '=(' → logprob: -10.451491355895996
    4. '_co' → logprob: -10.701491355895996
    5. '   ' → logprob: -11.826491355895996
    6. '_counts' → logprob: -11.826491355895996
    7. '_' → logprob: -12.576491355895996
    8. ' =(' → logprob: -12.701491355895996
    9. '_coin' → logprob: -13.451491355895996
    10. '           ' → logprob: -14.326491355895996

Token 547: ' [' (ID: 723)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00896387454122305
    2. ' (' → logprob: -4.7589640617370605
    3. '(' → logprob: -8.008963584899902
    4. '   ' → logprob: -11.008963584899902
    5. ' ' → logprob: -16.50896453857422
    6. '[a' → logprob: -16.75896453857422
    7. '  ' → logprob: -18.00896453857422
    8. '(A' → logprob: -18.38396453857422
    9. '(ai' → logprob: -18.63396453857422
    10. '    ' → logprob: -18.88396453857422

Token 548: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '	a' → logprob: -18.375
    5. '    ' → logprob: -20.125
    6. '    
' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. ' ' → logprob: -20.75
    9. '  ' → logprob: -20.875
    10. '[a' → logprob: -21.125

Token 549: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02982441894710064
    2. ',b' → logprob: -3.5298244953155518
    3. ' ,' → logprob: -9.529824256896973
    4. '   ' → logprob: -14.654824256896973
    5. 'b' → logprob: -15.029824256896973
    6. ',
' → logprob: -15.279824256896973
    7. ',d' → logprob: -16.27982521057129
    8. ',B' → logprob: -16.40482521057129
    9. ' ' → logprob: -18.02982521057129
    10. '[' → logprob: -18.27982521057129

Token 550: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0008121283026412129
    2. ',' → logprob: -7.50081205368042
    3. ',d' → logprob: -8.375812530517578
    4. ' ,' → logprob: -11.125812530517578
    5. 'c' → logprob: -11.250812530517578
    6. ',
' → logprob: -15.250812530517578
    7. ',C' → logprob: -15.500812530517578
    8. '_,' → logprob: -16.125812530517578
    9. 'd' → logprob: -16.250812530517578
    10. '   ' → logprob: -16.250812530517578

Token 551: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.1340356320142746
    2. ',d' → logprob: -2.134035587310791
    3. '_' → logprob: -5.884035587310791
    4. 'd' → logprob: -6.009035587310791
    5. ',' → logprob: -6.384035587310791
    6. '_]' → logprob: -9.00903606414795
    7. '_d' → logprob: -11.50903606414795
    8. ',_' → logprob: -11.63403606414795
    9. '_,
' → logprob: -11.75903606414795
    10. '__,' → logprob: -13.25903606414795

Token 552: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.014684110297821e-06
    2. ' d' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.625009536743164
    4. '                   ' → logprob: -18.625009536743164
    5. '
' → logprob: -18.875009536743164
    6. ' ' → logprob: -19.000009536743164
    7. '       ' → logprob: -19.250009536743164
    8. '           ' → logprob: -19.375009536743164
    9. '	d' → logprob: -19.625009536743164
    10. '               ' → logprob: -19.750009536743164

Token 553: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1274416297674179
    2. ']' → logprob: -2.127441644668579
    3. '                   ' → logprob: -8.12744140625
    4. ']
' → logprob: -8.75244140625
    5. '               ' → logprob: -10.00244140625
    6. ']

' → logprob: -12.12744140625
    7. '   ' → logprob: -12.62744140625
    8. ' ]
' → logprob: -13.25244140625
    9. '                  ' → logprob: -13.75244140625
    10. '       ' → logprob: -14.12744140625

Token 554: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00039015832589939237
    2. 'usage' → logprob: -8.75039005279541
    3. ' usage' → logprob: -9.00039005279541
    4. '       ' → logprob: -10.25039005279541
    5. '               ' → logprob: -10.37539005279541
    6. '                    
' → logprob: -10.50039005279541
    7. '           ' → logprob: -12.50039005279541
    8. '
' → logprob: -13.25039005279541
    9. '```' → logprob: -13.50039005279541
    10. '                       ' → logprob: -13.62539005279541

Token 555: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' (adapté à ' usage') → logprob: -0.16585159301757812
    2. ' usage' → logprob: -2.040851593017578
    3. '                   ' → logprob: -3.915851593017578
    4. 'sum' → logprob: -6.540851593017578
    5. '   ' → logprob: -7.540851593017578
    6. 'total' → logprob: -8.165851593017578
    7. 's' → logprob: -8.540851593017578
    8. ' total' → logprob: -8.790851593017578
    9. ' sum' → logprob: -9.040851593017578
    10. '       ' → logprob: -9.915851593017578

Token 556: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.11613229662179947
    2. 'sum' → logprob: -2.2411322593688965
    3. ' =' → logprob: -6.4911322593688965
    4. '_co' → logprob: -7.7411322593688965
    5. '=' → logprob: -8.366132736206055
    6. '_coin' → logprob: -8.741132736206055
    7. '_val' → logprob: -8.991132736206055
    8. '_value' → logprob: -8.991132736206055
    9. '=sum' → logprob: -9.241132736206055
    10. 's' → logprob: -9.366132736206055

Token 557: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687849044799805
    2. '=' → logprob: -1.136878490447998
    3. '=sum' → logprob: -12.261878967285156
    4. ')' → logprob: -13.636878967285156
    5. '   ' → logprob: -14.636878967285156
    6. '    ' → logprob: -14.761878967285156
    7. ' ' → logprob: -15.636878967285156
    8. '＝' → logprob: -16.011878967285156
    9. ')=' → logprob: -16.886878967285156
    10. 'sum' → logprob: -16.886878967285156

Token 558: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0231915470212698
    2. 'a' → logprob: -3.898191452026367
    3. ' sum' → logprob: -6.148191452026367
    4. 'usage' → logprob: -8.023191452026367
    5. '   ' → logprob: -8.773191452026367
    6. '10' → logprob: -11.648191452026367
    7. ' a' → logprob: -12.398191452026367
    8. 'coins' → logprob: -12.523191452026367
    9. '(sum' → logprob: -13.148191452026367
    10. ' ' → logprob: -13.398191452026367

Token 559: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7231470942497253
    2. '(co' → logprob: -0.7231470942497253
    3. '(u' → logprob: -3.84814715385437
    4. '(c' → logprob: -5.098146915435791
    5. '([' → logprob: -7.348146915435791
    6. 'usage' → logprob: -7.348146915435791
    7. 'coins' → logprob: -7.973146915435791
    8. '(cnt' → logprob: -8.72314739227295
    9. '(x' → logprob: -9.09814739227295
    10. '(ci' → logprob: -10.09814739227295

Token 560: '*' (ID: 9)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012445253320038319
    2. '[u' → logprob: -5.137445449829102
    3. '[c' → logprob: -6.137445449829102
    4. '*u' → logprob: -6.762445449829102
    5. '(i' → logprob: -7.012445449829102
    6. '[' → logprob: -7.387445449829102
    7. '*c' → logprob: -7.512445449829102
    8. '*' → logprob: -7.762445449829102
    9. '*i' → logprob: -8.512445449829102
    10. '*w' → logprob: -9.262445449829102

Token 561: 'co' (ID: 1191)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3484485447406769
    2. 'coins' → logprob: -1.3484485149383545
    3. 'co' → logprob: -4.598448753356934
    4. 'coin' → logprob: -4.848448753356934
    5. 'v' → logprob: -5.223448753356934
    6. 'w' → logprob: -5.223448753356934
    7. 'u' → logprob: -5.848448753356934
    8. 'cu' → logprob: -6.598448753356934
    9. 's' → logprob: -7.973448753356934
    10. ' coins' → logprob: -8.598448753356934

Token 562: ' for' (ID: 395)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.002088165609166026
    2. 'in' → logprob: -6.2520880699157715
    3. 'i' → logprob: -9.50208854675293
    4. 'usage' → logprob: -10.25208854675293
    5. '[' → logprob: -10.62708854675293
    6. '[i' → logprob: -11.75208854675293
    7. 'insu' → logprob: -12.87708854675293
    8. '[in' → logprob: -13.50208854675293
    9. ' usage' → logprob: -13.87708854675293
    10. 'ns' → logprob: -14.12708854675293

Token 563: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.745069499127567e-05
    2. ' u' → logprob: -10.00008773803711
    3. 'co' → logprob: -10.62508773803711
    4. '(u' → logprob: -11.00008773803711
    5. '(co' → logprob: -14.75008773803711
    6. '	u' → logprob: -16.00008773803711
    7. ',u' → logprob: -16.25008773803711
    8. 'uco' → logprob: -16.37508773803711
    9. ',' → logprob: -16.50008773803711
    10. 'uc' → logprob: -17.00008773803711

Token 564: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7255853414535522
    2. ',u' → logprob: -0.7255853414535522
    3. ',' → logprob: -3.475585460662842
    4. ' u' → logprob: -7.475585460662842
    5. ' in' → logprob: -8.350584983825684
    6. 'in' → logprob: -9.225584983825684
    7. ' ,' → logprob: -10.475584983825684
    8. '(u' → logprob: -10.975584983825684
    9. '[u' → logprob: -12.850584983825684
    10. '_u' → logprob: -12.975584983825684

Token 565: 'co' (ID: 1191)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014183600433170795
    2. 'co' → logprob: -4.264183521270752
    3. '(u' → logprob: -11.88918399810791
    4. ' u' → logprob: -11.88918399810791
    5. '(co' → logprob: -12.63918399810791
    6. ' co' → logprob: -13.76418399810791
    7. ',u' → logprob: -14.63918399810791
    8. 'c' → logprob: -14.76418399810791
    9. 'coin' → logprob: -14.88918399810791
    10. 'coins' → logprob: -16.014183044433594

Token 566: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1131000965833664
    2. ' in' → logprob: -2.238100051879883
    3. ',' → logprob: -8.738100051879883
    4. ',u' → logprob: -9.613100051879883
    5. 'u' → logprob: -10.488100051879883
    6. 's' → logprob: -11.113100051879883
    7. 'ins' → logprob: -12.988100051879883
    8. ' ' → logprob: -13.113100051879883
    9. ',in' → logprob: -13.863100051879883
    10. ' u' → logprob: -14.613100051879883

Token 567: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0006774079520255327
    2. ' zip' → logprob: -7.500677585601807
    3. '(zip' → logprob: -9.125677108764648
    4. 'coins' → logprob: -11.875677108764648
    5. 'coin' → logprob: -12.375677108764648
    6. 'u' → logprob: -13.000677108764648
    7. '.zip' → logprob: -14.375677108764648
    8. 'usage' → logprob: -14.625677108764648
    9. 'enumer' → logprob: -15.000677108764648
    10. '_zip' → logprob: -15.625677108764648

Token 568: '(' (ID: 7)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.0793488547205925
    2. '(' → logprob: -2.5793488025665283
    3. 'coins' → logprob: -7.704349040985107
    4. ' usage' → logprob: -12.20434856414795
    5. 'coin' → logprob: -13.82934856414795
    6. '(co' → logprob: -14.20434856414795
    7. 'Usage' → logprob: -15.20434856414795
    8. ' coins' → logprob: -15.32934856414795
    9. '[' → logprob: -15.45434856414795
    10. '_usage' → logprob: -15.82934856414795

Token 569: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.000566137779969722
    2. 'coins' → logprob: -7.500566005706787
    3. '[' → logprob: -11.875566482543945
    4. ' usage' → logprob: -12.250566482543945
    5. 'Usage' → logprob: -15.000566482543945
    6. '   ' → logprob: -15.375566482543945
    7. 'us' → logprob: -16.250566482543945
    8. ' coins' → logprob: -16.500566482543945
    9. '_usage' → logprob: -16.500566482543945
    10. '
' → logprob: -16.625566482543945

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008854917832650244
    2. 'coins' → logprob: -7.500885486602783
    3. '(co' → logprob: -8.875885963439941
    4. ' ,' → logprob: -9.375885963439941
    5. '   ' → logprob: -9.875885963439941
    6. '           ' → logprob: -11.625885963439941
    7. ' coins' → logprob: -11.625885963439941
    8. ',[' → logprob: -11.750885963439941
    9. '[' → logprob: -12.250885963439941
    10. '       ' → logprob: -12.500885963439941

Token 571: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -3.8889261304575484e-06
    2. ' coins' → logprob: -12.750003814697266
    3. '[' → logprob: -14.750003814697266
    4. ')' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.750003814697266
    6. 'co' → logprob: -15.875003814697266
    7. 'coin' → logprob: -17.500003814697266
    8. '```' → logprob: -17.625003814697266
    9. '
' → logprob: -18.000003814697266
    10. ']' → logprob: -18.750003814697266

Token 572: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06342019140720367
    2. '))' → logprob: -3.063420295715332
    3. '))
' → logprob: -5.313420295715332
    4. ')
' → logprob: -5.563420295715332
    5. '])' → logprob: -5.813420295715332
    6. ')]' → logprob: -6.063420295715332
    7. ')])' → logprob: -8.188420295715332
    8. '])
' → logprob: -8.938420295715332
    9. ')]
' → logprob: -9.313420295715332
    10. ' )' → logprob: -11.063420295715332

Token 573: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016026983503252268
    2. '                    
' → logprob: -6.751602649688721
    3. '
' → logprob: -9.126603126525879
    4. '               ' → logprob: -9.376603126525879
    5. '```' → logprob: -9.501603126525879
    6. '                    ' → logprob: -10.376603126525879
    7. 'if' → logprob: -10.876603126525879
    8. '           ' → logprob: -11.001603126525879
    9. '                  ' → logprob: -11.126603126525879
    10. '				' → logprob: -11.626603126525879

Token 574: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5459790825843811
    2. '                   ' → logprob: -0.9209790825843811
    3. ' if' → logprob: -3.7959790229797363
    4. '                    
' → logprob: -9.920979499816895
    5. '                    ' → logprob: -10.795979499816895
    6. '   ' → logprob: -11.420979499816895
    7. 'payment' → logprob: -11.420979499816895
    8. '               ' → logprob: -11.920979499816895
    9. '           ' → logprob: -12.170979499816895
    10. 'pay' → logprob: -12.420979499816895

Token 575: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.02975129522383213
    2. ' usage' → logprob: -3.5297513008117676
    3. '                   ' → logprob: -15.52975082397461
    4. '                       ' → logprob: -15.65475082397461
    5. 'Usage' → logprob: -15.65475082397461
    6. '   ' → logprob: -15.90475082397461
    7. '_usage' → logprob: -17.52975082397461
    8. 'use' → logprob: -17.77975082397461
    9. 'payment' → logprob: -18.27975082397461
    10. '                           ' → logprob: -18.40475082397461

Token 576: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.4855663721391466e-05
    2. 'sum' → logprob: -12.000015258789062
    3. '[' → logprob: -12.375015258789062
    4. '_SUM' → logprob: -13.500015258789062
    5. '   ' → logprob: -14.625015258789062
    6. '>=' → logprob: -14.750015258789062
    7. ' ' → logprob: -14.875015258789062
    8. 'Sum' → logprob: -15.625015258789062
    9. ' <' → logprob: -15.875015258789062
    10. '.sum' → logprob: -15.875015258789062

Token 577: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6421430110931396
    2. '>=' → logprob: -1.0171430110931396
    3. ' <' → logprob: -2.7671430110931396
    4. ' >=' → logprob: -3.0171430110931396
    5. '<p' → logprob: -9.017143249511719
    6. ' ' → logprob: -9.642143249511719
    7. '<m' → logprob: -10.392143249511719
    8. '==' → logprob: -10.642143249511719
    9. '<int' → logprob: -10.767143249511719
    10. '<th' → logprob: -10.767143249511719

Token 578: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -1.306760805164231e-05
    2. ' pay' → logprob: -11.25001335144043
    3. '(pay' → logprob: -18.50001335144043
    4. '   ' → logprob: -18.62501335144043
    5. ' ' → logprob: -21.12501335144043
    6. '>' → logprob: -21.12501335144043
    7. 'pass' → logprob: -21.25001335144043
    8. '
' → logprob: -22.12501335144043
    9. 'coin' → logprob: -22.25001335144043
    10. '.pay' → logprob: -22.25001335144043

Token 579: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.40405699610710144
    2. ':' → logprob: -1.2790570259094238
    3. ':
' → logprob: -3.404057025909424
    4. '                   ' → logprob: -3.904057025909424
    5. 'continue' → logprob: -8.279056549072266
    6. '                      ' → logprob: -9.029056549072266
    7. ' or' → logprob: -9.279056549072266
    8. '                           ' → logprob: -10.279056549072266
    9. ' continue' → logprob: -10.404056549072266
    10. '               ' → logprob: -10.654056549072266

Token 580: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010820484720170498
    2. '                   ' → logprob: -4.760820388793945
    3. ' continue' → logprob: -6.760820388793945
    4. 'continue' → logprob: -6.885820388793945
    5. '               ' → logprob: -12.260820388793945
    6. '                     ' → logprob: -12.760820388793945
    7. '           ' → logprob: -12.885820388793945
    8. '                           ' → logprob: -13.135820388793945
    9. '                      ' → logprob: -13.135820388793945
    10. '                    ' → logprob: -13.385820388793945

Token 581: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8788735270500183
    2. ' continue' → logprob: -0.8788735270500183
    3. 'continue' (adapté à ' continue') → logprob: -1.878873586654663
    4. '                           ' → logprob: -4.628873348236084
    5. '                   ' → logprob: -5.253873348236084
    6. '                               ' → logprob: -6.753873348236084
    7. '       ' → logprob: -9.003873825073242
    8. '               ' → logprob: -9.253873825073242
    9. '           ' → logprob: -9.253873825073242
    10. '   ' → logprob: -9.503873825073242

Token 582: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006305104121565819
    2. '
' → logprob: -5.25630521774292
    3. '                    
' → logprob: -7.00630521774292
    4. '```' → logprob: -9.506304740905762
    5. '                        
' → logprob: -10.256304740905762
    6. '               ' → logprob: -11.131304740905762
    7. '           ' → logprob: -11.631304740905762
    8. 'token' → logprob: -12.131304740905762
    9. '    
' → logprob: -13.256304740905762
    10. '				' → logprob: -13.256304740905762

Token 583: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029547741636633873
    2. '
' → logprob: -4.029547691345215
    3. '                    
' → logprob: -4.529547691345215
    4. '```' → logprob: -8.029547691345215
    5. '                        
' → logprob: -9.529547691345215
    6. '                   
' → logprob: -10.779547691345215
    7. '               ' → logprob: -11.029547691345215
    8. '  
' → logprob: -11.029547691345215
    9. '    
' → logprob: -11.154547691345215
    10. ' 
' → logprob: -11.404547691345215

Token 584: ' change' (ID: 3343)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.08687574416399002
    2. ' usage' → logprob: -2.9618756771087646
    3. '                   ' → logprob: -3.4618756771087646
    4. '                    
' → logprob: -10.461875915527344
    5. 'coin' → logprob: -10.836875915527344
    6. '   ' → logprob: -10.961875915527344
    7. '               ' → logprob: -11.086875915527344
    8. 'used' → logprob: -11.711875915527344
    9. 'payment' → logprob: -12.211875915527344
    10. '           ' → logprob: -12.961875915527344

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863357916474342
    2. '=' → logprob: -3.048633575439453
    3. '_amount' → logprob: -10.298633575439453
    4. '_amt' → logprob: -11.548633575439453
    5. 'amount' → logprob: -13.673633575439453
    6. ' ' → logprob: -14.798633575439453
    7. '_val' → logprob: -15.173633575439453
    8. '=int' → logprob: -15.173633575439453
    9. '   ' → logprob: -15.423633575439453
    10. '=sum' → logprob: -15.798633575439453

Token 586: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.01416350994259119
    2. ' usage' → logprob: -4.264163494110107
    3. '   ' → logprob: -17.264163970947266
    4. 'Usage' → logprob: -17.889163970947266
    5. '                   ' → logprob: -18.264163970947266
    6. '_usage' → logprob: -19.139163970947266
    7. 'use' → logprob: -19.264163970947266
    8. '                       ' → logprob: -20.264163970947266
    9. '               ' → logprob: -21.014163970947266
    10. ' ' → logprob: -21.014163970947266

Token 587: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.463036435074173e-05
    2. 'sum' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '_SUM' → logprob: -17.000024795532227
    5. '```' → logprob: -17.375024795532227
    6. ' sum' → logprob: -17.625024795532227
    7. '[' → logprob: -17.875024795532227
    8. '.sum' → logprob: -18.125024795532227
    9. '	sum' → logprob: -18.125024795532227
    10. '\' → logprob: -18.625024795532227

Token 588: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12694741785526276
    2. ' -' → logprob: -2.1269474029541016
    3. '-pay' → logprob: -11.001947402954102
    4. '-p' → logprob: -13.001947402954102
    5. '-
' → logprob: -16.1269474029541
    6. ' ' → logprob: -17.1269474029541
    7. ' ' → logprob: -17.2519474029541
    8. '
' → logprob: -17.2519474029541
    9. '-payment' → logprob: -17.2519474029541
    10. '   ' → logprob: -17.6269474029541

Token 589: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.00020354038861114532
    2. ' pay' → logprob: -8.500203132629395
    3. '(pay' → logprob: -20.37520408630371
    4. '   ' → logprob: -23.87520408630371
    5. 'play' → logprob: -24.00020408630371
    6. '.pay' → logprob: -24.25020408630371
    7. 'Pay' → logprob: -24.37520408630371
    8. 'pat' → logprob: -24.62520408630371
    9. 'p' → logprob: -24.62520408630371
    10. '_pay' → logprob: -24.75020408630371

Token 590: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007685651071369648
    2. 'if' → logprob: -5.382685661315918
    3. '
' → logprob: -6.382685661315918
    4. ' if' → logprob: -7.382685661315918
    5. '                    
' → logprob: -8.382685661315918
    6. '               ' → logprob: -9.132685661315918
    7. '           ' → logprob: -9.382685661315918
    8. '```' → logprob: -9.507685661315918
    9. 'change' → logprob: -9.632685661315918
    10. '       ' → logprob: -9.757685661315918

Token 591: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003285520360805094
    2. 'if' → logprob: -8.50032901763916
    3. '                    
' → logprob: -10.12532901763916
    4. '               ' → logprob: -10.50032901763916
    5. '```' → logprob: -11.12532901763916
    6. ' if' → logprob: -11.50032901763916
    7. 'token' → logprob: -11.87532901763916
    8. '
' → logprob: -12.00032901763916
    9. '           ' → logprob: -12.25032901763916
    10. '       ' → logprob: -12.62532901763916

Token 592: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0125474464148283
    2. 'used' → logprob: -4.762547492980957
    3. 'usage' → logprob: -6.012547492980957
    4. 'change' → logprob: -7.512547492980957
    5. '   ' → logprob: -8.262547492980957
    6. 'min' → logprob: -8.512547492980957
    7. ' if' → logprob: -8.637547492980957
    8. 'return' → logprob: -9.262547492980957
    9. '#' → logprob: -9.887547492980957
    10. 'coin' → logprob: -10.012547492980957

Token 593: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.05958832427859306
    2. 'change' → logprob: -3.4345884323120117
    3. ' ch' → logprob: -3.8095884323120117
    4. ' change' → logprob: -6.434588432312012
    5. 'coin' → logprob: -7.934588432312012
    6. '(ch' → logprob: -8.184588432312012
    7. 'le' → logprob: -8.184588432312012
    8. 'len' → logprob: -8.559588432312012
    9. 'coins' → logprob: -8.809588432312012
    10. 'usage' → logprob: -9.309588432312012

Token 594: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0004670153430197388
    2. '_used' → logprob: -7.750466823577881
    3. 'min' → logprob: -10.500467300415039
    4. '_change' → logprob: -12.625467300415039
    5. '_co' → logprob: -13.250467300415039
    6. '_' → logprob: -13.750467300415039
    7. '_max' → logprob: -14.250467300415039
    8. '_changed' → logprob: -14.250467300415039
    9. 'used' → logprob: -14.750467300415039
    10. '```' → logprob: -15.250467300415039

Token 595: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -3.650518920039758e-06
    2. '_co' → logprob: -12.875003814697266
    3. ' coins' → logprob: -14.875003814697266
    4. 'co' → logprob: -15.000003814697266
    5. 'coin' → logprob: -16.000003814697266
    6. '```' → logprob: -16.875003814697266
    7. 'cards' → logprob: -17.125003814697266
    8. 'c' → logprob: -17.625003814697266
    9. 'chips' → logprob: -18.625003814697266
    10. '
' → logprob: -18.875003814697266

Token 596: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.670925358776003e-05
    2. 'change' → logprob: -9.625066757202148
    3. ' change' → logprob: -15.375066757202148
    4. ' [' → logprob: -15.625066757202148
    5. '(change' → logprob: -16.50006675720215
    6. '[ch' → logprob: -16.62506675720215
    7. '[
' → logprob: -17.50006675720215
    8. '[c' → logprob: -18.87506675720215
    9. '_change' → logprob: -19.25006675720215
    10. 'Change' → logprob: -19.75006675720215

Token 597: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -7.941850526549388e-06
    2. ' change' → logprob: -11.750007629394531
    3. '(change' → logprob: -16.75000762939453
    4. '[' → logprob: -17.12500762939453
    5. '.change' → logprob: -21.12500762939453
    6. '	change' → logprob: -21.37500762939453
    7. '_change' → logprob: -22.12500762939453
    8. ']' → logprob: -22.50000762939453
    9. '-change' → logprob: -22.62500762939453
    10. 'Change' → logprob: -22.62500762939453

Token 598: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2720947265625
    2. ' ==' → logprob: -2.1470947265625
    3. ']' → logprob: -2.5220947265625
    4. ']==' → logprob: -3.2720947265625
    5. '[' → logprob: -6.2720947265625
    6. '!=' → logprob: -7.7720947265625
    7. '<' → logprob: -8.2720947265625
    8. '==
' → logprob: -9.1470947265625
    9. ' !=' → logprob: -9.3970947265625
    10. ' ]' → logprob: -9.5220947265625

Token 599: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4776892364025116
    2. ' ==' → logprob: -0.977689266204834
    3. '!=' → logprob: -6.352689266204834
    4. ' !=' → logprob: -6.727689266204834
    5. '<' → logprob: -7.477689266204834
    6. ' <' → logprob: -10.102688789367676
    7. '>=' → logprob: -10.852688789367676
    8. '<=' → logprob: -11.102688789367676
    9. '>' → logprob: -11.727688789367676
    10. '==
' → logprob: -12.477688789367676

Token 600: ' INF' (ID: 69196)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04442872852087021
    2. 'INF' → logprob: -3.544428825378418
    3. 'sys' → logprob: -5.669428825378418
    4. '0' → logprob: -5.919428825378418
    5. 'float' → logprob: -5.919428825378418
    6. '1' → logprob: -5.919428825378418
    7. ' ' → logprob: -7.544428825378418
    8. '999' → logprob: -7.669428825378418
    9. '100' → logprob: -7.669428825378418
    10. 'coins' → logprob: -7.794428825378418

Token 601: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4333118498325348
    2. ':' → logprob: -1.4333118200302124
    3. ':
' → logprob: -2.308311939239502
    4. '                   ' → logprob: -4.308311939239502
    5. ' or' → logprob: -10.308311462402344
    6. '                           ' → logprob: -10.433311462402344
    7. '               ' → logprob: -10.433311462402344
    8. '                      ' → logprob: -10.433311462402344
    9. 'continue' → logprob: -10.683311462402344
    10. '       ' → logprob: -11.058311462402344

Token 602: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00041625293670222163
    2. 'continue' → logprob: -8.125415802001953
    3. ' continue' → logprob: -9.375415802001953
    4. '                   ' → logprob: -10.375415802001953
    5. '       ' → logprob: -13.500415802001953
    6. '   ' → logprob: -14.375415802001953
    7. '               ' → logprob: -14.750415802001953
    8. '                      ' → logprob: -14.875415802001953
    9. '                           ' → logprob: -15.000415802001953
    10. '                     ' → logprob: -15.125415802001953

Token 603: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09262063354253769
    2. 'continue' (adapté à ' continue') → logprob: -2.842620611190796
    3. ' continue' → logprob: -3.592620611190796
    4. '                   ' → logprob: -6.092620849609375
    5. '   ' → logprob: -8.717620849609375
    6. '       ' → logprob: -8.967620849609375
    7. '                           ' → logprob: -9.717620849609375
    8. '           ' → logprob: -10.592620849609375
    9. '               ' → logprob: -10.842620849609375
    10. '	continue' → logprob: -12.842620849609375

Token 604: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001813224982470274
    2. '
' → logprob: -6.6268134117126465
    3. '                    
' → logprob: -7.7518134117126465
    4. '```' → logprob: -11.501812934875488
    5. '    
' → logprob: -11.626812934875488
    6. '               ' → logprob: -11.751812934875488
    7. '           ' → logprob: -12.001812934875488
    8. '       ' → logprob: -12.251812934875488
    9. '   ' → logprob: -12.626812934875488
    10. 'usage' → logprob: -12.751812934875488

Token 605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001345946453511715
    2. '```' → logprob: -7.626346111297607
    3. '                    
' → logprob: -8.12634563446045
    4. '               ' → logprob: -8.50134563446045
    5. 'if' → logprob: -9.62634563446045
    6. '       ' → logprob: -9.62634563446045
    7. '
' → logprob: -9.87634563446045
    8. '           ' → logprob: -10.12634563446045
    9. ' if' → logprob: -10.25134563446045
    10. '                    ' → logprob: -10.62634563446045

Token 606: ' #' (ID: 1069)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.6586261987686157
    2. '                   ' → logprob: -1.5336261987686157
    3. 'used' → logprob: -2.033626079559326
    4. 'pay' → logprob: -2.658626079559326
    5. ' usage' → logprob: -3.533626079559326
    6. ' used' → logprob: -4.533626079559326
    7. 'if' → logprob: -4.908626079559326
    8. 'payment' → logprob: -5.033626079559326
    9. 'coin' → logprob: -5.658626079559326
    10. 'return' → logprob: -6.283626079559326

Token 607: ' check' (ID: 2371)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.8541552424430847
    2. 'used' → logprob: -1.1041553020477295
    3. 'pay' → logprob: -1.7291553020477295
    4. 'if' → logprob: -2.8541553020477295
    5. 'payment' → logprob: -5.47915506362915
    6. 'use' → logprob: -7.10415506362915
    7. 'return' → logprob: -7.35415506362915
    8. '#' → logprob: -7.47915506362915
    9. 'change' → logprob: -7.47915506362915
    10. '   ' → logprob: -8.604155540466309

Token 608: ' intersection' (ID: 42002)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48120370507240295
    2. 'if' → logprob: -2.10620379447937
    3. ' usage' → logprob: -2.10620379447937
    4. ' used' → logprob: -2.60620379447937
    5. 'used' → logprob: -3.85620379447937
    6. '   ' → logprob: -4.231203556060791
    7. 'usage' → logprob: -4.731203556060791
    8. ' payment' → logprob: -5.231203556060791
    9. ' return' → logprob: -5.981203556060791
    10. ' not' → logprob: -6.106203556060791

Token 609: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003710527205839753
    2. ' if' → logprob: -6.378710746765137
    3. 'if' → logprob: -6.753710746765137
    4. '   ' → logprob: -7.628710746765137
    5. ' used' → logprob: -9.378710746765137
    6. 'used' → logprob: -9.503710746765137
    7. '                    
' → logprob: -10.003710746765137
    8. 'usage' → logprob: -10.753710746765137
    9. '               ' → logprob: -10.878710746765137
    10. '```' → logprob: -11.128710746765137

Token 610: ' coins' (ID: 28969)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005542247672565281
    2. 'used' → logprob: -7.750554084777832
    3. '{' → logprob: -9.625554084777832
    4. ' set' → logprob: -10.250554084777832
    5. '(set' → logprob: -11.250554084777832
    6. 'usage' → logprob: -12.000554084777832
    7. 'coins' → logprob: -13.875554084777832
    8. '   ' → logprob: -14.875554084777832
    9. '=set' → logprob: -15.000554084777832
    10. ' used' → logprob: -15.250554084777832

Token 611: ' used' (ID: 2061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8157543540000916
    2. '_used' → logprob: -1.0657544136047363
    3. '                   ' → logprob: -2.3157544136047363
    4. 'used' → logprob: -3.0657544136047363
    5. '   ' → logprob: -3.6907544136047363
    6. '_payment' → logprob: -4.940754413604736
    7. '_usage' → logprob: -5.065754413604736
    8. '=' → logprob: -5.440754413604736
    9. '_set' → logprob: -5.690754413604736
    10. ' used' → logprob: -5.815754413604736

Token 612: ' in' (ID: 306)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1895531564950943
    2. ' in' → logprob: -2.9395532608032227
    3. '   ' → logprob: -3.0645532608032227
    4. ' and' → logprob: -4.189553260803223
    5. 'used' → logprob: -4.564553260803223
    6. 'in' → logprob: -4.814553260803223
    7. ' used' → logprob: -4.939553260803223
    8. ' =' → logprob: -5.189553260803223
    9. '_used' → logprob: -5.189553260803223
    10. 'and' → logprob: -5.814553260803223

Token 613: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.1028071939945221
    2. 'set' → logprob: -2.3528072834014893
    3. 'change' → logprob: -6.85280704498291
    4. 'used' → logprob: -7.22780704498291
    5. 'payment' → logprob: -7.72780704498291
    6. '{' → logprob: -8.72780704498291
    7. ' usage' → logprob: -10.22780704498291
    8. 'coins' → logprob: -10.47780704498291
    9. ' set' → logprob: -10.85280704498291
    10. 'pay' → logprob: -11.10280704498291

Token 614: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35354751348495483
    2. ' and' → logprob: -1.2285475730895996
    3. 'and' → logprob: -5.7285475730896
    4. '   ' → logprob: -6.7285475730896
    5. ' used' → logprob: -8.728547096252441
    6. ' =' → logprob: -8.978547096252441
    7. '                    
' → logprob: -9.478547096252441
    8. 'used' → logprob: -9.978547096252441
    9. '    ' → logprob: -10.103547096252441
    10. ',' → logprob: -10.353547096252441

Token 615: ' in' (ID: 306)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.12607650458812714
    2. 'set' → logprob: -2.3760764598846436
    3. 'change' → logprob: -4.126076698303223
    4. '   ' → logprob: -5.376076698303223
    5. '{' → logprob: -6.251076698303223
    6. ' set' → logprob: -7.251076698303223
    7. ' ch' → logprob: -7.251076698303223
    8. 'coins' → logprob: -8.001076698303223
    9. 'used' → logprob: -8.126076698303223
    10. 'usage' → logprob: -9.626076698303223

Token 616: ' change' (ID: 3343)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0002446509897708893
    2. 'change' → logprob: -8.375245094299316
    3. '   ' → logprob: -12.125245094299316
    4. ' ch' → logprob: -12.875245094299316
    5. '[ch' → logprob: -13.375245094299316
    6. '{' → logprob: -14.000245094299316
    7. '
' → logprob: -14.375245094299316
    8. 'coins' → logprob: -14.750245094299316
    9. 'chg' → logprob: -14.875245094299316
    10. 'changed' → logprob: -15.000245094299316

Token 617: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010030409321188927
    2. '   ' → logprob: -5.885030269622803
    3. ' if' → logprob: -6.010030269622803
    4. ' usage' → logprob: -6.510030269622803
    5. 'if' → logprob: -7.010030269622803
    6. 'usage' → logprob: -7.010030269622803
    7. ' used' → logprob: -8.010030746459961
    8. ' coins' → logprob: -8.260030746459961
    9. ' coin' → logprob: -8.385030746459961
    10. '                    
' → logprob: -8.510030746459961

Token 618: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.135819760151207e-05
    2. '   ' → logprob: -10.62507152557373
    3. 'if' → logprob: -11.00007152557373
    4. '               ' → logprob: -12.12507152557373
    5. 'used' → logprob: -12.12507152557373
    6. 'usage' → logprob: -12.50007152557373
    7. ' if' → logprob: -12.62507152557373
    8. '       ' → logprob: -12.87507152557373
    9. ' used' → logprob: -13.25007152557373
    10. '           ' → logprob: -13.37507152557373

Token 619: ' used' (ID: 2061)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5159765481948853
    2. 'usage' → logprob: -1.1409765481948853
    3. 'used' (adapté à ' used') → logprob: -3.1409764289855957
    4. 'if' → logprob: -3.7659764289855957
    5. ' usage' → logprob: -4.890976428985596
    6. '   ' → logprob: -5.890976428985596
    7. 'pay' → logprob: -6.140976428985596
    8. ' used' → logprob: -6.390976428985596
    9. 'payment' → logprob: -6.515976428985596
    10. ' if' → logprob: -7.015976428985596

Token 620: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.1599719226360321
    2. '_set' → logprob: -3.0349719524383545
    3. ' =' → logprob: -3.2849719524383545
    4. '=' → logprob: -3.4099719524383545
    5. '=set' → logprob: -4.034971714019775
    6. 'coins' → logprob: -4.659971714019775
    7. 'set' → logprob: -6.409971714019775
    8. 'co' → logprob: -9.284972190856934
    9. 'Coins' → logprob: -9.534972190856934
    10. '_coin' → logprob: -9.659972190856934

Token 621: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.004721207078546286
    2. 'in' → logprob: -5.629721164703369
    3. ' =' → logprob: -7.754721164703369
    4. '=' → logprob: -8.254721641540527
    5. 'coins' → logprob: -8.754721641540527
    6. 'ints' → logprob: -9.754721641540527
    7. 'ils' → logprob: -10.379721641540527
    8. '_ins' → logprob: -11.129721641540527
    9. '```' → logprob: -11.379721641540527
    10. '   ' → logprob: -11.504721641540527

Token 622: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06486435979604721
    2. '=' → logprob: -3.18986439704895
    3. '=set' → logprob: -3.93986439704895
    4. '_set' → logprob: -6.189864158630371
    5. 'set' → logprob: -9.689864158630371
    6. '   ' → logprob: -11.314864158630371
    7. '_tokens' → logprob: -12.064864158630371
    8. '_in' → logprob: -12.064864158630371
    9. '={' → logprob: -12.314864158630371
    10. ' ' → logprob: -12.439864158630371

Token 623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00698081823065877
    2. '=' → logprob: -5.006980895996094
    3. '=set' → logprob: -8.256980895996094
    4. ' ={' → logprob: -12.506980895996094
    5. '={' → logprob: -14.006980895996094
    6. '   ' → logprob: -15.006980895996094
    7. ' ' → logprob: -15.131980895996094
    8. 'set' → logprob: -15.381980895996094
    9. '(set' → logprob: -15.756980895996094
    10. '{' → logprob: -15.881980895996094

Token 624: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16335661709308624
    2. '{' → logprob: -1.9133566617965698
    3. ' set' → logprob: -5.913356781005859
    4. ' {' → logprob: -7.788356781005859
    5. '{s' → logprob: -12.66335678100586
    6. '{i' → logprob: -13.03835678100586
    7. '   ' → logprob: -13.41335678100586
    8. '{x' → logprob: -14.16335678100586
    9. '=set' → logprob: -14.16335678100586
    10. '	set' → logprob: -14.28835678100586

Token 625: '(co' (ID: 41772)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6724405288696289
    2. '(u' → logprob: -1.672440528869629
    3. '([' → logprob: -1.922440528869629
    4. '(co' → logprob: -2.547440528869629
    5. '()
' → logprob: -2.672440528869629
    6. '()' → logprob: -6.297440528869629
    7. '(c' → logprob: -6.547440528869629
    8. '(i' → logprob: -6.547440528869629
    9. '((' → logprob: -7.047440528869629
    10. '(k' → logprob: -7.422440528869629

Token 626: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.12245995551347733
    2. '(' → logprob: -2.997459888458252
    3. 'usage' → logprob: -3.622459888458252
    4. '([' → logprob: -4.372459888458252
    5. '(i' → logprob: -4.622459888458252
    6. 'in' → logprob: -5.122459888458252
    7. '[' → logprob: -5.997459888458252
    8. 'i' → logprob: -6.247459888458252
    9. '(u' → logprob: -6.247459888458252
    10. '(co' → logprob: -7.497459888458252

Token 627: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.3213025744771585e-05
    2. '[u' → logprob: -11.000033378601074
    3. '[j' → logprob: -11.500033378601074
    4. 'i' → logprob: -13.125033378601074
    5. '[' → logprob: -13.125033378601074
    6. '[:' → logprob: -13.750033378601074
    7. '[k' → logprob: -14.500033378601074
    8. '[idx' → logprob: -15.000033378601074
    9. '[
' → logprob: -15.625033378601074
    10. 'for' → logprob: -17.125032424926758

Token 628: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16052134335041046
    2. 'for' → logprob: -1.910521388053894
    3. ' ' → logprob: -8.535521507263184
    4. 'j' → logprob: -9.785521507263184
    5. '   ' → logprob: -11.660521507263184
    6. 'idx' → logprob: -11.660521507263184
    7. '
' → logprob: -11.910521507263184
    8. '	for' → logprob: -11.910521507263184
    9. '[j' → logprob: -12.410521507263184
    10. 'k' → logprob: -12.910521507263184

Token 629: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38694000244140625
    2. ' for' → logprob: -1.1369400024414062
    3. '                   ' → logprob: -11.136940002441406
    4. '   ' → logprob: -11.136940002441406
    5. ' ' → logprob: -11.511940002441406
    6. '           ' → logprob: -11.636940002441406
    7. '               ' → logprob: -12.261940002441406
    8. '       ' → logprob: -12.886940002441406
    9. '
' → logprob: -12.886940002441406
    10. '	for' → logprob: -13.136940002441406

Token 630: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031784253660589457
    2. ' i' → logprob: -5.753178596496582
    3. '	i' → logprob: -14.878178596496582
    4. 'idx' → logprob: -15.753178596496582
    5. '(i' → logprob: -16.253177642822266
    6. '[i' → logprob: -17.003177642822266
    7. ',i' → logprob: -17.378177642822266
    8. '   ' → logprob: -17.753177642822266
    9. ',' → logprob: -18.253177642822266
    10. '_i' → logprob: -18.253177642822266

Token 631: ',u' (ID: 80698)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6161758899688721
    2. 'in' → logprob: -1.116175889968872
    3. ',' → logprob: -2.241175889968872
    4. 'i' → logprob: -3.991175889968872
    5. ',i' → logprob: -4.991175651550293
    6. 'if' → logprob: -7.741175651550293
    7. 'idx' → logprob: -9.241175651550293
    8. ' i' → logprob: -9.241175651550293
    9. ' ' → logprob: -9.866175651550293
    10. ',v' → logprob: -10.241175651550293

Token 632: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48486241698265076
    2. ' in' → logprob: -0.9848624467849731
    3. 'n' → logprob: -4.984862327575684
    4. ',' → logprob: -5.734862327575684
    5. ',i' → logprob: -8.359862327575684
    6. ',in' → logprob: -8.734862327575684
    7. 'i' → logprob: -10.234862327575684
    8. ',n' → logprob: -10.359862327575684
    9. 'In' → logprob: -10.734862327575684
    10. 'index' → logprob: -10.859862327575684

Token 633: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.08269618451595306
    2. 'range' → logprob: -2.5826961994171143
    3. ' enumerate' → logprob: -5.582695960998535
    4. '[' → logprob: -10.957695960998535
    5. ' range' → logprob: -11.207695960998535
    6. 'enum' → logprob: -12.957695960998535
    7. 'index' → logprob: -13.582695960998535
    8. '```' → logprob: -14.582695960998535
    9. '   ' → logprob: -15.207695960998535
    10. '`' → logprob: -15.582695960998535

Token 634: '(' (ID: 7)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -7.107425062713446e-06
    2. ' usage' → logprob: -12.125006675720215
    3. 'range' → logprob: -13.375006675720215
    4. '[' → logprob: -17.37500762939453
    5. '(' → logprob: -17.50000762939453
    6. 'enumer' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.62500762939453
    8. '
' → logprob: -19.62500762939453
    9. 'Usage' → logprob: -19.87500762939453
    10. ' ' → logprob: -19.87500762939453

Token 635: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -4.4849443838757e-06
    2. ' usage' → logprob: -12.625004768371582
    3. 'range' → logprob: -13.750004768371582
    4. ' ' → logprob: -18.625003814697266
    5. '   ' → logprob: -18.875003814697266
    6. 'enumer' → logprob: -19.500003814697266
    7. '
' → logprob: -19.625003814697266
    8. '[' → logprob: -20.250003814697266
    9. 'used' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.250003814697266

Token 636: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20161595940589905
    2. 'if' → logprob: -1.7016159296035767
    3. ')' → logprob: -9.076616287231445
    4. '                   ' → logprob: -10.326616287231445
    5. '	if' → logprob: -10.576616287231445
    6. '           ' → logprob: -11.326616287231445
    7. '               ' → logprob: -12.201616287231445
    8. ' ' → logprob: -13.451616287231445
    9. '       ' → logprob: -13.576616287231445
    10. '   ' → logprob: -13.826616287231445

Token 637: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12791083753108978
    2. 'if' → logprob: -2.127910852432251
    3. '                   ' → logprob: -7.002910614013672
    4. '               ' → logprob: -11.502910614013672
    5. '                       ' → logprob: -11.502910614013672
    6. '           ' → logprob: -11.627910614013672
    7. '                    ' → logprob: -11.627910614013672
    8. '                  ' → logprob: -11.752910614013672
    9. ')' → logprob: -11.877910614013672
    10. '                ' → logprob: -12.877910614013672

Token 638: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0031786637846380472
    2. ' u' → logprob: -5.753178596496582
    3. '	u' → logprob: -14.378178596496582
    4. '   ' → logprob: -15.878178596496582
    5. ' ' → logprob: -16.7531795501709
    6. '[u' → logprob: -17.6281795501709
    7. '(u' → logprob: -17.8781795501709
    8. '
' → logprob: -18.0031795501709
    9. '```' → logprob: -18.0031795501709
    10. '    ' → logprob: -18.2531795501709

Token 639: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.01855572499334812
    2. ' >' → logprob: -4.018555641174316
    3. '[i' → logprob: -8.643555641174316
    4. ')>' → logprob: -9.018555641174316
    5. '<|end|>' → logprob: -10.518555641174316
    6. '">' → logprob: -11.018555641174316
    7. '[' → logprob: -11.393555641174316
    8. '0' → logprob: -11.768555641174316
    9. ']>' → logprob: -11.768555641174316
    10. ')' → logprob: -12.018555641174316

Token 640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.250085830688477
    4. '>' → logprob: -17.250085830688477
    5. '```' → logprob: -17.250085830688477
    6. '<|end|>' → logprob: -18.000085830688477
    7. '
' → logprob: -18.375085830688477
    8. '=' → logprob: -18.625085830688477
    9. '[' → logprob: -19.250085830688477
    10. '۰' → logprob: -19.750085830688477

Token 641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008940242230892181
    2. ')
' → logprob: -4.75894021987915
    3. ' )' → logprob: -8.133940696716309
    4. ')
' → logprob: -11.508940696716309
    5. '                   ' → logprob: -11.758940696716309
    6. ' )
' → logprob: -11.883940696716309
    7. ')

' → logprob: -13.133940696716309
    8. '                       ' → logprob: -14.008940696716309
    9. ').' → logprob: -14.133940696716309
    10. '   ' → logprob: -14.633940696716309

Token 642: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014389962889254093
    2. '   ' → logprob: -4.764389991760254
    3. '
' → logprob: -5.389389991760254
    4. ' if' → logprob: -7.889389991760254
    5. '               ' → logprob: -8.764389991760254
    6. 'if' → logprob: -8.889389991760254
    7. '       ' → logprob: -8.889389991760254
    8. '           ' → logprob: -9.514389991760254
    9. '                    
' → logprob: -9.514389991760254
    10. '```' → logprob: -9.889389991760254

Token 643: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7020964622497559
    2. 'if' (adapté à ' if') → logprob: -1.0770964622497559
    3. ' if' → logprob: -1.8270964622497559
    4. '   ' → logprob: -6.577096462249756
    5. '       ' → logprob: -8.202096939086914
    6. '               ' → logprob: -8.327096939086914
    7. 'change' → logprob: -8.452096939086914
    8. '           ' → logprob: -8.577096939086914
    9. ' change' → logprob: -8.827096939086914
    10. '
' → logprob: -9.077096939086914

Token 644: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.013068697415292263
    2. 'len' → logprob: -4.513068675994873
    3. ' used' → logprob: -6.638068675994873
    4. 'not' → logprob: -7.388068675994873
    5. 'ch' → logprob: -10.513069152832031
    6. '   ' → logprob: -11.013069152832031
    7. '  ' → logprob: -11.138069152832031
    8. ' len' → logprob: -11.388069152832031
    9. ' not' → logprob: -11.388069152832031
    10. ' ' → logprob: -12.388069152832031

Token 645: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -7.3458322731312364e-06
    2. 'coins' → logprob: -12.750007629394531
    3. '_used' → logprob: -14.000007629394531
    4. '
' → logprob: -14.250007629394531
    5. 'co' → logprob: -14.875007629394531
    6. '_' → logprob: -15.375007629394531
    7. '_coin' → logprob: -15.375007629394531
    8. '```' → logprob: -15.625007629394531
    9. 'used' → logprob: -15.625007629394531
    10. '.co' → logprob: -16.25000762939453

Token 646: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0011069943429902196
    2. '_co' → logprob: -7.876107215881348
    3. '_ins' → logprob: -8.126107215881348
    4. '_used' → logprob: -8.251107215881348
    5. 'coins' → logprob: -10.001107215881348
    6. 'in' → logprob: -10.251107215881348
    7. 'used' → logprob: -10.626107215881348
    8. 'is' → logprob: -10.876107215881348
    9. 'ined' → logprob: -12.126107215881348
    10. '_' → logprob: -12.126107215881348

Token 647: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.001080683316104114
    2. '[' → logprob: -8.626080513000488
    3. '[i' → logprob: -8.751080513000488
    4. '_used' → logprob: -8.751080513000488
    5. 'used' → logprob: -8.876080513000488
    6. '&' → logprob: -8.876080513000488
    7. 'set' → logprob: -9.126080513000488
    8. '.inter' → logprob: -10.126080513000488
    9. '.' → logprob: -10.501080513000488
    10. 'intersection' → logprob: -10.626080513000488

Token 648: ' &' (ID: 827)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0655420571565628
    2. '.inter' → logprob: -3.315541982650757
    3. 'is' → logprob: -4.315542221069336
    4. '.' → logprob: -4.690542221069336
    5. '&' → logprob: -5.690542221069336
    6. ' &' → logprob: -6.815542221069336
    7. '   ' → logprob: -10.065542221069336
    8. ' .' → logprob: -10.315542221069336
    9. 'and' → logprob: -11.065542221069336
    10. 'intersection' → logprob: -12.190542221069336

Token 649: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0011709370883181691
    2. ' ch' → logprob: -6.751171112060547
    3. '	ch' → logprob: -14.751171112060547
    4. '   ' → logprob: -16.126171112060547
    5. ' ' → logprob: -16.876171112060547
    6. '(ch' → logprob: -17.251171112060547
    7. 'chg' → logprob: -17.501171112060547
    8. '[ch' → logprob: -17.751171112060547
    9. 'co' → logprob: -18.376171112060547
    10. '```' → logprob: -18.626171112060547

Token 650: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -9.610702363715973e-06
    2. 'used' → logprob: -11.875009536743164
    3. '_changed' → logprob: -13.625009536743164
    4. 'Used' → logprob: -14.375009536743164
    5. '```' → logprob: -15.500009536743164
    6. '_USED' → logprob: -16.125009536743164
    7. '_' → logprob: -16.375009536743164
    8. '_co' → logprob: -17.125009536743164
    9. '_unused' → logprob: -17.375009536743164
    10. '[' → logprob: -17.625009536743164

Token 651: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. 'change' → logprob: -12.125005722045898
    3. ' [' → logprob: -15.000005722045898
    4. '```' → logprob: -16.3750057220459
    5. '(change' → logprob: -16.3750057220459
    6. '[ch' → logprob: -17.3750057220459
    7. '{' → logprob: -17.7500057220459
    8. '[
' → logprob: -18.0000057220459
    9. ' change' → logprob: -18.2500057220459
    10. 'Change' → logprob: -18.3750057220459

Token 652: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.06197318062186241
    2. '[' → logprob: -2.8119730949401855
    3. ' change' → logprob: -12.186973571777344
    4. '(change' → logprob: -15.436973571777344
    5. '
' → logprob: -17.311973571777344
    6. '_change' → logprob: -17.561973571777344
    7. '```' → logprob: -17.561973571777344
    8. 'Change' → logprob: -17.936973571777344
    9. '   ' → logprob: -18.311973571777344
    10. ' [' → logprob: -18.311973571777344

Token 653: ']:
' (ID: 22152)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09974274039268494
    2. '):' → logprob: -2.7247426509857178
    3. '):
' → logprob: -4.224742889404297
    4. ')==' → logprob: -4.349742889404297
    5. '])' → logprob: -6.974742889404297
    6. '==' → logprob: -8.474742889404297
    7. ':' → logprob: -8.849742889404297
    8. ']==' → logprob: -9.349742889404297
    9. ']' → logprob: -9.599742889404297
    10. ')!=' → logprob: -9.849742889404297

Token 654: '                       ' (ID: 968)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14434948563575745
    2. '==' → logprob: -2.2693495750427246
    3. '                       ' → logprob: -3.6443495750427246
    4. ':' → logprob: -6.269349575042725
    5. '                   ' → logprob: -6.894349575042725
    6. ')==' → logprob: -6.894349575042725
    7. ':
' → logprob: -8.019349098205566
    8. ')' → logprob: -8.769349098205566
    9. '                           ' → logprob: -8.894349098205566
    10. ' continue' → logprob: -9.019349098205566

Token 655: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5453873872756958
    2. '                           ' → logprob: -1.7953873872756958
    3. ' continue' → logprob: -1.7953873872756958
    4. '                       ' → logprob: -2.5453872680664062
    5. '                   ' → logprob: -4.670387268066406
    6. '                               ' → logprob: -8.670387268066406
    7. '           ' → logprob: -9.295387268066406
    8. '   ' → logprob: -9.795387268066406
    9. '	continue' → logprob: -9.795387268066406
    10. '               ' → logprob: -9.920387268066406

Token 656: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09863438457250595
    2. '
' → logprob: -2.4736344814300537
    3. '                    
' → logprob: -4.848634243011475
    4. '    
' → logprob: -7.473634243011475
    5. '  
' → logprob: -8.223634719848633
    6. '                        
' → logprob: -8.723634719848633
    7. '               ' → logprob: -8.848634719848633
    8. '       ' → logprob: -9.098634719848633
    9. '        
' → logprob: -9.348634719848633
    10. '<|end|>' → logprob: -9.723634719848633

Token 657: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0023460383526980877
    2. '               ' → logprob: -7.377346038818359
    3. '
' → logprob: -7.502346038818359
    4. '```' → logprob: -8.00234603881836
    5. '                    
' → logprob: -8.00234603881836
    6. '                       ' → logprob: -8.50234603881836
    7. '       ' → logprob: -9.12734603881836
    8. '           ' → logprob: -9.87734603881836
    9. '                        
' → logprob: -10.62734603881836
    10. '                    ' → logprob: -11.00234603881836

Token 658: ' total' (ID: 3609)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5141137838363647
    2. 'total' (adapté à ' total') → logprob: -1.7641137838363647
    3. 'coin' → logprob: -2.0141139030456543
    4. 'usage' → logprob: -3.0141139030456543
    5. ' usage' → logprob: -4.639113903045654
    6. ' total' → logprob: -4.639113903045654
    7. 'coins' → logprob: -4.764113903045654
    8. 'if' → logprob: -5.514113903045654
    9. 'current' → logprob: -5.639113903045654
    10. '   ' → logprob: -6.014113903045654

Token 659: '_co' (ID: 21102)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485982745885849
    2. '=' → logprob: -3.048598289489746
    3. '_co' → logprob: -12.298598289489746
    4. '_tokens' → logprob: -13.673598289489746
    5. '_coin' → logprob: -13.798598289489746
    6. 'coins' → logprob: -14.048598289489746
    7. '_' → logprob: -14.298598289489746
    8. ' coins' → logprob: -14.423598289489746
    9. '_count' → logprob: -14.423598289489746
    10. '   ' → logprob: -15.298598289489746

Token 660: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.011507999151945114
    2. 'in' → logprob: -4.886507987976074
    3. 'unt' → logprob: -5.886507987976074
    4. 'unts' → logprob: -7.136507987976074
    5. '=' → logprob: -8.886507987976074
    6. ' =' → logprob: -10.011507987976074
    7. '   ' → logprob: -10.386507987976074
    8. 'ints' → logprob: -10.761507987976074
    9. 'uns' → logprob: -10.886507987976074
    10. 'int' → logprob: -11.011507987976074

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692999839782715
    2. '=' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.751930236816406
    4. '    ' → logprob: -15.376930236816406
    5. ')' → logprob: -15.751930236816406
    6. '=count' → logprob: -15.876930236816406
    7. ' ' → logprob: -16.126930236816406
    8. '=sum' → logprob: -16.876930236816406
    9. '	' → logprob: -17.126930236816406
    10. '  ' → logprob: -17.251930236816406

Token 662: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.37554579973220825
    2. 'coin' → logprob: -1.2505457401275635
    3. ' sum' → logprob: -3.8755457401275635
    4. ' coin' → logprob: -5.125545978546143
    5. ' ' → logprob: -10.625545501708984
    6. '   ' → logprob: -10.875545501708984
    7. '(sum' → logprob: -13.000545501708984
    8. '  ' → logprob: -13.125545501708984
    9. '    ' → logprob: -14.750545501708984
    10. 'Coin' → logprob: -14.875545501708984

Token 663: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02975292131304741
    2. 'usage' → logprob: -3.5297529697418213
    3. ' usage' → logprob: -13.904752731323242
    4. '([' → logprob: -14.154752731323242
    5. 'u' → logprob: -15.154752731323242
    6. '(u' → logprob: -15.529752731323242
    7. '((' → logprob: -15.779752731323242
    8. '_usage' → logprob: -16.279752731323242
    9. 'Usage' → logprob: -16.779752731323242
    10. '[' → logprob: -16.904752731323242

Token 664: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.0004320996522437781
    2. '(' → logprob: -7.750432014465332
    3. ' usage' → logprob: -13.750432014465332
    4. '[' → logprob: -15.750432014465332
    5. ')' → logprob: -16.12543296813965
    6. 'u' → logprob: -16.87543296813965
    7. '_usage' → logprob: -18.25043296813965
    8. 'Usage' → logprob: -18.62543296813965
    9. 'us' → logprob: -18.87543296813965
    10. '   ' → logprob: -19.37543296813965

Token 665: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891127467155457
    2. ')+' → logprob: -2.578911304473877
    3. ')
' → logprob: -11.703910827636719
    4. '+' → logprob: -12.453910827636719
    5. ')-' → logprob: -12.953910827636719
    6. ' )' → logprob: -13.203910827636719
    7. ' +' → logprob: -13.453910827636719
    8. '[' → logprob: -14.203910827636719
    9. ')+(' → logprob: -14.328910827636719
    10. '   ' → logprob: -14.578910827636719

Token 666: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20155180990695953
    2. '+' → logprob: -1.7015517950057983
    3. '                   ' → logprob: -9.07655143737793
    4. '   ' → logprob: -11.82655143737793
    5. '
' → logprob: -12.57655143737793
    6. '+
' → logprob: -12.82655143737793
    7. '```' → logprob: -12.82655143737793
    8. ' +
' → logprob: -13.20155143737793
    9. ')' → logprob: -14.20155143737793
    10. ' ' → logprob: -14.20155143737793

Token 667: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.8624639324116288e-06
    2. ' ch' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '	ch' → logprob: -20.875001907348633
    5. '[ch' → logprob: -22.000001907348633
    6. ' ' → logprob: -22.750001907348633
    7. '(ch' → logprob: -22.750001907348633
    8. '  ' → logprob: -22.875001907348633
    9. '           ' → logprob: -23.250001907348633
    10. '                   ' → logprob: -23.625001907348633

Token 668: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.7848862373502925e-05
    2. 'min' → logprob: -10.500027656555176
    3. '_used' → logprob: -16.125028610229492
    4. '```' → logprob: -17.000028610229492
    5. '[min' → logprob: -17.750028610229492
    6. 'Min' → logprob: -17.875028610229492
    7. 'used' → logprob: -18.500028610229492
    8. '[' → logprob: -18.625028610229492
    9. '_max' → logprob: -18.875028610229492
    10. '_MIN' → logprob: -19.375028610229492

Token 669: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -9.088346359931165e-07
    2. 'co' → logprob: -14.375000953674316
    3. ' coins' → logprob: -16.0
    4. '_co' → logprob: -16.375
    5. 'coin' → logprob: -17.5
    6. 'chips' → logprob: -17.75
    7. '
' → logprob: -18.375
    8. 'cards' → logprob: -18.5
    9. '```' → logprob: -18.875
    10. 'c' → logprob: -19.0

Token 670: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. 'change' → logprob: -13.125001907348633
    3. '(change' → logprob: -16.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. ' [' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.500001907348633
    7. '
' → logprob: -17.625001907348633
    8. '_change' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '\[' → logprob: -18.625001907348633

Token 671: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -10.875020980834961
    3. ' change' → logprob: -13.625020980834961
    4. '(change' → logprob: -14.375020980834961
    5. '```' → logprob: -19.75002098083496
    6. '	change' → logprob: -20.00002098083496
    7. '   ' → logprob: -20.50002098083496
    8. '.change' → logprob: -20.62502098083496
    9. ')' → logprob: -20.62502098083496
    10. '
' → logprob: -21.12502098083496

Token 672: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2889851927757263
    2. '                   ' → logprob: -2.038985252380371
    3. '
' → logprob: -2.663985252380371
    4. ')
' → logprob: -3.663985252380371
    5. '   ' → logprob: -3.788985252380371
    6. '<|end|>' → logprob: -7.413985252380371
    7. '               ' → logprob: -7.538985252380371
    8. ']' → logprob: -8.163985252380371
    9. '       ' → logprob: -8.663985252380371
    10. '           ' → logprob: -8.788985252380371

Token 673: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.032088540494441986
    2. '
' → logprob: -4.657088756561279
    3. '<|end|>' → logprob: -5.282088756561279
    4. '   ' → logprob: -5.532088756561279
    5. 'if' → logprob: -5.907088756561279
    6. ' if' → logprob: -6.157088756561279
    7. '                    
' → logprob: -6.282088756561279
    8. '               ' → logprob: -6.657088756561279
    9. '       ' → logprob: -7.282088756561279
    10. ')' → logprob: -7.407088756561279

Token 674: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12331937253475189
    2. ' if' → logprob: -2.748319387435913
    3. 'if' (adapté à ' if') → logprob: -2.998319387435913
    4. '
' → logprob: -7.373319149017334
    5. '                    
' → logprob: -7.873319149017334
    6. '               ' → logprob: -8.123319625854492
    7. '                       ' → logprob: -8.373319625854492
    8. '   ' → logprob: -8.873319625854492
    9. '       ' → logprob: -9.123319625854492
    10. '           ' → logprob: -9.748319625854492

Token 675: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3868763744831085
    2. 'total' → logprob: -1.1368763446807861
    3. '	total' → logprob: -13.011876106262207
    4. '(total' → logprob: -13.886876106262207
    5. '                   ' → logprob: -14.011876106262207
    6. '                       ' → logprob: -14.636876106262207
    7. '   ' → logprob: -14.761876106262207
    8. ' ' → logprob: -16.511877059936523
    9. '                           ' → logprob: -16.511877059936523
    10. 'Total' → logprob: -16.761877059936523

Token 676: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00011617878044489771
    2. ' <' → logprob: -10.125116348266602
    3. '<' → logprob: -10.250116348266602
    4. '_total' → logprob: -10.250116348266602
    5. 'total' → logprob: -13.250116348266602
    6. '<_' → logprob: -14.375116348266602
    7. '_' → logprob: -14.500116348266602
    8. '_tokens' → logprob: -15.000116348266602
    9. '   ' → logprob: -15.125116348266602
    10. 's' → logprob: -15.375116348266602

Token 677: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.03062177635729313
    2. 'coins' → logprob: -4.4056220054626465
    3. '_co' → logprob: -4.6556220054626465
    4. 'o' → logprob: -5.1556220054626465
    5. 'in' → logprob: -7.4056220054626465
    6. '_' → logprob: -7.5306220054626465
    7. '_ins' → logprob: -7.7806220054626465
    8. 'oints' → logprob: -8.780621528625488
    9. 'oin' → logprob: -8.905621528625488
    10. '>' → logprob: -9.280621528625488

Token 678: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11294539272785187
    2. '<' → logprob: -2.237945318222046
    3. ' <=' → logprob: -9.237945556640625
    4. ' >=' → logprob: -11.487945556640625
    5. '<=' → logprob: -12.487945556640625
    6. ' >' → logprob: -12.987945556640625
    7. '[' → logprob: -12.987945556640625
    8. ' <
' → logprob: -13.237945556640625
    9. '<int' → logprob: -13.987945556640625
    10. '<|end|>' → logprob: -14.487945556640625

Token 679: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0007100477814674377
    2. ' best' → logprob: -7.2507100105285645
    3. '	best' → logprob: -17.875709533691406
    4. '(best' → logprob: -20.250709533691406
    5. '```' → logprob: -21.500709533691406
    6. '   ' → logprob: -22.250709533691406
    7. '_best' → logprob: -22.250709533691406
    8. '.best' → logprob: -22.750709533691406
    9. 'Best' → logprob: -22.750709533691406
    10. '
' → logprob: -22.875709533691406

Token 680: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39630886912345886
    2. ':
' → logprob: -1.1463088989257812
    3. '                       ' → logprob: -4.896308898925781
    4. '                   ' → logprob: -7.021308898925781
    5. '               ' → logprob: -8.021308898925781
    6. '       ' → logprob: -8.021308898925781
    7. '                           ' → logprob: -9.396308898925781
    8. '           ' → logprob: -9.521308898925781
    9. '):
' → logprob: -9.896308898925781
    10. '=' → logprob: -10.896308898925781

Token 681: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018781539052724838
    2. '                   ' → logprob: -4.143781661987305
    3. ' best' → logprob: -6.893781661987305
    4. 'best' → logprob: -7.018781661987305
    5. '(best' → logprob: -8.393781661987305
    6. '                           ' → logprob: -8.518781661987305
    7. '                               ' → logprob: -9.143781661987305
    8. '               ' → logprob: -9.518781661987305
    9. '```' → logprob: -9.768781661987305
    10. '                        
' → logprob: -9.893781661987305

Token 682: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.01884998381137848
    2. ' best' → logprob: -4.018849849700928
    3. '                       ' → logprob: -7.518849849700928
    4. 'ans' → logprob: -9.018850326538086
    5. '                           ' → logprob: -11.018850326538086
    6. ' ans' → logprob: -11.393850326538086
    7. '                   ' → logprob: -13.143850326538086
    8. '	best' → logprob: -13.518850326538086
    9. '           ' → logprob: -13.643850326538086
    10. '```' → logprob: -13.768850326538086

Token 683: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889800414443016
    2. '=' → logprob: -2.463979959487915
    3. ',' → logprob: -10.213979721069336
    4. ' =
' → logprob: -12.963979721069336
    5. ' ,' → logprob: -14.963979721069336
    6. '<|end|>' → logprob: -14.963979721069336
    7. '=
' → logprob: -15.713979721069336
    8. '＝' → logprob: -15.713979721069336
    9. ' ' → logprob: -16.338979721069336
    10. ')' → logprob: -16.713979721069336

Token 684: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.011047814972698689
    2. ' total' → logprob: -4.511047840118408
    3. '	total' → logprob: -17.76104736328125
    4. '                   ' → logprob: -18.76104736328125
    5. '   ' → logprob: -18.88604736328125
    6. 'to' → logprob: -19.63604736328125
    7. '(total' → logprob: -19.76104736328125
    8. 'tot' → logprob: -19.76104736328125
    9. 'Total' → logprob: -19.88604736328125
    10. '$total' → logprob: -20.13604736328125

Token 685: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -5.931863051955588e-05
    2. '_tokens' → logprob: -10.125059127807617
    3. 'coins' → logprob: -11.125059127807617
    4. '_coin' → logprob: -13.125059127807617
    5. 'co' → logprob: -14.625059127807617
    6. 'Coins' → logprob: -15.000059127807617
    7. ')' → logprob: -15.375059127807617
    8. '```' → logprob: -15.375059127807617
    9. 'tokens' → logprob: -15.625059127807617
    10. ' coins' → logprob: -15.750059127807617

Token 686: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -6.718606891809031e-05
    2. 'coins' → logprob: -10.500066757202148
    3. '```' → logprob: -11.750066757202148
    4. '   ' → logprob: -12.125066757202148
    5. '               ' → logprob: -12.500066757202148
    6. 'is' → logprob: -12.875066757202148
    7. 'ints' → logprob: -12.875066757202148
    8. 'ns' → logprob: -13.125066757202148
    9. '       ' → logprob: -13.250066757202148
    10. '
' → logprob: -13.625066757202148

Token 687: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003488129877950996
    2. '               ' → logprob: -9.500349044799805
    3. '                   ' → logprob: -9.625349044799805
    4. '```' → logprob: -9.625349044799805
    5. '                        ' → logprob: -9.875349044799805
    6. '<|end|>' → logprob: -10.625349044799805
    7. '                        
' → logprob: -11.000349044799805
    8. '           ' → logprob: -11.125349044799805
    9. '                           ' → logprob: -11.125349044799805
    10. '                      ' → logprob: -12.000349044799805

Token 688: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.370294846012257e-05
    2. '                   ' → logprob: -10.375043869018555
    3. '                      ' → logprob: -12.875043869018555
    4. '               ' → logprob: -13.250043869018555
    5. '```' → logprob: -13.375043869018555
    6. '           ' → logprob: -13.375043869018555
    7. '                           ' → logprob: -13.625043869018555
    8. '                        ' → logprob: -13.750043869018555
    9. '       ' → logprob: -14.625043869018555
    10. '                        
' → logprob: -15.000043869018555

Token 689: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.000518482003826648
    2. ' ans' → logprob: -7.750518321990967
    3. '                   ' → logprob: -9.875518798828125
    4. '                       ' → logprob: -10.750518798828125
    5. 'answer' → logprob: -11.625518798828125
    6. '                           ' → logprob: -13.625518798828125
    7. '(ans' → logprob: -13.750518798828125
    8. '	ans' → logprob: -13.750518798828125
    9. '               ' → logprob: -14.625518798828125
    10. 'usage' → logprob: -14.625518798828125

Token 690: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42886587977409363
    2. '=' → logprob: -1.053865909576416
    3. '<|end|>' → logprob: -9.178865432739258
    4. ')' → logprob: -11.678865432739258
    5. '＝' → logprob: -11.678865432739258
    6. '=None' → logprob: -12.303865432739258
    7. '_' → logprob: -12.428865432739258
    8. '_=' → logprob: -12.553865432739258
    9. '=[' → logprob: -12.928865432739258
    10. '=True' → logprob: -12.928865432739258

Token 691: ' usage' (ID: 16622)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.41020113229751587
    2. 'usage' → logprob: -1.160201072692871
    3. '(' → logprob: -4.035201072692871
    4. ' tuple' → logprob: -5.535201072692871
    5. '(tuple' → logprob: -7.160201072692871
    6. ' usage' → logprob: -7.535201072692871
    7. ' (' → logprob: -9.410201072692871
    8. '   ' → logprob: -11.035201072692871
    9. '[' → logprob: -11.910201072692871
    10. 'list' → logprob: -12.660201072692871

Token 692: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09465818852186203
    2. '
' → logprob: -2.594658136367798
    3. 'return' → logprob: -4.594658374786377
    4. 'if' → logprob: -5.594658374786377
    5. '    
' → logprob: -6.969658374786377
    6. ' if' → logprob: -7.844658374786377
    7. ' return' → logprob: -9.344657897949219
    8. '                   ' → logprob: -9.344657897949219
    9. '                        
' → logprob: -9.344657897949219
    10. '                       ' → logprob: -9.719657897949219

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38062313199043274
    2. 'return' → logprob: -1.6306231021881104
    3. 'if' → logprob: -2.1306231021881104
    4. ' if' → logprob: -6.6306233406066895
    5. ' return' → logprob: -7.6306233406066895
    6. '
' → logprob: -9.255622863769531
    7. '```' → logprob: -9.755622863769531
    8. 'print' → logprob: -10.880622863769531
    9. '    
' → logprob: -11.630622863769531
    10. '                   ' → logprob: -13.505622863769531

Token 694: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16683466732501984
    2. 'return' (adapté à ' return') → logprob: -1.9168347120285034
    3. '   ' → logprob: -5.166834831237793
    4. ' if' → logprob: -7.166834831237793
    5. ' return' → logprob: -9.166834831237793
    6. '```' → logprob: -12.166834831237793
    7. 'print' → logprob: -12.541834831237793
    8. 'for' → logprob: -14.166834831237793
    9. '
' → logprob: -16.166833877563477
    10. '    
' → logprob: -16.291833877563477

Token 695: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00012415809032972902
    2. ' ans' → logprob: -9.000123977661133
    3. 'tuple' → logprob: -15.000123977661133
    4. '(ans' → logprob: -15.250123977661133
    5. '	ans' → logprob: -17.250123977661133
    6. 'list' → logprob: -18.375123977661133
    7. 'answer' → logprob: -18.875123977661133
    8. '```' → logprob: -19.625123977661133
    9. 'None' → logprob: -20.000123977661133
    10. '   ' → logprob: -20.500123977661133

Token 696: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 697: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0006563199567608535
    2. 'main' → logprob: -7.3756561279296875
    3. '_main' → logprob: -10.750656127929688
    4. ' ' → logprob: -13.000656127929688
    5. ' pay' → logprob: -13.000656127929688
    6. ' coin' → logprob: -13.625656127929688
    7. ' payment' → logprob: -14.250656127929688
    8. '_' → logprob: -14.250656127929688
    9. ' test' → logprob: -15.500656127929688
    10. ' print' → logprob: -15.500656127929688

Token 699: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00028934504371136427
    2. '():
' → logprob: -8.375288963317871
    3. ' ():' → logprob: -10.125288963317871
    4. '()' → logprob: -11.000288963317871
    5. '(' → logprob: -13.625288963317871
    6. '():
' → logprob: -15.000288963317871
    7. '(argv' → logprob: -15.500288963317871
    8. '():

' → logprob: -16.000289916992188
    9. '()>' → logprob: -16.375289916992188
    10. '().' → logprob: -17.000289916992188

Token 700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003213960910215974
    2. ' pay' → logprob: -6.503213882446289
    3. ' import' → logprob: -7.253213882446289
    4. 'import' → logprob: -7.628213882446289
    5. 'pay' → logprob: -8.878213882446289
    6. ' line' → logprob: -8.878213882446289
    7. '```' → logprob: -8.878213882446289
    8. ' input' → logprob: -10.753213882446289
    9. ' readline' → logprob: -10.878213882446289
    10. ' payment' → logprob: -11.628213882446289

Token 701: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.24521921575069427
    2. 'n' → logprob: -2.1202192306518555
    3. '   ' → logprob: -2.8702192306518555
    4. 'import' → logprob: -3.9952192306518555
    5. ' import' → logprob: -4.1202192306518555
    6. ' N' → logprob: -5.9952192306518555
    7. ' pay' → logprob: -7.1202192306518555
    8. ' for' → logprob: -7.3702192306518555
    9. 'N' → logprob: -7.4952192306518555
    10. 'pay' → logprob: -7.7452192306518555

Token 702: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3345252573490143
    2. '_line' → logprob: -1.334525227546692
    3. '_data' → logprob: -4.209525108337402
    4. '_lines' → logprob: -6.209525108337402
    5. '().' → logprob: -6.709525108337402
    6. '_' → logprob: -6.709525108337402
    7. '_str' → logprob: -7.459525108337402
    8. 'line' → logprob: -7.959525108337402
    9. ' =' → logprob: -8.709525108337402
    10. '_text' → logprob: -8.959525108337402

Token 703: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519322335720062
    2. ' sys' → logprob: -1.5019322633743286
    3. '	sys' → logprob: -13.876932144165039
    4. '=sys' → logprob: -13.876932144165039
    5. 'input' → logprob: -14.251932144165039
    6. '(sys' → logprob: -14.501932144165039
    7. ' input' → logprob: -17.50193214416504
    8. 'lambda' → logprob: -17.50193214416504
    9. '```' → logprob: -19.37693214416504
    10. 'stdin' → logprob: -19.50193214416504

Token 704: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013083349040243775
    2. 'stdin' → logprob: -9.750130653381348
    3. '.readline' → logprob: -10.000130653381348
    4. '.argv' → logprob: -11.750130653381348
    5. '.stdout' → logprob: -11.875130653381348
    6. '.' → logprob: -12.125130653381348
    7. '.std' → logprob: -12.125130653381348
    8. '(stdin' → logprob: -14.750130653381348
    9. '.input' → logprob: -15.625130653381348
    10. ' stdin' → logprob: -15.875130653381348

Token 705: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05297339707612991
    2. 'read' → logprob: -3.427973508834839
    3. 'stdin' → logprob: -4.05297327041626
    4. 'buffer' → logprob: -7.30297327041626
    5. ' readline' → logprob: -7.80297327041626
    6. '_read' → logprob: -8.302973747253418
    7. '.stdin' → logprob: -8.927973747253418
    8. 'reader' → logprob: -9.552973747253418
    9. 'readonly' → logprob: -9.802973747253418
    10. 'input' → logprob: -9.802973747253418

Token 706: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3420124053955078
    2. '()' → logprob: -1.3420124053955078
    3. '()
' → logprob: -3.967012405395508
    4. '   ' → logprob: -4.717012405395508
    5. '
' → logprob: -9.092012405395508
    6. '()\' → logprob: -9.092012405395508
    7. 'while' → logprob: -9.842012405395508
    8. '():' → logprob: -10.717012405395508
    9. 'def' → logprob: -10.842012405395508
    10. '(),' → logprob: -11.217012405395508

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002034634118899703
    2. 'pay' → logprob: -7.002034664154053
    3. '    
' → logprob: -7.127034664154053
    4. 'while' → logprob: -9.252034187316895
    5. 'n' → logprob: -10.127034187316895
    6. '
' → logprob: -10.752034187316895
    7. '```' → logprob: -10.877034187316895
    8. 'p' → logprob: -10.877034187316895
    9. '(pay' → logprob: -10.877034187316895
    10. '()' → logprob: -11.127034187316895

Token 708: ' first' (ID: 1577)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9721105098724365
    2. 'T' → logprob: -1.0971105098724365
    3. 'n' → logprob: -1.7221105098724365
    4. '   ' → logprob: -2.8471105098724365
    5. ' T' → logprob: -4.097110748291016
    6. 'N' → logprob: -4.597110748291016
    7. ' t' → logprob: -4.847110748291016
    8. 'while' → logprob: -5.222110748291016
    9. ' n' → logprob: -5.847110748291016
    10. 'Q' → logprob: -6.097110748291016

Token 709: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21089418232440948
    2. '_line' → logprob: -1.710894227027893
    3. '().' → logprob: -5.5858941078186035
    4. 'line' → logprob: -5.9608941078186035
    5. ' =' → logprob: -6.9608941078186035
    6. '=' → logprob: -7.2108941078186035
    7. ' ()' → logprob: -8.335894584655762
    8. '_' → logprob: -8.585894584655762
    9. '()\' → logprob: -8.835894584655762
    10. '.' → logprob: -9.085894584655762

Token 710: ' True' (ID: 6432)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033782050013542175
    2. 'sys' → logprob: -3.9087820053100586
    3. 'int' → logprob: -5.158782005310059
    4. ' input' → logprob: -5.658782005310059
    5. '()' → logprob: -5.783782005310059
    6. ' sys' → logprob: -8.158782005310059
    7. '().' → logprob: -8.408782005310059
    8. 'True' → logprob: -8.908782005310059
    9. '   ' → logprob: -9.783782005310059
    10. ' True' → logprob: -10.158782005310059

Token 711: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20504669845104218
    2. 'while' → logprob: -2.4550466537475586
    3. '
' → logprob: -2.8300466537475586
    4. ' while' → logprob: -3.5800466537475586
    5. '```' → logprob: -5.080046653747559
    6. '    
' → logprob: -5.705046653747559
    7. '	while' → logprob: -6.580046653747559
    8. ':' → logprob: -8.205046653747559
    9. '<|end|>' → logprob: -8.205046653747559
    10. '  
' → logprob: -8.205046653747559

Token 712: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.48120275139808655
    2. ' while' → logprob: -1.1062027215957642
    3. '   ' → logprob: -3.3562028408050537
    4. '
' → logprob: -4.981202602386475
    5. '	while' → logprob: -6.106202602386475
    6. 'for' → logprob: -6.481202602386475
    7. '```' → logprob: -6.481202602386475
    8. ' for' → logprob: -6.606202602386475
    9. '    
' → logprob: -6.731202602386475
    10. '  
' → logprob: -7.356202602386475

Token 713: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11304399371147156
    2. ' while' → logprob: -2.363044023513794
    3. '   ' → logprob: -4.363043785095215
    4. '	while' → logprob: -11.488043785095215
    5. 'for' → logprob: -12.488043785095215
    6. ' for' → logprob: -14.363043785095215
    7. 'line' → logprob: -14.738043785095215
    8. '```' → logprob: -14.863043785095215
    9. '    
' → logprob: -16.11304473876953
    10. ' line' → logprob: -16.36304473876953

Token 714: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5772313475608826
    2. 'True' → logprob: -0.8272313475608826
    3. '(True' → logprob: -6.702231407165527
    4. ' line' → logprob: -10.577231407165527
    5. 'line' → logprob: -10.952231407165527
    6. '   ' → logprob: -11.577231407165527
    7. '1' → logprob: -12.202231407165527
    8. ' ' → logprob: -12.577231407165527
    9. ' not' → logprob: -14.952231407165527
    10. '(' → logprob: -14.952231407165527

Token 715: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6201462745666504
    2. '():' → logprob: -1.1201462745666504
    3. '():
' → logprob: -2.9951462745666504
    4. ':
' → logprob: -3.2451462745666504
    5. '       ' → logprob: -3.3701462745666504
    6. '   ' → logprob: -4.74514627456665
    7. ',' → logprob: -6.37014627456665
    8. '(' → logprob: -7.12014627456665
    9. ' and' → logprob: -8.870145797729492
    10. ' (' → logprob: -8.995145797729492

Token 716: '       ' (ID: 309)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7067268490791321
    2. '       ' → logprob: -1.7067267894744873
    3. 'line' → logprob: -1.8317267894744873
    4. '   ' → logprob: -1.8317267894744873
    5. '	line' → logprob: -5.456727027893066
    6. '#line' → logprob: -7.831727027893066
    7. '(line' → logprob: -8.706727027893066
    8. '[line' → logprob: -10.331727027893066
    9. '    ' → logprob: -10.456727027893066
    10. '_line' → logprob: -10.831727027893066

Token 717: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.10759127885103226
    2. 's' → logprob: -3.232591390609741
    3. '   ' → logprob: -3.482591390609741
    4. ' line' → logprob: -3.607591390609741
    5. 'l' → logprob: -5.732591152191162
    6. 'n' → logprob: -7.857591152191162
    7. 'pay' → logprob: -8.23259162902832
    8. '	line' → logprob: -8.48259162902832
    9. '       ' → logprob: -8.60759162902832
    10. ' s' → logprob: -8.85759162902832

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47411441802978516
    2. ' =' → logprob: -0.9741144180297852
    3. '=line' → logprob: -10.224114418029785
    4. '＝' → logprob: -14.724114418029785
    5. 's' → logprob: -15.599114418029785
    6. '=input' → logprob: -15.974114418029785
    7. '_' → logprob: -16.72411346435547
    8. '=sys' → logprob: -16.72411346435547
    9. ' ' → logprob: -16.72411346435547
    10. '.' → logprob: -16.72411346435547

Token 719: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.049526944756507874
    2. ' input' → logprob: -3.0495269298553467
    3. 'sys' → logprob: -7.049527168273926
    4. ' sys' → logprob: -9.549527168273926
    5. '(input' → logprob: -19.79952621459961
    6. '=input' → logprob: -20.17452621459961
    7. 'import' → logprob: -20.54952621459961
    8. ' ' → logprob: -20.92452621459961
    9. '	input' → logprob: -20.92452621459961
    10. '(sys' → logprob: -21.04952621459961

Token 720: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10034534335136414
    2. '().' → logprob: -2.3503453731536865
    3. '()
' → logprob: -9.725345611572266
    4. '.strip' → logprob: -10.350345611572266
    5. '=' → logprob: -10.975345611572266
    6. '.' → logprob: -11.725345611572266
    7. '(' → logprob: -11.975345611572266
    8. '();' → logprob: -12.600345611572266
    9. '()

' → logprob: -13.225345611572266
    10. ')' → logprob: -13.600345611572266

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5716657042503357
    2. ' if' → logprob: -1.9466657638549805
    3. '   ' → logprob: -2.1966657638549805
    4. '<|end|>' → logprob: -2.6966657638549805
    5. '.strip' → logprob: -3.1966657638549805
    6. '
' → logprob: -3.9466657638549805
    7. '=' → logprob: -4.3216657638549805
    8. 'if' → logprob: -4.4466657638549805
    9. '.rstrip' → logprob: -5.3216657638549805
    10. ' =' → logprob: -5.6966657638549805

Token 722: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3133071959018707
    2. 'if' (adapté à ' if') → logprob: -1.3133071660995483
    3. '       ' → logprob: -10.43830680847168
    4. 'If' → logprob: -11.93830680847168
    5. '	if' → logprob: -11.93830680847168
    6. '   ' → logprob: -13.81330680847168
    7. '<|end|>' → logprob: -13.81330680847168
    8. '           ' → logprob: -15.56330680847168
    9. '    ' → logprob: -15.56330680847168
    10. '        ' → logprob: -15.93830680847168

Token 723: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10065367817878723
    2. 'not' → logprob: -2.350653648376465
    3. 'line' → logprob: -8.100653648376465
    4. ' line' → logprob: -8.850653648376465
    5. '#line' → logprob: -15.475653648376465
    6. '!' → logprob: -16.60065460205078
    7. ' ' → logprob: -16.72565460205078
    8. '(line' → logprob: -17.35065460205078
    9. '[line' → logprob: -18.35065460205078
    10. '=line' → logprob: -18.47565460205078

Token 724: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16022422909736633
    2. ' line' → logprob: -1.910224199295044
    3. '(line' → logprob: -17.66022491455078
    4. '#line' → logprob: -17.78522491455078
    5. '	line' → logprob: -18.78522491455078
    6. '=line' → logprob: -19.28522491455078
    7. '[line' → logprob: -19.66022491455078
    8. '_line' → logprob: -22.03522491455078
    9. 'Line' → logprob: -22.16022491455078
    10. '
' → logprob: -22.78522491455078

Token 725: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.143689826130867
    2. ':' → logprob: -2.3936898708343506
    3. '.' → logprob: -3.5186898708343506
    4. ':
' → logprob: -4.5186896324157715
    5. '.rstrip' → logprob: -7.0186896324157715
    6. ' or' → logprob: -7.1436896324157715
    7. '.startswith' → logprob: -9.14369010925293
    8. 'strip' → logprob: -10.26869010925293
    9. '   ' → logprob: -10.51869010925293
    10. ' .' → logprob: -10.51869010925293

Token 726: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20207810401916504
    2. '           ' → logprob: -1.702078104019165
    3. '   ' → logprob: -7.577077865600586
    4. ' break' → logprob: -10.577077865600586
    5. '     ' → logprob: -10.827077865600586
    6. '      ' → logprob: -11.077077865600586
    7. ',' → logprob: -11.202077865600586
    8. ' or' → logprob: -11.452077865600586
    9. '               ' → logprob: -11.577077865600586
    10. '          ' → logprob: -11.702077865600586

Token 727: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4953783452510834
    2. ' break' → logprob: -0.9953783750534058
    3. '       ' → logprob: -3.995378255844116
    4. '           ' → logprob: -6.745378494262695
    5. 'return' → logprob: -7.120378494262695
    6. '	break' → logprob: -7.620378494262695
    7. '   ' → logprob: -8.870378494262695
    8. ' return' → logprob: -10.620378494262695
    9. '               ' → logprob: -11.120378494262695
    10. '_break' → logprob: -11.620378494262695

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014173806412145495
    2. '        
' → logprob: -7.25141716003418
    3. '<|end|>' → logprob: -8.12641716003418
    4. '   ' → logprob: -8.37641716003418
    5. '
' → logprob: -9.87641716003418
    6. 'tokens' → logprob: -10.25141716003418
    7. ',' → logprob: -10.75141716003418
    8. '\t' → logprob: -11.37641716003418
    9. '    
' → logprob: -11.37641716003418
    10. ' tokens' → logprob: -11.75141716003418

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020266619976609945
    2. '        
' → logprob: -6.752026557922363
    3. '
' → logprob: -7.752026557922363
    4. '   ' → logprob: -8.127026557922363
    5. '<|end|>' → logprob: -10.002026557922363
    6. '    
' → logprob: -10.627026557922363
    7. ',' → logprob: -10.877026557922363
    8. '	' → logprob: -11.377026557922363
    9. '           ' → logprob: -12.377026557922363
    10. ' payment' → logprob: -12.877026557922363

Token 730: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' (adapté à ' pay') → logprob: -0.7101016044616699
    2. ' pay' → logprob: -0.8351016044616699
    3. 'n' → logprob: -3.83510160446167
    4. 'p' → logprob: -4.33510160446167
    5. '   ' → logprob: -4.33510160446167
    6. ' n' → logprob: -4.96010160446167
    7. '       ' → logprob: -5.33510160446167
    8. ' p' → logprob: -5.96010160446167
    9. ' parts' → logprob: -6.21010160446167
    10. 'x' → logprob: -6.21010160446167

Token 731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3849954307079315
    2. ' =' → logprob: -1.259995460510254
    3. ',' → logprob: -3.384995460510254
    4. '=int' → logprob: -7.009995460510254
    5. ' ,' → logprob: -8.134995460510254
    6. '_amount' → logprob: -8.634995460510254
    7. '_tokens' → logprob: -9.009995460510254
    8. '=line' → logprob: -9.509995460510254
    9. '   ' → logprob: -9.759995460510254
    10. ')' → logprob: -9.884995460510254

Token 732: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007101670489646494
    2. ' int' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. '[int' → logprob: -18.000709533691406
    5. ' ' → logprob: -18.375709533691406
    6. '(int' → logprob: -18.500709533691406
    7. '  ' → logprob: -19.250709533691406
    8. '	int' → logprob: -19.375709533691406
    9. '=int' → logprob: -19.750709533691406
    10. '    ' → logprob: -21.000709533691406

Token 733: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00020699729793705046
    2. '(' → logprob: -8.50020694732666
    3. 'line' → logprob: -12.75020694732666
    4. '(
' → logprob: -15.37520694732666
    5. '=line' → logprob: -16.000207901000977
    6. ' line' → logprob: -16.250207901000977
    7. ' (' → logprob: -17.000207901000977
    8. '[line' → logprob: -17.500207901000977
    9. '(

' → logprob: -17.500207901000977
    10. '()' → logprob: -17.625207901000977

Token 734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14699245989322662
    2. '.strip' → logprob: -2.2719924449920654
    3. '())' → logprob: -3.6469924449920654
    4. '().' → logprob: -5.1469926834106445
    5. '.rstrip' → logprob: -6.5219926834106445
    6. '()' → logprob: -9.646992683410645
    7. '.readline' → logprob: -9.896992683410645
    8. '.split' → logprob: -9.896992683410645
    9. 'strip' → logprob: -11.396992683410645
    10. 'rstrip' → logprob: -11.521992683410645

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.129445418715477
    2. 'wallet' → logprob: -2.6294453144073486
    3. 'if' → logprob: -3.2544453144073486
    4. ' if' → logprob: -4.754445552825928
    5. '        
' → logprob: -6.879445552825928
    6. '   ' → logprob: -7.629445552825928
    7. ' wallet' → logprob: -8.37944507598877
    8. '```' → logprob: -9.25444507598877
    9. '_wallet' → logprob: -9.62944507598877
    10. 'coin' → logprob: -10.25444507598877

Token 736: ' if' (ID: 538)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' → logprob: -0.035710159689188004
    2. 'if' (adapté à ' if') → logprob: -3.410710096359253
    3. ' wallet' → logprob: -6.785710334777832
    4. '       ' → logprob: -7.910710334777832
    5. ' if' → logprob: -8.035710334777832
    6. 'w' → logprob: -9.535710334777832
    7. '           ' → logprob: -9.660710334777832
    8. 'wall' → logprob: -10.160710334777832
    9. '   ' → logprob: -11.160710334777832
    10. 'coin' → logprob: -11.410710334777832

Token 737: ' pay' (ID: 2777)
  Prédit: 'pay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pay' → logprob: -0.0043538096360862255
    2. ' pay' → logprob: -6.004354000091553
    3. 'not' → logprob: -6.629354000091553
    4. ' not' → logprob: -7.504354000091553
    5. '(pay' → logprob: -12.879353523254395
    6. 'payment' → logprob: -14.879353523254395
    7. ' ' → logprob: -15.004353523254395
    8. '   ' → logprob: -15.004353523254395
    9. '!' → logprob: -16.00435447692871
    10. '  ' → logprob: -16.12935447692871

Token 738: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14577923715114594
    2. '==' → logprob: -2.0207791328430176
    3. ' <=' → logprob: -6.020779132843018
    4. '<=' → logprob: -7.645779132843018
    5. '=' → logprob: -9.145779609680176
    6. ' >' → logprob: -10.270779609680176
    7. ' <' → logprob: -11.145779609680176
    8. '>' → logprob: -11.520779609680176
    9. ' >=' → logprob: -12.145779609680176
    10. ' =' → logprob: -12.270779609680176

Token 739: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.041768160182983e-05
    2. '-' → logprob: -10.125080108642578
    3. ' ' → logprob: -10.125080108642578
    4. ' -' → logprob: -16.500080108642578
    5. '```' → logprob: -17.000080108642578
    6. '   ' → logprob: -18.125080108642578
    7. '  ' → logprob: -18.375080108642578
    8. '000' → logprob: -18.750080108642578
    9. '_' → logprob: -19.375080108642578
    10. '`' → logprob: -20.375080108642578

Token 740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. '-' → logprob: -9.250096321105957
    3. ' ' → logprob: -16.125097274780273
    4. '```' → logprob: -16.500097274780273
    5. '_' → logprob: -17.875097274780273
    6. '``' → logprob: -19.250097274780273
    7. '
' → logprob: -19.375097274780273
    8. '０' → logprob: -19.375097274780273
    9. '   ' → logprob: -20.125097274780273
    10. '000' → logprob: -20.250097274780273

Token 741: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.083648681640625
    2. ':
' → logprob: -2.583648681640625
    3. '   ' → logprob: -5.458648681640625
    4. '       ' → logprob: -7.708648681640625
    5. '           ' → logprob: -11.583648681640625
    6. ':return' → logprob: -11.583648681640625
    7. ':
' → logprob: -12.333648681640625
    8. ' ' → logprob: -12.333648681640625
    9. '  ' → logprob: -13.083648681640625
    10. ' :' → logprob: -13.083648681640625

Token 742: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3495993912220001
    2. '           ' → logprob: -1.2245993614196777
    3. '   ' → logprob: -7.349599361419678
    4. '	       ' → logprob: -8.599599838256836
    5. '		' → logprob: -9.099599838256836
    6. '	   ' → logprob: -10.099599838256836
    7. '     ' → logprob: -10.349599838256836
    8. '	' → logprob: -10.599599838256836
    9. '	break' → logprob: -10.724599838256836
    10. ' break' → logprob: -10.724599838256836

Token 743: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005919315852224827
    2. ' break' → logprob: -5.255919456481934
    3. 'return' → logprob: -7.505919456481934
    4. '           ' → logprob: -9.755919456481934
    5. '	break' → logprob: -10.005919456481934
    6. '               ' → logprob: -10.505919456481934
    7. '       ' → logprob: -12.380919456481934
    8. ' return' → logprob: -15.005919456481934
    9. '```' → logprob: -15.880919456481934
    10. '_break' → logprob: -16.130918502807617

Token 744: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042212167754769325
    2. '        
' → logprob: -6.254221439361572
    3. '<|end|>' → logprob: -6.754221439361572
    4. '```' → logprob: -7.379221439361572
    5. '   ' → logprob: -8.629220962524414
    6. 'wallet' → logprob: -9.004220962524414
    7. '	' → logprob: -10.129220962524414
    8. '<|end|>' → logprob: -10.754220962524414
    9. ',' → logprob: -11.004220962524414
    10. '	   ' → logprob: -11.004220962524414

Token 745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03454391285777092
    2. '```' → logprob: -4.909543991088867
    3. 'wallet' → logprob: -4.909543991088867
    4. '   ' → logprob: -5.159543991088867
    5. '        
' → logprob: -5.159543991088867
    6. '<|end|>' → logprob: -5.409543991088867
    7. '_wallet' → logprob: -7.034543991088867
    8. ' wallet' → logprob: -7.159543991088867
    9. '    
' → logprob: -7.409543991088867
    10. '``' → logprob: -9.284543991088867

Token 746: ' wallet' (ID: 22762)
  Prédit: 'wallet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wallet' (adapté à ' wallet') → logprob: -0.009736253879964352
    2. '       ' → logprob: -5.259736061096191
    3. ' wallet' → logprob: -5.509736061096191
    4. '   ' → logprob: -8.509736061096191
    5. 'line' → logprob: -9.259736061096191
    6. 'w' → logprob: -9.634736061096191
    7. '_wallet' → logprob: -10.259736061096191
    8. '-wallet' → logprob: -11.759736061096191
    9. '	w' → logprob: -12.009736061096191
    10. '(wallet' → logprob: -12.509736061096191

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0297680776566267
    2. '=' → logprob: -3.5297679901123047
    3. ',' → logprob: -11.529767990112305
    4. '=line' → logprob: -12.154767990112305
    5. '=input' → logprob: -13.904767990112305
    6. ' =[' → logprob: -14.404767990112305
    7. 'line' → logprob: -15.654767990112305
    8. '[' → logprob: -15.779767990112305
    9. '=list' → logprob: -15.904767990112305
    10. '[:]' → logprob: -16.529767990112305

Token 748: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.010445049032568932
    2. 'list' → logprob: -5.2604451179504395
    3. ' tuple' → logprob: -5.2604451179504395
    4. ' list' → logprob: -12.385444641113281
    5. '(tuple' → logprob: -15.260444641113281
    6. '[' → logprob: -15.510444641113281
    7. '   ' → logprob: -16.76044464111328
    8. 'deque' → logprob: -17.63544464111328
    9. '[list' → logprob: -20.26044464111328
    10. '[]' → logprob: -20.51044464111328

Token 749: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.9795445849886164e-05
    2. '(int' → logprob: -9.750060081481934
    3. 'map' → logprob: -13.500060081481934
    4. '(' → logprob: -16.875059127807617
    5. '(list' → logprob: -17.500059127807617
    6. ' map' → logprob: -17.750059127807617
    7. '	map' → logprob: -20.000059127807617
    8. '([' → logprob: -20.500059127807617
    9. '(sorted' → logprob: -21.125059127807617
    10. '.map' → logprob: -21.250059127807617

Token 750: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014174672774970531
    2. 'int' → logprob: -4.264174461364746
    3. '(' → logprob: -12.514174461364746
    4. ' int' → logprob: -12.639174461364746
    5. ',int' → logprob: -12.889174461364746
    6. '=int' → logprob: -14.139174461364746
    7. '   ' → logprob: -15.389174461364746
    8. '	int' → logprob: -15.514174461364746
    9. '[int' → logprob: -15.764174461364746
    10. '(
' → logprob: -16.139175415039062

Token 751: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10737769305706024
    2. '(input' → logprob: -2.982377767562866
    3. ',' → logprob: -3.107377767562866
    4. 'input' → logprob: -5.482377529144287
    5. '(sys' → logprob: -6.982377529144287
    6. '   ' → logprob: -7.857377529144287
    7. '(' → logprob: -7.982377529144287
    8. ',int' → logprob: -8.607378005981445
    9. 'sys' → logprob: -8.982378005981445
    10. ' (' → logprob: -9.357378005981445

Token 752: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.742448022123426e-05
    2. '()' → logprob: -9.750067710876465
    3. '.readline' → logprob: -11.625067710876465
    4. '())' → logprob: -16.87506675720215
    5. '()))' → logprob: -17.25006675720215
    6. '(' → logprob: -17.75006675720215
    7. ' ().' → logprob: -17.87506675720215
    8. '().__' → logprob: -18.00006675720215
    9. '()[' → logprob: -18.12506675720215
    10. '()?.' → logprob: -19.00006675720215

Token 753: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04877970740199089
    2. 'strip' → logprob: -3.0487797260284424
    3. 'rstrip' → logprob: -8.923779487609863
    4. 'read' → logprob: -9.798779487609863
    5. ' split' → logprob: -13.548779487609863
    6. '().' → logprob: -13.923779487609863
    7. '.readline' → logprob: -14.173779487609863
    8. '(split' → logprob: -14.673779487609863
    9. ' readline' → logprob: -15.798779487609863
    10. ' strip' → logprob: -16.17378044128418

Token 754: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.001619003596715629
    2. '()' → logprob: -7.0016188621521
    3. '())' → logprob: -7.5016188621521
    4. '(' → logprob: -9.126619338989258
    5. '()))
' → logprob: -10.876619338989258
    6. '))' → logprob: -10.876619338989258
    7. '().' → logprob: -12.501619338989258
    8. '()));' → logprob: -13.251619338989258
    9. '())))' → logprob: -13.376619338989258
    10. '()))

' → logprob: -14.751619338989258

Token 755: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021057340200059116
    2. '```' → logprob: -9.625210762023926
    3. '<|end|>' → logprob: -9.875210762023926
    4. '   ' → logprob: -9.875210762023926
    5. '        
' → logprob: -10.875210762023926
    6. 'result' → logprob: -11.625210762023926
    7. '
' → logprob: -12.000210762023926
    8. 'next' → logprob: -13.500210762023926
    9. 'output' → logprob: -13.875210762023926
    10. '``' → logprob: -14.250210762023926

Token 756: ' usage' (ID: 16622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9753648638725281
    2. 'ans' → logprob: -1.3503649234771729
    3. 'result' → logprob: -1.9753649234771729
    4. 'usage' (adapté à ' usage') → logprob: -2.725364923477173
    5. '       ' → logprob: -2.850364923477173
    6. ' ans' → logprob: -3.725364923477173
    7. 'answer' → logprob: -3.725364923477173
    8. ' res' → logprob: -3.725364923477173
    9. ' result' → logprob: -4.725364685058594
    10. 'used' → logprob: -5.225364685058594

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141440629959106
    2. '=' → logprob: -1.7014143466949463
    3. '<|end|>' → logprob: -15.451414108276367
    4. ')' → logprob: -15.951414108276367
    5. '＝' → logprob: -15.951414108276367
    6. '=s' → logprob: -16.076414108276367
    7. ',' → logprob: -16.326414108276367
    8. '=find' → logprob: -16.576414108276367
    9. ' =)' → logprob: -16.576414108276367
    10. '=create' → logprob: -17.076414108276367

Token 758: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0005530327325686812
    2. ' solve' → logprob: -7.500553131103516
    3. '.solve' → logprob: -18.000553131103516
    4. '(s' → logprob: -18.125553131103516
    5. '   ' → logprob: -18.500553131103516
    6. 'sol' → logprob: -19.625553131103516
    7. 'solver' → logprob: -20.000553131103516
    8. 'resolve' → logprob: -20.625553131103516
    9. '```' → logprob: -21.625553131103516
    10. ' ' → logprob: -22.250553131103516

Token 759: '(pay' (ID: 163383)
  Prédit: '(pay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pay' → logprob: -1.5928495486150496e-05
    2. '(payment' → logprob: -11.375016212463379
    3. 'pay' → logprob: -13.375016212463379
    4. ' (' → logprob: -13.500016212463379
    5. '(' → logprob: -13.750016212463379
    6. '(p' → logprob: -15.125016212463379
    7. '(play' → logprob: -17.000015258789062
    8. '(
' → logprob: -17.750015258789062
    9. '(pop' → logprob: -18.000015258789062
    10. '(P' → logprob: -18.375015258789062

Token 760: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.2028905600309372
    2. ',' → logprob: -1.7028905153274536
    3. '(wallet' → logprob: -6.577890396118164
    4. '(' → logprob: -10.202890396118164
    5. '(w' → logprob: -10.827890396118164
    6. ' ,' → logprob: -11.952890396118164
    7. ',(' → logprob: -12.077890396118164
    8. '   ' → logprob: -12.077890396118164
    9. '```' → logprob: -12.952890396118164
    10. '       ' → logprob: -13.077890396118164

Token 761: 'allet' (ID: 9907)
  Prédit: 'allet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allet' → logprob: -2.935296834039036e-06
    2. 'alet' → logprob: -12.87500286102295
    3. 'al' → logprob: -16.125003814697266
    4. 'wallet' → logprob: -16.500003814697266
    5. 'alle' → logprob: -17.000003814697266
    6. '[' → logprob: -17.125003814697266
    7. 'ocket' → logprob: -17.250003814697266
    8. 'all' → logprob: -18.000003814697266
    9. '(' → logprob: -18.500003814697266
    10. 'alette' → logprob: -18.625003814697266

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04868524894118309
    2. ')
' → logprob: -3.048685312271118
    3. '       ' → logprob: -9.298685073852539
    4. '   ' → logprob: -12.798685073852539
    5. ')
' → logprob: -12.923685073852539
    6. ' )' → logprob: -14.798685073852539
    7. ')

' → logprob: -15.548685073852539
    8. '())' → logprob: -16.04868507385254
    9. ' )
' → logprob: -16.67368507385254
    10. ')#' → logprob: -17.17368507385254

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076035503298044205
    2. '   ' → logprob: -5.007603645324707
    3. '<|end|>' → logprob: -7.382603645324707
    4. '        
' → logprob: -9.382603645324707
    5. ' if' → logprob: -10.007603645324707
    6. '
' → logprob: -10.132603645324707
    7. 'print' → logprob: -10.507603645324707
    8. 'if' → logprob: -10.632603645324707
    9. '```' → logprob: -10.757603645324707
    10. '    
' → logprob: -11.882603645324707

Token 764: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23705291748046875
    2. 'if' (adapté à ' if') → logprob: -1.7370529174804688
    3. ' if' → logprob: -4.112052917480469
    4. ' print' → logprob: -4.112052917480469
    5. 'result' → logprob: -7.237052917480469
    6. '       ' → logprob: -7.487052917480469
    7. '   ' → logprob: -7.987052917480469
    8. 'total' → logprob: -8.237052917480469
    9. 'res' → logprob: -8.737052917480469
    10. 'used' → logprob: -10.112052917480469

Token 765: ' not' (ID: 625)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.10024776309728622
    2. ' usage' → logprob: -2.350247859954834
    3. ' not' → logprob: -10.225247383117676
    4. 'not' → logprob: -12.475247383117676
    5. ' ' → logprob: -14.350247383117676
    6. 'ans' → logprob: -15.475247383117676
    7. '   ' → logprob: -15.975247383117676
    8. 'Usage' → logprob: -16.600248336791992
    9. ' ans' → logprob: -16.850248336791992
    10. '  ' → logprob: -17.725248336791992

Token 766: ' first' (ID: 1577)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.06196914613246918
    2. ' usage' → logprob: -2.811969041824341
    3. 'Usage' → logprob: -13.936968803405762
    4. ' ' → logprob: -15.561968803405762
    5. '_usage' → logprob: -16.061969757080078
    6. '   ' → logprob: -16.186969757080078
    7. 'answer' → logprob: -17.311969757080078
    8. '  ' → logprob: -17.436969757080078
    9. 'use' → logprob: -17.686969757080078
    10. 'us' → logprob: -17.686969757080078

Token 767: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013485834933817387
    2. ':
' → logprob: -4.388485908508301
    3. ' or' → logprob: -7.013485908508301
    4. '       ' → logprob: -10.0134859085083
    5. 'or' → logprob: -11.7634859085083
    6. '   ' → logprob: -11.8884859085083
    7. '=' → logprob: -13.0134859085083
    8. '.' → logprob: -13.2634859085083
    9. ':

' → logprob: -13.5134859085083
    10. '           ' → logprob: -13.5134859085083

Token 768: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1837908923625946
    2. 'print' → logprob: -2.183790922164917
    3. '           ' → logprob: -3.308790922164917
    4. ' print' → logprob: -4.183790683746338
    5. '
' → logprob: -6.058790683746338
    6. '   ' → logprob: -7.933790683746338
    7. '```' → logprob: -8.433791160583496
    8. '\n' → logprob: -8.808791160583496
    9. '\' → logprob: -8.933791160583496
    10. '        
' → logprob: -9.558791160583496

Token 769: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20227833092212677
    2. ' print' → logprob: -1.7022783756256104
    3. '       ' → logprob: -7.077278137207031
    4. '	print' → logprob: -11.327278137207031
    5. '```' → logprob: -12.702278137207031
    6. '
' → logprob: -13.452278137207031
    7. '\n' → logprob: -13.702278137207031
    8. '   ' → logprob: -13.952278137207031
    9. '           ' → logprob: -14.077278137207031
    10. '\' → logprob: -14.452278137207031

Token 770: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015943869948387146
    2. '()
' → logprob: -9.00015926361084
    3. '("")' → logprob: -10.25015926361084
    4. '()

' → logprob: -16.000160217285156
    5. '()\' → logprob: -16.000160217285156
    6. '""' → logprob: -16.250160217285156
    7. '('' → logprob: -16.500160217285156
    8. ' ()' → logprob: -16.625160217285156
    9. '(' → logprob: -17.250160217285156
    10. '()
' → logprob: -17.500160217285156

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7729658540920354e-05
    2. '<|end|>' → logprob: -11.250027656555176
    3. ' first' → logprob: -12.750027656555176
    4. '[' → logprob: -13.000027656555176
    5. '```' → logprob: -13.250027656555176
    6. '   ' → logprob: -13.625027656555176
    7. 'print' → logprob: -13.625027656555176
    8. '        
' → logprob: -14.000027656555176
    9. 'else' → logprob: -14.125027656555176
    10. ' else' → logprob: -14.250027656555176

Token 772: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.309382373117842e-05
    2. ' first' → logprob: -11.000033378601074
    3. 'first' (adapté à ' first') → logprob: -11.375033378601074
    4. 'First' → logprob: -12.625033378601074
    5. 'print' → logprob: -14.625033378601074
    6. '```' → logprob: -14.750033378601074
    7. '   ' → logprob: -15.000033378601074
    8. '           ' → logprob: -16.000032424926758
    9. '[first' → logprob: -16.250032424926758
    10. '	first' → logprob: -17.250032424926758

Token 773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016167386202141643
    2. ' =' → logprob: -6.501616954803467
    3. '=True' → logprob: -9.126616477966309
    4. '=False' → logprob: -12.251616477966309
    5. ',' → logprob: -15.001616477966309
    6. ')' → logprob: -16.376617431640625
    7. '=

' → logprob: -16.626617431640625
    8. '=
' → logprob: -17.376617431640625
    9. '.' → logprob: -17.376617431640625
    10. '=true' → logprob: -17.501617431640625

Token 774: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.2166411478538066e-05
    2. ' False' → logprob: -10.250052452087402
    3. 'True' → logprob: -11.000052452087402
    4. '(False' → logprob: -20.625051498413086
    5. ' True' → logprob: -20.750051498413086
    6. 'F' → logprob: -22.625051498413086
    7. '=False' → logprob: -22.750051498413086
    8. 'false' → logprob: -23.125051498413086
    9. '   ' → logprob: -24.500051498413086
    10. 'Fal' → logprob: -24.500051498413086

Token 775: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012821101699955761
    2. '   ' → logprob: -9.625127792358398
    3. '<|end|>' → logprob: -10.000127792358398
    4. 'print' → logprob: -11.875127792358398
    5. '        
' → logprob: -12.250127792358398
    6. '```' → logprob: -13.125127792358398
    7. '<|end|>' → logprob: -14.125127792358398
    8. '           ' → logprob: -15.000127792358398
    9. ' print' → logprob: -15.375127792358398
    10. 'import' → logprob: -15.750127792358398

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032966677099466324
    2. 'print' → logprob: -3.6579666137695312
    3. '   ' → logprob: -5.532966613769531
    4. 'if' → logprob: -6.032966613769531
    5. ' if' → logprob: -8.907966613769531
    6. ' print' → logprob: -9.407966613769531
    7. '```' → logprob: -10.282966613769531
    8. 'for' → logprob: -10.407966613769531
    9. ' for' → logprob: -12.907966613769531
    10. 'usage' → logprob: -13.282966613769531

Token 777: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4131659269332886
    2. 'if' → logprob: -1.1631659269332886
    3. 'for' (adapté à ' for') → logprob: -4.913166046142578
    4. 'used' → logprob: -5.288166046142578
    5. 'change' → logprob: -5.538166046142578
    6. 'usage' → logprob: -6.288166046142578
    7. 'payment' → logprob: -6.413166046142578
    8. 'pay' → logprob: -6.663166046142578
    9. 'paid' → logprob: -6.663166046142578
    10. 'total' → logprob: -6.788166046142578

Token 778: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0050811260007321835
    2. ' i' → logprob: -5.5050811767578125
    3. 'c' → logprob: -8.130081176757812
    4. 'coin' → logprob: -8.380081176757812
    5. 'v' → logprob: -8.880081176757812
    6. 'k' → logprob: -9.255081176757812
    7. '_i' → logprob: -9.880081176757812
    8. 't' → logprob: -10.380081176757812
    9. '_' → logprob: -10.505081176757812
    10. 'idx' → logprob: -10.630081176757812

Token 779: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7049856185913086
    2. ' in' → logprob: -1.9549856185913086
    3. ',i' → logprob: -1.9549856185913086
    4. 'i' → logprob: -2.2049856185913086
    5. ',count' → logprob: -2.9549856185913086
    6. 'in' → logprob: -3.5799856185913086
    7. 'idx' → logprob: -4.329985618591309
    8. ',u' → logprob: -5.204985618591309
    9. 'count' → logprob: -5.829985618591309
    10. 'u' → logprob: -6.079985618591309

Token 780: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14317983388900757
    2. ' in' → logprob: -2.0181798934936523
    3. ',' → logprob: -7.768179893493652
    4. ',in' → logprob: -10.143179893493652
    5. ',u' → logprob: -10.768179893493652
    6. ',c' → logprob: -12.018179893493652
    7. 'u' → logprob: -12.768179893493652
    8. ' ' → logprob: -12.893179893493652
    9. ' ,' → logprob: -13.143179893493652
    10. 'n' → logprob: -13.768179893493652

Token 781: ' sorted' (ID: 20099)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.006717267446219921
    2. 'enumer' → logprob: -5.006717205047607
    3. ' zip' → logprob: -13.631717681884766
    4. '(zip' → logprob: -14.756717681884766
    5. ' enumerate' → logprob: -15.631717681884766
    6. 'range' → logprob: -16.381717681884766
    7. '```' → logprob: -17.006717681884766
    8. '
' → logprob: -18.256717681884766
    9. 'enum' → logprob: -18.381717681884766
    10. '.zip' → logprob: -18.381717681884766

Token 782: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.4741806089878082
    2. 'zip' → logprob: -0.9741805791854858
    3. 'enumer' → logprob: -9.724180221557617
    4. '((' → logprob: -10.474180221557617
    5. ' zip' → logprob: -12.599180221557617
    6. '(' → logprob: -12.724180221557617
    7. 'coin' → logprob: -12.974180221557617
    8. '([(' → logprob: -12.974180221557617
    9. '[(' → logprob: -13.599180221557617
    10. '(((' → logprob: -13.599180221557617

Token 783: '(co' (ID: 41772)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.2519974708557129
    2. '(co' → logprob: -1.501997470855713
    3. ' coins' → logprob: -10.126996994018555
    4. '(' → logprob: -11.251996994018555
    5. 'co' → logprob: -11.751996994018555
    6. 'Coins' → logprob: -13.251996994018555
    7. 'coin' → logprob: -13.501996994018555
    8. '[' → logprob: -14.251996994018555
    9. '(wallet' → logprob: -14.376996994018555
    10. '-co' → logprob: -14.376996994018555

Token 784: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0010702044237405062
    2. 'coins' → logprob: -6.876070022583008
    3. 'in' → logprob: -11.626070022583008
    4. '[' → logprob: -11.626070022583008
    5. 'is' → logprob: -12.501070022583008
    6. '```' → logprob: -13.001070022583008
    7. 'inds' → logprob: -13.376070022583008
    8. 'i' → logprob: -13.501070022583008
    9. 'INS' → logprob: -13.501070022583008
    10. ' coins' → logprob: -13.751070022583008

Token 785: ',' (ID: 11)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.25222137570381165
    2. ',' → logprob: -1.5022213459014893
    3. ',w' → logprob: -9.12722110748291
    4. ',user' → logprob: -9.50222110748291
    5. ',[' → logprob: -9.62722110748291
    6. ',-' → logprob: -11.62722110748291
    7. ',c' → logprob: -11.75222110748291
    8. ' ,' → logprob: -12.00222110748291
    9. ',(' → logprob: -13.00222110748291
    10. ',U' → logprob: -13.00222110748291

Token 786: 'usage' (ID: 25871)
  Prédit: 'usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.0005375436157919466
    2. ' usage' → logprob: -8.125537872314453
    3. 'u' → logprob: -8.625537872314453
    4. '[' → logprob: -10.125537872314453
    5. 'ans' → logprob: -12.375537872314453
    6. '   ' → logprob: -12.625537872314453
    7. '[u' → logprob: -12.875537872314453
    8. 'us' → logprob: -13.125537872314453
    9. 'answer' → logprob: -13.375537872314453
    10. '(' → logprob: -13.625537872314453

Token 787: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3449423909187317
    2. '):' → logprob: -1.594942331314087
    3. '),' → logprob: -2.844942331314087
    4. ')):
' → logprob: -4.219942569732666
    5. ')):' → logprob: -4.719942569732666
    6. ',' → logprob: -5.094942569732666
    7. '[::-' → logprob: -8.594942092895508
    8. '   ' → logprob: -8.719942092895508
    9. '))' → logprob: -9.094942092895508
    10. '()):
' → logprob: -9.344942092895508

Token 788: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013863875530660152
    2. '   ' → logprob: -4.388864040374756
    3. 'print' → logprob: -7.388864040374756
    4. ' if' → logprob: -8.013863563537598
    5. ' print' → logprob: -8.263863563537598
    6. 'if' → logprob: -9.388863563537598
    7. '       ' → logprob: -10.513863563537598
    8. '	       ' → logprob: -11.263863563537598
    9. '```' → logprob: -11.388863563537598
    10. '          ' → logprob: -13.263863563537598

Token 789: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18758144974708557
    2. ' print' → logprob: -2.0625815391540527
    3. '           ' → logprob: -3.6875815391540527
    4. '       ' → logprob: -4.812581539154053
    5. 'if' (adapté à ' if') → logprob: -5.312581539154053
    6. '   ' → logprob: -5.812581539154053
    7. ' if' → logprob: -6.062581539154053
    8. '               ' → logprob: -8.062581062316895
    9. '	print' → logprob: -8.812581062316895
    10. ' ' → logprob: -10.937581062316895

Token 790: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014164566993713379
    2. ' u' → logprob: -4.264164447784424
    3. '	u' → logprob: -14.514164924621582
    4. '   ' → logprob: -14.639164924621582
    5. '           ' → logprob: -17.014163970947266
    6. ' ' → logprob: -17.139163970947266
    7. '    ' → logprob: -18.014163970947266
    8. '  ' → logprob: -18.764163970947266
    9. '       ' → logprob: -19.014163970947266
    10. '               ' → logprob: -19.014163970947266

Token 791: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20143575966358185
    2. ' >' → logprob: -1.7014358043670654
    3. '<|end|>' → logprob: -12.576436042785645
    4. '   ' → logprob: -12.826436042785645
    5. ')>' → logprob: -12.951436042785645
    6. '==' → logprob: -13.076436042785645
    7. '()>' → logprob: -13.576436042785645
    8. ' !=' → logprob: -13.576436042785645
    9. '&gt' → logprob: -13.576436042785645
    10. ':' → logprob: -13.951436042785645

Token 792: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '=' → logprob: -17.50010871887207
    4. '>' → logprob: -18.00010871887207
    5. '   ' → logprob: -19.25010871887207
    6. '1' → logprob: -20.25010871887207
    7. '  ' → logprob: -20.75010871887207
    8. '```' → logprob: -20.75010871887207
    9. '<|end|>' → logprob: -21.12510871887207
    10. '۰' → logprob: -21.37510871887207

Token 793: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -19.62501335144043
    4. '   ' → logprob: -19.75001335144043
    5. '```' → logprob: -20.00001335144043
    6. '00' → logprob: -20.62501335144043
    7. '۰' → logprob: -20.75001335144043
    8. '>' → logprob: -21.06251335144043
    9. 'u' → logprob: -21.06251335144043
    10. '
' → logprob: -21.12501335144043

Token 794: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5435056090354919
    2. ':' → logprob: -1.0435056686401367
    3. ':
' → logprob: -2.7935056686401367
    4. '           ' → logprob: -5.543505668640137
    5. ',' → logprob: -7.043505668640137
    6. '	       ' → logprob: -8.543505668640137
    7. '       ' → logprob: -8.793505668640137
    8. ' and' → logprob: -9.043505668640137
    9. '	           ' → logprob: -9.043505668640137
    10. ' :' → logprob: -9.293505668640137

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026501057669520378
    2. '           ' → logprob: -4.026501178741455
    3. ' print' → logprob: -5.401501178741455
    4. 'print' → logprob: -5.776501178741455
    5. '       ' → logprob: -7.526501178741455
    6. '   ' → logprob: -9.151500701904297
    7. '	       ' → logprob: -10.651500701904297
    8. '                   ' → logprob: -11.526500701904297
    9. '```' → logprob: -11.526500701904297
    10. '	           ' → logprob: -11.651500701904297

Token 796: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06227453052997589
    2. ' print' → logprob: -2.81227445602417
    3. '           ' → logprob: -8.562274932861328
    4. '   ' → logprob: -9.562274932861328
    5. '               ' → logprob: -10.562274932861328
    6. '       ' → logprob: -11.187274932861328
    7. '	print' → logprob: -12.437274932861328
    8. '                   ' → logprob: -14.562274932861328
    9. '```' → logprob: -14.812274932861328
    10. ' ' → logprob: -14.937274932861328

Token 797: '(c' (ID: 2410)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6289466023445129
    2. '(c' → logprob: -1.5039465427398682
    3. '(u' → logprob: -1.6289465427398682
    4. 'u' → logprob: -3.628946542739868
    5. 'c' → logprob: -4.753946781158447
    6. 'f' → logprob: -4.878946781158447
    7. '('{}' → logprob: -5.878946781158447
    8. '("{}' → logprob: -6.878946781158447
    9. '(' → logprob: -7.378946781158447
    10. '(co' → logprob: -7.753946781158447

Token 798: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5239754319190979
    2. ',u' → logprob: -0.8989754319190979
    3. ' ,' → logprob: -7.648975372314453
    4. 'u' → logprob: -8.273975372314453
    5. ' u' → logprob: -9.523975372314453
    6. ',end' → logprob: -10.898975372314453
    7. '*u' → logprob: -11.523975372314453
    8. ',f' → logprob: -12.148975372314453
    9. ',n' → logprob: -12.273975372314453
    10. ',int' → logprob: -13.398975372314453

Token 799: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.180879816180095e-05
    2. ',' → logprob: -10.750051498413086
    3. ',end' → logprob: -11.250051498413086
    4. ')
' → logprob: -12.125051498413086
    5. ' )' → logprob: -12.250051498413086
    6. ',)' → logprob: -13.625051498413086
    7. 'end' → logprob: -13.750051498413086
    8. '<|end|>' → logprob: -13.875051498413086
    9. ',u' → logprob: -14.125051498413086
    10. ');' → logprob: -14.125051498413086

Token 800: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 801: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2017887979745865
    2. '__' → logprob: -1.7017887830734253
    3. '_' → logprob: -8.451788902282715
    4. '_name' → logprob: -9.201788902282715
    5. '___' → logprob: -10.201788902282715
    6. ' _' → logprob: -11.826788902282715
    7. 'name' → logprob: -11.826788902282715
    8. ' ___' → logprob: -13.201788902282715
    9. ' ' → logprob: -13.826788902282715
    10. 'if' → logprob: -13.951788902282715

Token 802: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10870365798473358
    2. '==' → logprob: -2.35870361328125
    3. ' ==' → logprob: -5.10870361328125
    4. '=="' → logprob: -6.23370361328125
    5. '=='' → logprob: -7.85870361328125
    6. '=' → logprob: -10.98370361328125
    7. ' __' → logprob: -11.48370361328125
    8. '_' → logprob: -11.48370361328125
    9. '__.__' → logprob: -11.48370361328125
    10. '==
' → logprob: -12.48370361328125

Token 803: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005350403371267021
    2. '__.__' → logprob: -7.875535011291504
    3. '==' → logprob: -8.875535011291504
    4. '=="' → logprob: -11.750535011291504
    5. '__.' → logprob: -12.500535011291504
    6. ' ==' → logprob: -13.750535011291504
    7. '=='' → logprob: -14.375535011291504
    8. '```' → logprob: -14.625535011291504
    9. '__["' → logprob: -14.750535011291504
    10. '___' → logprob: -14.875535011291504

Token 804: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5320990085601807
    2. ' ==' → logprob: -1.5320990085601807
    3. '__' → logprob: -2.0320990085601807
    4. '=="' → logprob: -2.9070990085601807
    5. '=='' → logprob: -4.532098770141602
    6. '=' → logprob: -10.782098770141602
    7. '==
' → logprob: -11.282098770141602
    8. '===' → logprob: -11.407098770141602
    9. '[' → logprob: -11.907098770141602
    10. '_' → logprob: -12.032098770141602

Token 805: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011055718176066875
    2. ''' → logprob: -4.511055946350098
    3. ' "__' → logprob: -12.011055946350098
    4. '__' → logprob: -13.261055946350098
    5. ' '__' → logprob: -16.38605499267578
    6. '"user' → logprob: -17.26105499267578
    7. '"name' → logprob: -17.26105499267578
    8. ''"' → logprob: -18.26105499267578
    9. '"'' → logprob: -18.88605499267578
    10. '("__' → logprob: -19.01105499267578

Token 806: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. 'name' → logprob: -12.375004768371582
    3. '__' → logprob: -14.500004768371582
    4. 'm' → logprob: -17.3750057220459
    5. 'ma' → logprob: -18.0000057220459
    6. ' main' → logprob: -18.5000057220459
    7. '"' → logprob: -19.6250057220459
    8. '_main' → logprob: -19.6250057220459
    9. '	main' → logprob: -20.2500057220459
    10. '-main' → logprob: -20.3750057220459

Token 807: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07997940480709076
    2. '__' → logprob: -2.579979419708252
    3. '__":
' → logprob: -7.329979419708252
    4. '__:' → logprob: -8.204978942871094
    5. ':' → logprob: -9.579978942871094
    6. '__.' → logprob: -10.329978942871094
    7. '('__' → logprob: -11.329978942871094
    8. '':' → logprob: -11.454978942871094
    9. '():
' → logprob: -11.829978942871094
    10. '.__' → logprob: -12.204978942871094

Token 808: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0029447749257087708
    2. '   ' → logprob: -6.5029449462890625
    3. ' main' → logprob: -7.2529449462890625
    4. 'solve' → logprob: -7.8779449462890625
    5. '	main' → logprob: -8.002944946289062
    6. 'run' → logprob: -12.252944946289062
    7. '_main' → logprob: -12.377944946289062
    8. '__' → logprob: -12.627944946289062
    9. '(main' → logprob: -13.127944946289062
    10. '```' → logprob: -13.502944946289062

Token 809: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -22.0
    4. '   ' → logprob: -23.125
    5. '.main' → logprob: -26.375
    6. '(main' → logprob: -27.25
    7. 'import' → logprob: -27.5
    8. 'sys' → logprob: -27.875
    9. '_main' → logprob: -28.0
    10. 'Main' → logprob: -30.375

Token 810: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 808
Tokens correctement prédits (1ère position, stricte): 314
Tokens correctement prédits (1ère position, avec adaptation): 338
Tokens correctement prédits (top 10): 635
Précision stricte (1ère position): 38.86%
Précision adaptée (1ère position): 41.83%
Précision (top 10): 78.59%
================================================================================
