================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re
from collections import defaultdict

sys.setrecursionlimit(10**7)

# The problem:
# Given an encrypted equation string (length <=31), where some characters are replaced by letters,
# we want to count how many possible original equations conforming to the grammar exist whose
# encrypted form matches the input string.
# The encryption rule: all occurrences replaced from a same original char must map to the same letter,
# different original chars never replaced by the same letter.
# Some occurrences of a char may be replaced, others not.
# Letters in the encrypted string are encryption chars, digits/operators/parentheses/equal sign are literals.
#
# We seek to count the number of original equations(evaluated expressions) matching the encryption,
# such that both sides evaluate equal.


# Approach outline:
# 1. The input has letters + literals.
#    Letters represent unknown original chars.
#    Different original chars replaced by distinct letters.
#    Non-letter characters are literals (0,1,+,-,*,(,),=).
#    The original equation contains exactly one '='.
#
# 2. We need to test assignments of original chars to letters,
#    consistent with letter substitutions, that can produce the given encrypted input.
#
# 3. To do that, we try all possible mappings from each letter ->
#    an original character from the set of possible chars {0,1,+,-,*,(,),=}.
#    But must be consistent between occurrences of the letter.
#    And different letters cannot map to the same original char.
#
# 4. For each complete mapping (letter->char), we substitute in the encrypted string,
#    obtaining a candidate original equation.
#    This equation must:
#       - have EXACTLY one '='
#       - conform to the grammar (parseable)
#       - evaluating left and right expressions must be equal.
#
# 5. Count how many mappings produce such valid original equations.
#
# Optimization:
# - The number of letters is at most the length of input (<=31), but often fewer.
# - The original chars can only be from the set:
#   '0','1','+','-','*','(',')','='
# - Number of distinct original chars: 9
# - So we assign letters distinct chars from these 9 candidates.
# - This is a permutation problem with pruning.
#
# Parsing and evaluating:
# - We'll do a recursive descent parser according to grammar.
# - Grammar expressions include negation prefix, *, +, -, parenthesis,
#   numbers are binary numbers starting with 0 or 1 (leading zeros only allowed if number is 0).
#
# Return the total count of valid original equations matching encrypted input.

# Original chars set (candidates for letter mapping)
ORIG_CHARS = ['0','1','+','-','*','(',')','=']

# Parse and evaluate structure
class ParseError(Exception):
    pass

class Parser:
    # We'll parse the string expr_str, starting at idx 0
    # and produce an AST and compute value.
    # Grammar:
    # Q ::= E=E
    # E ::= T | E+T | E-T
    # T ::= F | T*F
    # F ::= N | -F | (E)
    # N ::= 0 | 1B
    # B ::= empty | 0B | 1B
    #
    # We will parse methods parseQ, parseE, parseT, parseF, parseN
    #
    # We also track position and do left-associative parsing for +,-,* as described.
    #
    # Evaluate returns integer value of expression (in decimal)
        
    def __init__(self, s):
        self.s = s
        self.n = len(s)
        self.pos = 0

    # utility
    def peek(self):
        return self.s[self.pos] if self.pos<self.n else None
    def consume(self):
        ch = self.peek()
        if ch is not None:
            self.pos += 1
        return ch
    def expect(self, ch):
        if self.peek() != ch:
            raise ParseError("Expected '{}' at pos {}".format(ch,self.pos))
        self.pos += 1
    def is_digit(self,ch):
        return ch=='0' or ch=='1'
    def parseQ(self):
        # Q ::= E=E
        val_left = self.parseE()
        if self.peek()!='=':
            raise ParseError("Expected '=' at pos {}".format(self.pos))
        self.consume() # consume '='
        val_right = self.parseE()
        if self.pos!=self.n:
            raise ParseError("Extra input at end")
        return (val_left,val_right)
    
    def parseE(self):
        # E ::= T | E+T | E-T (left associative)
        val = self.parseT()
        while True:
            ch = self.peek()
            if ch=='+':
                self.consume()
                right = self.parseT()
                val = val + right
            elif ch=='-':
                self.consume()
                right = self.parseT()
                val = val - right
            else:
                break
        return val

    def parseT(self):
        # T ::= F | T*F (left associative)
        val = self.parseF()
        while True:
            ch = self.peek()
            if ch=='*':
                self.consume()
                right = self.parseF()
                val = val * right
            else:
                break
        return val

    def parseF(self):
        # F ::= N | -F | (E)
        ch = self.peek()
        if ch=='-':
            self.consume()
            val = self.parseF()
            return -val
        elif ch=='(':
            self.consume()
            val = self.parseE()
            if self.peek()!=')':
                raise ParseError("Expected ')' at pos {}".format(self.pos))
            self.consume()
            return val
        else:
            val = self.parseN()
            return val

    def parseN(self):
        # N ::= 0 | 1B
        # B ::= empty | 0B | 1B
        ch = self.peek()
        if ch=='0':
            self.consume()
            return 0
        elif ch=='1':
            self.consume()
            val = 1
            # parse B
            while True:
                ch2 = self.peek()
                if ch2=='0':
                    self.consume()
                    val = val*2+0
                elif ch2=='1':
                    self.consume()
                    val = val*2+1
                else:
                    break
            return val
        else:
            raise ParseError("Expected number at pos {}".format(self.pos))


def main():
    expr = sys.stdin.readline().rstrip('\n')
    # Letter set in encrypted input
    letters = set(ch for ch in expr if ch.isalpha())

    # If no '=' in encrypted input literals, we can try letters mapped to '='
    # We know original has exactly one '='

    # prepare a mapping from letters -> original char
    # they must be distinct chars chosen from ORIG_CHARS
    # also literals in input must match original char at that position

    # For each letter, candidate chars = ORIG_CHARS
    # But we can prune some:
    # If same letter occurs multiple times, must be consistent mapping
    # literals in the input should match the original char at positions not letters

    # For that we first collect occurrences of each letter positions
    letter_positions = defaultdict(list)
    for i,ch in enumerate(expr):
        if ch.isalpha():
            letter_positions[ch].append(i)

    # For each letter, possible chars = ORIG_CHARS
    # But if at one occurrence the letter is 'A' and at position i, literal at expr[i] is letter,
    # we don't know original char. We try all candidates.

    # But we can prune candidates when a letter and a literal appear at same pos, letters are distinct from literals.

    # So we try all assignments letter->original char in ORIG_CHARS,
    # with letters mapping distinct original chars,
    # apply substitution to encrypted input,
    # check if results have exactly one '=' literal,
    # parse and eval,
    # count correct.

    letters_list = list(letters)
    L = len(letters_list)

    # Precompute literals positions to check no conflict
    # For literal positions: if ch not letter, must match itself in final mapping
    # After substitution of letters, combined string s' is original string candidate.

    # We'll implement DFS to assign letters distinct original chars.

    # We store:
    # assigned = dict letter->orig_char
    # used_chars = set of orig_char already assigned

    res = 0

    def check_and_count():
        # produce candidate original string by replacing letters by assigned chars
        s2 = list(expr)
        for ltr,ch2 in assigned.items():
            for pos in letter_positions[ltr]:
                s2[pos] = ch2
        s2 = ''.join(s2)

        # Check equal sign count must be exactly 1
        if s2.count('=')!=1:
            return 0

        # Check all chars in s2 in ORIG_CHARS or literals '0','1','+','-','*','(',')','='
        # Here allowed chars:
        # The original chars are ORIG_CHARS
        # Note the input literals must be from valid chars, otherwise no parse.
        # So if s2 contains any char not in ORIG_CHARS, reject
        for c in s2:
            if c not in ORIG_CHARS:
                return 0

        # Parse and evaluate:
        try:
            parser = Parser(s2)
            val_left, val_right = parser.parseQ()
            if val_left==val_right:
                return 1
            else:
                return 0
        except ParseError:
            return 0

    def dfs(i, assigned, used_chars):
        nonlocal res
        if i==L:
            res += check_and_count()
            return
        ltr = letters_list[i]
        for c in ORIG_CHARS:
            if c in used_chars:
                continue
            # assign
            assigned[ltr] = c
            used_chars.add(c)
            dfs(i+1, assigned, used_chars)
            used_chars.remove(c)
            del assigned[ltr]

    if L==0:
        # no letters, just try parsing literal expression as is
        # Check '=' count
        if expr.count('=')==1:
            valid = 0
            for c in expr:
                if c not in ORIG_CHARS:
                    print(0)
                    return
            try:
                parser = Parser(expr)
                val_left, val_right = parser.parseQ()
                if val_left==val_right:
                    valid = 1
            except ParseError:
                valid = 0
            print(valid)
        else:
            print(0)
    else:
        dfs(0, {}, set())
        print(res)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0015031944494694471
    2. 'os' → logprob: -6.501502990722656
    3. '"os' → logprob: -14.626502990722656
    4. ' re' → logprob: -16.251502990722656
    5. ' math' → logprob: -16.251502990722656
    6. '_os' → logprob: -16.251502990722656
    7. '	os' → logprob: -16.501502990722656
    8. ' json' → logprob: -17.126502990722656
    9. ' io' → logprob: -18.126502990722656
    10. ' argparse' → logprob: -19.001502990722656

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.036800723522901535
    2. '\' → logprob: -4.411800861358643
    3. '.' → logprob: -4.661800861358643
    4. '[' → logprob: -5.286800861358643
    5. 'import' → logprob: -5.911800861358643
    6. '```' → logprob: -6.411800861358643
    7. 'newline' → logprob: -7.161800861358643
    8. '\b' → logprob: -7.161800861358643
    9. '\r' → logprob: -7.411800861358643
    10. '
' → logprob: -7.536800861358643

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.297029584646225
    2. 'import' → logprob: -2.297029495239258
    3. '.' → logprob: -3.172029495239258
    4. '```' → logprob: -3.172029495239258
    5. '[' → logprob: -4.297029495239258
    6. ',' → logprob: -4.422029495239258
    7. '\' → logprob: -4.422029495239258
    8. '

' → logprob: -4.422029495239258
    9. '
' → logprob: -4.672029495239258
    10. '#' → logprob: -5.422029495239258

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4825841188430786
    2. ' os' → logprob: -1.4825841188430786
    3. ' typing' → logprob: -2.107583999633789
    4. 'collections' → logprob: -4.232583999633789
    5. ' pathlib' → logprob: -5.232583999633789
    6. ' io' → logprob: -5.857583999633789
    7. 'os' → logprob: -5.982583999633789
    8. ' datetime' → logprob: -6.232583999633789
    9. ' ' → logprob: -6.357583999633789
    10. ' dat' → logprob: -7.107583999633789

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5237688422203064
    2. ' import' → logprob: -0.8987688422203064
    3. '.' → logprob: -7.648768901824951
    4. ' ' → logprob: -9.648768424987793
    5. ' defaultdict' → logprob: -10.273768424987793
    6. '<|end|>' → logprob: -10.773768424987793
    7. '	import' → logprob: -11.648768424987793
    8. '```' → logprob: -11.773768424987793
    9. '.Counter' → logprob: -12.148768424987793
    10. ' ' → logprob: -12.523768424987793

Token 9: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.12171781063079834
    2. ' deque' → logprob: -2.871717929840088
    3. ' abc' → logprob: -3.496717929840088
    4. 'deque' → logprob: -4.246717929840088
    5. ' named' → logprob: -5.121717929840088
    6. ' Counter' → logprob: -5.621717929840088
    7. 'named' → logprob: -6.246717929840088
    8. 'abc' → logprob: -7.121717929840088
    9. 'default' → logprob: -7.371717929840088
    10. 'Counter' → logprob: -8.49671745300293

Token 10: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3581637144088745
    2. '\n' → logprob: -2.233163833618164
    3. 'import' → logprob: -2.608163833618164
    4. '
' → logprob: -2.608163833618164
    5. '```' → logprob: -4.233163833618164
    6. '' → logprob: -4.733163833618164
    7. '\' → logprob: -5.483163833618164
    8. ',' → logprob: -5.483163833618164
    9. ' 

' → logprob: -5.608163833618164
    10. ',

' → logprob: -6.608163833618164

Token 11: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8021837472915649
    2. 'd' → logprob: -0.9271837472915649
    3. 'data' → logprob: -2.3021836280822754
    4. 'default' → logprob: -4.427183628082275
    5. '\' → logprob: -4.552183628082275
    6. 'class' → logprob: -5.052183628082275
    7. 'import' → logprob: -5.552183628082275
    8. '
' → logprob: -5.677183628082275
    9. '' → logprob: -5.927183628082275
    10. '\n' → logprob: -5.927183628082275

Token 12: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1517960956552997e-05
    2. ' .' → logprob: -13.125011444091797
    3. '.import' → logprob: -13.375011444091797
    4. '.​' → logprob: -13.500011444091797
    5. '.`' → logprob: -14.000011444091797
    6. '."""' → logprob: -14.250011444091797
    7. '.exit' → logprob: -14.625011444091797
    8. '.readline' → logprob: -14.750011444091797
    9. '.user' → logprob: -14.875011444091797
    10. '.stdout' → logprob: -15.125011444091797

Token 13: 'rec' (ID: 9285)
  Prédit: 'encoding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encoding' → logprob: -0.7189432382583618
    2. 'rec' → logprob: -1.9689432382583618
    3. 'default' → logprob: -2.5939431190490723
    4. '_encoding' → logprob: -2.5939431190490723
    5. 'trace' → logprob: -2.9689431190490723
    6. 'set' → logprob: -3.3439431190490723
    7. '_version' → logprob: -3.5939431190490723
    8. 'e' → logprob: -3.9689431190490723
    9. 's' → logprob: -4.468943119049072
    10. 'ex' → logprob: -4.593943119049072

Token 14: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.010073489509522915
    2. 'limit' → logprob: -4.760073661804199
    3. '_limit' → logprob: -7.260073661804199
    4. 'ursive' → logprob: -8.2600736618042
    5. 'urs' → logprob: -8.6350736618042
    6. 'urf' → logprob: -9.2600736618042
    7. 'ur' → logprob: -10.0100736618042
    8. 'ut' → logprob: -10.3850736618042
    9. 'utf' → logprob: -10.3850736618042
    10. 'use' → logprob: -10.5100736618042

Token 15: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -5.9153885558771435e-06
    2. 'depth' → logprob: -12.500005722045898
    3. ' limit' → logprob: -13.500005722045898
    4. 'lim' → logprob: -15.000005722045898
    5. 'Limit' → logprob: -15.125005722045898
    6. '_limit' → logprob: -15.750005722045898
    7. '-limit' → logprob: -17.2500057220459
    8. 'ault' → logprob: -18.0000057220459
    9. '(limit' → logprob: -18.1250057220459
    10. '-' → logprob: -18.1250057220459

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. ' (' → logprob: -13.375003814697266
    3. '(

' → logprob: -14.375003814697266
    4. '(
' → logprob: -14.500003814697266
    5. '((' → logprob: -15.250003814697266
    6. '("("' → logprob: -15.250003814697266
    7. '('' → logprob: -17.000003814697266
    8. '()' → logprob: -17.250003814697266
    9. '(**' → logprob: -17.375003814697266
    10. '40' → logprob: -17.375003814697266

Token 17: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03804768621921539
    2. '100' → logprob: -3.2880477905273438
    3. '300' → logprob: -12.663047790527344
    4. ' ' → logprob: -13.788047790527344
    5. '500' → logprob: -14.163047790527344
    6. '1' → logprob: -15.038047790527344
    7. '(' → logprob: -15.163047790527344
    8. '200' → logprob: -15.413047790527344
    9. '999' → logprob: -15.788047790527344
    10. '   ' → logprob: -16.038047790527344

Token 18: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013780754059553146
    2. '000' → logprob: -4.38878059387207
    3. '00' → logprob: -6.76378059387207
    4. '6' → logprob: -9.88878059387207
    5. '4' → logprob: -9.88878059387207
    6. '5' → logprob: -11.51378059387207
    7. '2' → logprob: -13.51378059387207
    8. '7' → logprob: -14.26378059387207
    9. ')' → logprob: -14.26378059387207
    10. ''' → logprob: -14.76378059387207

Token 19: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.000432695698691532
    2. '6' → logprob: -8.000432968139648
    3. '8' → logprob: -9.625432968139648
    4. '9' → logprob: -10.375432968139648
    5. '5' → logprob: -19.37543296813965
    6. '```' → logprob: -19.37543296813965
    7. ')' → logprob: -20.12543296813965
    8. ' ' → logprob: -20.50043296813965
    9. '}' → logprob: -21.75043296813965
    10. '**' → logprob: -22.62543296813965

Token 20: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -15.375000953674316
    5. '```' → logprob: -17.125
    6. '),' → logprob: -18.0
    7. '}' → logprob: -18.375
    8. ')))' → logprob: -18.375
    9. '）' → logprob: -18.75
    10. ')

' → logprob: -18.875

Token 21: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13725726306438446
    2. 'class' → logprob: -2.5122573375701904
    3. 'n' → logprob: -3.1372573375701904
    4. '\' → logprob: -6.512257099151611
    5. 'd' → logprob: -7.512257099151611
    6. '

' → logprob: -7.762257099151611
    7. 'a' → logprob: -8.51225757598877
    8. 'data' → logprob: -8.63725757598877
    9. '\n' → logprob: -8.63725757598877
    10. 'N' → logprob: -8.76225757598877

Token 22: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18245039880275726
    2. 'd' → logprob: -1.9324504137039185
    3. 'class' → logprob: -4.807450294494629
    4. '#' → logprob: -5.057450294494629
    5. 'de' → logprob: -5.807450294494629
    6. 'n' → logprob: -5.807450294494629
    7. 'N' → logprob: -8.182450294494629
    8. 'D' → logprob: -8.432450294494629
    9. 'dp' → logprob: -8.807450294494629
    10. 'input' → logprob: -9.432450294494629

Token 23: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8130533695220947
    2. ' def' → logprob: -1.6880533695220947
    3. ' input' → logprob: -2.1880533695220947
    4. ' main' → logprob: -2.4380533695220947
    5. ' code' → logprob: -3.4380533695220947
    6. '#' → logprob: -3.4380533695220947
    7. ' #' → logprob: -3.5630533695220947
    8. ' ' → logprob: -4.438053131103516
    9. 'input' → logprob: -4.563053131103516
    10. ' class' → logprob: -5.188053131103516

Token 24: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9991328716278076
    2. ':' → logprob: -1.1241328716278076
    3. ' is' → logprob: -1.6241328716278076
    4. '<|end|>' → logprob: -3.4991328716278076
    5. '_' → logprob: -3.6241328716278076
    6. '<|end|>' → logprob: -3.8741328716278076
    7. ',' → logprob: -4.624133110046387
    8. ''s' → logprob: -4.874133110046387
    9. ' was' → logprob: -6.124133110046387
    10. 's' → logprob: -6.624133110046387

Token 25: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03203936666250229
    2. 'class' → logprob: -3.6570394039154053
    3. '#' → logprob: -5.657039165496826
    4. 'n' → logprob: -7.407039165496826
    5. ' def' → logprob: -7.407039165496826
    6. 'de' → logprob: -8.407039642333984
    7. ' ' → logprob: -8.782039642333984
    8. ' class' → logprob: -9.032039642333984
    9. 'input' → logprob: -9.032039642333984
    10. 'd' → logprob: -9.532039642333984

Token 26: ' Given' (ID: 29844)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10907571017742157
    2. ' def' → logprob: -2.4840757846832275
    3. '#' → logprob: -4.984075546264648
    4. 'n' → logprob: -5.859075546264648
    5. 'class' → logprob: -6.109075546264648
    6. ' n' → logprob: -6.609075546264648
    7. ' #' → logprob: -6.734075546264648
    8. ' class' → logprob: -6.734075546264648
    9. ' input' → logprob: -7.234075546264648
    10. 'input' → logprob: -7.609075546264648

Token 27: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06118575483560562
    2. 'a' → logprob: -3.186185836791992
    3. ' an' → logprob: -4.061185836791992
    4. ' the' → logprob: -8.186185836791992
    5. ' ' → logprob: -8.311185836791992
    6. 'an' → logprob: -9.686185836791992
    7. '<|end|>' → logprob: -9.686185836791992
    8. ' input' → logprob: -10.186185836791992
    9. ' some' → logprob: -10.436185836791992
    10. ' n' → logprob: -11.686185836791992

Token 28: ' encrypted' (ID: 47764)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.4491109848022461
    2. ' input' → logprob: -1.824110984802246
    3. 'array' → logprob: -2.699110984802246
    4. ' integer' → logprob: -3.074110984802246
    5. ' und' → logprob: -3.324110984802246
    6. 'input' → logprob: -4.449110984802246
    7. 'und' → logprob: -4.574110984802246
    8. 'integer' → logprob: -5.199110984802246
    9. 'n' → logprob: -5.949110984802246
    10. ' adjacency' → logprob: -6.199110984802246

Token 29: ' equation' (ID: 42006)
  Prédit: ' message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' message' → logprob: -0.6577179431915283
    2. 'message' → logprob: -1.1577179431915283
    3. ' string' → logprob: -2.6577179431915283
    4. 'string' → logprob: -3.2827179431915283
    5. ' text' → logprob: -3.4077179431915283
    6. 'text' → logprob: -4.407717704772949
    7. '_message' → logprob: -4.657717704772949
    8. '_string' → logprob: -6.407717704772949
    9. '_text' → logprob: -7.657717704772949
    10. 'sentence' → logprob: -7.907717704772949

Token 30: ' string' (ID: 1621)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46113690733909607
    2. ':' → logprob: -1.5861369371414185
    3. '#' → logprob: -3.086136817932129
    4. ' ' → logprob: -3.461136817932129
    5. ' =' → logprob: -4.211136817932129
    6. '=' → logprob: -4.211136817932129
    7. '\' → logprob: -4.836136817932129
    8. 's' → logprob: -4.836136817932129
    9. '\n' → logprob: -5.211136817932129
    10. ' ,' → logprob: -5.461136817932129

Token 31: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18173983693122864
    2. ':' → logprob: -2.5567398071289062
    3. 's' → logprob: -3.8067398071289062
    4. '\' → logprob: -3.9317398071289062
    5. ' =' → logprob: -5.056739807128906
    6. '\n' → logprob: -5.056739807128906
    7. '#' → logprob: -5.181739807128906
    8. ',
' → logprob: -5.431739807128906
    9. ' ,' → logprob: -5.556739807128906
    10. '=' → logprob: -5.931739807128906

Token 32: 'length' (ID: 7914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9771701693534851
    2. ')' → logprob: -1.3521702289581299
    3. ' s' → logprob: -2.22717022895813
    4. 'e' → logprob: -3.10217022895813
    5. 'a' → logprob: -3.35217022895813
    6. ' )' → logprob: -3.47717022895813
    7. ' e' → logprob: -4.227169990539551
    8. 'like' → logprob: -4.352169990539551
    9. '```' → logprob: -4.477169990539551
    10. ' a' → logprob: -4.602169990539551

Token 33: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31353330612182617
    2. ' )' → logprob: -2.188533306121826
    3. '=' → logprob: -2.563533306121826
    4. ' <=' → logprob: -3.688533306121826
    5. ' =' → logprob: -4.063533306121826
    6. ' of' → logprob: -4.313533306121826
    7. ' ' → logprob: -4.563533306121826
    8. ' >' → logprob: -6.063533306121826
    9. '<=' → logprob: -6.063533306121826
    10. ':' → logprob: -6.313533306121826

Token 34: '31' (ID: 2911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8385884165763855
    2. '100' → logprob: -0.8385884165763855
    3. '50' → logprob: -3.0885884761810303
    4. '200' → logprob: -3.5885884761810303
    5. '20' → logprob: -3.7135884761810303
    6. '10' → logprob: -4.088588237762451
    7. '500' → logprob: -5.338588237762451
    8. '30' → logprob: -5.588588237762451
    9. '150' → logprob: -5.838588237762451
    10. '80' → logprob: -6.463588237762451

Token 35: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14680001139640808
    2. '),' → logprob: -2.2718000411987305
    3. ' )' → logprob: -3.8968000411987305
    4. ' ),' → logprob: -5.1468000411987305
    5. ')
' → logprob: -6.0218000411987305
    6. '0' → logprob: -6.5218000411987305
    7. ',' → logprob: -7.3968000411987305
    8. '):' → logprob: -7.7718000411987305
    9. '**' → logprob: -8.02180004119873
    10. ' )
' → logprob: -8.39680004119873

Token 36: ' where' (ID: 1919)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9840059876441956
    2. ' find' → logprob: -1.8590059280395508
    3. 'def' → logprob: -2.109005928039551
    4. ' we' → logprob: -2.109005928039551
    5. ' ' → logprob: -2.484005928039551
    6. ' #' → logprob: -3.359005928039551
    7. ' def' → logprob: -3.359005928039551
    8. ' you' → logprob: -4.234005928039551
    9. 'we' → logprob: -4.359005928039551
    10. ' the' → logprob: -4.484005928039551

Token 37: ' some' (ID: 1236)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.1292940378189087
    2. ' each' → logprob: -1.5042940378189087
    3. ' the' → logprob: -1.8792940378189087
    4. 'the' → logprob: -2.254293918609619
    5. 'variables' → logprob: -3.504293918609619
    6. 'a' → logprob: -3.504293918609619
    7. 'numbers' → logprob: -4.129293918609619
    8. 'digits' → logprob: -4.254293918609619
    9. ' variables' → logprob: -4.629293918609619
    10. ' numbers' → logprob: -5.004293918609619

Token 38: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.9268984794616699
    2. 'characters' → logprob: -1.55189847946167
    3. ' parts' → logprob: -1.80189847946167
    4. 'tokens' → logprob: -3.30189847946167
    5. 'parts' → logprob: -3.67689847946167
    6. ' tokens' → logprob: -3.80189847946167
    7. ' spaces' → logprob: -3.80189847946167
    8. '=' → logprob: -3.80189847946167
    9. ' of' → logprob: -3.80189847946167
    10. ' letters' → logprob: -4.17689847946167

Token 39: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.08234097808599472
    2. ' may' → logprob: -3.457340955734253
    3. '<|end|>' → logprob: -3.832340955734253
    4. 'are' → logprob: -5.082341194152832
    5. ' can' → logprob: -5.332341194152832
    6. ' might' → logprob: -5.332341194152832
    7. '=' → logprob: -6.207341194152832
    8. ' =' → logprob: -6.582341194152832
    9. '<|end|>' → logprob: -6.582341194152832
    10. '#' → logprob: -7.082341194152832

Token 40: ' replaced' (ID: 21009)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -1.043517827987671
    2. 'unknown' → logprob: -1.918517827987671
    3. ''' → logprob: -2.293517827987671
    4. 'letters' → logprob: -2.668517827987671
    5. 'digits' → logprob: -2.668517827987671
    6. 'missing' → logprob: -3.418517827987671
    7. ''s' → logprob: -3.543517827987671
    8. 're' → logprob: -3.793517827987671
    9. '+' → logprob: -4.04351806640625
    10. ' replaced' → logprob: -4.04351806640625

Token 41: ' by' (ID: 656)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8098889589309692
    2. ' by' → logprob: -0.8098889589309692
    3. 'with' → logprob: -2.6848888397216797
    4. 'by' → logprob: -3.1848888397216797
    5. '_' → logprob: -8.93488883972168
    6. ' ' → logprob: -9.43488883972168
    7. '<|end|>' → logprob: -9.80988883972168
    8. '<|end|>' → logprob: -9.80988883972168
    9. '```' → logprob: -9.80988883972168
    10. '#' → logprob: -10.05988883972168

Token 42: ' letters' (ID: 18151)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.9710481762886047
    2. 'variables' → logprob: -1.47104811668396
    3. 'digits' → logprob: -2.59604811668396
    4. 'a' → logprob: -2.72104811668396
    5. 'numbers' → logprob: -3.09604811668396
    6. 'letters' → logprob: -3.47104811668396
    7. ''' → logprob: -3.72104811668396
    8. 'unknown' → logprob: -4.096048355102539
    9. ' digits' → logprob: -4.096048355102539
    10. ' variables' → logprob: -4.096048355102539

Token 43: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30003881454467773
    2. ':' → logprob: -1.4250388145446777
    3. '#' → logprob: -5.550038814544678
    4. '_' → logprob: -6.050038814544678
    5. '.' → logprob: -6.300038814544678
    6. '=' → logprob: -6.425038814544678
    7. ',
' → logprob: -6.425038814544678
    8. '\' → logprob: -6.550038814544678
    9. 'def' → logprob: -6.550038814544678
    10. ':
' → logprob: -7.175038814544678

Token 44: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5851907730102539
    2. ',' → logprob: -0.9601907730102539
    3. ' ' → logprob: -3.585190773010254
    4. ' ,' → logprob: -4.835190773010254
    5. 'def' → logprob: -5.210190773010254
    6. '_' → logprob: -6.085190773010254
    7. 'a' → logprob: -6.085190773010254
    8. ' #' → logprob: -6.210190773010254
    9. '\' → logprob: -6.210190773010254
    10. ' we' → logprob: -6.460190773010254

Token 45: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.014880186878144741
    2. ' we' → logprob: -5.514880180358887
    3. 'def' → logprob: -5.889880180358887
    4. ' the' → logprob: -6.514880180358887
    5. 'we' → logprob: -6.514880180358887
    6. ' #' → logprob: -6.639880180358887
    7. ' and' → logprob: -6.764880180358887
    8. 'and' → logprob: -7.389880180358887
    9. ' find' → logprob: -7.764880180358887
    10. ' def' → logprob: -8.389880180358887

Token 46: ' want' (ID: 1682)
  Prédit: ' want'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.38017168641090393
    2. ' need' → logprob: -1.3801716566085815
    3. 'need' → logprob: -3.005171775817871
    4. 'want' → logprob: -4.755171775817871
    5. ''re' → logprob: -6.380171775817871
    6. ''ll' → logprob: -6.505171775817871
    7. '#' → logprob: -7.380171775817871
    8. ''d' → logprob: -7.880171775817871
    9. ' have' → logprob: -8.005171775817871
    10. ' can' → logprob: -8.005171775817871

Token 47: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42878514528274536
    2. 'to' → logprob: -1.0537850856781006
    3. '<|end|>' → logprob: -10.05378532409668
    4. '=' → logprob: -11.80378532409668
    5. '<|end|>' → logprob: -11.80378532409668
    6. 'a' → logprob: -12.17878532409668
    7. 'def' → logprob: -12.17878532409668
    8. '#' → logprob: -12.92878532409668
    9. '_to' → logprob: -13.17878532409668
    10. ' the' → logprob: -13.30378532409668

Token 48: ' count' (ID: 3605)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.1904289573431015
    2. ' find' → logprob: -2.0654289722442627
    3. 'restore' → logprob: -3.9404289722442627
    4. 'solve' → logprob: -4.690428733825684
    5. 'decode' → logprob: -5.315428733825684
    6. 'decrypt' → logprob: -5.815428733825684
    7. 'recover' → logprob: -6.315428733825684
    8. 'det' → logprob: -6.440428733825684
    9. 'assign' → logprob: -6.815428733825684
    10. 'replace' → logprob: -6.940428733825684

Token 49: ' how' (ID: 1495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05427567660808563
    2. 'the' → logprob: -3.0542757511138916
    3. ' how' → logprob: -5.3042755126953125
    4. ' ' → logprob: -8.304275512695312
    5. 'how' → logprob: -9.054275512695312
    6. '<|end|>' → logprob: -9.304275512695312
    7. '(' → logprob: -9.429275512695312
    8. '_' → logprob: -10.554275512695312
    9. '_the' → logprob: -10.679275512695312
    10. ')' → logprob: -10.929275512695312

Token 50: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.14280258119106293
    2. 'many' → logprob: -2.0178024768829346
    3. '_many' → logprob: -9.642802238464355
    4. ' the' → logprob: -10.767802238464355
    5. ' often' → logprob: -11.392802238464355
    6. 'Many' → logprob: -11.642802238464355
    7. 'the' → logprob: -12.017802238464355
    8. '-many' → logprob: -12.142802238464355
    9. 'often' → logprob: -12.392802238464355
    10. ' to' → logprob: -13.892802238464355

Token 51: ' possible' (ID: 4149)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.7165849208831787
    2. ' valid' → logprob: -1.3415849208831787
    3. 'ways' → logprob: -2.8415849208831787
    4. 'possible' → logprob: -2.9665849208831787
    5. ' possible' → logprob: -3.4665849208831787
    6. 'valid' → logprob: -3.4665849208831787
    7. ' different' → logprob: -3.9665849208831787
    8. ' solutions' → logprob: -4.091585159301758
    9. 'different' → logprob: -4.466585159301758
    10. 'solutions' → logprob: -4.591585159301758

Token 52: ' original' (ID: 4756)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.9691196084022522
    2. ' solutions' → logprob: -1.7191195487976074
    3. '<|end|>' → logprob: -2.3441195487976074
    4. ' assignments' → logprob: -2.9691195487976074
    5. ' ways' → logprob: -2.9691195487976074
    6. ' complet' → logprob: -2.9691195487976074
    7. 'solutions' → logprob: -3.4691195487976074
    8. ' replacements' → logprob: -3.5941195487976074
    9. 's' → logprob: -4.094119548797607
    10. 'valid' → logprob: -4.094119548797607

Token 53: ' equations' (ID: 61524)
  Prédit: ' equations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equations' → logprob: -0.5220149755477905
    2. 'equ' → logprob: -1.2720149755477905
    3. ' original' → logprob: -3.77201509475708
    4. ' complet' → logprob: -3.77201509475708
    5. ' characters' → logprob: -4.77201509475708
    6. ' digits' → logprob: -4.77201509475708
    7. ' numbers' → logprob: -5.02201509475708
    8. ' ' → logprob: -5.02201509475708
    9. 'original' → logprob: -5.52201509475708
    10. 'characters' → logprob: -5.64701509475708

Token 54: ' conform' (ID: 19627)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.216728925704956
    2. '
' → logprob: -1.341728925704956
    3. ':' → logprob: -1.841728925704956
    4. '\' → logprob: -2.466728925704956
    5. 'def' → logprob: -2.716728925704956
    6. '```' → logprob: -3.841728925704956
    7. ' ' → logprob: -3.966728925704956
    8. ',' → logprob: -4.341729164123535
    9. '\n' → logprob: -4.341729164123535
    10. '<|end|>' → logprob: -4.591729164123535

Token 55: 'ing' (ID: 289)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08064837008714676
    2. 'to' → logprob: -3.705648422241211
    3. 'ing' → logprob: -4.330648422241211
    4. 's' → logprob: -4.455648422241211
    5. '_to' → logprob: -4.830648422241211
    6. ' ' → logprob: -5.830648422241211
    7. '<|end|>' → logprob: -5.830648422241211
    8. 'ations' → logprob: -6.205648422241211
    9. '_' → logprob: -6.580648422241211
    10. 'a' → logprob: -6.830648422241211

Token 56: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.029847217723727226
    2. 'to' → logprob: -3.5298471450805664
    3. '<|end|>' → logprob: -10.029847145080566
    4. '_to' → logprob: -11.029847145080566
    5. ' with' → logprob: -11.279847145080566
    6. '<|end|>' → logprob: -11.779847145080566
    7. ' the' → logprob: -12.779847145080566
    8. '_' → logprob: -13.279847145080566
    9. '`' → logprob: -13.529847145080566
    10. '```' → logprob: -13.529847145080566

Token 57: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.643518328666687
    2. ' the' → logprob: -0.768518328666687
    3. ' this' → logprob: -5.518518447875977
    4. 'this' → logprob: -5.768518447875977
    5. ' a' → logprob: -6.768518447875977
    6. 'a' → logprob: -6.893518447875977
    7. ' that' → logprob: -7.768518447875977
    8. ' given' → logprob: -8.143518447875977
    9. 'that' → logprob: -8.268518447875977
    10. ' these' → logprob: -9.518518447875977

Token 58: ' grammar' (ID: 41735)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.1328662782907486
    2. 'given' → logprob: -3.132866382598877
    3. 'pattern' → logprob: -3.507866382598877
    4. ' pattern' → logprob: -4.007866382598877
    5. 'constraints' → logprob: -4.382866382598877
    6. ' constraints' → logprob: -4.507866382598877
    7. ' format' → logprob: -6.632866382598877
    8. 'constraint' → logprob: -6.632866382598877
    9. ' input' → logprob: -7.257866382598877
    10. ' problem' → logprob: -7.507866382598877

Token 59: ' exist' (ID: 4310)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20104622840881348
    2. '

' → logprob: -2.7010462284088135
    3. 'def' → logprob: -3.7010462284088135
    4. '\' → logprob: -3.7010462284088135
    5. '```' → logprob: -3.8260462284088135
    6. '#' → logprob: -3.9510462284088135
    7. '' → logprob: -5.576045989990234
    8. '<|end|>' → logprob: -5.826045989990234
    9. ' 

' → logprob: -6.076045989990234
    10. ' ' → logprob: -6.201045989990234

Token 60: ' whose' (ID: 12119)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1653909534215927
    2. '\' → logprob: -3.040390968322754
    3. '

' → logprob: -3.165390968322754
    4. '#' → logprob: -3.790390968322754
    5. '```' → logprob: -4.290390968322754
    6. 'def' → logprob: -5.040390968322754
    7. '\n' → logprob: -5.165390968322754
    8. '' → logprob: -5.415390968322754
    9. '<|end|>' → logprob: -5.790390968322754
    10. ':' → logprob: -7.040390968322754

Token 61: '
' (ID: 198)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.1025744676589966
    2. ' next' → logprob: -1.8525744676589966
    3. ' letters' → logprob: -1.9775744676589966
    4. 'tokens' → logprob: -2.352574348449707
    5. ' =' → logprob: -3.102574348449707
    6. ' result' → logprob: -3.227574348449707
    7. ' characters' → logprob: -3.602574348449707
    8. ' solution' → logprob: -3.727574348449707
    9. ' original' → logprob: -4.227574348449707
    10. '\n' → logprob: -4.227574348449707

Token 62: '#' (ID: 2)
  Prédit: ' letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -1.4939192533493042
    2. ' next' → logprob: -1.9939192533493042
    3. ' tokens' → logprob: -2.3689193725585938
    4. 'tokens' → logprob: -2.3689193725585938
    5. ' length' → logprob: -2.7439193725585938
    6. 'letters' → logprob: -2.8689193725585938
    7. ' characters' → logprob: -3.2439193725585938
    8. '#' → logprob: -3.4939193725585938
    9. ' original' → logprob: -3.4939193725585938
    10. 'length' → logprob: -3.7439193725585938

Token 63: ' encrypted' (ID: 47764)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.1090409755706787
    2. ' length' → logprob: -1.4840409755706787
    3. ' next' → logprob: -1.7340409755706787
    4. ' characters' → logprob: -2.4840409755706787
    5. ' letters' → logprob: -3.3590409755706787
    6. 'tokens' → logprob: -3.6090409755706787
    7. ' original' → logprob: -4.234041213989258
    8. ' solution' → logprob: -4.484041213989258
    9. ' last' → logprob: -4.734041213989258
    10. ' result' → logprob: -4.984041213989258

Token 64: ' form' (ID: 1625)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.8469099998474121
    2. ' equation' → logprob: -1.971909999847412
    3. ' code' → logprob: -2.471909999847412
    4. ' strings' → logprob: -2.721909999847412
    5. '_string' → logprob: -3.346909999847412
    6. ' text' → logprob: -3.471909999847412
    7. ' equations' → logprob: -3.971909999847412
    8. '_code' → logprob: -3.971909999847412
    9. '_' → logprob: -4.096909999847412
    10. ' form' → logprob: -4.221909999847412

Token 65: ' matches' (ID: 15248)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5371004939079285
    2. ' matches' → logprob: -1.9121005535125732
    3. ' ends' → logprob: -2.1621005535125732
    4. ' =' → logprob: -3.7871005535125732
    5. ' continues' → logprob: -3.9121005535125732
    6. ' starts' → logprob: -4.287100315093994
    7. ' contains' → logprob: -4.412100315093994
    8. ''s' → logprob: -4.912100315093994
    9. ' end' → logprob: -5.162100315093994
    10. '```' → logprob: -5.162100315093994

Token 66: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3689515590667725
    2. '#' → logprob: -1.6189515590667725
    3. '
' → logprob: -1.7439515590667725
    4. '\' → logprob: -1.8689515590667725
    5. '

' → logprob: -2.1189515590667725
    6. '_' → logprob: -3.7439515590667725
    7. ':' → logprob: -3.9939515590667725
    8. '' → logprob: -4.368951797485352
    9. ' ' → logprob: -4.493951797485352
    10. '```' → logprob: -4.618951797485352

Token 67: ' input' (ID: 3422)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.10196217894554138
    2. ' encrypted' → logprob: -2.726962089538574
    3. ' input' → logprob: -3.726962089538574
    4. 'given' → logprob: -6.601962089538574
    5. ' provided' → logprob: -6.851962089538574
    6. ' code' → logprob: -6.976962089538574
    7. 'encrypted' → logprob: -6.976962089538574
    8. ' original' → logprob: -7.601962089538574
    9. ' rest' → logprob: -7.726962089538574
    10. ' current' → logprob: -7.976962089538574

Token 68: ' string' (ID: 1621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6662279367446899
    2. '\' → logprob: -1.79122793674469
    3. '#' → logprob: -2.1662278175354004
    4. '
' → logprob: -2.4162278175354004
    5. 'class' → logprob: -2.5412278175354004
    6. '```' → logprob: -4.6662278175354
    7. '\n' → logprob: -4.9162278175354
    8. 'import' → logprob: -5.1662278175354
    9. '

' → logprob: -5.4162278175354
    10. '' → logprob: -5.6662278175354

Token 69: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.425025999546051
    2. '#' → logprob: -2.1750259399414062
    3. '\' → logprob: -2.1750259399414062
    4. 'class' → logprob: -2.5500259399414062
    5. '
' → logprob: -4.050025939941406
    6. 'd' → logprob: -5.175025939941406
    7. ':' → logprob: -5.550025939941406
    8. '```' → logprob: -5.675025939941406
    9. 'import' → logprob: -5.925025939941406
    10. '\n' → logprob: -5.925025939941406

Token 70: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7289601564407349
    2. '
' → logprob: -1.1039601564407349
    3. '\' → logprob: -2.4789600372314453
    4. '#' → logprob: -2.9789600372314453
    5. 'class' → logprob: -3.8539600372314453
    6. '' → logprob: -4.728960037231445
    7. '

' → logprob: -4.978960037231445
    8. '```' → logprob: -5.728960037231445
    9. '\n' → logprob: -6.103960037231445
    10. ' 
' → logprob: -6.603960037231445

Token 71: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26316967606544495
    2. 'class' → logprob: -1.6381696462631226
    3. '#' → logprob: -3.513169765472412
    4. '\' → logprob: -6.138169765472412
    5. 'd' → logprob: -6.638169765472412
    6. '
' → logprob: -7.138169765472412
    7. 'import' → logprob: -7.263169765472412
    8. '```' → logprob: -7.638169765472412
    9. 'n' → logprob: -7.888169765472412
    10. ' class' → logprob: -8.013169288635254

Token 72: ' encryption' (ID: 48827)
  Prédit: ' grammar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grammar' → logprob: -1.6158112287521362
    2. 'grammar' → logprob: -1.7408112287521362
    3. ' next' → logprob: -2.490811347961426
    4. ' code' → logprob: -2.615811347961426
    5. '#' → logprob: -2.615811347961426
    6. ' input' → logprob: -2.865811347961426
    7. 'input' → logprob: -2.990811347961426
    8. ' rest' → logprob: -3.115811347961426
    9. ' encrypted' → logprob: -3.240811347961426
    10. 'code' → logprob: -3.240811347961426

Token 73: ' rule' (ID: 10652)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2962511479854584
    2. ' ' → logprob: -2.921251058578491
    3. ' def' → logprob: -3.296251058578491
    4. ' =' → logprob: -3.546251058578491
    5. 'def' → logprob: -3.671251058578491
    6. ' was' → logprob: -4.17125129699707
    7. ' process' → logprob: -4.29625129699707
    8. ' of' → logprob: -4.67125129699707
    9. ''s' → logprob: -4.67125129699707
    10. ' consists' → logprob: -5.04625129699707

Token 74: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3951655328273773
    2. 's' → logprob: -1.6451655626296997
    3. ' ' → logprob: -2.64516544342041
    4. ' =' → logprob: -3.39516544342041
    5. ':' → logprob: -4.52016544342041
    6. ' involves' → logprob: -5.64516544342041
    7. 'is' → logprob: -5.77016544342041
    8. '=' → logprob: -6.02016544342041
    9. ' s' → logprob: -6.14516544342041
    10. ''' → logprob: -6.39516544342041

Token 75: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27962589263916016
    2. ' #' → logprob: -1.7796258926391602
    3. ' ' → logprob: -2.77962589263916
    4. 'def' → logprob: -5.77962589263916
    5. ' (' → logprob: -6.40462589263916
    6. ' def' → logprob: -6.65462589263916
    7. ''' → logprob: -6.77962589263916
    8. '<|end|>' → logprob: -7.27962589263916
    9. '<|end|>' → logprob: -7.65462589263916
    10. 's' → logprob: -7.65462589263916

Token 76: ' occurrences' (ID: 108073)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.747814655303955
    2. 'digits' → logprob: -1.872814655303955
    3. 'spaces' → logprob: -2.247814655303955
    4. '+' → logprob: -2.747814655303955
    5. 'operators' → logprob: -2.872814655303955
    6. 'characters' → logprob: -3.247814655303955
    7. ' digits' → logprob: -3.247814655303955
    8. 'non' → logprob: -3.372814655303955
    9. 'tokens' → logprob: -3.497814655303955
    10. 'lower' → logprob: -3.497814655303955

Token 77: ' replaced' (ID: 21009)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.018275780603289604
    2. ' are' → logprob: -4.643275737762451
    3. ' ' → logprob: -5.268275737762451
    4. 'of' → logprob: -6.018275737762451
    5. '<|end|>' → logprob: -7.768275737762451
    6. ' =' → logprob: -9.64327621459961
    7. '=' → logprob: -10.01827621459961
    8. '  ' → logprob: -10.14327621459961
    9. ' is' → logprob: -10.14327621459961
    10. 's' → logprob: -10.26827621459961

Token 78: ' from' (ID: 591)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9073986411094666
    2. ' ' → logprob: -1.4073987007141113
    3. '_' → logprob: -1.9073987007141113
    4. ''' → logprob: -3.5323987007141113
    5. '(' → logprob: -3.6573987007141113
    6. 'of' → logprob: -4.032398700714111
    7. '<|end|>' → logprob: -4.032398700714111
    8. ')' → logprob: -4.282398700714111
    9. '=' → logprob: -4.532398700714111
    10. ' by' → logprob: -4.657398700714111

Token 79: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.717913269996643
    2. 'the' → logprob: -1.842913269996643
    3. ''' → logprob: -2.0929131507873535
    4. 'A' → logprob: -2.5929131507873535
    5. ' a' → logprob: -2.8429131507873535
    6. 'letters' → logprob: -2.9679131507873535
    7. ' the' → logprob: -3.0929131507873535
    8. ''s' → logprob: -3.4679131507873535
    9. 'digits' → logprob: -3.4679131507873535
    10. '0' → logprob: -3.9679131507873535

Token 80: ' same' (ID: 2684)
  Prédit: '-z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.7191360592842102
    2. ' to' → logprob: -1.5941359996795654
    3. ''s' → logprob: -2.0941359996795654
    4. 'to' → logprob: -2.7191359996795654
    5. 'a' → logprob: -2.8441359996795654
    6. 'b' → logprob: -3.8441359996795654
    7. 'single' → logprob: -4.9691362380981445
    8. ''' → logprob: -5.0941362380981445
    9. '...' → logprob: -5.5941362380981445
    10. 'z' → logprob: -5.5941362380981445

Token 81: ' original' (ID: 4756)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.5850884914398193
    2. ' letter' → logprob: -1.7100884914398193
    3. 'character' → logprob: -2.0850884914398193
    4. ' character' → logprob: -2.2100884914398193
    5. 'original' → logprob: -5.585088729858398
    6. 'token' → logprob: -5.835088729858398
    7. ' original' → logprob: -5.835088729858398
    8. 'letters' → logprob: -5.960088729858398
    9. 'variable' → logprob: -6.085088729858398
    10. 'char' → logprob: -6.335088729858398

Token 82: ' char' (ID: 1826)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.4698445796966553
    2. 'letter' → logprob: -1.4698445796966553
    3. 'character' → logprob: -1.4698445796966553
    4. ' letter' → logprob: -1.9698445796966553
    5. ' character' → logprob: -2.2198445796966553
    6. ' token' → logprob: -4.094844818115234
    7. '<|end|>' → logprob: -4.344844818115234
    8. 'variable' → logprob: -5.219844818115234
    9. 'char' → logprob: -5.469844818115234
    10. ' variable' → logprob: -5.594844818115234

Token 83: ' must' (ID: 2804)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5068597197532654
    2. 'def' → logprob: -2.00685977935791
    3. '

' → logprob: -2.00685977935791
    4. '#' → logprob: -3.13185977935791
    5. '\' → logprob: -3.13185977935791
    6. '```' → logprob: -4.25685977935791
    7. '\n' → logprob: -4.50685977935791
    8. 'import' → logprob: -5.88185977935791
    9. '' → logprob: -6.00685977935791
    10. 'class' → logprob: -6.25685977935791

Token 84: ' map' (ID: 4014)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4803573787212372
    2. 'be' → logprob: -0.9803574085235596
    3. ' map' → logprob: -6.2303571701049805
    4. 'map' → logprob: -6.7303571701049805
    5. 'remain' → logprob: -6.8553571701049805
    6. 'have' → logprob: -7.7303571701049805
    7. ' have' → logprob: -7.7303571701049805
    8. 'match' → logprob: -8.85535717010498
    9. ' remain' → logprob: -8.85535717010498
    10. ' match' → logprob: -8.98035717010498

Token 85: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13778378069400787
    2. 'to' → logprob: -2.8877837657928467
    3. '_' → logprob: -3.7627837657928467
    4. ' =' → logprob: -4.012784004211426
    5. ' ' → logprob: -4.262784004211426
    6. '=' → logprob: -5.137784004211426
    7. '_to' → logprob: -5.262784004211426
    8. '<|end|>' → logprob: -6.262784004211426
    9. ')' → logprob: -7.012784004211426
    10. '<|end|>' → logprob: -7.387784004211426

Token 86: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5090422630310059
    2. ' a' → logprob: -1.0090422630310059
    3. ' one' → logprob: -4.634042263031006
    4. 'a' → logprob: -4.759042263031006
    5. 'the' → logprob: -4.759042263031006
    6. ' same' → logprob: -5.759042263031006
    7. ' different' → logprob: -6.759042263031006
    8. ' distinct' → logprob: -7.134042263031006
    9. ' exactly' → logprob: -7.759042263031006
    10. ' itself' → logprob: -8.134042739868164

Token 87: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.693600058555603
    2. 'same' → logprob: -0.693600058555603
    3. 's' → logprob: -9.318599700927734
    4. 'space' → logprob: -9.443599700927734
    5. ' ' → logprob: -10.068599700927734
    6. 'single' → logprob: -10.318599700927734
    7. ' sam' → logprob: -10.568599700927734
    8. ' unique' → logprob: -10.568599700927734
    9. '<|end|>' → logprob: -10.568599700927734
    10. '<|end|>' → logprob: -10.693599700927734

Token 88: ' letter' (ID: 10263)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.7940792441368103
    2. 'character' → logprob: -1.169079303741455
    3. ' original' → logprob: -2.294079303741455
    4. 'char' → logprob: -3.169079303741455
    5. ' character' → logprob: -3.294079303741455
    6. 'letter' → logprob: -3.919079303741455
    7. 'token' → logprob: -4.669079303741455
    8. 'replacement' → logprob: -4.794079303741455
    9. 'encrypted' → logprob: -5.169079303741455
    10. 'decoded' → logprob: -6.294079303741455

Token 89: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6960898637771606
    2. '
' → logprob: -1.5710898637771606
    3. '\' → logprob: -1.9460898637771606
    4. 'class' → logprob: -2.946089744567871
    5. '#' → logprob: -3.196089744567871
    6. '

' → logprob: -3.446089744567871
    7. '```' → logprob: -4.696089744567871
    8. '\n' → logprob: -5.196089744567871
    9. '' → logprob: -5.321089744567871
    10. 'import' → logprob: -6.446089744567871

Token 90: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46571850776672363
    2. ' ' → logprob: -1.7157185077667236
    3. ',' → logprob: -3.0907185077667236
    4. '_' → logprob: -3.2157185077667236
    5. '\' → logprob: -3.7157185077667236
    6. '.' → logprob: -3.9657185077667236
    7. ' 
' → logprob: -4.5907182693481445
    8. 'def' → logprob: -4.7157182693481445
    9. ':' → logprob: -4.9657182693481445
    10. '\n' → logprob: -5.0907182693481445

Token 91: ' different' (ID: 2647)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04300285503268242
    2. ' ' → logprob: -3.7930028438568115
    3. ' #' → logprob: -4.793003082275391
    4. 'def' → logprob: -5.793003082275391
    5. ' and' → logprob: -6.043003082275391
    6. ' 
' → logprob: -7.293003082275391
    7. 'import' → logprob: -7.418003082275391
    8. '\' → logprob: -7.418003082275391
    9. 'and' → logprob: -7.418003082275391
    10. ''' → logprob: -7.668003082275391

Token 92: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -1.2248938083648682
    2. '<|end|>' → logprob: -1.4748938083648682
    3. ' original' → logprob: -2.099893808364868
    4. '_chars' → logprob: -2.349893808364868
    5. '<|end|>' → logprob: -2.474893808364868
    6. '_original' → logprob: -2.974893808364868
    7. ' ' → logprob: -4.224893569946289
    8. ' tokens' → logprob: -4.349893569946289
    9. ' letters' → logprob: -4.599893569946289
    10. 'chars' → logprob: -4.599893569946289

Token 93: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.15345920622348785
    2. ' chars' → logprob: -2.403459310531616
    3. 'chars' → logprob: -4.153459072113037
    4. '_char' → logprob: -4.403459072113037
    5. '_' → logprob: -5.028459072113037
    6. ' characters' → logprob: -5.153459072113037
    7. ' _' → logprob: -6.153459072113037
    8. ' ' → logprob: -6.153459072113037
    9. '<|end|>' → logprob: -6.153459072113037
    10. 's' → logprob: -6.778459072113037

Token 94: ' never' (ID: 3779)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.03387090191245079
    2. ' ' → logprob: -4.658870697021484
    3. ' are' → logprob: -4.783870697021484
    4. '<|end|>' → logprob: -5.408870697021484
    5. ' can' → logprob: -6.033870697021484
    6. ')' → logprob: -6.033870697021484
    7. 'must' → logprob: -6.408870697021484
    8. '_' → logprob: -7.158870697021484
    9. 's' → logprob: -7.408870697021484
    10. ' =' → logprob: -7.908870697021484

Token 95: ' replaced' (ID: 21009)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4864256978034973
    2. 'map' → logprob: -0.9864256978034973
    3. ' share' → logprob: -5.486425876617432
    4. ' get' → logprob: -6.111425876617432
    5. ' overlap' → logprob: -6.236425876617432
    6. 'share' → logprob: -7.611425876617432
    7. ' have' → logprob: -7.986425876617432
    8. 'm' → logprob: -7.986425876617432
    9. ' appear' → logprob: -8.111425399780273
    10. 'appear' → logprob: -8.236425399780273

Token 96: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4456286430358887
    2. '
' → logprob: -1.6956286430358887
    3. '_' → logprob: -1.6956286430358887
    4. ',' → logprob: -2.3206286430358887
    5. 'def' → logprob: -2.6956286430358887
    6. '```' → logprob: -2.8206286430358887
    7. '#' → logprob: -2.9456286430358887
    8. '=' → logprob: -3.5706286430358887
    9. '\' → logprob: -3.5706286430358887
    10. ')' → logprob: -3.5706286430358887

Token 97: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.506776750087738
    2. 'the' → logprob: -1.0067768096923828
    3. ' a' → logprob: -4.506776809692383
    4. 'a' → logprob: -4.756776809692383
    5. 'same' → logprob: -4.881776809692383
    6. ' same' → logprob: -5.381776809692383
    7. 'different' → logprob: -8.881776809692383
    8. ' ' → logprob: -9.381776809692383
    9. ' different' → logprob: -10.006776809692383
    10. '<|end|>' → logprob: -10.131776809692383

Token 98: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.014165864326059818
    2. ' same' → logprob: -4.264165878295898
    3. 'sam' → logprob: -14.264165878295898
    4. 's' → logprob: -14.639165878295898
    5. ' ' → logprob: -14.889165878295898
    6. '_same' → logprob: -15.764165878295898
    7. '<|end|>' → logprob: -16.5141658782959
    8. '同' → logprob: -16.5141658782959
    9. '.same' → logprob: -16.5141658782959
    10. '
' → logprob: -16.8891658782959

Token 99: ' letter' (ID: 10263)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7892990708351135
    2. '_' → logprob: -1.7892990112304688
    3. ' letter' → logprob: -2.6642990112304688
    4. '
' → logprob: -3.1642990112304688
    5. 'letter' → logprob: -3.2892990112304688
    6. '_letter' → logprob: -3.4142990112304688
    7. '_char' → logprob: -3.4142990112304688
    8. '_token' → logprob: -3.6642990112304688
    9. '\n' → logprob: -3.7892990112304688
    10. ' 
' → logprob: -4.664299011230469

Token 100: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3091026544570923
    2. '
' → logprob: -1.8091026544570923
    3. '#' → logprob: -3.4341025352478027
    4. '

' → logprob: -3.5591025352478027
    5. '\' → logprob: -4.184102535247803
    6. '```' → logprob: -4.309102535247803
    7. 'class' → logprob: -5.934102535247803
    8. ':' → logprob: -6.309102535247803
    9. '\n' → logprob: -6.434102535247803
    10. '' → logprob: -6.559102535247803

Token 101: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15123982727527618
    2. '
' → logprob: -2.6512398719787598
    3. '#' → logprob: -3.5262398719787598
    4. '\' → logprob: -4.02623987197876
    5. 'class' → logprob: -4.90123987197876
    6. '```' → logprob: -4.90123987197876
    7. '

' → logprob: -6.02623987197876
    8. 'd' → logprob: -6.65123987197876
    9. '\n' → logprob: -6.65123987197876
    10. 'import' → logprob: -7.40123987197876

Token 102: ' Some' (ID: 6083)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06936858594417572
    2. 'class' → logprob: -3.319368600845337
    3. '#' → logprob: -4.319368362426758
    4. '
' → logprob: -4.444368362426758
    5. '

' → logprob: -6.194368362426758
    6. '\' → logprob: -6.569368362426758
    7. '```' → logprob: -6.819368362426758
    8. '\n' → logprob: -7.569368362426758
    9. 'import' → logprob: -8.694368362426758
    10. 'n' → logprob: -8.944368362426758

Token 103: ' occurrences' (ID: 108073)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8835988640785217
    2. ' parts' → logprob: -1.508598804473877
    3. '#' → logprob: -2.508598804473877
    4. ' constraints' → logprob: -2.758598804473877
    5. ' code' → logprob: -3.133598804473877
    6. 'where' → logprob: -3.133598804473877
    7. ' letters' → logprob: -3.258598804473877
    8. ' characters' → logprob: -4.383598804473877
    9. ' comments' → logprob: -5.133598804473877
    10. 'code' → logprob: -5.133598804473877

Token 104: ' of' (ID: 328)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6257075667381287
    2. ' may' → logprob: -1.1257076263427734
    3. ' of' → logprob: -2.3757076263427734
    4. '#' → logprob: -3.6257076263427734
    5. ' might' → logprob: -5.375707626342773
    6. ' can' → logprob: -5.500707626342773
    7. 'may' → logprob: -5.750707626342773
    8. 'are' → logprob: -6.750707626342773
    9. 'of' → logprob: -6.750707626342773
    10. ' were' → logprob: -6.875707626342773

Token 105: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -2.016284704208374
    2. 'the' → logprob: -2.016284704208374
    3. ' letters' → logprob: -2.266284704208374
    4. 'original' → logprob: -2.641284704208374
    5. ' original' → logprob: -2.766284704208374
    6. ' spaces' → logprob: -2.766284704208374
    7. ' a' → logprob: -2.766284704208374
    8. 'a' → logprob: -2.766284704208374
    9. 'letters' → logprob: -2.766284704208374
    10. ' characters' → logprob: -3.516284704208374

Token 106: ' char' (ID: 1826)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3462952375411987
    2. ' character' → logprob: -2.0962953567504883
    3. ' letter' → logprob: -2.3462953567504883
    4. 'l' → logprob: -2.5962953567504883
    5. 'character' → logprob: -2.9712953567504883
    6. 'c' → logprob: -3.2212953567504883
    7. 'letter' → logprob: -3.4712953567504883
    8. '?' → logprob: -3.4712953567504883
    9. '#' → logprob: -3.8462953567504883
    10. 'original' → logprob: -3.8462953567504883

Token 107: ' may' (ID: 1340)
  Prédit: ' may'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.12762506306171417
    2. ' are' → logprob: -2.752624988555908
    3. ' might' → logprob: -3.752624988555908
    4. ' can' → logprob: -3.752624988555908
    5. 'may' → logprob: -6.127624988555908
    6. ' in' → logprob: -6.377624988555908
    7. ' could' → logprob: -6.627624988555908
    8. ' ' → logprob: -6.877624988555908
    9. '#' → logprob: -7.127624988555908
    10. ' were' → logprob: -8.002625465393066

Token 108: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.06940896809101105
    2. ' not' → logprob: -3.069408893585205
    3. 'be' → logprob: -5.069408893585205
    4. ' remain' → logprob: -5.069408893585205
    5. 'not' → logprob: -5.444408893585205
    6. ' have' → logprob: -6.694408893585205
    7. ' appear' → logprob: -6.944408893585205
    8. 'remain' → logprob: -7.944408893585205
    9. ' already' → logprob: -8.819409370422363
    10. ' contain' → logprob: -8.944409370422363

Token 109: ' replaced' (ID: 21009)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.741363763809204
    2. ' missing' → logprob: -1.991363763809204
    3. 'not' → logprob: -2.366363763809204
    4. 'missing' → logprob: -2.491363763809204
    5. 'left' → logprob: -2.741363763809204
    6. 'un' → logprob: -2.741363763809204
    7. 'already' → logprob: -2.866363763809204
    8. ' not' → logprob: -2.991363763809204
    9. ' replaced' → logprob: -3.241363763809204
    10. 'unknown' → logprob: -3.366363763809204

Token 110: ',' (ID: 11)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.2946329414844513
    2. 'by' → logprob: -2.169632911682129
    3. '<|end|>' → logprob: -3.294632911682129
    4. '_' → logprob: -3.794632911682129
    5. ' ' → logprob: -3.794632911682129
    6. '#' → logprob: -4.294632911682129
    7. ')' → logprob: -5.419632911682129
    8. ',' → logprob: -5.544632911682129
    9. '=' → logprob: -5.544632911682129
    10. '```' → logprob: -5.669632911682129

Token 111: ' others' (ID: 5036)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34661778807640076
    2. ' but' → logprob: -1.7216178178787231
    3. ' and' → logprob: -3.2216176986694336
    4. 'and' → logprob: -4.096617698669434
    5. ' #' → logprob: -4.096617698669434
    6. 'but' → logprob: -4.221617698669434
    7. ' while' → logprob: -4.721617698669434
    8. ' ' → logprob: -5.346617698669434
    9. 'while' → logprob: -5.721617698669434
    10. ' not' → logprob: -6.096617698669434

Token 112: ' not' (ID: 625)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -1.0692888498306274
    2. ' remain' → logprob: -1.0692888498306274
    3. ' not' → logprob: -1.5692888498306274
    4. 'remain' → logprob: -2.819288730621338
    5. 'not' → logprob: -3.694288730621338
    6. ' left' → logprob: -4.569288730621338
    7. 'may' → logprob: -5.569288730621338
    8. ' by' → logprob: -6.569288730621338
    9. ' are' → logprob: -6.694288730621338
    10. 'by' → logprob: -6.944288730621338

Token 113: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02848818525671959
    2. 'class' → logprob: -4.5284881591796875
    3. '
' → logprob: -5.0284881591796875
    4. '#' → logprob: -5.4034881591796875
    5. '

' → logprob: -5.7784881591796875
    6. '\' → logprob: -6.7784881591796875
    7. '```' → logprob: -7.4034881591796875
    8. '\n' → logprob: -8.028488159179688
    9. 'import' → logprob: -8.653488159179688
    10. 'n' → logprob: -8.903488159179688

Token 114: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27408403158187866
    2. '

' → logprob: -2.1490840911865234
    3. 'def' → logprob: -2.5240840911865234
    4. '```' → logprob: -3.6490840911865234
    5. '\n' → logprob: -5.149084091186523
    6. '\' → logprob: -5.149084091186523
    7. '#' → logprob: -5.649084091186523
    8. 'newline' → logprob: -8.024084091186523
    9. 'import' → logprob: -8.649084091186523
    10. '' → logprob: -8.649084091186523

Token 115: ' Letters' (ID: 77790)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028825048357248306
    2. '#' → logprob: -4.153825283050537
    3. 'class' → logprob: -4.403825283050537
    4. '
' → logprob: -9.528824806213379
    5. '```' → logprob: -9.653824806213379
    6. '\' → logprob: -9.903824806213379
    7. 'dp' → logprob: -9.903824806213379
    8. 'import' → logprob: -10.403824806213379
    9. 'A' → logprob: -10.403824806213379
    10. 's' → logprob: -10.528824806213379

Token 116: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26467934250831604
    2. '=' → logprob: -2.139679431915283
    3. ' are' → logprob: -2.889679431915283
    4. 'a' → logprob: -4.139679431915283
    5. ' in' → logprob: -5.014679431915283
    6. ',' → logprob: -5.389679431915283
    7. ')' → logprob: -5.639679431915283
    8. 'A' → logprob: -5.764679431915283
    9. ' can' → logprob: -5.889679431915283
    10. 'are' → logprob: -6.014679431915283

Token 117: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5800615549087524
    2. 'the' → logprob: -1.0800615549087524
    3. 'a' → logprob: -4.080061435699463
    4. 'encrypted' → logprob: -4.330061435699463
    5. 'input' → logprob: -4.705061435699463
    6. 'variable' → logprob: -4.830061435699463
    7. ' input' → logprob: -4.830061435699463
    8. 'string' → logprob: -5.205061435699463
    9. ' encrypted' → logprob: -5.455061435699463
    10. ' a' → logprob: -5.455061435699463

Token 118: ' encrypted' (ID: 47764)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3464212417602539
    2. 'encrypted' → logprob: -1.721421241760254
    3. ' input' → logprob: -3.596421241760254
    4. 'string' → logprob: -3.971421241760254
    5. 'code' → logprob: -4.221421241760254
    6. '#' → logprob: -4.846421241760254
    7. 'import' → logprob: -4.971421241760254
    8. ' encrypted' → logprob: -5.096421241760254
    9. 'comment' → logprob: -5.346421241760254
    10. 'equ' → logprob: -5.346421241760254

Token 119: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.47831568121910095
    2. ' string' → logprob: -1.2283157110214233
    3. '_string' → logprob: -2.478315591812134
    4. ' text' → logprob: -7.103315830230713
    5. '_text' → logprob: -7.478315830230713
    6. 'text' → logprob: -7.728315830230713
    7. ' equation' → logprob: -7.728315830230713
    8. '_code' → logprob: -8.103315353393555
    9. '_str' → logprob: -8.853315353393555
    10. ' code' → logprob: -9.228315353393555

Token 120: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.26786062121391296
    2. ' can' → logprob: -2.1428606510162354
    3. ' may' → logprob: -2.6428606510162354
    4. 'are' → logprob: -4.892860412597656
    5. '#' → logprob: -5.392860412597656
    6. 's' → logprob: -5.392860412597656
    7. 'a' → logprob: -5.517860412597656
    8. 'can' → logprob: -5.517860412597656
    9. ' =' → logprob: -6.142860412597656
    10. ',' → logprob: -6.142860412597656

Token 121: ' encryption' (ID: 48827)
  Prédit: ' always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' always' → logprob: -1.5521432161331177
    2. 'always' → logprob: -2.052143096923828
    3. ' either' → logprob: -2.177143096923828
    4. ' guaranteed' → logprob: -2.302143096923828
    5. 'possible' → logprob: -3.052143096923828
    6. 'either' → logprob: -3.052143096923828
    7. 'allowed' → logprob: -3.677143096923828
    8. ' allowed' → logprob: -3.802143096923828
    9. 'uppercase' → logprob: -3.927143096923828
    10. ' not' → logprob: -4.052143096923828

Token 122: ' chars' (ID: 47991)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7075969576835632
    2. 'd' → logprob: -2.457597017288208
    3. '#' → logprob: -2.832597017288208
    4. ')' → logprob: -2.832597017288208
    5. ',' → logprob: -2.832597017288208
    6. '_' → logprob: -2.957597017288208
    7. ' =' → logprob: -3.457597017288208
    8. ' ' → logprob: -4.082596778869629
    9. '=' → logprob: -4.457596778869629
    10. 'def' → logprob: -4.457596778869629

Token 123: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3525198996067047
    2. '
' → logprob: -1.4775198698043823
    3. '

' → logprob: -4.227519989013672
    4. '\' → logprob: -4.352519989013672
    5. '#' → logprob: -4.477519989013672
    6. '\n' → logprob: -4.602519989013672
    7. '```' → logprob: -4.977519989013672
    8. 'import' → logprob: -5.102519989013672
    9. 'class' → logprob: -6.852519989013672
    10. 'newline' → logprob: -6.852519989013672

Token 124: ' digits' (ID: 37806)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28891703486442566
    2. 'def' → logprob: -1.413917064666748
    3. 'and' → logprob: -6.663917064666748
    4. 'we' → logprob: -7.038917064666748
    5. ' and' → logprob: -7.413917064666748
    6. 'while' → logprob: -7.413917064666748
    7. 'import' → logprob: -7.538917064666748
    8. ' #' → logprob: -7.788917064666748
    9. ' we' → logprob: -7.913917064666748
    10. ',' → logprob: -8.28891658782959

Token 125: '/operators' (ID: 120401)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005450158845633268
    2. ' ,' → logprob: -5.755450248718262
    3. ' or' → logprob: -7.005450248718262
    4. 'and' → logprob: -7.255450248718262
    5. 'or' → logprob: -8.505450248718262
    6. ' and' → logprob: -8.755450248718262
    7. '<|end|>' → logprob: -9.755450248718262
    8. ',#' → logprob: -9.880450248718262
    9. '=' → logprob: -10.505450248718262
    10. ',
' → logprob: -10.755450248718262

Token 126: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7440158724784851
    2. ' are' → logprob: -0.9940158724784851
    3. '=' → logprob: -2.99401593208313
    4. ' =' → logprob: -3.11901593208313
    5. '#' → logprob: -4.744015693664551
    6. ')' → logprob: -4.869015693664551
    7. ' ' → logprob: -4.869015693664551
    8. '<|end|>' → logprob: -4.869015693664551
    9. ' in' → logprob: -4.994015693664551
    10. ' ,' → logprob: -5.494015693664551

Token 127: 'parent' (ID: 4903)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -0.9148659110069275
    2. 'spaces' → logprob: -1.5398659706115723
    3. '_' → logprob: -2.4148659706115723
    4. ' other' → logprob: -2.9148659706115723
    5. ' whitespace' → logprob: -2.9148659706115723
    6. 'other' → logprob: -3.1648659706115723
    7. 'wh' → logprob: -3.4148659706115723
    8. ' parentheses' → logprob: -4.039865970611572
    9. 'symbols' → logprob: -4.414865970611572
    10. 'parent' → logprob: -4.414865970611572

Token 128: 'heses' (ID: 109350)
  Prédit: 'heses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.00011570196511456743
    2. 'hesis' → logprob: -9.125115394592285
    3. 'h' → logprob: -12.250115394592285
    4. 'hes' → logprob: -13.625115394592285
    5. 'hs' → logprob: -14.875115394592285
    6. 'eses' → logprob: -15.875115394592285
    7. '```' → logprob: -17.0001163482666
    8. '#' → logprob: -18.0001163482666
    9. 'th' → logprob: -18.2501163482666
    10. 'èses' → logprob: -19.2501163482666

Token 129: '/e' (ID: 25451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: 'qual' (ID: 6129)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.553196907043457
    2. 'tc' → logprob: -1.428196907043457
    3. 'nd' → logprob: -3.178196907043457
    4. 'sc' → logprob: -3.803196907043457
    5. 'scape' → logprob: -3.803196907043457
    6. 'nc' → logprob: -4.053196907043457
    7. 'n' → logprob: -4.178196907043457
    8. 'm' → logprob: -4.678196907043457
    9. 'psilon' → logprob: -5.053196907043457
    10. 'spaces' → logprob: -5.053196907043457

Token 131: ' sign' (ID: 2232)
  Prédit: '_sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.9909374117851257
    2. 's' → logprob: -1.1159374713897705
    3. 'sign' → logprob: -1.2409374713897705
    4. ' sign' → logprob: -4.740937232971191
    5. ' signs' → logprob: -6.365937232971191
    6. '-sign' → logprob: -7.115937232971191
    7. '=' → logprob: -8.490937232971191
    8. ')' → logprob: -8.740937232971191
    9. '_SIGN' → logprob: -9.740937232971191
    10. '	sign' → logprob: -9.740937232971191

Token 132: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.703139066696167
    2. '\n' → logprob: -1.703139066696167
    3. '
' → logprob: -1.828139066696167
    4. '

' → logprob: -3.203139066696167
    5. ',' → logprob: -3.578139066696167
    6. '<|end|>' → logprob: -4.078139305114746
    7. '```' → logprob: -4.328139305114746
    8. '\' → logprob: -4.328139305114746
    9. 'def' → logprob: -4.828139305114746
    10. ')' → logprob: -4.953139305114746

Token 133: ' literals' (ID: 193569)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.179599404335022
    2. ' kept' → logprob: -1.679599404335022
    3. ' not' → logprob: -1.929599404335022
    4. 'not' → logprob: -2.3045992851257324
    5. 'ke' → logprob: -2.6795992851257324
    6. 'left' → logprob: -2.9295992851257324
    7. ' as' → logprob: -3.4295992851257324
    8. ' unchanged' → logprob: -3.8045992851257324
    9. ' themselves' → logprob: -4.554599285125732
    10. 'unch' → logprob: -4.554599285125732

Token 134: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6067374348640442
    2. 'def' → logprob: -1.4817373752593994
    3. ':' → logprob: -2.4817373752593994
    4. '\n' → logprob: -2.9817373752593994
    5. '

' → logprob: -3.3567373752593994
    6. '\' → logprob: -3.7317373752593994
    7. '```' → logprob: -4.2317376136779785
    8. '#' → logprob: -4.7317376136779785
    9. 'newline' → logprob: -5.8567376136779785
    10. ':
' → logprob: -6.6067376136779785

Token 135: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5262048244476318
    2. '
' → logprob: -1.1512048244476318
    3. '```' → logprob: -3.651204824447632
    4. '\' → logprob: -4.026205062866211
    5. '

' → logprob: -4.276205062866211
    6. '\n' → logprob: -4.651205062866211
    7. ':' → logprob: -4.776205062866211
    8. '#' → logprob: -5.026205062866211
    9. '' → logprob: -6.026205062866211
    10. 'import' → logprob: -6.401205062866211

Token 136: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.223607137799263
    2. 'class' → logprob: -1.7236071825027466
    3. '#' → logprob: -3.848607063293457
    4. 'import' → logprob: -8.348607063293457
    5. 'input' → logprob: -9.223607063293457
    6. 'n' → logprob: -9.973607063293457
    7. '```' → logprob: -9.973607063293457
    8. '
' → logprob: -10.473607063293457
    9. ' class' → logprob: -10.973607063293457
    10. 'from' → logprob: -11.098607063293457

Token 137: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14419914782047272
    2. 'class' → logprob: -2.0191991329193115
    3. '#' → logprob: -7.019199371337891
    4. 'import' → logprob: -8.01919937133789
    5. 'from' → logprob: -8.51919937133789
    6. 'input' → logprob: -11.39419937133789
    7. ' class' → logprob: -11.51919937133789
    8. 'de' → logprob: -11.76919937133789
    9. '```' → logprob: -11.76919937133789
    10. ' def' → logprob: -11.89419937133789

Token 138: ' seek' (ID: 8142)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41551685333251953
    2. ' want' → logprob: -1.5405168533325195
    3. ' need' → logprob: -3.2905168533325195
    4. ' def' → logprob: -3.9155168533325195
    5. ' have' → logprob: -4.6655168533325195
    6. ''ll' → logprob: -4.7905168533325195
    7. 'need' → logprob: -5.1655168533325195
    8. 'want' → logprob: -5.1655168533325195
    9. '#' → logprob: -5.2905168533325195
    10. 'have' → logprob: -5.4155168533325195

Token 139: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2634595036506653
    2. 'to' → logprob: -2.0134594440460205
    3. 'def' → logprob: -2.3884594440460205
    4. ' a' → logprob: -5.3884596824646
    5. 'a' → logprob: -7.7634596824646
    6. '#' → logprob: -7.7634596824646
    7. 's' → logprob: -7.7634596824646
    8. ' the' → logprob: -8.638459205627441
    9. ' def' → logprob: -9.513459205627441
    10. 'the' → logprob: -9.638459205627441

Token 140: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07719289511442184
    2. ' count' → logprob: -3.327192783355713
    3. 'solve' → logprob: -4.577192783355713
    4. 'def' → logprob: -4.702192783355713
    5. 'find' → logprob: -5.077192783355713
    6. 'write' → logprob: -5.952192783355713
    7. 'enumer' → logprob: -6.702192783355713
    8. 'parse' → logprob: -6.827192783355713
    9. 'implement' → logprob: -6.952192783355713
    10. 'define' → logprob: -7.202192783355713

Token 141: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13680166006088257
    2. 'the' → logprob: -2.5118017196655273
    3. ' how' → logprob: -3.3868017196655273
    4. '(' → logprob: -6.261801719665527
    5. '<|end|>' → logprob: -6.386801719665527
    6. ' all' → logprob: -6.761801719665527
    7. 'def' → logprob: -7.011801719665527
    8. '_' → logprob: -7.011801719665527
    9. '<|end|>' → logprob: -7.011801719665527
    10. '#' → logprob: -7.261801719665527

Token 142: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0014605928445234895
    2. 'number' → logprob: -6.626460552215576
    3. ' total' → logprob: -9.126461029052734
    4. ' next' → logprob: -11.126461029052734
    5. 's' → logprob: -12.626461029052734
    6. ' ways' → logprob: -13.126461029052734
    7. '#' → logprob: -13.251461029052734
    8. '_number' → logprob: -13.876461029052734
    9. ' #' → logprob: -14.251461029052734
    10. ' possible' → logprob: -14.501461029052734

Token 143: ' of' (ID: 328)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.12634162604808807
    2. '_token' → logprob: -3.1263415813446045
    3. 's' → logprob: -3.3763415813446045
    4. '_' → logprob: -4.126341819763184
    5. 'tokens' → logprob: -4.876341819763184
    6. ')' → logprob: -5.501341819763184
    7. ' of' → logprob: -6.001341819763184
    8. '_of' → logprob: -6.251341819763184
    9. '<|end|>' → logprob: -6.376341819763184
    10. ' ' → logprob: -6.751341819763184

Token 144: ' original' (ID: 4756)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.4831790626049042
    2. ' possible' → logprob: -2.1081790924072266
    3. ' ways' → logprob: -2.1081790924072266
    4. 'possible' → logprob: -3.2331790924072266
    5. 'valid' → logprob: -3.4831790924072266
    6. 'def' → logprob: -3.6081790924072266
    7. ' def' → logprob: -4.358179092407227
    8. ' solutions' → logprob: -4.733179092407227
    9. 'ways' → logprob: -5.233179092407227
    10. ' different' → logprob: -6.108179092407227

Token 145: ' equations' (ID: 61524)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.7750118374824524
    2. ' tokens' → logprob: -1.9000117778778076
    3. '_tokens' → logprob: -1.9000117778778076
    4. '_chars' → logprob: -2.0250117778778076
    5. 'chars' → logprob: -2.7750117778778076
    6. '_token' → logprob: -4.025012016296387
    7. '_' → logprob: -5.650012016296387
    8. ' chars' → logprob: -5.900012016296387
    9. 'token' → logprob: -5.900012016296387
    10. 'equ' → logprob: -6.150012016296387

Token 146: '(e' (ID: 3454)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3466516435146332
    2. 'def' → logprob: -1.4716516733169556
    3. '(' → logprob: -4.471651554107666
    4. '=' → logprob: -4.846651554107666
    5. ' =' → logprob: -4.971651554107666
    6. '
' → logprob: -5.221651554107666
    7. ',' → logprob: -5.596651554107666
    8. '#' → logprob: -5.971651554107666
    9. ':
' → logprob: -5.971651554107666
    10. '[' → logprob: -6.096651554107666

Token 147: 'valu' (ID: 5446)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29933103919029236
    2. 'q' → logprob: -1.7993310689926147
    3. '=' → logprob: -3.299330949783325
    4. 'quals' → logprob: -3.674330949783325
    5. ')' → logprob: -4.549331188201904
    6. '[' → logprob: -5.799331188201904
    7. 'n' → logprob: -5.924331188201904
    8. 'qu' → logprob: -6.299331188201904
    9. '```' → logprob: -6.424331188201904
    10. 'qual' → logprob: -6.549331188201904

Token 148: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.07813034951686859
    2. '=' → logprob: -3.7031302452087402
    3. 'al' → logprob: -3.9531302452087402
    4. ')' → logprob: -4.57813024520874
    5. 'a' → logprob: -4.70313024520874
    6. 'ates' → logprob: -5.45313024520874
    7. 'ated' → logprob: -5.57813024520874
    8. 'ator' → logprob: -7.20313024520874
    9. '(' → logprob: -7.57813024520874
    10. 'als' → logprob: -8.328130722045898

Token 149: ' expressions' (ID: 43578)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18010368943214417
    2. '_' → logprob: -3.0551037788391113
    3. '=' → logprob: -3.8051037788391113
    4. 's' → logprob: -4.180103778839111
    5. ' that' → logprob: -4.430103778839111
    6. '_tokens' → logprob: -4.430103778839111
    7. ' )' → logprob: -4.555103778839111
    8. ' ' → logprob: -5.305103778839111
    9. '   ' → logprob: -5.680103778839111
    10. '+' → logprob: -5.930103778839111

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27228447794914246
    2. '_' → logprob: -2.147284507751465
    3. ',' → logprob: -3.397284507751465
    4. ' that' → logprob: -3.647284507751465
    5. 's' → logprob: -4.647284507751465
    6. '[' → logprob: -4.897284507751465
    7. ' )' → logprob: -4.897284507751465
    8. '```' → logprob: -5.397284507751465
    9. ''' → logprob: -5.522284507751465
    10. '=' → logprob: -5.647284507751465

Token 151: ' matching' (ID: 20238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23479507863521576
    2. ')' → logprob: -2.234795093536377
    3. 'def' → logprob: -3.484795093536377
    4. ' =' → logprob: -4.109795093536377
    5. '=' → logprob: -4.234795093536377
    6. ',' → logprob: -5.234795093536377
    7. '#' → logprob: -5.359795093536377
    8. '
' → logprob: -5.359795093536377
    9. '<|end|>' → logprob: -5.359795093536377
    10. 'import' → logprob: -5.859795093536377

Token 152: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.26917794346809387
    2. 'the' → logprob: -1.6441779136657715
    3. ''' → logprob: -3.7691779136657715
    4. ' a' → logprob: -5.2691779136657715
    5. '
' → logprob: -5.6441779136657715
    6. '```' → logprob: -5.6441779136657715
    7. '"' → logprob: -6.0191779136657715
    8. ' ' → logprob: -6.5191779136657715
    9. ')' → logprob: -7.2691779136657715
    10. 'a' → logprob: -7.7691779136657715

Token 153: ' encryption' (ID: 48827)
  Prédit: ' encrypted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encrypted' → logprob: -0.6387434005737305
    2. ' input' → logprob: -2.0137434005737305
    3. 'encrypted' → logprob: -2.1387434005737305
    4. ' next' → logprob: -2.3887434005737305
    5. 'input' → logprob: -2.5137434005737305
    6. ' given' → logprob: -4.1387434005737305
    7. 'next' → logprob: -4.7637434005737305
    8. '
' → logprob: -5.3887434005737305
    9. ' encryption' → logprob: -5.8887434005737305
    10. ' pattern' → logprob: -6.2637434005737305

Token 154: ',
' (ID: 412)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07637032866477966
    2. ',' → logprob: -4.0763702392578125
    3. '
' → logprob: -4.8263702392578125
    4. '.' → logprob: -4.8263702392578125
    5. ''' → logprob: -4.9513702392578125
    6. ')' → logprob: -5.2013702392578125
    7. ':' → logprob: -5.2013702392578125
    8. '#' → logprob: -5.7013702392578125
    9. ' _' → logprob: -5.9513702392578125
    10. '<|end|>' → logprob: -6.2013702392578125

Token 155: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9521424770355225
    2. '#' → logprob: -1.7021424770355225
    3. 'def' → logprob: -2.3271424770355225
    4. ''' → logprob: -3.3271424770355225
    5. ' 
' → logprob: -3.5771424770355225
    6. '\' → logprob: -3.8271424770355225
    7. ' continuing' → logprob: -4.077142715454102
    8. ' that' → logprob: -4.202142715454102
    9. ' and' → logprob: -4.327142715454102
    10. ')' → logprob: -4.327142715454102

Token 156: ' such' (ID: 2238)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5653689503669739
    2. 'def' → logprob: -1.315368890762329
    3. ')' → logprob: -3.190368890762329
    4. '<|end|>' → logprob: -4.065369129180908
    5. '
' → logprob: -4.190369129180908
    6. ' 
' → logprob: -4.315369129180908
    7. ' #' → logprob: -4.565369129180908
    8. '\' → logprob: -5.190369129180908
    9. '```' → logprob: -5.440369129180908
    10. 'token' → logprob: -5.565369129180908

Token 157: ' that' (ID: 484)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.2300481796264648
    2. ' is' → logprob: -1.4800481796264648
    3. ' that' → logprob: -1.4800481796264648
    4. '#' → logprob: -2.605048179626465
    5. 'that' → logprob: -3.105048179626465
    6. ''' → logprob: -3.980048179626465
    7. ' =' → logprob: -4.105048179626465
    8. ')' → logprob: -4.230048179626465
    9. 'def' → logprob: -4.355048179626465
    10. ' are' → logprob: -4.605048179626465

Token 158: ' both' (ID: 2973)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9567190408706665
    2. 'the' → logprob: -1.0817190408706665
    3. ' all' → logprob: -2.456718921661377
    4. 'all' → logprob: -2.956718921661377
    5. 'each' → logprob: -2.956718921661377
    6. ' each' → logprob: -3.331718921661377
    7. '#' → logprob: -3.331718921661377
    8. ' every' → logprob: -5.456718921661377
    9. 'every' → logprob: -5.706718921661377
    10. 'they' → logprob: -6.581718921661377

Token 159: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.10552224516868591
    2. 's' → logprob: -2.3555221557617188
    3. 'left' → logprob: -6.355522155761719
    4. ' left' → logprob: -6.730522155761719
    5. 'lhs' → logprob: -7.480522155761719
    6. '_s' → logprob: -8.105522155761719
    7. ' lhs' → logprob: -8.355522155761719
    8. ' expressions' → logprob: -8.980522155761719
    9. 'express' → logprob: -9.105522155761719
    10. ' the' → logprob: -9.105522155761719

Token 160: ' evaluate' (ID: 21646)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.749809741973877
    2. ' of' → logprob: -0.999809741973877
    3. ' continue' → logprob: -2.874809741973877
    4. ' ==' → logprob: -3.749809741973877
    5. '=' → logprob: -3.874809741973877
    6. ' =' → logprob: -3.999809741973877
    7. ' can' → logprob: -4.999809741973877
    8. ' have' → logprob: -5.124809741973877
    9. '==' → logprob: -5.374809741973877
    10. 'of' → logprob: -5.499809741973877

Token 161: ' equal' (ID: 12629)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7943501472473145
    2. '=' → logprob: -1.1693501472473145
    3. 'to' → logprob: -2.1693501472473145
    4. '==' → logprob: -3.4193501472473145
    5. ')' → logprob: -3.5443501472473145
    6. '_to' → logprob: -3.6693501472473145
    7. ' ==' → logprob: -3.9193501472473145
    8. '_' → logprob: -4.4193501472473145
    9. ' =' → logprob: -6.2943501472473145
    10. ' )' → logprob: -8.044349670410156

Token 162: '.


' (ID: 8525)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6481212973594666
    2. ':' → logprob: -1.2731213569641113
    3. '_' → logprob: -2.6481213569641113
    4. '
' → logprob: -3.3981213569641113
    5. '(' → logprob: -3.6481213569641113
    6. '#' → logprob: -4.023121356964111
    7. '\' → logprob: -4.148121356964111
    8. '

' → logprob: -5.273121356964111
    9. '(
' → logprob: -5.398121356964111
    10. '=' → logprob: -5.898121356964111

Token 163: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029860293492674828
    2. 'class' → logprob: -3.529860258102417
    3. 'dp' → logprob: -9.779860496520996
    4. 'import' → logprob: -10.779860496520996
    5. 'from' → logprob: -11.029860496520996
    6. '#' → logprob: -12.154860496520996
    7. '```' → logprob: -12.279860496520996
    8. '
' → logprob: -13.279860496520996
    9. ' def' → logprob: -13.904860496520996
    10. 'de' → logprob: -13.904860496520996

Token 164: ' Approach' (ID: 86383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2418094277381897
    2. 'class' → logprob: -1.616809368133545
    3. 'import' → logprob: -5.241809368133545
    4. '(' → logprob: -5.491809368133545
    5. 'from' → logprob: -5.741809368133545
    6. '#' → logprob: -6.116809368133545
    7. 'TOKEN' → logprob: -8.241809844970703
    8. '(
' → logprob: -8.491809844970703
    9. 'DEFAULT' → logprob: -9.116809844970703
    10. '^' → logprob: -9.116809844970703

Token 165: ' outline' (ID: 32430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02953454479575157
    2. 'class' → logprob: -4.404534339904785
    3. ' def' → logprob: -5.404534339904785
    4. ':' → logprob: -5.779534339904785
    5. 'import' → logprob: -6.029534339904785
    6. '#' → logprob: -6.154534339904785
    7. 'from' → logprob: -6.404534339904785
    8. '```' → logprob: -6.779534339904785
    9. 'dp' → logprob: -7.029534339904785
    10. ' class' → logprob: -7.779534339904785

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4083581268787384
    2. '#' → logprob: -1.908358097076416
    3. 'def' → logprob: -2.033358097076416
    4. '```' → logprob: -3.908358097076416
    5. ':
' → logprob: -4.283358097076416
    6. ' :' → logprob: -4.908358097076416
    7. 'import' → logprob: -5.283358097076416
    8. '
' → logprob: -5.783358097076416
    9. '``' → logprob: -7.158358097076416
    10. ''''
' → logprob: -7.158358097076416

Token 167: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16120997071266174
    2. 'def' → logprob: -2.411210060119629
    3. '"""
' → logprob: -3.661210060119629
    4. 'dp' → logprob: -4.161210060119629
    5. ''''
' → logprob: -5.161210060119629
    6. 'from' → logprob: -5.286210060119629
    7. ' #' → logprob: -6.286210060119629
    8. '#
' → logprob: -7.036210060119629
    9. 'visited' → logprob: -7.161210060119629
    10. 'memo' → logprob: -7.661210060119629

Token 168: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9844340085983276
    2. 'def' → logprob: -0.9844340085983276
    3. 'from' → logprob: -1.7344340085983276
    4. ' #' → logprob: -3.859434127807617
    5. ' def' → logprob: -4.109434127807617
    6. 'We' → logprob: -4.609434127807617
    7. 'import' → logprob: -4.734434127807617
    8. ' from' → logprob: -4.859434127807617
    9. ' We' → logprob: -6.234434127807617
    10. 'class' → logprob: -6.359434127807617

Token 169: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28002768754959106
    2. '#' → logprob: -1.7800276279449463
    3. 'from' → logprob: -2.7800276279449463
    4. 'import' → logprob: -4.530027866363525
    5. 'class' → logprob: -6.530027866363525
    6. '```' → logprob: -8.155027389526367
    7. '
' → logprob: -8.905027389526367
    8. '"""' → logprob: -9.030027389526367
    9. 'input' → logprob: -9.280027389526367
    10. ''''' → logprob: -9.530027389526367

Token 170: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21906980872154236
    2. '#' → logprob: -2.594069719314575
    3. ')' → logprob: -2.844069719314575
    4. 'import' → logprob: -4.219069957733154
    5. 'def' → logprob: -4.469069957733154
    6. ' =' → logprob: -4.594069957733154
    7. ',' → logprob: -4.844069957733154
    8. '=' → logprob: -5.219069957733154
    9. ' .' → logprob: -5.844069957733154
    10. ':' → logprob: -5.969069957733154

Token 171: ' The' (ID: 623)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -0.6052497625350952
    2. 'parse' → logprob: -1.8552497625350952
    3. 'Read' → logprob: -2.4802498817443848
    4. 'def' → logprob: -2.6052498817443848
    5. 'We' → logprob: -3.3552498817443848
    6. ' Read' → logprob: -3.8552498817443848
    7. ' We' → logprob: -3.8552498817443848
    8. ' Parse' → logprob: -3.8552498817443848
    9. 'read' → logprob: -4.355249881744385
    10. ' parse' → logprob: -5.355249881744385

Token 172: ' input' (ID: 3422)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5864378809928894
    2. ' code' → logprob: -1.2114379405975342
    3. '_' → logprob: -3.586437940597534
    4. '#' → logprob: -3.711437940597534
    5. 'next' → logprob: -3.836437940597534
    6. 'def' → logprob: -3.961437940597534
    7. 'code' → logprob: -4.086437702178955
    8. '=' → logprob: -4.586437702178955
    9. 'import' → logprob: -5.336437702178955
    10. ')' → logprob: -5.711437702178955

Token 173: ' has' (ID: 853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1238224506378174
    2. ' =' → logprob: -1.6238224506378174
    3. '()' → logprob: -1.6238224506378174
    4. '=' → logprob: -2.2488224506378174
    5. '_str' → logprob: -2.6238224506378174
    6. '_line' → logprob: -2.8738224506378174
    7. '_string' → logprob: -3.8738224506378174
    8. 's' → logprob: -4.623822212219238
    9. '_lines' → logprob: -5.248822212219238
    10. '_text' → logprob: -6.123822212219238

Token 174: ' letters' (ID: 18151)
  Prédit: ' been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' been' → logprob: -0.12731872498989105
    2. 'been' → logprob: -2.3773186206817627
    3. ' not' → logprob: -5.002318859100342
    4. ' a' → logprob: -5.502318859100342
    5. 'a' → logprob: -5.627318859100342
    6. 'sys' → logprob: -5.877318859100342
    7. 'not' → logprob: -6.002318859100342
    8. ' sys' → logprob: -6.377318859100342
    9. 'already' → logprob: -6.752318859100342
    10. ' already' → logprob: -7.252318859100342

Token 175: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6413681507110596
    2. ',' → logprob: -1.3913681507110596
    3. '=' → logprob: -1.8913681507110596
    4. '<|end|>' → logprob: -3.7663681507110596
    5. '#' → logprob: -4.0163679122924805
    6. '<|end|>' → logprob: -4.6413679122924805
    7. ' ' → logprob: -4.8913679122924805
    8. '.' → logprob: -5.1413679122924805
    9. '_' → logprob: -5.5163679122924805
    10. ' ,' → logprob: -6.6413679122924805

Token 176: ' literals' (ID: 193569)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.2265423685312271
    2. ' digits' → logprob: -1.601542353630066
    3. '012' → logprob: -7.9765424728393555
    4. 'symbols' → logprob: -8.601542472839355
    5. 'digit' → logprob: -9.226542472839355
    6. ' ' → logprob: -9.226542472839355
    7. 'numbers' → logprob: -9.851542472839355
    8. '_digits' → logprob: -10.101542472839355
    9. 'operators' → logprob: -10.226542472839355
    10. '#' → logprob: -10.351542472839355

Token 177: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1224650144577026
    2. '.' → logprob: -1.2474650144577026
    3. ':' → logprob: -2.122465133666992
    4. '#' → logprob: -2.497465133666992
    5. ' =' → logprob: -2.622465133666992
    6. 'import' → logprob: -3.372465133666992
    7. '=' → logprob: -4.122465133666992
    8. 'def' → logprob: -4.622465133666992
    9. ' ' → logprob: -4.747465133666992
    10. '<|end|>' → logprob: -5.122465133666992

Token 178: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5233424305915833
    2. 'import' → logprob: -2.5233423709869385
    3. ' ' → logprob: -2.5233423709869385
    4. '_' → logprob: -2.6483423709869385
    5. ',' → logprob: -3.0233423709869385
    6. 'def' → logprob: -3.6483423709869385
    7. '\' → logprob: -4.023342609405518
    8. '<|end|>' → logprob: -4.523342609405518
    9. ' =' → logprob: -4.648342609405518
    10. ':' → logprob: -4.773342609405518

Token 179: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.043907392770051956
    2. '2' → logprob: -4.043907165527344
    3. 's' → logprob: -4.543907165527344
    4. '
' → logprob: -5.793907165527344
    5. 'encrypted' → logprob: -5.793907165527344
    6. ' #' → logprob: -6.293907165527344
    7. 'def' → logprob: -6.543907165527344
    8. 'import' → logprob: -6.543907165527344
    9. 'input' → logprob: -7.043907165527344
    10. ' encrypted' → logprob: -7.043907165527344

Token 180: ' Letters' (ID: 77790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.049026161432266235
    2. ' #' → logprob: -4.174026012420654
    3. '2' → logprob: -5.049026012420654
    4. 'def' → logprob: -5.174026012420654
    5. 'We' → logprob: -5.424026012420654
    6. 's' → logprob: -5.924026012420654
    7. ' ' → logprob: -6.174026012420654
    8. 'input' → logprob: -6.299026012420654
    9. '
' → logprob: -6.924026012420654
    10. 'import' → logprob: -7.049026012420654

Token 181: ' represent' (ID: 5188)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.19499796628952026
    2. ' can' → logprob: -1.944998025894165
    3. ' may' → logprob: -4.819997787475586
    4. ' represent' → logprob: -5.194997787475586
    5. 'are' → logprob: -5.569997787475586
    6. ' ' → logprob: -5.694997787475586
    7. ' =' → logprob: -5.694997787475586
    8. ' in' → logprob: -5.944997787475586
    9. ' could' → logprob: -6.694997787475586
    10. ',' → logprob: -6.819997787475586

Token 182: ' unknown' (ID: 17927)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -1.8378674983978271
    2. ' either' → logprob: -1.9628674983978271
    3. ' unknown' → logprob: -1.9628674983978271
    4. 'possible' → logprob: -1.9628674983978271
    5. 'original' → logprob: -2.087867498397827
    6. ' possible' → logprob: -2.462867498397827
    7. ' an' → logprob: -3.587867498397827
    8. ' both' → logprob: -3.837867498397827
    9. 'unknown' → logprob: -3.837867498397827
    10. ' a' → logprob: -3.962867498397827

Token 183: ' original' (ID: 4756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6660786271095276
    2. ' characters' → logprob: -1.4160785675048828
    3. 'chars' → logprob: -2.791078567504883
    4. ' tokens' → logprob: -3.291078567504883
    5. ' chars' → logprob: -3.416078567504883
    6. ' original' → logprob: -3.791078567504883
    7. ' s' → logprob: -4.291078567504883
    8. 'characters' → logprob: -4.291078567504883
    9. '_chars' → logprob: -4.416078567504883
    10. ' ' → logprob: -4.666078567504883

Token 184: ' chars' (ID: 47991)
  Prédit: ' characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.3363072872161865
    2. ' tokens' → logprob: -2.4613072872161865
    3. ' chars' → logprob: -2.7113072872161865
    4. 'chars' → logprob: -2.9613072872161865
    5. '_chars' → logprob: -3.0863072872161865
    6. 'characters' → logprob: -3.9613072872161865
    7. 'tokens' → logprob: -4.961307525634766
    8. 's' → logprob: -5.586307525634766
    9. ' ' → logprob: -5.836307525634766
    10. '_char' → logprob: -6.836307525634766

Token 185: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0024311542510986
    2. ',' → logprob: -1.5024311542510986
    3. '<|end|>' → logprob: -2.2524311542510986
    4. '.' → logprob: -3.1274311542510986
    5. ')' → logprob: -3.1274311542510986
    6. '_token' → logprob: -3.5024311542510986
    7. '[' → logprob: -3.8774311542510986
    8. 'import' → logprob: -3.8774311542510986
    9. ''' → logprob: -4.0024309158325195
    10. 'def' → logprob: -4.3774309158325195

Token 186: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6990305781364441
    2. '<|end|>' → logprob: -1.0740306377410889
    3. '<|end|>' → logprob: -3.324030637741089
    4. ',' → logprob: -3.449030637741089
    5. ' ' → logprob: -3.699030637741089
    6. ')' → logprob: -4.57403039932251
    7. '_' → logprob: -4.57403039932251
    8. 'def' → logprob: -4.94903039932251
    9. 's' → logprob: -5.07403039932251
    10. 'import' → logprob: -5.32403039932251

Token 187: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010850081220269203
    2. ' #' → logprob: -5.385849952697754
    3. 'import' → logprob: -6.760849952697754
    4. ' ' → logprob: -6.885849952697754
    5. '2' → logprob: -7.135849952697754
    6. '#
' → logprob: -7.260849952697754
    7. 'def' → logprob: -7.260849952697754
    8. '
' → logprob: -7.510849952697754
    9. ' 
' → logprob: -8.635849952697754
    10. '```' → logprob: -8.885849952697754

Token 188: ' Different' (ID: 47255)
  Prédit: 'We'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'We' → logprob: -0.47289472818374634
    2. '#' → logprob: -1.3478946685791016
    3. ' We' → logprob: -2.5978946685791016
    4. 'They' → logprob: -4.347894668579102
    5. ' They' → logprob: -5.722894668579102
    6. 'The' → logprob: -5.972894668579102
    7. ' #' → logprob: -5.972894668579102
    8. '2' → logprob: -6.222894668579102
    9. 'Each' → logprob: -6.222894668579102
    10. 'letters' → logprob: -6.472894668579102

Token 189: ' original' (ID: 4756)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0113413333892822
    2. 'original' → logprob: -2.2613413333892822
    3. 'tokens' → logprob: -2.3863413333892822
    4. ' original' → logprob: -2.3863413333892822
    5. 'letters' → logprob: -2.8863413333892822
    6. '_chars' → logprob: -2.8863413333892822
    7. '_original' → logprob: -3.1363413333892822
    8. ' tokens' → logprob: -3.2613413333892822
    9. ' letters' → logprob: -3.7613413333892822
    10. 'chars' → logprob: -3.7613413333892822

Token 190: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.560291588306427
    2. 'chars' → logprob: -1.5602915287017822
    3. ' chars' → logprob: -1.6852915287017822
    4. ' tokens' → logprob: -5.185291767120361
    5. ' characters' → logprob: -5.310291767120361
    6. 'tokens' → logprob: -5.685291767120361
    7. '_' → logprob: -5.810291767120361
    8. ' letters' → logprob: -5.935291767120361
    9. ' ' → logprob: -6.185291767120361
    10. ')' → logprob: -6.560291767120361

Token 191: ' replaced' (ID: 21009)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4677693247795105
    2. ' can' → logprob: -1.8427693843841553
    3. ' =' → logprob: -2.9677693843841553
    4. '#' → logprob: -3.5927693843841553
    5. ' must' → logprob: -3.7177693843841553
    6. ' may' → logprob: -4.092769145965576
    7. ',' → logprob: -4.092769145965576
    8. '<|end|>' → logprob: -4.467769145965576
    9. '=' → logprob: -4.967769145965576
    10. ')' → logprob: -5.092769145965576

Token 192: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.6724650263786316
    2. ' by' → logprob: -0.9224650263786316
    3. '_by' → logprob: -2.9224650859832764
    4. '_' → logprob: -4.922464847564697
    5. '_chars' → logprob: -5.047464847564697
    6. ' are' → logprob: -5.297464847564697
    7. '```' → logprob: -5.922464847564697
    8. '=' → logprob: -6.047464847564697
    9. ' may' → logprob: -6.297464847564697
    10. 'from' → logprob: -6.672464847564697

Token 193: ' distinct' (ID: 16913)
  Prédit: ' different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -0.09428605437278748
    2. 'different' → logprob: -2.4692859649658203
    3. ' distinct' → logprob: -5.84428596496582
    4. ' letters' → logprob: -6.59428596496582
    5. ' the' → logprob: -7.96928596496582
    6. ' unknown' → logprob: -8.46928596496582
    7. 'distinct' → logprob: -8.84428596496582
    8. 'letters' → logprob: -9.59428596496582
    9. 'the' → logprob: -9.84428596496582
    10. ' other' → logprob: -10.34428596496582

Token 194: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.11797670274972916
    2. ' tokens' → logprob: -2.742976665496826
    3. 'letters' → logprob: -3.492976665496826
    4. 'tokens' → logprob: -5.492976665496826
    5. ' encrypted' → logprob: -5.867976665496826
    6. ' characters' → logprob: -5.992976665496826
    7. ' unknown' → logprob: -6.117976665496826
    8. ' original' → logprob: -6.617976665496826
    9. ' encryption' → logprob: -7.367976665496826
    10. ' chars' → logprob: -7.617976665496826

Token 195: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.904941737651825
    2. '<|end|>' → logprob: -1.5299417972564697
    3. '#' → logprob: -1.6549417972564697
    4. '<|end|>' → logprob: -2.2799417972564697
    5. '.' → logprob: -2.9049417972564697
    6. '_' → logprob: -4.279941558837891
    7. ')' → logprob: -5.279941558837891
    8. 'import' → logprob: -5.654941558837891
    9. 'def' → logprob: -6.904941558837891
    10. ',
' → logprob: -6.904941558837891

Token 196: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4886837601661682
    2. '_' → logprob: -1.7386837005615234
    3. ',' → logprob: -2.9886837005615234
    4. ' ' → logprob: -3.2386837005615234
    5. ')' → logprob: -3.6136837005615234
    6. 'def' → logprob: -3.9886837005615234
    7. '<|end|>' → logprob: -3.9886837005615234
    8. '\' → logprob: -4.613683700561523
    9. ''' → logprob: -4.738683700561523
    10. 'import' → logprob: -5.238683700561523

Token 197: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.029364626854658127
    2. 'def' → logprob: -4.154364585876465
    3. ' #' → logprob: -5.779364585876465
    4. 'import' → logprob: -6.404364585876465
    5. ' ' → logprob: -6.404364585876465
    6. '```' → logprob: -6.654364585876465
    7. '
' → logprob: -6.904364585876465
    8. '<|end|>' → logprob: -7.154364585876465
    9. ')' → logprob: -7.654364585876465
    10. '[' → logprob: -7.904364585876465

Token 198: ' Non' (ID: 13763)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32508713006973267
    2. 'def' → logprob: -1.575087070465088
    3. ' #' → logprob: -4.325087070465088
    4. ' def' → logprob: -4.700087070465088
    5. 's' → logprob: -4.950087070465088
    6. 'letters' → logprob: -4.950087070465088
    7. 'We' → logprob: -6.325087070465088
    8. ' original' → logprob: -6.325087070465088
    9. ' letters' → logprob: -6.450087070465088
    10. ' input' → logprob: -6.450087070465088

Token 199: '-letter' (ID: 176596)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -1.1006897687911987
    2. 'l' → logprob: -1.4756897687911987
    3. ' letters' → logprob: -1.6006897687911987
    4. 'letters' → logprob: -2.6006898880004883
    5. '-' → logprob: -2.6006898880004883
    6. '_' → logprob: -3.6006898880004883
    7. '-letter' → logprob: -3.7256898880004883
    8. ' l' → logprob: -4.850689888000488
    9. '_letter' → logprob: -5.475689888000488
    10. '#' → logprob: -5.600689888000488

Token 200: ' characters' (ID: 9862)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048755984753370285
    2. ' characters' → logprob: -4.048756122589111
    3. ' s' → logprob: -4.173756122589111
    4. '<|end|>' → logprob: -5.548756122589111
    5. ' tokens' → logprob: -5.798756122589111
    6. '_' → logprob: -6.173756122589111
    7. '_chars' → logprob: -6.423756122589111
    8. ' chars' → logprob: -6.673756122589111
    9. 'characters' → logprob: -7.173756122589111
    10. 'chars' → logprob: -7.548756122589111

Token 201: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2703865170478821
    2. ',' → logprob: -2.6453864574432373
    3. '<|end|>' → logprob: -3.3953864574432373
    4. ' continue' → logprob: -3.5203864574432373
    5. ' ' → logprob: -3.8953864574432373
    6. ' must' → logprob: -4.270386695861816
    7. 'are' → logprob: -5.020386695861816
    8. ' can' → logprob: -5.270386695861816
    9. ' (' → logprob: -5.270386695861816
    10. ' in' → logprob: -5.395386695861816

Token 202: ' literals' (ID: 193569)
  Prédit: ' literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.4001666307449341
    2. 'l' → logprob: -2.4001665115356445
    3. ' not' → logprob: -3.5251665115356445
    4. ' treated' → logprob: -3.6501665115356445
    5. 'treated' → logprob: -3.7751665115356445
    6. 'literal' → logprob: -3.9001665115356445
    7. ' kept' → logprob: -3.9001665115356445
    8. 'not' → logprob: -4.0251665115356445
    9. ' fixed' → logprob: -4.5251665115356445
    10. 'fixed' → logprob: -4.7751665115356445

Token 203: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24747125804424286
    2. ' )' → logprob: -1.7474712133407593
    3. ',' → logprob: -3.872471332550049
    4. ' ' → logprob: -4.872471332550049
    5. ' ,' → logprob: -4.872471332550049
    6. ''' → logprob: -6.247471332550049
    7. '.' → logprob: -6.622471332550049
    8. ' that' → logprob: -6.872471332550049
    9. ' and' → logprob: -7.122471332550049
    10. '```' → logprob: -7.247471332550049

Token 205: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24950343370437622
    2. '-' → logprob: -1.8745033740997314
    3. 'x' → logprob: -4.2495036125183105
    4. ',' → logprob: -4.6245036125183105
    5. ' or' → logprob: -4.8745036125183105
    6. ' )' → logprob: -4.9995036125183105
    7. ' ' → logprob: -5.4995036125183105
    8. '.' → logprob: -5.6245036125183105
    9. '#' → logprob: -5.7495036125183105
    10. '<=' → logprob: -6.2495036125183105

Token 206: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3405897617340088
    2. ')' → logprob: -1.5905897617340088
    3. '=' → logprob: -1.8405897617340088
    4. ' ' → logprob: -2.465589761734009
    5. '9' → logprob: -2.590589761734009
    6. '-' → logprob: -2.840589761734009
    7. ' +' → logprob: -3.465589761734009
    8. ',' → logprob: -3.715589761734009
    9. '1' → logprob: -4.09058952331543
    10. '0' → logprob: -4.59058952331543

Token 207: ',+' (ID: 38214)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5465248823165894
    2. ')' → logprob: -1.7965248823165894
    3. '0' → logprob: -2.296525001525879
    4. '2' → logprob: -2.546525001525879
    5. '9' → logprob: -3.296525001525879
    6. '+' → logprob: -4.671525001525879
    7. '7' → logprob: -4.921525001525879
    8. ' ,' → logprob: -5.546525001525879
    9. '),' → logprob: -5.546525001525879
    10. '))' → logprob: -6.046525001525879

Token 208: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7653358578681946
    2. ',' → logprob: -0.8903358578681946
    3. ')' → logprob: -2.89033579826355
    4. '-,' → logprob: -3.14033579826355
    5. '*' → logprob: -4.765336036682129
    6. ' ,' → logprob: -5.390336036682129
    7. '-)' → logprob: -5.515336036682129
    8. ' -' → logprob: -5.890336036682129
    9. ' ' → logprob: -6.265336036682129
    10. ',-' → logprob: -7.140336036682129

Token 209: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3178844153881073
    2. ',' → logprob: -1.3178844451904297
    3. '),' → logprob: -6.81788444519043
    4. ' ,' → logprob: -6.94288444519043
    5. '*' → logprob: -7.56788444519043
    6. ' )' → logprob: -7.56788444519043
    7. '```' → logprob: -8.69288444519043
    8. ',
' → logprob: -8.81788444519043
    9. ',...' → logprob: -9.06788444519043
    10. ' ' → logprob: -9.06788444519043

Token 210: '*,' (ID: 24077)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.058898162096738815
    2. '*,' → logprob: -3.4338982105255127
    3. ' *' → logprob: -4.433897972106934
    4. '*)' → logprob: -4.808897972106934
    5. ')' → logprob: -5.933897972106934
    6. ' *,' → logprob: -7.183897972106934
    7. ',' → logprob: -8.058897972106934
    8. '*\' → logprob: -8.558897972106934
    9. ' )' → logprob: -8.683897972106934
    10. ' *)' → logprob: -8.933897972106934

Token 211: '(' (ID: 7)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1269223392009735
    2. ' /' → logprob: -2.501922369003296
    3. '/,' → logprob: -3.626922369003296
    4. ')' → logprob: -5.376922130584717
    5. ',' → logprob: -6.126922130584717
    6. '/)' → logprob: -6.251922130584717
    7. ' ' → logprob: -8.001922607421875
    8. ' ,' → logprob: -8.126922607421875
    9. '(' → logprob: -8.251922607421875
    10. ' )' → logprob: -8.251922607421875

Token 212: ',),' (ID: 143622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01039031334221363
    2. '),' → logprob: -5.260390281677246
    3. ',' → logprob: -5.385390281677246
    4. '))' → logprob: -7.635390281677246
    5. ',)' → logprob: -10.635390281677246
    6. '#' → logprob: -12.385390281677246
    7. '')' → logprob: -12.385390281677246
    8. ')),' → logprob: -12.385390281677246
    9. ')))' → logprob: -12.635390281677246
    10. ' )' → logprob: -12.635390281677246

Token 213: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0068147084675729275
    2. ' =' → logprob: -5.506814479827881
    3. ',' → logprob: -6.631814479827881
    4. ')' → logprob: -8.006814956665039
    5. ' =)' → logprob: -8.256814956665039
    6. ' ,' → logprob: -9.256814956665039
    7. ' )' → logprob: -9.381814956665039
    8. '/' → logprob: -9.381814956665039
    9. '==' → logprob: -9.631814956665039
    10. ',)' → logprob: -9.756814956665039

Token 214: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017380056669935584
    2. ',' → logprob: -6.50173807144165
    3. '#' → logprob: -9.501737594604492
    4. '')' → logprob: -10.126737594604492
    5. '),' → logprob: -10.376737594604492
    6. '")' → logprob: -10.751737594604492
    7. ' )' → logprob: -11.251737594604492
    8. '))' → logprob: -12.001737594604492
    9. ')#' → logprob: -12.001737594604492
    10. '<|end|>' → logprob: -12.001737594604492

Token 215: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0102238655090332
    2. '<|end|>' → logprob: -1.0102238655090332
    3. '
' → logprob: -2.510223865509033
    4. 'def' → logprob: -2.635223865509033
    5. '<|end|>' → logprob: -2.635223865509033
    6. ')' → logprob: -4.385223865509033
    7. 'import' → logprob: -4.635223865509033
    8. ',' → logprob: -4.760223865509033
    9. ':' → logprob: -6.010223865509033
    10. '```' → logprob: -6.135223865509033

Token 216: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.039101243019104
    2. '#' → logprob: -1.289101243019104
    3. 'def' → logprob: -1.414101243019104
    4. 'import' → logprob: -3.5391011238098145
    5. '```' → logprob: -3.9141011238098145
    6. '_' → logprob: -4.5391011238098145
    7. '<|end|>' → logprob: -4.5391011238098145
    8. '[' → logprob: -4.7891011238098145
    9. '\n' → logprob: -5.1641011238098145
    10. ')' → logprob: -5.1641011238098145

Token 217: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6135050058364868
    2. '#' → logprob: -0.9885050058364868
    3. 'encrypted' → logprob: -3.7385048866271973
    4. 's' → logprob: -4.363504886627197
    5. 'input' → logprob: -4.488504886627197
    6. 'class' → logprob: -4.613504886627197
    7. 'expr' → logprob: -4.863504886627197
    8. 'tokens' → logprob: -5.613504886627197
    9. '
' → logprob: -5.738504886627197
    10. 'import' → logprob: -6.363504886627197

Token 218: ' original' (ID: 4756)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3347933888435364
    2. ' code' → logprob: -2.3347933292388916
    3. ' ' → logprob: -2.5847933292388916
    4. ' rest' → logprob: -3.3347933292388916
    5. ' encrypted' → logprob: -3.9597933292388916
    6. ' input' → logprob: -4.459793567657471
    7. ' remainder' → logprob: -4.834793567657471
    8. '_' → logprob: -5.334793567657471
    9. '#' → logprob: -5.459793567657471
    10. ' original' → logprob: -5.584793567657471

Token 219: ' equation' (ID: 42006)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.6766071319580078
    2. 'string' → logprob: -1.9266071319580078
    3. '_' → logprob: -2.176607131958008
    4. '_string' → logprob: -2.426607131958008
    5. ' code' → logprob: -2.551607131958008
    6. '_code' → logprob: -2.676607131958008
    7. '_char' → logprob: -2.926607131958008
    8. ' string' → logprob: -3.176607131958008
    9. '_token' → logprob: -3.176607131958008
    10. ')' → logprob: -3.551607131958008

Token 220: ' contains' (ID: 8895)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0289934873580933
    2. ' can' → logprob: -1.7789934873580933
    3. ' is' → logprob: -2.528993606567383
    4. ' string' → logprob: -2.778993606567383
    5. ' consists' → logprob: -3.153993606567383
    6. 'string' → logprob: -3.278993606567383
    7. ' must' → logprob: -3.403993606567383
    8. ' may' → logprob: -3.403993606567383
    9. 'def' → logprob: -3.653993606567383
    10. ' has' → logprob: -3.653993606567383

Token 221: ' exactly' (ID: 9707)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.430739164352417
    2. 'only' → logprob: -1.805739164352417
    3. ' both' → logprob: -3.555739164352417
    4. ' letters' → logprob: -3.805739164352417
    5. ' original' → logprob: -3.930739164352417
    6. ' digits' → logprob: -4.055739402770996
    7. 'letters' → logprob: -4.430739402770996
    8. ' all' → logprob: -4.680739402770996
    9. 'both' → logprob: -4.680739402770996
    10. 'original' → logprob: -4.805739402770996

Token 222: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.8101459741592407
    2. ' two' → logprob: -1.6851459741592407
    3. 'one' → logprob: -1.6851459741592407
    4. 'two' → logprob: -2.185145854949951
    5. ' ' → logprob: -2.935145854949951
    6. ' the' → logprob: -5.560145854949951
    7. '2' → logprob: -5.685145854949951
    8. '1' → logprob: -5.685145854949951
    9. 'the' → logprob: -6.310145854949951
    10. ' exactly' → logprob: -6.685145854949951

Token 223: ' '='' (ID: 98780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09245958179235458
    2. ' =' → logprob: -2.8424596786499023
    3. ' equal' → logprob: -4.092459678649902
    4. 'equal' → logprob: -4.717459678649902
    5. ' equals' → logprob: -6.217459678649902
    6. 'equals' → logprob: -7.217459678649902
    7. ' '='' → logprob: -7.467459678649902
    8. ''' → logprob: -8.217459678649902
    9. 'space' → logprob: -8.467459678649902
    10. ' ' → logprob: -8.592459678649902

Token 224: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9069017171859741
    2. '_' → logprob: -2.1569018363952637
    3. '<|end|>' → logprob: -2.4069018363952637
    4. '#' → logprob: -2.6569018363952637
    5. ')' → logprob: -2.9069018363952637
    6. ',' → logprob: -3.0319018363952637
    7. '\n' → logprob: -3.2819018363952637
    8. '\' → logprob: -3.2819018363952637
    9. 'def' → logprob: -3.5319018363952637
    10. '<|end|>' → logprob: -4.156901836395264

Token 225: '#
' (ID: 11240)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2835417985916138
    2. '\n' → logprob: -1.2835417985916138
    3. '=' → logprob: -2.158541679382324
    4. '
' → logprob: -2.533541679382324
    5. '#' → logprob: -2.783541679382324
    6. '_' → logprob: -2.908541679382324
    7. ')' → logprob: -3.408541679382324
    8. ',' → logprob: -3.408541679382324
    9. ' =' → logprob: -4.033541679382324
    10. ''' → logprob: -5.033541679382324

Token 226: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31207969784736633
    2. 'def' → logprob: -1.562079668045044
    3. '=' → logprob: -3.687079668045044
    4. 's' → logprob: -4.937079906463623
    5. 'encrypted' → logprob: -5.062079906463623
    6. 'input' → logprob: -5.812079906463623
    7. 'import' → logprob: -5.812079906463623
    8. ' =' → logprob: -6.312079906463623
    9. '=
' → logprob: -6.437079906463623
    10. ' #' → logprob: -6.687079906463623

Token 227: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05838655307888985
    2. 'class' → logprob: -2.9333865642547607
    3. 'input' → logprob: -6.308386325836182
    4. 'from' → logprob: -7.308386325836182
    5. 'import' → logprob: -7.933386325836182
    6. '#' → logprob: -8.05838680267334
    7. 'n' → logprob: -9.93338680267334
    8. 'data' → logprob: -10.18338680267334
    9. 'N' → logprob: -10.30838680267334
    10. 'pattern' → logprob: -10.30838680267334

Token 228: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32201895117759705
    2. '#' → logprob: -2.19701886177063
    3. '=' → logprob: -2.32201886177063
    4. 'input' → logprob: -3.57201886177063
    5. 'import' → logprob: -4.697019100189209
    6. 's' → logprob: -5.197019100189209
    7. '^' → logprob: -5.572019100189209
    8. 'equ' → logprob: -6.072019100189209
    9. '(' → logprob: -6.447019100189209
    10. '=
' → logprob: -6.697019100189209

Token 229: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1467796266078949
    2. '#' → logprob: -2.0217795372009277
    3. '.import' → logprob: -6.771779537200928
    4. 'import' → logprob: -7.021779537200928
    5. 'def' → logprob: -7.146779537200928
    6. '=' → logprob: -7.521779537200928
    7. ' =' → logprob: -8.771780014038086
    8. '.#' → logprob: -9.271780014038086
    9. ':' → logprob: -9.521780014038086
    10. '.
' → logprob: -9.521780014038086

Token 230: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2144871950149536
    2. 'We' → logprob: -1.3394871950149536
    3. ' We' → logprob: -2.089487075805664
    4. 'def' → logprob: -2.214487075805664
    5. 'The' → logprob: -3.214487075805664
    6. ' The' → logprob: -3.464487075805664
    7. 'class' → logprob: -4.089487075805664
    8. 'Read' → logprob: -4.089487075805664
    9. ' Read' → logprob: -4.214487075805664
    10. 'input' → logprob: -4.214487075805664

Token 231: ' need' (ID: 1309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1746193170547485
    2. ' will' → logprob: -2.049619197845459
    3. '#' → logprob: -2.174619197845459
    4. ' want' → logprob: -2.674619197845459
    5. ' =' → logprob: -2.924619197845459
    6. ''ll' → logprob: -2.924619197845459
    7. ' continue' → logprob: -3.049619197845459
    8. ' can' → logprob: -3.174619197845459
    9. ' need' → logprob: -3.174619197845459
    10. '=' → logprob: -3.299619197845459

Token 232: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.528914749622345
    2. 'to' → logprob: -0.903914749622345
    3. ' a' → logprob: -6.528914928436279
    4. 'parse' → logprob: -7.028914928436279
    5. 'def' → logprob: -7.278914928436279
    6. ' parse' → logprob: -7.278914928436279
    7. '_to' → logprob: -7.403914928436279
    8. ' tokenize' → logprob: -7.903914928436279
    9. ' the' → logprob: -8.653914451599121
    10. '#' → logprob: -9.153914451599121

Token 233: ' test' (ID: 1746)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.6773675680160522
    2. 'count' → logprob: -1.6773675680160522
    3. 'enumer' → logprob: -2.927367687225342
    4. 'assign' → logprob: -3.177367687225342
    5. 'handle' → logprob: -3.177367687225342
    6. ' parse' → logprob: -3.677367687225342
    7. 'consider' → logprob: -3.677367687225342
    8. 'find' → logprob: -3.802367687225342
    9. 'process' → logprob: -4.177367687225342
    10. ' count' → logprob: -4.802367687225342

Token 234: ' assignments' (ID: 41477)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.24743711948394775
    2. 'all' → logprob: -1.6224371194839478
    3. 'def' → logprob: -4.997437000274658
    4. ' the' → logprob: -5.747437000274658
    5. 'the' → logprob: -6.622437000274658
    6. 'possible' → logprob: -6.747437000274658
    7. ' different' → logprob: -6.872437000274658
    8. ' possible' → logprob: -7.122437000274658
    9. 'for' → logprob: -7.247437000274658
    10. ' for' → logprob: -7.372437000274658

Token 235: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9941285252571106
    2. '_' → logprob: -1.1191284656524658
    3. 'of' → logprob: -2.994128465652466
    4. '<|end|>' → logprob: -3.244128465652466
    5. ' ' → logprob: -3.494128465652466
    6. ' =' → logprob: -3.619128465652466
    7. ' to' → logprob: -3.869128465652466
    8. 'for' → logprob: -3.994128465652466
    9. 'to' → logprob: -3.994128465652466
    10. ',' → logprob: -4.119128704071045

Token 236: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.4710000157356262
    2. 'letters' → logprob: -1.8459999561309814
    3. ' original' → logprob: -2.3459999561309814
    4. ' letters' → logprob: -3.9709999561309814
    5. 'the' → logprob: -4.2210001945495605
    6. 'orig' → logprob: -4.2210001945495605
    7. 'tokens' → logprob: -4.5960001945495605
    8. 'encrypted' → logprob: -4.5960001945495605
    9. 'each' → logprob: -4.7210001945495605
    10. 'unknown' → logprob: -5.2210001945495605

Token 237: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.9205467700958252
    2. ' chars' → logprob: -1.1705467700958252
    3. '_chars' → logprob: -1.7955467700958252
    4. ' characters' → logprob: -2.295546770095825
    5. '_char' → logprob: -5.170546531677246
    6. 'characters' → logprob: -5.295546531677246
    7. ' letters' → logprob: -5.420546531677246
    8. '_' → logprob: -5.920546531677246
    9. 'char' → logprob: -6.420546531677246
    10. ' tokens' → logprob: -6.670546531677246

Token 238: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.8554234504699707
    2. ' encrypted' → logprob: -1.6054234504699707
    3. 'letters' → logprob: -1.7304234504699707
    4. 'encrypted' → logprob: -2.8554234504699707
    5. ' the' → logprob: -2.9804234504699707
    6. ' encryption' → logprob: -3.4804234504699707
    7. ' each' → logprob: -4.480423450469971
    8. 'the' → logprob: -4.605423450469971
    9. ' decrypted' → logprob: -4.855423450469971
    10. 'each' → logprob: -5.230423450469971

Token 240: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3401457667350769
    2. '#' → logprob: -2.4651458263397217
    3. ':' → logprob: -2.4651458263397217
    4. ',' → logprob: -2.7151458263397217
    5. ' =' → logprob: -4.215145587921143
    6. '=' → logprob: -4.340145587921143
    7. '_' → logprob: -5.215145587921143
    8. 'import' → logprob: -5.840145587921143
    9. ')' → logprob: -5.840145587921143
    10. 'for' → logprob: -6.340145587921143

Token 241: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11629340052604675
    2. 'and' → logprob: -3.116293430328369
    3. ' and' → logprob: -4.241293430328369
    4. ' but' → logprob: -4.866293430328369
    5. 'i' → logprob: -4.991293430328369
    6. ' #' → logprob: -5.241293430328369
    7. ' continuing' → logprob: -5.491293430328369
    8. ',' → logprob: -5.616293430328369
    9. 'but' → logprob: -5.616293430328369
    10. 'which' → logprob: -5.991293430328369

Token 242: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07508119940757751
    2. 'and' → logprob: -4.3250813484191895
    3. ' and' → logprob: -4.3250813484191895
    4. 'i' → logprob: -4.8250813484191895
    5. ' #' → logprob: -5.3250813484191895
    6. ',' → logprob: -5.5750813484191895
    7. ' i' → logprob: -5.5750813484191895
    8. ' but' → logprob: -5.7000813484191895
    9. ' which' → logprob: -6.0750813484191895
    10. 'which' → logprob: -6.0750813484191895

Token 243: ' consistent' (ID: 20434)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02001960203051567
    2. 'and' → logprob: -5.52001953125
    3. ' trying' → logprob: -5.64501953125
    4. 'checking' → logprob: -6.39501953125
    5. ' #' → logprob: -6.77001953125
    6. 'but' → logprob: -6.89501953125
    7. 'i' → logprob: -6.89501953125
    8. 'trying' → logprob: -7.02001953125
    9. 'which' → logprob: -7.14501953125
    10. ' but' → logprob: -7.52001953125

Token 244: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.35642310976982117
    2. 'with' → logprob: -1.2314231395721436
    3. '=' → logprob: -5.3564229011535645
    4. '_' → logprob: -6.4814229011535645
    5. '_with' → logprob: -6.9814229011535645
    6. ' =' → logprob: -8.106423377990723
    7. ',' → logprob: -9.356423377990723
    8. ' ' → logprob: -9.731423377990723
    9. 'ly' → logprob: -10.231423377990723
    10. ')' → logprob: -10.356423377990723

Token 245: ' letter' (ID: 10263)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5325614809989929
    2. 'the' → logprob: -1.1575615406036377
    3. ' encryption' → logprob: -3.0325615406036377
    4. ' encrypted' → logprob: -3.7825615406036377
    5. ' their' → logprob: -4.907561302185059
    6. 'encrypted' → logprob: -5.407561302185059
    7. 'their' → logprob: -6.282561302185059
    8. ' positions' → logprob: -6.657561302185059
    9. ' all' → logprob: -6.907561302185059
    10. ' constraints' → logprob: -7.032561302185059

Token 246: ' substitutions' (ID: 188496)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39878934621810913
    2. '_to' → logprob: -1.273789405822754
    3. '-to' → logprob: -4.148789405822754
    4. 'to' → logprob: -4.523789405822754
    5. '_' → logprob: -5.398789405822754
    6. '_mapping' → logprob: -5.398789405822754
    7. '_s' → logprob: -5.648789405822754
    8. '_assign' → logprob: -6.273789405822754
    9. ' to' → logprob: -6.523789405822754
    10. '_m' → logprob: -6.773789405822754

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23089799284934998
    2. '.' → logprob: -2.605897903442383
    3. 's' → logprob: -3.105897903442383
    4. '<|end|>' → logprob: -3.230897903442383
    5. '#' → logprob: -4.355897903442383
    6. ' ,' → logprob: -4.730897903442383
    7. '<|end|>' → logprob: -4.855897903442383
    8. ':' → logprob: -5.605897903442383
    9. ',
' → logprob: -5.855897903442383
    10. ' and' → logprob: -5.980897903442383

Token 248: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10607120394706726
    2. ' and' → logprob: -2.8560712337493896
    3. 'and' → logprob: -3.8560712337493896
    4. 'def' → logprob: -4.6060709953308105
    5. ' #' → logprob: -5.2310709953308105
    6. ' then' → logprob: -6.8560709953308105
    7. ' ' → logprob: -7.4810709953308105
    8. ' which' → logprob: -7.9810709953308105
    9. '   ' → logprob: -8.106071472167969
    10. ' def' → logprob: -8.106071472167969

Token 249: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9937642812728882
    2. ' are' → logprob: -1.6187642812728882
    3. ' satisfy' → logprob: -2.3687644004821777
    4. ' cover' → logprob: -2.9937644004821777
    5. ' continue' → logprob: -3.1187644004821777
    6. ' complete' → logprob: -3.3687644004821777
    7. ' allow' → logprob: -3.4937644004821777
    8. ' match' → logprob: -3.6187644004821777
    9. ' have' → logprob: -3.8687644004821777
    10. ' map' → logprob: -3.8687644004821777

Token 250: ' produce' (ID: 10635)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.38148507475852966
    2. ' produce' → logprob: -2.5064849853515625
    3. ' form' → logprob: -2.8814849853515625
    4. ' generate' → logprob: -3.0064849853515625
    5. 'be' → logprob: -3.3814849853515625
    6. ' match' → logprob: -3.8814849853515625
    7. ' represent' → logprob: -4.0064849853515625
    8. ' map' → logprob: -4.5064849853515625
    9. 'generate' → logprob: -5.0064849853515625
    10. ' reconstruct' → logprob: -5.3814849853515625

Token 251: ' the' (ID: 290)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.3545743227005005
    2. ' a' → logprob: -2.229574203491211
    3. ' an' → logprob: -2.604574203491211
    4. ' the' → logprob: -2.854574203491211
    5. 'valid' → logprob: -3.604574203491211
    6. 'a' → logprob: -4.104574203491211
    7. 'the' → logprob: -5.354574203491211
    8. 'an' → logprob: -5.729574203491211
    9. ' original' → logprob: -5.854574203491211
    10. ' both' → logprob: -7.104574203491211

Token 252: ' given' (ID: 4335)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0622063875198364
    2. ' original' → logprob: -1.4372063875198364
    3. ' given' → logprob: -1.8122063875198364
    4. 'original' → logprob: -3.062206268310547
    5. ' encrypted' → logprob: -3.562206268310547
    6. ' same' → logprob: -3.687206268310547
    7. ' equation' → logprob: -3.687206268310547
    8. ' rest' → logprob: -4.062206268310547
    9. 'next' → logprob: -4.187206268310547
    10. ' valid' → logprob: -4.312206268310547

Token 253: ' encrypted' (ID: 47764)
  Prédit: ' encrypted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encrypted' → logprob: -0.2811686098575592
    2. ' equation' → logprob: -2.4061686992645264
    3. 'encrypted' → logprob: -2.5311686992645264
    4. ' string' → logprob: -3.7811686992645264
    5. ' encryption' → logprob: -3.9061686992645264
    6. ' code' → logprob: -4.281168460845947
    7. ' input' → logprob: -5.031168460845947
    8. 'string' → logprob: -5.781168460845947
    9. ' expression' → logprob: -6.906168460845947
    10. ' original' → logprob: -6.906168460845947

Token 254: ' input' (ID: 3422)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.30739760398864746
    2. ' string' → logprob: -1.9323976039886475
    3. '_string' → logprob: -3.0573976039886475
    4. ')' → logprob: -3.9323976039886475
    5. '_' → logprob: -4.057397842407227
    6. ' ' → logprob: -4.682397842407227
    7. ' equation' → logprob: -5.182397842407227
    8. '<|end|>' → logprob: -5.182397842407227
    9. 'equ' → logprob: -6.307397842407227
    10. ''' → logprob: -6.682397842407227

Token 255: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.62001633644104
    2. ' ' → logprob: -2.12001633644104
    3. '[' → logprob: -2.74501633644104
    4. '#' → logprob: -2.99501633644104
    5. ',' → logprob: -3.24501633644104
    6. ''' → logprob: -3.37001633644104
    7. ')' → logprob: -3.49501633644104
    8. 'def' → logprob: -3.49501633644104
    9. '\' → logprob: -4.245016098022461
    10. ':' → logprob: -4.245016098022461

Token 257: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11904601752758026
    2. 'def' → logprob: -2.7440459728240967
    3. 'import' → logprob: -4.119046211242676
    4. '
' → logprob: -4.869046211242676
    5. '\n' → logprob: -5.244046211242676
    6. '```' → logprob: -5.619046211242676
    7. '\' → logprob: -5.744046211242676
    8. '#
' → logprob: -5.994046211242676
    9. '[' → logprob: -6.369046211242676
    10. ')' → logprob: -6.619046211242676

Token 258: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018406866118311882
    2. '#' → logprob: -5.143406867980957
    3. 'class' → logprob: -5.143406867980957
    4. '(' → logprob: -6.143406867980957
    5. 'import' → logprob: -6.893406867980957
    6. 'from' → logprob: -7.268406867980957
    7. '(
' → logprob: -7.518406867980957
    8. '_' → logprob: -7.893406867980957
    9. ')' → logprob: -8.643406867980957
    10. 'tokens' → logprob: -8.643406867980957

Token 259: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06189193204045296
    2. '#' → logprob: -3.686892032623291
    3. 'dp' → logprob: -4.311892032623291
    4. 'class' → logprob: -4.811892032623291
    5. 'pos' → logprob: -6.061892032623291
    6. 'from' → logprob: -6.311892032623291
    7. '
' → logprob: -6.436892032623291
    8. 'pattern' → logprob: -6.436892032623291
    9. 'n' → logprob: -6.686892032623291
    10. 'input' → logprob: -7.061892032623291

Token 260: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3921138048171997
    2. '#' → logprob: -1.7671138048171997
    3. 'def' → logprob: -1.8921138048171997
    4. 'import' → logprob: -6.51711368560791
    5. '=' → logprob: -7.39211368560791
    6. 'from' → logprob: -8.26711368560791
    7. ' =' → logprob: -9.89211368560791
    8. '.
' → logprob: -10.14211368560791
    9. ',' → logprob: -10.39211368560791
    10. ':' → logprob: -10.39211368560791

Token 261: ' To' (ID: 2514)
  Prédit: 'We'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'We' → logprob: -0.49363043904304504
    2. 'def' → logprob: -2.2436304092407227
    3. ' We' → logprob: -2.3686304092407227
    4. 'from' → logprob: -2.9936304092407227
    5. 'Define' → logprob: -3.2436304092407227
    6. '#' → logprob: -3.7436304092407227
    7. 'Use' → logprob: -4.118630409240723
    8. 'We'll' → logprob: -4.993630409240723
    9. 'Parse' → logprob: -5.118630409240723
    10. ' We'll' → logprob: -5.368630409240723

Token 262: ' do' (ID: 621)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.0768671035766602
    2. 'count' → logprob: -1.5768671035766602
    3. 'parse' → logprob: -1.9518671035766602
    4. 'do' → logprob: -2.70186710357666
    5. 'handle' → logprob: -2.82686710357666
    6. 'o' → logprob: -4.07686710357666
    7. 'continue' → logprob: -4.20186710357666
    8. ' handle' → logprob: -4.32686710357666
    9. 'build' → logprob: -4.45186710357666
    10. 'generate' → logprob: -4.45186710357666

Token 263: ' that' (ID: 484)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.7986440658569336
    2. '#' → logprob: -1.7986440658569336
    3. ' ' → logprob: -2.5486440658569336
    4. ' the' → logprob: -2.9236440658569336
    5. 'this' → logprob: -3.1736440658569336
    6. 'def' → logprob: -3.4236440658569336
    7. 's' → logprob: -3.6736440658569336
    8. '   ' → logprob: -4.173644065856934
    9. ',' → logprob: -4.173644065856934
    10. '(' → logprob: -4.423644065856934

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03482727333903313
    2. ' we' → logprob: -4.03482723236084
    3. ' ,' → logprob: -5.90982723236084
    4. ':' → logprob: -6.28482723236084
    5. 'import' → logprob: -6.28482723236084
    6. '#' → logprob: -6.40982723236084
    7. 'def' → logprob: -6.53482723236084
    8. '
' → logprob: -7.15982723236084
    9. 'we' → logprob: -7.15982723236084
    10. ' ' → logprob: -7.15982723236084

Token 265: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35470467805862427
    2. 'we' → logprob: -1.7297046184539795
    3. ' we' → logprob: -2.3547046184539795
    4. 'def' → logprob: -3.9797046184539795
    5. 'import' → logprob: -6.354704856872559
    6. ' #' → logprob: -6.979704856872559
    7. ' def' → logprob: -7.229704856872559
    8. '
' → logprob: -7.479704856872559
    9. ' we'll' → logprob: -7.604704856872559
    10. 'token' → logprob: -7.729704856872559

Token 266: ' try' (ID: 2075)
  Prédit: ''ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ll' → logprob: -0.9493853449821472
    2. ' will' → logprob: -1.449385404586792
    3. ' need' → logprob: -2.199385404586792
    4. '#' → logprob: -2.574385404586792
    5. ' want' → logprob: -2.949385404586792
    6. 'def' → logprob: -3.699385404586792
    7. 'need' → logprob: -3.949385404586792
    8. ' continue' → logprob: -4.074385166168213
    9. 'will' → logprob: -4.199385166168213
    10. ' can' → logprob: -4.949385166168213

Token 267: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.346631795167923
    2. 'all' → logprob: -1.8466317653656006
    3. ' to' → logprob: -2.2216317653656006
    4. 'to' → logprob: -3.9716317653656006
    5. ' parsing' → logprob: -5.59663200378418
    6. 'assign' → logprob: -7.09663200378418
    7. 'parse' → logprob: -7.34663200378418
    8. ' every' → logprob: -7.72163200378418
    9. 'par' → logprob: -7.97163200378418
    10. ' different' → logprob: -8.47163200378418

Token 268: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5109186172485352
    2. ' possible' → logprob: -1.7609186172485352
    3. 'poss' → logprob: -1.8859186172485352
    4. ' possibilities' → logprob: -3.885918617248535
    5. ' ways' → logprob: -4.010918617248535
    6. ' assignments' → logprob: -4.135918617248535
    7. 'assign' → logprob: -4.885918617248535
    8. ' original' → logprob: -5.635918617248535
    9. ' mappings' → logprob: -6.260918617248535
    10. 'tokens' → logprob: -6.635918617248535

Token 269: ' mappings' (ID: 96933)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9539217948913574
    2. ' tokens' → logprob: -1.0789217948913574
    3. 'tokens' → logprob: -2.0789217948913574
    4. ' original' → logprob: -3.0789217948913574
    5. ' possible' → logprob: -4.203921794891357
    6. ' assignments' → logprob: -4.328921794891357
    7. ' token' → logprob: -4.328921794891357
    8. ' ways' → logprob: -4.828921794891357
    9. 'next' → logprob: -4.828921794891357
    10. 'token' → logprob: -4.828921794891357

Token 270: ' from' (ID: 591)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1450238227844238
    2. '_' → logprob: -1.6450238227844238
    3. 'from' → logprob: -1.7700238227844238
    4. ' ' → logprob: -3.020023822784424
    5. ' =' → logprob: -3.020023822784424
    6. ',' → logprob: -3.020023822784424
    7. ' for' → logprob: -3.520023822784424
    8. 'for' → logprob: -3.645023822784424
    9. 'of' → logprob: -4.020023822784424
    10. ' from' → logprob: -4.270023822784424

Token 271: ' each' (ID: 2454)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -1.301330327987671
    2. 'original' → logprob: -1.551330327987671
    3. ' letters' → logprob: -1.551330327987671
    4. 'letters' → logprob: -2.176330327987671
    5. ' encrypted' → logprob: -2.926330327987671
    6. 'encrypted' → logprob: -3.301330327987671
    7. ' the' → logprob: -3.551330327987671
    8. 'unknown' → logprob: -4.05133056640625
    9. ' unknown' → logprob: -4.05133056640625
    10. 'the' → logprob: -4.17633056640625

Token 272: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.35742881894111633
    2. ' original' → logprob: -1.857428789138794
    3. ' encrypted' → logprob: -3.107428789138794
    4. 'letter' → logprob: -3.232428789138794
    5. ' next' → logprob: -3.982428789138794
    6. ' unknown' → logprob: -4.482429027557373
    7. 'original' → logprob: -4.982429027557373
    8. ' unique' → logprob: -4.982429027557373
    9. 'encrypted' → logprob: -5.232429027557373
    10. ' distinct' → logprob: -5.982429027557373

Token 273: ' ->
' (ID: 26659)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04152824729681015
    2. '_to' → logprob: -4.541528224945068
    3. '<|end|>' → logprob: -4.666528224945068
    4. 'to' → logprob: -5.166528224945068
    5. 's' → logprob: -5.416528224945068
    6. ' ' → logprob: -5.791528224945068
    7. ',' → logprob: -6.416528224945068
    8. '_' → logprob: -6.916528224945068
    9. ' _' → logprob: -7.041528224945068
    10. ' in' → logprob: -7.541528224945068

Token 274: '#' (ID: 2)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.1600772589445114
    2. 'original' → logprob: -3.4100773334503174
    3. ' {' → logprob: -3.9100773334503174
    4. ' possible' → logprob: -4.035077095031738
    5. ' set' → logprob: -4.160077095031738
    6. ' '' → logprob: -4.910077095031738
    7. ' a' → logprob: -4.910077095031738
    8. ''s' → logprob: -5.035077095031738
    9. '{' → logprob: -5.035077095031738
    10. ' [' → logprob: -5.285077095031738

Token 275: '   ' (ID: 271)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.6675758957862854
    2. ' set' → logprob: -2.2925758361816406
    3. '{' → logprob: -2.9175758361816406
    4. ' {' → logprob: -2.9175758361816406
    5. ''s' → logprob: -3.1675758361816406
    6. ' '' → logprob: -3.2925758361816406
    7. 'original' → logprob: -3.5425758361816406
    8. ' possible' → logprob: -3.7925758361816406
    9. ' a' → logprob: -3.9175758361816406
    10. 'set' → logprob: -4.167575836181641

Token 276: ' an' (ID: 448)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -1.551826000213623
    2. '{' → logprob: -2.051826000213623
    3. ' a' → logprob: -2.051826000213623
    4. ' set' → logprob: -2.301826000213623
    5. ' {' → logprob: -2.551826000213623
    6. 'set' → logprob: -2.551826000213623
    7. 'original' → logprob: -3.176826000213623
    8. ''s' → logprob: -3.551826000213623
    9. ' possible' → logprob: -3.551826000213623
    10. 'a' → logprob: -3.926826000213623

Token 277: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.09483516216278076
    2. 'original' → logprob: -2.7198352813720703
    3. ' unknown' → logprob: -4.21983528137207
    4. 'y' → logprob: -5.21983528137207
    5. ' ' → logprob: -7.21983528137207
    6. 'one' → logprob: -7.59483528137207
    7. 'unknown' → logprob: -7.71983528137207
    8. ' one' → logprob: -7.84483528137207
    9. ' alphabet' → logprob: -7.96983528137207
    10. ' single' → logprob: -8.59483528137207

Token 278: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.4269565939903259
    2. ' char' → logprob: -1.1769566535949707
    3. 'char' → logprob: -4.176956653594971
    4. 'character' → logprob: -4.176956653594971
    5. ' ' → logprob: -5.551956653594971
    6. ' token' → logprob: -5.801956653594971
    7. '_char' → logprob: -6.926956653594971
    8. 'token' → logprob: -8.676956176757812
    9. ' space' → logprob: -8.676956176757812
    10. ' original' → logprob: -9.551956176757812

Token 279: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5706821084022522
    2. ''' → logprob: -2.1956820487976074
    3. '[' → logprob: -2.4456820487976074
    4. '(' → logprob: -3.1956820487976074
    5. '#' → logprob: -3.3206820487976074
    6. ',' → logprob: -3.4456820487976074
    7. ':' → logprob: -4.195682048797607
    8. ' =' → logprob: -4.320682048797607
    9. ' (' → logprob: -4.445682048797607
    10. '=' → logprob: -4.445682048797607

Token 280: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6645969748497009
    2. '"' → logprob: -1.7895970344543457
    3. 'digits' → logprob: -2.1645970344543457
    4. '['' → logprob: -3.1645970344543457
    5. ' the' → logprob: -3.4145970344543457
    6. ' '' → logprob: -3.5395970344543457
    7. '012' → logprob: -3.5395970344543457
    8. '0' → logprob: -3.7895970344543457
    9. 'the' → logprob: -3.9145970344543457
    10. ' digits' → logprob: -4.664597034454346

Token 281: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4974581301212311
    2. '"' → logprob: -1.9974581003189087
    3. ' set' → logprob: -2.3724582195281982
    4. ''' → logprob: -2.9974582195281982
    5. 'digits' → logprob: -3.3724582195281982
    6. '012' → logprob: -3.7474582195281982
    7. '0' → logprob: -4.497457981109619
    8. '['' → logprob: -4.622457981109619
    9. 'string' → logprob: -4.872457981109619
    10. '{'' → logprob: -5.497457981109619

Token 282: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.28559640049934387
    2. ' {' → logprob: -2.5355963706970215
    3. ' {'' → logprob: -2.5355963706970215
    4. '('' → logprob: -3.6605963706970215
    5. '(['' → logprob: -4.6605963706970215
    6. '{' → logprob: -4.7855963706970215
    7. 'of' → logprob: -4.7855963706970215
    8. '"' → logprob: -5.0355963706970215
    9. '{'' → logprob: -5.0355963706970215
    10. '(' → logprob: -5.2855963706970215

Token 283: ' possible' (ID: 4149)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5700600147247314
    2. '"' → logprob: -1.3200600147247314
    3. 'digits' → logprob: -2.5700600147247314
    4. '['' → logprob: -3.1950600147247314
    5. '('' → logprob: -3.9450600147247314
    6. '{'' → logprob: -4.820059776306152
    7. ' '' → logprob: -4.945059776306152
    8. '012' → logprob: -5.070059776306152
    9. ' digits' → logprob: -6.320059776306152
    10. ''d' → logprob: -6.820059776306152

Token 284: ' chars' (ID: 47991)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.6659093499183655
    2. ' original' → logprob: -1.4159092903137207
    3. 'chars' → logprob: -2.4159092903137207
    4. 'orig' → logprob: -3.0409092903137207
    5. '{'' → logprob: -4.040909290313721
    6. ' originals' → logprob: -4.040909290313721
    7. 'characters' → logprob: -4.165909290313721
    8. 'c' → logprob: -4.540909290313721
    9. 'digits' → logprob: -4.790909290313721
    10. ' chars' → logprob: -5.415909290313721

Token 285: ' {' (ID: 354)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4656327962875366
    2. '(' → logprob: -2.215632915496826
    3. ''' → logprob: -2.340632915496826
    4. '<|end|>' → logprob: -2.340632915496826
    5. ':' → logprob: -2.590632915496826
    6. 's' → logprob: -2.840632915496826
    7. 'import' → logprob: -2.965632915496826
    8. ',' → logprob: -2.965632915496826
    9. '[' → logprob: -3.090632915496826
    10. ')' → logprob: -3.215632915496826

Token 286: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11713722348213196
    2. '"' → logprob: -2.9921371936798096
    3. ' '' → logprob: -3.3671371936798096
    4. '012' → logprob: -3.9921371936798096
    5. '0' → logprob: -6.117137432098389
    6. 'digits' → logprob: -6.992137432098389
    7. ' "' → logprob: -7.242137432098389
    8. ' ' → logprob: -7.242137432098389
    9. ''d' → logprob: -7.992137432098389
    10. '['' → logprob: -8.11713695526123

Token 287: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004929531365633011
    2. ',' → logprob: -5.504929542541504
    3. '9' → logprob: -8.504929542541504
    4. '012' → logprob: -8.504929542541504
    5. ' ' → logprob: -8.629929542541504
    6. '123' → logprob: -9.129929542541504
    7. '..' → logprob: -10.004929542541504
    8. '1' → logprob: -10.504929542541504
    9. '"' → logprob: -11.254929542541504
    10. '
' → logprob: -11.254929542541504

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29572492837905884
    2. '9' → logprob: -1.420724868774414
    3. ' ' → logprob: -4.920724868774414
    4. '
' → logprob: -5.670724868774414
    5. '-' → logprob: -6.295724868774414
    6. ''' → logprob: -7.545724868774414
    7. '...' → logprob: -7.670724868774414
    8. '   ' → logprob: -8.420724868774414
    9. '```' → logprob: -8.920724868774414
    10. '

' → logprob: -9.170724868774414

Token 289: ',+' (ID: 38214)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0436114072799683
    2. ',' → logprob: -1.1686114072799683
    3. '2' → logprob: -1.5436114072799683
    4. '234' → logprob: -2.793611526489258
    5. ',...' → logprob: -4.043611526489258
    6. ',+' → logprob: -4.543611526489258
    7. '..' → logprob: -4.543611526489258
    8. '23' → logprob: -5.543611526489258
    9. '...' → logprob: -5.668611526489258
    10. '+-' → logprob: -5.668611526489258

Token 290: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.06258967518806458
    2. '-' → logprob: -2.812589645385742
    3. ',' → logprob: -8.437589645385742
    4. ' ,-' → logprob: -8.812589645385742
    5. ' -' → logprob: -9.437589645385742
    6. ' ' → logprob: -9.437589645385742
    7. '-,' → logprob: -10.187589645385742
    8. ' ,' → logprob: -10.687589645385742
    9. '   ' → logprob: -11.312589645385742
    10. ',-
' → logprob: -11.562589645385742

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011370821855962276
    2. ',*' → logprob: -5.261370658874512
    3. '*,' → logprob: -5.386370658874512
    4. ' ,' → logprob: -7.636370658874512
    5. '*' → logprob: -8.011370658874512
    6. '*/,' → logprob: -8.886370658874512
    7. ' ' → logprob: -9.261370658874512
    8. '*/' → logprob: -9.386370658874512
    9. '   ' → logprob: -10.011370658874512
    10. ',"' → logprob: -10.136370658874512

Token 292: '*,' (ID: 24077)
  Prédit: '*,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*,' → logprob: -0.05385374277830124
    2. '*' → logprob: -3.053853750228882
    3. ' *,' → logprob: -5.928853511810303
    4. '*/,' → logprob: -6.803853511810303
    5. '*/' → logprob: -7.303853511810303
    6. ' *' → logprob: -8.178853988647461
    7. ',' → logprob: -8.678853988647461
    8. '*)' → logprob: -9.553853988647461
    9. '**' → logprob: -10.428853988647461
    10. ''*' → logprob: -10.553853988647461

Token 293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8333703875541687
    2. ' (' → logprob: -1.8333704471588135
    3. ''' → logprob: -2.2083704471588135
    4. ' ()' → logprob: -2.3333704471588135
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.8333704471588135
    6. '"' → logprob: -3.5833704471588135
    7. '()' → logprob: -3.5833704471588135
    8. ' '' → logprob: -4.333370208740234
    9. ' (,' → logprob: -4.333370208740234
    10. ' ' → logprob: -4.458370208740234

Token 294: ',),' (ID: 143622)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7009843587875366
    2. ',),' → logprob: -0.7009843587875366
    3. ',' → logprob: -4.950984477996826
    4. ' ),' → logprob: -8.075984001159668
    5. ')' → logprob: -8.700984001159668
    6. ',)' → logprob: -8.950984001159668
    7. '),(' → logprob: -9.200984001159668
    8. ',),
' → logprob: -12.450984001159668
    9. '0' → logprob: -12.700984001159668
    10. '),'' → logprob: -12.825984001159668

Token 295: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.388157457113266
    2. '=}' → logprob: -1.1381574869155884
    3. '0' → logprob: -7.638157367706299
    4. ' =' → logprob: -8.763157844543457
    5. '}' → logprob: -8.888157844543457
    6. '=/' → logprob: -9.638157844543457
    7. '_=' → logprob: -9.888157844543457
    8. 'digits' → logprob: -9.888157844543457
    9. '==' → logprob: -10.013157844543457
    10. ',' → logprob: -10.138157844543457

Token 296: '}.
' (ID: 40066)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36694324016571045
    2. '}' → logprob: -1.2419432401657104
    3. ')}' → logprob: -4.616943359375
    4. ')' → logprob: -5.866943359375
    5. ','' → logprob: -6.866943359375
    6. ' }' → logprob: -6.866943359375
    7. ' ,' → logprob: -7.116943359375
    8. '012' → logprob: -7.866943359375
    9. '})' → logprob: -8.116943359375
    10. '0' → logprob: -8.616943359375

Token 297: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5597765445709229
    2. '_' → logprob: -2.184776544570923
    3. ',' → logprob: -2.684776544570923
    4. '#' → logprob: -2.684776544570923
    5. '{' → logprob: -2.684776544570923
    6. '
' → logprob: -2.684776544570923
    7. '\' → logprob: -2.809776544570923
    8. '{
' → logprob: -2.934776544570923
    9. 'import' → logprob: -3.059776544570923
    10. '_
' → logprob: -3.184776544570923

Token 298: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43775475025177
    2. '#' → logprob: -2.3127546310424805
    3. '{' → logprob: -2.8127546310424805
    4. '_
' → logprob: -3.1877546310424805
    5. ',' → logprob: -3.3127546310424805
    6. ''' → logprob: -4.1877546310424805
    7. '
' → logprob: -4.1877546310424805
    8. ')' → logprob: -4.5627546310424805
    9. 'def' → logprob: -4.5627546310424805
    10. ' _' → logprob: -4.9377546310424805

Token 299: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7793084383010864
    2. 'letters' → logprob: -1.4043084383010864
    3. '{' → logprob: -1.9043084383010864
    4. '#' → logprob: -3.154308319091797
    5. '{
' → logprob: -3.904308319091797
    6. '
' → logprob: -4.154308319091797
    7. 'possible' → logprob: -4.279308319091797
    8. 'import' → logprob: -5.029308319091797
    9. '(' → logprob: -5.529308319091797
    10. 'for' → logprob: -5.779308319091797

Token 300: ' must' (ID: 2804)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8144274950027466
    2. ' only' → logprob: -1.4394274950027466
    3. ' since' → logprob: -2.814427375793457
    4. ' we' → logprob: -2.814427375793457
    5. ' some' → logprob: -3.064427375793457
    6. ' letters' → logprob: -3.689427375793457
    7. ' not' → logprob: -3.814427375793457
    8. ' all' → logprob: -4.189427375793457
    9. ' for' → logprob: -4.314427375793457
    10. ' there' → logprob: -4.439427375793457

Token 301: ' be' (ID: 413)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08257172256708145
    2. ' be' → logprob: -2.8325717449188232
    3. ' continue' → logprob: -4.332571506500244
    4. ' only' → logprob: -5.707571506500244
    5. 'not' → logprob: -6.832571506500244
    6. ' have' → logprob: -7.332571506500244
    7. 'n't' → logprob: -8.082571983337402
    8. ' ' → logprob: -8.582571983337402
    9. ' ensure' → logprob: -8.582571983337402
    10. ' also' → logprob: -8.832571983337402

Token 302: ' consistent' (ID: 20434)
  Prédit: ' consistent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consistent' → logprob: -0.5121161937713623
    2. ' different' → logprob: -1.2621161937713623
    3. 'different' → logprob: -3.0121161937713623
    4. 'consistent' → logprob: -3.3871161937713623
    5. ' distinct' → logprob: -3.8871161937713623
    6. 'distinct' → logprob: -5.512116432189941
    7. ' ' → logprob: -6.262116432189941
    8. ' all' → logprob: -6.762116432189941
    9. ' inject' → logprob: -6.762116432189941
    10. ' unique' → logprob: -6.887116432189941

Token 303: ' between' (ID: 2870)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.34763434529304504
    2. ',' → logprob: -2.7226343154907227
    3. '_' → logprob: -2.8476343154907227
    4. ' with' → logprob: -2.9726343154907227
    5. '<|end|>' → logprob: -3.3476343154907227
    6. '.' → logprob: -3.8476343154907227
    7. 'for' → logprob: -3.9726343154907227
    8. ')' → logprob: -4.097634315490723
    9. '#' → logprob: -5.847634315490723
    10. '_token' → logprob: -5.972634315490723

Token 304: ' occurrences' (ID: 108073)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.1938600540161133
    2. 'all' → logprob: -1.5688600540161133
    3. ' letters' → logprob: -2.0688600540161133
    4. 'occ' → logprob: -2.6938600540161133
    5. 'different' → logprob: -2.6938600540161133
    6. ' occurrences' → logprob: -2.9438600540161133
    7. 'the' → logprob: -3.0688600540161133
    8. ' all' → logprob: -3.0688600540161133
    9. 'same' → logprob: -4.193860054016113
    10. ' different' → logprob: -4.693860054016113

Token 305: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9508509039878845
    2. '<|end|>' → logprob: -0.9508509039878845
    3. ')' → logprob: -2.4508509635925293
    4. ',' → logprob: -2.8258509635925293
    5. '{' → logprob: -3.9508509635925293
    6. '<|end|>' → logprob: -4.075850963592529
    7. '.' → logprob: -5.075850963592529
    8. '#' → logprob: -5.200850963592529
    9. '```' → logprob: -5.450850963592529
    10. '\' → logprob: -5.950850963592529

Token 306: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3870463967323303
    2. ' the' → logprob: -1.6370463371276855
    3. 'that' → logprob: -2.8870463371276855
    4. ' that' → logprob: -3.3870463371276855
    5. 'each' → logprob: -4.3870463371276855
    6. 'a' → logprob: -4.7620463371276855
    7. ' a' → logprob: -4.7620463371276855
    8. ' each' → logprob: -5.1370463371276855
    9. 'same' → logprob: -7.7620463371276855
    10. ' letters' → logprob: -8.137046813964844

Token 307: ' letter' (ID: 10263)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.018368486315011978
    2. ' same' → logprob: -4.018368721008301
    3. 'letter' → logprob: -8.5183687210083
    4. ' letter' → logprob: -12.1433687210083
    5. 'letters' → logprob: -12.2683687210083
    6. '```' → logprob: -12.7683687210083
    7. '.same' → logprob: -13.7683687210083
    8. 'token' → logprob: -14.0183687210083
    9. '_same' → logprob: -14.3933687210083
    10. 'Same' → logprob: -14.5183687210083

Token 308: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8485963344573975
    2. '{' → logprob: -2.3485963344573975
    3. ':' → logprob: -2.8485963344573975
    4. ''' → logprob: -2.9735963344573975
    5. 'def' → logprob: -3.2235963344573975
    6. ',' → logprob: -3.3485963344573975
    7. '#' → logprob: -3.3485963344573975
    8. '
' → logprob: -3.4735963344573975
    9. '\' → logprob: -3.7235963344573975
    10. '[' → logprob: -3.7235963344573975

Token 310: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1983495950698853
    2. '#' → logprob: -1.4483495950698853
    3. '{' → logprob: -1.5733495950698853
    4. '{
' → logprob: -2.8233494758605957
    5. '_
' → logprob: -3.1983494758605957
    6. 'def' → logprob: -3.5733494758605957
    7. '
' → logprob: -4.073349475860596
    8. 'import' → logprob: -4.198349475860596
    9. '#
' → logprob: -4.448349475860596
    10. ''' → logprob: -4.573349475860596

Token 311: ' And' (ID: 1958)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8679006695747375
    2. '{' → logprob: -1.4929006099700928
    3. '{
' → logprob: -1.9929006099700928
    4. 'def' → logprob: -2.4929006099700928
    5. 'letters' → logprob: -3.3679006099700928
    6. '(
' → logprob: -3.9929006099700928
    7. '=' → logprob: -4.492900848388672
    8. ' {' → logprob: -4.867900848388672
    9. '#
' → logprob: -4.867900848388672
    10. '(' → logprob: -4.867900848388672

Token 312: ' different' (ID: 2647)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.1969599723815918
    2. ' the' → logprob: -1.5719599723815918
    3. ' original' → logprob: -2.321959972381592
    4. ' different' → logprob: -2.696959972381592
    5. ' we' → logprob: -2.946959972381592
    6. ' all' → logprob: -3.196959972381592
    7. ' must' → logprob: -3.571959972381592
    8. ' none' → logprob: -3.821959972381592
    9. ' ' → logprob: -4.071959972381592
    10. ' not' → logprob: -4.321959972381592

Token 313: ' letters' (ID: 18151)
  Prédit: ' letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.17174740135669708
    2. 'letters' → logprob: -2.6717474460601807
    3. '_letters' → logprob: -3.4217474460601807
    4. ' original' → logprob: -3.6717474460601807
    5. '_chars' → logprob: -5.046747207641602
    6. '_' → logprob: -5.296747207641602
    7. ' chars' → logprob: -5.546747207641602
    8. ' ' → logprob: -5.796747207641602
    9. 'original' → logprob: -6.046747207641602
    10. '_original' → logprob: -6.171747207641602

Token 314: ' cannot' (ID: 6284)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.03627456724643707
    2. ' are' → logprob: -4.036274433135986
    3. 'must' → logprob: -5.286274433135986
    4. ' ' → logprob: -5.786274433135986
    5. '<|end|>' → logprob: -5.786274433135986
    6. ' cannot' → logprob: -6.786274433135986
    7. ' can' → logprob: -7.036274433135986
    8. ' =' → logprob: -7.161274433135986
    9. ')' → logprob: -7.286274433135986
    10. ' should' → logprob: -7.661274433135986

Token 315: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4889582395553589
    2. ' be' → logprob: -1.2389582395553589
    3. 'map' → logprob: -2.4889583587646484
    4. 'be' → logprob: -4.988958358764648
    5. ' share' → logprob: -5.113958358764648
    6. 'share' → logprob: -7.863958358764648
    7. ' ' → logprob: -7.863958358764648
    8. ' have' → logprob: -8.863958358764648
    9. 'assign' → logprob: -9.488958358764648
    10. 'm' → logprob: -9.738958358764648

Token 316: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.012959148734807968
    2. 'to' → logprob: -4.387959003448486
    3. ' ' → logprob: -8.387959480285645
    4. '_to' → logprob: -8.762959480285645
    5. '_' → logprob: -10.012959480285645
    6. '   ' → logprob: -12.262959480285645
    7. '=' → logprob: -12.387959480285645
    8. '  ' → logprob: -12.387959480285645
    9. ' =' → logprob: -13.262959480285645
    10. ' _' → logprob: -13.262959480285645

Token 317: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0495528019964695
    2. ' the' → logprob: -3.2995529174804688
    3. 'same' → logprob: -4.549552917480469
    4. ' same' → logprob: -7.049552917480469
    5. 'different' → logprob: -13.049552917480469
    6. 'a' → logprob: -13.674552917480469
    7. ' ' → logprob: -14.549552917480469
    8. '同' → logprob: -15.174552917480469
    9. '```' → logprob: -15.174552917480469
    10. '
' → logprob: -15.299552917480469

Token 318: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.47412651777267456
    2. ' same' → logprob: -0.9741265177726746
    3. ' ' → logprob: -11.224126815795898
    4. '```' → logprob: -12.224126815795898
    5. ' sam' → logprob: -12.724126815795898
    6. '
' → logprob: -12.724126815795898
    7. '_same' → logprob: -12.974126815795898
    8. ' ' → logprob: -13.099126815795898
    9. '=' → logprob: -13.224126815795898
    10. 's' → logprob: -13.474126815795898

Token 319: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.8565949201583862
    2. ' character' → logprob: -1.1065949201583862
    3. 'character' → logprob: -2.106595039367676
    4. 'original' → logprob: -3.231595039367676
    5. ' ' → logprob: -3.856595039367676
    6. 'char' → logprob: -4.231595039367676
    7. ' literal' → logprob: -4.481595039367676
    8. ' token' → logprob: -4.481595039367676
    9. 'token' → logprob: -4.606595039367676
    10. ' char' → logprob: -5.231595039367676

Token 320: ' char' (ID: 1826)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.9811414480209351
    2. '_' → logprob: -1.356141448020935
    3. ' ' → logprob: -1.981141448020935
    4. ' char' → logprob: -2.6061415672302246
    5. 'char' → logprob: -3.2311415672302246
    6. ' _' → logprob: -3.2311415672302246
    7. ' character' → logprob: -4.106141567230225
    8. '_chars' → logprob: -4.356141567230225
    9. '_character' → logprob: -4.481141567230225
    10. ' )' → logprob: -4.856141567230225

Token 321: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0717545747756958
    2. 'import' → logprob: -2.1967544555664062
    3. '#' → logprob: -2.3217544555664062
    4. '{' → logprob: -2.5717544555664062
    5. '_' → logprob: -2.8217544555664062
    6. ',' → logprob: -3.1967544555664062
    7. '<|end|>' → logprob: -3.4467544555664062
    8. ')' → logprob: -3.5717544555664062
    9. 'def' → logprob: -3.9467544555664062
    10. ':' → logprob: -3.9467544555664062

Token 322: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0710132122039795
    2. '_' → logprob: -1.3210132122039795
    3. '\' → logprob: -2.4460132122039795
    4. '_
' → logprob: -2.8210132122039795
    5. '\n' → logprob: -3.0710132122039795
    6. 'def' → logprob: -3.0710132122039795
    7. ':' → logprob: -3.5710132122039795
    8. '[' → logprob: -4.196013450622559
    9. '#' → logprob: -4.696013450622559
    10. '[
' → logprob: -4.696013450622559

Token 323: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2544209957122803
    2. '#' → logprob: -2.6294209957122803
    3. 'import' → logprob: -3.5044209957122803
    4. 'letters' → logprob: -3.8794209957122803
    5. '\' → logprob: -4.129421234130859
    6. '\n' → logprob: -4.254421234130859
    7. '
' → logprob: -4.504421234130859
    8. ':' → logprob: -4.879421234130859
    9. ':
' → logprob: -5.004421234130859
    10. '(
' → logprob: -5.254421234130859

Token 324: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3354245126247406
    2. 'letters' → logprob: -2.7104244232177734
    3. 'allowed' → logprob: -2.8354244232177734
    4. '#' → logprob: -2.8354244232177734
    5. 'valid' → logprob: -3.2104244232177734
    6. 'possible' → logprob: -4.085424423217773
    7. 'original' → logprob: -4.585424423217773
    8. 'class' → logprob: -5.085424423217773
    9. 'orig' → logprob: -5.210424423217773
    10. 'import' → logprob: -5.460424423217773

Token 325: '4' (ID: 19)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22274073958396912
    2. '#' → logprob: -3.347740650177002
    3. '=' → logprob: -3.472740650177002
    4. 'letters' → logprob: -3.472740650177002
    5. 'valid' → logprob: -4.097740650177002
    6. 'allowed' → logprob: -4.222740650177002
    7. 'possible' → logprob: -4.347740650177002
    8. '{' → logprob: -4.847740650177002
    9. 'import' → logprob: -5.222740650177002
    10. 'original' → logprob: -5.347740650177002

Token 326: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7053471207618713
    2. '#' → logprob: -0.8303471207618713
    3. 'import' → logprob: -3.0803470611572266
    4. 'def' → logprob: -4.830347061157227
    5. ',' → logprob: -5.205347061157227
    6. 'letters' → logprob: -6.205347061157227
    7. ':' → logprob: -6.580347061157227
    8. '_' → logprob: -6.955347061157227
    9. ' ' → logprob: -6.955347061157227
    10. 'for' → logprob: -6.955347061157227

Token 327: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6878034472465515
    2. 'letters' → logprob: -1.9378035068511963
    3. '#' → logprob: -2.3128035068511963
    4. ' def' → logprob: -3.1878035068511963
    5. 'possible' → logprob: -3.3128035068511963
    6. ' letters' → logprob: -3.5628035068511963
    7. 'import' → logprob: -4.062803268432617
    8. 'encrypted' → logprob: -4.062803268432617
    9. 'from' → logprob: -4.312803268432617
    10. 'all' → logprob: -4.687803268432617

Token 328: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.21561908721923828
    2. 'each' → logprob: -1.9656190872192383
    3. ' the' → logprob: -4.465619087219238
    4. ' i' → logprob: -4.715619087219238
    5. ' l' → logprob: -5.215619087219238
    6. ' c' → logprob: -5.590619087219238
    7. ' token' → logprob: -5.715619087219238
    8. 'the' → logprob: -5.965619087219238
    9. ' ch' → logprob: -6.090619087219238
    10. ' ' → logprob: -6.215619087219238

Token 329: ' complete' (ID: 5533)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.6118592619895935
    2. ' token' → logprob: -1.4868593215942383
    3. ' ' → logprob: -2.9868593215942383
    4. '_' → logprob: -3.2368593215942383
    5. ' _' → logprob: -3.7368593215942383
    6. ' possible' → logprob: -3.7368593215942383
    7. ' mapping' → logprob: -3.7368593215942383
    8. ' original' → logprob: -4.236859321594238
    9. 'token' → logprob: -4.486859321594238
    10. ' space' → logprob: -5.111859321594238

Token 330: ' mapping' (ID: 22573)
  Prédit: ' mapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mapping' → logprob: -0.5714106559753418
    2. ' letter' → logprob: -1.3214106559753418
    3. 'mapping' → logprob: -2.696410655975342
    4. ' assignment' → logprob: -2.821410655975342
    5. '_' → logprob: -5.196410655975342
    6. ' ' → logprob: -5.321410655975342
    7. 'assignment' → logprob: -5.321410655975342
    8. 'letter' → logprob: -5.446410655975342
    9. '_letter' → logprob: -5.696410655975342
    10. 'char' → logprob: -6.196410655975342

Token 331: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13793739676475525
    2. ',' → logprob: -2.887937307357788
    3. 'def' → logprob: -3.637937307357788
    4. 'from' → logprob: -3.762937307357788
    5. ' :' → logprob: -4.637937545776367
    6. ':
' → logprob: -5.887937545776367
    7. '_' → logprob: -6.137937545776367
    8. ' of' → logprob: -6.512937545776367
    9. '_:' → logprob: -6.512937545776367
    10. '):' → logprob: -7.012937545776367

Token 332: 'letter' (ID: 12793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.419144868850708
    2. '),' → logprob: -1.669144868850708
    3. '):' → logprob: -3.544144868850708
    4. ' letter' → logprob: -3.669144868850708
    5. 'letter' → logprob: -3.919144868850708
    6. ',' → logprob: -4.044144630432129
    7. ' )' → logprob: -4.419144630432129
    8. ' ),' → logprob: -4.669144630432129
    9. 'def' → logprob: -4.794144630432129
    10. ' of' → logprob: -5.169144630432129

Token 333: '->' (ID: 609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21444641053676605
    2. ',' → logprob: -2.8394463062286377
    3. 's' → logprob: -3.7144463062286377
    4. '   ' → logprob: -3.8394463062286377
    5. ' ' → logprob: -4.089446544647217
    6. '):' → logprob: -4.339446544647217
    7. ']' → logprob: -4.589446544647217
    8. '),' → logprob: -4.589446544647217
    9. '[' → logprob: -4.839446544647217
    10. '  ' → logprob: -5.964446544647217

Token 334: 'char' (ID: 3257)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.4951282739639282
    2. ' original' → logprob: -0.9951282739639282
    3. 'char' → logprob: -4.745128154754639
    4. 'orig' → logprob: -4.995128154754639
    5. ' orig' → logprob: -6.495128154754639
    6. 'character' → logprob: -7.120128154754639
    7. ' char' → logprob: -7.120128154754639
    8. 'origin' → logprob: -7.120128154754639
    9. 'possible' → logprob: -8.120128631591797
    10. ' character' → logprob: -8.370128631591797

Token 335: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22779284417629242
    2. '):' → logprob: -2.102792739868164
    3. ')' → logprob: -2.852792739868164
    4. '):
' → logprob: -4.227792739868164
    5. ' ),' → logprob: -6.227792739868164
    6. ' in' → logprob: -6.227792739868164
    7. 's' → logprob: -6.477792739868164
    8. '):

' → logprob: -6.977792739868164
    9. ',' → logprob: -7.227792739868164
    10. '   ' → logprob: -7.602792739868164

Token 336: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04293113574385643
    2. ' we' → logprob: -3.667931079864502
    3. 'we' → logprob: -4.792931079864502
    4. 'def' → logprob: -5.417931079864502
    5. ' #' → logprob: -5.917931079864502
    6. 'for' → logprob: -8.29293155670166
    7. '#
' → logprob: -8.54293155670166
    8. ' for' → logprob: -9.16793155670166
    9. ' continue' → logprob: -9.29293155670166
    10. '
' → logprob: -9.29293155670166

Token 337: ' substitute' (ID: 38389)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.24745479226112366
    2. 'try' → logprob: -1.8724547624588013
    3. ' continue' → logprob: -4.122454643249512
    4. 'attempt' → logprob: -4.622454643249512
    5. ' attempt' → logprob: -5.122454643249512
    6. 'continue' → logprob: -5.247454643249512
    7. ' check' → logprob: -5.372454643249512
    8. ' can' → logprob: -5.622454643249512
    9. ' generate' → logprob: -5.747454643249512
    10. 'generate' → logprob: -5.747454643249512

Token 338: ' in' (ID: 306)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19351600110530853
    2. 'the' → logprob: -2.0685160160064697
    3. ' encrypted' → logprob: -4.443515777587891
    4. ' into' → logprob: -5.068515777587891
    5. ' all' → logprob: -5.193515777587891
    6. ' and' → logprob: -5.318515777587891
    7. 'encrypted' → logprob: -5.818515777587891
    8. 'and' → logprob: -5.943515777587891
    9. ' to' → logprob: -6.068515777587891
    10. ' in' → logprob: -6.193515777587891

Token 339: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07988552749156952
    2. ' the' → logprob: -2.579885482788086
    3. 'encrypted' → logprob: -7.579885482788086
    4. 'input' → logprob: -8.704885482788086
    5. ' encrypted' → logprob: -8.829885482788086
    6. 's' → logprob: -9.454885482788086
    7. ' input' → logprob: -10.204885482788086
    8. 'original' → logprob: -10.704885482788086
    9. 'a' → logprob: -12.329885482788086
    10. 'all' → logprob: -12.329885482788086

Token 340: ' encrypted' (ID: 47764)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5489044785499573
    2. 'encrypted' → logprob: -0.9239044785499573
    3. 'string' → logprob: -4.1739044189453125
    4. ' encrypted' → logprob: -5.7989044189453125
    5. 'original' → logprob: -6.1739044189453125
    6. ' input' → logprob: -6.1739044189453125
    7. 'code' → logprob: -7.0489044189453125
    8. 'encoded' → logprob: -7.2989044189453125
    9. 's' → logprob: -7.9239044189453125
    10. 'expression' → logprob: -8.298904418945312

Token 341: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.7268580794334412
    2. 'string' → logprob: -0.9768580794334412
    3. '_string' → logprob: -2.101858139038086
    4. ' input' → logprob: -4.726858139038086
    5. ' equation' → logprob: -5.726858139038086
    6. 'input' → logprob: -6.226858139038086
    7. '_input' → logprob: -6.726858139038086
    8. ' code' → logprob: -7.351858139038086
    9. '_str' → logprob: -7.726858139038086
    10. '_code' → logprob: -7.851858139038086

Token 342: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8037064671516418
    2. ',' → logprob: -1.428706407546997
    3. 'and' → logprob: -1.428706407546997
    4. '#' → logprob: -2.928706407546997
    5. '.' → logprob: -5.178706645965576
    6. ' to' → logprob: -5.553706645965576
    7. 'for' → logprob: -6.053706645965576
    8. 'to' → logprob: -6.678706645965576
    9. ')' → logprob: -6.803706645965576
    10. '.replace' → logprob: -6.928706645965576

Token 343: '#' (ID: 2)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6751695275306702
    2. 'and' → logprob: -1.6751694679260254
    3. '#' → logprob: -1.8001694679260254
    4. ' then' → logprob: -2.8001694679260254
    5. ''' → logprob: -3.1751694679260254
    6. 'then' → logprob: -4.675169467926025
    7. ' continue' → logprob: -4.925169467926025
    8. ''s' → logprob: -5.550169467926025
    9. ' tokenize' → logprob: -5.675169467926025
    10. 'continue' → logprob: -6.050169467926025

Token 344: '   ' (ID: 271)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7100380063056946
    2. ' and' → logprob: -1.5850379467010498
    3. '#' → logprob: -1.7100379467010498
    4. ' then' → logprob: -3.08503794670105
    5. 'then' → logprob: -3.08503794670105
    6. ' tokenize' → logprob: -4.585038185119629
    7. ' continue' → logprob: -5.085038185119629
    8. 'continue' → logprob: -5.460038185119629
    9. 'replace' → logprob: -5.960038185119629
    10. 'decode' → logprob: -6.835038185119629

Token 345: ' obtaining' (ID: 30335)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22331008315086365
    2. 'and' → logprob: -2.4733099937438965
    3. ' then' → logprob: -2.8483099937438965
    4. ' and' → logprob: -3.9733099937438965
    5. 'then' → logprob: -4.0983099937438965
    6. ' parse' → logprob: -4.4733099937438965
    7. 'parse' → logprob: -5.2233099937438965
    8. ' tokenize' → logprob: -6.4733099937438965
    9. ' #' → logprob: -6.8483099937438965
    10. 'evaluate' → logprob: -7.5983099937438965

Token 346: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.055945951491594315
    2. ' a' → logprob: -3.305945873260498
    3. 'the' → logprob: -4.555945873260498
    4. ' an' → logprob: -5.055945873260498
    5. 'a' → logprob: -7.180945873260498
    6. 'an' → logprob: -10.180946350097656
    7. ' original' → logprob: -10.430946350097656
    8. ' one' → logprob: -11.305946350097656
    9. ' code' → logprob: -11.680946350097656
    10. 'original' → logprob: -11.805946350097656

Token 347: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.6394776701927185
    2. ' candidate' → logprob: -1.2644777297973633
    3. 'possible' → logprob: -2.6394777297973633
    4. 'string' → logprob: -2.7644777297973633
    5. 'complete' → logprob: -4.889477729797363
    6. 'valid' → logprob: -4.889477729797363
    7. 'full' → logprob: -5.014477729797363
    8. 'fully' → logprob: -5.139477729797363
    9. 'list' → logprob: -5.139477729797363
    10. ' list' → logprob: -5.139477729797363

Token 348: ' original' (ID: 4756)
  Prédit: ' equation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equation' → logprob: -0.21651645004749298
    2. 'equ' → logprob: -2.3415164947509766
    3. ' code' → logprob: -3.9665164947509766
    4. ' original' → logprob: -3.9665164947509766
    5. 'original' → logprob: -3.9665164947509766
    6. '_equ' → logprob: -4.716516494750977
    7. ' expression' → logprob: -5.341516494750977
    8. '_original' → logprob: -5.466516494750977
    9. '<|end|>' → logprob: -5.466516494750977
    10. '_code' → logprob: -5.591516494750977

Token 349: ' equation' (ID: 42006)
  Prédit: ' equation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equation' → logprob: -0.4099493622779846
    2. ' string' → logprob: -1.6599493026733398
    3. 'string' → logprob: -2.90994930267334
    4. ' code' → logprob: -3.15994930267334
    5. '_string' → logprob: -4.40994930267334
    6. '_' → logprob: -4.65994930267334
    7. 'equ' → logprob: -5.28494930267334
    8. '_char' → logprob: -5.40994930267334
    9. '_code' → logprob: -5.40994930267334
    10. ' ' → logprob: -5.90994930267334

Token 350: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1393097639083862
    2. '[
' → logprob: -1.6393097639083862
    3. '#' → logprob: -2.389309883117676
    4. ',' → logprob: -2.764309883117676
    5. '_' → logprob: -3.014309883117676
    6. 's' → logprob: -3.014309883117676
    7. '.' → logprob: -3.139309883117676
    8. ' =' → logprob: -3.264309883117676
    9. '=' → logprob: -3.764309883117676
    10. ']' → logprob: -3.889309883117676

Token 351: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34683457016944885
    2. '[' → logprob: -2.471834659576416
    3. 'def' → logprob: -3.096834659576416
    4. ':' → logprob: -3.346834659576416
    5. 'import' → logprob: -3.846834659576416
    6. '[
' → logprob: -3.846834659576416
    7. '\' → logprob: -3.971834659576416
    8. '#
' → logprob: -4.596834659576416
    9. '
' → logprob: -4.971834659576416
    10. ',' → logprob: -4.971834659576416

Token 352: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2493208795785904
    2. 'def' → logprob: -2.7493209838867188
    3. '#
' → logprob: -3.1243209838867188
    4. '[
' → logprob: -3.4993209838867188
    5. '[' → logprob: -4.249320983886719
    6. 'for' → logprob: -4.374320983886719
    7. 'import' → logprob: -4.749320983886719
    8. '(
' → logprob: -4.874320983886719
    9. '=
' → logprob: -5.124320983886719
    10. ':
' → logprob: -5.124320983886719

Token 353: ' This' (ID: 1328)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03416011109948158
    2. 'def' → logprob: -3.6591601371765137
    3. 'for' → logprob: -5.784160137176514
    4. 'We' → logprob: -6.034160137176514
    5. 'Then' → logprob: -7.409160137176514
    6. 'import' → logprob: -7.784160137176514
    7. 'if' → logprob: -8.409159660339355
    8. '#
' → logprob: -8.784159660339355
    9. 'from' → logprob: -9.284159660339355
    10. 'Next' → logprob: -9.284159660339355

Token 354: ' equation' (ID: 42006)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9396806359291077
    2. ' code' → logprob: -1.064680576324463
    3. ' can' → logprob: -2.189680576324463
    4. ' candidate' → logprob: -3.064680576324463
    5. ' string' → logprob: -3.939680576324463
    6. ' must' → logprob: -4.064680576324463
    7. ' completes' → logprob: -4.814680576324463
    8. ' continues' → logprob: -5.064680576324463
    9. '_' → logprob: -5.314680576324463
    10. ' has' → logprob: -5.314680576324463

Token 355: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.9770978689193726
    2. ' can' → logprob: -1.1020978689193726
    3. ' is' → logprob: -1.6020978689193726
    4. '#' → logprob: -3.477097988128662
    5. 's' → logprob: -4.102097988128662
    6. 'must' → logprob: -4.727097988128662
    7. ' may' → logprob: -4.852097988128662
    8. 'can' → logprob: -5.727097988128662
    9. ' could' → logprob: -5.727097988128662
    10. ' continues' → logprob: -5.977097988128662

Token 356: ':
' (ID: 734)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.062473662197589874
    2. 'be' → logprob: -2.937473773956299
    3. 'evaluate' → logprob: -6.437473773956299
    4. 'parse' → logprob: -6.687473773956299
    5. ' evaluate' → logprob: -6.687473773956299
    6. ' parse' → logprob: -7.187473773956299
    7. 'validate' → logprob: -7.687473773956299
    8. '<|end|>' → logprob: -7.812473773956299
    9. ' have' → logprob: -8.06247329711914
    10. '```' → logprob: -8.56247329711914

Token 357: '#' (ID: 2)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05100466310977936
    2. ' not' → logprob: -3.926004648208618
    3. ' continue' → logprob: -4.676004886627197
    4. '#' → logprob: -5.301004886627197
    5. '```' → logprob: -5.301004886627197
    6. ')' → logprob: -5.551004886627197
    7. ' have' → logprob: -6.551004886627197
    8. ''' → logprob: -6.926004886627197
    9. '<|end|>' → logprob: -7.051004886627197
    10. '[' → logprob: -7.051004886627197

Token 358: '      ' (ID: 1699)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.005390638019889593
    2. ' have' → logprob: -6.255390644073486
    3. ' not' → logprob: -6.880390644073486
    4. '#' → logprob: -6.880390644073486
    5. 'be' → logprob: -8.005390167236328
    6. ')' → logprob: -8.630390167236328
    7. ' continue' → logprob: -8.630390167236328
    8. ' consist' → logprob: -9.130390167236328
    9. '[' → logprob: -9.255390167236328
    10. ' satisfy' → logprob: -9.630390167236328

Token 359: ' -' (ID: 533)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.24871769547462463
    2. ' be' → logprob: -1.6237176656723022
    3. 'parse' → logprob: -5.123717784881592
    4. 'have' → logprob: -5.123717784881592
    5. ' have' → logprob: -6.373717784881592
    6. '#' → logprob: -6.373717784881592
    7. 'contain' → logprob: -6.373717784881592
    8. ' consist' → logprob: -6.498717784881592
    9. ' parse' → logprob: -6.998717784881592
    10. 'evaluate' → logprob: -7.498717784881592

Token 360: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.067474126815796
    2. 'be' → logprob: -1.567474126815796
    3. 'parse' → logprob: -2.067474126815796
    4. 'have' → logprob: -2.192474126815796
    5. ' have' → logprob: -2.567474126815796
    6. ' contain' → logprob: -3.192474126815796
    7. 'contain' → logprob: -3.192474126815796
    8. ' parse' → logprob: -3.442474126815796
    9. 'evaluate' → logprob: -5.192474365234375
    10. ' evaluate' → logprob: -5.942474365234375

Token 361: ' EXACT' (ID: 195286)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.04872816428542137
    2. 'exact' → logprob: -3.4237282276153564
    3. ' a' → logprob: -5.548727989196777
    4. ' balanced' → logprob: -6.173727989196777
    5. 'a' → logprob: -6.298727989196777
    6. ' an' → logprob: -6.548727989196777
    7. ' valid' → logprob: -6.923727989196777
    8. ' one' → logprob: -6.923727989196777
    9. 'valid' → logprob: -7.048727989196777
    10. ' only' → logprob: -7.298727989196777

Token 362: 'LY' (ID: 14305)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.00015085970517247915
    2. 'LY' → logprob: -8.875150680541992
    3. 'lyt' → logprob: -12.500150680541992
    4. 'l' → logprob: -12.750150680541992
    5. 'lys' → logprob: -13.625150680541992
    6. 'match' → logprob: -13.750150680541992
    7. '=' → logprob: -14.125150680541992
    8. ' ' → logprob: -14.375150680541992
    9. 'L' → logprob: -15.500150680541992
    10. 'lya' → logprob: -15.625150680541992

Token 363: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.578512966632843
    2. 'one' → logprob: -0.828512966632843
    3. '1' → logprob: -6.078513145446777
    4. ' ' → logprob: -8.953513145446777
    5. ' exactly' → logprob: -9.703513145446777
    6. '=' → logprob: -10.328513145446777
    7. '_one' → logprob: -11.078513145446777
    8. 'ONE' → logprob: -11.703513145446777
    9. 'One' → logprob: -12.078513145446777
    10. '  ' → logprob: -12.203513145446777

Token 364: ' '='' (ID: 98780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03673683851957321
    2. ' =' → logprob: -4.036736965179443
    3. ' '='' → logprob: -4.411736965179443
    4. ''' → logprob: -5.411736965179443
    5. ' equal' → logprob: -7.286736965179443
    6. ' equals' → logprob: -8.161736488342285
    7. 'equal' → logprob: -8.161736488342285
    8. ''=' → logprob: -8.536736488342285
    9. 'equals' → logprob: -9.536736488342285
    10. '"' → logprob: -9.536736488342285

Token 365: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26189756393432617
    2. '<|end|>' → logprob: -1.8868975639343262
    3. ')' → logprob: -3.136897563934326
    4. ',' → logprob: -3.886897563934326
    5. ' and' → logprob: -5.011897563934326
    6. '#' → logprob: -6.386897563934326
    7. ',
' → logprob: -6.636897563934326
    8. '\' → logprob: -6.886897563934326
    9. '\n' → logprob: -7.386897563934326
    10. '<|end|>' → logprob: -7.511897563934326

Token 366: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6245805025100708
    2. ' and' → logprob: -1.6245805025100708
    3. ',' → logprob: -2.2495803833007812
    4. ',
' → logprob: -3.2495803833007812
    5. '\n' → logprob: -3.3745803833007812
    6. '\' → logprob: -3.8745803833007812
    7. 'and' → logprob: -4.124580383300781
    8. '#' → logprob: -4.374580383300781
    9. '.' → logprob: -4.374580383300781
    10. ' in' → logprob: -5.124580383300781

Token 367: '      ' (ID: 1699)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8227537274360657
    2. ')' → logprob: -2.197753667831421
    3. ',' → logprob: -2.572753667831421
    4. '_
' → logprob: -2.697753667831421
    5. '#' → logprob: -2.947753667831421
    6. '=' → logprob: -3.447753667831421
    7. '```' → logprob: -3.697753667831421
    8. '\' → logprob: -3.947753667831421
    9. '
' → logprob: -3.947753667831421
    10. '[
' → logprob: -3.947753667831421

Token 368: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0809064507484436
    2. ' be' → logprob: -3.705906391143799
    3. ' not' → logprob: -4.330906391143799
    4. '\n' → logprob: -4.330906391143799
    5. 'not' → logprob: -4.830906391143799
    6. 'and' → logprob: -5.580906391143799
    7. ' and' → logprob: -5.705906391143799
    8. ' #' → logprob: -6.330906391143799
    9. 'have' → logprob: -6.455906391143799
    10. 'count' → logprob: -6.580906391143799

Token 369: ' conform' (ID: 19627)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6340034008026123
    2. ' be' → logprob: -2.1340034008026123
    3. 'have' → logprob: -2.1340034008026123
    4. ' not' → logprob: -2.5090034008026123
    5. 'not' → logprob: -2.6340034008026123
    6. ' have' → logprob: -4.134003639221191
    7. 'split' → logprob: -4.384003639221191
    8. '#' → logprob: -4.509003639221191
    9. 'contain' → logprob: -4.509003639221191
    10. 'pass' → logprob: -5.259003639221191

Token 370: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.025011975318193436
    2. '_to' → logprob: -4.400012016296387
    3. 'to' → logprob: -4.400012016296387
    4. 's' → logprob: -9.900012016296387
    5. ' ' → logprob: -9.900012016296387
    6. '   ' → logprob: -11.400012016296387
    7. 'To' → logprob: -11.525012016296387
    8. '```' → logprob: -12.275012016296387
    9. ' the' → logprob: -12.525012016296387
    10. '_' → logprob: -12.900012016296387

Token 371: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.16508647799491882
    2. ' the' → logprob: -2.040086507797241
    3. 'grammar' → logprob: -4.040086269378662
    4. 'a' → logprob: -6.165086269378662
    5. ' grammar' → logprob: -6.540086269378662
    6. ' a' → logprob: -7.540086269378662
    7. 'syntax' → logprob: -9.04008674621582
    8. 'valid' → logprob: -9.29008674621582
    9. 'r' → logprob: -9.91508674621582
    10. '#' → logprob: -10.16508674621582

Token 372: ' grammar' (ID: 41735)
  Prédit: 'grammar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grammar' → logprob: -0.09413231164216995
    2. ' grammar' → logprob: -2.594132423400879
    3. ' given' → logprob: -4.844132423400879
    4. 'given' → logprob: -5.844132423400879
    5. 'syntax' → logprob: -6.594132423400879
    6. 'problem' → logprob: -7.594132423400879
    7. 'original' → logprob: -8.094132423400879
    8. ' problem' → logprob: -8.094132423400879
    9. 'expression' → logprob: -8.469132423400879
    10. 'rules' → logprob: -8.469132423400879

Token 373: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2712166905403137
    2. 'def' → logprob: -2.396216630935669
    3. ')' → logprob: -3.271216630935669
    4. '[' → logprob: -3.896216630935669
    5. 'import' → logprob: -4.146216869354248
    6. ':
' → logprob: -4.521216869354248
    7. ',' → logprob: -4.771216869354248
    8. '```' → logprob: -5.021216869354248
    9. 's' → logprob: -5.146216869354248
    10. '
' → logprob: -5.146216869354248

Token 374: 'parse' (ID: 4841)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -1.662252426147461
    2. 'expression' → logprob: -1.662252426147461
    3. ')' → logprob: -1.787252426147461
    4. ' expression' → logprob: -2.912252426147461
    5. 'valid' → logprob: -3.037252426147461
    6. ' expr' → logprob: -3.287252426147461
    7. '``' → logprob: -3.412252426147461
    8. 'import' → logprob: -3.912252426147461
    9. 'def' → logprob: -3.912252426147461
    10. ' valid' → logprob: -4.037252426147461

Token 375: 'able' (ID: 562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024989062920212746
    2. ' )' → logprob: -4.774989128112793
    3. 'd' → logprob: -4.899989128112793
    4. 'ed' → logprob: -6.649989128112793
    5. 'e' → logprob: -7.149989128112793
    6. 'able' → logprob: -7.149989128112793
    7. '_expr' → logprob: -7.274989128112793
    8. '
' → logprob: -7.524989128112793
    9. '())' → logprob: -7.649989128112793
    10. 'r' → logprob: -7.774989128112793

Token 376: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004407801665365696
    2. ')
' → logprob: -6.37940788269043
    3. 'and' → logprob: -7.25440788269043
    4. ' )' → logprob: -7.50440788269043
    5. ' and' → logprob: -7.87940788269043
    6. '#' → logprob: -8.62940788269043
    7. '),' → logprob: -8.87940788269043
    8. 'expression' → logprob: -9.12940788269043
    9. ' code' → logprob: -9.37940788269043
    10. ',' → logprob: -9.37940788269043

Token 377: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007719844579696655
    2. '#
' → logprob: -5.632719993591309
    3. 'import' → logprob: -7.632719993591309
    4. ')' → logprob: -7.632719993591309
    5. 'def' → logprob: -7.882719993591309
    6. ':' → logprob: -8.007719993591309
    7. ' #' → logprob: -8.132719993591309
    8. '```' → logprob: -8.257719993591309
    9. ' and' → logprob: -8.507719993591309
    10. ',' → logprob: -8.507719993591309

Token 378: '      ' (ID: 1699)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7241526246070862
    2. '#' → logprob: -0.9741526246070862
    3. ')' → logprob: -2.7241525650024414
    4. 'import' → logprob: -3.9741525650024414
    5. 'for' → logprob: -5.224152565002441
    6. '_' → logprob: -5.724152565002441
    7. '```' → logprob: -5.724152565002441
    8. 'token' → logprob: -6.099152565002441
    9. '#
' → logprob: -6.099152565002441
    10. '[' → logprob: -6.099152565002441

Token 379: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00024763107649050653
    2. '      ' → logprob: -9.000247955322266
    3. ' #' → logprob: -9.500247955322266
    4. '       ' → logprob: -11.250247955322266
    5. 'and' → logprob: -11.375247955322266
    6. '   ' → logprob: -11.500247955322266
    7. ' ' → logprob: -12.250247955322266
    8. '-' (adapté à ' -') → logprob: -12.875247955322266
    9. '  ' → logprob: -13.500247955322266
    10. ' and' → logprob: -13.750247955322266

Token 380: ' evaluating' (ID: 55656)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6305146813392639
    2. 'evaluate' → logprob: -1.3805146217346191
    3. 'be' → logprob: -2.630514621734619
    4. '      ' → logprob: -2.630514621734619
    5. ' be' → logprob: -3.630514621734619
    6. 'have' → logprob: -4.380514621734619
    7. ' evaluate' → logprob: -4.880514621734619
    8. '       ' → logprob: -5.380514621734619
    9. ' #' → logprob: -5.630514621734619
    10. ' ' → logprob: -5.880514621734619

Token 381: ' left' (ID: 3561)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9713496565818787
    2. ' correctly' → logprob: -1.3463497161865234
    3. 'to' → logprob: -1.4713497161865234
    4. ')' → logprob: -2.7213497161865234
    5. 'correct' → logprob: -3.7213497161865234
    6. '()' → logprob: -4.846349716186523
    7. '==' → logprob: -5.471349716186523
    8. '()==' → logprob: -5.471349716186523
    9. 'equal' → logprob: -6.096349716186523
    10. 'expression' → logprob: -6.096349716186523

Token 382: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.0722613334655762
    2. '=' → logprob: -1.4472613334655762
    3. 'over' → logprob: -2.947261333465576
    4. ' =' → logprob: -3.072261333465576
    5. ')' → logprob: -3.197261333465576
    6. ' and' → logprob: -3.447261333465576
    7. 'side' → logprob: -3.447261333465576
    8. '_side' → logprob: -3.697261333465576
    9. '_hand' → logprob: -4.072261333465576
    10. ',right' → logprob: -4.072261333465576

Token 383: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.34936127066612244
    2. ' right' → logprob: -1.2243613004684448
    3. '=' → logprob: -7.224361419677734
    4. '==' → logprob: -9.724361419677734
    5. ',right' → logprob: -10.599361419677734
    6. 'ight' → logprob: -10.724361419677734
    7. 'equal' → logprob: -11.224361419677734
    8. '	right' → logprob: -11.474361419677734
    9. '_right' → logprob: -11.974361419677734
    10. 'and' → logprob: -11.974361419677734

Token 384: ' expressions' (ID: 43578)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.643438458442688
    2. 'side' → logprob: -1.893438458442688
    3. '_side' → logprob: -2.7684383392333984
    4. ')' → logprob: -3.6434383392333984
    5. '=' → logprob: -3.6434383392333984
    6. '_expr' → logprob: -4.018438339233398
    7. '_hand' → logprob: -4.018438339233398
    8. ' =' → logprob: -4.143438339233398
    9. ' part' → logprob: -4.143438339233398
    10. '_' → logprob: -4.268438339233398

Token 385: ' must' (ID: 2804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9955765604972839
    2. ':' → logprob: -1.7455766201019287
    3. '=' → logprob: -2.1205766201019287
    4. ',' → logprob: -2.2455766201019287
    5. '#' → logprob: -2.8705766201019287
    6. ' must' → logprob: -3.2455766201019287
    7. '.' → logprob: -3.6205766201019287
    8. '<|end|>' → logprob: -3.6205766201019287
    9. ' is' → logprob: -4.62057638168335
    10. 'must' → logprob: -4.74557638168335

Token 386: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.17868484556674957
    2. 'be' → logprob: -1.9286848306655884
    3. 'equal' → logprob: -4.553684711456299
    4. ' match' → logprob: -5.928684711456299
    5. 'match' → logprob: -6.303684711456299
    6. ' equal' → logprob: -6.928684711456299
    7. '==' → logprob: -7.553684711456299
    8. 'evaluate' → logprob: -7.553684711456299
    9. ' ==' → logprob: -7.928684711456299
    10. ' evaluate' → logprob: -8.428685188293457

Token 387: ' equal' (ID: 12629)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.11443168669939041
    2. ' equal' → logprob: -2.239431619644165
    3. 'the' → logprob: -6.989431858062744
    4. '==' → logprob: -7.614431858062744
    5. ' the' → logprob: -9.489431381225586
    6. '=' → logprob: -10.114431381225586
    7. '<|end|>' → logprob: -10.864431381225586
    8. '_equal' → logprob: -11.114431381225586
    9. 'same' → logprob: -11.489431381225586
    10. ' ==' → logprob: -11.739431381225586

Token 388: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08177705854177475
    2. '#' → logprob: -3.9567770957946777
    3. '_' → logprob: -4.331777095794678
    4. ':' → logprob: -5.081777095794678
    5. '\' → logprob: -5.206777095794678
    6. 'import' → logprob: -5.331777095794678
    7. '(
' → logprob: -5.456777095794678
    8. '
' → logprob: -5.831777095794678
    9. ')' → logprob: -5.956777095794678
    10. '(' → logprob: -5.956777095794678

Token 389: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07765516638755798
    2. ':' → logprob: -3.952655076980591
    3. '(
' → logprob: -4.07765531539917
    4. '(' → logprob: -4.82765531539917
    5. '\' → logprob: -5.57765531539917
    6. '#' → logprob: -5.57765531539917
    7. 'import' → logprob: -5.70265531539917
    8. ':
' → logprob: -5.70265531539917
    9. '
' → logprob: -5.95265531539917
    10. '\n' → logprob: -5.95265531539917

Token 390: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020653652027249336
    2. 'import' → logprob: -5.52065372467041
    3. '\' → logprob: -6.02065372467041
    4. '(' → logprob: -6.14565372467041
    5. '(
' → logprob: -6.27065372467041
    6. 'letters' → logprob: -6.27065372467041
    7. '#' → logprob: -6.52065372467041
    8. '\n' → logprob: -6.64565372467041
    9. '
' → logprob: -6.77065372467041
    10. ':' → logprob: -7.14565372467041

Token 391: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06926882266998291
    2. 'class' → logprob: -3.1942687034606934
    3. '#' → logprob: -4.944268703460693
    4. 'allowed' → logprob: -4.944268703460693
    5. 'import' → logprob: -5.819268703460693
    6. 'digits' → logprob: -6.569268703460693
    7. 'tokens' → logprob: -6.694268703460693
    8. 'valid' → logprob: -6.819268703460693
    9. 'letters' → logprob: -7.194268703460693
    10. 'token' → logprob: -7.444268703460693

Token 392: '5' (ID: 20)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10762671381235123
    2. 'class' → logprob: -3.2326266765594482
    3. 'allowed' → logprob: -3.7326266765594482
    4. 'tokens' → logprob: -4.357626914978027
    5. 'pos' → logprob: -4.857626914978027
    6. '#' → logprob: -4.857626914978027
    7. 'possible' → logprob: -6.232626914978027
    8. 'token' → logprob: -7.107626914978027
    9. 'letters' → logprob: -7.107626914978027
    10. 'import' → logprob: -7.232626914978027

Token 393: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059295814484357834
    2. '.' → logprob: -3.684295892715454
    3. '#' → logprob: -4.309295654296875
    4. 'import' → logprob: -4.434295654296875
    5. ':' → logprob: -5.559295654296875
    6. ' def' → logprob: -6.684295654296875
    7. 'for' → logprob: -7.059295654296875
    8. '=' → logprob: -8.434295654296875
    9. 'from' → logprob: -8.934295654296875
    10. ' =' → logprob: -9.309295654296875

Token 394: ' Count' (ID: 6789)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.8690900802612305
    2. 'def' → logprob: -0.9940900802612305
    3. 'We' → logprob: -2.4940900802612305
    4. '#' → logprob: -3.1190900802612305
    5. 'from' → logprob: -3.4940900802612305
    6. 'c' → logprob: -4.6190900802612305
    7. 'import' → logprob: -5.1190900802612305
    8. 'possible' → logprob: -5.4940900802612305
    9. 'all' → logprob: -5.8690900802612305
    10. 'encrypted' → logprob: -5.9940900802612305

Token 395: ' how' (ID: 1495)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2464240938425064
    2. '(' → logprob: -3.1214241981506348
    3. 'tokens' → logprob: -3.1214241981506348
    4. ':' → logprob: -3.9964241981506348
    5. '_tokens' → logprob: -4.121424198150635
    6. 'possible' → logprob: -4.121424198150635
    7. 'import' → logprob: -4.621424198150635
    8. '_possible' → logprob: -4.621424198150635
    9. 'valid' → logprob: -4.746424198150635
    10. '```' → logprob: -5.121424198150635

Token 396: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.6119908690452576
    2. 'many' → logprob: -0.8619908690452576
    3. '#' → logprob: -4.861990928649902
    4. ' the' → logprob: -5.736990928649902
    5. 'most' → logprob: -5.986990928649902
    6. 'possible' → logprob: -5.986990928649902
    7. '+' → logprob: -6.486990928649902
    8. '+=' → logprob: -6.486990928649902
    9. ' possible' → logprob: -6.611990928649902
    10. 'all' → logprob: -6.736990928649902

Token 397: ' mappings' (ID: 96933)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4390791058540344
    2. 'possible' → logprob: -1.9390790462493896
    3. ' tokens' → logprob: -2.9390790462493896
    4. '
' → logprob: -2.9390790462493896
    5. 'token' → logprob: -3.8140790462493896
    6. '\n' → logprob: -3.9390790462493896
    7. ' possible' → logprob: -4.189079284667969
    8. 'def' → logprob: -5.439079284667969
    9. '_tokens' → logprob: -5.439079284667969
    10. ' next' → logprob: -5.564079284667969

Token 398: ' produce' (ID: 10635)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9259899854660034
    2. '_' → logprob: -2.175990104675293
    3. 'def' → logprob: -2.300990104675293
    4. '(' → logprob: -2.300990104675293
    5. '[' → logprob: -2.925990104675293
    6. '<|end|>' → logprob: -3.425990104675293
    7. '_tokens' → logprob: -3.925990104675293
    8. '.' → logprob: -3.925990104675293
    9. 'import' → logprob: -4.050990104675293
    10. ')' → logprob: -4.050990104675293

Token 399: ' such' (ID: 2238)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8441401124000549
    2. ' valid' → logprob: -0.8441401124000549
    3. ' a' → logprob: -2.96914005279541
    4. 'a' → logprob: -3.21914005279541
    5. ' the' → logprob: -4.34414005279541
    6. 'the' → logprob: -4.46914005279541
    7. ' correct' → logprob: -4.96914005279541
    8. 'ans' → logprob: -5.21914005279541
    9. 'correct' → logprob: -5.59414005279541
    10. 'original' → logprob: -6.59414005279541

Token 400: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.20641548931598663
    2. ' valid' → logprob: -2.3314154148101807
    3. 'tokens' → logprob: -3.9564154148101807
    4. '=' → logprob: -4.45641565322876
    5. 'm' → logprob: -4.70641565322876
    6. ')' → logprob: -4.70641565322876
    7. 'original' → logprob: -4.83141565322876
    8. '\n' → logprob: -5.58141565322876
    9. 'results' → logprob: -5.95641565322876
    10. '_valid' → logprob: -5.95641565322876

Token 401: ' original' (ID: 4756)
  Prédit: 'equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equ' → logprob: -1.203630805015564
    2. 'tokens' → logprob: -1.453630805015564
    3. ' equations' → logprob: -1.703630805015564
    4. ' tokens' → logprob: -2.5786309242248535
    5. 'm' → logprob: -3.2036309242248535
    6. '_token' → logprob: -3.5786309242248535
    7. '_tokens' → logprob: -3.7036309242248535
    8. '\n' → logprob: -4.3286309242248535
    9. ')' → logprob: -4.3286309242248535
    10. 'token' → logprob: -4.7036309242248535

Token 402: ' equations' (ID: 61524)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.1608834266662598
    2. '_token' → logprob: -1.2858834266662598
    3. '_chars' → logprob: -1.7858834266662598
    4. ')' → logprob: -2.5358834266662598
    5. '_' → logprob: -3.0358834266662598
    6. '_tokens' → logprob: -3.5358834266662598
    7. 'char' → logprob: -3.7858834266662598
    8. 'token' → logprob: -4.78588342666626
    9. '
' → logprob: -4.78588342666626
    10. 'chars' → logprob: -4.78588342666626

Token 403: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5597584843635559
    2. ':' → logprob: -1.4347584247589111
    3. ':
' → logprob: -3.184758424758911
    4. '(
' → logprob: -3.559758424758911
    5. 'import' → logprob: -3.684758424758911
    6. '\' → logprob: -3.934758424758911
    7. '(' → logprob: -4.05975866317749
    8. '\n' → logprob: -4.30975866317749
    9. '```' → logprob: -4.68475866317749
    10. '#' → logprob: -5.05975866317749

Token 404: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3459407389163971
    2. ':' → logprob: -1.3459407091140747
    3. '(' → logprob: -4.720940589904785
    4. 'import' → logprob: -4.970940589904785
    5. '#' → logprob: -5.970940589904785
    6. 'letters' → logprob: -6.220940589904785
    7. ':
' → logprob: -6.345940589904785
    8. ':def' → logprob: -6.970940589904785
    9. '```' → logprob: -7.220940589904785
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.470940589904785

Token 405: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12366528064012527
    2. 'allowed' → logprob: -2.8736653327941895
    3. 'valid' → logprob: -3.9986653327941895
    4. 'letters' → logprob: -4.3736653327941895
    5. 'possible' → logprob: -4.6236653327941895
    6. 'class' → logprob: -4.8736653327941895
    7. '#' → logprob: -5.4986653327941895
    8. 'import' → logprob: -6.1236653327941895
    9. 'VALID' → logprob: -6.8736653327941895
    10. 'AL' → logprob: -6.9986653327941895

Token 406: ' Optimization' (ID: 78012)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.25838151574134827
    2. 'def' → logprob: -2.1333816051483154
    3. 'possible' → logprob: -3.1333816051483154
    4. 'valid' → logprob: -3.8833816051483154
    5. '#' → logprob: -4.133381366729736
    6. 'letters' → logprob: -4.508381366729736
    7. 'class' → logprob: -5.633381366729736
    8. 'AL' → logprob: -5.758381366729736
    9. 'encrypted' → logprob: -5.758381366729736
    10. 'VALID' → logprob: -6.508381366729736

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09323395043611526
    2. '#' → logprob: -3.468234062194824
    3. 'allowed' → logprob: -4.218234062194824
    4. 'chars' → logprob: -4.343234062194824
    5. ':
' → logprob: -4.843234062194824
    6. 'possible' → logprob: -5.593234062194824
    7. '_chars' → logprob: -5.593234062194824
    8. '_possible' → logprob: -6.093234062194824
    9. 'char' → logprob: -6.343234062194824
    10. 'characters' → logprob: -6.593234062194824

Token 408: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0005334943416528404
    2. 'possible' → logprob: -8.125533103942871
    3. 'allowed' → logprob: -8.750533103942871
    4. 'from' → logprob: -11.250533103942871
    5. 'candidate' → logprob: -11.250533103942871
    6. 'Possible' → logprob: -12.375533103942871
    7. '#
' → logprob: -12.375533103942871
    8. 'for' → logprob: -12.500533103942871
    9. 'valid' → logprob: -12.625533103942871
    10. 'used' → logprob: -12.625533103942871

Token 409: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09091207385063171
    2. 'allowed' → logprob: -3.340912103652954
    3. 'possible' → logprob: -3.590912103652954
    4. 'from' → logprob: -4.215911865234375
    5. 'valid' → logprob: -6.090911865234375
    6. 'available' → logprob: -6.465911865234375
    7. 'candidate' → logprob: -6.715911865234375
    8. 'import' → logprob: -7.590911865234375
    9. ' #' → logprob: -7.965911865234375
    10. 'c' → logprob: -8.090911865234375

Token 410: ' The' (ID: 623)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.9972848892211914
    2. 'possible' → logprob: -1.4972848892211914
    3. 'from' → logprob: -1.6222848892211914
    4. '#' → logprob: -3.4972848892211914
    5. 'letters' → logprob: -3.4972848892211914
    6. 'available' → logprob: -3.7472848892211914
    7. 'c' → logprob: -3.8722848892211914
    8. 'all' → logprob: -3.9972848892211914
    9. 'chars' → logprob: -3.9972848892211914
    10. 'import' → logprob: -4.122284889221191

Token 411: ' number' (ID: 2086)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.6280775666236877
    2. 'possible' → logprob: -1.753077507019043
    3. 'letters' → logprob: -2.878077507019043
    4. ' next' → logprob: -3.503077507019043
    5. ' allowed' → logprob: -3.503077507019043
    6. 'encrypted' → logprob: -3.753077507019043
    7. 'valid' → logprob: -4.003077507019043
    8. 'code' → logprob: -4.003077507019043
    9. 'next' → logprob: -4.128077507019043
    10. 'set' → logprob: -4.628077507019043

Token 412: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23842190206050873
    2. '#' → logprob: -2.86342191696167
    3. '_tokens' → logprob: -3.86342191696167
    4. '_chars' → logprob: -3.86342191696167
    5. '_
' → logprob: -3.98842191696167
    6. '_token' → logprob: -4.11342191696167
    7. '
' → logprob: -4.98842191696167
    8. 'def' → logprob: -5.11342191696167
    9. 'import' → logprob: -5.48842191696167
    10. '_set' → logprob: -5.61342191696167

Token 413: ' letters' (ID: 18151)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.6822360157966614
    2. 'possible' → logprob: -1.0572359561920166
    3. 'chars' → logprob: -3.3072359561920166
    4. ' allowed' → logprob: -3.3072359561920166
    5. 'valid' → logprob: -3.8072359561920166
    6. ' possible' → logprob: -3.9322359561920166
    7. ' valid' → logprob: -5.682236194610596
    8. 'original' → logprob: -5.932236194610596
    9. '_allowed' → logprob: -6.182236194610596
    10. '_' → logprob: -6.557236194610596

Token 414: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9490579962730408
    2. ' =' → logprob: -1.6990580558776855
    3. 'is' → logprob: -2.5740580558776855
    4. '#' → logprob: -2.9490580558776855
    5. 'to' → logprob: -3.1990580558776855
    6. '<|end|>' → logprob: -3.1990580558776855
    7. '=' → logprob: -3.3240580558776855
    8. 's' → logprob: -3.6990580558776855
    9. '_possible' → logprob: -4.0740580558776855
    10. 'possible' → logprob: -4.3240580558776855

Token 415: ' at' (ID: 540)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.5240122079849243
    2. 'at' → logprob: -1.3990122079849243
    3. ' at' → logprob: -2.7740120887756348
    4. ' small' → logprob: -3.5240120887756348
    5. 'likely' → logprob: -3.6490120887756348
    6. 'up' → logprob: -4.274012088775635
    7. '<=' → logprob: -4.399012088775635
    8. 'len' → logprob: -5.149012088775635
    9. 'limited' → logprob: -5.524012088775635
    10. ' likely' → logprob: -5.774012088775635

Token 416: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.00045665193465538323
    2. ' most' → logprob: -7.750456809997559
    3. 'Most' → logprob: -10.625456809997559
    4. 'max' → logprob: -14.375456809997559
    5. '
' → logprob: -14.500456809997559
    6. 'mo' → logprob: -15.625456809997559
    7. '```' → logprob: -15.625456809997559
    8. '-most' → logprob: -16.375455856323242
    9. 'mos' → logprob: -16.625455856323242
    10. '10' → logprob: -18.625455856323242

Token 417: ' the' (ID: 290)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.846631646156311
    2. '10' → logprob: -1.596631646156311
    3. '9' → logprob: -2.2216315269470215
    4. '8' → logprob: -2.8466315269470215
    5. '15' → logprob: -3.2216315269470215
    6. '31' → logprob: -3.3466315269470215
    7. '12' → logprob: -3.5966315269470215
    8. '11' → logprob: -3.8466315269470215
    9. '14' → logprob: -3.9716315269470215
    10. ' ' → logprob: -3.9716315269470215

Token 418: ' length' (ID: 5517)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.4019060432910919
    2. '10' → logprob: -2.2769060134887695
    3. '31' → logprob: -2.9019060134887695
    4. '8' → logprob: -3.0269060134887695
    5. '6' → logprob: -3.2769060134887695
    6. '9' → logprob: -3.5269060134887695
    7. '5' → logprob: -4.1519060134887695
    8. '11' → logprob: -4.6519060134887695
    9. '26' → logprob: -4.6519060134887695
    10. '12' → logprob: -5.1519060134887695

Token 419: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.1179912090301514
    2. '_' → logprob: -1.2429912090301514
    3. ' of' → logprob: -2.4929912090301514
    4. 'import' → logprob: -2.7429912090301514
    5. '(' → logprob: -3.2429912090301514
    6. 's' → logprob: -3.6179912090301514
    7. '=' → logprob: -3.8679912090301514
    8. ' =' → logprob: -4.1179914474487305
    9. ')' → logprob: -4.1179914474487305
    10. '#' → logprob: -4.2429914474487305

Token 420: ' input' (ID: 3422)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12945473194122314
    2. 's' → logprob: -3.1294546127319336
    3. ' the' → logprob: -3.2544546127319336
    4. 'encrypted' → logprob: -3.6294546127319336
    5. 'input' → logprob: -5.004454612731934
    6. ' s' → logprob: -6.379454612731934
    7. ' encrypted' → logprob: -6.504454612731934
    8. 'code' → logprob: -7.254454612731934
    9. ' input' → logprob: -8.004454612731934
    10. 'S' → logprob: -8.004454612731934

Token 421: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0881563276052475
    2. 'input' → logprob: -4.463156223297119
    3. 'encrypted' → logprob: -5.088156223297119
    4. ':' → logprob: -5.213156223297119
    5. 'allowed' → logprob: -5.213156223297119
    6. ')' → logprob: -5.463156223297119
    7. 'tokens' → logprob: -5.588156223297119
    8. 's' → logprob: -5.588156223297119
    9. '(' → logprob: -5.713156223297119
    10. '
' → logprob: -5.838156223297119

Token 422: '<=' (ID: 16672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2425559163093567
    2. '+' → logprob: -2.617555856704712
    3. 'import' → logprob: -3.742555856704712
    4. ' +' → logprob: -4.367556095123291
    5. '**' → logprob: -4.367556095123291
    6. 'possible' → logprob: -4.367556095123291
    7. '#' → logprob: -4.492556095123291
    8. 'allowed' → logprob: -4.992556095123291
    9. '```' → logprob: -5.117556095123291
    10. ')+' → logprob: -5.742556095123291

Token 423: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.00025406808708794415
    2. '30' → logprob: -9.250253677368164
    3. ' ' → logprob: -9.375253677368164
    4. '15' → logprob: -10.750253677368164
    5. '20' → logprob: -11.750253677368164
    6. '32' → logprob: -12.125253677368164
    7. '21' → logprob: -12.375253677368164
    8. '10' → logprob: -12.562753677368164
    9. '14' → logprob: -13.062753677368164
    10. '16' → logprob: -13.250253677368164

Token 424: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043468400835990906
    2. '+' → logprob: -5.168468475341797
    3. '#' → logprob: -5.293468475341797
    4. 'import' → logprob: -5.293468475341797
    5. 'chars' → logprob: -5.668468475341797
    6. ']' → logprob: -5.668468475341797
    7. 'possible' → logprob: -5.918468475341797
    8. 'allowed' → logprob: -6.043468475341797
    9. '```' → logprob: -6.293468475341797
    10. '-' → logprob: -6.668468475341797

Token 425: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2240328788757324
    2. '"' → logprob: -1.5990328788757324
    3. 'possible' → logprob: -1.7240328788757324
    4. 'allowed' → logprob: -2.0990328788757324
    5. 'valid' → logprob: -2.9740328788757324
    6. ''' → logprob: -3.3490328788757324
    7. 'import' → logprob: -4.224032878875732
    8. 'original' → logprob: -4.599032878875732
    9. ' possible' → logprob: -4.599032878875732
    10. ' allowed' → logprob: -5.099032878875732

Token 426: ' often' (ID: 4783)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9870432019233704
    2. ' not' → logprob: -2.3620431423187256
    3. ' we' → logprob: -2.7370431423187256
    4. 'the' → logprob: -2.7370431423187256
    5. ' less' → logprob: -2.8620431423187256
    6. '#' → logprob: -2.9870431423187256
    7. ' can' → logprob: -3.8620431423187256
    8. ' at' → logprob: -4.112043380737305
    9. ' fewer' → logprob: -4.362043380737305
    10. 'not' → logprob: -4.362043380737305

Token 427: ' fewer' (ID: 30732)
  Prédit: 'much'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'much' → logprob: -0.7052939534187317
    2. 'small' → logprob: -1.955293893814087
    3. 'less' → logprob: -2.205293893814087
    4. 'sm' → logprob: -3.455293893814087
    5. '```' → logprob: -3.580293893814087
    6. 'the' → logprob: -3.580293893814087
    7. '<=' → logprob: -3.955293893814087
    8. 'f' → logprob: -4.080294132232666
    9. 'likely' → logprob: -4.580294132232666
    10. ' much' → logprob: -4.580294132232666

Token 428: '.
' (ID: 558)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -1.7395071983337402
    2. 'valid' → logprob: -1.9895071983337402
    3. 'possible' → logprob: -1.9895071983337402
    4. '_possible' → logprob: -2.4895071983337402
    5. 'def' → logprob: -2.6145071983337402
    6. ')' → logprob: -2.6145071983337402
    7. '#' → logprob: -2.8645071983337402
    8. '_allowed' → logprob: -3.4895071983337402
    9. 'available' → logprob: -3.6145071983337402
    10. '_valid' → logprob: -3.7395071983337402

Token 429: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05944938585162163
    2. 'class' → logprob: -4.684449195861816
    3. ':' → logprob: -4.809449195861816
    4. 'import' → logprob: -5.059449195861816
    5. '(
' → logprob: -5.434449195861816
    6. 'allowed' → logprob: -5.434449195861816
    7. '```' → logprob: -5.934449195861816
    8. '#' → logprob: -6.184449195861816
    9. '\n' → logprob: -6.184449195861816
    10. '(' → logprob: -6.434449195861816

Token 430: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8351023197174072
    2. ':' → logprob: -1.5851023197174072
    3. '\n' → logprob: -1.7101023197174072
    4. 'letters' → logprob: -3.0851023197174072
    5. 'input' → logprob: -3.5851023197174072
    6. '
' → logprob: -3.5851023197174072
    7. 'encrypted' → logprob: -4.335102081298828
    8. '\' → logprob: -4.460102081298828
    9. 'import' → logprob: -5.335102081298828
    10. ':
' → logprob: -5.460102081298828

Token 431: ' The' (ID: 623)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.37461212277412415
    2. '#' → logprob: -1.9996120929718018
    3. 'possible' → logprob: -2.2496120929718018
    4. 'valid' → logprob: -4.124612331390381
    5. 'def' → logprob: -4.624612331390381
    6. 'candidate' → logprob: -4.999612331390381
    7. 'available' → logprob: -5.124612331390381
    8. 'c' → logprob: -5.249612331390381
    9. 'letters' → logprob: -5.499612331390381
    10. 'from' → logprob: -5.624612331390381

Token 432: ' original' (ID: 4756)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.26157328486442566
    2. 'allowed' → logprob: -2.511573314666748
    3. 'next' → logprob: -2.886573314666748
    4. 'possible' → logprob: -3.386573314666748
    5. ' allowed' → logprob: -4.011573314666748
    6. 'remaining' → logprob: -4.636573314666748
    7. ' code' → logprob: -5.136573314666748
    8. 'code' → logprob: -5.636573314666748
    9. 'letters' → logprob: -5.636573314666748
    10. ' possible' → logprob: -5.886573314666748

Token 433: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.13618139922618866
    2. '_chars' → logprob: -2.136181354522705
    3. 'characters' → logprob: -5.636181354522705
    4. 'allowed' → logprob: -6.636181354522705
    5. 'letters' → logprob: -6.636181354522705
    6. 'char' → logprob: -7.011181354522705
    7. ' chars' → logprob: -7.261181354522705
    8. 'tokens' → logprob: -8.261181831359863
    9. '_char' → logprob: -8.386181831359863
    10. 'input' → logprob: -9.136181831359863

Token 434: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7173138856887817
    2. ' are' → logprob: -1.2173138856887817
    3. ' can' → logprob: -2.592313766479492
    4. '=' → logprob: -3.217313766479492
    5. 'are' → logprob: -3.592313766479492
    6. 'allowed' → logprob: -4.092313766479492
    7. 'can' → logprob: -4.217313766479492
    8. ' must' → logprob: -5.092313766479492
    9. ' allowed' → logprob: -5.717313766479492
    10. 'must' → logprob: -5.717313766479492

Token 435: ' only' (ID: 1606)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.1591990888118744
    2. 'be' → logprob: -2.2841989994049072
    3. ' =' → logprob: -4.159199237823486
    4. ' include' → logprob: -5.284199237823486
    5. '=' → logprob: -5.409199237823486
    6. ''' → logprob: -5.534199237823486
    7. 'not' → logprob: -5.784199237823486
    8. 'include' → logprob: -5.784199237823486
    9. ' not' → logprob: -5.909199237823486
    10. '"' → logprob: -6.534199237823486

Token 436: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5369144678115845
    2. ' be' → logprob: -0.9119144678115845
    3. '=' → logprob: -4.786914348602295
    4. 'appear' → logprob: -5.536914348602295
    5. 'include' → logprob: -8.411914825439453
    6. ' appear' → logprob: -8.661914825439453
    7. ''' → logprob: -8.911914825439453
    8. 'contain' → logprob: -8.911914825439453
    9. '"' → logprob: -9.286914825439453
    10. 'come' → logprob: -9.411914825439453

Token 437: ' from' (ID: 591)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4220963716506958
    2. '{'' → logprob: -1.6720963716506958
    3. '{' → logprob: -2.6720962524414062
    4. '"' → logprob: -3.2970962524414062
    5. '0' → logprob: -4.172096252441406
    6. ' '' → logprob: -4.672096252441406
    7. '['' → logprob: -4.922096252441406
    8. 'one' → logprob: -5.422096252441406
    9. ' {'' → logprob: -6.047096252441406
    10. 'set' → logprob: -6.047096252441406

Token 438: ' the' (ID: 290)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.20875445008277893
    2. '"' → logprob: -2.833754539489746
    3. 'set' → logprob: -2.833754539489746
    4. '['' → logprob: -3.583754539489746
    5. ''' → logprob: -3.833754539489746
    6. ' set' → logprob: -4.583754539489746
    7. '{' → logprob: -5.208754539489746
    8. ' {'' → logprob: -5.583754539489746
    9. '0' → logprob: -7.583754539489746
    10. 'the' → logprob: -7.958754539489746

Token 439: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.03918224573135376
    2. '{'' → logprob: -3.539182186126709
    3. ' set' → logprob: -4.789182186126709
    4. '{' → logprob: -7.039182186126709
    5. 'allowed' → logprob: -9.789182662963867
    6. '"' → logprob: -10.039182662963867
    7. '['' → logprob: -10.789182662963867
    8. ''' → logprob: -10.789182662963867
    9. '{"' → logprob: -11.664182662963867
    10. 'list' → logprob: -11.789182662963867

Token 440: ':
' (ID: 734)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.188119575381279
    2. '{' → logprob: -1.8131195306777954
    3. ' {'' → logprob: -5.313119411468506
    4. '('' → logprob: -7.188119411468506
    5. '{"' → logprob: -7.313119411468506
    6. ' {' → logprob: -7.563119411468506
    7. '"' → logprob: -8.313119888305664
    8. '`' → logprob: -8.563119888305664
    9. ' =' → logprob: -8.688119888305664
    10. '(' → logprob: -8.688119888305664

Token 441: '#' (ID: 2)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.20498093962669373
    2. ' {'' → logprob: -2.2049808502197266
    3. '{' → logprob: -2.7049808502197266
    4. '{"' → logprob: -5.704980850219727
    5. ' {' → logprob: -5.954980850219727
    6. '`' → logprob: -7.079980850219727
    7. '"' → logprob: -7.704980850219727
    8. 'allowed' → logprob: -8.079980850219727
    9. ''' → logprob: -8.954980850219727
    10. '```' → logprob: -9.204980850219727

Token 442: '  ' (ID: 256)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.0700036808848381
    2. ' {'' → logprob: -3.4450037479400635
    3. '{' → logprob: -3.6950037479400635
    4. '"' → logprob: -5.695003509521484
    5. '{"' → logprob: -6.195003509521484
    6. 'allowed' → logprob: -6.445003509521484
    7. 'digits' → logprob: -6.445003509521484
    8. ''' → logprob: -6.945003509521484
    9. 'set' → logprob: -8.570003509521484
    10. '['' → logprob: -8.570003509521484

Token 443: ' '' (ID: 461)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.10733196884393692
    2. '"' → logprob: -3.9823319911956787
    3. '{' → logprob: -3.9823319911956787
    4. 'original' → logprob: -4.1073317527771
    5. 'orig' → logprob: -4.1073317527771
    6. 'allowed' → logprob: -4.8573317527771
    7. '{"' → logprob: -4.9823317527771
    8. ' {'' → logprob: -5.3573317527771
    9. 'chars' → logprob: -5.6073317527771
    10. 'possible' → logprob: -6.1073317527771

Token 444: '0' (ID: 15)
  Prédit: '012'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.02632804960012436
    2. '"' → logprob: -4.276328086853027
    3. ''' → logprob: -5.026328086853027
    4. '0' → logprob: -5.651328086853027
    5. '01' → logprob: -6.401328086853027
    6. '{'' → logprob: -8.401328086853027
    7. 'digits' → logprob: -9.901328086853027
    8. ' ' → logprob: -10.651328086853027
    9. '013' → logprob: -11.151328086853027
    10. '=' → logprob: -11.651328086853027

Token 445: '','' (ID: 4074)
  Prédit: '012'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.40089040994644165
    2. '123' → logprob: -1.1508903503417969
    3. ' ' → logprob: -5.775890350341797
    4. '',' → logprob: -5.900890350341797
    5. '1' → logprob: -6.275890350341797
    6. '01' → logprob: -6.400890350341797
    7. '12' → logprob: -6.400890350341797
    8. '-' → logprob: -6.525890350341797
    9. '','' → logprob: -7.525890350341797
    10. ',' → logprob: -7.775890350341797

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '=' → logprob: -14.625004768371582
    4. ''' → logprob: -15.750004768371582
    5. '11' → logprob: -16.5000057220459
    6. '9' → logprob: -16.7500057220459
    7. '123' → logprob: -17.2500057220459
    8. '１' → logprob: -17.7500057220459
    9. '
' → logprob: -18.3750057220459
    10. '-' → logprob: -18.5000057220459

Token 447: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.37589824199676514
    2. '',' → logprob: -1.5008982419967651
    3. '','=','' → logprob: -3.2508983612060547
    4. '+-' → logprob: -4.500898361206055
    5. '()+' → logprob: -4.625898361206055
    6. '=' → logprob: -4.625898361206055
    7. ',' → logprob: -5.250898361206055
    8. '+' → logprob: -5.375898361206055
    9. '','=' → logprob: -5.375898361206055
    10. ',+' → logprob: -6.625898361206055

Token 448: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06908527761697769
    2. ''+' → logprob: -2.8190853595733643
    3. '2' → logprob: -5.694085121154785
    4. ''' → logprob: -5.944085121154785
    5. '=' → logprob: -8.069085121154785
    6. '+-' → logprob: -8.819085121154785
    7. '+=' → logprob: -8.819085121154785
    8. '+,' → logprob: -9.319085121154785
    9. ''=' → logprob: -9.569085121154785
    10. '+',' → logprob: -9.694085121154785

Token 449: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.3603307902812958
    2. '-' → logprob: -1.4853308200836182
    3. ''-' → logprob: -2.735330820083618
    4. '',' → logprob: -5.110330581665039
    5. '','=','' → logprob: -6.485330581665039
    6. ''' → logprob: -6.985330581665039
    7. ',-' → logprob: -7.110330581665039
    8. ',' → logprob: -7.610330581665039
    9. '-',' → logprob: -8.110330581665039
    10. '=' → logprob: -8.485330581665039

Token 450: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003261846024543047
    2. ''-' → logprob: -5.753262042999268
    3. '-',' → logprob: -9.62826156616211
    4. '-'' → logprob: -11.62826156616211
    5. '\-' → logprob: -12.37826156616211
    6. '-
' → logprob: -13.37826156616211
    7. '-=' → logprob: -13.62826156616211
    8. '('-' → logprob: -14.50326156616211
    9. ''' → logprob: -14.87826156616211
    10. '-,' → logprob: -15.12826156616211

Token 451: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.689856231212616
    2. '*' → logprob: -1.3148562908172607
    3. ',' → logprob: -2.3148562908172607
    4. '',' → logprob: -2.8148562908172607
    5. ''*' → logprob: -3.3148562908172607
    6. ''' → logprob: -4.314856052398682
    7. ','' → logprob: -4.939856052398682
    8. ')' → logprob: -5.314856052398682
    9. ' ','' → logprob: -6.314856052398682
    10. ')','' → logprob: -6.564856052398682

Token 452: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00405453285202384
    2. '=' → logprob: -5.879054546356201
    3. '(','' → logprob: -7.379054546356201
    4. ')','' → logprob: -8.504054069519043
    5. ')' → logprob: -8.629054069519043
    6. '(',' → logprob: -9.129054069519043
    7. '=',' → logprob: -10.504054069519043
    8. '','' → logprob: -10.879054069519043
    9. '='' → logprob: -11.004054069519043
    10. '(' → logprob: -11.004054069519043

Token 453: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.8944486975669861
    2. '','' → logprob: -1.5194487571716309
    3. ')','' → logprob: -2.019448757171631
    4. ',' → logprob: -2.394448757171631
    5. ')',' → logprob: -3.269448757171631
    6. ')' → logprob: -3.269448757171631
    7. '(',' → logprob: -4.019448757171631
    8. '=' → logprob: -4.269448757171631
    9. '','=','' → logprob: -4.769448757171631
    10. '(','' → logprob: -5.019448757171631

Token 454: '(',' (ID: 30548)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4796743094921112
    2. ')','' → logprob: -1.4796743392944336
    3. '(','' → logprob: -2.7296743392944336
    4. '(',' → logprob: -3.3546743392944336
    5. '=',' → logprob: -3.6046743392944336
    6. ')' → logprob: -4.229674339294434
    7. ')',' → logprob: -5.104674339294434
    8. '(' → logprob: -5.729674339294434
    9. '='' → logprob: -7.479674339294434
    10. '','' → logprob: -7.479674339294434

Token 455: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5274004340171814
    2. ')' → logprob: -0.9024004340171814
    3. ''' → logprob: -6.527400493621826
    4. '=' → logprob: -7.027400493621826
    5. '),' → logprob: -7.777400493621826
    6. ')=' → logprob: -7.902400493621826
    7. ')'' → logprob: -8.027400016784668
    8. ')','' → logprob: -8.152400016784668
    9. ''=' → logprob: -8.902400016784668
    10. ' ')' → logprob: -8.902400016784668

Token 456: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.737730085849762
    2. ''=' → logprob: -1.8627300262451172
    3. ''' → logprob: -1.9877300262451172
    4. '','=' → logprob: -2.487730026245117
    5. '=' → logprob: -2.487730026245117
    6. ',' → logprob: -3.737730026245117
    7. '','=','' → logprob: -3.987730026245117
    8. '','' → logprob: -4.987730026245117
    9. '='' → logprob: -5.237730026245117
    10. '',' → logprob: -5.737730026245117

Token 457: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003918271977454424
    2. '='' → logprob: -8.000391960144043
    3. '=''' → logprob: -10.875391960144043
    4. ''=' → logprob: -10.875391960144043
    5. '=['' → logprob: -13.125391960144043
    6. '={'' → logprob: -13.250391960144043
    7. '=}' → logprob: -13.625391960144043
    8. '=',' → logprob: -13.625391960144043
    9. '=

' → logprob: -13.750391960144043
    10. '=
' → logprob: -13.875391960144043

Token 458: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7131736278533936
    2. ':' → logprob: -1.5881736278533936
    3. 'allowed' → logprob: -2.9631736278533936
    4. ':
' → logprob: -2.9631736278533936
    5. '\n' → logprob: -3.8381736278533936
    6. 'import' → logprob: -3.9631736278533936
    7. ')' → logprob: -4.088173866271973
    8. 'possible' → logprob: -4.213173866271973
    9. ''' → logprob: -4.588173866271973
    10. 'letters' → logprob: -4.838173866271973

Token 459: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36163824796676636
    2. ':' → logprob: -2.236638307571411
    3. 'import' → logprob: -3.486638307571411
    4. ':
' → logprob: -3.611638307571411
    5. 'letters' → logprob: -3.736638307571411
    6. '\n' → logprob: -4.111638069152832
    7. '
' → logprob: -4.236638069152832
    8. 'tokens' → logprob: -4.611638069152832
    9. 'allowed' → logprob: -4.861638069152832
    10. '#' → logprob: -4.986638069152832

Token 460: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07386426627635956
    2. 'letters' → logprob: -4.323864459991455
    3. 'allowed' → logprob: -4.323864459991455
    4. 'tokens' → logprob: -4.948864459991455
    5. 'import' → logprob: -5.448864459991455
    6. '#' → logprob: -5.448864459991455
    7. ':' → logprob: -5.573864459991455
    8. ')' → logprob: -5.573864459991455
    9. 'possible' → logprob: -5.823864459991455
    10. 'n' → logprob: -6.323864459991455

Token 461: ' Number' (ID: 9184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11536527425050735
    2. 'import' → logprob: -3.7403652667999268
    3. '#' → logprob: -3.8653652667999268
    4. 'letters' → logprob: -3.9903652667999268
    5. 'encrypted' → logprob: -4.115365505218506
    6. 'from' → logprob: -5.240365505218506
    7. 'input' → logprob: -5.240365505218506
    8. 'allowed' → logprob: -5.365365505218506
    9. '```' → logprob: -6.115365505218506
    10. 'tokens' → logprob: -6.490365505218506

Token 462: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5497716069221497
    2. ' =' → logprob: -1.5497715473175049
    3. '=' → logprob: -2.174771547317505
    4. ' of' → logprob: -3.924771547317505
    5. '_of' → logprob: -4.049771785736084
    6. '_' → logprob: -4.174771785736084
    7. '_letters' → logprob: -4.799771785736084
    8. 'letters' → logprob: -5.049771785736084
    9. '_chars' → logprob: -5.049771785736084
    10. 'import' → logprob: -5.174771785736084

Token 463: ' distinct' (ID: 16913)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.8152334094047546
    2. 'possible' → logprob: -1.6902334690093994
    3. ' letters' → logprob: -2.6902334690093994
    4. 'original' → logprob: -2.6902334690093994
    5. 'unique' → logprob: -3.1902334690093994
    6. ' original' → logprob: -3.3152334690093994
    7. ' unique' → logprob: -3.3152334690093994
    8. ' possible' → logprob: -3.4402334690093994
    9. 'distinct' → logprob: -3.6902334690093994
    10. 'different' → logprob: -4.44023323059082

Token 464: ' original' (ID: 4756)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.03272292762994766
    2. ' letters' → logprob: -4.2827229499816895
    3. 'original' → logprob: -5.0327229499816895
    4. 'lines' → logprob: -5.4077229499816895
    5. 'tokens' → logprob: -6.1577229499816895
    6. 'allowed' → logprob: -6.4077229499816895
    7. 'chars' → logprob: -7.0327229499816895
    8. 'possible' → logprob: -7.2827229499816895
    9. ' original' → logprob: -7.5327229499816895
    10. 'orig' → logprob: -8.407722473144531

Token 465: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.30318954586982727
    2. 'chars' → logprob: -1.4281895160675049
    3. ' chars' → logprob: -4.553189754486084
    4. '_' → logprob: -5.553189754486084
    5. 'characters' → logprob: -6.178189754486084
    6. 'letters' → logprob: -6.428189754486084
    7. '_letters' → logprob: -6.553189754486084
    8. '_char' → logprob: -7.303189754486084
    9. ' characters' → logprob: -7.303189754486084
    10. ' letters' → logprob: -8.178189277648926

Token 466: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16299398243427277
    2. '=' → logprob: -3.037993907928467
    3. ' is' → logprob: -3.287993907928467
    4. ' ' → logprob: -5.037993907928467
    5. ' <=' → logprob: -5.037993907928467
    6. ':' → logprob: -5.162993907928467
    7. '```' → logprob: -5.537993907928467
    8. 'is' → logprob: -5.662993907928467
    9. 'allowed' → logprob: -5.662993907928467
    10. 'from' → logprob: -5.662993907928467

Token 467: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.819715142250061
    2. '9' → logprob: -0.819715142250061
    3. ' ' → logprob: -2.1947150230407715
    4. '{' → logprob: -6.3197150230407715
    5. '=' → logprob: -6.8197150230407715
    6. ' =' → logprob: -6.9447150230407715
    7. '10' → logprob: -7.0697150230407715
    8. '7' → logprob: -7.3197150230407715
    9. 'len' → logprob: -7.6947150230407715
    10. '{'' → logprob: -8.19471549987793

Token 468: '9' (ID: 24)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.14431306719779968
    2. '9' → logprob: -2.144313097000122
    3. 'at' → logprob: -5.019312858581543
    4. '{' → logprob: -5.894312858581543
    5. '<=' → logprob: -6.394312858581543
    6. '{'' → logprob: -6.519312858581543
    7. ' ' → logprob: -6.894312858581543
    8. 'len' → logprob: -7.019312858581543
    9. '7' → logprob: -7.644312858581543
    10. ' at' → logprob: -7.769312858581543

Token 469: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1753624677658081
    2. ':' → logprob: -2.1753625869750977
    3. '[' → logprob: -4.050362586975098
    4. '(' → logprob: -4.550362586975098
    5. '```' → logprob: -5.550362586975098
    6. 'import' → logprob: -6.425362586975098
    7. '[
' → logprob: -6.550362586975098
    8. '(
' → logprob: -6.675362586975098
    9. ')' → logprob: -6.800362586975098
    10. '\' → logprob: -7.175362586975098

Token 470: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05724254250526428
    2. 'allowed' → logprob: -3.5572426319122314
    3. ':' → logprob: -4.307242393493652
    4. 'import' → logprob: -6.307242393493652
    5. 'valid' → logprob: -6.307242393493652
    6. 'letters' → logprob: -6.432242393493652
    7. '#' → logprob: -7.057242393493652
    8. 'possible' → logprob: -7.182242393493652
    9. 'class' → logprob: -7.307242393493652
    10. ')' → logprob: -7.432242393493652

Token 471: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10571863502264023
    2. 'allowed' → logprob: -2.9807186126708984
    3. 'letters' → logprob: -4.480718612670898
    4. 'possible' → logprob: -4.480718612670898
    5. 'import' → logprob: -5.355718612670898
    6. 'class' → logprob: -5.605718612670898
    7. '#' → logprob: -5.730718612670898
    8. 'valid' → logprob: -5.730718612670898
    9. 'tokens' → logprob: -5.855718612670898
    10. ':' → logprob: -6.605718612670898

Token 472: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3270354270935059
    2. 'letters' → logprob: -1.4520354270935059
    3. 'def' → logprob: -1.9520354270935059
    4. 'allowed' → logprob: -2.327035427093506
    5. 'import' → logprob: -2.827035427093506
    6. 'encrypted' → logprob: -2.827035427093506
    7. 'input' → logprob: -3.827035427093506
    8. 'valid' → logprob: -4.452035427093506
    9. 'from' → logprob: -4.452035427093506
    10. 'possible' → logprob: -4.577035427093506

Token 473: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.9839821457862854
    2. ' possible' → logprob: -2.1089820861816406
    3. ' for' → logprob: -2.3589820861816406
    4. ' all' → logprob: -2.4839820861816406
    5. ' the' → logprob: -2.7339820861816406
    6. '#' → logprob: -2.9839820861816406
    7. ' #' → logprob: -3.2339820861816406
    8. 'possible' → logprob: -3.4839820861816406
    9. ' letters' → logprob: -3.6089820861816406
    10. ' next' → logprob: -3.6089820861816406

Token 474: ' assign' (ID: 14975)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6628992557525635
    2. 'can' → logprob: -0.9128992557525635
    3. 'have' → logprob: -3.5378992557525635
    4. ' have' → logprob: -4.287899017333984
    5. ' will' → logprob: -4.912899017333984
    6. 'need' → logprob: -4.912899017333984
    7. 'will' → logprob: -5.537899017333984
    8. 'cannot' → logprob: -5.537899017333984
    9. 'continue' → logprob: -5.787899017333984
    10. '#' → logprob: -5.787899017333984

Token 475: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.7127885818481445
    2. ' letters' → logprob: -1.2127885818481445
    3. 'for' → logprob: -3.2127885818481445
    4. ' for' → logprob: -3.5877885818481445
    5. 'from' → logprob: -3.5877885818481445
    6. 'each' → logprob: -3.5877885818481445
    7. ' each' → logprob: -3.8377885818481445
    8. 'chars' → logprob: -4.7127885818481445
    9. 'possible' → logprob: -4.8377885818481445
    10. ' from' → logprob: -5.0877885818481445

Token 476: ' distinct' (ID: 16913)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1774381697177887
    2. '=' → logprob: -3.802438259124756
    3. ' ' → logprob: -3.802438259124756
    4. '   ' → logprob: -3.802438259124756
    5. 'import' → logprob: -4.427438259124756
    6. '_tokens' → logprob: -4.427438259124756
    7. 'from' → logprob: -4.677438259124756
    8. '_to' → logprob: -4.927438259124756
    9. '_' → logprob: -5.177438259124756
    10. ' to' → logprob: -5.302438259124756

Token 477: ' chars' (ID: 47991)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.2782294452190399
    2. 'original' → logprob: -2.5282294750213623
    3. 'characters' → logprob: -3.2782294750213623
    4. '_chars' → logprob: -3.4032294750213623
    5. 'tokens' → logprob: -3.7782294750213623
    6. ' original' → logprob: -3.9032294750213623
    7. 'letters' → logprob: -4.528229236602783
    8. ' chars' → logprob: -4.903229236602783
    9. ' characters' → logprob: -4.903229236602783
    10. ' tokens' → logprob: -5.278229236602783

Token 478: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9859025478363037
    2. 'def' → logprob: -1.1109025478363037
    3. '(
' → logprob: -2.3609025478363037
    4. '(' → logprob: -3.1109025478363037
    5. ':
' → logprob: -3.2359025478363037
    6. ''' → logprob: -4.110902786254883
    7. 'import' → logprob: -4.235902786254883
    8. '[
' → logprob: -4.360902786254883
    9. ''\' → logprob: -4.485902786254883
    10. '\n' → logprob: -4.610902786254883

Token 479: ' these' (ID: 1879)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.2437838315963745
    2. ''' → logprob: -1.6187838315963745
    3. '['' → logprob: -4.368783950805664
    4. 'the' → logprob: -5.743783950805664
    5. ' {'' → logprob: -6.993783950805664
    6. '{' → logprob: -7.243783950805664
    7. ' '' → logprob: -8.493783950805664
    8. 'set' → logprob: -8.618783950805664
    9. '"' → logprob: -8.868783950805664
    10. '{"' → logprob: -10.118783950805664

Token 480: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5537546277046204
    2. ':' → logprob: -1.4287545680999756
    3. '[' → logprob: -3.0537545680999756
    4. '(' → logprob: -3.3037545680999756
    5. ''' → logprob: -4.428754806518555
    6. 'input' → logprob: -4.428754806518555
    7. '{' → logprob: -4.553754806518555
    8. 'import' → logprob: -4.678754806518555
    9. '(
' → logprob: -5.178754806518555
    10. '[
' → logprob: -5.303754806518555

Token 481: '9' (ID: 24)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.6687259674072266
    2. 'chars' → logprob: -2.1687259674072266
    3. 'def' → logprob: -2.2937259674072266
    4. 'tokens' → logprob: -2.5437259674072266
    5. 'import' → logprob: -2.7937259674072266
    6. ':' → logprob: -3.1687259674072266
    7. 'allowed' → logprob: -3.2937259674072266
    8. 'letters' → logprob: -3.4187259674072266
    9. 'possible' → logprob: -3.5437259674072266
    10. 's' → logprob: -3.5437259674072266

Token 482: ' candidates' (ID: 18116)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5642421245574951
    2. ':' → logprob: -1.9392421245574951
    3. ':
' → logprob: -2.564242124557495
    4. 'allowed' → logprob: -3.064242124557495
    5. 'import' → logprob: -3.814242124557495
    6. 'possible' → logprob: -3.939242124557495
    7. 'chars' → logprob: -4.439242362976074
    8. '#' → logprob: -4.439242362976074
    9. 'letters' → logprob: -4.564242362976074
    10. '(
' → logprob: -4.564242362976074

Token 483: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13639600574970245
    2. 'def' → logprob: -2.8863959312438965
    3. ':
' → logprob: -4.0113959312438965
    4. '(' → logprob: -4.0113959312438965
    5. '(
' → logprob: -4.8863959312438965
    6. '[' → logprob: -5.0113959312438965
    7. '[
' → logprob: -5.5113959312438965
    8. ''' → logprob: -6.1363959312438965
    9. '':' → logprob: -6.1363959312438965
    10. '[:' → logprob: -6.3863959312438965

Token 484: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01896543614566326
    2. ':' → logprob: -5.518965244293213
    3. 'import' → logprob: -5.518965244293213
    4. 'input' → logprob: -5.643965244293213
    5. '
' → logprob: -7.393965244293213
    6. '```' → logprob: -7.393965244293213
    7. 'class' → logprob: -7.768965244293213
    8. '[
' → logprob: -7.893965244293213
    9. '(
' → logprob: -7.893965244293213
    10. 'for' → logprob: -7.893965244293213

Token 485: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11038097739219666
    2. ':' → logprob: -3.4853808879852295
    3. 'letters' → logprob: -4.610381126403809
    4. 'allowed' → logprob: -4.610381126403809
    5. 'encrypted' → logprob: -4.735381126403809
    6. 'input' → logprob: -5.235381126403809
    7. 'import' → logprob: -5.235381126403809
    8. '#' → logprob: -5.735381126403809
    9. 'tokens' → logprob: -5.860381126403809
    10. ')' → logprob: -5.860381126403809

Token 486: ' This' (ID: 1328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09000582247972488
    2. '#' → logprob: -3.715005874633789
    3. 'import' → logprob: -4.090005874633789
    4. 'allowed' → logprob: -4.090005874633789
    5. 'letters' → logprob: -4.840005874633789
    6. 'input' → logprob: -5.340005874633789
    7. 'from' → logprob: -5.715005874633789
    8. 'possible' → logprob: -5.715005874633789
    9. 'valid' → logprob: -6.840005874633789
    10. 'original' → logprob: -6.840005874633789

Token 487: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3232647776603699
    2. ' means' → logprob: -2.4482648372650146
    3. ' code' → logprob: -3.0732648372650146
    4. 'is' → logprob: -3.3232648372650146
    5. 'means' → logprob: -3.3232648372650146
    6. ' can' → logprob: -4.1982645988464355
    7. ' problem' → logprob: -4.6982645988464355
    8. 'space' → logprob: -4.6982645988464355
    9. ' space' → logprob: -5.1982645988464355
    10. ' set' → logprob: -5.5732645988464355

Token 488: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2694023847579956
    2. ' feasible' → logprob: -1.5194023847579956
    3. ' limited' → logprob: -2.394402503967285
    4. ' constrained' → logprob: -2.644402503967285
    5. ' manageable' → logprob: -2.769402503967285
    6. 'a' → logprob: -3.644402503967285
    7. ' at' → logprob: -3.769402503967285
    8. ' because' → logprob: -3.769402503967285
    9. ' not' → logprob: -4.144402503967285
    10. 'back' → logprob: -4.269402503967285

Token 489: ' permutation' (ID: 135200)
  Prédit: ' back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -1.116568684577942
    2. 'back' → logprob: -1.116568684577942
    3. ' permutation' → logprob: -2.2415685653686523
    4. ' subset' → logprob: -2.7415685653686523
    5. ' constraint' → logprob: -3.2415685653686523
    6. ' combin' → logprob: -3.7415685653686523
    7. ' hard' → logprob: -4.366568565368652
    8. ' bit' → logprob: -4.741568565368652
    9. ' constrained' → logprob: -4.866568565368652
    10. 'n' → logprob: -4.866568565368652

Token 490: ' problem' (ID: 4792)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7284387946128845
    2. ''' → logprob: -1.6034388542175293
    3. '{' → logprob: -2.7284388542175293
    4. '(
' → logprob: -3.1034388542175293
    5. 'import' → logprob: -3.2284388542175293
    6. 'def' → logprob: -3.4784388542175293
    7. '_' → logprob: -3.4784388542175293
    8. 's' → logprob: -4.603438854217529
    9. '('' → logprob: -4.603438854217529
    10. 'from' → logprob: -4.603438854217529

Token 491: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7821032404899597
    2. '(' → logprob: -2.1571033000946045
    3. '[' → logprob: -2.2821033000946045
    4. '[
' → logprob: -2.5321033000946045
    5. '```' → logprob: -3.1571033000946045
    6. ':' → logprob: -3.2821033000946045
    7. '(
' → logprob: -3.4071033000946045
    8. ''' → logprob: -3.5321033000946045
    9. 'tokens' → logprob: -4.157103061676025
    10. 'import' → logprob: -4.282103061676025

Token 492: ' pruning' (ID: 135775)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4334757924079895
    2. ' at' → logprob: -1.5584757328033447
    3. ' ' → logprob: -3.5584757328033447
    4. 'at' → logprob: -3.9334757328033447
    5. 'the' → logprob: -4.308475971221924
    6. ' letters' → logprob: -4.558475971221924
    7. ' the' → logprob: -4.683475971221924
    8. 'letters' → logprob: -4.808475971221924
    9. 'a' → logprob: -4.933475971221924
    10. ' a' → logprob: -5.058475971221924

Token 493: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5853893160820007
    2. 'letters' → logprob: -1.4603893756866455
    3. 'allowed' → logprob: -2.8353893756866455
    4. 'import' → logprob: -2.9603893756866455
    5. ':' → logprob: -4.210389137268066
    6. 'tokens' → logprob: -4.460389137268066
    7. 'chars' → logprob: -4.585389137268066
    8. 'valid' → logprob: -4.960389137268066
    9. 'possible' → logprob: -5.460389137268066
    10. '(
' → logprob: -5.460389137268066

Token 494: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5775114893913269
    2. ':' → logprob: -2.3275115489959717
    3. '(
' → logprob: -2.4525115489959717
    4. '(' → logprob: -3.2025115489959717
    5. '\n' → logprob: -3.3275115489959717
    6. '
' → logprob: -3.5775115489959717
    7. '\' → logprob: -3.9525115489959717
    8. ''' → logprob: -4.077511310577393
    9. '```' → logprob: -4.077511310577393
    10. '[
' → logprob: -4.327511310577393

Token 495: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13662657141685486
    2. 'encrypted' → logprob: -3.5116264820098877
    3. 'letters' → logprob: -3.5116264820098877
    4. 'allowed' → logprob: -4.136626720428467
    5. 'input' → logprob: -4.886626720428467
    6. 'possible' → logprob: -4.886626720428467
    7. 'valid' → logprob: -5.261626720428467
    8. 'import' → logprob: -5.386626720428467
    9. 'code' → logprob: -5.636626720428467
    10. '\' → logprob: -5.761626720428467

Token 496: ' Parsing' (ID: 173321)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0100790373980999
    2. 'letters' → logprob: -5.8850789070129395
    3. 'input' → logprob: -6.3850789070129395
    4. 'encrypted' → logprob: -6.8850789070129395
    5. '(
' → logprob: -7.2600789070129395
    6. '(' → logprob: -7.5100789070129395
    7. 'tokens' → logprob: -7.7600789070129395
    8. 'import' → logprob: -7.8850789070129395
    9. '#' → logprob: -8.010079383850098
    10. 'n' → logprob: -8.135079383850098

Token 497: ' and' (ID: 326)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2454044669866562
    2. 'def' → logprob: -2.1204044818878174
    3. ':' → logprob: -3.6204044818878174
    4. '#' → logprob: -3.7454044818878174
    5. 'import' → logprob: -4.745404243469238
    6. '(
' → logprob: -4.870404243469238
    7. '(' → logprob: -5.245404243469238
    8. '
' → logprob: -5.620404243469238
    9. 'tokens' → logprob: -5.620404243469238
    10. ' =' → logprob: -5.995404243469238

Token 498: ' evaluating' (ID: 55656)
  Prédit: 'evalu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evalu' → logprob: -0.3758906424045563
    2. 'evaluation' → logprob: -1.2508906126022339
    3. 'token' → logprob: -4.000890731811523
    4. ' evaluation' → logprob: -5.750890731811523
    5. 'eval' → logprob: -6.250890731811523
    6. ' evaluating' → logprob: -6.375890731811523
    7. 'checking' → logprob: -7.375890731811523
    8. 'validation' → logprob: -7.500890731811523
    9. 'e' → logprob: -8.500890731811523
    10. 'lex' → logprob: -8.750890731811523

Token 499: ':
' (ID: 734)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.4175797700881958
    2. 'code' → logprob: -1.5425797700881958
    3. 'def' → logprob: -1.7925797700881958
    4. 'tokens' → logprob: -1.9175797700881958
    5. '
' → logprob: -2.6675796508789062
    6. ' code' → logprob: -3.0425796508789062
    7. ':' → logprob: -4.292579650878906
    8. '#' → logprob: -4.292579650878906
    9. '_tokens' → logprob: -4.292579650878906
    10. 'import' → logprob: -4.417579650878906

Token 500: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.46672698855400085
    2. 'def' → logprob: -1.2167270183563232
    3. '#' → logprob: -2.7167270183563232
    4. '
' → logprob: -4.966726779937744
    5. '#
' → logprob: -7.216726779937744
    6. ' 
' → logprob: -7.716726779937744
    7. '(
' → logprob: -7.841726779937744
    8. 'digits' → logprob: -7.841726779937744
    9. 'digit' → logprob: -7.841726779937744
    10. 'import' → logprob: -8.341727256774902

Token 501: ' -' (ID: 533)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4460144639015198
    2. 'def' → logprob: -1.071014404296875
    3. '#' → logprob: -4.196014404296875
    4. '
' → logprob: -6.821014404296875
    5. 'from' → logprob: -8.196014404296875
    6. 'import' → logprob: -8.196014404296875
    7. 'token' → logprob: -8.821014404296875
    8. '#
' → logprob: -9.696014404296875
    9. '(
' → logprob: -9.821014404296875
    10. 'tokens' → logprob: -10.571014404296875

Token 502: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6900979280471802
    2. 'def' → logprob: -1.4400979280471802
    3. 'We' → logprob: -1.6900979280471802
    4. 'class' → logprob: -2.9400978088378906
    5. 'Let's' → logprob: -5.440097808837891
    6. 'Define' → logprob: -5.565097808837891
    7. 'The' → logprob: -5.690097808837891
    8. 'Use' → logprob: -5.815097808837891
    9. 'from' → logprob: -6.190097808837891
    10. '
' → logprob: -6.315097808837891

Token 503: ' do' (ID: 621)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'define' → logprob: -0.29213106632232666
    2. 'parse' → logprob: -2.042130947113037
    3. 'implement' → logprob: -3.042130947113037
    4. 'use' → logprob: -4.167130947113037
    5. 'token' → logprob: -4.167130947113037
    6. 'def' → logprob: -4.292130947113037
    7. ' define' → logprob: -4.542130947113037
    8. 'write' → logprob: -4.917130947113037
    9. ' implement' → logprob: -5.542130947113037
    10. 'build' → logprob: -5.917130947113037

Token 504: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6192334294319153
    2. ' a' → logprob: -1.9942333698272705
    3. 'def' → logprob: -2.4942333698272705
    4. 'the' → logprob: -2.4942333698272705
    5. 'recursive' → logprob: -2.6192333698272705
    6. 'token' → logprob: -2.9942333698272705
    7. ' recursive' → logprob: -5.11923360824585
    8. ' the' → logprob: -5.24423360824585
    9. '#' → logprob: -5.86923360824585
    10. 'expression' → logprob: -5.86923360824585

Token 505: ' recursive' (ID: 66711)
  Prédit: 'recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -0.3622700273990631
    2. 'def' → logprob: -2.2372701168060303
    3. ' recursive' → logprob: -2.3622701168060303
    4. 'standard' → logprob: -3.8622701168060303
    5. 'token' → logprob: -3.8622701168060303
    6. 'top' → logprob: -4.112269878387451
    7. 'full' → logprob: -4.362269878387451
    8. ' full' → logprob: -4.987269878387451
    9. 'parser' → logprob: -5.237269878387451
    10. 'simple' → logprob: -5.362269878387451

Token 506: ' descent' (ID: 67101)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5319038033485413
    2. ' descent' → logprob: -1.0319037437438965
    3. '-des' → logprob: -3.0319037437438965
    4. '_des' → logprob: -4.9069037437438965
    5. 'desc' → logprob: -8.281904220581055
    6. 'def' → logprob: -8.906904220581055
    7. '#' → logprob: -9.281904220581055
    8. '
' → logprob: -10.656904220581055
    9. 'parser' → logprob: -11.156904220581055
    10. 'parse' → logprob: -11.406904220581055

Token 507: ' parser' (ID: 14216)
  Prédit: '_parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.3803248405456543
    2. 'parser' → logprob: -1.6303248405456543
    3. '_' → logprob: -3.1303248405456543
    4. ' parser' → logprob: -4.005324840545654
    5. 'parse' → logprob: -4.005324840545654
    6. '_parse' → logprob: -4.255324840545654
    7. 'def' → logprob: -4.505324840545654
    8. '(' → logprob: -5.755324840545654
    9. '(
' → logprob: -6.255324840545654
    10. ' _' → logprob: -6.380324840545654

Token 508: ' according' (ID: 7065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7164998650550842
    2. 'def' → logprob: -1.2164998054504395
    3. '(
' → logprob: -1.8414998054504395
    4. '_' → logprob: -4.3414998054504395
    5. '
' → logprob: -4.5914998054504395
    6. ':' → logprob: -4.7164998054504395
    7. 'import' → logprob: -5.7164998054504395
    8. 'class' → logprob: -5.8414998054504395
    9. '#' → logprob: -5.9664998054504395
    10. '\' → logprob: -5.9664998054504395

Token 509: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7660690546035767
    2. '_token' → logprob: -1.3910690546035767
    3. 'to' → logprob: -2.016068935394287
    4. '_to' → logprob: -2.141068935394287
    5. '_' → logprob: -3.641068935394287
    6. '_parser' → logprob: -6.016068935394287
    7. 'def' → logprob: -6.641068935394287
    8. 'To' → logprob: -6.641068935394287
    9. 'token' → logprob: -7.266068935394287
    10. '_tokens' → logprob: -7.516068935394287

Token 510: ' grammar' (ID: 41735)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07561495900154114
    2. ' the' → logprob: -3.3256149291992188
    3. '``' → logprob: -4.575614929199219
    4. '#' → logprob: -4.950614929199219
    5. 'grammar' → logprob: -5.075614929199219
    6. 'expression' → logprob: -5.700614929199219
    7. '```' → logprob: -6.575614929199219
    8. ''''
' → logprob: -6.700614929199219
    9. '
' → logprob: -6.825614929199219
    10. 'expr' → logprob: -6.825614929199219

Token 511: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2624921798706055
    2. 'def' → logprob: -1.8874921798706055
    3. ':' → logprob: -2.5124921798706055
    4. '(' → logprob: -2.8874921798706055
    5. ''' → logprob: -3.0124921798706055
    6. '(
' → logprob: -3.2624921798706055
    7. '_token' → logprob: -3.3874921798706055
    8. 'tokens' → logprob: -3.3874921798706055
    9. '_tokens' → logprob: -3.5124921798706055
    10. '

' → logprob: -3.5124921798706055

Token 512: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.809302806854248
    2. 'def' → logprob: -0.934302806854248
    3. '(
' → logprob: -2.059302806854248
    4. '(' → logprob: -4.934302806854248
    5. '#' → logprob: -5.059302806854248
    6. '
' → logprob: -5.184302806854248
    7. 'import' → logprob: -5.809302806854248
    8. 'tokens' → logprob: -6.059302806854248
    9. '[
' → logprob: -6.184302806854248
    10. 'token' → logprob: -6.309302806854248

Token 513: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21171560883522034
    2. 'class' → logprob: -1.961715579032898
    3. '(
' → logprob: -3.4617156982421875
    4. '
' → logprob: -5.8367156982421875
    5. '#' → logprob: -5.9617156982421875
    6. 'import' → logprob: -6.2117156982421875
    7. '"""
' → logprob: -6.5867156982421875
    8. '(' → logprob: -6.5867156982421875
    9. 'token' → logprob: -7.0867156982421875
    10. '"' → logprob: -7.2117156982421875

Token 514: ' Grammar' (ID: 104879)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6543431878089905
    2. 'class' → logprob: -0.7793431878089905
    3. 'def' → logprob: -4.279343128204346
    4. 'grammar' → logprob: -6.404343128204346
    5. 'expr' → logprob: -6.654343128204346
    6. '
' → logprob: -6.904343128204346
    7. 'We' → logprob: -7.029343128204346
    8. 'tokens' → logprob: -7.404343128204346
    9. 'token' → logprob: -8.029343605041504
    10. 'The' → logprob: -8.529343605041504

Token 515: ' expressions' (ID: 43578)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20880407094955444
    2. ' =' → logprob: -2.583804130554199
    3. ':' → logprob: -2.708804130554199
    4. '=
' → logprob: -4.208804130554199
    5. ':
' → logprob: -4.458804130554199
    6. '#' → logprob: -4.583804130554199
    7. 'is' → logprob: -6.458804130554199
    8. ' is' → logprob: -6.708804130554199
    9. 'tokens' → logprob: -7.083804130554199
    10. '```' → logprob: -7.083804130554199

Token 516: ' include' (ID: 3931)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1734805554151535
    2. ' =' → logprob: -2.29848051071167
    3. ':' → logprob: -3.17348051071167
    4. '=
' → logprob: -4.79848051071167
    5. ':
' → logprob: -5.54848051071167
    6. '```' → logprob: -7.04848051071167
    7. '#' → logprob: -7.17348051071167
    8. '_tokens' → logprob: -8.173480987548828
    9. 's' → logprob: -8.298480987548828
    10. ''s' → logprob: -8.548480987548828

Token 517: ' neg' (ID: 4528)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1283329725265503
    2. '``' → logprob: -2.25333309173584
    3. 'expr' → logprob: -2.37833309173584
    4. 'term' → logprob: -2.37833309173584
    5. 'digits' → logprob: -3.00333309173584
    6. '```' → logprob: -3.25333309173584
    7. 'addition' → logprob: -3.25333309173584
    8. 'digit' → logprob: -3.62833309173584
    9. 'expression' → logprob: -3.87833309173584
    10. '
' → logprob: -4.25333309173584

Token 518: 'ation' (ID: 387)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.8430702686309814
    2. 'expr' → logprob: -0.9680702686309814
    3. 'ation' → logprob: -2.2180702686309814
    4. '_expr' → logprob: -3.4680702686309814
    5. 'Expr' → logprob: -5.343070030212402
    6. 'ex' → logprob: -5.468070030212402
    7. 's' → logprob: -5.593070030212402
    8. '=' → logprob: -5.718070030212402
    9. '()' → logprob: -5.968070030212402
    10. ')' → logprob: -6.093070030212402

Token 519: ' prefix' (ID: 18633)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.086445689201355
    2. '
' → logprob: -1.711445689201355
    3. '_' → logprob: -2.3364458084106445
    4. ' =' → logprob: -2.3364458084106445
    5. ',' → logprob: -3.2114458084106445
    6. '```' → logprob: -3.2114458084106445
    7. '_
' → logprob: -3.7114458084106445
    8. '_token' → logprob: -4.3364458084106445
    9. ',
' → logprob: -4.4614458084106445
    10. '``' → logprob: -4.4614458084106445

Token 520: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.397801011800766
    2. 'e' → logprob: -3.147800922393799
    3. 'token' → logprob: -3.147800922393799
    4. '
' → logprob: -3.772800922393799
    5. 'expr' → logprob: -3.897800922393799
    6. ' ' → logprob: -4.022800922393799
    7. ' =' → logprob: -4.272800922393799
    8. '_' → logprob: -4.272800922393799
    9. 'not' → logprob: -4.272800922393799
    10. ''' → logprob: -4.522800922393799

Token 521: ' *,' (ID: 27655)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.15274932980537415
    2. 'factor' → logprob: -2.4027493000030518
    3. 'multip' → logprob: -3.9027493000030518
    4. '#' → logprob: -4.402749538421631
    5. ' term' → logprob: -5.402749538421631
    6. ' factor' → logprob: -6.027749538421631
    7. 'binary' → logprob: -6.152749538421631
    8. 'addition' → logprob: -6.402749538421631
    9. 'mul' → logprob: -6.527749538421631
    10. ' multiplication' → logprob: -6.902749538421631

Token 522: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13745447993278503
    2. '+,' → logprob: -3.7624545097351074
    3. ' +' → logprob: -3.7624545097351074
    4. '/' → logprob: -3.8874545097351074
    5. '|' → logprob: -4.637454509735107
    6. 'term' → logprob: -4.637454509735107
    7. 'factor' → logprob: -4.887454509735107
    8. ' /' → logprob: -5.012454509735107
    9. '(' → logprob: -5.512454509735107
    10. ',' → logprob: -5.762454509735107

Token 523: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1761643886566162
    2. 'expr' → logprob: -1.1761643886566162
    3. 'expression' → logprob: -2.301164388656616
    4. 'ression' → logprob: -2.551164388656616
    5. ' ' → logprob: -3.551164388656616
    6. '_expr' → logprob: -3.801164388656616
    7. ')' → logprob: -4.176164627075195
    8. '_expression' → logprob: -4.301164627075195
    9. 'pression' → logprob: -4.426164627075195
    10. ' =' → logprob: -4.676164627075195

Token 524: ' -,' (ID: 83064)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04678567498922348
    2. ' -' → logprob: -3.671785593032837
    3. ' and' → logprob: -5.296785831451416
    4. ',' → logprob: -5.421785831451416
    5. '-,' → logprob: -5.671785831451416
    6. ' ' → logprob: -6.546785831451416
    7. '=' → logprob: -6.796785831451416
    8. ' -,' → logprob: -6.921785831451416
    9. 'and' → logprob: -7.171785831451416
    10. '-
' → logprob: -7.171785831451416

Token 525: ' parent' (ID: 5980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4316461086273193
    2. '/' → logprob: -1.5566461086273193
    3. '=' → logprob: -2.4316461086273193
    4. '|' → logprob: -2.6816461086273193
    5. ' =' → logprob: -2.6816461086273193
    6. ',' → logprob: -2.8066461086273193
    7. ' and' → logprob: -3.0566461086273193
    8. ' /' → logprob: -3.0566461086273193
    9. ' ,' → logprob: -3.4316461086273193
    10. '  ' → logprob: -3.6816461086273193

Token 526: 'hesis' (ID: 101333)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.039864517748355865
    2. 'hesis' → logprob: -3.2898645401000977
    3. 'h' → logprob: -6.789864540100098
    4. 'hes' → logprob: -7.289864540100098
    5. 'hs' → logprob: -11.789864540100098
    6. ')' → logprob: -13.164864540100098
    7. 'he' → logprob: -13.414864540100098
    8. '#' → logprob: -13.789864540100098
    9. 'hesia' → logprob: -14.789864540100098
    10. 'es' → logprob: -15.039864540100098

Token 527: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0523773431777954
    2. 's' → logprob: -1.4273773431777954
    3. ',' → logprob: -2.177377223968506
    4. ')' → logprob: -2.302377223968506
    5. '(
' → logprob: -3.552377223968506
    6. ':' → logprob: -3.802377223968506
    7. ',
' → logprob: -3.927377223968506
    8. '#' → logprob: -4.427377223968506
    9. 'expr' → logprob: -4.677377223968506
    10. '(' → logprob: -4.677377223968506

Token 528: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4932049512863159
    2. 'and' → logprob: -1.868204951286316
    3. ' and' → logprob: -1.993204951286316
    4. ' #' → logprob: -3.9932050704956055
    5. ''' → logprob: -4.4932050704956055
    6. ')' → logprob: -4.7432050704956055
    7. 'or' → logprob: -5.1182050704956055
    8. '=' → logprob: -5.2432050704956055
    9. 'def' → logprob: -5.2432050704956055
    10. ' ' → logprob: -5.2432050704956055

Token 529: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8280251026153564
    2. 'and' → logprob: -1.4530251026153564
    3. ' and' → logprob: -2.0780251026153564
    4. ')' → logprob: -3.2030251026153564
    5. ' #' → logprob: -3.5780251026153564
    6. 'def' → logprob: -3.5780251026153564
    7. ''' → logprob: -3.7030251026153564
    8. '=' → logprob: -4.703024864196777
    9. 'or' → logprob: -4.953024864196777
    10. ' ' → logprob: -5.078024864196777

Token 530: ' numbers' (ID: 8663)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19304288923740387
    2. 'digit' → logprob: -3.1930429935455322
    3. ' and' → logprob: -3.6930429935455322
    4. ' ' → logprob: -4.068042755126953
    5. 'digits' → logprob: -4.068042755126953
    6. 'and' → logprob: -4.193042755126953
    7. ' =' → logprob: -4.568042755126953
    8. '=
' → logprob: -4.818042755126953
    9. '0' → logprob: -4.943042755126953
    10. '#' → logprob: -5.068042755126953

Token 531: ' are' (ID: 553)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9116830825805664
    2. ',' → logprob: -1.1616830825805664
    3. ' =' → logprob: -2.5366830825805664
    4. '=' → logprob: -3.4116830825805664
    5. ')' → logprob: -3.5366830825805664
    6. '_' → logprob: -3.7866830825805664
    7. ',
' → logprob: -4.036683082580566
    8. '
' → logprob: -4.286683082580566
    9. '<|end|>' → logprob: -4.536683082580566
    10. '(' → logprob: -4.661683082580566

Token 532: ' binary' (ID: 15600)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2675423622131348
    2. ''' → logprob: -2.0175423622131348
    3. 'digits' → logprob: -2.1425423622131348
    4. '('' → logprob: -2.6425423622131348
    5. ' '' → logprob: -2.8925423622131348
    6. '[' → logprob: -2.8925423622131348
    7. ' digits' → logprob: -3.2675423622131348
    8. 'digit' → logprob: -3.2675423622131348
    9. '1' → logprob: -3.6425423622131348
    10. 'single' → logprob: -3.8925423622131348

Token 533: ' numbers' (ID: 8663)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7792522311210632
    2. '_' → logprob: -1.529252290725708
    3. ')' → logprob: -2.154252290725708
    4. '_token' → logprob: -2.904252290725708
    5. '
' → logprob: -3.779252290725708
    6. ''' → logprob: -3.779252290725708
    7. '<|end|>' → logprob: -4.154252052307129
    8. '_tokens' → logprob: -4.279252052307129
    9. ' ' → logprob: -4.904252052307129
    10. '[' → logprob: -4.904252052307129

Token 534: ' starting' (ID: 8601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.293630838394165
    2. ':' → logprob: -1.918630838394165
    3. '\n' → logprob: -2.168630838394165
    4. '(
' → logprob: -2.418630838394165
    5. '
' → logprob: -2.543630838394165
    6. '(' → logprob: -2.668630838394165
    7. '\' → logprob: -3.043630838394165
    8. ''' → logprob: -3.293630838394165
    9. '```' → logprob: -3.668630838394165
    10. '[
' → logprob: -4.043630599975586

Token 535: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3095981180667877
    2. ' with' → logprob: -2.059598207473755
    3. 'from' → logprob: -2.184598207473755
    4. ' from' → logprob: -4.559597969055176
    5. ' at' → logprob: -4.559597969055176
    6. 'at' → logprob: -5.809597969055176
    7. ' ' → logprob: -7.684597969055176
    8. ' =' → logprob: -7.934597969055176
    9. '_' → logprob: -8.434597969055176
    10. '[' → logprob: -8.559597969055176

Token 536: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15726478397846222
    2. '1' → logprob: -2.2822647094726562
    3. '0' → logprob: -4.157264709472656
    4. ' '' → logprob: -4.157264709472656
    5. ' ' → logprob: -5.657264709472656
    6. '`' → logprob: -6.407264709472656
    7. 'digit' → logprob: -6.782264709472656
    8. 'non' → logprob: -6.907264709472656
    9. '"' → logprob: -7.032264709472656
    10. ' non' → logprob: -7.157264709472656

Token 537: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17803575098514557
    2. '1' → logprob: -2.0530357360839844
    3. '0' → logprob: -4.678035736083984
    4. 'digit' → logprob: -4.928035736083984
    5. '('' → logprob: -5.303035736083984
    6. ' '' → logprob: -5.928035736083984
    7. 'non' → logprob: -5.928035736083984
    8. '[' → logprob: -6.428035736083984
    9. '(' → logprob: -6.803035736083984
    10. '"' → logprob: -6.803035736083984

Token 538: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.474780410528183
    2. '_' → logprob: -2.224780321121216
    3. '
' → logprob: -3.099780321121216
    4. '(
' → logprob: -3.224780321121216
    5. ''' → logprob: -3.349780321121216
    6. '0' → logprob: -3.849780321121216
    7. ':' → logprob: -4.224780559539795
    8. '[
' → logprob: -4.349780559539795
    9. '[' → logprob: -4.599780559539795
    10. '(' → logprob: -4.724780559539795

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004319622181355953
    2. ' or' → logprob: -5.879319667816162
    3. 'or' → logprob: -7.004319667816162
    4. ' ' → logprob: -7.629319667816162
    5. '
' → logprob: -9.879319190979004
    6. 'binary' → logprob: -10.879319190979004
    7. ''' → logprob: -11.004319190979004
    8. 'b' → logprob: -12.254319190979004
    9. 'digit' → logprob: -12.754319190979004
    10. '0' → logprob: -12.879319190979004

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005513638607226312
    2. ''' → logprob: -8.375551223754883
    3. ' or' → logprob: -9.000551223754883
    4. ' ' → logprob: -9.625551223754883
    5. 'binary' → logprob: -10.750551223754883
    6. 'b' → logprob: -11.000551223754883
    7. 'or' → logprob: -11.500551223754883
    8. '
' → logprob: -11.500551223754883
    9. 'digit' → logprob: -11.500551223754883
    10. '('' → logprob: -11.625551223754883

Token 541: ' (' (ID: 350)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.8603346943855286
    2. 'def' → logprob: -1.1103346347808838
    3. '(' → logprob: -2.985334634780884
    4. '
' → logprob: -2.985334634780884
    5. '[
' → logprob: -3.485334634780884
    6. ':' → logprob: -3.985334634780884
    7. ''' → logprob: -4.735334873199463
    8. '\n' → logprob: -4.735334873199463
    9. '[' → logprob: -4.985334873199463
    10. 'import' → logprob: -5.110334873199463

Token 542: 'leading' (ID: 51812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2944034337997437
    2. '\n' → logprob: -1.4194034337997437
    3. ',' → logprob: -2.044403553009033
    4. '0' → logprob: -2.919403553009033
    5. ',
' → logprob: -3.544403553009033
    6. '+
' → logprob: -3.544403553009033
    7. '#' → logprob: -3.919403553009033
    8. ')
' → logprob: -3.919403553009033
    9. 'digit' → logprob: -3.919403553009033
    10. '|' → logprob: -4.044403553009033

Token 543: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.3463648557662964
    2. 'zeros' → logprob: -2.096364974975586
    3. ')' → logprob: -2.846364974975586
    4. '_' → logprob: -3.346364974975586
    5. 'zero' → logprob: -3.721364974975586
    6. ' zero' → logprob: -4.721364974975586
    7. '0' → logprob: -4.971364974975586
    8. 'digit' → logprob: -5.221364974975586
    9. '```' → logprob: -5.471364974975586
    10. 'digits' → logprob: -5.471364974975586

Token 544: ' only' (ID: 1606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31138744950294495
    2. ' are' → logprob: -1.8113874197006226
    3. ')*' → logprob: -3.811387538909912
    4. ' not' → logprob: -4.436387538909912
    5. ' or' → logprob: -4.561387538909912
    6. 's' → logprob: -4.686387538909912
    7. '|' → logprob: -4.686387538909912
    8. ',' → logprob: -5.061387538909912
    9. ' is' → logprob: -5.186387538909912
    10. '+' → logprob: -5.936387538909912

Token 545: ' allowed' (ID: 9279)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.33091673254966736
    2. ')' → logprob: -2.2059166431427
    3. '```' → logprob: -3.5809166431427
    4. 'are' → logprob: -3.8309166431427
    5. '
' → logprob: -3.9559166431427
    6. ' or' → logprob: -4.330916881561279
    7. 'allowed' → logprob: -4.455916881561279
    8. ' is' → logprob: -5.080916881561279
    9. '=' → logprob: -5.330916881561279
    10. '\n' → logprob: -5.330916881561279

Token 546: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45754775404930115
    2. ' or' → logprob: -1.5825477838516235
    3. ' are' → logprob: -2.957547664642334
    4. ' is' → logprob: -3.457547664642334
    5. 'or' → logprob: -3.707547664642334
    6. ' )' → logprob: -4.832547664642334
    7. 'allowed' → logprob: -4.832547664642334
    8. ',' → logprob: -5.082547664642334
    9. ' allowed' → logprob: -5.582547664642334
    10. 'are' → logprob: -5.707547664642334

Token 547: ' number' (ID: 2086)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -2.0545237064361572
    2. 'next' → logprob: -2.0545237064361572
    3. ' the' → logprob: -2.3045237064361572
    4. ' next' → logprob: -2.3045237064361572
    5. 'not' → logprob: -2.4295237064361572
    6. 'digit' → logprob: -2.4295237064361572
    7. 'token' → logprob: -2.5545237064361572
    8. 'number' → logprob: -2.9295237064361572
    9. ' not' → logprob: -2.9295237064361572
    10. '```' → logprob: -3.3045237064361572

Token 548: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5141749382019043
    2. ')' → logprob: -2.0141749382019043
    3. '[' → logprob: -2.0141749382019043
    4. 's' → logprob: -2.0141749382019043
    5. '```' → logprob: -2.2641749382019043
    6. '
' → logprob: -3.1391749382019043
    7. '==' → logprob: -3.3891749382019043
    8. ' continues' → logprob: -3.5141749382019043
    9. ' not' → logprob: -3.7641749382019043
    10. '=' → logprob: -3.7641749382019043

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4290066957473755
    2. ''' → logprob: -1.8040066957473755
    3. '1' → logprob: -2.054006576538086
    4. 'single' → logprob: -3.554006576538086
    5. '"' → logprob: -5.429006576538086
    6. 'just' → logprob: -5.929006576538086
    7. 'only' → logprob: -5.929006576538086
    8. ' '' → logprob: -6.304006576538086
    9. 'exact' → logprob: -6.304006576538086
    10. 'one' → logprob: -6.554006576538086

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016797298565506935
    2. ''' → logprob: -4.516797065734863
    3. '1' → logprob: -6.141797065734863
    4. 'single' → logprob: -6.766797065734863
    5. '"' → logprob: -6.891797065734863
    6. 'exact' → logprob: -8.016797065734863
    7. 'zero' → logprob: -8.266797065734863
    8. 'only' → logprob: -8.766797065734863
    9. 'just' → logprob: -9.016797065734863
    10. 'not' → logprob: -9.266797065734863

Token 551: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5803311467170715
    2. ')
' → logprob: -1.4553310871124268
    3. '')' → logprob: -2.0803310871124268
    4. 'def' → logprob: -3.8303310871124268
    5. '')
' → logprob: -4.705331325531006
    6. ''' → logprob: -4.830331325531006
    7. ' or' → logprob: -4.955331325531006
    8. '#' → logprob: -5.330331325531006
    9. '
' → logprob: -5.330331325531006
    10. '0' → logprob: -5.580331325531006

Token 552: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7241950035095215
    2. '(
' → logprob: -1.7241950035095215
    3. '
' → logprob: -2.5991950035095215
    4. '\n' → logprob: -3.0991950035095215
    5. '(' → logprob: -3.2241950035095215
    6. '\' → logprob: -3.2241950035095215
    7. ''\' → logprob: -3.8491950035095215
    8. ''' → logprob: -3.9741950035095215
    9. 'import' → logprob: -4.0991950035095215
    10. '

' → logprob: -4.4741950035095215

Token 553: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15177462995052338
    2. '(
' → logprob: -3.2767746448516846
    3. 'class' → logprob: -3.6517746448516846
    4. '
' → logprob: -3.9017746448516846
    5. ''\' → logprob: -3.9017746448516846
    6. ''' → logprob: -4.7767744064331055
    7. '"' → logprob: -5.6517744064331055
    8. '"\' → logprob: -5.9017744064331055
    9. '0' → logprob: -6.0267744064331055
    10. '(' → logprob: -6.0267744064331055

Token 554: ' Return' (ID: 6318)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20501048862934113
    2. '\n' → logprob: -3.330010414123535
    3. 'class' → logprob: -3.330010414123535
    4. '(
' → logprob: -3.580010414123535
    5. '
' → logprob: -3.955010414123535
    6. '\' → logprob: -4.205010414123535
    7. '(' → logprob: -4.580010414123535
    8. ''\' → logprob: -4.830010414123535
    9. 'import' → logprob: -4.955010414123535
    10. 'tokens' → logprob: -5.580010414123535

Token 555: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5269020199775696
    2. '<|end|>' → logprob: -1.1519019603729248
    3. ' ' → logprob: -3.901901960372925
    4. '<|end|>' → logprob: -4.276902198791504
    5. '_token' → logprob: -4.401902198791504
    6. '_' → logprob: -4.651902198791504
    7. '_code' → logprob: -5.526902198791504
    8. 'import' → logprob: -5.526902198791504
    9. 'token' → logprob: -5.901902198791504
    10. '```' → logprob: -5.901902198791504

Token 556: ' total' (ID: 3609)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5727941989898682
    2. 'number' → logprob: -0.9477941989898682
    3. 'count' → logprob: -4.072793960571289
    4. ' next' → logprob: -4.197793960571289
    5. 'def' → logprob: -4.697793960571289
    6. ' count' → logprob: -5.947793960571289
    7. 'next' → logprob: -6.322793960571289
    8. ' total' → logprob: -6.447793960571289
    9. 'total' → logprob: -7.197793960571289
    10. 'final' → logprob: -9.447793960571289

Token 557: ' count' (ID: 3605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9748963117599487
    2. '_token' → logprob: -1.4748963117599487
    3. '_tokens' → logprob: -2.4748964309692383
    4. '<|end|>' → logprob: -2.4748964309692383
    5. '_' → logprob: -2.7248964309692383
    6. '
' → logprob: -2.9748964309692383
    7. 'tokens' → logprob: -4.099896430969238
    8. 'token' → logprob: -4.349896430969238
    9. ' ' → logprob: -4.349896430969238
    10. 's' → logprob: -4.474896430969238

Token 558: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5901570916175842
    2. ':' → logprob: -1.9651570320129395
    3. 'import' → logprob: -2.5901570320129395
    4. '(' → logprob: -2.5901570320129395
    5. '
' → logprob: -3.5901570320129395
    6. '_' → logprob: -3.9651570320129395
    7. '(
' → logprob: -4.2151570320129395
    8. '```' → logprob: -4.4651570320129395
    9. '#' → logprob: -4.5901570320129395
    10. '\' → logprob: -4.8401570320129395

Token 559: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7025477290153503
    2. ' valid' → logprob: -0.9525477290153503
    3. 'possible' → logprob: -2.702547788619995
    4. ' possible' → logprob: -3.827547788619995
    5. ' the' → logprob: -4.577547550201416
    6. 'the' → logprob: -4.952547550201416
    7. 'original' → logprob: -5.702547550201416
    8. 'solutions' → logprob: -6.077547550201416
    9. ' original' → logprob: -6.202547550201416
    10. ' solutions' → logprob: -6.327547550201416

Token 560: ' original' (ID: 4756)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.9333601593971252
    2. '_tokens' → logprob: -1.0583600997924805
    3. 'tokens' → logprob: -1.9333600997924805
    4. 'token' → logprob: -3.0583600997924805
    5. ' tokens' → logprob: -4.0583600997924805
    6. '
' → logprob: -5.0583600997924805
    7. '\n' → logprob: -5.0583600997924805
    8. ' ' → logprob: -5.0583600997924805
    9. ')' → logprob: -5.1833600997924805
    10. '_' → logprob: -5.3083600997924805

Token 561: ' equations' (ID: 61524)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1813855171203613
    2. '_token' → logprob: -1.4313855171203613
    3. '_char' → logprob: -1.8063855171203613
    4. '_chars' → logprob: -1.8063855171203613
    5. '_tokens' → logprob: -2.6813855171203613
    6. ' _' → logprob: -4.181385517120361
    7. 'tokens' → logprob: -5.431385517120361
    8. ')' → logprob: -5.556385517120361
    9. ' ' → logprob: -5.681385517120361
    10. '\n' → logprob: -5.681385517120361

Token 562: ' matching' (ID: 20238)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8983895778656006
    2. ':' → logprob: -1.1483895778656006
    3. '(' → logprob: -2.2733895778656006
    4. 'import' → logprob: -3.0233895778656006
    5. '(
' → logprob: -3.5233895778656006
    6. '\' → logprob: -4.02338981628418
    7. '
' → logprob: -4.52338981628418
    8. '\n' → logprob: -4.89838981628418
    9. ':
' → logprob: -5.02338981628418
    10. ',' → logprob: -5.39838981628418

Token 563: ' encrypted' (ID: 47764)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.6933095455169678
    2. '_' → logprob: -1.8183095455169678
    3. ''' → logprob: -2.1933095455169678
    4. ' the' → logprob: -2.5683095455169678
    5. '\' → logprob: -2.6933095455169678
    6. ':' → logprob: -2.9433095455169678
    7. '(' → logprob: -3.3183095455169678
    8. 'input' → logprob: -3.5683095455169678
    9. '```' → logprob: -3.6933095455169678
    10. 's' → logprob: -3.8183095455169678

Token 564: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5213697552680969
    2. ''' → logprob: -2.146369695663452
    3. '
' → logprob: -2.771369695663452
    4. '\' → logprob: -3.021369695663452
    5. ' _' → logprob: -3.771369695663452
    6. '_token' → logprob: -4.146369934082031
    7. '\n' → logprob: -4.146369934082031
    8. '```' → logprob: -4.146369934082031
    9. '(' → logprob: -4.396369934082031
    10. '[' → logprob: -4.396369934082031

Token 565: '.

' (ID: 364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7894571423530579
    2. 'def' → logprob: -1.664457082748413
    3. '(
' → logprob: -1.789457082748413
    4. ':' → logprob: -2.664457082748413
    5. 'import' → logprob: -3.164457082748413
    6. ''' → logprob: -4.289457321166992
    7. '\' → logprob: -4.789457321166992
    8. '('\' → logprob: -5.164457321166992
    9. '('' → logprob: -5.164457321166992
    10. '
' → logprob: -5.289457321166992

Token 566: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009017512202262878
    2. 'import' → logprob: -5.509017467498779
    3. '(' → logprob: -7.134017467498779
    4. '\n' → logprob: -7.134017467498779
    5. 'letters' → logprob: -7.259017467498779
    6. '
' → logprob: -7.634017467498779
    7. 'class' → logprob: -7.634017467498779
    8. '\' → logprob: -8.009017944335938
    9. '(
' → logprob: -8.009017944335938
    10. 'n' → logprob: -8.759017944335938

Token 567: ' Original' (ID: 21193)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2944825291633606
    2. 'letters' → logprob: -1.9194824695587158
    3. 'tokens' → logprob: -3.419482469558716
    4. 'class' → logprob: -3.919482469558716
    5. 'allowed' → logprob: -4.044482707977295
    6. 'import' → logprob: -4.419482707977295
    7. '#' → logprob: -5.544482707977295
    8. 'code' → logprob: -5.669482707977295
    9. 'pos' → logprob: -5.919482707977295
    10. 'possible' → logprob: -6.294482707977295

Token 568: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.17797929048538208
    2. '_char' → logprob: -2.9279792308807373
    3. '_code' → logprob: -3.8029792308807373
    4. ' =' → logprob: -4.052979469299316
    5. 'chars' → logprob: -4.052979469299316
    6. 'def' → logprob: -4.302979469299316
    7. '_input' → logprob: -4.552979469299316
    8. '_token' → logprob: -5.427979469299316
    9. '_' → logprob: -5.677979469299316
    10. 'char' → logprob: -5.927979469299316

Token 569: ' set' (ID: 920)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48128238320350647
    2. '=' → logprob: -0.9812823534011841
    3. 's' → logprob: -5.1062822341918945
    4. '_chars' → logprob: -8.106282234191895
    5. 'S' → logprob: -8.606282234191895
    6. '=['' → logprob: -8.856282234191895
    7. '_set' → logprob: -9.606282234191895
    8. '_possible' → logprob: -9.856282234191895
    9. '_candidates' → logprob: -10.231282234191895
    10. 'set' → logprob: -10.231282234191895

Token 570: ' (' (ID: 350)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.3508830666542053
    2. 'OR' → logprob: -1.3508830070495605
    3. 'orig' → logprob: -3.4758830070495605
    4. ' ORIGINAL' → logprob: -6.1008830070495605
    5. ' original' → logprob: -7.1008830070495605
    6. '_original' → logprob: -7.2258830070495605
    7. '{'' → logprob: -7.9758830070495605
    8. 'allowed' → logprob: -8.100883483886719
    9. '_OR' → logprob: -8.225883483886719
    10. '_orig' → logprob: -8.600883483886719

Token 571: 'c' (ID: 66)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.06011996790766716
    2. ''' → logprob: -3.935119867324829
    3. '{' → logprob: -4.310120105743408
    4. 'original' → logprob: -4.560120105743408
    5. ' {'' → logprob: -5.310120105743408
    6. 'orig' → logprob: -5.935120105743408
    7. 'chars' → logprob: -6.310120105743408
    8. '"' → logprob: -6.810120105743408
    9. '{
' → logprob: -7.185120105743408
    10. '{"' → logprob: -7.310120105743408

Token 572: 'andidates' (ID: 38168)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1822967231273651
    2. ' =' → logprob: -1.8072967529296875
    3. 's' → logprob: -6.8072967529296875
    4. '={'' → logprob: -7.6822967529296875
    5. '='' → logprob: -8.307296752929688
    6. '{'' → logprob: -8.932296752929688
    7. ')' → logprob: -9.307296752929688
    8. '=['' → logprob: -9.307296752929688
    9. '=set' → logprob: -9.307296752929688
    10. '{' → logprob: -10.057296752929688

Token 573: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4344167411327362
    2. ' =' → logprob: -1.0594167709350586
    3. 'OR' → logprob: -5.684416770935059
    4. ':' → logprob: -7.559416770935059
    5. 'original' → logprob: -7.809416770935059
    6. '=
' → logprob: -8.684416770935059
    7. 'orig' → logprob: -8.809416770935059
    8. '_original' → logprob: -8.809416770935059
    9. '_OR' → logprob: -9.059416770935059
    10. '='' → logprob: -9.309416770935059

Token 574: ' letter' (ID: 10263)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2021968364715576
    2. 'original' → logprob: -1.4521968364715576
    3. 'orig' → logprob: -1.7021968364715576
    4. '{'' → logprob: -1.8271968364715576
    5. '"' → logprob: -2.9521968364715576
    6. ' original' → logprob: -3.2021968364715576
    7. ' {'' → logprob: -4.827197074890137
    8. ' '' → logprob: -5.202197074890137
    9. ' orig' → logprob: -5.452197074890137
    10. 'origin' → logprob: -5.827197074890137

Token 575: ' mapping' (ID: 22573)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02132919244468212
    2. '=' → logprob: -4.271329402923584
    3. ' =' → logprob: -5.146329402923584
    4. 'S' → logprob: -7.646329402923584
    5. ')' → logprob: -8.521328926086426
    6. '_set' → logprob: -8.646328926086426
    7. 'set' → logprob: -8.896328926086426
    8. ''s' → logprob: -9.896328926086426
    9. '='' → logprob: -10.021328926086426
    10. '_s' → logprob: -10.021328926086426

Token 576: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4370526075363159
    2. '=' → logprob: -1.062052607536316
    3. ':' → logprob: -5.1870527267456055
    4. 'original' → logprob: -7.9370527267456055
    5. '=['' → logprob: -8.562052726745605
    6. '='' → logprob: -8.562052726745605
    7. '=
' → logprob: -8.687052726745605
    8. 'orig' → logprob: -8.687052726745605
    9. '={'' → logprob: -8.812052726745605
    10. ')' → logprob: -8.812052726745605

Token 577: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.7086127400398254
    2. 'original' → logprob: -0.8336127400398254
    3. 'orig' → logprob: -2.7086126804351807
    4. ' ORIGINAL' → logprob: -5.83361291885376
    5. ' original' → logprob: -7.45861291885376
    6. 'c' → logprob: -7.70861291885376
    7. 'ORI' → logprob: -8.208612442016602
    8. 'allowed' → logprob: -8.208612442016602
    9. 'origin' → logprob: -8.458612442016602
    10. '_OR' → logprob: -8.583612442016602

Token 578: 'IG' (ID: 3205)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.13987524807453156
    2. 'SET' → logprob: -3.0148751735687256
    3. 'IGINAL' → logprob: -3.1398751735687256
    4. 'CH' → logprob: -4.889875411987305
    5. ' =' → logprob: -5.014875411987305
    6. 'OR' → logprob: -5.139875411987305
    7. '_CH' → logprob: -5.264875411987305
    8. '_OR' → logprob: -5.389875411987305
    9. '_SET' → logprob: -5.389875411987305
    10. '=' → logprob: -7.014875411987305

Token 579: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.014720684848725796
    2. '_OR' → logprob: -4.889720916748047
    3. 'CH' → logprob: -6.014720916748047
    4. ' =' → logprob: -6.264720916748047
    5. 'S' → logprob: -7.014720916748047
    6. '_CHAR' → logprob: -7.014720916748047
    7. '_SET' → logprob: -7.764720916748047
    8. '_chars' → logprob: -8.514720916748047
    9. 'OR' → logprob: -9.139720916748047
    10. '_C' → logprob: -10.014720916748047

Token 580: 'ARS' (ID: 25776)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.22821128368377686
    2. 'ARS' → logprob: -1.6032112836837769
    3. 'AR' → logprob: -6.228211402893066
    4. '_SET' → logprob: -7.478211402893066
    5. ' =' → logprob: -9.728211402893066
    6. '=' → logprob: -10.353211402893066
    7. 'ARSE' → logprob: -10.603211402893066
    8. 'SET' → logprob: -10.978211402893066
    9. '_CH' → logprob: -11.103211402893066
    10. 'AS' → logprob: -11.103211402893066

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269380897283554
    2. ' =' → logprob: -2.1269381046295166
    3. '=['' → logprob: -11.876937866210938
    4. '={'' → logprob: -13.751937866210938
    5. '='' → logprob: -14.001937866210938
    6. ' ' → logprob: -14.876937866210938
    7. ' ='' → logprob: -15.501937866210938
    8. '=
' → logprob: -16.126937866210938
    9. '="' → logprob: -16.251937866210938
    10. '=('' → logprob: -16.376937866210938

Token 582: ' ['' (ID: 5140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7823646664619446
    2. '['' → logprob: -0.9073646664619446
    3. '{'' → logprob: -3.0323646068573
    4. ' ['' → logprob: -3.1573646068573
    5. '"' → logprob: -3.4073646068573
    6. ' '' → logprob: -4.657364845275879
    7. ' {'' → logprob: -5.782364845275879
    8. 'set' → logprob: -6.532364845275879
    9. ' "' → logprob: -7.782364845275879
    10. ' set' → logprob: -8.157364845275879

Token 583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ''' → logprob: -10.000045776367188
    3. '\'' → logprob: -15.375045776367188
    4. '',' → logprob: -15.625045776367188
    5. '','' → logprob: -16.000045776367188
    6. '"' → logprob: -18.000045776367188
    7. ' ' → logprob: -18.125045776367188
    8. '']' → logprob: -18.625045776367188
    9. '`' → logprob: -19.250045776367188
    10. '('' → logprob: -19.875045776367188

Token 584: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.2528599798679352
    2. '',' → logprob: -1.5028599500656128
    3. ''' → logprob: -7.002860069274902
    4. '',
' → logprob: -11.377860069274902
    5. '',"' → logprob: -12.002860069274902
    6. '','','' → logprob: -13.752860069274902
    7. ','' → logprob: -14.752860069274902
    8. ',' → logprob: -14.877860069274902
    9. '','.' → logprob: -14.877860069274902
    10. ' ','' → logprob: -15.752860069274902

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.778209353797138e-05
    2. ''' → logprob: -9.625067710876465
    3. '','' → logprob: -13.750067710876465
    4. ' ' → logprob: -14.625067710876465
    5. '',' → logprob: -15.750067710876465
    6. '
' → logprob: -19.12506866455078
    7. ''s' → logprob: -20.00006866455078
    8. ' '' → logprob: -20.12506866455078
    9. '0' → logprob: -20.25006866455078
    10. ''''' → logprob: -20.25006866455078

Token 586: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.01869964227080345
    2. '',' → logprob: -4.018699645996094
    3. ',' → logprob: -8.768699645996094
    4. '','','' → logprob: -9.393699645996094
    5. '','=','' → logprob: -9.393699645996094
    6. '+' → logprob: -9.518699645996094
    7. '","+' → logprob: -10.643699645996094
    8. ''' → logprob: -10.893699645996094
    9. '(','' → logprob: -11.018699645996094
    10. ' ','' → logprob: -11.018699645996094

Token 587: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012378967367112637
    2. ''+' → logprob: -4.512379169464111
    3. ''' → logprob: -6.762379169464111
    4. '=' → logprob: -9.387378692626953
    5. '2' → logprob: -10.887378692626953
    6. '+',' → logprob: -10.887378692626953
    7. '+'' → logprob: -11.137378692626953
    8. '','' → logprob: -11.512378692626953
    9. '(' → logprob: -12.137378692626953
    10. '0' → logprob: -12.512378692626953

Token 588: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0025685220025479794
    2. ''-' → logprob: -6.25256872177124
    3. '',' → logprob: -7.75256872177124
    4. '-' → logprob: -8.502568244934082
    5. ''' → logprob: -13.252568244934082
    6. '','','' → logprob: -13.377568244934082
    7. ' ','' → logprob: -13.877568244934082
    8. ',' → logprob: -14.502568244934082
    9. '','.' → logprob: -15.002568244934082
    10. '-',' → logprob: -15.002568244934082

Token 589: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012047011114191264
    2. '-',' → logprob: -9.250120162963867
    3. ''-' → logprob: -10.750120162963867
    4. '-'' → logprob: -13.000120162963867
    5. '','' → logprob: -15.750120162963867
    6. '-'+' → logprob: -16.125120162963867
    7. '=' → logprob: -16.250120162963867
    8. ' -' → logprob: -16.750120162963867
    9. '-=' → logprob: -17.000120162963867
    10. '-
' → logprob: -17.375120162963867

Token 590: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0020003693643957376
    2. '',' → logprob: -6.252000331878662
    3. ''*' → logprob: -10.25200080871582
    4. ','' → logprob: -11.50200080871582
    5. '',"' → logprob: -12.00200080871582
    6. '','','' → logprob: -12.00200080871582
    7. ',' → logprob: -12.00200080871582
    8. '','=','' → logprob: -13.00200080871582
    9. '*' → logprob: -13.50200080871582
    10. '',
' → logprob: -13.62700080871582

Token 591: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.553032628493384e-05
    2. ''*' → logprob: -9.500075340270996
    3. '','' → logprob: -14.250075340270996
    4. '(','' → logprob: -17.375076293945312
    5. '('*' → logprob: -17.875076293945312
    6. ''' → logprob: -18.125076293945312
    7. '*,' → logprob: -19.125076293945312
    8. ')','' → logprob: -19.625076293945312
    9. ' '*' → logprob: -20.500076293945312
    10. '',' → logprob: -21.125076293945312

Token 592: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.02847498096525669
    2. '(','' → logprob: -4.278474807739258
    3. '',' → logprob: -4.653474807739258
    4. '(',' → logprob: -5.403474807739258
    5. ')','' → logprob: -9.403474807739258
    6. ''' → logprob: -10.528474807739258
    7. '','','' → logprob: -11.028474807739258
    8. ' ','' → logprob: -11.653474807739258
    9. ',' → logprob: -11.653474807739258
    10. '(' → logprob: -11.778474807739258

Token 593: '(',' (ID: 30548)
  Prédit: '(','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(',' → logprob: -0.6851605176925659
    2. '('' → logprob: -1.435160517692566
    3. '(','' → logprob: -1.435160517692566
    4. '(' → logprob: -4.0601606369018555
    5. ''' → logprob: -6.0601606369018555
    6. '(
' → logprob: -9.060160636901855
    7. '(',',' → logprob: -9.560160636901855
    8. '(

' → logprob: -10.560160636901855
    9. '=' → logprob: -10.935160636901855
    10. '('='' → logprob: -11.810160636901855

Token 594: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.3663626305060461e-05
    2. ' ')' → logprob: -11.50001335144043
    3. ')' → logprob: -12.62501335144043
    4. '")' → logprob: -16.50001335144043
    5. ''),' → logprob: -16.75001335144043
    6. ''' → logprob: -17.50001335144043
    7. '')]' → logprob: -17.62501335144043
    8. '']' → logprob: -17.75001335144043
    9. '')"' → logprob: -18.50001335144043
    10. ')'' → logprob: -18.50001335144043

Token 595: '','=' (ID: 133395)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.00958927907049656
    2. '','=' → logprob: -5.134589195251465
    3. ',' → logprob: -6.259589195251465
    4. '','=','' → logprob: -7.384589195251465
    5. ''=' → logprob: -7.759589195251465
    6. ''' → logprob: -7.759589195251465
    7. '',' → logprob: -8.884589195251465
    8. '','' → logprob: -9.759589195251465
    9. '=' → logprob: -10.259589195251465
    10. ',"' → logprob: -11.759589195251465

Token 596: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.3656102120876312
    2. '','' → logprob: -1.7406102418899536
    3. '',' → logprob: -2.240610122680664
    4. ']' → logprob: -4.365610122680664
    5. ''' → logprob: -4.615610122680664
    6. ','' → logprob: -6.990610122680664
    7. ')' → logprob: -7.865610122680664
    8. '','=' → logprob: -8.740610122680664
    9. '')' → logprob: -9.115610122680664
    10. ',' → logprob: -9.365610122680664

Token 597: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1806920766830444
    2. '#' → logprob: -1.5556920766830444
    3. ')' → logprob: -2.305692195892334
    4. 'allowed' → logprob: -2.805692195892334
    5. 'possible' → logprob: -3.430692195892334
    6. ',' → logprob: -3.555692195892334
    7. '9' → logprob: -3.555692195892334
    8. ']' → logprob: -3.680692195892334
    9. '_' → logprob: -3.805692195892334
    10. '
' → logprob: -3.805692195892334

Token 598: ' Parse' (ID: 26701)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.41182541847229
    2. 'OR' → logprob: -1.53682541847229
    3. '#' → logprob: -1.78682541847229
    4. ''' → logprob: -2.66182541847229
    5. ']' → logprob: -3.16182541847229
    6. 'import' → logprob: -3.28682541847229
    7. '[' → logprob: -3.66182541847229
    8. 'orig' → logprob: -3.78682541847229
    9. 'def' → logprob: -3.91182541847229
    10. '+' → logprob: -3.91182541847229

Token 599: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41775235533714294
    2. 'r' → logprob: -1.9177523851394653
    3. 'class' → logprob: -1.9177523851394653
    4. '
' → logprob: -4.042752265930176
    5. 'import' → logprob: -5.417752265930176
    6. 'tokens' → logprob: -5.667752265930176
    7. ')' → logprob: -5.792752265930176
    8. 'OR' → logprob: -5.792752265930176
    9. ' =' → logprob: -6.292752265930176
    10. '#' → logprob: -6.417752265930176

Token 600: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.2074410766363144
    2. 'eval' → logprob: -1.7074410915374756
    3. 'token' → logprob: -5.2074408531188965
    4. '#' → logprob: -8.207441329956055
    5. ' evaluate' → logprob: -9.332441329956055
    6. 'validate' → logprob: -9.832441329956055
    7. 'def' → logprob: -10.457441329956055
    8. 'count' → logprob: -11.082441329956055
    9. 'check' → logprob: -11.832441329956055
    10. ' eval' → logprob: -11.832441329956055

Token 601: ' structure' (ID: 8866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7175509333610535
    2. 'class' → logprob: -0.7175509333610535
    3. '#' → logprob: -4.342550754547119
    4. '
' → logprob: -5.217550754547119
    5. 'tokens' → logprob: -7.092550754547119
    6. 'import' → logprob: -7.217550754547119
    7. 'token' → logprob: -7.342550754547119
    8. 'from' → logprob: -7.467550754547119
    9. 'code' → logprob: -7.592550754547119
    10. 'digits' → logprob: -7.717550754547119

Token 602: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01205936074256897
    2. 'def' → logprob: -5.137059211730957
    3. '(
' → logprob: -5.887059211730957
    4. '#' → logprob: -7.012059211730957
    5. '
' → logprob: -7.012059211730957
    6. 'import' → logprob: -7.887059211730957
    7. ':' → logprob: -8.387059211730957
    8. 'from' → logprob: -9.137059211730957
    9. '[
' → logprob: -9.137059211730957
    10. ':
' → logprob: -9.262059211730957

Token 603: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.015742115676403046
    2. 'def' → logprob: -4.265742301940918
    3. '#' → logprob: -6.765742301940918
    4. 'import' → logprob: -9.515742301940918
    5. '
' → logprob: -9.515742301940918
    6. 'from' → logprob: -9.640742301940918
    7. 'token' → logprob: -9.890742301940918
    8. 'Token' → logprob: -10.140742301940918
    9. 'grammar' → logprob: -10.390742301940918
    10. 'TOKEN' → logprob: -10.890742301940918

Token 604: ' Parse' (ID: 26701)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.0728117972612381
    2. ' Parser' → logprob: -2.6978118419647217
    3. 'Expr' → logprob: -6.822811603546143
    4. 'Expression' → logprob: -7.697811603546143
    5. 'Parse' → logprob: -7.822811603546143
    6. 'Node' → logprob: -7.822811603546143
    7. 'Tokenizer' → logprob: -8.0728120803833
    8. ' Expr' → logprob: -9.5728120803833
    9. 'Equation' → logprob: -10.0728120803833
    10. ' Expression' → logprob: -10.9478120803833

Token 605: 'Error' (ID: 2255)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34868234395980835
    2. ':' → logprob: -2.098682403564453
    3. 'Node' → logprob: -2.473682403564453
    4. 'Error' → logprob: -2.973682403564453
    5. 'Exception' → logprob: -3.723682403564453
    6. 'Token' → logprob: -5.473682403564453
    7. 'Result' → logprob: -5.723682403564453
    8. ':
' → logprob: -6.848682403564453
    9. 'Tree' → logprob: -7.473682403564453
    10. 'er' → logprob: -7.598682403564453

Token 606: '(Exception' (ID: 30178)
  Prédit: '(Exception'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Exception' → logprob: -0.16048498451709747
    2. ':' → logprob: -1.910485029220581
    3. '(' → logprob: -8.41048526763916
    4. '(:' → logprob: -11.16048526763916
    5. 'Exception' → logprob: -11.91048526763916
    6. ':
' → logprob: -12.03548526763916
    7. '(Runtime' → logprob: -13.16048526763916
    8. '():' → logprob: -13.16048526763916
    9. ' :' → logprob: -13.28548526763916
    10. '(":' → logprob: -13.53548526763916

Token 607: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008729918859899044
    2. ')' → logprob: -5.258729934692383
    3. ':' → logprob: -6.008729934692383
    4. '):
' → logprob: -6.883729934692383
    5. ',' → logprob: -12.758729934692383
    6. ' ):' → logprob: -13.383729934692383
    7. ':)' → logprob: -14.383729934692383
    8. '(Exception' → logprob: -14.758729934692383
    9. '   ' → logprob: -14.758729934692383
    10. '>:' → logprob: -14.883729934692383

Token 608: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.18632949888706207
    2. '   ' → logprob: -1.8113294839859009
    3. '	pass' → logprob: -5.686329364776611
    4. 'pass' → logprob: -7.311329364776611
    5. '
' → logprob: -7.436329364776611
    6. '    ' → logprob: -7.811329364776611
    7. ')' → logprob: -7.811329364776611
    8. ':' → logprob: -8.31132984161377
    9. ' def' → logprob: -8.43632984161377
    10. ' 
' → logprob: -8.81132984161377

Token 609: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.413576602935791
    2. ' pass' → logprob: -1.163576602935791
    3. '   ' → logprob: -3.663576602935791
    4. '	pass' → logprob: -7.788576602935791
    5. '
' → logprob: -8.538576126098633
    6. '...' → logprob: -10.413576126098633
    7. ')' → logprob: -10.913576126098633
    8. '  ' → logprob: -11.038576126098633
    9. '    ' → logprob: -11.413576126098633
    10. ' ' → logprob: -11.913576126098633

Token 610: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06076057255268097
    2. '
' → logprob: -2.935760498046875
    3. ':' → logprob: -5.435760498046875
    4. ':
' → logprob: -7.685760498046875
    5. '

' → logprob: -7.810760498046875
    6. ' class' → logprob: -8.435760498046875
    7. 'def' → logprob: -9.185760498046875
    8. ' 
' → logprob: -9.185760498046875
    9. ')' → logprob: -9.935760498046875
    10. '#' → logprob: -10.560760498046875

Token 611: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010641339235007763
    2. 'def' → logprob: -4.635641574859619
    3. '
' → logprob: -7.635641574859619
    4. 'DIG' → logprob: -9.260641098022461
    5. ')' → logprob: -10.010641098022461
    6. '#' → logprob: -10.010641098022461
    7. ' class' → logprob: -10.385641098022461
    8. 'digits' → logprob: -10.635641098022461
    9. ':' → logprob: -10.760641098022461
    10. 'TOKEN' → logprob: -11.260641098022461

Token 612: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.05639246106147766
    2. 'Tokenizer' → logprob: -3.1813924312591553
    3. 'Token' → logprob: -5.306392669677734
    4. 'Equation' → logprob: -5.806392669677734
    5. 'Expr' → logprob: -6.306392669677734
    6. 'Expression' → logprob: -6.306392669677734
    7. 'Lexer' → logprob: -6.931392669677734
    8. 'Node' → logprob: -7.806392669677734
    9. 'Solution' → logprob: -9.306392669677734
    10. ' Parser' → logprob: -9.556392669677734

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006740703247487545
    2. '(' → logprob: -7.875674247741699
    3. ':
' → logprob: -9.0006742477417
    4. '(object' → logprob: -9.6256742477417
    5. '():' → logprob: -9.8756742477417
    6. ' :' → logprob: -10.2506742477417
    7. '{' → logprob: -12.2506742477417
    8. '(Parser' → logprob: -12.2506742477417
    9. '):' → logprob: -13.5006742477417
    10. '(":' → logprob: -13.6256742477417

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05837474390864372
    2. '	def' → logprob: -3.0583746433258057
    3. ' def' → logprob: -5.308374881744385
    4. ':' → logprob: -6.683374881744385
    5. '(' → logprob: -6.808374881744385
    6. 'def' → logprob: -7.183374881744385
    7. '    
' → logprob: -7.558374881744385
    8. '    ' → logprob: -8.558374404907227
    9. '```' → logprob: -8.808374404907227
    10. '	' → logprob: -9.058374404907227

Token 615: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40312862396240234
    2. ' def' → logprob: -1.5281286239624023
    3. 'def' → logprob: -2.2781286239624023
    4. '	def' → logprob: -4.403128623962402
    5. ' __' → logprob: -10.153128623962402
    6. ':' → logprob: -11.153128623962402
    7. '   ' → logprob: -11.653128623962402
    8. '__' → logprob: -11.778128623962402
    9. ':def' → logprob: -11.778128623962402
    10. ' indent' → logprob: -12.028128623962402

Token 616: ' We'll' (ID: 46830)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3206765949726105
    2. 'def' → logprob: -1.320676565170288
    3. '   ' → logprob: -5.445676803588867
    4. ' __' → logprob: -6.695676803588867
    5. '__' → logprob: -6.820676803588867
    6. ' ' → logprob: -7.695676803588867
    7. ' indent' → logprob: -9.695676803588867
    8. '  ' → logprob: -9.820676803588867
    9. ' tokens' → logprob: -10.320676803588867
    10. '	def' → logprob: -10.695676803588867

Token 617: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4158965051174164
    2. 'def' → logprob: -2.040896415710449
    3. ' def' → logprob: -2.165896415710449
    4. ' define' → logprob: -3.415896415710449
    5. ' continue' → logprob: -4.290896415710449
    6. '    ' → logprob: -4.790896415710449
    7. '    
' → logprob: -5.290896415710449
    8. 'init' → logprob: -5.665896415710449
    9. 'continue' → logprob: -5.665896415710449
    10. 'define' → logprob: -5.790896415710449

Token 618: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7326774001121521
    2. ' the' → logprob: -1.4826774597167969
    3. 'def' → logprob: -2.107677459716797
    4. '   ' → logprob: -2.482677459716797
    5. ' ' → logprob: -3.982677459716797
    6. 'token' → logprob: -4.732677459716797
    7. 'code' → logprob: -4.857677459716797
    8. ' an' → logprob: -4.857677459716797
    9. 'expression' → logprob: -5.107677459716797
    10. 'tokens' → logprob: -5.107677459716797

Token 619: ' string' (ID: 1621)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expression' → logprob: -1.069245457649231
    2. ' expression' → logprob: -1.819245457649231
    3. 'input' → logprob: -2.0692453384399414
    4. 'code' → logprob: -2.8192453384399414
    5. ' input' → logprob: -2.9442453384399414
    6. 'token' → logprob: -3.1942453384399414
    7. ' next' → logprob: -3.1942453384399414
    8. 'next' → logprob: -3.5692453384399414
    9. 'encrypted' → logprob: -3.5692453384399414
    10. 'string' → logprob: -3.9442453384399414

Token 620: ' expr' (ID: 30206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40626296401023865
    2. '(' → logprob: -2.0312628746032715
    3. ':' → logprob: -2.2812628746032715
    4. ' (' → logprob: -3.6562628746032715
    5. ' ' → logprob: -4.0312628746032715
    6. ',' → logprob: -4.5312628746032715
    7. ' at' → logprob: -4.9062628746032715
    8. ' =' → logprob: -4.9062628746032715
    9. '[' → logprob: -5.5312628746032715
    10. '):' → logprob: -5.6562628746032715

Token 621: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8715946674346924
    2. '   ' → logprob: -1.3715946674346924
    3. ' =' → logprob: -2.7465946674346924
    4. ' ' → logprob: -2.7465946674346924
    5. ',' → logprob: -3.1215946674346924
    6. '):
' → logprob: -3.6215946674346924
    7. '):' → logprob: -3.9965946674346924
    8. ':
' → logprob: -4.121594429016113
    9. '  ' → logprob: -4.246594429016113
    10. ')' → logprob: -4.496594429016113

Token 622: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5984647274017334
    2. '):' → logprob: -1.2234647274017334
    3. '   ' → logprob: -2.7234647274017334
    4. ',' → logprob: -3.3484647274017334
    5. '):
' → logprob: -3.5984647274017334
    6. ':
' → logprob: -4.2234649658203125
    7. '[' → logprob: -5.4734649658203125
    8. ' :' → logprob: -5.9734649658203125
    9. ')' → logprob: -6.0984649658203125
    10. ']:' → logprob: -6.9734649658203125

Token 623: ' starting' (ID: 8601)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6959707736968994
    2. ' pos' → logprob: -1.0709707736968994
    3. '   ' → logprob: -2.3209707736968994
    4. ' tokens' → logprob: -4.07097053527832
    5. 'tokens' → logprob: -4.44597053527832
    6. ' def' → logprob: -4.82097053527832
    7. 'def' → logprob: -4.94597053527832
    8. 'index' → logprob: -5.32097053527832
    9. '    ' → logprob: -5.94597053527832
    10. ' index' → logprob: -6.57097053527832

Token 624: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9675254225730896
    2. 'pos' → logprob: -1.8425254821777344
    3. 'at' → logprob: -1.9675254821777344
    4. 'from' → logprob: -2.0925254821777344
    5. '_pos' → logprob: -2.3425254821777344
    6. ' at' → logprob: -3.7175254821777344
    7. '_at' → logprob: -3.8425254821777344
    8. 'index' → logprob: -4.092525482177734
    9. 'def' → logprob: -4.092525482177734
    10. '_index' → logprob: -4.717525482177734

Token 625: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1592610776424408
    2. 'self' → logprob: -2.7842609882354736
    3. ' pos' → logprob: -2.9092609882354736
    4. ' self' → logprob: -4.159261226654053
    5. '0' → logprob: -5.034261226654053
    6. 'index' → logprob: -5.909261226654053
    7. ' position' → logprob: -6.409261226654053
    8. 'position' → logprob: -6.534261226654053
    9. 'idx' → logprob: -7.284261226654053
    10. ' index' → logprob: -7.409261226654053

Token 626: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36066246032714844
    2. '=' → logprob: -1.3606624603271484
    3. '   ' → logprob: -3.8606624603271484
    4. ':' → logprob: -4.235662460327148
    5. ',' → logprob: -5.735662460327148
    6. '):
' → logprob: -5.735662460327148
    7. ' ' → logprob: -6.860662460327148
    8. 'def' → logprob: -7.110662460327148
    9. '  ' → logprob: -7.860662460327148
    10. ')' → logprob: -7.860662460327148

Token 627: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07773083448410034
    2. ' =' → logprob: -2.827730894088745
    3. ',' → logprob: -5.077730655670166
    4. '   ' → logprob: -5.327730655670166
    5. ':' → logprob: -6.452730655670166
    6. '       ' → logprob: -6.827730655670166
    7. 'def' → logprob: -7.702730655670166
    8. ' ' → logprob: -8.327731132507324
    9. '0' → logprob: -8.577731132507324
    10. '+' → logprob: -8.827731132507324

Token 628: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2045203000307083
    2. ':' → logprob: -1.829520344734192
    3. ':
' → logprob: -3.8295202255249023
    4. ',' → logprob: -6.329520225524902
    5. '):
' → logprob: -7.454520225524902
    6. '):' → logprob: -8.954520225524902
    7. ' :
' → logprob: -9.954520225524902
    8. ' :' → logprob: -10.329520225524902
    9. ' def' → logprob: -10.579520225524902
    10. '=' → logprob: -10.954520225524902

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6415480375289917
    2. ':' → logprob: -0.8915480375289917
    3. ':
' → logprob: -2.7665481567382812
    4. '):
' → logprob: -8.141548156738281
    5. '():
' → logprob: -9.891548156738281
    6. '):' → logprob: -9.891548156738281
    7. '```' → logprob: -10.141548156738281
    8. '(' → logprob: -10.766548156738281
    9. '():' → logprob: -10.891548156738281
    10. ',' → logprob: -10.891548156738281

Token 630: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08542650938034058
    2. ':
' → logprob: -3.3354265689849854
    3. ' def' → logprob: -3.5854265689849854
    4. 'def' → logprob: -4.710426330566406
    5. '   ' → logprob: -4.835426330566406
    6. '):
' → logprob: -7.835426330566406
    7. '	def' → logprob: -8.210426330566406
    8. ':def' → logprob: -8.210426330566406
    9. '(' → logprob: -8.460426330566406
    10. '):' → logprob: -8.835426330566406

Token 631: ' and' (ID: 326)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09710656851530075
    2. '   ' → logprob: -2.972106456756592
    3. 'def' → logprob: -3.222106456756592
    4. 'class' → logprob: -7.097106456756592
    5. '    ' → logprob: -7.847106456756592
    6. '	def' → logprob: -8.97210693359375
    7. ' class' → logprob: -10.72210693359375
    8. ' ' → logprob: -10.97210693359375
    9. '```' → logprob: -11.09710693359375
    10. ' indent' → logprob: -11.59710693359375

Token 632: ' produce' (ID: 10635)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9025335907936096
    2. 'def' → logprob: -1.2775335311889648
    3. '   ' → logprob: -2.652533531188965
    4. ' def' → logprob: -2.652533531188965
    5. 'length' → logprob: -3.402533531188965
    6. 'expr' → logprob: -3.902533531188965
    7. 'parse' → logprob: -4.027533531188965
    8. ' pos' → logprob: -4.402533531188965
    9. '  ' → logprob: -4.902533531188965
    10. 'token' → logprob: -4.902533531188965

Token 633: ' an' (ID: 448)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41365617513656616
    2. '   ' → logprob: -2.163656234741211
    3. ' the' → logprob: -3.038656234741211
    4. 'tokens' → logprob: -3.038656234741211
    5. ' def' → logprob: -3.413656234741211
    6. ' tokens' → logprob: -3.913656234741211
    7. ' a' → logprob: -4.288656234741211
    8. ' an' → logprob: -4.413656234741211
    9. 'self' → logprob: -4.538656234741211
    10. ' ' → logprob: -5.038656234741211

Token 634: ' AST' (ID: 41607)
  Prédit: ' AST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AST' → logprob: -0.8062309622764587
    2. 'AST' → logprob: -2.0562310218811035
    3. 'expr' → logprob: -2.1812310218811035
    4. 'ast' → logprob: -2.3062310218811035
    5. 'abstract' → logprob: -3.1812310218811035
    6. ' ast' → logprob: -3.1812310218811035
    7. ' Abstract' → logprob: -3.3062310218811035
    8. ' abstract' → logprob: -3.9312310218811035
    9. '__' → logprob: -4.1812310218811035
    10. 'expression' → logprob: -4.6812310218811035

Token 635: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1855156570672989
    2. '   ' → logprob: -2.1855156421661377
    3. ':
' → logprob: -4.185515880584717
    4. 'def' → logprob: -4.310515880584717
    5. ' def' → logprob: -5.060515880584717
    6. ' =' → logprob: -5.310515880584717
    7. '(' → logprob: -5.560515880584717
    8. ',' → logprob: -5.935515880584717
    9. ' ' → logprob: -6.060515880584717
    10. ' (' → logprob: -6.810515880584717

Token 636: ' compute' (ID: 23864)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3308093547821045
    2. ' the' → logprob: -2.9558093547821045
    3. 'value' → logprob: -3.3308093547821045
    4. 'idx' → logprob: -3.5808093547821045
    5. 'the' → logprob: -3.7058093547821045
    6. 'index' → logprob: -4.080809593200684
    7. ' pos' → logprob: -4.205809593200684
    8. ' an' → logprob: -4.205809593200684
    9. ' value' → logprob: -4.705809593200684
    10. 'a' → logprob: -5.080809593200684

Token 637: ' value' (ID: 1432)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.010792851448059
    2. 'value' → logprob: -1.010792851448059
    3. 'the' → logprob: -2.0107927322387695
    4. ' value' → logprob: -2.6357927322387695
    5. 'result' → logprob: -3.7607927322387695
    6. 'values' → logprob: -4.6357927322387695
    7. ' result' → logprob: -5.1357927322387695
    8. ' a' → logprob: -5.3857927322387695
    9. ' values' → logprob: -5.7607927322387695
    10. 'a' → logprob: -5.8857927322387695

Token 638: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2773566246032715
    2. ':' → logprob: -1.5273566246032715
    3. ':
' → logprob: -4.2773566246032715
    4. 'def' → logprob: -5.4023566246032715
    5. ' def' → logprob: -5.9023566246032715
    6. ' ' → logprob: -7.1523566246032715
    7. ',' → logprob: -7.2773566246032715
    8. '(' → logprob: -7.4023566246032715
    9. '):
' → logprob: -7.6523566246032715
    10. ' (' → logprob: -8.65235710144043

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04325859621167183
    2. ':' → logprob: -3.5432586669921875
    3. ' def' → logprob: -5.2932586669921875
    4. '```' → logprob: -5.9182586669921875
    5. '	def' → logprob: -6.4182586669921875
    6. '    
' → logprob: -6.5432586669921875
    7. ':
' → logprob: -7.4182586669921875
    8. ',' → logprob: -8.043258666992188
    9. 'def' → logprob: -8.168258666992188
    10. '
' → logprob: -8.293258666992188

Token 640: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072045400738716125
    2. ' def' → logprob: -5.382204532623291
    3. 'def' → logprob: -6.507204532623291
    4. '	def' → logprob: -8.13220500946045
    5. '    
' → logprob: -8.38220500946045
    6. ':' → logprob: -8.50720500946045
    7. '    ' → logprob: -8.88220500946045
    8. '
' → logprob: -9.75720500946045
    9. '```' → logprob: -9.75720500946045
    10. ' 
' → logprob: -10.50720500946045

Token 641: ' Grammar' (ID: 104879)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09144952893257141
    2. 'def' → logprob: -2.841449499130249
    3. '   ' → logprob: -3.591449499130249
    4. '    ' → logprob: -7.341449737548828
    5. 'class' → logprob: -7.966449737548828
    6. ' ' → logprob: -9.091449737548828
    7. ' _' → logprob: -9.341449737548828
    8. ' indent' → logprob: -10.341449737548828
    9. ' """' → logprob: -10.466449737548828
    10. ' __' → logprob: -10.466449737548828

Token 642: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23560164868831635
    2. ':' → logprob: -2.1106016635894775
    3. '=' → logprob: -2.4856016635894775
    4. ':
' → logprob: -5.860601425170898
    5. '   ' → logprob: -7.485601425170898
    6. ' ' → logprob: -7.860601425170898
    7. '
' → logprob: -8.360601425170898
    8. '#' → logprob: -8.485601425170898
    9. '="""' → logprob: -8.485601425170898
    10. '=
' → logprob: -8.610601425170898

Token 643: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5811529755592346
    2. 'class' → logprob: -1.9561529159545898
    3. '"""
' → logprob: -2.33115291595459
    4. '   ' → logprob: -2.58115291595459
    5. ' #' → logprob: -3.45615291595459
    6. ''''
' → logprob: -3.58115291595459
    7. ' ' → logprob: -3.70615291595459
    8. ' """
' → logprob: -4.95615291595459
    9. '"""' → logprob: -4.95615291595459
    10. '```' → logprob: -5.45615291595459

Token 644: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2232807874679565
    2. '"""
' → logprob: -1.3482807874679565
    3. '```' → logprob: -1.9732807874679565
    4. ' ' → logprob: -2.973280906677246
    5. '#' (adapté à ' #') → logprob: -2.973280906677246
    6. '``' → logprob: -3.223280906677246
    7. ''''
' → logprob: -3.348280906677246
    8. 'class' → logprob: -3.598280906677246
    9. ' """
' → logprob: -3.723280906677246
    10. ' #' → logprob: -4.223280906677246

Token 645: ' Q' (ID: 1486)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35087355971336365
    2. '"""
' → logprob: -1.600873589515686
    3. 'expr' → logprob: -3.7258734703063965
    4. ' #' → logprob: -4.1008734703063965
    5. ''''
' → logprob: -4.1008734703063965
    6. '#
' → logprob: -4.9758734703063965
    7. 'class' → logprob: -5.2258734703063965
    8. '"""' → logprob: -5.3508734703063965
    9. ' """
' → logprob: -5.4758734703063965
    10. '   ' → logprob: -5.8508734703063965

Token 646: ' ::=' (ID: 176636)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20775103569030762
    2. '=' → logprob: -2.8327510356903076
    3. '#' → logprob: -3.0827510356903076
    4. 'expr' → logprob: -3.7077510356903076
    5. 'u' → logprob: -4.707751274108887
    6. 'ual' → logprob: -4.707751274108887
    7. 'ue' → logprob: -5.582751274108887
    8. 'Q' → logprob: -5.582751274108887
    9. ':' → logprob: -5.957751274108887
    10. ' ::=' → logprob: -5.957751274108887

Token 647: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.4304632246494293
    2. 'Expr' → logprob: -2.3054633140563965
    3. 'expr' → logprob: -2.5554633140563965
    4. ' E' → logprob: -2.6804633140563965
    5. ' Expr' → logprob: -3.4304633140563965
    6. ''' → logprob: -4.3054633140563965
    7. ' expr' → logprob: -4.8054633140563965
    8. 'Expression' → logprob: -5.1804633140563965
    9. 'Q' → logprob: -5.1804633140563965
    10. 'Term' → logprob: -5.4304633140563965

Token 648: '=' (ID: 28)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3232781887054443
    2. '|' → logprob: -2.0732781887054443
    3. ' |' → logprob: -2.0732781887054443
    4. ' ->' → logprob: -2.1982781887054443
    5. '[' → logprob: -2.4482781887054443
    6. '\n' → logprob: -2.9482781887054443
    7. ' ::=' → logprob: -3.1982781887054443
    8. ' =' → logprob: -3.6982781887054443
    9. ' ' → logprob: -4.073278427124023
    10. '   ' → logprob: -4.198278427124023

Token 649: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6909741163253784
    2. 'Q' → logprob: -1.4409741163253784
    3. 'x' → logprob: -1.5659741163253784
    4. '#' → logprob: -5.315974235534668
    5. 'xp' → logprob: -5.440974235534668
    6. '|' → logprob: -5.690974235534668
    7. '1' → logprob: -5.815974235534668
    8. 'expr' → logprob: -5.815974235534668
    9. '<E' → logprob: -5.815974235534668
    10. 'R' → logprob: -6.190974235534668

Token 650: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22219917178153992
    2. '
' → logprob: -2.3471992015838623
    3. '|' → logprob: -3.2221992015838623
    4. ' |' → logprob: -4.597198963165283
    5. ''\' → logprob: -4.722198963165283
    6. '\' → logprob: -5.347198963165283
    7. '|
' → logprob: -5.347198963165283
    8. ';' → logprob: -5.597198963165283
    9. 'x' → logprob: -5.972198963165283
    10. '#' → logprob: -6.097198963165283

Token 651: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.12870289385318756
    2. '
' → logprob: -2.5037028789520264
    3. '#' → logprob: -3.5037028789520264
    4. '|' → logprob: -6.6287031173706055
    5. '#
' → logprob: -6.7537031173706055
    6. 'E' → logprob: -6.8787031173706055
    7. '\' → logprob: -6.8787031173706055
    8. '
' → logprob: -7.2537031173706055
    9. 'Q' → logprob: -7.2537031173706055
    10. ''\' → logprob: -7.8787031173706055

Token 652: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.36293208599090576
    2. '\n' → logprob: -2.4879322052001953
    3. '   ' → logprob: -3.1129322052001953
    4. '
' → logprob: -3.1129322052001953
    5. 'Q' → logprob: -4.237932205200195
    6. 'class' → logprob: -4.362932205200195
    7. 'E' → logprob: -4.612932205200195
    8. ''''
' → logprob: -4.737932205200195
    9. '#
' → logprob: -4.862932205200195
    10. ' ' → logprob: -4.862932205200195

Token 653: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02539941295981407
    2. '#' → logprob: -4.525399208068848
    3. 'Q' → logprob: -4.900399208068848
    4. 'class' → logprob: -5.900399208068848
    5. 'def' → logprob: -6.150399208068848
    6. ' E' → logprob: -7.150399208068848
    7. 'expr' → logprob: -8.400399208068848
    8. '   ' → logprob: -8.775399208068848
    9. 'S' → logprob: -9.150399208068848
    10. '```' → logprob: -9.275399208068848

Token 654: ' ::=' (ID: 176636)
  Prédit: ' ::='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ::=' → logprob: -0.003996123094111681
    2. ' ' → logprob: -6.503995895385742
    3. '::' → logprob: -6.628995895385742
    4. ' ->' → logprob: -8.253995895385742
    5. ' =' → logprob: -8.253995895385742
    6. '  ' → logprob: -8.503995895385742
    7. ' ::' → logprob: -8.753995895385742
    8. ' :=' → logprob: -9.253995895385742
    9. ' :' → logprob: -9.878995895385742
    10. '=' → logprob: -10.003995895385742

Token 655: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.007680088747292757
    2. ' T' → logprob: -5.3826799392700195
    3. 'F' → logprob: -7.0076799392700195
    4. 'S' → logprob: -7.6326799392700195
    5. 'E' → logprob: -7.6326799392700195
    6. 'P' → logprob: -9.00767993927002
    7. ' ' → logprob: -9.00767993927002
    8. 'TS' → logprob: -9.13267993927002
    9. 'TE' → logprob: -9.13267993927002
    10. '   ' → logprob: -9.38267993927002

Token 656: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.7703173756599426
    2. ' |' → logprob: -1.0203173160552979
    3. ' (' → logprob: -3.895317316055298
    4. '[' → logprob: -4.020317554473877
    5. '{' → logprob: -4.020317554473877
    6. '(('' → logprob: -4.020317554473877
    7. '(['' → logprob: -4.020317554473877
    8. '('' → logprob: -4.645317554473877
    9. ' ' → logprob: -4.645317554473877
    10. '(' → logprob: -4.895317554473877

Token 657: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1537053883075714
    2. 'T' → logprob: -2.403705358505249
    3. ' E' → logprob: -3.278705358505249
    4. ' T' → logprob: -4.903705596923828
    5. ' ' → logprob: -6.903705596923828
    6. ''E' → logprob: -7.278705596923828
    7. 'TE' → logprob: -7.278705596923828
    8. ''' → logprob: -7.403705596923828
    9. '   ' → logprob: -7.778705596923828
    10. 'ET' → logprob: -7.778705596923828

Token 658: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1491263508796692
    2. ' +' → logprob: -2.2741262912750244
    3. ''' → logprob: -4.1491265296936035
    4. ' '+'' → logprob: -4.2741265296936035
    5. '"+"' → logprob: -5.6491265296936035
    6. '('' → logprob: -7.5241265296936035
    7. ' "+"' → logprob: -7.6491265296936035
    8. ' ('' → logprob: -8.399126052856445
    9. '+'' → logprob: -8.399126052856445
    10. ' ' → logprob: -8.649126052856445

Token 659: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.006839571986347437
    2. ' T' → logprob: -5.006839752197266
    3. 'E' → logprob: -9.881839752197266
    4. ' ' → logprob: -10.631839752197266
    5. '-' → logprob: -10.881839752197266
    6. '	T' → logprob: -11.631839752197266
    7. '   ' → logprob: -11.756839752197266
    8. '+' → logprob: -12.881839752197266
    9. '-T' → logprob: -12.881839752197266
    10. '  ' → logprob: -13.131839752197266

Token 660: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.10143260657787323
    2. ' |' → logprob: -2.3514325618743896
    3. '<|end|>' → logprob: -7.851432800292969
    4. ' ' → logprob: -8.101432800292969
    5. '
' → logprob: -8.726432800292969
    6. '   ' → logprob: -9.476432800292969
    7. '  ' → logprob: -9.601432800292969
    8. '#' → logprob: -9.726432800292969
    9. '```' → logprob: -10.101432800292969
    10. '<|end|>' → logprob: -10.351432800292969

Token 661: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.11285925656557083
    2. ' E' → logprob: -2.2378592491149902
    3. ' ' → logprob: -10.737859725952148
    4. '   ' → logprob: -12.237859725952148
    5. ' ' → logprob: -12.237859725952148
    6. '	E' → logprob: -13.237859725952148
    7. '  ' → logprob: -13.737859725952148
    8. '
' → logprob: -14.362859725952148
    9. 'T' → logprob: -14.862859725952148
    10. '-' → logprob: -14.862859725952148

Token 662: '-T' (ID: 11264)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002115881536155939
    2. ' -' → logprob: -6.252115726470947
    3. '-T' → logprob: -9.252116203308105
    4. ''-' → logprob: -10.627116203308105
    5. '-B' → logprob: -11.252116203308105
    6. ' ' → logprob: -11.752116203308105
    7. '-S' → logprob: -12.002116203308105
    8. '*' → logprob: -12.002116203308105
    9. '-*' → logprob: -12.002116203308105
    10. '-M' → logprob: -12.377116203308105

Token 663: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6400961875915527
    2. '|' → logprob: -0.8900961875915527
    3. ' |' → logprob: -3.0150961875915527
    4. 'class' → logprob: -5.515096187591553
    5. '   ' → logprob: -5.890096187591553
    6. '
' → logprob: -6.015096187591553
    7. ' ' → logprob: -6.515096187591553
    8. '<|end|>' → logprob: -6.765096187591553
    9. '<|end|>' → logprob: -7.765096187591553
    10. '#
' → logprob: -8.640096664428711

Token 664: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.047972846776247025
    2. '   ' → logprob: -3.4229729175567627
    3. 'class' → logprob: -4.422972679138184
    4. '
' → logprob: -7.547972679138184
    5. ' ' → logprob: -7.672972679138184
    6. '<|end|>' → logprob: -7.797972679138184
    7. ' #' → logprob: -8.172972679138184
    8. '```' → logprob: -9.172972679138184
    9. 'T' → logprob: -9.297972679138184
    10. '<|end|>' → logprob: -9.547972679138184

Token 665: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.05069874972105026
    2. '   ' → logprob: -3.675698757171631
    3. 'class' → logprob: -4.675698757171631
    4. '#
' → logprob: -5.300698757171631
    5. 'E' → logprob: -5.925698757171631
    6. ' ' → logprob: -6.800698757171631
    7. '|' → logprob: -7.175698757171631
    8. 'T' → logprob: -7.175698757171631
    9. ' #' → logprob: -7.175698757171631
    10. ' ::=' → logprob: -7.300698757171631

Token 666: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.09441915154457092
    2. '#' → logprob: -2.594419240951538
    3. ' T' → logprob: -5.469419002532959
    4. '   ' → logprob: -5.594419002532959
    5. 'E' → logprob: -5.719419002532959
    6. ' ' → logprob: -6.469419002532959
    7. 'class' → logprob: -7.094419002532959
    8. ' #' → logprob: -7.719419002532959
    9. '
' → logprob: -8.344419479370117
    10. 'Q' → logprob: -8.594419479370117

Token 667: ' ::=' (ID: 176636)
  Prédit: ' ::='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ::=' → logprob: -0.005521053913980722
    2. '::' → logprob: -5.255520820617676
    3. ' ' → logprob: -9.005520820617676
    4. ' ::' → logprob: -9.380520820617676
    5. '   ' → logprob: -10.630520820617676
    6. '  ' → logprob: -10.630520820617676
    7. '=' → logprob: -11.755520820617676
    8. ' =' → logprob: -11.880520820617676
    9. '::__' → logprob: -12.380520820617676
    10. ' :' → logprob: -12.755520820617676

Token 668: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.003664206713438034
    2. ' F' → logprob: -5.753664016723633
    3. '   ' → logprob: -8.503664016723633
    4. ' ' → logprob: -8.628664016723633
    5. 'P' → logprob: -10.503664016723633
    6. 'T' → logprob: -10.753664016723633
    7. '  ' → logprob: -11.253664016723633
    8. 'factor' → logprob: -12.128664016723633
    9. 'f' → logprob: -12.316164016723633
    10. '     ' → logprob: -12.378664016723633

Token 669: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.36868852376937866
    2. '|' → logprob: -1.2436885833740234
    3. ' ' → logprob: -4.243688583374023
    4. '   ' → logprob: -6.243688583374023
    5. '  ' → logprob: -6.993688583374023
    6. '*' → logprob: -6.993688583374023
    7. '    ' → logprob: -8.118688583374023
    8. ' ::=' → logprob: -8.368688583374023
    9. ' (' → logprob: -8.493688583374023
    10. '     ' → logprob: -8.743688583374023

Token 670: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005293646361678839
    2. ' T' → logprob: -5.255293846130371
    3. 'TF' → logprob: -10.630293846130371
    4. 'F' → logprob: -10.880293846130371
    5. '	T' → logprob: -12.130293846130371
    6. ' ' → logprob: -12.755293846130371
    7. 'TRGL' → logprob: -13.317793846130371
    8. '   ' → logprob: -13.755293846130371
    9. 'TT' → logprob: -14.130293846130371
    10. '  ' → logprob: -14.317793846130371

Token 671: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004549388773739338
    2. ''*' → logprob: -5.504549503326416
    3. ' *' → logprob: -7.879549503326416
    4. '"*' → logprob: -10.504549026489258
    5. '**' → logprob: -11.004549026489258
    6. '*M' → logprob: -11.129549026489258
    7. '`' → logprob: -12.004549026489258
    8. '('*' → logprob: -12.254549026489258
    9. ' '*'' → logprob: -12.754549026489258
    10. ' ' → logprob: -13.129549026489258

Token 672: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -4.000763510703109e-05
    2. ' F' → logprob: -10.750040054321289
    3. '*' → logprob: -11.000040054321289
    4. ' ' → logprob: -13.750040054321289
    5. '   ' → logprob: -15.000040054321289
    6. '  ' → logprob: -16.25004005432129
    7. ''*' → logprob: -16.25004005432129
    8. '`' → logprob: -16.50004005432129
    9. '	F' → logprob: -16.62504005432129
    10. ' *' → logprob: -17.75004005432129

Token 673: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5572572350502014
    2. '   ' → logprob: -1.4322571754455566
    3. ' |' → logprob: -3.0572571754455566
    4. '|' → logprob: -3.1822571754455566
    5. ' ' → logprob: -3.5572571754455566
    6. '
' → logprob: -4.057257175445557
    7. '<|end|>' → logprob: -4.307257175445557
    8. 'class' → logprob: -4.432257175445557
    9. '<|end|>' → logprob: -5.182257175445557
    10. '  
' → logprob: -5.557257175445557

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11922051012516022
    2. '#' → logprob: -2.244220495223999
    3. 'class' → logprob: -5.869220733642578
    4. '
' → logprob: -6.869220733642578
    5. '```' → logprob: -6.994220733642578
    6. ' ' → logprob: -7.744220733642578
    7. ' #' → logprob: -8.744220733642578
    8. 'F' → logprob: -8.869220733642578
    9. ' =' → logprob: -9.369220733642578
    10. '``' → logprob: -9.619220733642578

Token 675: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3414701819419861
    2. 'F' → logprob: -2.216470241546631
    3. '   ' → logprob: -2.341470241546631
    4. 'class' → logprob: -2.716470241546631
    5. 'def' → logprob: -4.966470241546631
    6. ' F' → logprob: -5.216470241546631
    7. '
' → logprob: -6.841470241546631
    8. ':' → logprob: -7.216470241546631
    9. '#
' → logprob: -7.216470241546631
    10. '```' → logprob: -7.466470241546631

Token 676: ' F' (ID: 454)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36159422993659973
    2. 'F' → logprob: -1.2365942001342773
    3. '   ' → logprob: -4.736594200134277
    4. ' def' → logprob: -5.986594200134277
    5. '#' → logprob: -7.236594200134277
    6. 'class' → logprob: -7.611594200134277
    7. ' F' → logprob: -8.361594200134277
    8. ' ' → logprob: -8.486594200134277
    9. '
' → logprob: -9.736594200134277
    10. '```' → logprob: -10.861594200134277

Token 677: ' ::=' (ID: 176636)
  Prédit: ' ::='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ::=' → logprob: -0.029782429337501526
    2. ' =' → logprob: -4.404782295227051
    3. ' :' → logprob: -5.029782295227051
    4. ':' → logprob: -5.154782295227051
    5. ' ' → logprob: -6.279782295227051
    6. '::' → logprob: -6.529782295227051
    7. '  ' → logprob: -7.654782295227051
    8. ' ::' → logprob: -7.779782295227051
    9. '   ' → logprob: -8.40478229522705
    10. '=' → logprob: -8.90478229522705

Token 678: ' N' (ID: 478)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026226794347167015
    2. ''N' → logprob: -4.526226997375488
    3. ''(' → logprob: -5.401226997375488
    4. '(' → logprob: -5.526226997375488
    5. 'P' → logprob: -6.276226997375488
    6. '('' → logprob: -6.776226997375488
    7. ''U' → logprob: -7.401226997375488
    8. ''-' → logprob: -7.901226997375488
    9. '"P' → logprob: -8.151226997375488
    10. '"' → logprob: -8.276226997375488

Token 679: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.2817944884300232
    2. '|' → logprob: -1.406794548034668
    3. ' ' → logprob: -8.656794548034668
    4. '   ' → logprob: -8.656794548034668
    5. '  ' → logprob: -9.406794548034668
    6. '    ' → logprob: -9.531794548034668
    7. '
' → logprob: -10.406794548034668
    8. '     ' → logprob: -10.781794548034668
    9. 'F' → logprob: -11.031794548034668
    10. '<|end|>' → logprob: -11.531794548034668

Token 680: ' -' (ID: 533)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6096773743629456
    2. '(' → logprob: -1.3596773147583008
    3. 'P' → logprob: -1.7346773147583008
    4. ' '('' → logprob: -4.734677314758301
    5. ' (' → logprob: -4.859677314758301
    6. ' P' → logprob: -6.484677314758301
    7. '(P' → logprob: -6.734677314758301
    8. ''(' → logprob: -7.109677314758301
    9. '('' → logprob: -7.484677314758301
    10. ' ' → logprob: -7.609677314758301

Token 681: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0002668192028068006
    2. ' F' → logprob: -8.625267028808594
    3. '(' → logprob: -9.500267028808594
    4. '(F' → logprob: -12.375267028808594
    5. '<|end|>' → logprob: -13.250267028808594
    6. '<|end|>' → logprob: -13.250267028808594
    7. 'N' → logprob: -13.625267028808594
    8. ' (' → logprob: -13.625267028808594
    9. ' ' → logprob: -15.375267028808594
    10. '	F' → logprob: -15.500267028808594

Token 682: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.2017604261636734
    2. '|' → logprob: -1.7017604112625122
    3. '<|end|>' → logprob: -8.701760292053223
    4. '   ' → logprob: -9.451760292053223
    5. '#' → logprob: -10.326760292053223
    6. ' ' → logprob: -10.451760292053223
    7. '<|end|>' → logprob: -11.951760292053223
    8. ')' → logprob: -12.326760292053223
    9. '  ' → logprob: -12.326760292053223
    10. '|\' → logprob: -12.701760292053223

Token 683: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037779819685965776
    2. ''' → logprob: -5.753777980804443
    3. ' (' → logprob: -8.003778457641602
    4. '\(' → logprob: -8.878778457641602
    5. '(P' → logprob: -10.253778457641602
    6. ''(' → logprob: -10.503778457641602
    7. 'P' → logprob: -10.878778457641602
    8. '(N' → logprob: -11.003778457641602
    9. '"' → logprob: -11.878778457641602
    10. '(E' → logprob: -13.128778457641602

Token 684: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07076743245124817
    2. 'F' → logprob: -2.695767402648926
    3. 'N' → logprob: -7.195767402648926
    4. ')' → logprob: -10.820767402648926
    5. 'Q' → logprob: -10.820767402648926
    6. ' E' → logprob: -11.445767402648926
    7. '(' → logprob: -12.195767402648926
    8. 'expression' → logprob: -12.445767402648926
    9. 'expr' → logprob: -12.695767402648926
    10. 'P' → logprob: -12.695767402648926

Token 685: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008059371029958129
    2. '|' → logprob: -7.875805854797363
    3. ' )' → logprob: -8.625805854797363
    4. ')
' → logprob: -8.750805854797363
    5. '')' → logprob: -10.000805854797363
    6. ')|' → logprob: -10.375805854797363
    7. ')`' → logprob: -13.250805854797363
    8. ')
' → logprob: -13.500805854797363
    9. ' |' → logprob: -13.625805854797363
    10. 'F' → logprob: -13.875805854797363

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3336867690086365
    2. 'class' → logprob: -1.7086868286132812
    3. '#' → logprob: -2.4586868286132812
    4. 'def' → logprob: -4.458686828613281
    5. '```' → logprob: -6.208686828613281
    6. 'N' → logprob: -7.458686828613281
    7. '
' → logprob: -7.708686828613281
    8. ' ' → logprob: -8.208686828613281
    9. ' def' → logprob: -8.458686828613281
    10. ':' → logprob: -8.458686828613281

Token 687: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5488937497138977
    2. 'def' → logprob: -1.173893690109253
    3. ' def' → logprob: -2.298893690109253
    4. '#' (adapté à ' #') → logprob: -5.173893928527832
    5. 'class' → logprob: -5.673893928527832
    6. ':' → logprob: -6.798893928527832
    7. '
' → logprob: -7.173893928527832
    8. ' ' → logprob: -7.673893928527832
    9. '    ' → logprob: -8.798893928527832
    10. '    
' → logprob: -9.173893928527832

Token 688: ' N' (ID: 478)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07689082622528076
    2. 'N' → logprob: -3.7018909454345703
    3. ' def' → logprob: -3.9518909454345703
    4. '   ' → logprob: -4.20189094543457
    5. '#' → logprob: -4.32689094543457
    6. 'class' → logprob: -6.57689094543457
    7. ' N' → logprob: -8.70189094543457
    8. ' ' → logprob: -9.32689094543457
    9. ' #' → logprob: -9.32689094543457
    10. 'n' → logprob: -9.70189094543457

Token 689: ' ::=' (ID: 176636)
  Prédit: ' ::='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ::=' → logprob: -0.01832260563969612
    2. '::' → logprob: -4.643322467803955
    3. ' ' → logprob: -6.268322467803955
    4. ' :' → logprob: -6.393322467803955
    5. ' =' → logprob: -6.393322467803955
    6. ' ::' → logprob: -6.518322467803955
    7. '  ' → logprob: -7.018322467803955
    8. ' ->' → logprob: -8.393322944641113
    9. '   ' → logprob: -8.518322944641113
    10. '=' → logprob: -8.518322944641113

Token 690: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6314944624900818
    2. ''' → logprob: -1.3814945220947266
    3. ''[' → logprob: -2.3814945220947266
    4. '['' → logprob: -2.6314945220947266
    5. '('' → logprob: -4.006494522094727
    6. '0' → logprob: -4.006494522094727
    7. '(' → logprob: -4.881494522094727
    8. ' [' → logprob: -6.006494522094727
    9. ' ('' → logprob: -7.006494522094727
    10. '`' → logprob: -7.006494522094727

Token 691: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04805578663945198
    2. '(' → logprob: -4.048055648803711
    3. ''' → logprob: -4.548055648803711
    4. '0' → logprob: -4.798055648803711
    5. '('' → logprob: -5.673055648803711
    6. '['' → logprob: -5.673055648803711
    7. ''[' → logprob: -5.798055648803711
    8. '(?:' → logprob: -8.048055648803711
    9. ''(' → logprob: -9.048055648803711
    10. '([' → logprob: -9.798055648803711

Token 692: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0004195906512904912
    2. ' |' → logprob: -8.125419616699219
    3. '|'' → logprob: -9.625419616699219
    4. '<|end|>' → logprob: -10.375419616699219
    5. '
' → logprob: -11.750419616699219
    6. '...' → logprob: -12.750419616699219
    7. ''' → logprob: -13.125419616699219
    8. '|
' → logprob: -13.125419616699219
    9. 'or' → logprob: -13.500419616699219
    10. '0' → logprob: -13.875419616699219

Token 693: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008221871219575405
    2. '(' → logprob: -5.7582221031188965
    3. '[' → logprob: -5.8832221031188965
    4. ' ' → logprob: -6.3832221031188965
    5. '('' → logprob: -8.633221626281738
    6. '10' → logprob: -9.133221626281738
    7. ' (' → logprob: -9.883221626281738
    8. ''' → logprob: -9.883221626281738
    9. ' [' → logprob: -10.133221626281738
    10. '([' → logprob: -10.633221626281738

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05416649207472801
    2. '[' → logprob: -3.179166555404663
    3. '(' → logprob: -5.054166316986084
    4. '('' → logprob: -6.554166316986084
    5. ' [' → logprob: -6.804166316986084
    6. ''' → logprob: -7.054166316986084
    7. '['' → logprob: -7.679166316986084
    8. ' ' → logprob: -8.179166793823242
    9. '([' → logprob: -8.804166793823242
    10. ' (' → logprob: -9.679166793823242

Token 695: 'B' (ID: 33)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6059831380844116
    2. '[' → logprob: -0.8559831380844116
    3. ' |' → logprob: -4.605983257293701
    4. '+' → logprob: -4.980983257293701
    5. '['' → logprob: -5.730983257293701
    6. '|'' → logprob: -6.480983257293701
    7. '('' → logprob: -6.980983257293701
    8. '0' → logprob: -6.980983257293701
    9. 'def' → logprob: -7.230983257293701
    10. '[N' → logprob: -7.230983257293701

Token 696: '
' (ID: 198)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.8153029680252075
    2. ''' → logprob: -1.8153029680252075
    3. '[' → logprob: -1.9403029680252075
    4. '0' → logprob: -1.9403029680252075
    5. '   ' → logprob: -3.440302848815918
    6. '['' → logprob: -4.065302848815918
    7. ' |' → logprob: -4.690302848815918
    8. 'def' → logprob: -4.690302848815918
    9. '*' → logprob: -5.065302848815918
    10. ' ::=' → logprob: -5.940302848815918

Token 697: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06447045505046844
    2. '   ' → logprob: -3.3144705295562744
    3. '```' → logprob: -4.814470291137695
    4. ''' → logprob: -5.439470291137695
    5. '#' → logprob: -5.439470291137695
    6. '|' → logprob: -6.439470291137695
    7. ' B' → logprob: -6.689470291137695
    8. '[' → logprob: -6.689470291137695
    9. '
' → logprob: -7.564470291137695
    10. ' ' → logprob: -7.689470291137695

Token 698: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17654870450496674
    2. '   ' → logprob: -2.051548719406128
    3. 'B' → logprob: -4.676548480987549
    4. 'class' → logprob: -5.051548480987549
    5. '#' (adapté à ' #') → logprob: -5.176548480987549
    6. ' def' → logprob: -5.801548480987549
    7. '```' → logprob: -6.551548480987549
    8. ''''
' → logprob: -6.676548480987549
    9. '[' → logprob: -7.426548480987549
    10. ' =' → logprob: -7.551548480987549

Token 699: ' B' (ID: 418)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21401351690292358
    2. '#' → logprob: -2.2140135765075684
    3. '   ' → logprob: -3.3390135765075684
    4. 'B' → logprob: -3.9640135765075684
    5. ' def' → logprob: -4.839013576507568
    6. 'class' → logprob: -5.214013576507568
    7. 'r' → logprob: -5.464013576507568
    8. ' #' → logprob: -6.714013576507568
    9. '"""
' → logprob: -6.714013576507568
    10. ' ' → logprob: -6.839013576507568

Token 700: ' ::=' (ID: 176636)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.7271856665611267
    2. ' ::=' → logprob: -0.7271856665611267
    3. '  ' → logprob: -3.9771857261657715
    4. '   ' → logprob: -4.9771857261657715
    5. ' ' → logprob: -5.7271857261657715
    6. ' ::' → logprob: -6.6021857261657715
    7. '*' → logprob: -6.7271857261657715
    8. '::*' → logprob: -7.9771857261657715
    9. '```' → logprob: -7.9771857261657715
    10. '|' → logprob: -8.602185249328613

Token 701: ' empty' (ID: 8213)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39678749442100525
    2. 'B' → logprob: -1.5217875242233276
    3. '(' → logprob: -2.646787405014038
    4. '('' → logprob: -4.021787643432617
    5. '{' → logprob: -5.521787643432617
    6. ''' → logprob: -5.521787643432617
    7. '['' → logprob: -5.771787643432617
    8. '(B' → logprob: -6.271787643432617
    9. '[B' → logprob: -6.271787643432617
    10. ' B' → logprob: -6.396787643432617

Token 702: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0012030890211462975
    2. ' |' → logprob: -6.7512030601501465
    3. '|'' → logprob: -11.001203536987305
    4. '|\' → logprob: -12.376203536987305
    5. '```' → logprob: -13.376203536987305
    6. '|string' → logprob: -13.376203536987305
    7. '[' → logprob: -13.501203536987305
    8. '
' → logprob: -13.501203536987305
    9. ' ' → logprob: -14.001203536987305
    10. '*' → logprob: -14.001203536987305

Token 703: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.26635098457336426
    2. ' B' → logprob: -1.5163509845733643
    3. '{' → logprob: -4.516350746154785
    4. '[' → logprob: -6.391350746154785
    5. '(' → logprob: -8.016350746154785
    6. ' {' → logprob: -8.266350746154785
    7. ''' → logprob: -8.391350746154785
    8. ' (' → logprob: -8.391350746154785
    9. '(B' → logprob: -9.141350746154785
    10. '[B' → logprob: -9.266350746154785

Token 704: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012564514763653278
    2. ' B' → logprob: -5.262564659118652
    3. '0' → logprob: -5.387564659118652
    4. '1' → logprob: -6.512564659118652
    5. '[' → logprob: -7.512564659118652
    6. '(' → logprob: -7.637564659118652
    7. '{' → logprob: -8.762564659118652
    8. ' ' → logprob: -10.887564659118652
    9. '[B' → logprob: -10.887564659118652
    10. '`' → logprob: -12.387564659118652

Token 705: 'B' (ID: 33)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0011154505191370845
    2. ' |' → logprob: -7.126115322113037
    3. '|'' → logprob: -8.876115798950195
    4. '1' → logprob: -9.001115798950195
    5. '*' → logprob: -10.501115798950195
    6. '0' → logprob: -12.001115798950195
    7. '[' → logprob: -12.501115798950195
    8. ''' → logprob: -13.001115798950195
    9. '01' → logprob: -14.126115798950195
    10. ' ' → logprob: -14.126115798950195

Token 706: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.10033315420150757
    2. ' |' → logprob: -2.3503332138061523
    3. '```' → logprob: -9.850333213806152
    4. '0' → logprob: -11.350333213806152
    5. '<|end|>' → logprob: -11.475333213806152
    6. ' ' → logprob: -11.475333213806152
    7. '   ' → logprob: -12.100333213806152
    8. '...' → logprob: -12.600333213806152
    9. '|'' → logprob: -12.600333213806152
    10. ' or' → logprob: -12.725333213806152

Token 707: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010355490958318114
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -13.001035690307617
    4. ''' → logprob: -15.501035690307617
    5. '  ' → logprob: -16.001035690307617
    6. ' ' → logprob: -16.126035690307617
    7. '`' → logprob: -17.126035690307617
    8. '|' → logprob: -17.376035690307617
    9. '"' → logprob: -18.501035690307617
    10. '11' → logprob: -18.501035690307617

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. ''' → logprob: -14.125008583068848
    4. '   ' → logprob: -16.500009536743164
    5. '`' → logprob: -17.375009536743164
    6. '"' → logprob: -17.750009536743164
    7. '|' → logprob: -17.750009536743164
    8. '  ' → logprob: -18.000009536743164
    9. '```' → logprob: -18.375009536743164
    10. '
' → logprob: -19.375009536743164

Token 709: 'B' (ID: 33)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16586603224277496
    2. '   ' → logprob: -2.7908661365509033
    3. ':
' → logprob: -4.290865898132324
    4. ' def' → logprob: -4.290865898132324
    5. 'class' → logprob: -4.540865898132324
    6. ''
' → logprob: -4.790865898132324
    7. '```' → logprob: -5.165865898132324
    8. ':' → logprob: -5.540865898132324
    9. ''' → logprob: -5.790865898132324
    10. '+
' → logprob: -5.790865898132324

Token 710: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2055155336856842
    2. ':' → logprob: -2.0805156230926514
    3. '
' → logprob: -4.830515384674072
    4. '[' → logprob: -4.955515384674072
    5. 'def' → logprob: -5.080515384674072
    6. 'class' → logprob: -5.080515384674072
    7. '<|end|>' → logprob: -5.205515384674072
    8. '):
' → logprob: -5.330515384674072
    9. ':
' → logprob: -5.580515384674072
    10. '       ' → logprob: -5.830515384674072

Token 711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5008698105812073
    2. ':' → logprob: -1.2508697509765625
    3. ' :' → logprob: -3.0008697509765625
    4. ' ' → logprob: -4.1258697509765625
    5. 'def' → logprob: -4.2508697509765625
    6. ' def' → logprob: -4.8758697509765625
    7. '    ' → logprob: -5.2508697509765625
    8. '       ' → logprob: -6.5008697509765625
    9. '<|end|>' → logprob: -6.5008697509765625
    10. '[' → logprob: -6.8758697509765625

Token 712: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19600249826908112
    2. 'def' → logprob: -2.32100248336792
    3. ' def' → logprob: -2.57100248336792
    4. ' ' → logprob: -7.32100248336792
    5. '    ' → logprob: -7.44600248336792
    6. 'class' → logprob: -7.82100248336792
    7. ' 
' → logprob: -8.071002960205078
    8. '       ' → logprob: -8.321002960205078
    9. '    
' → logprob: -8.321002960205078
    10. '	def' → logprob: -8.446002960205078

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2937389016151428
    2. 'def' → logprob: -1.918738842010498
    3. ' def' → logprob: -2.293738842010498
    4. 'class' → logprob: -5.793738842010498
    5. '    ' → logprob: -6.168738842010498
    6. ' ' → logprob: -7.043738842010498
    7. '	def' → logprob: -8.293739318847656
    8. ')' → logprob: -9.168739318847656
    9. '       ' → logprob: -9.293739318847656
    10. ' class' → logprob: -9.793739318847656

Token 714: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7551860809326172
    2. 'def' → logprob: -0.7551860809326172
    3. '   ' → logprob: -3.005186080932617
    4. 'class' → logprob: -4.630186080932617
    5. ' ' → logprob: -8.755186080932617
    6. ')' → logprob: -9.130186080932617
    7. '
' → logprob: -9.130186080932617
    8. ' class' → logprob: -9.505186080932617
    9. ' indent' → logprob: -9.505186080932617
    10. '    ' → logprob: -9.630186080932617

Token 715: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4063446521759033
    2. ' def' → logprob: -1.1563446521759033
    3. 'class' → logprob: -4.906344413757324
    4. '   ' → logprob: -5.156344413757324
    5. '"' → logprob: -6.781344413757324
    6. '0' → logprob: -7.531344413757324
    7. '
' → logprob: -7.531344413757324
    8. ' "' → logprob: -7.781344413757324
    9. '"""' → logprob: -7.781344413757324
    10. ' ' → logprob: -8.031344413757324

Token 716: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3779587149620056
    2. ' def' → logprob: -1.5029587745666504
    3. ' =' → logprob: -4.00295877456665
    4. 'class' → logprob: -4.37795877456665
    5. ')' → logprob: -4.62795877456665
    6. ' ' → logprob: -4.87795877456665
    7. '_' → logprob: -5.25295877456665
    8. ' continue' → logprob: -5.37795877456665
    9. ' have' → logprob: -5.50295877456665
    10. '   ' → logprob: -5.50295877456665

Token 717: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.319563627243042
    2. ' def' → logprob: -1.944563627243042
    3. 'continue' → logprob: -3.569563627243042
    4. '   ' → logprob: -4.194563865661621
    5. 'class' → logprob: -4.319563865661621
    6. ' ' → logprob: -4.569563865661621
    7. ' continue' → logprob: -4.694563865661621
    8. ' tokenize' → logprob: -5.069563865661621
    9. ' implement' → logprob: -5.194563865661621
    10. 'define' → logprob: -5.194563865661621

Token 718: ' methods' (ID: 7933)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12668143212795258
    2. '(self' → logprob: -3.751681327819824
    3. ' def' → logprob: -4.001681327819824
    4. 'import' → logprob: -4.251681327819824
    5. 'token' → logprob: -4.376681327819824
    6. '   ' → logprob: -4.751681327819824
    7. 'the' → logprob: -5.001681327819824
    8. '_token' → logprob: -5.126681327819824
    9. 'self' → logprob: -5.376681327819824
    10. '_expr' → logprob: -5.501681327819824

Token 719: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6327734589576721
    2. ':' → logprob: -1.2577733993530273
    3. '   ' → logprob: -2.2577733993530273
    4. ' def' → logprob: -3.7577733993530273
    5. '(self' → logprob: -4.132773399353027
    6. '_next' → logprob: -4.507773399353027
    7. ':
' → logprob: -5.632773399353027
    8. ' =' → logprob: -5.757773399353027
    9. '_' → logprob: -6.132773399353027
    10. ' ' → logprob: -6.257773399353027

Token 720: 'Q' (ID: 48)
  Prédit: '_expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0760558545589447
    2. '_expression' → logprob: -3.8260557651519775
    3. '_token' → logprob: -3.9510557651519775
    4. '_Q' → logprob: -4.326056003570557
    5. '_' → logprob: -5.201056003570557
    6. 'Q' → logprob: -5.201056003570557
    7. '_term' → logprob: -6.076056003570557
    8. '_factor' → logprob: -6.451056003570557
    9. '_exp' → logprob: -6.826056003570557
    10. 'Expr' → logprob: -7.326056003570557

Token 721: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5515698194503784
    2. 'def' → logprob: -1.0515698194503784
    3. '   ' → logprob: -3.051569938659668
    4. ':' → logprob: -4.551569938659668
    5. ' def' → logprob: -5.676569938659668
    6. '(' → logprob: -5.926569938659668
    7. '```' → logprob: -6.051569938659668
    8. '_next' → logprob: -6.801569938659668
    9. 'self' → logprob: -6.926569938659668
    10. ' ' → logprob: -7.051569938659668

Token 722: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.043055709451436996
    2. ' parse' → logprob: -3.168055772781372
    3. '_parse' → logprob: -11.043055534362793
    4. '(parse' → logprob: -11.168055534362793
    5. '	parse' → logprob: -11.793055534362793
    6. '=parse' → logprob: -12.293055534362793
    7. '.parse' → logprob: -12.418055534362793
    8. ' ' → logprob: -12.668055534362793
    9. 'parser' → logprob: -13.418055534362793
    10. '   ' → logprob: -13.418055534362793

Token 723: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00034774013329297304
    2. 'Q' → logprob: -8.000348091125488
    3. 'Expression' → logprob: -12.250348091125488
    4. '```' → logprob: -13.250348091125488
    5. 'Expr' → logprob: -13.750348091125488
    6. '_expr' → logprob: -14.000348091125488
    7. 'expression' → logprob: -14.000348091125488
    8. ' E' → logprob: -14.250348091125488
    9. '_expression' → logprob: -14.750348091125488
    10. 'expr' → logprob: -14.875348091125488

Token 724: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5278398394584656
    2. 'def' → logprob: -1.6528398990631104
    3. '(self' → logprob: -2.2778398990631104
    4. ':' → logprob: -3.4028398990631104
    5. ':
' → logprob: -3.5278398990631104
    6. ',' → logprob: -4.152839660644531
    7. '```' → logprob: -4.777839660644531
    8. '(' → logprob: -5.152839660644531
    9. '
' → logprob: -5.152839660644531
    10. ' def' → logprob: -5.402839660644531

Token 725: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.10027191042900085
    2. ' parse' → logprob: -2.3502719402313232
    3. '_parse' → logprob: -11.100272178649902
    4. '(parse' → logprob: -11.225272178649902
    5. '	parse' → logprob: -11.475272178649902
    6. '   ' → logprob: -11.475272178649902
    7. '.parse' → logprob: -12.475272178649902
    8. ' ' → logprob: -12.725272178649902
    9. '=parse' → logprob: -12.850272178649902
    10. '```' → logprob: -13.475272178649902

Token 726: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0017094480572268367
    2. 'F' → logprob: -6.376709461212158
    3. 'N' → logprob: -12.501708984375
    4. 'Q' → logprob: -12.626708984375
    5. 'B' → logprob: -16.501708984375
    6. 'E' → logprob: -16.876708984375
    7. ' T' → logprob: -17.501708984375
    8. '```' → logprob: -17.626708984375
    9. 'Term' → logprob: -18.501708984375
    10. 'I' → logprob: -18.501708984375

Token 727: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5158288478851318
    2. '   ' → logprob: -1.2658288478851318
    3. 'def' → logprob: -3.140828847885132
    4. ':
' → logprob: -3.265828847885132
    5. ',' → logprob: -4.140829086303711
    6. ' def' → logprob: -4.890829086303711
    7. '):
' → logprob: -5.640829086303711
    8. '(' → logprob: -5.765829086303711
    9. '):' → logprob: -6.265829086303711
    10. '```' → logprob: -6.515829086303711

Token 728: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01252730842679739
    2. ' parse' → logprob: -4.3875274658203125
    3. 'def' → logprob: -12.012527465820312
    4. '_parse' → logprob: -12.637527465820312
    5. '   ' → logprob: -12.887527465820312
    6. '(parse' → logprob: -13.012527465820312
    7. '	parse' → logprob: -13.387527465820312
    8. '```' → logprob: -14.512527465820312
    9. '=parse' → logprob: -15.012527465820312
    10. '.parse' → logprob: -15.012527465820312

Token 729: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -2.4868770196917467e-05
    2. 'N' → logprob: -10.625024795532227
    3. 'E' → logprob: -15.125024795532227
    4. 'Q' → logprob: -15.250024795532227
    5. ' F' → logprob: -17.125024795532227
    6. 'B' → logprob: -17.375024795532227
    7. '```' → logprob: -18.875024795532227
    8. '0' → logprob: -19.375024795532227
    9. ' ' → logprob: -19.750024795532227
    10. 'U' → logprob: -19.750024795532227

Token 730: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4323280453681946
    2. '   ' → logprob: -1.4323279857635498
    3. ':
' → logprob: -2.80732798576355
    4. 'def' → logprob: -3.80732798576355
    5. ' def' → logprob: -4.182328224182129
    6. '(' → logprob: -5.432328224182129
    7. '):
' → logprob: -5.932328224182129
    8. '
' → logprob: -6.682328224182129
    9. '(
' → logprob: -6.807328224182129
    10. ' ' → logprob: -7.307328224182129

Token 731: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00773805845528841
    2. ' parse' → logprob: -4.88273811340332
    3. 'def' → logprob: -10.25773811340332
    4. '(parse' → logprob: -10.38273811340332
    5. 'and' → logprob: -11.00773811340332
    6. '_parse' → logprob: -11.13273811340332
    7. ' and' → logprob: -11.25773811340332
    8. '	parse' → logprob: -12.63273811340332
    9. '=parse' → logprob: -12.75773811340332
    10. '.parse' → logprob: -12.88273811340332

Token 732: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01845473237335682
    2. 'Q' → logprob: -4.018454551696777
    3. 'B' → logprob: -8.643454551696777
    4. 'E' → logprob: -9.018454551696777
    5. '```' → logprob: -13.768454551696777
    6. 'I' → logprob: -14.268454551696777
    7. 'number' → logprob: -14.268454551696777
    8. ' N' → logprob: -14.393454551696777
    9. '0' → logprob: -14.580954551696777
    10. 'Number' → logprob: -14.705954551696777

Token 733: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40950721502304077
    2. '   ' → logprob: -1.5345072746276855
    3. ':
' → logprob: -2.1595072746276855
    4. ' def' → logprob: -6.6595072746276855
    5. 'def' → logprob: -6.9095072746276855
    6. '):
' → logprob: -7.5345072746276855
    7. '
' → logprob: -7.6595072746276855
    8. ' :
' → logprob: -8.034506797790527
    9. ' :' → logprob: -8.284506797790527
    10. ':def' → logprob: -8.659506797790527

Token 734: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6419985890388489
    2. '   ' → logprob: -0.7669985890388489
    3. ':
' → logprob: -5.266998767852783
    4. ' def' → logprob: -5.766998767852783
    5. '	def' → logprob: -8.141998291015625
    6. 'def' → logprob: -8.391998291015625
    7. ' :' → logprob: -8.641998291015625
    8. ':def' → logprob: -9.766998291015625
    9. '```' → logprob: -10.141998291015625
    10. ',' → logprob: -10.266998291015625

Token 735: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4573890268802643
    2. ':' → logprob: -1.207388997077942
    3. ' def' → logprob: -3.0823891162872314
    4. ':
' → logprob: -4.332388877868652
    5. 'def' → logprob: -5.457388877868652
    6. '	def' → logprob: -5.957388877868652
    7. ' :' → logprob: -7.832388877868652
    8. ',' → logprob: -8.207388877868652
    9. ':def' → logprob: -8.207388877868652
    10. ' :
' → logprob: -8.457388877868652

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007399800233542919
    2. ' def' → logprob: -5.507400035858154
    3. 'def' → logprob: -6.257400035858154
    4. '    ' → logprob: -7.882400035858154
    5. '	def' → logprob: -7.882400035858154
    6. ' indentation' → logprob: -8.507399559020996
    7. 'class' → logprob: -9.632399559020996
    8. '\t' → logprob: -9.632399559020996
    9. '    
' → logprob: -10.132399559020996
    10. ' indent' → logprob: -10.382399559020996

Token 737: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2954431176185608
    2. ' def' → logprob: -1.545443058013916
    3. 'def' → logprob: -3.170443058013916
    4. 'class' → logprob: -8.420443534851074
    5. 'IND' → logprob: -9.795443534851074
    6. ' indentation' → logprob: -9.920443534851074
    7. ' indent' → logprob: -10.170443534851074
    8. ' IND' → logprob: -10.170443534851074
    9. ' _' → logprob: -10.420443534851074
    10. '    ' → logprob: -10.670443534851074

Token 738: ' We' (ID: 1416)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8480085134506226
    2. 'def' → logprob: -0.9730085134506226
    3. '   ' → logprob: -2.348008632659912
    4. ' ' → logprob: -3.848008632659912
    5. ' =' → logprob: -3.848008632659912
    6. 'class' → logprob: -4.348008632659912
    7. ' :' → logprob: -4.848008632659912
    8. ':' → logprob: -5.223008632659912
    9. ')' → logprob: -5.348008632659912
    10. '(' → logprob: -5.598008632659912

Token 739: ' also' (ID: 1217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9712209105491638
    2. ':' → logprob: -1.4712209701538086
    3. ' =' → logprob: -1.9712209701538086
    4. ' ' → logprob: -2.8462209701538086
    5. 'class' → logprob: -2.8462209701538086
    6. ' def' → logprob: -3.3462209701538086
    7. '   ' → logprob: -3.4712209701538086
    8. '
' → logprob: -4.346220970153809
    9. '=' → logprob: -4.721220970153809
    10. '```' → logprob: -4.846220970153809

Token 740: ' track' (ID: 5290)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8306760787963867
    2. 'def' → logprob: -1.2056760787963867
    3. ' ' → logprob: -2.2056760787963867
    4. ' =' → logprob: -3.2056760787963867
    5. '   ' → logprob: -3.3306760787963867
    6. ':' → logprob: -3.9556760787963867
    7. ' have' → logprob: -4.455676078796387
    8. '
' → logprob: -4.705676078796387
    9. ' _' → logprob: -5.205676078796387
    10. '_' → logprob: -5.455676078796387

Token 741: ' position' (ID: 4010)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0253859758377075
    2. 'pos' → logprob: -1.1503859758377075
    3. 'def' → logprob: -2.525385856628418
    4. '   ' → logprob: -2.650385856628418
    5. 'current' → logprob: -2.775385856628418
    6. ' self' → logprob: -3.900385856628418
    7. 'the' → logprob: -4.025385856628418
    8. '```' → logprob: -4.025385856628418
    9. ' ' → logprob: -4.525385856628418
    10. '_pos' → logprob: -4.775385856628418

Token 742: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3014634847640991
    2. ' =' → logprob: -2.8014636039733887
    3. ':
' → logprob: -3.0514636039733887
    4. 'class' → logprob: -3.1764636039733887
    5. '   ' → logprob: -3.6764636039733887
    6. '
' → logprob: -4.176463603973389
    7. '(' → logprob: -4.301463603973389
    8. ' :' → logprob: -4.426463603973389
    9. ' ' → logprob: -4.551463603973389
    10. '=' → logprob: -4.801463603973389

Token 743: ' do' (ID: 621)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.4183626174926758
    2. ' def' → logprob: -2.168362617492676
    3. 'expr' → logprob: -2.418362617492676
    4. 'def' → logprob: -2.418362617492676
    5. 'text' → logprob: -2.543362617492676
    6. ' length' → logprob: -2.543362617492676
    7. 'code' → logprob: -3.043362617492676
    8. ' text' → logprob: -3.293362617492676
    9. 'input' → logprob: -3.418362617492676
    10. 's' → logprob: -3.543362617492676

Token 744: ' left' (ID: 3561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7131343483924866
    2. ' def' → logprob: -1.4631342887878418
    3. 'parse' → logprob: -2.213134288787842
    4. ' ' → logprob: -2.838134288787842
    5. '
' → logprob: -3.338134288787842
    6. '   ' → logprob: -4.338134288787842
    7. 'code' → logprob: -4.463134288787842
    8. ' parse' → logprob: -4.713134288787842
    9. 'token' → logprob: -4.963134288787842
    10. '_parse' → logprob: -5.338134288787842

Token 745: '-ass' (ID: 44229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6092104911804199
    2. 'def' → logprob: -1.85921049118042
    3. 'over' → logprob: -2.23421049118042
    4. ' ' → logprob: -2.98421049118042
    5. ')' → logprob: -3.73421049118042
    6. 'paren' → logprob: -3.85921049118042
    7. 'parent' → logprob: -4.23421049118042
    8. 'par' → logprob: -4.73421049118042
    9. '  ' → logprob: -4.85921049118042
    10. 'shift' → logprob: -4.98421049118042

Token 746: 'oci' (ID: 3212)
  Prédit: 'oc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oc' → logprob: -0.5305242538452148
    2. 'oci' → logprob: -0.9055242538452148
    3. 'ociate' → logprob: -5.155524253845215
    4. 'ign' → logprob: -6.780524253845215
    5. 'ociation' → logprob: -8.405524253845215
    6. '```' → logprob: -9.905524253845215
    7. 'ert' → logprob: -10.405524253845215
    8. '
' → logprob: -11.030524253845215
    9. 'ocl' → logprob: -11.030524253845215
    10. 'ocr' → logprob: -11.155524253845215

Token 747: 'ative' (ID: 1799)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.2542163133621216
    2. 'ivity' → logprob: -2.254216194152832
    3. 'ative' → logprob: -3.504216194152832
    4. 'ion' → logprob: -3.754216194152832
    5. 'ive' → logprob: -3.754216194152832
    6. 'ativity' → logprob: -4.004216194152832
    7. 've' → logprob: -5.004216194152832
    8. 'e' → logprob: -5.004216194152832
    9. 'ed' → logprob: -5.379216194152832
    10. '   ' → logprob: -6.379216194152832

Token 748: ' parsing' (ID: 51039)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2022314071655273
    2. ' def' → logprob: -1.3272314071655273
    3. ':' → logprob: -2.2022314071655273
    4. '   ' → logprob: -2.8272314071655273
    5. ' :' → logprob: -2.8272314071655273
    6. 'def' → logprob: -3.0772314071655273
    7. '
' → logprob: -3.3272314071655273
    8. 'class' → logprob: -3.7022314071655273
    9. ' :
' → logprob: -4.202231407165527
    10. ' =' → logprob: -4.452231407165527

Token 749: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05216129124164581
    2. ':
' → logprob: -3.92716121673584
    3. '   ' → logprob: -4.30216121673584
    4. ' :' → logprob: -5.17716121673584
    5. '(' → logprob: -6.17716121673584
    6. '(
' → logprob: -6.17716121673584
    7. ' ' → logprob: -6.42716121673584
    8. 'class' → logprob: -6.42716121673584
    9. '
' → logprob: -7.42716121673584
    10. ' :
' → logprob: -7.55216121673584

Token 750: ' +' (ID: 659)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.21969394385814667
    2. ' parse' → logprob: -3.219693899154663
    3. 'operators' → logprob: -3.219693899154663
    4. 'express' → logprob: -3.594693899154663
    5. 'def' → logprob: -3.969693899154663
    6. 'each' → logprob: -4.344694137573242
    7. 'the' → logprob: -4.469694137573242
    8. 'Q' → logprob: -4.469694137573242
    9. 'expr' → logprob: -5.344694137573242
    10. ' the' → logprob: -5.594694137573242

Token 751: ',-' (ID: 8202)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9455866813659668
    2. 'def' → logprob: -1.1955866813659668
    3. ' ' → logprob: -2.320586681365967
    4. 'class' → logprob: -2.445586681365967
    5. ')' → logprob: -3.195586681365967
    6. '_' → logprob: -3.695586681365967
    7. ',' → logprob: -4.445586681365967
    8. '  ' → logprob: -4.445586681365967
    9. '	' → logprob: -5.070586681365967
    10. '    ' → logprob: -6.195586681365967

Token 752: ',*' (ID: 65674)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1915627270936966
    2. '   ' → logprob: -2.6915626525878906
    3. 'class' → logprob: -3.3165626525878906
    4. ' :' → logprob: -3.6915626525878906
    5. ':
' → logprob: -3.8165626525878906
    6. 'def' → logprob: -5.316562652587891
    7. ' ' → logprob: -5.566562652587891
    8. ' class' → logprob: -5.941562652587891
    9. ' :
' → logprob: -5.941562652587891
    10. ' def' → logprob: -6.441562652587891

Token 753: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5726064443588257
    2. '   ' → logprob: -1.3226064443588257
    3. ':
' → logprob: -2.5726065635681152
    4. 'class' → logprob: -3.0726065635681152
    5. 'def' → logprob: -4.697606563568115
    6. ' ' → logprob: -4.947606563568115
    7. ' :' → logprob: -5.447606563568115
    8. '(
' → logprob: -5.572606563568115
    9. '):
' → logprob: -5.697606563568115
    10. '
' → logprob: -5.697606563568115

Token 754: ' described' (ID: 13394)
  Prédit: ' expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expected' → logprob: -1.2126386165618896
    2. ' follows' → logprob: -1.7126386165618896
    3. 'expected' → logprob: -2.3376386165618896
    4. '   ' → logprob: -2.8376386165618896
    5. 'def' → logprob: -2.9626386165618896
    6. ' well' → logprob: -3.0876386165618896
    7. 'class' → logprob: -3.2126386165618896
    8. ' def' → logprob: -3.4626386165618896
    9. ' intended' → logprob: -3.7126386165618896
    10. 'f' → logprob: -3.8376386165618896

Token 755: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12942950427532196
    2. 'class' → logprob: -3.254429578781128
    3. ':
' → logprob: -3.379429578781128
    4. '[' → logprob: -4.754429340362549
    5. ' ' → logprob: -4.879429340362549
    6. '   ' → logprob: -5.004429340362549
    7. '(
' → logprob: -5.379429340362549
    8. ' :' → logprob: -5.754429340362549
    9. '(' → logprob: -5.879429340362549
    10. '[
' → logprob: -5.879429340362549

Token 756: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055264074355363846
    2. ':' → logprob: -3.4302639961242676
    3. ' 
' → logprob: -5.305263996124268
    4. '    ' → logprob: -5.430263996124268
    5. ' def' → logprob: -5.430263996124268
    6. '    
' → logprob: -6.180263996124268
    7. ' ' → logprob: -7.055263996124268
    8. 'class' → logprob: -7.180263996124268
    9. '```' → logprob: -7.305263996124268
    10. ' :' → logprob: -7.430263996124268

Token 757: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6318677067756653
    2. '   ' → logprob: -0.8818677067756653
    3. ' :' → logprob: -3.6318676471710205
    4. ' def' → logprob: -5.0068678855896
    5. ' ' → logprob: -5.1318678855896
    6. ':
' → logprob: -5.5068678855896
    7. 'def' → logprob: -5.6318678855896
    8. '    ' → logprob: -5.7568678855896
    9. ' :
' → logprob: -6.8818678855896
    10. '	def' → logprob: -7.5068678855896

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01321892999112606
    2. '    ' → logprob: -5.513218879699707
    3. ' def' → logprob: -6.138218879699707
    4. 'def' → logprob: -6.138218879699707
    5. ':' → logprob: -6.388218879699707
    6. 'class' → logprob: -6.763218879699707
    7. ')' → logprob: -7.888218879699707
    8. ' ' → logprob: -8.388218879699707
    9. ' :' → logprob: -8.513218879699707
    10. '```' → logprob: -9.138218879699707

Token 759: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07608800381422043
    2. '	def' → logprob: -3.0760879516601562
    3. ' def' → logprob: -4.326087951660156
    4. 'def' → logprob: -4.951087951660156
    5. ':' → logprob: -5.951087951660156
    6. '	' → logprob: -7.076087951660156
    7. '       ' → logprob: -7.076087951660156
    8. '```' → logprob: -7.701087951660156
    9. ')' → logprob: -7.826087951660156
    10. '    ' → logprob: -8.326087951660156

Token 760: ' Evaluate' (ID: 95819)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6459248661994934
    2. 'def' → logprob: -1.2709248065948486
    3. '   ' → logprob: -2.1459248065948486
    4. 'class' → logprob: -3.0209248065948486
    5. ' ' → logprob: -4.770925045013428
    6. ' class' → logprob: -5.270925045013428
    7. ')' → logprob: -5.770925045013428
    8. '(' → logprob: -6.520925045013428
    9. ' (' → logprob: -6.520925045013428
    10. ':' → logprob: -6.770925045013428

Token 761: ' returns' (ID: 7377)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19989986717700958
    2. '(self' → logprob: -2.199899911880493
    3. '()' → logprob: -3.949899911880493
    4. '(' → logprob: -4.324899673461914
    5. '(
' → logprob: -4.574899673461914
    6. 'self' → logprob: -5.324899673461914
    7. ' def' → logprob: -5.449899673461914
    8. ' =' → logprob: -5.699899673461914
    9. ' ' → logprob: -6.199899673461914
    10. '   ' → logprob: -6.324899673461914

Token 762: ' integer' (ID: 16336)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2351921796798706
    2. ' an' → logprob: -1.2351921796798706
    3. 'def' → logprob: -1.3601921796798706
    4. 'the' → logprob: -2.73519229888916
    5. 'an' → logprob: -3.48519229888916
    6. ' a' → logprob: -4.11019229888916
    7. 'int' → logprob: -4.36019229888916
    8. '(int' → logprob: -4.73519229888916
    9. ' (' → logprob: -5.23519229888916
    10. ' def' → logprob: -5.36019229888916

Token 763: ' value' (ID: 1432)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14453831315040588
    2. ':
' → logprob: -2.519538402557373
    3. '   ' → logprob: -4.394538402557373
    4. 's' → logprob: -4.769538402557373
    5. 'class' → logprob: -5.144538402557373
    6. ' :' → logprob: -5.144538402557373
    7. ' ' → logprob: -5.769538402557373
    8. '
' → logprob: -6.394538402557373
    9. '(' → logprob: -6.394538402557373
    10. ' :
' → logprob: -6.394538402557373

Token 764: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013449141755700111
    2. ':
' → logprob: -4.888449192047119
    3. ' :' → logprob: -6.138449192047119
    4. '   ' → logprob: -6.638449192047119
    5. '(' → logprob: -7.263449192047119
    6. 'class' → logprob: -7.763449192047119
    7. 'def' → logprob: -8.138448715209961
    8. '(
' → logprob: -9.013448715209961
    9. ' ' → logprob: -9.138448715209961
    10. ' :
' → logprob: -9.263448715209961

Token 765: ' expression' (ID: 12973)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5660905838012695
    2. 'expression' → logprob: -1.4410905838012695
    3. ' the' → logprob: -2.4410905838012695
    4. 'parsed' → logprob: -3.4410905838012695
    5. 'expr' → logprob: -4.0660905838012695
    6. 'AST' → logprob: -4.1910905838012695
    7. 'node' → logprob: -4.4410905838012695
    8. 'ast' → logprob: -4.6910905838012695
    9. 'parse' → logprob: -4.9410905838012695
    10. ' expression' → logprob: -5.0660905838012695

Token 766: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022857902571558952
    2. '   ' → logprob: -4.772857666015625
    3. ' :' → logprob: -5.147857666015625
    4. ':
' → logprob: -5.522857666015625
    5. 'class' → logprob: -6.647857666015625
    6. '(' → logprob: -7.147857666015625
    7. '(
' → logprob: -8.147857666015625
    8. ' ' → logprob: -8.147857666015625
    9. 'def' → logprob: -8.147857666015625
    10. '):' → logprob: -8.397857666015625

Token 767: 'in' (ID: 258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020611491054296494
    2. ')
' → logprob: -4.77061128616333
    3. ' )' → logprob: -5.52061128616333
    4. '   ' → logprob: -5.77061128616333
    5. '):
' → logprob: -6.52061128616333
    6. '):' → logprob: -6.77061128616333
    7. ' ' → logprob: -7.02061128616333
    8. 'def' → logprob: -7.52061128616333
    9. '  ' → logprob: -9.020611763000488
    10. ' )
' → logprob: -9.020611763000488

Token 768: ' decimal' (ID: 26964)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.18583883345127106
    2. '2' → logprob: -3.1858389377593994
    3. '32' → logprob: -3.6858389377593994
    4. 'two' → logprob: -4.31083869934082
    5. 'the' → logprob: -4.43583869934082
    6. 'def' → logprob: -4.56083869934082
    7. 'bits' → logprob: -4.68583869934082
    8. 'base' → logprob: -5.06083869934082
    9. 'python' → logprob: -5.31083869934082
    10. ' ' → logprob: -5.31083869934082

Token 769: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03393106162548065
    2. '
' → logprob: -5.033931255340576
    3. ' ' → logprob: -5.158931255340576
    4. ' )' → logprob: -5.158931255340576
    5. '   ' → logprob: -5.283931255340576
    6. ')
' → logprob: -5.408931255340576
    7. '\n' → logprob: -6.658931255340576
    8. ',' → logprob: -7.283931255340576
    9. '):
' → logprob: -7.408931255340576
    10. '):' → logprob: -7.783931255340576

Token 770: '        
' (ID: 3564)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16558332741260529
    2. '   ' → logprob: -2.040583372116089
    3. ' :' → logprob: -4.91558313369751
    4. ' ' → logprob: -5.04058313369751
    5. ':
' → logprob: -5.16558313369751
    6. ' :
' → logprob: -7.29058313369751
    7. '```' → logprob: -7.66558313369751
    8. '[' → logprob: -7.79058313369751
    9. '    ' → logprob: -8.165583610534668
    10. 'class' → logprob: -8.290583610534668

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032137224916368723
    2. ' def' → logprob: -6.378213882446289
    3. 'def' → logprob: -7.753213882446289
    4. '	def' → logprob: -8.378213882446289
    5. '    ' → logprob: -8.503213882446289
    6. '    
' → logprob: -8.753213882446289
    7. 'class' → logprob: -9.128213882446289
    8. ' indentation' → logprob: -9.253213882446289
    9. ':' → logprob: -9.628213882446289
    10. ')' → logprob: -10.003213882446289

Token 772: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4769923985004425
    2. '	def' → logprob: -1.2269923686981201
    3. ' def' → logprob: -2.60199236869812
    4. 'def' (adapté à ' def') → logprob: -4.726992607116699
    5. ':' → logprob: -7.101992607116699
    6. '\t' → logprob: -7.226992607116699
    7. ' ' → logprob: -7.726992607116699
    8. '	' → logprob: -8.2269926071167
    9. '    ' → logprob: -8.2269926071167
    10. 'class' → logprob: -8.9769926071167

Token 773: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4745463728904724
    2. ' __' → logprob: -0.9745463728904724
    3. '_init' → logprob: -7.849546432495117
    4. 'init' → logprob: -9.974546432495117
    5. '_parse' → logprob: -11.224546432495117
    6. 'parse' → logprob: -12.099546432495117
    7. ' parse' → logprob: -12.349546432495117
    8. ' def' → logprob: -12.599546432495117
    9. ' init' → logprob: -12.724546432495117
    10. 'def' → logprob: -13.099546432495117

Token 774: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. '(init' → logprob: -21.875
    4. '_init' → logprob: -22.0
    5. '	init' → logprob: -22.375
    6. '  ' → logprob: -22.75
    7. 'inite' → logprob: -22.75
    8. ' ' → logprob: -23.125
    9. '.init' → logprob: -23.375
    10. '
' → logprob: -23.625

Token 775: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3376314043998718
    2. '(self' → logprob: -1.3376314640045166
    3. ' (' → logprob: -3.9626314640045166
    4. '(
' → logprob: -6.7126312255859375
    5. '<|end|>' → logprob: -6.8376312255859375
    6. 'self' → logprob: -6.9626312255859375
    7. '<|end|>' → logprob: -7.8376312255859375
    8. '   ' → logprob: -8.212631225585938
    9. ' ' → logprob: -8.712631225585938
    10. '__(' → logprob: -9.462631225585938

Token 776: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.9040898880339228e-05
    2. ' self' → logprob: -10.625028610229492
    3. '(self' → logprob: -13.000028610229492
    4. '   ' → logprob: -13.250028610229492
    5. ')' → logprob: -14.875028610229492
    6. '	self' → logprob: -16.625028610229492
    7. ' ' → logprob: -17.125028610229492
    8. '{' → logprob: -17.500028610229492
    9. '
' → logprob: -17.625028610229492
    10. '_self' → logprob: -17.750028610229492

Token 777: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.26279401779174805
    2. ',' → logprob: -1.762794017791748
    3. ' (' → logprob: -3.137794017791748
    4. '(' → logprob: -4.762794017791748
    5. 'self' → logprob: -5.012794017791748
    6. ' ,' → logprob: -7.637794017791748
    7. ' self' → logprob: -9.012794494628906
    8. ',self' → logprob: -9.012794494628906
    9. '(
' → logprob: -10.637794494628906
    10. '[' → logprob: -10.637794494628906

Token 778: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1253100633621216
    2. 'self' → logprob: -1.1253100633621216
    3. 'expr' → logprob: -1.1253100633621216
    4. 'text' → logprob: -4.750309944152832
    5. ' s' → logprob: -5.125309944152832
    6. ' expr' → logprob: -5.250309944152832
    7. ' self' → logprob: -6.250309944152832
    8. 'expression' → logprob: -6.375309944152832
    9. 'code' → logprob: -6.875309944152832
    10. '   ' → logprob: -6.875309944152832

Token 779: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2189515382051468
    2. '):
' → logprob: -1.7189515829086304
    3. ')' → logprob: -5.09395170211792
    4. ':' → logprob: -5.34395170211792
    5. '   ' → logprob: -6.09395170211792
    6. ',' → logprob: -6.84395170211792
    7. '<|end|>' → logprob: -7.09395170211792
    8. '[' → logprob: -7.21895170211792
    9. '):
' → logprob: -7.96895170211792
    10. '<|end|>' → logprob: -8.343951225280762

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.113290095934644e-05
    2. 'self' → logprob: -10.000081062316895
    3. '   ' → logprob: -10.375081062316895
    4. ' self' → logprob: -13.000081062316895
    5. '(self' → logprob: -14.125081062316895
    6. '	self' → logprob: -15.250081062316895
    7. '[' → logprob: -15.250081062316895
    8. '           ' → logprob: -15.250081062316895
    9. '```' → logprob: -15.875081062316895
    10. '[self' → logprob: -16.12508201599121

Token 781: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014377507381141186
    2. '       ' → logprob: -4.264377593994141
    3. ' self' → logprob: -8.51437759399414
    4. '   ' → logprob: -11.26437759399414
    5. ' ' → logprob: -15.26437759399414
    6. '	self' → logprob: -16.01437759399414
    7. '(self' → logprob: -16.26437759399414
    8. 'def' → logprob: -16.26437759399414
    9. '           ' → logprob: -17.63937759399414
    10. 's' → logprob: -18.01437759399414

Token 782: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.16814038157463074
    2. '.' → logprob: -1.9181404113769531
    3. '.pos' → logprob: -6.168140411376953
    4. '.str' → logprob: -6.543140411376953
    5. ' .' → logprob: -6.918140411376953
    6. '.text' → logprob: -7.418140411376953
    7. 's' → logprob: -7.543140411376953
    8. '._' → logprob: -7.668140411376953
    9. '.input' → logprob: -7.668140411376953
    10. '.string' → logprob: -8.043140411376953

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18311624228954315
    2. ' =' → logprob: -2.5581161975860596
    3. '[self' → logprob: -3.6831161975860596
    4. '[' → logprob: -4.058116436004639
    5. '=self' → logprob: -4.308116436004639
    6. '       ' → logprob: -4.558116436004639
    7. '   ' → logprob: -5.058116436004639
    8. ',' → logprob: -5.558116436004639
    9. '<|end|>' → logprob: -6.183116436004639
    10. '[idx' → logprob: -6.933116436004639

Token 784: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008615635335445404
    2. ' s' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.383615493774414
    4. ' ' → logprob: -15.633615493774414
    5. '	s' → logprob: -16.508615493774414
    6. '    ' → logprob: -16.633615493774414
    7. '       ' → logprob: -16.883615493774414
    8. '     ' → logprob: -17.258615493774414
    9. '{s' → logprob: -17.383615493774414
    10. '_s' → logprob: -17.508615493774414

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028456905856728554
    2. '   ' → logprob: -4.028456687927246
    3. '<|end|>' → logprob: -5.028456687927246
    4. '
' → logprob: -6.903456687927246
    5. '```' → logprob: -7.778456687927246
    6. ' ' → logprob: -7.778456687927246
    7. 'def' → logprob: -8.028456687927246
    8. ',' → logprob: -8.153456687927246
    9. 'self' → logprob: -8.278456687927246
    10. '<|end|>' → logprob: -8.653456687927246

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004269812779966742
    2. '   ' → logprob: -8.12542724609375
    3. 'self' → logprob: -9.00042724609375
    4. ' self' → logprob: -12.50042724609375
    5. ',' → logprob: -13.87542724609375
    6. '```' → logprob: -14.00042724609375
    7. 'def' → logprob: -14.62542724609375
    8. '           ' → logprob: -14.75042724609375
    9. ' ' → logprob: -14.87542724609375
    10. '
' → logprob: -15.50042724609375

Token 787: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038057442754507065
    2. '       ' → logprob: -3.288057327270508
    3. ' self' → logprob: -11.538057327270508
    4. '0' → logprob: -12.163057327270508
    5. '   ' → logprob: -14.163057327270508
    6. '
' → logprob: -16.663057327270508
    7. 'n' → logprob: -17.038057327270508
    8. '(self' → logprob: -17.288057327270508
    9. ' ' → logprob: -17.413057327270508
    10. 'def' → logprob: -17.788057327270508

Token 788: '.n' (ID: 1835)
  Prédit: '.idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -1.1001859903335571
    2. '.pos' → logprob: -1.3501859903335571
    3. 'pos' → logprob: -1.6001859903335571
    4. '.i' → logprob: -1.8501859903335571
    5. '.len' → logprob: -3.4751858711242676
    6. '.n' → logprob: -4.225185871124268
    7. '_pos' → logprob: -7.100185871124268
    8. 'idx' → logprob: -7.225185871124268
    9. '.length' → logprob: -7.350185871124268
    10. 'len' → logprob: -8.100186347961426

Token 789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.801505982875824
    2. ' =' → logprob: -0.801505982875824
    3. '   ' → logprob: -2.4265060424804688
    4. '       ' → logprob: -5.176506042480469
    5. '=len' → logprob: -5.176506042480469
    6. '=self' → logprob: -6.926506042480469
    7. 'um' → logprob: -7.301506042480469
    8. '    ' → logprob: -8.176506042480469
    9. '  ' → logprob: -8.176506042480469
    10. ' ' → logprob: -8.801506042480469

Token 790: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.583550642360933e-05
    2. ' len' → logprob: -10.250036239624023
    3. '0' → logprob: -15.375036239624023
    4. '   ' → logprob: -16.125036239624023
    5. '(len' → logprob: -16.875036239624023
    6. '       ' → logprob: -17.000036239624023
    7. '=len' → logprob: -17.375036239624023
    8. '	len' → logprob: -18.875036239624023
    9. '[len' → logprob: -19.875036239624023
    10. ' ' → logprob: -20.000036239624023

Token 791: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0033579664304852486
    2. 's' → logprob: -6.253357887268066
    3. '(self' → logprob: -6.753357887268066
    4. 'self' → logprob: -8.253357887268066
    5. '(' → logprob: -14.003357887268066
    6. ' s' → logprob: -16.503358840942383
    7. '```' → logprob: -16.628358840942383
    8. '_s' → logprob: -17.378358840942383
    9. ' self' → logprob: -17.628358840942383
    10. '(
' → logprob: -18.253358840942383

Token 792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034002382308244705
    2. ')
' → logprob: -3.6590023040771484
    3. '       ' → logprob: -4.909002304077148
    4. '   ' → logprob: -8.909002304077148
    5. 'self' → logprob: -9.159002304077148
    6. ',' → logprob: -10.909002304077148
    7. ' )' → logprob: -11.659002304077148
    8. '<|end|>' → logprob: -12.284002304077148
    9. '
' → logprob: -12.534002304077148
    10. '):
' → logprob: -13.034002304077148

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005519753787666559
    2. 'self' → logprob: -5.380519866943359
    3. '   ' → logprob: -7.130519866943359
    4. 'def' → logprob: -10.00551986694336
    5. ' self' → logprob: -10.25551986694336
    6. '```' → logprob: -11.88051986694336
    7. '	self' → logprob: -12.50551986694336
    8. '	' → logprob: -12.75551986694336
    9. '           ' → logprob: -13.63051986694336
    10. ' ' → logprob: -13.75551986694336

Token 794: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0040874239057302475
    2. '       ' → logprob: -5.504087448120117
    3. ' self' → logprob: -12.379087448120117
    4. '   ' → logprob: -12.879087448120117
    5. '0' → logprob: -13.629087448120117
    6. 'def' → logprob: -14.004087448120117
    7. '	self' → logprob: -16.879087448120117
    8. '```' → logprob: -16.879087448120117
    9. '
' → logprob: -17.254087448120117
    10. ' ' → logprob: -17.629087448120117

Token 795: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.7489645481109619
    2. '.idx' → logprob: -1.248964548110962
    3. '.i' → logprob: -1.498964548110962
    4. 'pos' → logprob: -4.123964309692383
    5. 'idx' → logprob: -7.998964309692383
    6. '.index' → logprob: -8.623964309692383
    7. 'i' → logprob: -8.748964309692383
    8. '_pos' → logprob: -10.248964309692383
    9. 'index' → logprob: -10.873964309692383
    10. '.' → logprob: -11.498964309692383

Token 796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760165452957153
    2. '=' → logprob: -0.8260165452957153
    3. '   ' → logprob: -10.451016426086426
    4. ' ' → logprob: -11.076016426086426
    5. '<|end|>' → logprob: -11.201016426086426
    6. ')' → logprob: -12.076016426086426
    7. '  ' → logprob: -12.326016426086426
    8. '    ' → logprob: -13.326016426086426
    9. '       ' → logprob: -13.826016426086426
    10. '0' → logprob: -14.076016426086426

Token 797: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.0
    4. '[' → logprob: -21.5
    5. '=' → logprob: -21.875
    6. '۰' → logprob: -22.0
    7. '(' → logprob: -22.375
    8. '  ' → logprob: -23.375
    9. '<|end|>' → logprob: -23.625
    10. '```' → logprob: -23.875

Token 798: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '=' → logprob: -19.625
    4. '   ' → logprob: -19.75
    5. '[' → logprob: -20.125
    6. '۰' → logprob: -20.25
    7. '```' → logprob: -21.0
    8. '(' → logprob: -21.75
    9. '000' → logprob: -21.75
    10. '       ' → logprob: -22.0

Token 799: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03682657703757286
    2. 'def' → logprob: -3.7868266105651855
    3. ' def' → logprob: -5.2868266105651855
    4. '    
' → logprob: -5.4118266105651855
    5. '```' → logprob: -6.5368266105651855
    6. '<|end|>' → logprob: -7.1618266105651855
    7. '        
' → logprob: -7.7868266105651855
    8. '       ' → logprob: -7.7868266105651855
    9. '
' → logprob: -8.661826133728027
    10. '	def' → logprob: -8.786826133728027

Token 800: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2514461874961853
    2. 'def' → logprob: -2.12644624710083
    3. '    
' → logprob: -3.12644624710083
    4. '```' → logprob: -3.62644624710083
    5. ' def' → logprob: -4.00144624710083
    6. '<|end|>' → logprob: -5.37644624710083
    7. '
' → logprob: -6.00144624710083
    8. '	def' → logprob: -6.00144624710083
    9. ' 
' → logprob: -6.37644624710083
    10. '        
' → logprob: -6.50144624710083

Token 801: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009570781840011477
    2. ' def' → logprob: -7.000957012176514
    3. '   ' → logprob: -10.000957489013672
    4. '	def' → logprob: -15.625957489013672
    5. '```' → logprob: -19.000957489013672
    6. '_def' → logprob: -19.500957489013672
    7. ':def' → logprob: -19.500957489013672
    8. 'Def' → logprob: -20.375957489013672
    9. '    
' → logprob: -20.750957489013672
    10. '       ' → logprob: -21.250957489013672

Token 802: ' utility' (ID: 24779)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003391574718989432
    2. ' def' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.50033950805664
    4. ' ' → logprob: -19.12533950805664
    5. '
' → logprob: -19.75033950805664
    6. '_def' → logprob: -20.00033950805664
    7. '	def' → logprob: -20.50033950805664
    8. 'Def' → logprob: -20.75033950805664
    9. '@' → logprob: -20.75033950805664
    10. '       ' → logprob: -21.12533950805664

Token 803: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6474990844726562
    2. ' def' → logprob: -1.0224990844726562
    3. '   ' → logprob: -2.1474990844726562
    4. '	def' → logprob: -9.772499084472656
    5. '```' → logprob: -10.272499084472656
    6. ' ' → logprob: -10.772499084472656
    7. '    ' → logprob: -11.147499084472656
    8. '
' → logprob: -11.147499084472656
    9. '    
' → logprob: -11.397499084472656
    10. '  ' → logprob: -11.522499084472656

Token 804: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07721817493438721
    2. ' def' → logprob: -2.8272180557250977
    3. '   ' → logprob: -4.202218055725098
    4. ' ' → logprob: -9.702218055725098
    5. '	def' → logprob: -10.577218055725098
    6. '  ' → logprob: -11.077218055725098
    7. '    ' → logprob: -11.202218055725098
    8. ' =' → logprob: -11.327218055725098
    9. '=' → logprob: -11.327218055725098
    10. ':' → logprob: -11.702218055725098

Token 805: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0025157311465591192
    2. ' def' → logprob: -6.00251579284668
    3. '   ' → logprob: -10.12751579284668
    4. '	def' → logprob: -16.12751579284668
    5. ' ' → logprob: -18.12751579284668
    6. '_def' → logprob: -18.50251579284668
    7. '
' → logprob: -19.00251579284668
    8. 'Def' → logprob: -20.12751579284668
    9. '    
' → logprob: -20.25251579284668
    10. ':def' → logprob: -20.25251579284668

Token 806: ' peek' (ID: 54757)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.03370783105492592
    2. 'skip' → logprob: -4.283707618713379
    3. 'consume' → logprob: -5.158707618713379
    4. 'current' → logprob: -5.533707618713379
    5. 'error' → logprob: -5.658707618713379
    6. 'eat' → logprob: -5.783707618713379
    7. 'next' → logprob: -6.408707618713379
    8. ' peek' → logprob: -7.533707618713379
    9. 'e' → logprob: -8.533707618713379
    10. 'advance' → logprob: -8.783707618713379

Token 807: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2664729058742523
    2. '(self' → logprob: -1.6414729356765747
    3. '(' → logprob: -3.766472816467285
    4. '():' → logprob: -4.141472816467285
    5. '():
' → logprob: -7.391472816467285
    6. ' ()' → logprob: -7.891472816467285
    7. 'self' → logprob: -9.141472816467285
    8. ' (' → logprob: -10.391472816467285
    9. '()[' → logprob: -10.891472816467285
    10. '()`' → logprob: -11.641472816467285

Token 808: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03526996448636055
    2. '():' → logprob: -3.6602699756622314
    3. '(' → logprob: -5.410269737243652
    4. '():
' → logprob: -6.035269737243652
    5. ' ()' → logprob: -7.035269737243652
    6. '(self' → logprob: -8.035269737243652
    7. '()[' → logprob: -8.160269737243652
    8. '())' → logprob: -9.160269737243652
    9. ' ' → logprob: -9.785269737243652
    10. '()<' → logprob: -9.910269737243652

Token 809: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034204114228487015
    2. 'return' → logprob: -4.034204006195068
    3. '       ' → logprob: -4.284204006195068
    4. ' return' → logprob: -6.659204006195068
    5. '   ' → logprob: -7.909204006195068
    6. '()
' → logprob: -9.534204483032227
    7. 'if' → logprob: -9.784204483032227
    8. 'self' → logprob: -10.034204483032227
    9. '()[' → logprob: -10.034204483032227
    10. '[]' → logprob: -10.284204483032227

Token 810: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11394345760345459
    2. ' return' → logprob: -2.613943576812744
    3. 'if' → logprob: -3.613943576812744
    4. '       ' → logprob: -5.238943576812744
    5. ' if' → logprob: -6.738943576812744
    6. '()' → logprob: -7.113943576812744
    7. 'self' → logprob: -9.488943099975586
    8. '           ' → logprob: -9.613943099975586
    9. '	return' → logprob: -11.363943099975586
    10. ':return' → logprob: -11.488943099975586

Token 811: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.034447282552719116
    2. ' self' → logprob: -3.409447193145752
    3. '''' → logprob: -7.159447193145752
    4. 'None' → logprob: -11.15944766998291
    5. ' None' → logprob: -12.78444766998291
    6. ''' → logprob: -13.53444766998291
    7. '""' → logprob: -13.65944766998291
    8. ' ''' → logprob: -13.78444766998291
    9. ''\' → logprob: -13.78444766998291
    10. '(self' → logprob: -14.15944766998291

Token 812: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0004213786742184311
    2. '.pos' → logprob: -8.250421524047852
    3. 'pos' → logprob: -9.625421524047852
    4. 'self' → logprob: -10.500421524047852
    5. '[self' → logprob: -10.500421524047852
    6. '[pos' → logprob: -10.875421524047852
    7. ' .' → logprob: -11.750421524047852
    8. '[' → logprob: -12.250421524047852
    9. '.' → logprob: -13.250421524047852
    10. '   ' → logprob: -13.500421524047852

Token 813: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.1637164789135568e-05
    2. 'self' → logprob: -11.375011444091797
    3. '[' → logprob: -16.000011444091797
    4. '(self' → logprob: -17.625011444091797
    5. '[
' → logprob: -18.000011444091797
    6. ',self' → logprob: -18.375011444091797
    7. '   ' → logprob: -19.250011444091797
    8. ' self' → logprob: -19.500011444091797
    9. '```' → logprob: -19.625011444091797
    10. '	self' → logprob: -20.500011444091797

Token 814: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.04249080270528793
    2. 'self' → logprob: -3.5424907207489014
    3. '.self' → logprob: -5.2924909591674805
    4. '[self' → logprob: -5.6674909591674805
    5. 'pos' → logprob: -5.6674909591674805
    6. '_pos' → logprob: -8.66749095916748
    7. '.' → logprob: -8.91749095916748
    8. ' self' → logprob: -9.04249095916748
    9. 'elf' → logprob: -9.91749095916748
    10. '	self' → logprob: -10.04249095916748

Token 815: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02317524142563343
    2. '[self' → logprob: -3.8981752395629883
    3. ' if' → logprob: -6.273175239562988
    4. 'self' → logprob: -8.273175239562988
    5. 'if' → logprob: -8.773175239562988
    6. '<|end|>' → logprob: -8.898175239562988
    7. '[' → logprob: -9.148175239562988
    8. ' ]' → logprob: -10.648175239562988
    9. '']' → logprob: -10.898175239562988
    10. '<|end|>' → logprob: -11.398175239562988

Token 816: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21207889914512634
    2. 'if' → logprob: -1.7120789289474487
    3. '[' → logprob: -5.212079048156738
    4. '<|end|>' → logprob: -5.837079048156738
    5. '[self' → logprob: -6.962079048156738
    6. '   ' → logprob: -7.962079048156738
    7. '       ' → logprob: -7.962079048156738
    8. '<|end|>' → logprob: -8.962079048156738
    9. '()' → logprob: -9.462079048156738
    10. '           ' → logprob: -9.712079048156738

Token 817: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '(self' → logprob: -18.001928329467773
    6. '0' → logprob: -19.501928329467773
    7. '	self' → logprob: -20.001928329467773
    8. '       ' → logprob: -20.126928329467773
    9. '  ' → logprob: -20.501928329467773
    10. '_self' → logprob: -21.626928329467773

Token 818: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -9.088346359931165e-07
    2. 'pos' → logprob: -14.500000953674316
    3. ' .' → logprob: -15.625000953674316
    4. '.have' → logprob: -16.5
    5. '.' → logprob: -16.75
    6. 'self' → logprob: -16.875
    7. '.has' → logprob: -17.5
    8. '.idx' → logprob: -18.375
    9. '	pos' → logprob: -18.75
    10. '.self' → logprob: -18.75

Token 819: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05946611985564232
    2. ' <' → logprob: -3.5594661235809326
    3. '<len' → logprob: -3.5594661235809326
    4. '<size' → logprob: -7.6844658851623535
    5. '<int' → logprob: -9.059466361999512
    6. '<n' → logprob: -10.059466361999512
    7. '<num' → logprob: -10.934466361999512
    8. '<char' → logprob: -11.059466361999512
    9. '<data' → logprob: -11.434466361999512
    10. '<ll' → logprob: -11.434466361999512

Token 820: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013011827832087874
    2. ' self' → logprob: -9.000129699707031
    3. 'len' → logprob: -12.000129699707031
    4. '=self' → logprob: -15.375129699707031
    5. '(self' → logprob: -16.12512969970703
    6. '[self' → logprob: -16.50012969970703
    7. '	self' → logprob: -17.00012969970703
    8. 'elf' → logprob: -17.12512969970703
    9. '   ' → logprob: -17.62512969970703
    10. ' ' → logprob: -17.75012969970703

Token 821: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0017621672013774514
    2. '.pos' → logprob: -7.126762390136719
    3. '.len' → logprob: -7.751762390136719
    4. 'n' → logprob: -8.751762390136719
    5. '.length' → logprob: -9.001762390136719
    6. 'pos' → logprob: -9.001762390136719
    7. 'len' → logprob: -10.251762390136719
    8. '.' → logprob: -10.376762390136719
    9. '.size' → logprob: -11.126762390136719
    10. ' .' → logprob: -11.251762390136719

Token 822: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3497460186481476
    2. 'else' → logprob: -1.2247459888458252
    3. '       ' → logprob: -8.224745750427246
    4. '	else' → logprob: -8.224745750427246
    5. '<|end|>' → logprob: -8.349745750427246
    6. '<|end|>' → logprob: -8.974745750427246
    7. '           ' → logprob: -9.224745750427246
    8. '
' → logprob: -9.849745750427246
    9. '   ' → logprob: -10.474745750427246
    10. '+' → logprob: -10.599745750427246

Token 823: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.17983047664165497
    2. '''' → logprob: -2.179830551147461
    3. ''\' → logprob: -3.179830551147461
    4. ' None' → logprob: -4.679830551147461
    5. ''' → logprob: -8.054830551147461
    6. '""' → logprob: -8.929830551147461
    7. '''
' → logprob: -9.304830551147461
    8. 'EOF' → logprob: -9.429830551147461
    9. ' ''' → logprob: -11.179830551147461
    10. '"\' → logprob: -12.054830551147461

Token 824: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22839023172855377
    2. '<|end|>' → logprob: -1.8533902168273926
    3. 'def' → logprob: -3.3533902168273926
    4. '    
' → logprob: -5.478390216827393
    5. '
' → logprob: -5.603390216827393
    6. '<|end|>' → logprob: -6.603390216827393
    7. '  ' → logprob: -7.228390216827393
    8. ' ' → logprob: -7.478390216827393
    9. '       ' → logprob: -7.853390216827393
    10. '  
' → logprob: -8.10339069366455

Token 825: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.644658088684082
    2. '   ' → logprob: -0.769658088684082
    3. ' def' → logprob: -5.269658088684082
    4. '    
' → logprob: -5.394658088684082
    5. '
' → logprob: -7.519658088684082
    6. ':' → logprob: -7.644658088684082
    7. '	def' → logprob: -8.269658088684082
    8. '```' → logprob: -8.269658088684082
    9. '  
' → logprob: -8.394658088684082
    10. '       ' → logprob: -9.019658088684082

Token 826: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7044947147369385
    2. 'def' (adapté à ' def') → logprob: -0.7044947147369385
    3. '    
' → logprob: -5.704494476318359
    4. ':' → logprob: -5.829494476318359
    5. ' def' → logprob: -5.829494476318359
    6. '```' → logprob: -6.829494476318359
    7. '
' → logprob: -8.32949447631836
    8. ')' → logprob: -9.07949447631836
    9. '  
' → logprob: -9.45449447631836
    10. '       ' → logprob: -9.45449447631836

Token 827: ' consume' (ID: 34881)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.05945129320025444
    2. 'eat' → logprob: -3.4344513416290283
    3. 'advance' → logprob: -4.434451103210449
    4. 'error' → logprob: -4.809451103210449
    5. 'expect' → logprob: -5.684451103210449
    6. 'next' → logprob: -6.809451103210449
    7. 'e' → logprob: -7.934451103210449
    8. 'match' → logprob: -8.80945110321045
    9. 'skip' → logprob: -8.80945110321045
    10. ' consume' → logprob: -9.30945110321045

Token 828: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5112597346305847
    2. '(' → logprob: -1.0112597942352295
    3. '()' → logprob: -3.6362597942352295
    4. '('' → logprob: -4.88625955581665
    5. ' (' → logprob: -7.01125955581665
    6. '("("' → logprob: -7.13625955581665
    7. '   ' → logprob: -8.636260032653809
    8. ' ' → logprob: -8.636260032653809
    9. 'self' → logprob: -8.761260032653809
    10. '("' → logprob: -8.761260032653809

Token 829: '):
' (ID: 1883)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.112878680229187
    2. '):' → logprob: -1.237878680229187
    3. '(' → logprob: -1.612878680229187
    4. '()' → logprob: -2.8628787994384766
    5. ')' → logprob: -3.2378787994384766
    6. '('' → logprob: -3.3628787994384766
    7. ' ):' → logprob: -4.862878799438477
    8. '():
' → logprob: -5.112878799438477
    9. '):
' → logprob: -5.237878799438477
    10. ' (' → logprob: -5.362878799438477

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004024495370686054
    2. 'c' → logprob: -6.504024505615234
    3. 'self' → logprob: -6.504024505615234
    4. 'return' → logprob: -7.379024505615234
    5. 'ch' → logprob: -9.004024505615234
    6. ' c' → logprob: -9.754024505615234
    7. '   ' → logprob: -9.754024505615234
    8. '```' → logprob: -10.254024505615234
    9. '()' → logprob: -10.379024505615234
    10. 'char' → logprob: -10.504024505615234

Token 831: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12846074998378754
    2. 'ch' (adapté à ' ch') → logprob: -2.128460645675659
    3. 'self' → logprob: -6.628460884094238
    4. 'res' → logprob: -9.503460884094238
    5. 'r' → logprob: -9.878460884094238
    6. '   ' → logprob: -10.003460884094238
    7. 'x' → logprob: -11.503460884094238
    8. ' c' → logprob: -11.628460884094238
    9. ' ch' → logprob: -11.878460884094238
    10. 'tok' → logprob: -12.253460884094238

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3252435326576233
    2. '=' → logprob: -1.3252434730529785
    3. '=self' → logprob: -6.2002434730529785
    4. '       ' → logprob: -6.3252434730529785
    5. '()' → logprob: -6.5752434730529785
    6. 'return' → logprob: -6.9502434730529785
    7. 'def' → logprob: -6.9502434730529785
    8. '   ' → logprob: -7.2002434730529785
    9. ')' → logprob: -7.3252434730529785
    10. '(self' → logprob: -7.4502434730529785

Token 833: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '       ' → logprob: -18.125036239624023
    4. '   ' → logprob: -18.375036239624023
    5. '	self' → logprob: -20.500036239624023
    6. '(self' → logprob: -20.750036239624023
    7. 's' → logprob: -20.750036239624023
    8. ' ' → logprob: -21.000036239624023
    9. '=self' → logprob: -21.000036239624023
    10. '  ' → logprob: -21.625036239624023

Token 834: '.peek' (ID: 73296)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -4.167648876318708e-05
    2. '.' → logprob: -10.750041961669922
    3. 's' → logprob: -11.750041961669922
    4. ' .' → logprob: -11.875041961669922
    5. '.peek' → logprob: -13.000041961669922
    6. '   ' → logprob: -13.750041961669922
    7. 'peek' → logprob: -14.750041961669922
    8. '       ' → logprob: -15.000041961669922
    9. '	s' → logprob: -15.125041961669922
    10. ' ' → logprob: -15.625041961669922

Token 835: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07061348110437393
    2. '()' → logprob: -3.195613384246826
    3. '       ' → logprob: -3.820613384246826
    4. '
' → logprob: -5.570613384246826
    5. '();' → logprob: -7.195613384246826
    6. 'self' → logprob: -7.695613384246826
    7. '           ' → logprob: -9.320613861083984
    8. ';' → logprob: -9.820613861083984
    9. '   ' → logprob: -10.320613861083984
    10. 'return' → logprob: -10.445613861083984

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01641802117228508
    2. 'self' → logprob: -4.141417980194092
    3. '
' → logprob: -8.64141845703125
    4. '   ' → logprob: -9.76641845703125
    5. ' self' → logprob: -10.01641845703125
    6. 'if' → logprob: -10.01641845703125
    7. '(self' → logprob: -10.39141845703125
    8. '           ' → logprob: -11.76641845703125
    9. '```' → logprob: -12.14141845703125
    10. '	self' → logprob: -12.39141845703125

Token 837: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0033027164172381163
    2. 'if' (adapté à ' if') → logprob: -5.753302574157715
    3. '       ' → logprob: -9.003302574157715
    4. ' self' → logprob: -13.628302574157715
    5. '   ' → logprob: -14.128302574157715
    6. '           ' → logprob: -17.12830352783203
    7. '
' → logprob: -18.12830352783203
    8. '	self' → logprob: -18.12830352783203
    9. ' if' → logprob: -18.25330352783203
    10. '(self' → logprob: -18.75330352783203

Token 838: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.057337772101163864
    2. ' ch' → logprob: -3.307337760925293
    3. 'self' → logprob: -4.057337760925293
    4. ' self' → logprob: -6.432337760925293
    5. '   ' → logprob: -9.682337760925293
    6. ' ' → logprob: -9.807337760925293
    7. '  ' → logprob: -9.807337760925293
    8. '	ch' → logprob: -11.057337760925293
    9. 'not' → logprob: -12.307337760925293
    10. '
' → logprob: -12.682337760925293

Token 839: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21596090495586395
    2. 'is' → logprob: -1.7159608602523804
    3. '==' → logprob: -4.71596097946167
    4. '!=' → logprob: -5.34096097946167
    5. ' ==' → logprob: -8.340960502624512
    6. ' !=' → logprob: -8.465960502624512
    7. '=' → logprob: -9.465960502624512
    8. '!==' → logprob: -10.340960502624512
    9. '       ' → logprob: -11.215960502624512
    10. '```' → logprob: -11.215960502624512

Token 840: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2923514246940613
    2. 'not' → logprob: -1.542351484298706
    3. ' not' → logprob: -3.542351484298706
    4. ' None' → logprob: -4.542351245880127
    5. '   ' → logprob: -11.417351722717285
    6. 'Not' → logprob: -12.167351722717285
    7. '       ' → logprob: -12.417351722717285
    8. 'none' → logprob: -14.542351722717285
    9. ' ' → logprob: -15.042351722717285
    10. '  ' → logprob: -15.292351722717285

Token 841: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7729658540920354e-05
    2. ' None' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.125028610229492
    4. '       ' → logprob: -17.625028610229492
    5. '           ' → logprob: -17.750028610229492
    6. 'none' → logprob: -17.875028610229492
    7. '(None' → logprob: -18.375028610229492
    8. '```' → logprob: -19.250028610229492
    9. '  ' → logprob: -19.625028610229492
    10. '    ' → logprob: -20.250028610229492

Token 842: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12972387671470642
    2. ':
' → logprob: -2.1297237873077393
    3. ':' → logprob: -6.504724025726318
    4. ' and' → logprob: -7.379724025726318
    5. 'self' → logprob: -8.37972354888916
    6. '):
' → logprob: -9.62972354888916
    7. ':self' → logprob: -9.62972354888916
    8. '               ' → logprob: -9.75472354888916
    9. ',' → logprob: -9.75472354888916
    10. '   ' → logprob: -9.87972354888916

Token 843: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006813761778175831
    2. 'self' → logprob: -5.0068135261535645
    3. ' self' → logprob: -10.256814002990723
    4. '   ' → logprob: -10.381814002990723
    5. '       ' → logprob: -10.756814002990723
    6. '               ' → logprob: -12.006814002990723
    7. '		' → logprob: -13.131814002990723
    8. '	       ' → logprob: -13.756814002990723
    9. '	self' → logprob: -14.756814002990723
    10. '          ' → logprob: -15.131814002990723

Token 844: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011740362970158458
    2. '           ' → logprob: -6.751173973083496
    3. ' self' → logprob: -12.626173973083496
    4. '       ' → logprob: -14.876173973083496
    5. '   ' → logprob: -16.626174926757812
    6. '               ' → logprob: -17.626174926757812
    7. '(self' → logprob: -19.126174926757812
    8. '	self' → logprob: -19.126174926757812
    9. '         ' → logprob: -20.126174926757812
    10. ' ' → logprob: -20.251174926757812

Token 845: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.2519907057285309
    2. 'pos' → logprob: -1.5019906759262085
    3. ' pos' → logprob: -10.25199031829834
    4. '	pos' → logprob: -11.25199031829834
    5. '   ' → logprob: -12.12699031829834
    6. '_pos' → logprob: -12.50199031829834
    7. '.' → logprob: -13.50199031829834
    8. 'consume' → logprob: -13.62699031829834
    9. '.consume' → logprob: -14.62699031829834
    10. ' .' → logprob: -14.87699031829834

Token 846: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.624555291840807e-05
    2. ' +=' → logprob: -9.500076293945312
    3. '           ' → logprob: -13.750076293945312
    4. ']+=' → logprob: -15.500076293945312
    5. '   ' → logprob: -18.250076293945312
    6. '=' → logprob: -18.375076293945312
    7. '               ' → logprob: -18.750076293945312
    8. '       ' → logprob: -19.500076293945312
    9. '            ' → logprob: -19.625076293945312
    10. 'self' → logprob: -19.625076293945312

Token 847: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -22.625
    5. '
' → logprob: -23.125
    6. '       ' → logprob: -24.625
    7. '۱' → logprob: -24.75
    8. '           ' → logprob: -25.125
    9. '１' → logprob: -25.5
    10. '  ' → logprob: -25.5

Token 848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -25.25
    5. '１' → logprob: -26.5
    6. '۱' → logprob: -26.5
    7. '१' → logprob: -27.125
    8. '
' → logprob: -27.25
    9. '১' → logprob: -27.375
    10. '  ' → logprob: -27.375

Token 849: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017768947407603264
    2. 'return' → logprob: -4.142768859863281
    3. '           ' → logprob: -6.517768859863281
    4. ' return' → logprob: -9.017768859863281
    5. '   ' → logprob: -9.517768859863281
    6. '	' → logprob: -10.517768859863281
    7. '
' → logprob: -11.267768859863281
    8. '	return' → logprob: -11.642768859863281
    9. '```' → logprob: -12.267768859863281
    10. '               ' → logprob: -13.017768859863281

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010724367573857307
    2. 'return' → logprob: -4.6357245445251465
    3. '           ' → logprob: -7.0107245445251465
    4. ' return' → logprob: -10.385724067687988
    5. '   ' → logprob: -10.760724067687988
    6. '
' → logprob: -11.635724067687988
    7. '```' → logprob: -12.885724067687988
    8. 'def' → logprob: -14.010724067687988
    9. '	' → logprob: -14.510724067687988
    10. '               ' → logprob: -14.885724067687988

Token 851: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3877323865890503
    2. 'return' (adapté à ' return') → logprob: -1.1377323865890503
    3. ' return' → logprob: -8.01273250579834
    4. '   ' → logprob: -8.01273250579834
    5. '```' → logprob: -9.38773250579834
    6. '           ' → logprob: -9.63773250579834
    7. 'def' → logprob: -10.88773250579834
    8. '	return' → logprob: -11.26273250579834
    9. '
' → logprob: -12.26273250579834
    10. '	' → logprob: -12.38773250579834

Token 852: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.128163257315464e-07
    2. ' ch' → logprob: -15.5
    3. '	ch' → logprob: -21.125
    4. '(ch' → logprob: -21.625
    5. '[ch' → logprob: -23.875
    6. 'chr' → logprob: -24.75
    7. 'c' → logprob: -25.0
    8. ''ch' → logprob: -25.25
    9. '_ch' → logprob: -25.375
    10. ' ' → logprob: -25.375

Token 853: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2606697678565979
    2. '```' → logprob: -2.010669708251953
    3. '
' → logprob: -2.760669708251953
    4. 'def' → logprob: -3.635669708251953
    5. '    
' → logprob: -5.260669708251953
    6. '        
' → logprob: -8.010669708251953
    7. '``' → logprob: -8.885669708251953
    8. ' def' → logprob: -8.885669708251953
    9. '`' → logprob: -10.260669708251953
    10. '       ' → logprob: -10.510669708251953

Token 854: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054601266980171204
    2. 'def' → logprob: -3.1796011924743652
    3. '
' → logprob: -5.054601192474365
    4. '```' → logprob: -5.679601192474365
    5. '    
' → logprob: -6.554601192474365
    6. ' def' → logprob: -8.429601669311523
    7. '        
' → logprob: -9.679601669311523
    8. '

' → logprob: -12.429601669311523
    9. '>' → logprob: -12.554601669311523
    10. '#' → logprob: -12.554601669311523

Token 855: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.129876509308815
    2. '   ' → logprob: -2.1298766136169434
    3. '
' → logprob: -6.629876613616943
    4. '```' → logprob: -7.129876613616943
    5. ' def' → logprob: -7.629876613616943
    6. '    
' → logprob: -8.129876136779785
    7. '        
' → logprob: -10.504876136779785
    8. '       ' → logprob: -12.629876136779785
    9. '#' → logprob: -12.629876136779785
    10. ' 
' → logprob: -13.504876136779785

Token 856: ' expect' (ID: 2665)
  Prédit: 'expect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expect' → logprob: -0.589769721031189
    2. 'error' → logprob: -0.964769721031189
    3. 'parse' → logprob: -3.7147698402404785
    4. 'match' → logprob: -4.2147698402404785
    5. 'skip' → logprob: -4.9647698402404785
    6. 'fail' → logprob: -5.2147698402404785
    7. 'consume' → logprob: -5.4647698402404785
    8. 'raise' → logprob: -5.7147698402404785
    9. 'e' → logprob: -5.8397698402404785
    10. 'eat' → logprob: -7.2147698402404785

Token 857: '(self' (ID: 2402)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.37845295667648315
    2. '(' → logprob: -1.378453016281128
    3. '(self' → logprob: -2.878453016281128
    4. '("("' → logprob: -5.128452777862549
    5. '(char' → logprob: -8.003453254699707
    6. '("' → logprob: -9.128453254699707
    7. '(
' → logprob: -9.378453254699707
    8. '('='' → logprob: -9.878453254699707
    9. ' (' → logprob: -10.253453254699707
    10. '(('' → logprob: -10.253453254699707

Token 858: ',' (ID: 11)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09746759384870529
    2. '(' → logprob: -3.2224676609039307
    3. '(self' → logprob: -3.2224676609039307
    4. '("("' → logprob: -5.347467422485352
    5. '(char' → logprob: -5.847467422485352
    6. ')' → logprob: -5.972467422485352
    7. '(
' → logprob: -7.222467422485352
    8. ',' → logprob: -7.472467422485352
    9. '('='' → logprob: -8.222467422485352
    10. 'self' → logprob: -8.847467422485352

Token 859: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.13807977735996246
    2. 'char' → logprob: -2.638079881668091
    3. 'c' → logprob: -2.888079881668091
    4. 'expected' → logprob: -6.513079643249512
    5. ' ch' → logprob: -8.888079643249512
    6. 'chars' → logprob: -9.763079643249512
    7. 'token' → logprob: -9.888079643249512
    8. '   ' → logprob: -10.638079643249512
    9. ' c' → logprob: -11.263079643249512
    10. ' expected' → logprob: -11.888079643249512

Token 860: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13346970081329346
    2. '):' → logprob: -2.758469581604004
    3. '   ' → logprob: -3.633469581604004
    4. '       ' → logprob: -3.633469581604004
    5. ':' → logprob: -5.883469581604004
    6. ')' → logprob: -6.008469581604004
    7. '=' → logprob: -7.133469581604004
    8. ')==' → logprob: -7.383469581604004
    9. '==' → logprob: -7.508469581604004
    10. ':
' → logprob: -8.508469581604004

Token 861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012263007229194045
    2. '   ' → logprob: -7.251226425170898
    3. ' if' → logprob: -8.126226425170898
    4. 'if' → logprob: -8.626226425170898
    5. 'assert' → logprob: -10.751226425170898
    6. ':' → logprob: -12.251226425170898
    7. '```' → logprob: -12.501226425170898
    8. 'def' → logprob: -12.501226425170898
    9. ' assert' → logprob: -13.251226425170898
    10. '	' → logprob: -13.626226425170898

Token 862: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0475250668823719
    2. '       ' → logprob: -3.42252516746521
    3. 'assert' → logprob: -4.797524929046631
    4. ' if' → logprob: -5.297524929046631
    5. 'ch' → logprob: -7.922524929046631
    6. 'c' → logprob: -9.172525405883789
    7. '   ' → logprob: -10.672525405883789
    8. ' assert' → logprob: -10.797525405883789
    9. '```' → logprob: -11.672525405883789
    10. 'token' → logprob: -12.547525405883789

Token 863: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3873894512653351
    2. ' self' → logprob: -1.1373894214630127
    3. ' not' → logprob: -8.637389183044434
    4. 'ch' → logprob: -8.762389183044434
    5. ' ch' → logprob: -8.762389183044434
    6. 'not' → logprob: -11.262389183044434
    7. '   ' → logprob: -11.512389183044434
    8. '(self' → logprob: -12.762389183044434
    9. '	self' → logprob: -14.012389183044434
    10. ' ' → logprob: -14.137389183044434

Token 864: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.06494199484586716
    2. '.consume' → logprob: -3.439941883087158
    3. '.pos' → logprob: -3.564941883087158
    4. '.s' → logprob: -6.064941883087158
    5. '.' → logprob: -9.439942359924316
    6. '.expect' → logprob: -10.314942359924316
    7. ' .' → logprob: -10.564942359924316
    8. 'pos' → logprob: -11.189942359924316
    9. 'peek' → logprob: -11.189942359924316
    10. 'consume' → logprob: -11.814942359924316

Token 865: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2548988461494446
    2. '()==' → logprob: -1.5048987865447998
    3. '==' → logprob: -6.254899024963379
    4. '()!=' → logprob: -7.004899024963379
    5. ' ==' → logprob: -9.004899024963379
    6. ')==' → logprob: -12.254899024963379
    7. '```' → logprob: -12.879899024963379
    8. ']==' → logprob: -13.379899024963379
    9. '           ' → logprob: -13.379899024963379
    10. '       ' → logprob: -13.879899024963379

Token 866: ' !=' (ID: 1666)
  Prédit: '()!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()!=' → logprob: -0.13694410026073456
    2. '()' → logprob: -2.386944055557251
    3. '!=' → logprob: -3.761944055557251
    4. '()==' → logprob: -4.51194429397583
    5. '==' → logprob: -6.38694429397583
    6. ' !=' → logprob: -8.761943817138672
    7. ' ==' → logprob: -12.386943817138672
    8. ']!=' → logprob: -12.386943817138672
    9. ')!=' → logprob: -12.511943817138672
    10. '```' → logprob: -13.761943817138672

Token 867: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.547789674485102e-05
    2. ' ch' → logprob: -10.250035285949707
    3. '	ch' → logprob: -17.875036239624023
    4. '   ' → logprob: -18.250036239624023
    5. '(ch' → logprob: -20.625036239624023
    6. ' ' → logprob: -21.250036239624023
    7. ''ch' → logprob: -21.750036239624023
    8. '  ' → logprob: -21.875036239624023
    9. 'Ch' → logprob: -21.875036239624023
    10. '[ch' → logprob: -21.875036239624023

Token 868: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10543042421340942
    2. '           ' → logprob: -2.4804303646087646
    3. ':' → logprob: -4.230430603027344
    4. ' or' → logprob: -7.105430603027344
    5. '       ' → logprob: -7.730430603027344
    6. '):
' → logprob: -8.230430603027344
    7. ' and' → logprob: -8.730430603027344
    8. ':return' → logprob: -10.730430603027344
    9. '():
' → logprob: -10.980430603027344
    10. '   ' → logprob: -11.230430603027344

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002387422136962414
    2. '       ' → logprob: -6.377387523651123
    3. ' raise' → logprob: -8.002387046813965
    4. 'raise' → logprob: -8.127387046813965
    5. '   ' → logprob: -10.627387046813965
    6. '	raise' → logprob: -11.502387046813965
    7. '               ' → logprob: -12.252387046813965
    8. ':' → logprob: -12.627387046813965
    9. '		' → logprob: -13.002387046813965
    10. ':
' → logprob: -13.627387046813965

Token 870: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03847001865506172
    2. '           ' → logprob: -3.2884700298309326
    3. ' raise' → logprob: -8.038470268249512
    4. 'return' → logprob: -9.788470268249512
    5. 'self' → logprob: -10.413470268249512
    6. '	raise' → logprob: -11.538470268249512
    7. 'class' → logprob: -12.913470268249512
    8. 'Raise' → logprob: -13.413470268249512
    9. 'import' → logprob: -13.538470268249512
    10. '
' → logprob: -13.663470268249512

Token 871: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -5.512236498361744e-07
    2. ' Parse' → logprob: -15.000000953674316
    3. 'Parser' → logprob: -16.75
    4. '(Parse' → logprob: -17.0
    5. 'Value' → logprob: -17.5
    6. 'parse' → logprob: -18.5
    7. '_parse' → logprob: -19.5
    8. 'Syntax' → logprob: -19.625
    9. 'Runtime' → logprob: -20.375
    10. 'Parsing' → logprob: -20.875

Token 872: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.375
    3. 'Exception' → logprob: -17.375
    4. '   ' → logprob: -18.375
    5. '_Error' → logprob: -18.625
    6. 'char' → logprob: -18.75
    7. '       ' → logprob: -18.75
    8. '           ' → logprob: -18.75
    9. ''' → logprob: -18.875
    10. 'error' → logprob: -19.0

Token 873: '("' (ID: 568)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0662635564804077
    2. '(ch' → logprob: -1.3162635564804077
    3. '("' → logprob: -1.6912635564804077
    4. '('' → logprob: -2.0662636756896973
    5. '       ' → logprob: -3.3162636756896973
    6. '(' → logprob: -3.9412636756896973
    7. '("'' → logprob: -4.941263675689697
    8. '()' → logprob: -5.066263675689697
    9. '
' → logprob: -6.816263675689697
    10. '   ' → logprob: -6.816263675689697

Token 874: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.32365816831588745
    2. 'ch' → logprob: -1.3236582279205322
    3. 'Expected' → logprob: -4.948657989501953
    4. ' ch' → logprob: -6.948657989501953
    5. 'Unexpected' → logprob: -7.198657989501953
    6. 'expected' → logprob: -7.573657989501953
    7. '"' → logprob: -7.573657989501953
    8. ' f' → logprob: -9.073657989501953
    9. '(ch' → logprob: -9.073657989501953
    10. '   ' → logprob: -9.823657989501953

Token 875: ' '{}'' (ID: 170889)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3933674395084381
    2. '"+' → logprob: -1.7683674097061157
    3. '"' → logprob: -2.6433675289154053
    4. ''' → logprob: -3.1433675289154053
    5. ''ch' → logprob: -4.393367290496826
    6. ' "+' → logprob: -4.643367290496826
    7. ' "' → logprob: -4.643367290496826
    8. '(ch' → logprob: -6.018367290496826
    9. ' ch' → logprob: -6.393367290496826
    10. ''"' → logprob: -6.518367290496826

Token 876: ' at' (ID: 540)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6189597249031067
    2. ' but' → logprob: -1.243959665298462
    3. ',' → logprob: -2.243959665298462
    4. '',' → logprob: -3.118959665298462
    5. '')' → logprob: -4.618959903717041
    6. 'but' → logprob: -5.493959903717041
    7. ''"' → logprob: -5.743959903717041
    8. ''.' → logprob: -6.493959903717041
    9. '"' → logprob: -6.743959903717041
    10. ')' → logprob: -7.243959903717041

Token 877: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012332222424447536
    2. 'pos' → logprob: -4.637332439422607
    3. ' self' → logprob: -7.262332439422607
    4. '"' → logprob: -7.637332439422607
    5. ''' → logprob: -8.13733196258545
    6. 'position' → logprob: -8.51233196258545
    7. '{}' → logprob: -8.63733196258545
    8. '{}".' → logprob: -9.01233196258545
    9. ''{' → logprob: -9.88733196258545
    10. ''"' → logprob: -9.88733196258545

Token 878: ' {}".' (ID: 51417)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012861943803727627
    2. '{}".' → logprob: -5.262861728668213
    3. ' self' → logprob: -5.512861728668213
    4. '       ' → logprob: -6.512861728668213
    5. '(self' → logprob: -7.137861728668213
    6. '{}' → logprob: -8.012862205505371
    7. '{' → logprob: -8.387862205505371
    8. '"' → logprob: -8.512862205505371
    9. '{}'.' → logprob: -9.012862205505371
    10. '   ' → logprob: -9.637862205505371

Token 879: 'format' (ID: 4078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33912813663482666
    2. '.format' → logprob: -1.7141281366348267
    3. 'format' → logprob: -2.339128017425537
    4. '{}".' → logprob: -5.839128017425537
    5. '}".' → logprob: -6.089128017425537
    6. '".' → logprob: -6.714128017425537
    7. ' self' → logprob: -7.214128017425537
    8. '   ' → logprob: -7.339128017425537
    9. '       ' → logprob: -7.339128017425537
    10. '
' → logprob: -7.464128017425537

Token 880: '(ch' (ID: 15574)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5145342350006104
    2. '(ch' → logprob: -1.1395342350006104
    3. 'self' → logprob: -2.6395342350006104
    4. '(self' → logprob: -4.639533996582031
    5. '   ' → logprob: -7.889533996582031
    6. ',' → logprob: -9.139533996582031
    7. '       ' → logprob: -9.389533996582031
    8. '           ' → logprob: -9.389533996582031
    9. '(' → logprob: -9.514533996582031
    10. ' (' → logprob: -9.514533996582031

Token 881: ',self' (ID: 54040)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007518603932112455
    2. 'self' → logprob: -5.257518768310547
    3. ',self' → logprob: -6.257518768310547
    4. ' ,' → logprob: -9.257518768310547
    5. '+' → logprob: -9.257518768310547
    6. '))' → logprob: -10.132518768310547
    7. '+self' → logprob: -10.257518768310547
    8. '),' → logprob: -10.757518768310547
    9. ',
' → logprob: -11.257518768310547
    10. ')' → logprob: -11.757518768310547

Token 882: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.00020461321400944144
    2. 'pos' → logprob: -8.500205039978027
    3. '.' → logprob: -14.625205039978027
    4. '	pos' → logprob: -15.625205039978027
    5. ').' → logprob: -15.750205039978027
    6. '.position' → logprob: -16.37520408630371
    7. '
' → logprob: -16.62520408630371
    8. 'Pos' → logprob: -16.87520408630371
    9. ',pos' → logprob: -17.25020408630371
    10. '[pos' → logprob: -17.25020408630371

Token 883: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11835473030805588
    2. '))
' → logprob: -2.2433547973632812
    3. ')' → logprob: -5.493354797363281
    4. '       ' → logprob: -7.243354797363281
    5. '"))' → logprob: -8.243354797363281
    6. ''))' → logprob: -9.368354797363281
    7. ',' → logprob: -9.618354797363281
    8. '   ' → logprob: -9.868354797363281
    9. '))
' → logprob: -9.868354797363281
    10. ')))' → logprob: -9.868354797363281

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005856620147824287
    2. 'self' → logprob: -5.505856513977051
    3. '```' → logprob: -6.755856513977051
    4. '   ' → logprob: -7.880856513977051
    5. '           ' → logprob: -9.13085651397705
    6. 'def' → logprob: -9.50585651397705
    7. ' self' → logprob: -10.88085651397705
    8. '	' → logprob: -11.63085651397705
    9. 'return' → logprob: -11.75585651397705
    10. '               ' → logprob: -12.38085651397705

Token 885: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1010008156299591
    2. '       ' → logprob: -2.3510007858276367
    3. '   ' → logprob: -7.976000785827637
    4. ' self' → logprob: -8.351000785827637
    5. '```' → logprob: -8.726000785827637
    6. '           ' → logprob: -11.226000785827637
    7. 'def' → logprob: -11.726000785827637
    8. '(self' → logprob: -11.851000785827637
    9. '
' → logprob: -12.226000785827637
    10. '``' → logprob: -12.476000785827637

Token 886: '.pos' (ID: 25321)
  Prédit: '.consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.18068179488182068
    2. '.pos' → logprob: -1.805681824684143
    3. '.' → logprob: -7.6806817054748535
    4. 'pos' → logprob: -8.430682182312012
    5. 'consume' → logprob: -8.555682182312012
    6. '.expect' → logprob: -10.930682182312012
    7. '.cons' → logprob: -11.430682182312012
    8. '   ' → logprob: -11.555682182312012
    9. '.advance' → logprob: -12.055682182312012
    10. ' .' → logprob: -12.930682182312012

Token 887: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001930420519784093
    2. ' +=' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.626930236816406
    4. ']+=' → logprob: -15.001930236816406
    5. '=' → logprob: -16.376930236816406
    6. '    ' → logprob: -16.876930236816406
    7. '+' → logprob: -17.001930236816406
    8. '```' → logprob: -17.501930236816406
    9. '  ' → logprob: -18.001930236816406
    10. '       ' → logprob: -18.501930236816406

Token 888: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -22.125
    5. '       ' → logprob: -22.25
    6. '```' → logprob: -22.375
    7. '           ' → logprob: -23.125
    8. '  ' → logprob: -23.625
    9. '     ' → logprob: -24.25
    10. '１' → logprob: -24.25

Token 889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -23.125
    5. 'len' → logprob: -23.25
    6. '
' → logprob: -23.5
    7. '１' → logprob: -24.25
    8. '۱' → logprob: -24.375
    9. '' → logprob: -25.5
    10. '0' → logprob: -25.875

Token 890: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033666908740997314
    2. '```' → logprob: -3.7836668491363525
    3. '       ' → logprob: -4.908667087554932
    4. 'def' → logprob: -6.658667087554932
    5. '<|end|>' → logprob: -7.533667087554932
    6. '    
' → logprob: -7.658667087554932
    7. '        
' → logprob: -8.158666610717773
    8. '
' → logprob: -8.408666610717773
    9. '`' → logprob: -9.908666610717773
    10. '``' → logprob: -10.908666610717773

Token 891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027161041274666786
    2. 'def' → logprob: -4.902161121368408
    3. '```' → logprob: -4.902161121368408
    4. '       ' → logprob: -5.027161121368408
    5. 'return' → logprob: -6.402161121368408
    6. '    
' → logprob: -6.402161121368408
    7. '        
' → logprob: -7.152161121368408
    8. '
' → logprob: -7.402161121368408
    9. '<|end|>' → logprob: -8.27716064453125
    10. '	return' → logprob: -9.27716064453125

Token 892: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4826785624027252
    2. '   ' → logprob: -0.9826785326004028
    3. '```' → logprob: -5.107678413391113
    4. ' def' → logprob: -6.732678413391113
    5. '
' → logprob: -6.982678413391113
    6. '    
' → logprob: -7.982678413391113
    7. '        
' → logprob: -10.732678413391113
    8. '	def' → logprob: -11.607678413391113
    9. '``' → logprob: -12.232678413391113
    10. '#' → logprob: -12.732678413391113

Token 893: ' is' (ID: 382)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.010212026536464691
    2. 'skip' → logprob: -4.760211944580078
    3. 'error' → logprob: -7.385211944580078
    4. 'def' → logprob: -7.385211944580078
    5. 'raise' → logprob: -9.260211944580078
    6. 'consume' → logprob: -9.635211944580078
    7. 'try' → logprob: -10.010211944580078
    8. 'e' → logprob: -10.385211944580078
    9. 'fail' → logprob: -10.510211944580078
    10. 'is' → logprob: -10.885211944580078

Token 894: '_digit' (ID: 119592)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.25807279348373413
    2. '_digit' → logprob: -1.508072853088379
    3. 'alpha' → logprob: -5.633072853088379
    4. '_alpha' → logprob: -7.383072853088379
    5. '_letter' → logprob: -7.383072853088379
    6. '_operator' → logprob: -8.258072853088379
    7. 'space' → logprob: -8.258072853088379
    8. '_wh' → logprob: -8.758072853088379
    9. '_char' → logprob: -9.258072853088379
    10. 'Digit' → logprob: -9.508072853088379

Token 895: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019686181098222733
    2. '(' → logprob: -4.144686222076416
    3. 'def' → logprob: -6.894686222076416
    4. 'self' → logprob: -7.019686222076416
    5. '   ' → logprob: -7.019686222076416
    6. ' ' → logprob: -8.519685745239258
    7. '(
' → logprob: -8.644685745239258
    8. ' (' → logprob: -8.894685745239258
    9. '       ' → logprob: -8.894685745239258
    10. '('' → logprob: -10.269685745239258

Token 896: ',ch' (ID: 165575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1933375597000122
    2. '(self' → logprob: -1.1933375597000122
    3. ' ' → logprob: -1.6933375597000122
    4. '(' → logprob: -2.1933374404907227
    5. '   ' → logprob: -3.1933374404907227
    6. '('' → logprob: -4.568337440490723
    7. '  ' → logprob: -4.693337440490723
    8. 'def' → logprob: -4.693337440490723
    9. 'self' → logprob: -4.818337440490723
    10. ' (' → logprob: -5.193337440490723

Token 897: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8670495748519897
    2. '):
' → logprob: -0.9920495748519897
    3. 'def' → logprob: -2.8670496940612793
    4. '   ' → logprob: -2.9920496940612793
    5. 'self' → logprob: -3.1170496940612793
    6. '):' → logprob: -3.7420496940612793
    7. '(ch' → logprob: -4.742049694061279
    8. '       ' → logprob: -4.992049694061279
    9. ',' → logprob: -5.492049694061279
    10. '
' → logprob: -5.992049694061279

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7357676029205322
    2. 'return' → logprob: -0.7357676029205322
    3. '   ' → logprob: -3.6107676029205322
    4. ' return' → logprob: -4.485767364501953
    5. 'def' → logprob: -5.860767364501953
    6. 'ch' → logprob: -7.735767364501953
    7. '           ' → logprob: -10.360767364501953
    8. '{return' → logprob: -10.985767364501953
    9. '	return' → logprob: -11.110767364501953
    10. ' ' → logprob: -11.485767364501953

Token 899: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005344442906789482
    2. ' return' → logprob: -7.750534534454346
    3. 'ch' → logprob: -9.250534057617188
    4. '   ' → logprob: -11.875534057617188
    5. '
' → logprob: -14.500534057617188
    6. '       ' → logprob: -16.000534057617188
    7. 'def' → logprob: -16.375534057617188
    8. '(ch' → logprob: -17.125534057617188
    9. '	return' → logprob: -17.375534057617188
    10. ' ch' → logprob: -18.000534057617188

Token 900: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.004130403511226177
    2. ' ch' → logprob: -5.5041303634643555
    3. '(ch' → logprob: -9.879130363464355
    4. '	ch' → logprob: -14.879130363464355
    5. '   ' → logprob: -15.254130363464355
    6. ' ' → logprob: -16.754131317138672
    7. ''ch' → logprob: -17.004131317138672
    8. '0' → logprob: -17.379131317138672
    9. '_ch' → logprob: -17.879131317138672
    10. '  ' → logprob: -18.004131317138672

Token 901: '=='' (ID: 20651)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38722681999206543
    2. ' in' → logprob: -1.1372268199920654
    3. '=='' → logprob: -8.512227058410645
    4. ' ==' → logprob: -9.512227058410645
    5. '==' → logprob: -9.637227058410645
    6. ' =='' → logprob: -12.012227058410645
    7. '   ' → logprob: -12.887227058410645
    8. '  ' → logprob: -13.387227058410645
    9. ' ' → logprob: -13.512227058410645
    10. '=="' → logprob: -13.887227058410645

Token 902: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ''' → logprob: -9.500075340270996
    3. ' ' → logprob: -19.50007438659668
    4. '('' → logprob: -21.12507438659668
    5. ' '' → logprob: -21.37507438659668
    6. '1' → logprob: -21.50007438659668
    7. '{'' → logprob: -21.87507438659668
    8. '"' → logprob: -22.12507438659668
    9. '`' → logprob: -22.75007438659668
    10. '۰' → logprob: -23.25007438659668

Token 903: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.34415823221206665
    2. 'or' → logprob: -1.3441581726074219
    3. ''or' → logprob: -3.594158172607422
    4. ''' → logprob: -5.844158172607422
    5. '	or' → logprob: -11.719158172607422
    6. ''||' → logprob: -11.844158172607422
    7. '"' → logprob: -12.469158172607422
    8. '||' → logprob: -12.844158172607422
    9. '   ' → logprob: -12.844158172607422
    10. 'orm' → logprob: -12.969158172607422

Token 904: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12695971131324768
    2. 'or' → logprob: -2.126959800720215
    3. ''or' → logprob: -10.751959800720215
    4. '	or' → logprob: -12.251959800720215
    5. ' ' → logprob: -13.376959800720215
    6. '  ' → logprob: -13.751959800720215
    7. '<|end|>' → logprob: -13.751959800720215
    8. 'def' → logprob: -14.626959800720215
    9. 'orm' → logprob: -14.876959800720215
    10. '   ' → logprob: -15.376959800720215

Token 905: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00024001303245313466
    2. ' ch' → logprob: -8.375240325927734
    3. '   ' → logprob: -12.000240325927734
    4. '  ' → logprob: -13.500240325927734
    5. ' ' → logprob: -14.500240325927734
    6. '       ' → logprob: -14.625240325927734
    7. '	ch' → logprob: -14.875240325927734
    8. '      ' → logprob: -15.625240325927734
    9. '    ' → logprob: -15.875240325927734
    10. '(ch' → logprob: -16.125240325927734

Token 906: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0004001641063950956
    2. '==' → logprob: -8.00040054321289
    3. ' =='' → logprob: -10.12540054321289
    4. ' ==' → logprob: -11.12540054321289
    5. 'def' → logprob: -12.75040054321289
    6. '=="' → logprob: -13.00040054321289
    7. '='' → logprob: -13.62540054321289
    8. ']=='' → logprob: -13.75040054321289
    9. '==
' → logprob: -14.25040054321289
    10. '==='' → logprob: -14.50040054321289

Token 907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ''' → logprob: -10.375031471252441
    3. ' ' → logprob: -17.000030517578125
    4. '
' → logprob: -19.875030517578125
    5. '`' → logprob: -19.875030517578125
    6. ''''' → logprob: -20.000030517578125
    7. '"' → logprob: -20.125030517578125
    8. '0' → logprob: -20.125030517578125
    9. '１' → logprob: -20.625030517578125
    10. '   ' → logprob: -20.875030517578125

Token 908: ''
' (ID: 2207)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11544398218393326
    2. 'or' → logprob: -2.2404439449310303
    3. '<|end|>' → logprob: -6.115444183349609
    4. '<|end|>' → logprob: -8.36544418334961
    5. 'def' → logprob: -9.86544418334961
    6. ')' → logprob: -9.99044418334961
    7. '	or' → logprob: -10.36544418334961
    8. ''or' → logprob: -11.11544418334961
    9. '   ' → logprob: -11.86544418334961
    10. ' ' → logprob: -12.11544418334961

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051290661096572876
    2. 'def' → logprob: -3.05129075050354
    3. ' def' → logprob: -6.176290512084961
    4. '    
' → logprob: -7.926290512084961
    5. '
' → logprob: -9.426290512084961
    6. '```' → logprob: -9.926290512084961
    7. ' ' → logprob: -10.426290512084961
    8. '        
' → logprob: -10.801290512084961
    9. '<|end|>' → logprob: -10.926290512084961
    10. '       ' → logprob: -11.176290512084961

Token 910: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005396445747464895
    2. '   ' → logprob: -5.255396366119385
    3. ' def' → logprob: -8.880396842956543
    4. '```' → logprob: -10.880396842956543
    5. '
' → logprob: -13.005396842956543
    6. '#' → logprob: -13.755396842956543
    7. '    
' → logprob: -14.130396842956543
    8. '	def' → logprob: -15.130396842956543
    9. 'class' → logprob: -15.630396842956543
    10. '       ' → logprob: -16.255395889282227

Token 911: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.07661305367946625
    2. 'is' → logprob: -3.201612949371338
    3. 'def' → logprob: -3.826612949371338
    4. 'consume' → logprob: -5.576612949371338
    5. 'skip' → logprob: -6.076612949371338
    6. 'error' → logprob: -6.576612949371338
    7. 'isdigit' → logprob: -6.576612949371338
    8. ' parse' → logprob: -7.826612949371338
    9. 'expect' → logprob: -7.951612949371338
    10. 'match' → logprob: -7.951612949371338

Token 912: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.309382373117842e-05
    2. 'E' → logprob: -10.375033378601074
    3. 'N' → logprob: -14.000033378601074
    4. ' Q' → logprob: -14.375033378601074
    5. '_Q' → logprob: -16.000032424926758
    6. '	Q' → logprob: -16.500032424926758
    7. 'q' → logprob: -16.500032424926758
    8. '```' → logprob: -17.250032424926758
    9. 'QName' → logprob: -18.250032424926758
    10. '(Q' → logprob: -18.750032424926758

Token 913: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005885370774194598
    2. '(' → logprob: -7.625588417053223
    3. 'def' → logprob: -9.875588417053223
    4. '   ' → logprob: -10.625588417053223
    5. 'self' → logprob: -11.750588417053223
    6. '_' → logprob: -12.500588417053223
    7. ':' → logprob: -12.500588417053223
    8. '(s' → logprob: -12.750588417053223
    9. '       ' → logprob: -13.375588417053223
    10. ' ' → logprob: -13.875588417053223

Token 914: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007532857125625014
    2. '(' → logprob: -7.375753402709961
    3. '():' → logprob: -10.250753402709961
    4. '   ' → logprob: -10.625753402709961
    5. 'def' → logprob: -10.750753402709961
    6. 'self' → logprob: -11.125753402709961
    7. '(s' → logprob: -11.875753402709961
    8. ':' → logprob: -12.000753402709961
    9. '():
' → logprob: -13.000753402709961
    10. '):' → logprob: -13.000753402709961

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018863992590922862
    2. 'def' → logprob: -9.500188827514648
    3. '   ' → logprob: -9.750188827514648
    4. '```' → logprob: -10.500188827514648
    5. 'self' → logprob: -11.500188827514648
    6. 'ch' → logprob: -11.875188827514648
    7. 'try' → logprob: -12.625188827514648
    8. '#' → logprob: -13.375188827514648
    9. '           ' → logprob: -14.125188827514648
    10. '	' → logprob: -14.625188827514648

Token 916: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16860154271125793
    2. 'eq' → logprob: -2.5436015129089355
    3. 'e' → logprob: -3.5436015129089355
    4. 'self' → logprob: -3.9186015129089355
    5. 'lhs' → logprob: -3.9186015129089355
    6. 'E' → logprob: -6.2936015129089355
    7. ' left' → logprob: -6.5436015129089355
    8. '   ' → logprob: -7.1686015129089355
    9. 'l' → logprob: -7.5436015129089355
    10. 'res' → logprob: -7.6686015129089355

Token 917: ' Q' (ID: 1486)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.22571144998073578
    2. 'self' → logprob: -2.6007113456726074
    3. 'eq' → logprob: -2.7257113456726074
    4. 'e' → logprob: -3.4757113456726074
    5. 'lhs' → logprob: -3.9757113456726074
    6. 'expr' → logprob: -5.600711345672607
    7. 'def' → logprob: -5.850711345672607
    8. 'E' → logprob: -6.475711345672607
    9. 'l' → logprob: -6.850711345672607
    10. 'equal' → logprob: -7.475711345672607

Token 918: ' ::=' (ID: 176636)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7074613571166992
    2. 'def' → logprob: -1.7074613571166992
    3. '=' → logprob: -2.207461357116699
    4. '   ' → logprob: -2.332461357116699
    5. '       ' → logprob: -2.582461357116699
    6. ':' → logprob: -4.332461357116699
    7. '()' → logprob: -5.082461357116699
    8. ' def' → logprob: -5.207461357116699
    9. ' ->' → logprob: -6.082461357116699
    10. '():' → logprob: -6.207461357116699

Token 919: ' E' (ID: 457)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005570820067077875
    2. ' self' → logprob: -8.125556945800781
    3. 'E' → logprob: -8.625556945800781
    4. 'def' → logprob: -10.125556945800781
    5. '   ' → logprob: -10.875556945800781
    6. '       ' → logprob: -11.625556945800781
    7. 'return' → logprob: -12.375556945800781
    8. 'e' → logprob: -13.125556945800781
    9. '  ' → logprob: -13.375556945800781
    10. '
' → logprob: -13.625556945800781

Token 920: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8003582954406738
    2. '()' → logprob: -0.8003582954406738
    3. '.' → logprob: -4.550358295440674
    4. '(' → logprob: -4.550358295440674
    5. ' =' → logprob: -4.800358295440674
    6. ''' → logprob: -4.800358295440674
    7. 'E' → logprob: -4.925358295440674
    8. '('' → logprob: -5.050358295440674
    9. '   ' → logprob: -5.175358295440674
    10. '('='' → logprob: -5.300358295440674

Token 921: 'E' (ID: 36)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009401512332260609
    2. 'E' → logprob: -5.134401321411133
    3. 'parse' → logprob: -6.009401321411133
    4. ' self' → logprob: -7.884401321411133
    5. '(self' → logprob: -8.384401321411133
    6. ')' → logprob: -8.884401321411133
    7. 'def' → logprob: -9.134401321411133
    8. 'return' → logprob: -10.634401321411133
    9. 'Q' → logprob: -10.759401321411133
    10. '   ' → logprob: -11.634401321411133

Token 922: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12404487282037735
    2. 'def' → logprob: -2.624044895172119
    3. '   ' → logprob: -3.499044895172119
    4. '()' → logprob: -5.499044895172119
    5. '
' → logprob: -5.999044895172119
    6. 'self' → logprob: -6.374044895172119
    7. '```' → logprob: -6.499044895172119
    8. '()
' → logprob: -6.624044895172119
    9. ' def' → logprob: -6.624044895172119
    10. '(self' → logprob: -8.499044418334961

Token 923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013934499584138393
    2. 'def' → logprob: -7.1263933181762695
    3. 'self' → logprob: -7.7513933181762695
    4. '   ' → logprob: -9.25139331817627
    5. ' self' → logprob: -11.62639331817627
    6. '
' → logprob: -11.87639331817627
    7. '```' → logprob: -11.87639331817627
    8. 'expr' → logprob: -12.00139331817627
    9. ' def' → logprob: -12.12639331817627
    10. '           ' → logprob: -12.37639331817627

Token 924: ' val' (ID: 1459)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6840806007385254
    2. 'left' → logprob: -1.0590806007385254
    3. '       ' → logprob: -2.9340806007385254
    4. 'E' → logprob: -2.9340806007385254
    5. 'self' → logprob: -3.9340806007385254
    6. 'def' → logprob: -5.059080600738525
    7. 'expr' → logprob: -5.309080600738525
    8. 'lhs' → logprob: -5.309080600738525
    9. '   ' → logprob: -5.809080600738525
    10. 'return' → logprob: -6.059080600738525

Token 925: '_left' (ID: 22189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21547870337963104
    2. '=' → logprob: -1.7154786586761475
    3. 'E' → logprob: -4.465478897094727
    4. '   ' → logprob: -6.965478897094727
    5. ',' → logprob: -7.465478897094727
    6. '_left' → logprob: -8.215478897094727
    7. '       ' → logprob: -8.965478897094727
    8. '_e' → logprob: -9.215478897094727
    9. '1' → logprob: -9.590478897094727
    10. ',e' → logprob: -9.840478897094727

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26256081461906433
    2. ' =' → logprob: -1.6375608444213867
    3. ',' → logprob: -3.3875608444213867
    4. '       ' → logprob: -6.762560844421387
    5. '   ' → logprob: -7.387560844421387
    6. ',val' → logprob: -7.887560844421387
    7. '=self' → logprob: -8.637560844421387
    8. ' ' → logprob: -9.512560844421387
    9. 'def' → logprob: -9.887560844421387
    10. ' ,' → logprob: -10.262560844421387

Token 927: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.632542913896032e-05
    2. ' self' → logprob: -10.000046730041504
    3. '       ' → logprob: -14.625046730041504
    4. '(self' → logprob: -15.375046730041504
    5. '   ' → logprob: -15.500046730041504
    6. '     ' → logprob: -18.375045776367188
    7. '           ' → logprob: -18.500045776367188
    8. ' ' → logprob: -18.500045776367188
    9. '	self' → logprob: -18.875045776367188
    10. '         ' → logprob: -19.000045776367188

Token 928: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.003709338838234544
    2. 'parse' → logprob: -5.628709316253662
    3. '.' → logprob: -9.50370979309082
    4. '.consume' → logprob: -10.37870979309082
    5. '.peek' → logprob: -13.62870979309082
    6. '=parse' → logprob: -14.50370979309082
    7. '   ' → logprob: -15.25370979309082
    8. '.try' → logprob: -15.37870979309082
    9. ' parse' → logprob: -15.62870979309082
    10. 'def' → logprob: -15.75370979309082

Token 929: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.9361264946837764e-07
    2. ' E' → logprob: -16.5
    3. '(' → logprob: -18.375
    4. 'Expression' → logprob: -18.75
    5. '(E' → logprob: -18.875
    6. 'e' → logprob: -19.0
    7. '('' → logprob: -19.125
    8. '#' → logprob: -19.75
    9. ')' → logprob: -20.25
    10. 'expression' → logprob: -20.25

Token 930: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0313594341278076
    2. '()
' → logprob: -1.0313594341278076
    3. '       ' → logprob: -1.2813594341278076
    4. 'if' → logprob: -5.406359672546387
    5. 'while' → logprob: -5.531359672546387
    6. '   ' → logprob: -8.156359672546387
    7. 'def' → logprob: -8.406359672546387
    8. 'self' → logprob: -9.156359672546387
    9. '();' → logprob: -9.281359672546387
    10. '           ' → logprob: -10.406359672546387

Token 931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4784841537475586
    2. 'self' → logprob: -0.9784841537475586
    3. 'ch' → logprob: -6.103484153747559
    4. 'if' → logprob: -6.228484153747559
    5. ' self' → logprob: -9.478484153747559
    6. '```' → logprob: -9.978484153747559
    7. '   ' → logprob: -11.103484153747559
    8. 'c' → logprob: -11.103484153747559
    9. '	self' → logprob: -12.353484153747559
    10. '``' → logprob: -12.353484153747559

Token 932: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10084649175405502
    2. '       ' → logprob: -2.350846529006958
    3. 'if' (adapté à ' if') → logprob: -7.600846290588379
    4. ' self' → logprob: -9.725846290588379
    5. 'ch' → logprob: -9.850846290588379
    6. '   ' → logprob: -10.975846290588379
    7. '	self' → logprob: -12.725846290588379
    8. '```' → logprob: -13.225846290588379
    9. '           ' → logprob: -14.100846290588379
    10. 'try' → logprob: -14.350846290588379

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004125538282096386
    2. ' self' → logprob: -5.629125595092773
    3. 'not' → logprob: -7.879125595092773
    4. ' not' → logprob: -9.004125595092773
    5. '       ' → logprob: -11.504125595092773
    6. '   ' → logprob: -11.629125595092773
    7. ' ' → logprob: -13.504125595092773
    8. '     ' → logprob: -13.629125595092773
    9. '           ' → logprob: -14.129125595092773
    10. '    ' → logprob: -14.754125595092773

Token 934: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.01169440895318985
    2. '.consume' → logprob: -4.886694431304932
    3. '.expect' → logprob: -5.886694431304932
    4. '.pos' → logprob: -6.886694431304932
    5. '.' → logprob: -8.386693954467773
    6. '.s' → logprob: -10.761693954467773
    7. 'peek' → logprob: -11.761693954467773
    8. ').' → logprob: -12.136693954467773
    9. '.cons' → logprob: -12.511693954467773
    10. '   ' → logprob: -12.886693954467773

Token 935: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06230644881725311
    2. '()==' → logprob: -2.8123064041137695
    3. '()='' → logprob: -9.06230640411377
    4. '()!=' → logprob: -9.18730640411377
    5. '==' → logprob: -9.68730640411377
    6. '()=="' → logprob: -10.06230640411377
    7. ' ==' → logprob: -12.06230640411377
    8. '=='' → logprob: -12.43730640411377
    9. '=' → logprob: -12.93730640411377
    10. '(' → logprob: -13.68730640411377

Token 936: '!='' (ID: 58874)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06823839247226715
    2. '()==' → logprob: -3.3182384967803955
    3. '=='' → logprob: -4.568238258361816
    4. '=' → logprob: -5.193238258361816
    5. '()' → logprob: -5.443238258361816
    6. '!=' → logprob: -5.443238258361816
    7. '()!=' → logprob: -5.943238258361816
    8. ' ==' → logprob: -6.068238258361816
    9. '!='' → logprob: -9.443238258361816
    10. '()='' → logprob: -9.943238258361816

Token 937: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40027865767478943
    2. ''' → logprob: -1.7752786874771118
    3. '='' → logprob: -2.1502785682678223
    4. ''=' → logprob: -3.2752785682678223
    5. '('='' → logprob: -5.775278568267822
    6. ' '='' → logprob: -6.025278568267822
    7. '=:' → logprob: -8.40027904510498
    8. '=
' → logprob: -8.65027904510498
    9. '':' → logprob: -8.90027904510498
    10. '==' → logprob: -10.40027904510498

Token 938: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2699809968471527
    2. ':
' → logprob: -1.519981026649475
    3. '           ' → logprob: -4.3949809074401855
    4. '=' → logprob: -5.3949809074401855
    5. ' and' → logprob: -8.269981384277344
    6. '==' → logprob: -8.644981384277344
    7. 'and' → logprob: -8.644981384277344
    8. ' or' → logprob: -9.519981384277344
    9. '):
' → logprob: -9.519981384277344
    10. '       ' → logprob: -9.644981384277344

Token 939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05463613569736481
    2. '       ' → logprob: -3.054636240005493
    3. 'self' → logprob: -5.179636001586914
    4. '   ' → logprob: -8.429636001586914
    5. ' self' → logprob: -9.304636001586914
    6. ':
' → logprob: -10.179636001586914
    7. ':' → logprob: -10.929636001586914
    8. '=' → logprob: -12.054636001586914
    9. '=self' → logprob: -12.429636001586914
    10. '               ' → logprob: -12.804636001586914

Token 940: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.007736989296972752
    2. '           ' → logprob: -5.007737159729004
    3. ' raise' → logprob: -7.257737159729004
    4. 'self' → logprob: -8.132737159729004
    5. '	raise' → logprob: -10.882737159729004
    6. '       ' → logprob: -13.507737159729004
    7. '   ' → logprob: -14.132737159729004
    8. 'Raise' → logprob: -14.257737159729004
    9. 'raises' → logprob: -14.757737159729004
    10. '_raise' → logprob: -15.007737159729004

Token 941: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -6.2729995988775045e-06
    2. ' Parse' → logprob: -12.000006675720215
    3. '(Parse' → logprob: -17.5000057220459
    4. '_parse' → logprob: -19.5000057220459
    5. 'parse' → logprob: -20.1250057220459
    6. '_Parse' → logprob: -20.5000057220459
    7. 'Parser' → logprob: -20.6250057220459
    8. '.Parse' → logprob: -22.3750057220459
    9. 'Value' → logprob: -22.7500057220459
    10. ' ' → logprob: -22.8750057220459

Token 942: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.1008713702030946e-06
    2. 'rror' → logprob: -13.250001907348633
    3. 'error' → logprob: -16.875001907348633
    4. ' Error' → logprob: -17.750001907348633
    5. 'Erro' → logprob: -17.750001907348633
    6. 'Expect' → logprob: -18.250001907348633
    7. 'Exception' → logprob: -18.250001907348633
    8. 'Parse' → logprob: -18.250001907348633
    9. '_error' → logprob: -18.375001907348633
    10. 'Code' → logprob: -18.625001907348633

Token 943: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03181132674217224
    2. '('' → logprob: -4.156811237335205
    3. '("("' → logprob: -4.906811237335205
    4. '("'' → logprob: -5.281811237335205
    5. '("="' → logprob: -6.156811237335205
    6. '(' → logprob: -7.031811237335205
    7. '('='' → logprob: -9.406811714172363
    8. '("'"' → logprob: -10.531811714172363
    9. '"' → logprob: -11.156811714172363
    10. '       ' → logprob: -11.406811714172363

Token 944: 'Expected' (ID: 28041)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7261902689933777
    2. ''' → logprob: -0.8511902689933777
    3. '"' → logprob: -2.6011903285980225
    4. '="' → logprob: -4.976190090179443
    5. '")' → logprob: -6.476190090179443
    6. '('='' → logprob: -6.726190090179443
    7. '=' → logprob: -6.976190090179443
    8. '='' → logprob: -7.476190090179443
    9. '       ' → logprob: -7.601190090179443
    10. '("="' → logprob: -7.851190090179443

Token 945: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015827087918296456
    2. ' '='' → logprob: -6.751582622528076
    3. '"' → logprob: -8.626583099365234
    4. '('='' → logprob: -8.751583099365234
    5. '='' → logprob: -10.376583099365234
    6. ''=' → logprob: -11.001583099365234
    7. ''")
' → logprob: -11.251583099365234
    8. '   ' → logprob: -12.376583099365234
    9. '("="' → logprob: -12.876583099365234
    10. ' ' → logprob: -13.501583099365234

Token 946: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.025477737188339233
    2. 'at' → logprob: -4.275477886199951
    3. '       ' → logprob: -4.775477886199951
    4. '   ' → logprob: -6.900477886199951
    5. ')' → logprob: -7.150477886199951
    6. ')
' → logprob: -8.525477409362793
    7. '")' → logprob: -8.650477409362793
    8. '           ' → logprob: -8.775477409362793
    9. 'self' → logprob: -9.400477409362793
    10. ',' → logprob: -9.775477409362793

Token 947: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013641661498695612
    2. ' self' → logprob: -6.876364231109619
    3. '=self' → logprob: -8.251363754272461
    4. '=' → logprob: -9.751363754272461
    5. ')' → logprob: -12.626363754272461
    6. '0' → logprob: -13.876363754272461
    7. '           ' → logprob: -14.126363754272461
    8. '<|end|>' → logprob: -14.251363754272461
    9. ' ' → logprob: -14.501363754272461
    10. '(self' → logprob: -14.626363754272461

Token 948: ' {}".' (ID: 51417)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025758943520486355
    2. ' self' → logprob: -6.002575874328613
    3. '(self' → logprob: -10.752575874328613
    4. '=self' → logprob: -10.752575874328613
    5. '       ' → logprob: -11.002575874328613
    6. ')' → logprob: -11.252575874328613
    7. '           ' → logprob: -12.002575874328613
    8. '0' → logprob: -12.127575874328613
    9. '=' → logprob: -12.877575874328613
    10. ')
' → logprob: -13.127575874328613

Token 949: 'format' (ID: 4078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10036539286375046
    2. 'pos' → logprob: -3.225365400314331
    3. ')' → logprob: -3.475365400314331
    4. '0' → logprob: -3.850365400314331
    5. '(self' → logprob: -6.975365161895752
    6. ' self' → logprob: -6.975365161895752
    7. ')
' → logprob: -7.850365161895752
    8. '```' → logprob: -8.22536563873291
    9. '==' → logprob: -8.97536563873291
    10. 'def' → logprob: -8.97536563873291

Token 950: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032136032823473215
    2. ' self' → logprob: -6.503213405609131
    3. ')' → logprob: -6.753213405609131
    4. '(self' → logprob: -8.003213882446289
    5. '=self' → logprob: -9.378213882446289
    6. '       ' → logprob: -10.003213882446289
    7. '           ' → logprob: -10.503213882446289
    8. '=' → logprob: -11.253213882446289
    9. '))' → logprob: -11.503213882446289
    10. ')
' → logprob: -12.003213882446289

Token 951: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -9.729906196298543e-06
    2. ').' → logprob: -12.750009536743164
    3. 'pos' → logprob: -12.750009536743164
    4. '.' → logprob: -12.875009536743164
    5. '.peek' → logprob: -14.750009536743164
    6. ' .' → logprob: -14.875009536743164
    7. '.position' → logprob: -15.125009536743164
    8. '   ' → logprob: -16.375009536743164
    9. '.val' → logprob: -17.250009536743164
    10. '.pe' → logprob: -17.250009536743164

Token 952: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16159453988075256
    2. '       ' → logprob: -2.1615946292877197
    3. ')' → logprob: -3.4115946292877197
    4. '')
' → logprob: -7.661594390869141
    5. ')')
' → logprob: -9.03659439086914
    6. '')' → logprob: -9.28659439086914
    7. '   ' → logprob: -9.28659439086914
    8. ')
' → logprob: -9.41159439086914
    9. ')")
' → logprob: -9.91159439086914
    10. '):
' → logprob: -10.03659439086914

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06226186454296112
    2. 'self' → logprob: -2.8122618198394775
    3. '   ' → logprob: -8.937261581420898
    4. ' self' → logprob: -9.312261581420898
    5. '```' → logprob: -9.687261581420898
    6. '           ' → logprob: -12.062261581420898
    7. '	self' → logprob: -14.562261581420898
    8. '(self' → logprob: -14.562261581420898
    9. '``' → logprob: -14.562261581420898
    10. ' ' → logprob: -14.812261581420898

Token 954: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10032301396131516
    2. '       ' → logprob: -2.350322961807251
    3. '   ' → logprob: -9.725322723388672
    4. ' self' → logprob: -10.475322723388672
    5. '```' → logprob: -10.600322723388672
    6. '           ' → logprob: -13.350322723388672
    7. '`' → logprob: -14.350322723388672
    8. '``' → logprob: -15.100322723388672
    9. '	self' → logprob: -15.225322723388672
    10. '
' → logprob: -15.975322723388672

Token 955: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.08819746226072311
    2. '.expect' → logprob: -2.5881974697113037
    3. '.pos' → logprob: -4.838197231292725
    4. '.' → logprob: -6.713197231292725
    5. 'consume' → logprob: -9.963197708129883
    6. ' .' → logprob: -10.713197708129883
    7. 'expect' → logprob: -10.713197708129883
    8. 'pos' → logprob: -11.588197708129883
    9. '.cons' → logprob: -11.713197708129883
    10. '.advance' → logprob: -12.338197708129883

Token 956: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4207780659198761
    2. '('='' → logprob: -1.1707780361175537
    3. '=' → logprob: -4.295778274536133
    4. '       ' → logprob: -4.545778274536133
    5. '()
' → logprob: -4.920778274536133
    6. '('' → logprob: -7.670778274536133
    7. '(' → logprob: -8.045778274536133
    8. '()='' → logprob: -8.295778274536133
    9. '("="' → logprob: -8.545778274536133
    10. '   ' → logprob: -9.295778274536133

Token 957: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2836788296699524
    2. 'val' → logprob: -1.4086787700653076
    3. ' val' → logprob: -6.783679008483887
    4. '
' → logprob: -6.783679008483887
    5. '```' → logprob: -10.033679008483887
    6. '	val' → logprob: -10.158679008483887
    7. '   ' → logprob: -10.408679008483887
    8. '        
' → logprob: -10.408679008483887
    9. '_val' → logprob: -10.658679008483887
    10. 'value' → logprob: -11.033679008483887

Token 958: ' consume' (ID: 34881)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.012433130294084549
    2. 'right' → logprob: -4.762433052062988
    3. '       ' → logprob: -5.887433052062988
    4. ' val' → logprob: -7.637433052062988
    5. 'rhs' → logprob: -8.512433052062988
    6. '
' → logprob: -9.137433052062988
    7. 'e' → logprob: -10.262433052062988
    8. '=' → logprob: -10.387433052062988
    9. 'equal' → logprob: -10.387433052062988
    10. ' right' → logprob: -10.512433052062988

Token 959: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1808471530675888
    2. '=' → logprob: -2.05584716796875
    3. ''=' → logprob: -3.55584716796875
    4. '=
' → logprob: -5.93084716796875
    5. ' '='' → logprob: -5.93084716796875
    6. '('='' → logprob: -6.18084716796875
    7. '"' → logprob: -7.18084716796875
    8. '='' → logprob: -7.80584716796875
    9. '`' → logprob: -9.18084716796875
    10. '   ' → logprob: -9.55584716796875

Token 960: '
' (ID: 198)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07914336025714874
    2. '       ' → logprob: -2.5791432857513428
    3. ' val' → logprob: -8.829143524169922
    4. 'left' → logprob: -10.079143524169922
    5. 'value' → logprob: -10.954143524169922
    6. '```' → logprob: -11.454143524169922
    7. '	val' → logprob: -11.579143524169922
    8. '_val' → logprob: -11.704143524169922
    9. '
' → logprob: -11.954143524169922
    10. '   ' → logprob: -12.204143524169922

Token 961: '       ' (ID: 309)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014234612695872784
    2. '       ' → logprob: -4.26423454284668
    3. ' val' → logprob: -9.88923454284668
    4. '   ' → logprob: -12.01423454284668
    5. '	val' → logprob: -12.01423454284668
    6. '```' → logprob: -12.13923454284668
    7. 'value' → logprob: -13.13923454284668
    8. '_val' → logprob: -14.51423454284668
    9. '           ' → logprob: -16.63923454284668
    10. '	' → logprob: -16.76423454284668

Token 962: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -1.9385402993066236e-05
    2. '       ' → logprob: -10.875019073486328
    3. ' val' → logprob: -15.000019073486328
    4. '	val' → logprob: -17.125019073486328
    5. 'value' → logprob: -17.375019073486328
    6. '   ' → logprob: -18.500019073486328
    7. '_val' → logprob: -19.375019073486328
    8. '```' → logprob: -19.500019073486328
    9. '
' → logprob: -19.750019073486328
    10. 'return' → logprob: -19.875019073486328

Token 963: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.005270280409604311
    2. 'right' → logprob: -5.255270481109619
    3. '=' → logprob: -11.255270004272461
    4. '   ' → logprob: -11.505270004272461
    5. '       ' → logprob: -12.880270004272461
    6. 'r' → logprob: -13.005270004272461
    7. '_r' → logprob: -13.505270004272461
    8. '_' → logprob: -13.630270004272461
    9. '_rhs' → logprob: -13.755270004272461
    10. ' =' → logprob: -14.005270004272461

Token 964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313269704580307
    2. ' =' → logprob: -1.3132697343826294
    3. '=self' → logprob: -11.81326961517334
    4. '       ' → logprob: -15.06326961517334
    5. '   ' → logprob: -15.68826961517334
    6. ' ' → logprob: -16.313270568847656
    7. '    ' → logprob: -17.688270568847656
    8. ')' → logprob: -17.813270568847656
    9. '        ' → logprob: -17.813270568847656
    10. 'self' → logprob: -18.063270568847656

Token 965: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016039233014453202
    2. ' self' → logprob: -8.750160217285156
    3. '       ' → logprob: -13.250160217285156
    4. '   ' → logprob: -16.625160217285156
    5. '(self' → logprob: -16.625160217285156
    6. '           ' → logprob: -17.375160217285156
    7. '	self' → logprob: -18.375160217285156
    8. '
' → logprob: -18.625160217285156
    9. '[self' → logprob: -19.500160217285156
    10. '=self' → logprob: -19.625160217285156

Token 966: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.10024819523096085
    2. '.parse' → logprob: -2.350248098373413
    3. ' parse' → logprob: -10.225248336791992
    4. '=parse' → logprob: -13.225248336791992
    5. '(parse' → logprob: -13.725248336791992
    6. '	parse' → logprob: -13.850248336791992
    7. 'self' → logprob: -14.475248336791992
    8. '.' → logprob: -14.725248336791992
    9. '_parse' → logprob: -14.850248336791992
    10. '   ' → logprob: -17.225248336791992

Token 967: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0280383548888494e-06
    2. 'Q' → logprob: -14.000000953674316
    3. '=' → logprob: -16.500001907348633
    4. ' E' → logprob: -18.750001907348633
    5. '(' → logprob: -19.500001907348633
    6. 'val' → logprob: -19.875001907348633
    7. '#' → logprob: -20.000001907348633
    8. ')' → logprob: -20.500001907348633
    9. 'left' → logprob: -20.500001907348633
    10. '(E' → logprob: -20.500001907348633

Token 968: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008629352785646915
    2. '()
' → logprob: -4.758629322052002
    3. '())' → logprob: -12.00862979888916
    4. '       ' → logprob: -13.13362979888916
    5. '()

' → logprob: -13.50862979888916
    6. '(' → logprob: -14.00862979888916
    7. '()
' → logprob: -14.13362979888916
    8. ' ()' → logprob: -14.38362979888916
    9. '();' → logprob: -14.38362979888916
    10. ')' → logprob: -14.50862979888916

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038751836866140366
    2. 'if' → logprob: -3.2887518405914307
    3. 'return' → logprob: -7.663751602172852
    4. ' if' → logprob: -8.788751602172852
    5. '   ' → logprob: -9.913751602172852
    6. '```' → logprob: -10.538751602172852
    7. 'self' → logprob: -12.038751602172852
    8. 'def' → logprob: -12.788751602172852
    9. '           ' → logprob: -14.163751602172852
    10. ' ' → logprob: -14.538751602172852

Token 970: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014896276406943798
    2. '       ' → logprob: -4.264896392822266
    3. 'return' → logprob: -7.389896392822266
    4. ' if' → logprob: -9.139896392822266
    5. 'self' → logprob: -12.389896392822266
    6. '#' → logprob: -13.389896392822266
    7. '   ' → logprob: -13.889896392822266
    8. '	if' → logprob: -14.389896392822266
    9. 'If' → logprob: -15.639896392822266
    10. '```' → logprob: -16.639896392822266

Token 971: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015779515961185098
    2. ' self' → logprob: -6.501577854156494
    3. 'val' → logprob: -9.876578330993652
    4. '   ' → logprob: -11.001578330993652
    5. ' ' → logprob: -12.751578330993652
    6. 'not' → logprob: -13.876578330993652
    7. '       ' → logprob: -14.001578330993652
    8. '  ' → logprob: -14.501578330993652
    9. '(self' → logprob: -14.626578330993652
    10. '    ' → logprob: -14.751578330993652

Token 972: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0297758337110281
    2. '.peek' → logprob: -3.529775857925415
    3. 'pos' → logprob: -11.029775619506836
    4. '.' → logprob: -12.404775619506836
    5. ' .' → logprob: -13.779775619506836
    6. '.pe' → logprob: -14.404775619506836
    7. '	pos' → logprob: -14.404775619506836
    8. '.parse' → logprob: -14.529775619506836
    9. '.position' → logprob: -14.779775619506836
    10. '.expect' → logprob: -15.029775619506836

Token 973: '!=' (ID: 11408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16199679672718048
    2. ' ==' → logprob: -1.911996841430664
    3. '>=' → logprob: -6.661996841430664
    4. ' >=' → logprob: -8.036996841430664
    5. '=' → logprob: -9.161996841430664
    6. '===' → logprob: -10.786996841430664
    7. '!=' → logprob: -11.661996841430664
    8. '==
' → logprob: -11.911996841430664
    9. '<' → logprob: -12.536996841430664
    10. '<=' → logprob: -12.786996841430664

Token 974: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005976554471999407
    2. 'len' → logprob: -5.130976676940918
    3. ' self' → logprob: -10.130976676940918
    4. '   ' → logprob: -12.755976676940918
    5. '       ' → logprob: -13.130976676940918
    6. '
' → logprob: -14.005976676940918
    7. ' len' → logprob: -14.130976676940918
    8. '0' → logprob: -15.755976676940918
    9. '	self' → logprob: -15.880976676940918
    10. ' ' → logprob: -15.880976676940918

Token 975: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.6166903151315637e-05
    2. 'len' → logprob: -12.125016212463379
    3. 'n' → logprob: -12.375016212463379
    4. '.len' → logprob: -12.375016212463379
    5. '.' → logprob: -14.000016212463379
    6. ' .' → logprob: -15.250016212463379
    7. '       ' → logprob: -15.875016212463379
    8. '.length' → logprob: -15.875016212463379
    9. '<n' → logprob: -16.125015258789062
    10. '.val' → logprob: -16.250015258789062

Token 976: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5803591012954712
    2. ':' → logprob: -0.9553591012954712
    3. '           ' → logprob: -3.2053589820861816
    4. '       ' → logprob: -5.330358982086182
    5. ' or' → logprob: -5.455358982086182
    6. ':return' → logprob: -5.580358982086182
    7. '   ' → logprob: -7.205358982086182
    8. ')' → logprob: -7.330358982086182
    9. '):' → logprob: -8.45535945892334
    10. 'or' → logprob: -9.20535945892334

Token 977: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003420183784328401
    2. 'raise' → logprob: -8.50034236907959
    3. ' raise' → logprob: -9.12534236907959
    4. '   ' → logprob: -11.25034236907959
    5. '       ' → logprob: -11.75034236907959
    6. '	raise' → logprob: -12.87534236907959
    7. '          ' → logprob: -13.37534236907959
    8. '               ' → logprob: -13.62534236907959
    9. '```' → logprob: -14.50034236907959
    10. 'Raise' → logprob: -14.75034236907959

Token 978: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.2702343165874481
    2. ' raise' → logprob: -2.0202343463897705
    3. '           ' → logprob: -2.2702343463897705
    4. '	raise' → logprob: -7.520234107971191
    5. '   ' → logprob: -9.020234107971191
    6. 'self' → logprob: -9.270234107971191
    7. '       ' → logprob: -10.020234107971191
    8. 'Raise' → logprob: -10.270234107971191
    9. '_raise' → logprob: -10.895234107971191
    10. '               ' → logprob: -11.520234107971191

Token 979: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -2.868328920158092e-05
    2. ' Parse' → logprob: -10.500028610229492
    3. '(Parse' → logprob: -14.375028610229492
    4. 'Parser' → logprob: -14.750028610229492
    5. 'self' → logprob: -16.750028610229492
    6. 'Value' → logprob: -17.500028610229492
    7. '.Parse' → logprob: -17.625028610229492
    8. '_Parse' → logprob: -17.875028610229492
    9. 'Raise' → logprob: -18.250028610229492
    10. ' ' → logprob: -18.375028610229492

Token 980: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.6240566083070007e-06
    2. 'rror' → logprob: -13.500001907348633
    3. '(Error' → logprob: -18.000001907348633
    4. 'Exception' → logprob: -18.125001907348633
    5. 'Position' → logprob: -18.125001907348633
    6. 'error' → logprob: -18.125001907348633
    7. 'SError' → logprob: -18.250001907348633
    8. 'Token' → logprob: -18.250001907348633
    9. 'Input' → logprob: -18.500001907348633
    10. '_Error' → logprob: -18.500001907348633

Token 981: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00024477019906044006
    2. '(' → logprob: -8.500245094299316
    3. '("")' → logprob: -11.000245094299316
    4. '(f' → logprob: -11.750245094299316
    5. '("("' → logprob: -11.750245094299316
    6. '('' → logprob: -11.875245094299316
    7. '("(' → logprob: -14.000245094299316
    8. '()' → logprob: -14.875245094299316
    9. '(
' → logprob: -15.625245094299316
    10. '(""' → logprob: -16.125244140625

Token 982: 'Extra' (ID: 14547)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0045792958699166775
    2. '("' → logprob: -5.879579067230225
    3. 'f' → logprob: -7.629579067230225
    4. 'Unexpected' → logprob: -7.629579067230225
    5. ' "' → logprob: -8.004579544067383
    6. 'Expected' → logprob: -8.754579544067383
    7. ' ' → logprob: -9.504579544067383
    8. ' f' → logprob: -9.504579544067383
    9. '   ' → logprob: -10.379579544067383
    10. '(f' → logprob: -10.504579544067383

Token 983: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.24533890187740326
    2. ' characters' → logprob: -2.7453389167785645
    3. 'input' → logprob: -2.9953389167785645
    4. ' data' → logprob: -3.1203389167785645
    5. ' text' → logprob: -3.6203389167785645
    6. ' tokens' → logprob: -4.8703389167785645
    7. 'data' → logprob: -4.8703389167785645
    8. ' content' → logprob: -5.8703389167785645
    9. ' chars' → logprob: -6.1203389167785645
    10. 'text' → logprob: -6.3703389167785645

Token 984: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.30580568313598633
    2. 'at' → logprob: -2.3058056831359863
    3. ' after' → logprob: -2.8058056831359863
    4. '"' → logprob: -3.0558056831359863
    5. 'after' → logprob: -3.6808056831359863
    6. '")' → logprob: -4.180805683135986
    7. ')' → logprob: -4.430805683135986
    8. '}' → logprob: -7.180805683135986
    9. ' detected' → logprob: -7.180805683135986
    10. ''' → logprob: -8.305805206298828

Token 985: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4867871105670929
    2. 'end' → logprob: -0.9867870807647705
    3. ' end' → logprob: -4.73678731918335
    4. 'position' → logprob: -5.98678731918335
    5. 'self' → logprob: -7.23678731918335
    6. ' pos' → logprob: -7.73678731918335
    7. 'the' → logprob: -9.486786842346191
    8. '{}".' → logprob: -9.736786842346191
    9. 'input' → logprob: -10.861786842346191
    10. ' position' → logprob: -11.611786842346191

Token 986: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04695664718747139
    2. ' at' → logprob: -3.2969565391540527
    3. '")
' → logprob: -5.171956539154053
    4. ' after' → logprob: -6.171956539154053
    5. '"' → logprob: -8.046957015991211
    6. 'after' → logprob: -8.546957015991211
    7. ')' → logprob: -8.796957015991211
    8. '       ' → logprob: -9.671957015991211
    9. 'self' → logprob: -9.671957015991211
    10. '   ' → logprob: -10.046957015991211

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003396824933588505
    2. 'return' → logprob: -5.753396987915039
    3. '
' → logprob: -9.003396987915039
    4. '   ' → logprob: -9.503396987915039
    5. ' return' → logprob: -11.503396987915039
    6. '```' → logprob: -11.753396987915039
    7. '        
' → logprob: -13.878396987915039
    8. '	return' → logprob: -14.253396987915039
    9. 'if' → logprob: -14.253396987915039
    10. '           ' → logprob: -14.628396987915039

Token 988: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00880388729274273
    2. 'return' (adapté à ' return') → logprob: -4.758803844451904
    3. '
' → logprob: -9.508804321289062
    4. '   ' → logprob: -9.883804321289062
    5. ' return' → logprob: -10.258804321289062
    6. 'if' → logprob: -10.883804321289062
    7. '        
' → logprob: -12.758804321289062
    8. '           ' → logprob: -13.258804321289062
    9. '	return' → logprob: -13.508804321289062
    10. '```' → logprob: -13.508804321289062

Token 989: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.391573429107666
    2. 'val' → logprob: -1.141573429107666
    3. '(' → logprob: -6.016573429107666
    4. ' (' → logprob: -6.516573429107666
    5. ' val' → logprob: -7.516573429107666
    6. '[val' → logprob: -9.391572952270508
    7. '('' → logprob: -10.141572952270508
    8. '(True' → logprob: -10.641572952270508
    9. '(int' → logprob: -10.891572952270508
    10. '   ' → logprob: -11.266572952270508

Token 990: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0001387009397149086
    2. '(val' → logprob: -9.250138282775879
    3. 'True' → logprob: -11.000138282775879
    4. ' val' → logprob: -11.500138282775879
    5. '('' → logprob: -11.875138282775879
    6. '(' → logprob: -12.375138282775879
    7. ''' → logprob: -13.500138282775879
    8. '   ' → logprob: -14.250138282775879
    9. ' (' → logprob: -14.875138282775879
    10. '(True' → logprob: -14.875138282775879

Token 991: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -4.60414821645827e-06
    2. '_right' → logprob: -12.625004768371582
    3. ')_' → logprob: -14.750004768371582
    4. '_val' → logprob: -15.375004768371582
    5. 'left' → logprob: -15.875004768371582
    6. ')' → logprob: -15.875004768371582
    7. '=' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.625003814697266
    9. 'val' → logprob: -17.000003814697266
    10. '_' → logprob: -17.750003814697266

Token 992: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45254775881767273
    2. ',val' → logprob: -1.8275477886199951
    3. ' ==' → logprob: -1.9525477886199951
    4. '==' → logprob: -3.077547788619995
    5. ' ,' → logprob: -4.202547550201416
    6. ')==' → logprob: -8.952548027038574
    7. ')' → logprob: -10.452548027038574
    8. 'val' → logprob: -10.827548027038574
    9. ' ==
' → logprob: -11.327548027038574
    10. '==
' → logprob: -11.702548027038574

Token 993: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.5954712075181305e-05
    2. 'right' → logprob: -10.875036239624023
    3. 'Right' → logprob: -11.750036239624023
    4. ')_' → logprob: -12.125036239624023
    5. ')' → logprob: -13.125036239624023
    6. '_Right' → logprob: -14.250036239624023
    7. '_RIGHT' → logprob: -14.875036239624023
    8. '_left' → logprob: -15.500036239624023
    9. '	right' → logprob: -16.250036239624023
    10. '_' → logprob: -16.750036239624023

Token 994: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003264934290200472
    2. '<|end|>' → logprob: -5.753264904022217
    3. '       ' → logprob: -10.628265380859375
    4. ')
' → logprob: -10.753265380859375
    5. '<|end|>' → logprob: -11.253265380859375
    6. '   ' → logprob: -11.378265380859375
    7. ',' → logprob: -11.753265380859375
    8. '
' → logprob: -12.753265380859375
    9. ')return' → logprob: -13.503265380859375
    10. '),' → logprob: -14.003265380859375

Token 995: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013110815547406673
    2. 'def' → logprob: -4.763110637664795
    3. '
' → logprob: -5.763110637664795
    4. '```' → logprob: -7.013110637664795
    5. '    
' → logprob: -7.888110637664795
    6. '        
' → logprob: -10.763111114501953
    7. '#' → logprob: -10.888111114501953
    8. ' def' → logprob: -11.388111114501953
    9. '<|end|>' → logprob: -11.513111114501953
    10. '<|end|>' → logprob: -13.263111114501953

Token 996: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3132973313331604
    2. 'def' → logprob: -1.3132972717285156
    3. ' def' → logprob: -10.938297271728516
    4. '```' → logprob: -11.313297271728516
    5. '
' → logprob: -12.438297271728516
    6. '#' → logprob: -14.563297271728516
    7. '	def' → logprob: -14.563297271728516
    8. '    
' → logprob: -14.688297271728516
    9. '       ' → logprob: -15.813297271728516
    10. 'Def' → logprob: -17.063297271728516

Token 997: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001645644661039114
    2. '   ' → logprob: -8.750164985656738
    3. ' def' → logprob: -12.125164985656738
    4. '
' → logprob: -14.500164985656738
    5. '```' → logprob: -16.125164031982422
    6. '#' → logprob: -17.375164031982422
    7. '    
' → logprob: -17.875164031982422
    8. '	def' → logprob: -18.125164031982422
    9. 'Def' → logprob: -19.125164031982422
    10. '       ' → logprob: -19.125164031982422

Token 998: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0019694350194185972
    2. 'peek' → logprob: -6.251969337463379
    3. 'consume' → logprob: -10.751969337463379
    4. 'def' → logprob: -11.501969337463379
    5. ' parse' → logprob: -12.251969337463379
    6. '_parse' → logprob: -14.251969337463379
    7. 'is' → logprob: -14.376969337463379
    8. 'E' → logprob: -14.751969337463379
    9. '
' → logprob: -14.751969337463379
    10. 's' → logprob: -15.001969337463379

Token 999: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: 0.0
    2. 'Q' → logprob: -17.75
    3. ' E' → logprob: -18.75
    4. 'def' → logprob: -22.125
    5. '(E' → logprob: -22.25
    6. '_E' → logprob: -22.5
    7. 'Expression' → logprob: -22.75
    8. '```' → logprob: -23.0
    9. 'EClass' → logprob: -23.625
    10. '#' → logprob: -23.75

Token 1000: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039230400579981506
    2. '   ' → logprob: -8.500391960144043
    3. '(' → logprob: -9.250391960144043
    4. 'def' → logprob: -9.875391960144043
    5. '       ' → logprob: -11.125391960144043
    6. 'self' → logprob: -11.625391960144043
    7. '_(' → logprob: -12.500391960144043
    8. ' (' → logprob: -13.000391960144043
    9. '(s' → logprob: -13.375391960144043
    10. ' ' → logprob: -13.500391960144043

Token 1001: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01335962675511837
    2. '):
' → logprob: -4.888359546661377
    3. '):' → logprob: -5.638359546661377
    4. 'self' → logprob: -6.638359546661377
    5. '   ' → logprob: -7.263359546661377
    6. '       ' → logprob: -10.138360023498535
    7. 'def' → logprob: -10.138360023498535
    8. ')' → logprob: -10.388360023498535
    9. ' ' → logprob: -10.763360023498535
    10. '(' → logprob: -11.638360023498535

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22647450864315033
    2. 'val' → logprob: -1.9764745235443115
    3. 'left' → logprob: -3.4764745235443115
    4. '   ' → logprob: -4.226474285125732
    5. 'def' → logprob: -4.351474285125732
    6. 'lhs' → logprob: -6.726474285125732
    7. 'term' → logprob: -6.851474285125732
    8. 'res' → logprob: -7.351474285125732
    9. 'self' → logprob: -7.601474285125732
    10. 'l' → logprob: -7.976474285125732

Token 1003: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.008817831985652447
    2. 'left' → logprob: -4.758817672729492
    3. 'node' → logprob: -9.758817672729492
    4. 'res' → logprob: -9.883817672729492
    5. 'lhs' → logprob: -10.008817672729492
    6. '   ' → logprob: -10.508817672729492
    7. '       ' → logprob: -12.008817672729492
    8. 'term' → logprob: -12.258817672729492
    9. 'def' → logprob: -12.633817672729492
    10. 'result' → logprob: -12.758817672729492

Token 1004: ' E' (ID: 457)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14123794436454773
    2. 'def' → logprob: -2.26623797416687
    3. 'left' → logprob: -4.516237735748291
    4. 'res' → logprob: -5.391237735748291
    5. 'term' → logprob: -5.391237735748291
    6. 'node' → logprob: -5.891237735748291
    7. 't' → logprob: -6.141237735748291
    8. '   ' → logprob: -6.641237735748291
    9. 'result' → logprob: -7.516237735748291
    10. 'T' → logprob: -7.641237735748291

Token 1005: ' ::=' (ID: 176636)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19211338460445404
    2. '=' → logprob: -2.1921133995056152
    3. '       ' → logprob: -3.5671133995056152
    4. '   ' → logprob: -4.067113399505615
    5. 'def' → logprob: -4.192113399505615
    6. '()' → logprob: -6.692113399505615
    7. '=self' → logprob: -7.692113399505615
    8. ' def' → logprob: -8.067112922668457
    9. ' ' → logprob: -8.692112922668457
    10. '():' → logprob: -9.317112922668457

Token 1006: ' T' (ID: 353)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045259902253746986
    2. ' self' → logprob: -7.750452518463135
    3. '       ' → logprob: -11.125452995300293
    4. '   ' → logprob: -12.375452995300293
    5. 'def' → logprob: -13.250452995300293
    6. ' ' → logprob: -14.875452995300293
    7. 'T' → logprob: -15.125452995300293
    8. '           ' → logprob: -16.000452041625977
    9. '  ' → logprob: -16.125452041625977
    10. '     ' → logprob: -16.375452041625977

Token 1007: ' |' (ID: 1022)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.242097407579422
    2. 'left' → logprob: -2.1170973777770996
    3. '       ' → logprob: -3.3670973777770996
    4. ' left' → logprob: -3.9920973777770996
    5. 'node' → logprob: -4.4920973777771
    6. ' val' → logprob: -4.9920973777771
    7. '
' → logprob: -4.9920973777771
    8. '   ' → logprob: -5.1170973777771
    9. 'term' → logprob: -5.4920973777771
    10. 'def' → logprob: -6.2420973777771

Token 1008: ' E' (ID: 457)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.12064202129840851
    2. 'E' → logprob: -2.9956419467926025
    3. ' T' → logprob: -2.9956419467926025
    4. 'self' → logprob: -4.995642185211182
    5. 'def' → logprob: -5.745642185211182
    6. ' E' → logprob: -6.370642185211182
    7. ' self' → logprob: -7.620642185211182
    8. 'parse' → logprob: -7.745642185211182
    9. '   ' → logprob: -7.995642185211182
    10. ' ' → logprob: -8.870641708374023

Token 1009: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06364169716835022
    2. ' +' → logprob: -3.5636417865753174
    3. ''+' → logprob: -5.063641548156738
    4. ''' → logprob: -5.563641548156738
    5. 'def' → logprob: -5.563641548156738
    6. ' '+'' → logprob: -5.688641548156738
    7. '('' → logprob: -5.813641548156738
    8. '   ' → logprob: -6.313641548156738
    9. '('+' → logprob: -6.438641548156738
    10. '
' → logprob: -6.563641548156738

Token 1010: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -9.782141569303349e-05
    2. ' T' → logprob: -9.62509822845459
    3. '+' → logprob: -11.00009822845459
    4. '   ' → logprob: -12.37509822845459
    5. ' ' → logprob: -12.87509822845459
    6. 'def' → logprob: -13.00009822845459
    7. '       ' → logprob: -13.75009822845459
    8. '  ' → logprob: -14.12509822845459
    9. '     ' → logprob: -14.37509822845459
    10. 'self' → logprob: -14.37509822845459

Token 1011: ' |' (ID: 1022)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0729709342122078
    2. 'def' → logprob: -3.8229708671569824
    3. '
' → logprob: -4.197970867156982
    4. '   ' → logprob: -4.322970867156982
    5. 'while' → logprob: -4.572970867156982
    6. 'ch' → logprob: -6.322970867156982
    7. '           ' → logprob: -6.697970867156982
    8. 'val' → logprob: -7.322970867156982
    9. ' def' → logprob: -7.447970867156982
    10. '        
' → logprob: -7.572970867156982

Token 1012: ' E' (ID: 457)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.016191674396395683
    2. ' T' → logprob: -4.141191482543945
    3. 'E' → logprob: -9.266191482543945
    4. '       ' → logprob: -10.641191482543945
    5. ' ' → logprob: -11.516191482543945
    6. '   ' → logprob: -11.516191482543945
    7. 'def' → logprob: -11.891191482543945
    8. '  ' → logprob: -13.016191482543945
    9. 'self' → logprob: -13.016191482543945
    10. ' E' → logprob: -13.266191482543945

Token 1013: '-T' (ID: 11264)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6448705196380615
    2. '*' → logprob: -1.1448705196380615
    3. ' |' → logprob: -3.0198705196380615
    4. 'def' → logprob: -3.6448705196380615
    5. '       ' → logprob: -4.019870758056641
    6. '+' → logprob: -4.269870758056641
    7. ' ' → logprob: -4.394870758056641
    8. '-' → logprob: -4.519870758056641
    9. '   ' → logprob: -4.769870758056641
    10. '  ' → logprob: -5.644870758056641

Token 1014: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016654277220368385
    2. 'val' → logprob: -5.0166544914245605
    3. '   ' → logprob: -5.5166544914245605
    4. 'def' → logprob: -5.8916544914245605
    5. 'left' → logprob: -6.7666544914245605
    6. '
' → logprob: -7.2666544914245605
    7. 'term' → logprob: -8.016654014587402
    8. ' left' → logprob: -8.891654014587402
    9. 'node' → logprob: -9.141654014587402
    10. ' val' → logprob: -9.141654014587402

Token 1015: 'left' (ID: 4530)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.44504380226135254
    2. '       ' → logprob: -2.0700438022613525
    3. 'left' → logprob: -2.0700438022613525
    4. ' left' → logprob: -3.1950438022613525
    5. ' val' → logprob: -3.5700438022613525
    6. 't' → logprob: -4.195043563842773
    7. 'lhs' → logprob: -4.945043563842773
    8. 'node' → logprob: -5.320043563842773
    9. ' lhs' → logprob: -5.695043563842773
    10. '   ' → logprob: -6.070043563842773

Token 1016: ' associative' (ID: 169679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6226759552955627
    2. '       ' → logprob: -1.747675895690918
    3. 'def' → logprob: -1.872675895690918
    4. ' =' → logprob: -2.372675895690918
    5. '           ' → logprob: -4.622675895690918
    6. ' ' → logprob: -5.372675895690918
    7. '    ' → logprob: -5.497675895690918
    8. '     ' → logprob: -5.497675895690918
    9. '=' → logprob: -5.497675895690918
    10. ':' → logprob: -5.622675895690918

Token 1017: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26811376214027405
    2. '   ' → logprob: -2.018113851547241
    3. 'def' → logprob: -2.643113851547241
    4. '
' → logprob: -4.143113613128662
    5. ' def' → logprob: -5.393113613128662
    6. '()
' → logprob: -5.393113613128662
    7. '):
' → logprob: -6.268113613128662
    8. ':
' → logprob: -6.643113613128662
    9. ')
' → logprob: -7.143113613128662
    10. '        
' → logprob: -7.643113613128662

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004545115400105715
    2. 'left' → logprob: -6.754545211791992
    3. 'def' → logprob: -7.004545211791992
    4. '   ' → logprob: -7.004545211791992
    5. 'term' → logprob: -7.254545211791992
    6. 'ch' → logprob: -8.254545211791992
    7. 'val' → logprob: -8.254545211791992
    8. 'node' → logprob: -9.129545211791992
    9. 't' → logprob: -9.629545211791992
    10. ' left' → logprob: -9.879545211791992

Token 1019: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.5012800693511963
    2. 'left' → logprob: -1.0012800693511963
    3. 'node' → logprob: -3.7512800693511963
    4. 'lhs' → logprob: -6.626279830932617
    5. '   ' → logprob: -7.126279830932617
    6. 'term' → logprob: -7.376279830932617
    7. 'res' → logprob: -8.001279830932617
    8. '       ' → logprob: -9.626279830932617
    9. 't' → logprob: -9.751279830932617
    10. 'result' → logprob: -10.126279830932617

Token 1020: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767589807510376
    2. '=' → logprob: -0.8267589807510376
    3. '       ' → logprob: -7.451758861541748
    4. '   ' → logprob: -9.326759338378906
    5. '=self' → logprob: -10.326759338378906
    6. '	' → logprob: -10.701759338378906
    7. 'T' → logprob: -10.951759338378906
    8. ' ' → logprob: -11.201759338378906
    9. '_' → logprob: -11.326759338378906
    10. '           ' → logprob: -11.701759338378906

Token 1021: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5570885807392187e-05
    2. ' self' → logprob: -11.500015258789062
    3. '       ' → logprob: -12.500015258789062
    4. '   ' → logprob: -13.375015258789062
    5. ' ' → logprob: -17.000015258789062
    6. '(self' → logprob: -17.125015258789062
    7. '     ' → logprob: -17.250015258789062
    8. '           ' → logprob: -17.625015258789062
    9. '  ' → logprob: -17.750015258789062
    10. '         ' → logprob: -18.625015258789062

Token 1022: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -5.9795445849886164e-05
    2. 'parse' → logprob: -9.875060081481934
    3. '.' → logprob: -12.000060081481934
    4. '=parse' → logprob: -14.125060081481934
    5. ' .' → logprob: -14.250060081481934
    6. '   ' → logprob: -14.500060081481934
    7. '.consume' → logprob: -16.125059127807617
    8. 'self' → logprob: -16.875059127807617
    9. ' parse' → logprob: -16.875059127807617
    10. '	parse' → logprob: -17.375059127807617

Token 1023: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.9361264946837764e-07
    2. ' T' → logprob: -17.75
    3. '(T' → logprob: -18.0
    4. 'Т' → logprob: -18.875
    5. 'Ｔ' → logprob: -19.25
    6. '
' → logprob: -19.375
    7. '[T' → logprob: -19.5
    8. '	T' → logprob: -19.5
    9. 'def' → logprob: -19.625
    10. '```' → logprob: -19.875

Token 1024: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4377828538417816
    2. 'while' → logprob: -1.062782883644104
    3. '()' → logprob: -5.0627827644348145
    4. '()
' → logprob: -6.9377827644348145
    5. ' while' → logprob: -7.0627827644348145
    6. 'ch' → logprob: -7.8127827644348145
    7. 'While' → logprob: -8.312783241271973
    8. '   ' → logprob: -9.562783241271973
    9. '	while' → logprob: -9.687783241271973
    10. '
' → logprob: -10.437783241271973

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14406177401542664
    2. 'while' → logprob: -2.019061803817749
    3. ' while' → logprob: -7.14406156539917
    4. 'ch' → logprob: -8.394062042236328
    5. '
' → logprob: -8.519062042236328
    6. '   ' → logprob: -9.144062042236328
    7. '	while' → logprob: -10.894062042236328
    8. '```' → logprob: -11.144062042236328
    9. 'While' → logprob: -11.894062042236328
    10. 'next' → logprob: -12.144062042236328

Token 1026: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.011952179484069347
    2. '       ' → logprob: -4.5119524002075195
    3. ' while' → logprob: -7.0119524002075195
    4. '	while' → logprob: -13.51195240020752
    5. '
' → logprob: -14.26195240020752
    6. '   ' → logprob: -14.51195240020752
    7. 'While' → logprob: -15.26195240020752
    8. 'ch' → logprob: -15.38695240020752
    9. '        
' → logprob: -18.511951446533203
    10. '           ' → logprob: -18.886951446533203

Token 1027: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7593370079994202
    2. 'self' → logprob: -1.2593369483947754
    3. ' True' → logprob: -1.5093369483947754
    4. ' self' → logprob: -3.6343369483947754
    5. '(True' → logprob: -7.384336948394775
    6. '(self' → logprob: -10.009337425231934
    7. '   ' → logprob: -10.759337425231934
    8. ' (' → logprob: -11.134337425231934
    9. ' ' → logprob: -11.384337425231934
    10. '	self' → logprob: -12.759337425231934

Token 1028: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05592385306954384
    2. ':' → logprob: -3.4309239387512207
    3. ' and' → logprob: -4.555923938751221
    4. ':
' → logprob: -4.680923938751221
    5. ' =' → logprob: -7.180923938751221
    6. '       ' → logprob: -8.430923461914062
    7. '=' → logprob: -8.555923461914062
    8. '		' → logprob: -8.680923461914062
    9. ',' → logprob: -8.805923461914062
    10. 'and' → logprob: -8.930923461914062

Token 1029: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0492488369345665
    2. 'ch' → logprob: -3.1742489337921143
    3. ' ch' → logprob: -5.174248695373535
    4. ' c' → logprob: -8.799248695373535
    5. ' if' → logprob: -8.799248695373535
    6. 'c' → logprob: -10.049248695373535
    7. ',ch' → logprob: -10.174248695373535
    8. '          ' → logprob: -10.674248695373535
    9. '```' → logprob: -10.924248695373535
    10. '       ' → logprob: -10.924248695373535

Token 1030: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.014347654767334461
    2. 'c' → logprob: -4.639347553253174
    3. ' ch' → logprob: -5.889347553253174
    4. 'if' → logprob: -7.264347553253174
    5. '       ' → logprob: -7.514347553253174
    6. '           ' → logprob: -8.764348030090332
    7. '   ' → logprob: -8.889348030090332
    8. ' c' → logprob: -9.139348030090332
    9. ' if' → logprob: -9.264348030090332
    10. '	ch' → logprob: -10.639348030090332

Token 1031: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871381878852844
    2. '=' → logprob: -1.1371381282806396
    3. '=self' → logprob: -8.637138366699219
    4. 'in' → logprob: -10.887138366699219
    5. 'self' → logprob: -11.012138366699219
    6. ' in' → logprob: -11.637138366699219
    7. ':=' → logprob: -11.637138366699219
    8. '   ' → logprob: -11.762138366699219
    9. '           ' → logprob: -12.012138366699219
    10. ' ' → logprob: -12.262138366699219

Token 1032: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8074162653647363e-05
    2. ' self' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.375018119812012
    4. '       ' → logprob: -14.750018119812012
    5. '           ' → logprob: -15.000018119812012
    6. '(self' → logprob: -17.250017166137695
    7. ' ' → logprob: -18.500017166137695
    8. '         ' → logprob: -19.125017166137695
    9. '     ' → logprob: -19.125017166137695
    10. '               ' → logprob: -19.500017166137695

Token 1033: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.1271924525499344
    2. 'peek' → logprob: -2.127192497253418
    3. '.' → logprob: -9.002192497253418
    4. '.consume' → logprob: -9.752192497253418
    5. ' peek' → logprob: -10.127192497253418
    6. ' .' → logprob: -10.502192497253418
    7. '   ' → logprob: -12.252192497253418
    8. 'self' → logprob: -13.127192497253418
    9. ' ' → logprob: -13.502192497253418
    10. '=' → logprob: -14.002192497253418

Token 1034: '()
' (ID: 1234)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04731554165482521
    2. 'in' → logprob: -4.17231559753418
    3. ' ' → logprob: -5.04731559753418
    4. ' ==' → logprob: -5.42231559753418
    5. '           ' → logprob: -5.42231559753418
    6. '<|end|>' → logprob: -5.54731559753418
    7. ')' → logprob: -6.29731559753418
    8. '
' → logprob: -6.42231559753418
    9. '            ' → logprob: -6.54731559753418
    10. ' if' → logprob: -6.79731559753418

Token 1035: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004331372212618589
    2. '		' → logprob: -6.129331588745117
    3. ' ==' → logprob: -7.254331588745117
    4. '	       ' → logprob: -7.504331588745117
    5. ' if' → logprob: -7.754331588745117
    6. ' =' → logprob: -9.629331588745117
    7. '==' → logprob: -9.629331588745117
    8. ' in' → logprob: -9.879331588745117
    9. '            ' → logprob: -10.254331588745117
    10. '    	' → logprob: -10.504331588745117

Token 1036: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10561341792345047
    2. '           ' → logprob: -2.3556134700775146
    3. 'if' (adapté à ' if') → logprob: -5.8556132316589355
    4. '            ' → logprob: -6.7306132316589355
    5. ' ' → logprob: -6.9806132316589355
    6. '    ' → logprob: -9.480613708496094
    7. '   ' → logprob: -10.105613708496094
    8. '	if' → logprob: -10.105613708496094
    9. '               ' → logprob: -10.230613708496094
    10. ' =' → logprob: -10.605613708496094

Token 1037: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.018154270946979523
    2. ' ch' → logprob: -4.018154144287109
    3. ' ' → logprob: -13.26815414428711
    4. '(ch' → logprob: -13.39315414428711
    5. '	ch' → logprob: -14.64315414428711
    6. '  ' → logprob: -15.39315414428711
    7. ''ch' → logprob: -15.64315414428711
    8. ''' → logprob: -16.26815414428711
    9. '   ' → logprob: -16.64315414428711
    10. '    ' → logprob: -17.64315414428711

Token 1038: '==' (ID: 560)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10573546588420868
    2. ' ==' → logprob: -2.6057355403900146
    3. 'in' → logprob: -4.3557353019714355
    4. '==' → logprob: -4.7307353019714355
    5. '=='' → logprob: -5.8557353019714355
    6. ' =='' → logprob: -6.3557353019714355
    7. ' is' → logprob: -8.605735778808594
    8. '=' → logprob: -10.980735778808594
    9. ' =' → logprob: -11.355735778808594
    10. '=="' → logprob: -12.605735778808594

Token 1039: ''+' (ID: 16370)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07894156873226166
    2. ''+' → logprob: -2.578941583633423
    3. ' '+'' → logprob: -10.828941345214844
    4. '+' → logprob: -10.953941345214844
    5. '"+"' → logprob: -11.578941345214844
    6. ''or' → logprob: -13.453941345214844
    7. '+'' → logprob: -14.203941345214844
    8. ''-' → logprob: -14.578941345214844
    9. '"+' → logprob: -14.703941345214844
    10. '('+' → logprob: -14.828941345214844

Token 1040: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -1.0309743881225586
    2. ''' → logprob: -1.1559743881225586
    3. ' or' → logprob: -1.7809743881225586
    4. '':
' → logprob: -2.2809743881225586
    5. ''or' → logprob: -3.0309743881225586
    6. ':' → logprob: -5.155974388122559
    7. ''):
' → logprob: -7.530974388122559
    8. ' '' → logprob: -7.655974388122559
    9. ':
' → logprob: -7.905974388122559
    10. '':'' → logprob: -8.030974388122559

Token 1041: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19002585113048553
    2. '           ' → logprob: -2.065025806427002
    3. 'self' → logprob: -3.690025806427002
    4. ' self' → logprob: -4.815025806427002
    5. '{
' → logprob: -6.190025806427002
    6. '=' → logprob: -6.190025806427002
    7. ':
' → logprob: -6.690025806427002
    8. ' =' → logprob: -7.065025806427002
    9. '   ' → logprob: -7.065025806427002
    10. '(self' → logprob: -7.190025806427002

Token 1042: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00021843716967850924
    2. '               ' → logprob: -8.875218391418457
    3. ' self' → logprob: -9.625218391418457
    4. '           ' → logprob: -11.375218391418457
    5. '   ' → logprob: -15.000218391418457
    6. '_' → logprob: -15.125218391418457
    7. '
' → logprob: -15.375218391418457
    8. '                   ' → logprob: -16.000219345092773
    9. '	self' → logprob: -17.250219345092773
    10. '```' → logprob: -17.375219345092773

Token 1043: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0006933739641681314
    2. '.' → logprob: -7.500693321228027
    3. 'consume' → logprob: -8.875693321228027
    4. ' .' → logprob: -14.625693321228027
    5. '.cons' → logprob: -17.250694274902344
    6. '   ' → logprob: -17.500694274902344
    7. '.acquire' → logprob: -17.750694274902344
    8. ' consume' → logprob: -17.750694274902344
    9. '
' → logprob: -17.875694274902344
    10. '.
' → logprob: -18.250694274902344

Token 1044: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.64130699634552
    2. '()' → logprob: -1.14130699634552
    3. '               ' → logprob: -1.89130699634552
    4. 'val' → logprob: -6.3913068771362305
    5. '                   ' → logprob: -7.6413068771362305
    6. 'def' → logprob: -8.39130687713623
    7. '           ' → logprob: -8.89130687713623
    8. '()
' → logprob: -8.89130687713623
    9. '();' → logprob: -9.01630687713623
    10. '(' → logprob: -9.89130687713623

Token 1045: '               ' (ID: 506)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7471523880958557
    2. '           ' → logprob: -0.9971523880958557
    3. ' val' → logprob: -2.247152328491211
    4. '               ' → logprob: -2.997152328491211
    5. '                   ' → logprob: -7.372152328491211
    6. '       ' → logprob: -8.122152328491211
    7. '	val' → logprob: -8.872152328491211
    8. 'v' → logprob: -8.997152328491211
    9. '
' → logprob: -8.997152328491211
    10. '   ' → logprob: -9.247152328491211

Token 1046: ' right' (ID: 1849)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.22173811495304108
    2. 'right' (adapté à ' right') → logprob: -1.7217381000518799
    3. 'r' → logprob: -4.346738338470459
    4. 't' → logprob: -5.721738338470459
    5. 'val' → logprob: -5.971738338470459
    6. 'v' → logprob: -6.846738338470459
    7. ' rhs' → logprob: -8.8467378616333
    8. 'rt' → logprob: -10.4717378616333
    9. '_rhs' → logprob: -10.7217378616333
    10. '       ' → logprob: -10.9717378616333

Token 1047: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39104655385017395
    2. '=' → logprob: -1.1410465240478516
    3. '_val' → logprob: -5.516046524047852
    4. 'val' → logprob: -9.016046524047852
    5. 'Val' → logprob: -11.766046524047852
    6. '=parse' → logprob: -11.891046524047852
    7. '=self' → logprob: -12.391046524047852
    8. ' ' → logprob: -13.016046524047852
    9. '   ' → logprob: -13.766046524047852
    10. '_value' → logprob: -15.141046524047852

Token 1048: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. ' self' → logprob: -13.125001907348633
    3. '(self' → logprob: -17.500001907348633
    4. '           ' → logprob: -18.000001907348633
    5. '       ' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '               ' → logprob: -20.000001907348633
    8. '[self' → logprob: -20.125001907348633
    9. '	self' → logprob: -20.500001907348633
    10. '                   ' → logprob: -21.125001907348633

Token 1049: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00043519894825294614
    2. 'parse' → logprob: -7.7504353523254395
    3. '.' → logprob: -12.375434875488281
    4. '=parse' → logprob: -15.625434875488281
    5. ' .' → logprob: -17.12543487548828
    6. '	parse' → logprob: -17.62543487548828
    7. ' parse' → logprob: -17.75043487548828
    8. '(parse' → logprob: -18.12543487548828
    9. '```' → logprob: -18.37543487548828
    10. '_parse' → logprob: -19.00043487548828

Token 1050: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -7.896309739408025e-07
    2. 'E' → logprob: -14.250000953674316
    3. ' T' → logprob: -16.5
    4. '(T' → logprob: -18.75
    5. '(' → logprob: -19.875
    6. '('' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. ' ' → logprob: -20.875
    9. '_T' → logprob: -20.875
    10. '	T' → logprob: -21.0

Token 1051: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13591578602790833
    2. '()
' → logprob: -2.135915756225586
    3. '               ' → logprob: -4.760915756225586
    4. '           ' → logprob: -8.135915756225586
    5. ')' → logprob: -9.635915756225586
    6. '()
' → logprob: -11.760915756225586
    7. '                   ' → logprob: -12.135915756225586
    8. ')
' → logprob: -12.760915756225586
    9. '())' → logprob: -12.760915756225586
    10. '():
' → logprob: -13.010915756225586

Token 1052: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009847693145275116
    2. '           ' → logprob: -5.009847640991211
    3. 'val' → logprob: -6.384847640991211
    4. ' val' → logprob: -8.009847640991211
    5. '                   ' → logprob: -8.384847640991211
    6. '			' → logprob: -8.884847640991211
    7. '	           ' → logprob: -9.009847640991211
    8. '		       ' → logprob: -9.134847640991211
    9. '                
' → logprob: -9.634847640991211
    10. '		' → logprob: -9.884847640991211

Token 1053: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0053107235580682755
    2. ' val' → logprob: -5.255310535430908
    3. '           ' → logprob: -9.505311012268066
    4. '               ' → logprob: -13.630311012268066
    5. '	val' → logprob: -14.380311012268066
    6. '_val' → logprob: -15.505311012268066
    7. '.val' → logprob: -15.880311012268066
    8. ',val' → logprob: -16.25531005859375
    9. '                   ' → logprob: -16.38031005859375
    10. '```' → logprob: -17.38031005859375

Token 1054: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.45681288838386536
    2. '=' → logprob: -1.206812858581543
    3. ' +=' → logprob: -3.081812858581543
    4. ' =' → logprob: -3.831812858581543
    5. '+=(' → logprob: -12.956812858581543
    6. '   ' → logprob: -13.581812858581543
    7. '+' → logprob: -14.581812858581543
    8. '+='' → logprob: -15.331812858581543
    9. ']+=' → logprob: -15.581812858581543
    10. '.=' → logprob: -15.706812858581543

Token 1055: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -9.627176768844947e-05
    2. ' val' → logprob: -9.250096321105957
    3. '(val' → logprob: -16.37509536743164
    4. '   ' → logprob: -17.00009536743164
    5. '	val' → logprob: -18.75009536743164
    6. ' ' → logprob: -19.00009536743164
    7. '           ' → logprob: -19.75009536743164
    8. '[val' → logprob: -20.00009536743164
    9. '  ' → logprob: -20.25009536743164
    10. '(' → logprob: -20.25009536743164

Token 1056: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804229199886322
    2. ' +' → logprob: -3.2880423069000244
    3. '+
' → logprob: -14.288042068481445
    4. ' plus' → logprob: -16.413042068481445
    5. ' ' → logprob: -16.913042068481445
    6. 'plus' → logprob: -17.413042068481445
    7. '+self' → logprob: -17.413042068481445
    8. ' +
' → logprob: -17.913042068481445
    9. '   ' → logprob: -18.288042068481445
    10. '+=' → logprob: -18.538042068481445

Token 1057: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00020354038861114532
    2. ' right' → logprob: -8.500203132629395
    3. '(right' → logprob: -20.25020408630371
    4. '               ' → logprob: -20.75020408630371
    5. '	right' → logprob: -21.50020408630371
    6. '[right' → logprob: -22.62520408630371
    7. 'left' → logprob: -22.87520408630371
    8. '           ' → logprob: -22.87520408630371
    9. '                   ' → logprob: -23.00020408630371
    10. 'Right' → logprob: -23.62520408630371

Token 1058: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11931859701871872
    2. '<|end|>' → logprob: -3.1193184852600098
    3. '               ' → logprob: -3.3693184852600098
    4. '       ' → logprob: -3.9943184852600098
    5. ')' → logprob: -4.86931848526001
    6. '<|end|>' → logprob: -5.24431848526001
    7. '		' → logprob: -7.49431848526001
    8. '```' → logprob: -8.119318962097168
    9. '   ' → logprob: -8.244318962097168
    10. '          ' → logprob: -8.494318962097168

Token 1060: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2560946047306061
    2. '           ' → logprob: -1.6310945749282837
    3. ' elif' → logprob: -3.5060946941375732
    4. '	elif' → logprob: -10.006094932556152
    5. '               ' → logprob: -10.131094932556152
    6. '		' → logprob: -10.631094932556152
    7. 'else' → logprob: -10.756094932556152
    8. '.' → logprob: -10.756094932556152
    9. '       ' → logprob: -11.131094932556152
    10. '```' → logprob: -11.756094932556152

Token 1061: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.06675761193037033
    2. ''-' → logprob: -3.3167576789855957
    3. ' ch' → logprob: -3.5667576789855957
    4. ' '-' → logprob: -10.691757202148438
    5. ''ch' → logprob: -11.441757202148438
    6. ' ' → logprob: -11.566757202148438
    7. '-' → logprob: -12.441757202148438
    8. 'self' → logprob: -12.816757202148438
    9. '           ' → logprob: -13.191757202148438
    10. '-ch' → logprob: -13.566757202148438

Token 1062: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.33316484093666077
    2. '==' → logprob: -1.3331648111343384
    3. ' ==' → logprob: -3.958164930343628
    4. '=' → logprob: -7.833164691925049
    5. '='' → logprob: -9.458165168762207
    6. '=="' → logprob: -9.958165168762207
    7. '           ' → logprob: -10.333165168762207
    8. '==
' → logprob: -10.458165168762207
    9. '==-' → logprob: -11.833165168762207
    10. '==='' → logprob: -12.333165168762207

Token 1063: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31326448917388916
    2. ''-' → logprob: -1.3132644891738892
    3. ' '-' → logprob: -13.688264846801758
    4. '"-' → logprob: -14.813264846801758
    5. ' -' → logprob: -14.938264846801758
    6. ' '-'' → logprob: -15.313264846801758
    7. '-
' → logprob: -15.688264846801758
    8. '-'' → logprob: -15.813264846801758
    9. ''' → logprob: -15.938264846801758
    10. '\-' → logprob: -16.313264846801758

Token 1064: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48754510283470154
    2. ':' → logprob: -2.1125450134277344
    3. '':' → logprob: -2.6125450134277344
    4. '':
' → logprob: -2.8625450134277344
    5. '           ' → logprob: -2.9875450134277344
    6. ':
' → logprob: -3.1125450134277344
    7. ''):
' → logprob: -4.487545013427734
    8. ''' → logprob: -4.487545013427734
    9. '=' → logprob: -4.862545013427734
    10. '')' → logprob: -6.112545013427734

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07094922661781311
    2. '           ' → logprob: -2.8209493160247803
    3. ':' → logprob: -5.070949077606201
    4. ':
' → logprob: -7.445949077606201
    5. '	       ' → logprob: -7.570949077606201
    6. '<|end|>' → logprob: -7.695949077606201
    7. ' =' → logprob: -8.44594955444336
    8. '                   ' → logprob: -9.32094955444336
    9. '```' → logprob: -9.44594955444336
    10. '<|end|>' → logprob: -9.57094955444336

Token 1066: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038419945631176233
    2. '           ' → logprob: -5.753841876983643
    3. ' self' → logprob: -8.0038423538208
    4. 'self' (adapté à ' self') → logprob: -9.0038423538208
    5. '(self' → logprob: -10.0038423538208
    6. '            ' → logprob: -10.2538423538208
    7. '	       ' → logprob: -10.8788423538208
    8. '<|end|>' → logprob: -11.1288423538208
    9. '              ' → logprob: -11.2538423538208
    10. '	           ' → logprob: -11.3788423538208

Token 1067: '.consume' (ID: 140765)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.023577721789479256
    2. '.consume' → logprob: -3.7735776901245117
    3. ' consume' → logprob: -8.023577690124512
    4. '   ' → logprob: -13.273577690124512
    5. '.' → logprob: -13.773577690124512
    6. '_cons' → logprob: -14.398577690124512
    7. '```' → logprob: -14.648577690124512
    8. 'def' → logprob: -14.773577690124512
    9. '=' → logprob: -16.148578643798828
    10. ' .' → logprob: -16.773578643798828

Token 1068: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2846153974533081
    2. '()
' → logprob: -1.784615397453308
    3. '()' → logprob: -2.5346155166625977
    4. '           ' → logprob: -8.034615516662598
    5. '
' → logprob: -9.284615516662598
    6. 'self' → logprob: -10.659615516662598
    7. '():
' → logprob: -10.909615516662598
    8. '```' → logprob: -11.409615516662598
    9. '();' → logprob: -11.784615516662598
    10. '()\' → logprob: -11.784615516662598

Token 1069: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013251224299892783
    2. '()' → logprob: -7.3763251304626465
    3. '()
' → logprob: -7.8763251304626465
    4. '           ' → logprob: -9.376324653625488
    5. '```' → logprob: -9.626324653625488
    6. '
' → logprob: -10.376324653625488
    7. '(' → logprob: -10.876324653625488
    8. '(
' → logprob: -11.126324653625488
    9. ':
' → logprob: -11.251324653625488
    10. '<|end|>' → logprob: -11.751324653625488

Token 1070: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.006465129088610411
    2. '               ' → logprob: -5.256464958190918
    3. ' right' → logprob: -6.756464958190918
    4. '           ' → logprob: -10.006464958190918
    5. '	right' → logprob: -11.131464958190918
    6. 'self' → logprob: -13.131464958190918
    7. '.right' → logprob: -13.256464958190918
    8. '[right' → logprob: -13.881464958190918
    9. '(right' → logprob: -14.131464958190918
    10. '                   ' → logprob: -14.256464958190918

Token 1071: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409588098526
    2. '=' → logprob: -0.97409588098526
    3. '=self' → logprob: -11.349096298217773
    4. ')' → logprob: -13.349096298217773
    5. '           ' → logprob: -13.974096298217773
    6. '               ' → logprob: -14.349096298217773
    7. ' ' → logprob: -14.349096298217773
    8. '<|end|>' → logprob: -14.474096298217773
    9. '            ' → logprob: -14.599096298217773
    10. ':' → logprob: -15.099096298217773

Token 1072: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005533903022296727
    2. ' self' → logprob: -7.500553607940674
    3. '           ' → logprob: -16.000553131103516
    4. '(self' → logprob: -16.250553131103516
    5. '               ' → logprob: -16.875553131103516
    6. '[self' → logprob: -17.875553131103516
    7. '<|end|>' → logprob: -18.000553131103516
    8. '	self' → logprob: -18.625553131103516
    9. 'The' → logprob: -19.125553131103516
    10. '                   ' → logprob: -19.375553131103516

Token 1073: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.07889176905155182
    2. 'parse' → logprob: -2.5788917541503906
    3. '.' → logprob: -14.20389175415039
    4. ' parse' → logprob: -14.45389175415039
    5. '(parse' → logprob: -15.07889175415039
    6. '```' → logprob: -15.57889175415039
    7. '	parse' → logprob: -15.95389175415039
    8. '=parse' → logprob: -15.95389175415039
    9. ' .' → logprob: -17.57889175415039
    10. '_parse' → logprob: -17.82889175415039

Token 1074: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.5
    3. 'E' → logprob: -17.75
    4. ')' → logprob: -17.75
    5. '()
' → logprob: -18.25
    6. '(' → logprob: -18.375
    7. '())' → logprob: -18.75
    8. ' T' → logprob: -19.625
    9. '('' → logprob: -20.0
    10. 'F' → logprob: -20.375

Token 1075: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4748608469963074
    2. '()' → logprob: -0.9748608469963074
    3. '               ' → logprob: -7.224860668182373
    4. '()
' → logprob: -10.349861145019531
    5. '           ' → logprob: -10.974861145019531
    6. '()

' → logprob: -12.974861145019531
    7. '():
' → logprob: -14.099861145019531
    8. '       ' → logprob: -14.349861145019531
    9. '()\' → logprob: -14.349861145019531
    10. '                   ' → logprob: -14.974861145019531

Token 1076: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010711929644457996
    2. '
' → logprob: -10.000106811523438
    3. '```' → logprob: -11.125106811523438
    4. 'val' → logprob: -11.375106811523438
    5. '           ' → logprob: -11.750106811523438
    6. '			' → logprob: -12.000106811523438
    7. '              ' → logprob: -12.750106811523438
    8. '                   ' → logprob: -12.875106811523438
    9. '		       ' → logprob: -13.250106811523438
    10. ')' → logprob: -13.250106811523438

Token 1077: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.031760744750499725
    2. ' val' → logprob: -3.5317606925964355
    3. '           ' → logprob: -6.2817606925964355
    4. '               ' → logprob: -8.906761169433594
    5. '	val' → logprob: -13.906761169433594
    6. '                   ' → logprob: -14.906761169433594
    7. '```' → logprob: -14.906761169433594
    8. '            ' → logprob: -15.031761169433594
    9. '.val' → logprob: -15.781761169433594
    10. '_val' → logprob: -15.906761169433594

Token 1078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694627046585083
    2. ' =' → logprob: -2.126946210861206
    3. ' -=' → logprob: -11.126946449279785
    4. '-=' → logprob: -13.126946449279785
    5. '           ' → logprob: -14.751946449279785
    6. '               ' → logprob: -14.876946449279785
    7. '            ' → logprob: -15.376946449279785
    8. '                   ' → logprob: -15.626946449279785
    9. '-' → logprob: -16.37694549560547
    10. '                ' → logprob: -16.50194549560547

Token 1079: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5759409666061401
    2. 'val' → logprob: -0.8259409666061401
    3. '(val' → logprob: -14.20094108581543
    4. '[val' → logprob: -15.20094108581543
    5. '	val' → logprob: -15.32594108581543
    6. '.val' → logprob: -16.20094108581543
    7. '_val' → logprob: -16.70094108581543
    8. ',val' → logprob: -17.20094108581543
    9. '   ' → logprob: -17.57594108581543
    10. ' ' → logprob: -17.57594108581543

Token 1080: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011052302084863186
    2. '-' → logprob: -4.511052131652832
    3. '-val' → logprob: -12.511052131652832
    4. ' val' → logprob: -14.511052131652832
    5. ' ' → logprob: -15.761052131652832
    6. ' ' → logprob: -16.63605308532715
    7. '[val' → logprob: -17.76105308532715
    8. ' -
' → logprob: -17.88605308532715
    9. 'val' → logprob: -18.01105308532715
    10. '[' → logprob: -19.76105308532715

Token 1081: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0040785204619169235
    2. ' right' → logprob: -5.504078388214111
    3. '	right' → logprob: -17.629077911376953
    4. '(right' → logprob: -17.754077911376953
    5. '[right' → logprob: -19.254077911376953
    6. ',right' → logprob: -20.004077911376953
    7. '_right' → logprob: -20.129077911376953
    8. '.right' → logprob: -20.129077911376953
    9. '```' → logprob: -20.254077911376953
    10. '
' → logprob: -20.379077911376953

Token 1082: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012749579036608338
    2. '		' → logprob: -10.000127792358398
    3. 'else' → logprob: -10.500127792358398
    4. 'elif' → logprob: -10.625127792358398
    5. ' else' → logprob: -11.875127792358398
    6. '               ' → logprob: -12.125127792358398
    7. ':
' → logprob: -12.250127792358398
    8. '<|end|>' → logprob: -13.000127792358398
    9. '	       ' → logprob: -13.125127792358398
    10. ' elif' → logprob: -13.375127792358398

Token 1083: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003461905289441347
    2. 'elif' → logprob: -8.625346183776855
    3. 'else' → logprob: -8.875346183776855
    4. '		' → logprob: -11.250346183776855
    5. '               ' → logprob: -11.875346183776855
    6. ' else' → logprob: -13.000346183776855
    7. '       ' → logprob: -13.750346183776855
    8. ' elif' → logprob: -13.875346183776855
    9. '	       ' → logprob: -14.250346183776855
    10. '```' → logprob: -14.500346183776855

Token 1084: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06953853368759155
    2. 'else' (adapté à ' else') → logprob: -3.4445385932922363
    3. ' else' → logprob: -3.8195385932922363
    4. 'elif' → logprob: -4.944538593292236
    5. ' elif' → logprob: -5.819538593292236
    6. ':
' → logprob: -6.569538593292236
    7. '               ' → logprob: -6.694538593292236
    8. ':' → logprob: -8.694538116455078
    9. '       ' → logprob: -8.819538116455078
    10. '   ' → logprob: -9.944538116455078

Token 1085: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1960536390542984
    2. ':' → logprob: -1.8210536241531372
    3. ':
' → logprob: -4.446053504943848
    4. '           ' → logprob: -5.821053504943848
    5. '                   ' → logprob: -7.196053504943848
    6. '                       ' → logprob: -8.446053504943848
    7. '              ' → logprob: -8.946053504943848
    8. 'break' → logprob: -9.321053504943848
    9. ' break' → logprob: -10.071053504943848
    10. ':return' → logprob: -10.446053504943848

Token 1086: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014673690311610699
    2. '           ' → logprob: -6.626467227935791
    3. '                   ' → logprob: -9.87646770477295
    4. 'break' → logprob: -10.62646770477295
    5. '       ' → logprob: -10.87646770477295
    6. '              ' → logprob: -11.50146770477295
    7. '   ' → logprob: -11.87646770477295
    8. '             ' → logprob: -12.12646770477295
    9. ' break' → logprob: -12.62646770477295
    10. '                       ' → logprob: -12.75146770477295

Token 1087: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.09084675461053848
    2. ' break' → logprob: -2.8408467769622803
    3. '           ' → logprob: -3.5908467769622803
    4. '               ' → logprob: -7.715846538543701
    5. 'return' → logprob: -7.840846538543701
    6. '	break' → logprob: -10.59084701538086
    7. '       ' → logprob: -10.96584701538086
    8. ' return' → logprob: -12.34084701538086
    9. '_break' → logprob: -12.96584701538086
    10. '   ' → logprob: -13.71584701538086

Token 1088: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010341462679207325
    2. '           ' → logprob: -5.010341644287109
    3. 'return' → logprob: -6.135341644287109
    4. 'def' → logprob: -7.385341644287109
    5. '   ' → logprob: -7.510341644287109
    6. '               ' → logprob: -9.13534164428711
    7. '
' → logprob: -9.38534164428711
    8. ' return' → logprob: -10.13534164428711
    9. '    
' → logprob: -12.01034164428711
    10. '	' → logprob: -12.01034164428711

Token 1089: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007606151048094034
    2. '           ' → logprob: -5.257606029510498
    3. 'def' → logprob: -6.632606029510498
    4. 'return' → logprob: -7.257606029510498
    5. '   ' → logprob: -8.132606506347656
    6. '               ' → logprob: -11.132606506347656
    7. '
' → logprob: -11.382606506347656
    8. ' return' → logprob: -11.632606506347656
    9. '```' → logprob: -12.507606506347656
    10. '	' → logprob: -12.757606506347656

Token 1090: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33767640590667725
    2. 'return' (adapté à ' return') → logprob: -1.3376764059066772
    3. 'def' → logprob: -3.837676525115967
    4. '   ' → logprob: -6.212676525115967
    5. '
' → logprob: -8.712676048278809
    6. '           ' → logprob: -8.712676048278809
    7. ' return' → logprob: -8.962676048278809
    8. 'val' → logprob: -9.712676048278809
    9. '```' → logprob: -10.712676048278809
    10. '        
' → logprob: -12.087676048278809

Token 1091: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00033558503491804004
    2. ' val' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.500335693359375
    4. '	val' → logprob: -19.375335693359375
    5. ' ' → logprob: -19.750335693359375
    6. '  ' → logprob: -20.125335693359375
    7. '       ' → logprob: -20.625335693359375
    8. '           ' → logprob: -20.875335693359375
    9. '
' → logprob: -21.250335693359375
    10. '    ' → logprob: -21.375335693359375

Token 1092: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4299517869949341
    2. 'def' → logprob: -1.179951786994934
    3. '```' → logprob: -3.4299516677856445
    4. ' def' → logprob: -5.0549516677856445
    5. '
' → logprob: -5.9299516677856445
    6. '	def' → logprob: -7.8049516677856445
    7. '    
' → logprob: -8.679951667785645
    8. '``' → logprob: -9.679951667785645
    9. '<|end|>' → logprob: -10.679951667785645
    10. '        
' → logprob: -10.804951667785645

Token 1093: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06223767623305321
    2. '   ' → logprob: -2.8122377395629883
    3. ' def' → logprob: -8.687237739562988
    4. '```' → logprob: -9.437237739562988
    5. '
' → logprob: -11.312237739562988
    6. '	def' → logprob: -11.937237739562988
    7. '    
' → logprob: -13.687237739562988
    8. ' ' → logprob: -14.187237739562988
    9. '       ' → logprob: -14.312237739562988
    10. '``' → logprob: -16.812236785888672

Token 1094: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015349778113886714
    2. '   ' → logprob: -6.501534938812256
    3. ' def' → logprob: -10.501535415649414
    4. '```' → logprob: -12.501535415649414
    5. '
' → logprob: -14.001535415649414
    6. '	def' → logprob: -14.501535415649414
    7. '    
' → logprob: -15.751535415649414
    8. '       ' → logprob: -18.876535415649414
    9. '        
' → logprob: -19.501535415649414
    10. '``' → logprob: -19.626535415649414

Token 1095: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -5.512236498361744e-07
    2. ' parse' → logprob: -15.125000953674316
    3. '.parse' → logprob: -17.125
    4. 'def' → logprob: -17.125
    5. '(parse' → logprob: -17.25
    6. '=parse' → logprob: -18.25
    7. '
' → logprob: -18.5
    8. '_parse' → logprob: -18.5
    9. 'peek' → logprob: -18.75
    10. '	parse' → logprob: -19.0

Token 1096: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.1472419600977446e-06
    2. 'def' → logprob: -13.875000953674316
    3. ' T' → logprob: -16.500001907348633
    4. '_T' → logprob: -18.000001907348633
    5. '```' → logprob: -19.250001907348633
    6. '`' → logprob: -19.500001907348633
    7. 'Т' → logprob: -19.500001907348633
    8. 'parse' → logprob: -19.625001907348633
    9. 'F' → logprob: -19.625001907348633
    10. '(T' → logprob: -19.875001907348633

Token 1097: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.537868779967539e-06
    2. '       ' → logprob: -12.375008583068848
    3. '   ' → logprob: -12.500008583068848
    4. 'self' → logprob: -15.250008583068848
    5. '(' → logprob: -15.500008583068848
    6. 'def' → logprob: -17.00000762939453
    7. '
' → logprob: -17.25000762939453
    8. '(
' → logprob: -17.37500762939453
    9. ' (' → logprob: -17.62500762939453
    10. '```' → logprob: -18.37500762939453

Token 1098: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015070053050294518
    2. '):
' → logprob: -6.751506805419922
    3. '):' → logprob: -8.626506805419922
    4. '   ' → logprob: -9.626506805419922
    5. 'self' → logprob: -10.001506805419922
    6. '(' → logprob: -11.001506805419922
    7. '       ' → logprob: -11.501506805419922
    8. ')' → logprob: -11.876506805419922
    9. '():
' → logprob: -12.626506805419922
    10. 'def' → logprob: -13.126506805419922

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006320151500403881
    2. 'def' → logprob: -6.006319999694824
    3. '   ' → logprob: -6.256319999694824
    4. '#' → logprob: -6.631319999694824
    5. 'self' → logprob: -7.756319999694824
    6. 'val' → logprob: -8.756319999694824
    7. ' #' → logprob: -12.881319999694824
    8. '           ' → logprob: -13.006319999694824
    9. '
' → logprob: -13.131319999694824
    10. ' def' → logprob: -13.381319999694824

Token 1100: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0464799627661705
    2. '#' (adapté à ' #') → logprob: -3.2964799404144287
    3. '       ' → logprob: -4.796480178833008
    4. '   ' → logprob: -9.046480178833008
    5. ' val' → logprob: -10.921480178833008
    6. 'def' → logprob: -12.421480178833008
    7. ' #' → logprob: -13.546480178833008
    8. '	val' → logprob: -13.546480178833008
    9. 'value' → logprob: -15.046480178833008
    10. '      ' → logprob: -15.171480178833008

Token 1101: ' T' (ID: 353)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00035333906998857856
    2. 'def' → logprob: -8.250353813171387
    3. '#' → logprob: -9.500353813171387
    4. '       ' → logprob: -11.250353813171387
    5. '   ' → logprob: -12.875353813171387
    6. ' val' → logprob: -13.375353813171387
    7. 'F' → logprob: -16.87535285949707
    8. 'value' → logprob: -17.50035285949707
    9. '
' → logprob: -17.87535285949707
    10. '	val' → logprob: -18.12535285949707

Token 1102: ' ::=' (ID: 176636)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2517555356025696
    2. ' =' → logprob: -1.8767554759979248
    3. '=' → logprob: -3.001755475997925
    4. '   ' → logprob: -4.751755714416504
    5. ' def' → logprob: -5.001755714416504
    6. '()' → logprob: -7.251755714416504
    7. '       ' → logprob: -7.251755714416504
    8. ' ::=' → logprob: -7.251755714416504
    9. '():
' → logprob: -7.751755714416504
    10. '=self' → logprob: -8.001755714416504

Token 1103: ' F' (ID: 454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003585840167943388
    2. 'def' → logprob: -8.250358581542969
    3. ' self' → logprob: -9.375358581542969
    4. '   ' → logprob: -11.750358581542969
    5. '       ' → logprob: -13.625358581542969
    6. 'parse' → logprob: -13.875358581542969
    7. '(self' → logprob: -14.000358581542969
    8. 'F' → logprob: -14.250358581542969
    9. '
' → logprob: -14.875358581542969
    10. '	self' → logprob: -15.375358581542969

Token 1104: ' |' (ID: 1022)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.25947701930999756
    2. 'def' → logprob: -2.384477138519287
    3. '       ' → logprob: -2.884477138519287
    4. ' val' → logprob: -3.884477138519287
    5. '()
' → logprob: -4.009477138519287
    6. '   ' → logprob: -4.009477138519287
    7. '
' → logprob: -4.884477138519287
    8. '()' → logprob: -5.134477138519287
    9. ' =' → logprob: -6.509477138519287
    10. '():
' → logprob: -6.509477138519287

Token 1105: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005385064519941807
    2. 'F' → logprob: -5.630384922027588
    3. ' T' → logprob: -6.505384922027588
    4. 'self' → logprob: -8.880385398864746
    5. '   ' → logprob: -9.505385398864746
    6. 'def' → logprob: -10.505385398864746
    7. ' ' → logprob: -11.380385398864746
    8. ' F' → logprob: -11.755385398864746
    9. '#' → logprob: -12.130385398864746
    10. 'parse' → logprob: -12.255385398864746

Token 1106: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04333987832069397
    2. ''*' → logprob: -3.168339967727661
    3. '*
' → logprob: -8.668339729309082
    4. '('*' → logprob: -9.543339729309082
    5. ' *' → logprob: -11.043339729309082
    6. '   ' → logprob: -11.293339729309082
    7. '**' → logprob: -11.418339729309082
    8. ' ' → logprob: -11.918339729309082
    9. ' '*'' → logprob: -11.918339729309082
    10. '`' → logprob: -11.918339729309082

Token 1107: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -2.816093228830141e-06
    2. ' F' → logprob: -12.87500286102295
    3. '*' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.125001907348633
    5. ' ' → logprob: -18.625001907348633
    6. '
' → logprob: -19.000001907348633
    7. '  ' → logprob: -19.125001907348633
    8. 'self' → logprob: -19.125001907348633
    9. '```' → logprob: -19.375001907348633
    10. '`' → logprob: -19.500001907348633

Token 1108: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001995012629777193
    2. 'def' → logprob: -6.876995086669922
    3. '   ' → logprob: -7.876995086669922
    4. 'val' → logprob: -8.126995086669922
    5. '
' → logprob: -9.126995086669922
    6. '```' → logprob: -9.376995086669922
    7. 'while' → logprob: -10.751995086669922
    8. '()
' → logprob: -11.251995086669922
    9. '           ' → logprob: -11.626995086669922
    10. ' val' → logprob: -11.751995086669922

Token 1109: 'left' (ID: 4530)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4781416654586792
    2. 'def' → logprob: -1.1031416654586792
    3. 'while' → logprob: -3.8531417846679688
    4. ' F' → logprob: -4.853141784667969
    5. '
' → logprob: -5.228141784667969
    6. '       ' → logprob: -5.603141784667969
    7. ' def' → logprob: -5.853141784667969
    8. ')' → logprob: -6.228141784667969
    9. 'While' → logprob: -6.603141784667969
    10. '   ' → logprob: -6.603141784667969

Token 1110: ' associative' (ID: 169679)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -0.4783996343612671
    2. '   ' → logprob: -1.978399634361267
    3. 'def' → logprob: -2.8533997535705566
    4. 'assoc' → logprob: -3.1033997535705566
    5. '_ass' → logprob: -3.2283997535705566
    6. '       ' → logprob: -4.228399753570557
    7. ')' → logprob: -4.353399753570557
    8. '=' → logprob: -4.478399753570557
    9. ' associative' → logprob: -4.478399753570557
    10. '_assoc' → logprob: -4.853399753570557

Token 1111: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02583758719265461
    2. 'val' → logprob: -3.9008376598358154
    3. 'def' → logprob: -6.525837421417236
    4. '   ' → logprob: -6.775837421417236
    5. '
' → logprob: -7.150837421417236
    6. 'while' → logprob: -7.650837421417236
    7. '):
' → logprob: -7.775837421417236
    8. ' val' → logprob: -7.900837421417236
    9. ':
' → logprob: -8.650837898254395
    10. ':' → logprob: -8.650837898254395

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31847065687179565
    2. 'val' → logprob: -1.3184707164764404
    3. 'def' → logprob: -5.943470478057861
    4. ' val' → logprob: -6.068470478057861
    5. '   ' → logprob: -8.31847095489502
    6. '	val' → logprob: -12.31847095489502
    7. '```' → logprob: -12.56847095489502
    8. ' def' → logprob: -12.69347095489502
    9. '           ' → logprob: -13.56847095489502
    10. '_val' → logprob: -14.31847095489502

Token 1113: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -5.3596853831550106e-05
    2. '       ' → logprob: -10.000053405761719
    3. ' val' → logprob: -11.875053405761719
    4. 'def' → logprob: -13.750053405761719
    5. '   ' → logprob: -16.87505340576172
    6. '	val' → logprob: -18.00005340576172
    7. 'value' → logprob: -18.87505340576172
    8. '
' → logprob: -20.25005340576172
    9. '           ' → logprob: -20.25005340576172
    10. '_val' → logprob: -20.37505340576172

Token 1114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890598475933075
    2. '=' → logprob: -2.5789060592651367
    3. '       ' → logprob: -11.328906059265137
    4. '   ' → logprob: -13.328906059265137
    5. '=self' → logprob: -13.328906059265137
    6. ' ' → logprob: -14.453906059265137
    7. 'def' → logprob: -15.953906059265137
    8. 'self' → logprob: -16.07890510559082
    9. '           ' → logprob: -17.07890510559082
    10. '  ' → logprob: -17.45390510559082

Token 1115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -12.000007629394531
    3. '       ' → logprob: -14.250007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '(self' → logprob: -17.00000762939453
    6. ' ' → logprob: -17.75000762939453
    7. '	self' → logprob: -18.37500762939453
    8. '           ' → logprob: -18.87500762939453
    9. '[self' → logprob: -18.87500762939453
    10. '  ' → logprob: -19.12500762939453

Token 1116: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.1602337658405304
    2. 'parse' → logprob: -1.910233736038208
    3. ' parse' → logprob: -11.785233497619629
    4. '.' → logprob: -13.785233497619629
    5. '=parse' → logprob: -14.910233497619629
    6. '.consume' → logprob: -15.285233497619629
    7. '	parse' → logprob: -15.660233497619629
    8. '(parse' → logprob: -16.035234451293945
    9. '   ' → logprob: -17.035234451293945
    10. '_parse' → logprob: -17.910234451293945

Token 1117: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: 0.0
    2. ' F' → logprob: -18.25
    3. 'T' → logprob: -19.25
    4. '   ' → logprob: -20.875
    5. '(F' → logprob: -21.25
    6. '	F' → logprob: -21.5
    7. ' ' → logprob: -21.875
    8. 'E' → logprob: -22.875
    9. '_F' → logprob: -22.875
    10. '```' → logprob: -23.125

Token 1118: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.23779363930225372
    2. '()' → logprob: -1.7377936840057373
    3. '       ' → logprob: -3.3627936840057373
    4. 'while' → logprob: -6.862793445587158
    5. 'def' → logprob: -11.112793922424316
    6. '   ' → logprob: -11.987793922424316
    7. '():
' → logprob: -12.362793922424316
    8. '()

' → logprob: -12.612793922424316
    9. '()
' → logprob: -12.987793922424316
    10. '```' → logprob: -13.237793922424316

Token 1119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3154083490371704
    2. 'while' → logprob: -1.3154083490371704
    3. ' while' → logprob: -6.315408229827881
    4. '   ' → logprob: -8.815408706665039
    5. '```' → logprob: -9.440408706665039
    6. '
' → logprob: -10.065408706665039
    7. '	while' → logprob: -10.065408706665039
    8. 'While' → logprob: -11.065408706665039
    9. '``' → logprob: -12.440408706665039
    10. '           ' → logprob: -13.815408706665039

Token 1120: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.009181481786072254
    2. ' while' → logprob: -5.009181499481201
    3. '       ' → logprob: -6.009181499481201
    4. '
' → logprob: -12.759181022644043
    5. '	while' → logprob: -12.884181022644043
    6. '   ' → logprob: -13.634181022644043
    7. 'While' → logprob: -15.134181022644043
    8. '```' → logprob: -18.63418197631836
    9. ' While' → logprob: -19.00918197631836
    10. '           ' → logprob: -19.13418197631836

Token 1121: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08025074750185013
    2. 'True' → logprob: -2.5802507400512695
    3. ' self' → logprob: -6.9552507400512695
    4. ' True' → logprob: -7.8302507400512695
    5. '(self' → logprob: -12.45525074005127
    6. '(True' → logprob: -12.70525074005127
    7. '	self' → logprob: -14.33025074005127
    8. '   ' → logprob: -14.95525074005127
    9. 'true' → logprob: -14.95525074005127
    10. 'Self' → logprob: -16.080251693725586

Token 1122: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025701887905597687
    2. ':' → logprob: -3.7757019996643066
    3. ':
' → logprob: -6.150701999664307
    4. '       ' → logprob: -9.025701522827148
    5. '		' → logprob: -10.275701522827148
    6. '          ' → logprob: -10.275701522827148
    7. '   ' → logprob: -10.650701522827148
    8. '	       ' → logprob: -11.025701522827148
    9. '<|end|>' → logprob: -11.275701522827148
    10. ' if' → logprob: -11.650701522827148

Token 1123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005471024662256241
    2. 'ch' → logprob: -5.255471229553223
    3. '       ' → logprob: -8.880471229553223
    4. '   ' → logprob: -9.880471229553223
    5. ' ch' → logprob: -10.380471229553223
    6. '```' → logprob: -12.130471229553223
    7. '_ch' → logprob: -12.630471229553223
    8. '	ch' → logprob: -13.130471229553223
    9. '               ' → logprob: -13.505471229553223
    10. '		' → logprob: -14.005471229553223

Token 1124: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.03873061388731003
    2. '           ' → logprob: -3.2887306213378906
    3. ' ch' → logprob: -7.288730621337891
    4. '	ch' → logprob: -12.53873062133789
    5. '_ch' → logprob: -14.28873062133789
    6. '   ' → logprob: -14.66373062133789
    7. '               ' → logprob: -15.16373062133789
    8. 'if' → logprob: -15.53873062133789
    9. '(ch' → logprob: -15.66373062133789
    10. '       ' → logprob: -15.66373062133789

Token 1125: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.136659637093544
    2. '=='' → logprob: -2.761659622192383
    3. ' ==' → logprob: -3.136659622192383
    4. '           ' → logprob: -4.511659622192383
    5. '=' → logprob: -5.386659622192383
    6. '=self' → logprob: -6.011659622192383
    7. '()==' → logprob: -6.636659622192383
    8. '==
' → logprob: -7.261659622192383
    9. ' =' → logprob: -7.886659622192383
    10. ')==' → logprob: -8.761659622192383

Token 1126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007952123996801674
    2. ' self' → logprob: -7.250795364379883
    3. '           ' → logprob: -9.375795364379883
    4. '(self' → logprob: -14.625795364379883
    5. '               ' → logprob: -17.500795364379883
    6. '`' → logprob: -18.125795364379883
    7. '   ' → logprob: -18.125795364379883
    8. '=self' → logprob: -18.125795364379883
    9. 'if' → logprob: -18.375795364379883
    10. ' ' → logprob: -18.375795364379883

Token 1127: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.004088493529707193
    2. '.consume' → logprob: -5.504088401794434
    3. 'peek' → logprob: -12.129088401794434
    4. '.' → logprob: -12.879088401794434
    5. ' .' → logprob: -13.879088401794434
    6. '.parse' → logprob: -14.504088401794434
    7. '.pe' → logprob: -15.004088401794434
    8. '.poll' → logprob: -16.25408935546875
    9. '.pick' → logprob: -17.25408935546875
    10. '.take' → logprob: -17.50408935546875

Token 1128: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6143543124198914
    2. '=='' → logprob: -1.7393543720245361
    3. '()==' → logprob: -1.8643543720245361
    4. '()
' → logprob: -2.614354372024536
    5. '==' → logprob: -3.614354372024536
    6. '           ' → logprob: -3.864354372024536
    7. ' ==' → logprob: -5.489354133605957
    8. '==
' → logprob: -6.239354133605957
    9. '       ' → logprob: -7.864354133605957
    10. '()='' → logprob: -8.864354133605957

Token 1129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00389484572224319
    2. ' ==' → logprob: -6.253894805908203
    3. '==' → logprob: -6.378894805908203
    4. '=='' → logprob: -8.753894805908203
    5. ':
' → logprob: -10.503894805908203
    6. '==
' → logprob: -10.878894805908203
    7. '```' → logprob: -11.128894805908203
    8. '()' → logprob: -11.128894805908203
    9. 'if' → logprob: -11.753894805908203
    10. ' if' → logprob: -12.503894805908203

Token 1130: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19605481624603271
    2. 'if' (adapté à ' if') → logprob: -2.1960549354553223
    3. '==' → logprob: -3.1960549354553223
    4. ' ==' → logprob: -4.071054935455322
    5. '=='' → logprob: -5.071054935455322
    6. ' if' → logprob: -6.446054935455322
    7. '==
' → logprob: -7.196054935455322
    8. 'self' → logprob: -9.571054458618164
    9. '               ' → logprob: -11.196054458618164
    10. '```' → logprob: -11.321054458618164

Token 1131: ' ch' (ID: 549)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.04950583726167679
    2. 'ch' → logprob: -3.0495059490203857
    3. ' ch' → logprob: -7.674505710601807
    4. ' '*' → logprob: -7.924505710601807
    5. 'self' → logprob: -9.674506187438965
    6. ' '*'' → logprob: -11.924506187438965
    7. '"*' → logprob: -12.174506187438965
    8. '==' → logprob: -12.299506187438965
    9. ' ' → logprob: -13.049506187438965
    10. ''ch' → logprob: -13.174506187438965

Token 1132: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0002868417650461197
    2. '==' → logprob: -8.250287055969238
    3. ' ==' → logprob: -10.750287055969238
    4. '=="' → logprob: -12.750287055969238
    5. '='' → logprob: -14.375287055969238
    6. '==
' → logprob: -14.500287055969238
    7. '==='' → logprob: -17.000286102294922
    8. ')=='' → logprob: -17.500286102294922
    9. ']=='' → logprob: -18.250286102294922
    10. '=' → logprob: -18.375286102294922

Token 1133: '*' (ID: 9)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0019297054968774319
    2. '*' → logprob: -6.251929759979248
    3. '"*' → logprob: -14.12692928314209
    4. ''' → logprob: -15.75192928314209
    5. ' '*'' → logprob: -15.87692928314209
    6. ' '*' → logprob: -16.001930236816406
    7. '('*' → logprob: -17.626930236816406
    8. '*
' → logprob: -19.001930236816406
    9. '*:' → logprob: -19.376930236816406
    10. '''' → logprob: -20.001930236816406

Token 1134: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.02866126038134098
    2. '               ' → logprob: -4.278661251068115
    3. '':' → logprob: -4.903661251068115
    4. '           ' → logprob: -5.778661251068115
    5. ':
' → logprob: -6.903661251068115
    6. ''' → logprob: -7.153661251068115
    7. ''*' → logprob: -7.528661251068115
    8. ''):
' → logprob: -8.028661727905273
    9. '*' → logprob: -8.028661727905273
    10. '():
' → logprob: -8.153661727905273

Token 1135: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.582422137260437
    2. '           ' → logprob: -0.832422137260437
    3. 'self' → logprob: -5.082422256469727
    4. '(self' → logprob: -9.332422256469727
    5. ' self' → logprob: -9.957422256469727
    6. '       ' → logprob: -10.707422256469727
    7. '```' → logprob: -10.832422256469727
    8. '   ' → logprob: -11.582422256469727
    9. '=self' → logprob: -11.707422256469727
    10. 'def' → logprob: -11.832422256469727

Token 1136: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4457111954689026
    2. 'self' (adapté à ' self') → logprob: -1.0707111358642578
    3. ' self' → logprob: -4.570711135864258
    4. '           ' → logprob: -5.070711135864258
    5. '   ' → logprob: -9.320711135864258
    6. '(self' → logprob: -10.070711135864258
    7. '                   ' → logprob: -10.820711135864258
    8. '       ' → logprob: -11.195711135864258
    9. ' ' → logprob: -11.445711135864258
    10. '[self' → logprob: -11.445711135864258

Token 1137: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.6932002305984497
    2. 'consume' → logprob: -0.6932002305984497
    3. '.' → logprob: -9.94320011138916
    4. ' consume' → logprob: -12.44320011138916
    5. 'def' → logprob: -14.94320011138916
    6. '   ' → logprob: -15.19320011138916
    7. '```' → logprob: -15.56820011138916
    8. ' .' → logprob: -15.81820011138916
    9. '
' → logprob: -16.693201065063477
    10. 'cons' → logprob: -16.693201065063477

Token 1138: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.28429466485977173
    2. '()' → logprob: -1.784294605255127
    3. '               ' → logprob: -2.534294605255127
    4. '           ' → logprob: -9.409295082092285
    5. '                   ' → logprob: -9.409295082092285
    6. '              ' → logprob: -11.534295082092285
    7. '()
' → logprob: -11.784295082092285
    8. '
' → logprob: -12.159295082092285
    9. '()

' → logprob: -12.284295082092285
    10. ')
' → logprob: -12.409295082092285

Token 1139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027493613306432962
    2. '()' → logprob: -6.502749443054199
    3. '()
' → logprob: -7.377749443054199
    4. '
' → logprob: -8.2527494430542
    5. '           ' → logprob: -8.5027494430542
    6. 'def' → logprob: -9.1277494430542
    7. 'val' → logprob: -11.6277494430542
    8. '                
' → logprob: -11.6277494430542
    9. '```' → logprob: -11.7527494430542
    10. '                   ' → logprob: -12.7527494430542

Token 1140: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -1.2664456789934775e-06
    2. ' right' → logprob: -13.750000953674316
    3. 'rhs' → logprob: -16.625001907348633
    4. 'val' → logprob: -17.875001907348633
    5. '	right' → logprob: -18.750001907348633
    6. '           ' → logprob: -19.750001907348633
    7. '       ' → logprob: -20.000001907348633
    8. 'next' → logprob: -20.625001907348633
    9. '               ' → logprob: -20.750001907348633
    10. '.right' → logprob: -21.125001907348633

Token 1141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141461491584778
    2. '=' → logprob: -1.7014145851135254
    3. '=self' → logprob: -13.576415061950684
    4. '   ' → logprob: -18.076414108276367
    5. ' ' → logprob: -18.076414108276367
    6. '=
' → logprob: -18.826414108276367
    7. '           ' → logprob: -19.076414108276367
    8. 'val' → logprob: -19.576414108276367
    9. '＝' → logprob: -19.576414108276367
    10. 'self' → logprob: -19.826414108276367

Token 1142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.008129963040119e-06
    2. ' self' → logprob: -12.500003814697266
    3. '(self' → logprob: -15.500003814697266
    4. '[self' → logprob: -18.500003814697266
    5. '	self' → logprob: -19.250003814697266
    6. '           ' → logprob: -19.625003814697266
    7. '       ' → logprob: -19.875003814697266
    8. '=self' → logprob: -20.625003814697266
    9. '<|end|>' → logprob: -21.250003814697266
    10. 'Self' → logprob: -21.250003814697266

Token 1143: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00012356207298580557
    2. 'parse' → logprob: -9.000123977661133
    3. '.' → logprob: -15.625123977661133
    4. '=parse' → logprob: -17.875123977661133
    5. '	parse' → logprob: -19.000123977661133
    6. '_parse' → logprob: -19.750123977661133
    7. ' parse' → logprob: -19.875123977661133
    8. '```' → logprob: -20.250123977661133
    9. ' .' → logprob: -20.750123977661133
    10. '(parse' → logprob: -20.750123977661133

Token 1144: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -3.128163257315464e-07
    2. 'T' → logprob: -15.375
    3. ' F' → logprob: -18.75
    4. '(F' → logprob: -19.25
    5. ')' → logprob: -20.0
    6. '   ' → logprob: -20.5
    7. '	F' → logprob: -21.125
    8. '_F' → logprob: -21.125
    9. '(' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 1145: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5768813490867615
    2. '()
' → logprob: -1.0768814086914062
    3. '               ' → logprob: -2.3268814086914062
    4. '           ' → logprob: -9.951881408691406
    5. '()
' → logprob: -11.326881408691406
    6. '                   ' → logprob: -11.451881408691406
    7. '       ' → logprob: -12.201881408691406
    8. ')' → logprob: -12.451881408691406
    9. '
' → logprob: -12.826881408691406
    10. '()

' → logprob: -12.951881408691406

Token 1146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012964237248525023
    2. 'val' → logprob: -6.876296520233154
    3. '
' → logprob: -8.501296043395996
    4. '                   ' → logprob: -10.876296043395996
    5. '           ' → logprob: -10.876296043395996
    6. '                
' → logprob: -12.001296043395996
    7. '```' → logprob: -12.626296043395996
    8. '			' → logprob: -12.751296043395996
    9. '              ' → logprob: -13.001296043395996
    10. ' val' → logprob: -13.126296043395996

Token 1147: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -1.7432603272027336e-06
    2. ' val' → logprob: -13.500001907348633
    3. '           ' → logprob: -15.500001907348633
    4. '               ' → logprob: -15.875001907348633
    5. '                   ' → logprob: -19.875001907348633
    6. '	val' → logprob: -20.750001907348633
    7. '_val' → logprob: -22.500001907348633
    8. '   ' → logprob: -22.750001907348633
    9. '.val' → logprob: -22.750001907348633
    10. '```' → logprob: -23.250001907348633

Token 1148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133123219013214
    2. ' =' → logprob: -1.313312292098999
    3. '*=' → logprob: -10.313312530517578
    4. ' *=' → logprob: -11.063312530517578
    5. '           ' → logprob: -13.938312530517578
    6. '   ' → logprob: -14.313312530517578
    7. '               ' → logprob: -16.813312530517578
    8. ' ' → logprob: -16.938312530517578
    9. '                   ' → logprob: -16.938312530517578
    10. '            ' → logprob: -17.813312530517578

Token 1149: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0028062984347343445
    2. ' val' → logprob: -5.877806186676025
    3. '   ' → logprob: -14.252806663513184
    4. '(val' → logprob: -15.252806663513184
    5. ' ' → logprob: -15.627806663513184
    6. '           ' → logprob: -15.752806663513184
    7. '  ' → logprob: -16.627805709838867
    8. '	val' → logprob: -16.752805709838867
    9. '[val' → logprob: -17.877805709838867
    10. '       ' → logprob: -17.877805709838867

Token 1150: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2521143853664398
    2. ' *' → logprob: -1.5021144151687622
    3. 'val' → logprob: -8.877114295959473
    4. ' val' → logprob: -10.002114295959473
    5. ' ' → logprob: -15.377114295959473
    6. '[val' → logprob: -16.62711524963379
    7. '*=' → logprob: -17.37711524963379
    8. '_val' → logprob: -17.87711524963379
    9. '(val' → logprob: -18.12711524963379
    10. '```' → logprob: -18.12711524963379

Token 1151: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -9.615255839889869e-05
    2. ' right' → logprob: -9.250096321105957
    3. '(right' → logprob: -18.62509536743164
    4. '               ' → logprob: -19.12509536743164
    5. '	right' → logprob: -20.37509536743164
    6. '           ' → logprob: -20.75009536743164
    7. '                   ' → logprob: -21.00009536743164
    8. ' ' → logprob: -21.50009536743164
    9. '.right' → logprob: -21.62509536743164
    10. '[right' → logprob: -21.75009536743164

Token 1152: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002514455991331488
    2. '		' → logprob: -8.750251770019531
    3. '<|end|>' → logprob: -10.000251770019531
    4. '<|end|>' → logprob: -10.375251770019531
    5. '	       ' → logprob: -12.125251770019531
    6. '       ' → logprob: -13.125251770019531
    7. '          ' → logprob: -13.375251770019531
    8. '               ' → logprob: -13.375251770019531
    9. '
' → logprob: -14.000251770019531
    10. 'elif' → logprob: -14.625251770019531

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.729906196298543e-06
    2. 'else' → logprob: -12.500009536743164
    3. 'return' → logprob: -13.000009536743164
    4. '		' → logprob: -13.375009536743164
    5. '```' → logprob: -14.125009536743164
    6. '       ' → logprob: -14.500009536743164
    7. '               ' → logprob: -15.000009536743164
    8. 'elif' → logprob: -15.125009536743164
    9. '   ' → logprob: -16.125009536743164
    10. '<|end|>' → logprob: -16.625009536743164

Token 1154: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017839411739259958
    2. 'else' (adapté à ' else') → logprob: -6.626783847808838
    3. 'elif' → logprob: -7.751783847808838
    4. ' else' → logprob: -11.501784324645996
    5. '		' → logprob: -11.751784324645996
    6. '
' → logprob: -12.501784324645996
    7. ' elif' → logprob: -13.376784324645996
    8. '	       ' → logprob: -13.751784324645996
    9. '       ' → logprob: -13.876784324645996
    10. '          ' → logprob: -14.626784324645996

Token 1155: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02572571113705635
    2. ':' → logprob: -3.7757256031036377
    3. ':
' → logprob: -6.150725841522217
    4. '           ' → logprob: -8.275725364685059
    5. '              ' → logprob: -9.775725364685059
    6. 'break' → logprob: -12.275725364685059
    7. '                ' → logprob: -12.400725364685059
    8. '                   ' → logprob: -12.400725364685059
    9. '			' → logprob: -12.650725364685059
    10. '             ' → logprob: -13.025725364685059

Token 1156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037037418223917484
    2. 'break' → logprob: -8.125370025634766
    3. '           ' → logprob: -9.750370025634766
    4. '              ' → logprob: -11.625370025634766
    5. '                   ' → logprob: -13.875370025634766
    6. '			' → logprob: -14.000370025634766
    7. ':
' → logprob: -14.125370025634766
    8. ':' → logprob: -14.125370025634766
    9. '{
' → logprob: -14.500370025634766
    10. '	break' → logprob: -14.625370025634766

Token 1157: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.025136714801192284
    2. '               ' → logprob: -4.275136947631836
    3. ' break' → logprob: -4.525136947631836
    4. '           ' → logprob: -9.525136947631836
    5. '	break' → logprob: -12.525136947631836
    6. '                   ' → logprob: -13.775136947631836
    7. 'return' → logprob: -14.150136947631836
    8. '             ' → logprob: -14.525136947631836
    9. '              ' → logprob: -15.400136947631836
    10. '   ' → logprob: -15.650136947631836

Token 1158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037232418544590473
    2. 'return' → logprob: -5.62872314453125
    3. ' return' → logprob: -10.12872314453125
    4. '   ' → logprob: -10.12872314453125
    5. '```' → logprob: -11.12872314453125
    6. '
' → logprob: -11.75372314453125
    7. '           ' → logprob: -11.75372314453125
    8. 'def' → logprob: -12.00372314453125
    9. '	return' → logprob: -13.25372314453125
    10. ')return' → logprob: -14.00372314453125

Token 1159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013077369658276439
    2. '   ' → logprob: -7.876307964324951
    3. '           ' → logprob: -7.876307964324951
    4. 'def' → logprob: -7.876307964324951
    5. 'return' → logprob: -9.001307487487793
    6. '
' → logprob: -10.751307487487793
    7. '               ' → logprob: -11.501307487487793
    8. ' return' → logprob: -12.626307487487793
    9. '```' → logprob: -12.876307487487793
    10. '      ' → logprob: -13.751307487487793

Token 1160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3968929052352905
    2. '       ' → logprob: -1.1468929052352905
    3. 'def' → logprob: -5.02189302444458
    4. ' return' → logprob: -6.02189302444458
    5. '   ' → logprob: -7.64689302444458
    6. '           ' → logprob: -8.521892547607422
    7. 'val' → logprob: -8.896892547607422
    8. '
' → logprob: -9.896892547607422
    9. '	return' → logprob: -10.521892547607422
    10. '```' → logprob: -10.771892547607422

Token 1161: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0024756586644798517
    2. ' val' → logprob: -6.002475738525391
    3. '	val' → logprob: -18.87747573852539
    4. '   ' → logprob: -19.62747573852539
    5. '(val' → logprob: -20.37747573852539
    6. '[val' → logprob: -21.12747573852539
    7. ' ' → logprob: -21.25247573852539
    8. 'valu' → logprob: -21.50247573852539
    9. '_val' → logprob: -21.50247573852539
    10. 'v' → logprob: -21.87747573852539

Token 1162: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26588425040245056
    2. '
' → logprob: -1.640884280204773
    3. 'def' → logprob: -3.6408841609954834
    4. '```' → logprob: -4.3908843994140625
    5. '    
' → logprob: -7.1408843994140625
    6. ' def' → logprob: -8.640884399414062
    7. '        
' → logprob: -10.515884399414062
    8. '	def' → logprob: -11.015884399414062
    9. '``' → logprob: -11.140884399414062
    10. '
' → logprob: -12.765884399414062

Token 1163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30083268880844116
    2. 'def' → logprob: -1.550832748413086
    3. '```' → logprob: -3.050832748413086
    4. '
' → logprob: -7.925832748413086
    5. ' def' → logprob: -10.300832748413086
    6. '``' → logprob: -11.925832748413086
    7. '    
' → logprob: -12.800832748413086
    8. '	def' → logprob: -13.300832748413086
    9. '`' → logprob: -14.675832748413086
    10. '>' → logprob: -15.300832748413086

Token 1164: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13166828453540802
    2. '   ' → logprob: -2.1316683292388916
    3. '```' → logprob: -5.3816680908203125
    4. ' def' → logprob: -9.006668090820312
    5. '
' → logprob: -12.756668090820312
    6. '``' → logprob: -13.256668090820312
    7. '	def' → logprob: -13.506668090820312
    8. '       ' → logprob: -16.756668090820312
    9. '    
' → logprob: -16.756668090820312
    10. '  ' → logprob: -17.631668090820312

Token 1165: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0002930366899818182
    2. 'def' → logprob: -8.250292778015137
    3. ' parse' → logprob: -10.375292778015137
    4. '.parse' → logprob: -15.500292778015137
    5. '(parse' → logprob: -15.875292778015137
    6. 'define' → logprob: -17.000293731689453
    7. '```' → logprob: -17.375293731689453
    8. '=parse' → logprob: -17.375293731689453
    9. '_parse' → logprob: -17.500293731689453
    10. ' def' → logprob: -17.625293731689453

Token 1166: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: 0.0
    2. 'def' → logprob: -17.25
    3. ' F' → logprob: -19.5
    4. 'N' → logprob: -21.375
    5. '_F' → logprob: -21.75
    6. 'f' → logprob: -21.875
    7. '(F' → logprob: -22.0
    8. 'Ｆ' → logprob: -23.0
    9. 'self' → logprob: -23.375
    10. '   ' → logprob: -23.75

Token 1167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.869017852295656e-06
    2. '   ' → logprob: -12.125006675720215
    3. '(' → logprob: -14.375006675720215
    4. '       ' → logprob: -14.875006675720215
    5. 'def' → logprob: -15.125006675720215
    6. 'self' → logprob: -16.25000762939453
    7. '```' → logprob: -16.75000762939453
    8. '(
' → logprob: -17.12500762939453
    9. ' (' → logprob: -17.87500762939453
    10. '
' → logprob: -19.00000762939453

Token 1168: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.625007629394531
    3. '   ' → logprob: -12.750007629394531
    4. 'def' → logprob: -13.875007629394531
    5. 'self' → logprob: -15.000007629394531
    6. '       ' → logprob: -16.25000762939453
    7. '(
' → logprob: -16.87500762939453
    8. '```' → logprob: -17.12500762939453
    9. ' (' → logprob: -17.25000762939453
    10. '):
' → logprob: -18.00000762939453

Token 1169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020282079931348562
    2. 'def' → logprob: -6.627027988433838
    3. '   ' → logprob: -7.627027988433838
    4. 'ch' → logprob: -8.877028465270996
    5. 'if' → logprob: -9.752028465270996
    6. '```' → logprob: -11.877028465270996
    7. 'self' → logprob: -12.002028465270996
    8. '
' → logprob: -14.252028465270996
    9. '#' → logprob: -14.377028465270996
    10. '           ' → logprob: -14.502028465270996

Token 1170: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00020377879263833165
    2. '       ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.25020408630371
    4. 'def' → logprob: -16.75020408630371
    5. '	ch' → logprob: -16.87520408630371
    6. ' ch' → logprob: -17.00020408630371
    7. 'if' → logprob: -17.25020408630371
    8. '(ch' → logprob: -18.37520408630371
    9. '_ch' → logprob: -19.62520408630371
    10. 'c' → logprob: -19.62520408630371

Token 1171: ' F' (ID: 454)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.003473913297057152
    2. 'def' → logprob: -5.75347375869751
    3. '   ' → logprob: -8.753474235534668
    4. 'if' → logprob: -9.753474235534668
    5. '       ' → logprob: -9.753474235534668
    6. ' ch' → logprob: -11.378474235534668
    7. '(ch' → logprob: -13.378474235534668
    8. '#' → logprob: -13.628474235534668
    9. 'If' → logprob: -13.878474235534668
    10. '
' → logprob: -13.878474235534668

Token 1172: ' ::=' (ID: 176636)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07615494728088379
    2. '   ' → logprob: -3.701154947280884
    3. '       ' → logprob: -3.701154947280884
    4. ' =' → logprob: -4.451154708862305
    5. ' def' → logprob: -5.076154708862305
    6. '(self' → logprob: -6.451154708862305
    7. '():' → logprob: -6.826154708862305
    8. ':' → logprob: -6.826154708862305
    9. '=' → logprob: -7.076154708862305
    10. '():
' → logprob: -7.326154708862305

Token 1173: ' N' (ID: 478)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5535600185394287
    2. 'self' → logprob: -1.9285600185394287
    3. ''-' → logprob: -2.0535600185394287
    4. 'def' → logprob: -2.1785600185394287
    5. '   ' → logprob: -4.803560256958008
    6. 'ch' → logprob: -5.178560256958008
    7. '('-' → logprob: -5.303560256958008
    8. 'N' → logprob: -5.428560256958008
    9. '       ' → logprob: -5.428560256958008
    10. ' if' → logprob: -6.178560256958008

Token 1174: ' |' (ID: 1022)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5142080187797546
    2. '       ' → logprob: -1.2642080783843994
    3. 'if' → logprob: -2.8892080783843994
    4. '   ' → logprob: -3.0142080783843994
    5. '
' → logprob: -4.76420783996582
    6. 'ch' → logprob: -5.88920783996582
    7. ' if' → logprob: -6.26420783996582
    8. ' def' → logprob: -7.26420783996582
    9. '```' → logprob: -7.38920783996582
    10. 'If' → logprob: -9.63920783996582

Token 1175: ' -' (ID: 533)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.40625429153442383
    2. '-' → logprob: -1.7812542915344238
    3. 'def' → logprob: -3.031254291534424
    4. '('-' → logprob: -3.906254291534424
    5. ' def' → logprob: -4.031254291534424
    6. ' '-'' → logprob: -4.281254291534424
    7. 'ch' → logprob: -4.281254291534424
    8. 'self' → logprob: -4.406254291534424
    9. ' -' → logprob: -4.656254291534424
    10. '   ' → logprob: -4.906254291534424

Token 1176: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -4.7159857786027715e-05
    2. 'self' → logprob: -10.000046730041504
    3. ' F' → logprob: -13.750046730041504
    4. '   ' → logprob: -15.500046730041504
    5. '
' → logprob: -15.875046730041504
    6. '(self' → logprob: -16.00004768371582
    7. ' self' → logprob: -16.37504768371582
    8. 'def' → logprob: -17.75004768371582
    9. '       ' → logprob: -17.87504768371582
    10. 'f' → logprob: -18.00004768371582

Token 1177: ' |' (ID: 1022)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08071842789649963
    2. '
' → logprob: -2.580718517303467
    3. '        
' → logprob: -7.955718517303467
    4. '   ' → logprob: -8.080718040466309
    5. '\n' → logprob: -8.330718040466309
    6. '           ' → logprob: -8.455718040466309
    7. 'def' → logprob: -9.080718040466309
    8. '  
' → logprob: -9.330718040466309
    9. '\' → logprob: -9.580718040466309
    10. '```' → logprob: -9.705718040466309

Token 1178: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012596374144777656
    2. ''' → logprob: -7.001259803771973
    3. ' (' → logprob: -8.251259803771973
    4. '('' → logprob: -10.376259803771973
    5. '(
' → logprob: -10.876259803771973
    6. '(F' → logprob: -10.876259803771973
    7. '\(' → logprob: -12.001259803771973
    8. '   ' → logprob: -13.001259803771973
    9. '(self' → logprob: -13.376259803771973
    10. ''(' → logprob: -13.501259803771973

Token 1179: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0017281336477026343
    2. 'self' → logprob: -6.376728057861328
    3. '
' → logprob: -11.376728057861328
    4. ')' → logprob: -12.001728057861328
    5. ' E' → logprob: -13.126728057861328
    6. '   ' → logprob: -13.626728057861328
    7. ''E' → logprob: -13.626728057861328
    8. 'def' → logprob: -14.001728057861328
    9. '\E' → logprob: -14.501728057861328
    10. ' self' → logprob: -14.751728057861328

Token 1180: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31731128692626953
    2. ')' → logprob: -1.3173112869262695
    3. '):
' → logprob: -5.9423112869262695
    4. '       ' → logprob: -7.3173112869262695
    5. ')'
' → logprob: -8.81731128692627
    6. ')`
' → logprob: -8.81731128692627
    7. '):' → logprob: -8.94231128692627
    8. '   ' → logprob: -9.19231128692627
    9. ')
' → logprob: -9.56731128692627
    10. ')\' → logprob: -10.19231128692627

Token 1181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007253892254084349
    2. 'def' → logprob: -5.257254123687744
    3. '   ' → logprob: -6.382254123687744
    4. 'ch' → logprob: -8.132253646850586
    5. 'if' → logprob: -10.882253646850586
    6. '```' → logprob: -12.007253646850586
    7. '
' → logprob: -12.882253646850586
    8. ' def' → logprob: -13.882253646850586
    9. '	' → logprob: -14.132253646850586
    10. '           ' → logprob: -14.257253646850586

Token 1182: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.00020509003661572933
    2. '       ' → logprob: -8.500205039978027
    3. 'def' → logprob: -14.250205039978027
    4. 'if' → logprob: -14.875205039978027
    5. ' ch' → logprob: -15.125205039978027
    6. '   ' → logprob: -15.125205039978027
    7. '	ch' → logprob: -16.375205993652344
    8. 'c' → logprob: -17.250205993652344
    9. '```' → logprob: -18.500205993652344
    10. '(ch' → logprob: -18.750205993652344

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31332018971443176
    2. ' =' → logprob: -1.3133201599121094
    3. '=self' → logprob: -9.93832015991211
    4. '       ' → logprob: -12.06332015991211
    5. '   ' → logprob: -12.93832015991211
    6. 'self' → logprob: -14.31332015991211
    7. ' ' → logprob: -14.68832015991211
    8. '           ' → logprob: -15.06332015991211
    9. 'def' → logprob: -15.18832015991211
    10. '	' → logprob: -16.31332015991211

Token 1184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. '(self' → logprob: -17.12747573852539
    4. '       ' → logprob: -17.25247573852539
    5. ' ' → logprob: -18.25247573852539
    6. '   ' → logprob: -18.75247573852539
    7. '	self' → logprob: -19.62747573852539
    8. '=self' → logprob: -20.12747573852539
    9. '[self' → logprob: -20.75247573852539
    10. 'None' → logprob: -20.87747573852539

Token 1185: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.005864682607352734
    2. 'peek' → logprob: -5.25586462020874
    3. '.consume' → logprob: -7.38086462020874
    4. '.' → logprob: -12.630865097045898
    5. '.s' → logprob: -13.255865097045898
    6. 'consume' → logprob: -13.880865097045898
    7. '   ' → logprob: -14.380865097045898
    8. ' peek' → logprob: -14.630865097045898
    9. 's' → logprob: -15.255865097045898
    10. ' .' → logprob: -15.880865097045898

Token 1186: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028429143130779266
    2. 'if' → logprob: -6.127842903137207
    3. ' if' → logprob: -7.752842903137207
    4. '()' → logprob: -8.752842903137207
    5. '   ' → logprob: -10.752842903137207
    6. '	' → logprob: -12.127842903137207
    7. '<|end|>' → logprob: -12.252842903137207
    8. '=' → logprob: -12.502842903137207
    9. '	if' → logprob: -12.627842903137207
    10. ':' → logprob: -12.627842903137207

Token 1187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10131368786096573
    2. 'if' → logprob: -2.351313591003418
    3. ' if' → logprob: -6.851313591003418
    4. '	' → logprob: -10.601313591003418
    5. '	if' → logprob: -10.851313591003418
    6. '   ' → logprob: -12.851313591003418
    7. 'If' → logprob: -14.601313591003418
    8. 'def' → logprob: -14.726313591003418
    9. '```' → logprob: -15.226313591003418
    10. '           ' → logprob: -15.726313591003418

Token 1188: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.662937372922897e-05
    2. '       ' → logprob: -9.500096321105957
    3. ' if' → logprob: -10.750096321105957
    4. '   ' → logprob: -16.125097274780273
    5. '	if' → logprob: -16.125097274780273
    6. 'self' → logprob: -17.750097274780273
    7. '```' → logprob: -17.875097274780273
    8. 'If' → logprob: -18.375097274780273
    9. 'i' → logprob: -19.625097274780273
    10. '           ' → logprob: -20.625097274780273

Token 1189: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.009760810062289238
    2. ' ch' → logprob: -4.634760856628418
    3. '(ch' → logprob: -13.509760856628418
    4. '	ch' → logprob: -13.759760856628418
    5. '   ' → logprob: -14.009760856628418
    6. ' ' → logprob: -14.509760856628418
    7. ''ch' → logprob: -14.509760856628418
    8. '  ' → logprob: -15.509760856628418
    9. '-ch' → logprob: -15.884760856628418
    10. '_ch' → logprob: -16.6347599029541

Token 1190: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.1726798564195633
    2. '==' → logprob: -2.422679901123047
    3. ' ==' → logprob: -2.672679901123047
    4. ' =='' → logprob: -8.422679901123047
    5. '=="' → logprob: -8.547679901123047
    6. ' is' → logprob: -8.547679901123047
    7. 'is' → logprob: -8.922679901123047
    8. '==-' → logprob: -9.797679901123047
    9. '==='' → logprob: -10.797679901123047
    10. '=' → logprob: -12.047679901123047

Token 1191: '-' (ID: 12)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.06703834980726242
    2. ''' → logprob: -2.8170382976531982
    3. '-' → logprob: -5.317038536071777
    4. '0' → logprob: -9.442038536071777
    5. '('-' → logprob: -10.067038536071777
    6. '(' → logprob: -11.192038536071777
    7. ''n' → logprob: -12.692038536071777
    8. '-'' → logprob: -12.817038536071777
    9. ''N' → logprob: -13.067038536071777
    10. '('' → logprob: -13.317038536071777

Token 1192: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16898025572299957
    2. ':' → logprob: -2.418980360031128
    3. '':
' → logprob: -3.168980360031128
    4. '':' → logprob: -3.918980360031128
    5. '           ' → logprob: -6.293980121612549
    6. '):
' → logprob: -6.918980121612549
    7. ''):
' → logprob: -7.043980121612549
    8. '       ' → logprob: -7.543980121612549
    9. '():
' → logprob: -9.668980598449707
    10. '):' → logprob: -9.793980598449707

Token 1193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07410483062267303
    2. 'self' → logprob: -3.0741047859191895
    3. '       ' → logprob: -3.6991047859191895
    4. ' self' → logprob: -8.699105262756348
    5. '               ' → logprob: -9.449105262756348
    6. '   ' → logprob: -9.824105262756348
    7. '```' → logprob: -9.949105262756348
    8. '{
' → logprob: -10.449105262756348
    9. '(self' → logprob: -10.699105262756348
    10. ':
' → logprob: -12.199105262756348

Token 1194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0037368990015238523
    2. '       ' → logprob: -5.753736972808838
    3. ' self' → logprob: -7.503736972808838
    4. '	self' → logprob: -13.12873649597168
    5. '           ' → logprob: -13.25373649597168
    6. '(self' → logprob: -13.75373649597168
    7. '   ' → logprob: -13.75373649597168
    8. '{
' → logprob: -14.62873649597168
    9. '```' → logprob: -14.62873649597168
    10. '
' → logprob: -14.87873649597168

Token 1195: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.6937041878700256
    2. 'consume' → logprob: -0.6937041878700256
    3. '   ' → logprob: -7.943704128265381
    4. '.' → logprob: -9.318704605102539
    5. 'def' → logprob: -9.568704605102539
    6. ' consume' → logprob: -11.193704605102539
    7. '=' → logprob: -11.568704605102539
    8. '       ' → logprob: -12.318704605102539
    9. 'self' → logprob: -12.693704605102539
    10. '     ' → logprob: -12.943704605102539

Token 1196: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7506598234176636
    2. 'return' → logprob: -0.8756598234176636
    3. '
' → logprob: -2.500659942626953
    4. 'val' → logprob: -4.000659942626953
    5. '           ' → logprob: -5.000659942626953
    6. ' return' → logprob: -6.250659942626953
    7. '        
' → logprob: -7.750659942626953
    8. 'F' → logprob: -8.125659942626953
    9. ')return' → logprob: -8.500659942626953
    10. 'f' → logprob: -8.625659942626953

Token 1197: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3414207994937897
    2. '           ' → logprob: -1.3414207696914673
    3. '       ' → logprob: -3.716420888900757
    4. 'val' → logprob: -6.091420650482178
    5. ' return' → logprob: -7.341420650482178
    6. 'f' → logprob: -8.091421127319336
    7. 'ret' → logprob: -9.216421127319336
    8. '
' → logprob: -9.966421127319336
    9. 'result' → logprob: -10.966421127319336
    10. 'res' → logprob: -11.341421127319336

Token 1198: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.03485225886106491
    2. 'res' → logprob: -3.9098522663116455
    3. 'right' → logprob: -4.534852027893066
    4. 'return' → logprob: -6.034852027893066
    5. 'v' → logprob: -7.534852027893066
    6. 'sub' → logprob: -8.159852027893066
    7. 'inner' → logprob: -8.784852027893066
    8. ' val' → logprob: -10.909852027893066
    9. 'ret' → logprob: -11.034852027893066
    10. 'rhs' → logprob: -11.034852027893066

Token 1199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023272383958101273
    2. ' =' → logprob: -3.7732722759246826
    3. '=self' → logprob: -11.148272514343262
    4. '           ' → logprob: -11.398272514343262
    5. '       ' → logprob: -14.523272514343262
    6. '   ' → logprob: -14.773272514343262
    7. 'self' → logprob: -15.148272514343262
    8. '               ' → logprob: -17.273271560668945
    9. ' ' → logprob: -18.148271560668945
    10. '        ' → logprob: -18.273271560668945

Token 1200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7220996022224426
    2. '-self' → logprob: -0.7220996022224426
    3. ' self' → logprob: -3.722099542617798
    4. ' -' → logprob: -5.847099781036377
    5. '-' → logprob: -6.722099781036377
    6. '-s' → logprob: -8.722099304199219
    7. '   ' → logprob: -9.722099304199219
    8. '           ' → logprob: -11.847099304199219
    9. ' ' → logprob: -11.972099304199219
    10. '       ' → logprob: -12.347099304199219

Token 1201: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.003608267055824399
    2. 'parse' → logprob: -5.628608226776123
    3. '.' → logprob: -12.503608703613281
    4. '=parse' → logprob: -12.628608703613281
    5. '	parse' → logprob: -14.753608703613281
    6. ' .' → logprob: -15.253608703613281
    7. ' parse' → logprob: -15.628608703613281
    8. '   ' → logprob: -15.753608703613281
    9. '_parse' → logprob: -15.878608703613281
    10. '(parse' → logprob: -16.62860870361328

Token 1202: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: 0.0
    2. ' F' → logprob: -19.5
    3. '```' → logprob: -21.0
    4. '`' → logprob: -21.125
    5. 'f' → logprob: -21.75
    6. '
' → logprob: -22.25
    7. 'Ｆ' → logprob: -22.25
    8. ')' → logprob: -22.375
    9. '#' → logprob: -22.5
    10. '_F' → logprob: -22.5

Token 1203: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3899999260902405
    2. '()
' → logprob: -2.0149998664855957
    3. 'return' → logprob: -2.6399998664855957
    4. '()' → logprob: -2.7649998664855957
    5. '           ' → logprob: -3.0149998664855957
    6. '
' → logprob: -5.764999866485596
    7. '   ' → logprob: -7.514999866485596
    8. ')' → logprob: -7.889999866485596
    9. ' return' → logprob: -7.889999866485596
    10. '<|end|>' → logprob: -7.889999866485596

Token 1204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003529517212882638
    2. 'return' → logprob: -5.7535295486450195
    3. '       ' → logprob: -8.00352954864502
    4. '   ' → logprob: -11.62852954864502
    5. '		' → logprob: -12.62852954864502
    6. ' return' → logprob: -12.75352954864502
    7. '	       ' → logprob: -14.25352954864502
    8. '               ' → logprob: -14.50352954864502
    9. '	return' → logprob: -14.75352954864502
    10. '```' → logprob: -15.75352954864502

Token 1205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017302792984992266
    2. '           ' → logprob: -6.751730442047119
    3. ' return' → logprob: -7.501730442047119
    4. '       ' → logprob: -12.126729965209961
    5. '   ' → logprob: -14.001729965209961
    6. '
' → logprob: -14.251729965209961
    7. 'val' → logprob: -14.876729965209961
    8. '	return' → logprob: -15.501729965209961
    9. '               ' → logprob: -16.87672996520996
    10. '#' → logprob: -17.25172996520996

Token 1206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22104120254516602
    2. '-val' → logprob: -1.721041202545166
    3. '-' → logprob: -3.971041202545166
    4. '-value' → logprob: -8.846040725708008
    5. '-neg' → logprob: -8.971040725708008
    6. '-num' → logprob: -9.471040725708008
    7. '-Val' → logprob: -10.221040725708008
    8. '-token' → logprob: -11.096040725708008
    9. '-left' → logprob: -11.346040725708008
    10. '-int' → logprob: -11.721040725708008

Token 1207: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -4.320199877838604e-07
    2. ' val' → logprob: -15.0
    3. '1' → logprob: -20.25
    4. '	val' → logprob: -22.375
    5. '_val' → logprob: -23.125
    6. '(val' → logprob: -23.25
    7. '           ' → logprob: -24.0
    8. '   ' → logprob: -24.25
    9. 'valg' → logprob: -24.75
    10. 'valu' → logprob: -25.0

Token 1208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006165316444821656
    2. '
' → logprob: -7.750616550445557
    3. '	' → logprob: -9.250616073608398
    4. '<|end|>' → logprob: -10.125616073608398
    5. 'elif' → logprob: -10.875616073608398
    6. ')' → logprob: -11.500616073608398
    7. '        
' → logprob: -12.250616073608398
    8. '   ' → logprob: -12.375616073608398
    9. '           ' → logprob: -13.000616073608398
    10. '```' → logprob: -13.375616073608398

Token 1209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032177609391510487
    2. 'elif' → logprob: -5.753217697143555
    3. 'if' → logprob: -10.628217697143555
    4. '```' → logprob: -11.378217697143555
    5. ' elif' → logprob: -13.378217697143555
    6. '
' → logprob: -14.003217697143555
    7. '   ' → logprob: -14.753217697143555
    8. ' if' → logprob: -14.753217697143555
    9. '	' → logprob: -14.753217697143555
    10. 'else' → logprob: -15.753217697143555

Token 1210: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.13941670954227448
    2. '       ' → logprob: -2.1394166946411133
    3. 'if' → logprob: -4.389416694641113
    4. '```' → logprob: -13.264416694641113
    5. ' elif' → logprob: -14.139416694641113
    6. '   ' → logprob: -14.889416694641113
    7. 'el' → logprob: -16.38941764831543
    8. ' if' → logprob: -16.51441764831543
    9. '
' → logprob: -17.76441764831543
    10. 'else' → logprob: -18.38941764831543

Token 1211: ' ch' (ID: 549)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6329107880592346
    2. 'ch' → logprob: -0.7579107880592346
    3. ' self' → logprob: -8.75791072845459
    4. ' ch' → logprob: -9.63291072845459
    5. '       ' → logprob: -10.63291072845459
    6. '(self' → logprob: -10.88291072845459
    7. '(ch' → logprob: -11.50791072845459
    8. ''ch' → logprob: -11.75791072845459
    9. ''' → logprob: -11.88291072845459
    10. '   ' → logprob: -12.00791072845459

Token 1212: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0003583456273190677
    2. '==' → logprob: -8.125358581542969
    3. '='' → logprob: -10.750358581542969
    4. ' =='' → logprob: -11.000358581542969
    5. ' ==' → logprob: -11.500358581542969
    6. '=="' → logprob: -12.250358581542969
    7. '==='' → logprob: -12.875358581542969
    8. '()==' → logprob: -13.250358581542969
    9. '()' → logprob: -13.500358581542969
    10. ''' → logprob: -13.750358581542969

Token 1213: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3888830840587616
    2. ''' → logprob: -1.138883113861084
    3. '(' → logprob: -6.388883113861084
    4. ''(' → logprob: -8.888882637023926
    5. '(':' → logprob: -9.013882637023926
    6. ' '('' → logprob: -10.263882637023926
    7. '(
' → logprob: -10.388882637023926
    8. '("("' → logprob: -13.263882637023926
    9. '(',' → logprob: -14.388882637023926
    10. '"' → logprob: -14.513882637023926

Token 1214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23065674304962158
    2. ':
' → logprob: -1.6056567430496216
    3. '       ' → logprob: -5.730656623840332
    4. '           ' → logprob: -7.480656623840332
    5. '):
' → logprob: -7.855656623840332
    6. ')' → logprob: -7.980656623840332
    7. '):' → logprob: -8.355656623840332
    8. 'self' → logprob: -8.980656623840332
    9. '{
' → logprob: -9.480656623840332
    10. '   ' → logprob: -9.855656623840332

Token 1215: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03837170824408531
    2. '           ' → logprob: -3.2883718013763428
    3. 'self' → logprob: -9.038372039794922
    4. ':
' → logprob: -9.413372039794922
    5. '   ' → logprob: -10.163372039794922
    6. '{
' → logprob: -10.538372039794922
    7. '```' → logprob: -10.788372039794922
    8. ':' → logprob: -11.413372039794922
    9. '(self' → logprob: -11.538372039794922
    10. ' self' → logprob: -11.913372039794922

Token 1216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09027521312236786
    2. '       ' → logprob: -2.840275287628174
    3. '           ' → logprob: -3.590275287628174
    4. ' self' → logprob: -8.340274810791016
    5. '   ' → logprob: -9.715274810791016
    6. '               ' → logprob: -11.590274810791016
    7. '
' → logprob: -11.965274810791016
    8. '```' → logprob: -13.340274810791016
    9. 'def' → logprob: -13.965274810791016
    10. '	self' → logprob: -13.965274810791016

Token 1217: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0006349971517920494
    2. 'consume' → logprob: -7.375635147094727
    3. '.' → logprob: -12.125635147094727
    4. '   ' → logprob: -13.125635147094727
    5. ' .' → logprob: -15.125635147094727
    6. '.cons' → logprob: -15.250635147094727
    7. 'def' → logprob: -16.375635147094727
    8. '.expect' → logprob: -16.500635147094727
    9. 's' → logprob: -16.500635147094727
    10. 'cons' → logprob: -16.750635147094727

Token 1218: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000433291686931625
    2. 'val' → logprob: -8.625432968139648
    3. 'return' → logprob: -9.125432968139648
    4. '
' → logprob: -9.625432968139648
    5. '       ' → logprob: -11.375432968139648
    6. '   ' → logprob: -11.500432968139648
    7. '(E' → logprob: -11.625432968139648
    8. '()' → logprob: -11.750432968139648
    9. 'E' → logprob: -12.000432968139648
    10. '		' → logprob: -12.000432968139648

Token 1219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043748222291469574
    2. 'return' → logprob: -3.668748140335083
    3. '       ' → logprob: -4.543748378753662
    4. 'val' → logprob: -5.043748378753662
    5. '
' → logprob: -9.168747901916504
    6. '   ' → logprob: -10.293747901916504
    7. ' return' → logprob: -10.418747901916504
    8. '		' → logprob: -11.543747901916504
    9. '               ' → logprob: -11.668747901916504
    10. ' val' → logprob: -11.793747901916504

Token 1220: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -5.796184723294573e-06
    2. '       ' → logprob: -13.125005722045898
    3. ' val' → logprob: -13.250005722045898
    4. '           ' → logprob: -13.250005722045898
    5. 'v' → logprob: -16.5000057220459
    6. 'res' → logprob: -17.0000057220459
    7. 'result' → logprob: -17.2500057220459
    8. '	val' → logprob: -17.3750057220459
    9. '   ' → logprob: -17.5000057220459
    10. 'value' → logprob: -17.7500057220459

Token 1221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38773098587989807
    2. ' =' → logprob: -1.1377309560775757
    3. '           ' → logprob: -7.137731075286865
    4. '       ' → logprob: -9.887730598449707
    5. '   ' → logprob: -11.637730598449707
    6. '        ' → logprob: -13.012730598449707
    7. '               ' → logprob: -13.512730598449707
    8. '            ' → logprob: -14.887730598449707
    9. '    ' → logprob: -15.262730598449707
    10. '          ' → logprob: -15.637730598449707

Token 1222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.636475493200123e-05
    2. ' self' → logprob: -9.500076293945312
    3. '           ' → logprob: -13.625076293945312
    4. '       ' → logprob: -15.750076293945312
    5. '(self' → logprob: -17.375076293945312
    6. '         ' → logprob: -17.750076293945312
    7. '   ' → logprob: -18.125076293945312
    8. '               ' → logprob: -19.125076293945312
    9. '	self' → logprob: -19.750076293945312
    10. '          ' → logprob: -20.000076293945312

Token 1223: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.038063984364271164
    2. '.parse' → logprob: -3.2880640029907227
    3. ' parse' → logprob: -10.788064002990723
    4. '	parse' → logprob: -14.288064002990723
    5. '=parse' → logprob: -14.663064002990723
    6. '.' → logprob: -14.913064002990723
    7. '(parse' → logprob: -15.413064002990723
    8. '_parse' → logprob: -15.913064002990723
    9. '
' → logprob: -17.038063049316406
    10. '```' → logprob: -17.163063049316406

Token 1224: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.9743012671824545e-05
    2. 'self' → logprob: -10.875020027160645
    3. '(self' → logprob: -14.250020027160645
    4. '()
' → logprob: -16.875019073486328
    5. 'F' → logprob: -17.250019073486328
    6. ' E' → logprob: -17.625019073486328
    7. '()' → logprob: -18.375019073486328
    8. 'T' → logprob: -18.625019073486328
    9. 'val' → logprob: -19.125019073486328
    10. ')' → logprob: -19.125019073486328

Token 1225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3190309703350067
    2. '()
' → logprob: -1.319031000137329
    3. '           ' → logprob: -5.31903076171875
    4. ')' → logprob: -7.19403076171875
    5. '       ' → logprob: -10.06903076171875
    6. ')
' → logprob: -10.31903076171875
    7. '()
' → logprob: -11.06903076171875
    8. 'return' → logprob: -12.19403076171875
    9. '())' → logprob: -12.94403076171875
    10. '               ' → logprob: -13.81903076171875

Token 1226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011093381908722222
    2. '       ' → logprob: -9.500110626220703
    3. 'return' → logprob: -11.125110626220703
    4. 'self' → logprob: -11.625110626220703
    5. '		' → logprob: -12.125110626220703
    6. '
' → logprob: -12.250110626220703
    7. '```' → logprob: -13.875110626220703
    8. '   ' → logprob: -14.750110626220703
    9. '	       ' → logprob: -15.250110626220703
    10. '               ' → logprob: -15.625110626220703

Token 1227: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05133268982172012
    2. '       ' → logprob: -3.051332712173462
    3. '           ' → logprob: -5.926332473754883
    4. ' self' → logprob: -9.926332473754883
    5. '   ' → logprob: -10.676332473754883
    6. '	self' → logprob: -14.801332473754883
    7. '```' → logprob: -15.176332473754883
    8. '
' → logprob: -15.676332473754883
    9. '               ' → logprob: -16.051332473754883
    10. '(self' → logprob: -16.926332473754883

Token 1228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00588566018268466
    2. '           ' → logprob: -5.255885601043701
    3. ' self' → logprob: -7.380885601043701
    4. '       ' → logprob: -11.38088607788086
    5. '(self' → logprob: -12.25588607788086
    6. '               ' → logprob: -12.63088607788086
    7. 'not' → logprob: -13.00588607788086
    8. 'ch' → logprob: -13.00588607788086
    9. '                   ' → logprob: -13.75588607788086
    10. '
' → logprob: -13.88088607788086

Token 1229: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.00035250463406555355
    2. '.expect' → logprob: -8.37535285949707
    3. 'peek' → logprob: -9.37535285949707
    4. '.consume' → logprob: -10.37535285949707
    5. '.' → logprob: -12.25035285949707
    6. 'expect' → logprob: -15.62535285949707
    7. '.pos' → logprob: -15.62535285949707
    8. '.pe' → logprob: -15.62535285949707
    9. '   ' → logprob: -15.75035285949707
    10. '```' → logprob: -16.25035285949707

Token 1230: '()!=' (ID: 71703)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07049795240163803
    2. '()!=' → logprob: -2.820497989654541
    3. '()==' → logprob: -4.820497989654541
    4. '!='' → logprob: -8.570497512817383
    5. '=='' → logprob: -9.570497512817383
    6. '!=' → logprob: -9.570497512817383
    7. '==' → logprob: -9.945497512817383
    8. '()='' → logprob: -10.195497512817383
    9. ' !=' → logprob: -12.070497512817383
    10. '()=="' → logprob: -13.445497512817383

Token 1231: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -9.782141569303349e-05
    2. ')' → logprob: -9.25009822845459
    3. '")' → logprob: -13.75009822845459
    4. ' ')' → logprob: -14.87509822845459
    5. ''):' → logprob: -16.625097274780273
    6. ' ')'' → logprob: -17.375097274780273
    7. ''):
' → logprob: -18.000097274780273
    8. ''' → logprob: -18.125097274780273
    9. ''){' → logprob: -18.250097274780273
    10. '']' → logprob: -18.750097274780273

Token 1232: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11320922523736954
    2. '           ' → logprob: -2.7382092475891113
    3. '               ' → logprob: -3.9882092475891113
    4. '):
' → logprob: -3.9882092475891113
    5. ':' → logprob: -5.988209247589111
    6. ')' → logprob: -6.488209247589111
    7. ''):
' → logprob: -7.863209247589111
    8. '():
' → logprob: -8.238208770751953
    9. '):' → logprob: -8.363208770751953
    10. '':
' → logprob: -9.113208770751953

Token 1233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2814738154411316
    2. '           ' → logprob: -1.4064738750457764
    3. 'self' → logprob: -8.156474113464355
    4. '   ' → logprob: -11.656474113464355
    5. ' self' → logprob: -12.031474113464355
    6. ')' → logprob: -12.281474113464355
    7. '```' → logprob: -12.656474113464355
    8. '       ' → logprob: -12.781474113464355
    9. '                   ' → logprob: -12.906474113464355
    10. '(self' → logprob: -13.406474113464355

Token 1234: ' raise' (ID: 9338)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.331844300031662
    2. '           ' → logprob: -1.3318443298339844
    3. '               ' → logprob: -4.081844329833984
    4. 'raise' (adapté à ' raise') → logprob: -6.706844329833984
    5. '   ' → logprob: -8.831844329833984
    6. ' self' → logprob: -9.331844329833984
    7. '                   ' → logprob: -9.581844329833984
    8. '       ' → logprob: -12.456844329833984
    9. ' raise' → logprob: -13.206844329833984
    10. '(self' → logprob: -14.581844329833984

Token 1235: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -1.700132997939363e-05
    2. ' Parse' → logprob: -11.000017166137695
    3. '(Parse' → logprob: -15.375017166137695
    4. '_parse' → logprob: -17.750017166137695
    5. '   ' → logprob: -18.625017166137695
    6. '_Parse' → logprob: -18.750017166137695
    7. '.Parse' → logprob: -18.875017166137695
    8. 'parse' → logprob: -19.250017166137695
    9. ' ' → logprob: -19.375017166137695
    10. 'Value' → logprob: -19.625017166137695

Token 1236: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.512236498361744e-07
    2. 'rror' → logprob: -15.625000953674316
    3. 'Parse' → logprob: -16.25
    4. 'error' → logprob: -17.25
    5. '(Error' → logprob: -17.75
    6. ' Error' → logprob: -18.0
    7. '
' → logprob: -18.625
    8. 'Exception' → logprob: -18.75
    9. 'SError' → logprob: -18.875
    10. '`' → logprob: -19.125

Token 1237: '("' (ID: 568)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.969262421131134
    2. '("' → logprob: -1.3442623615264893
    3. '               ' → logprob: -1.8442623615264893
    4. '(self' → logprob: -2.2192623615264893
    5. 'self' → logprob: -2.9692623615264893
    6. '"' → logprob: -4.594262599945068
    7. '                   ' → logprob: -4.719262599945068
    8. '(' → logprob: -4.969262599945068
    9. '("("' → logprob: -5.219262599945068
    10. '(
' → logprob: -5.594262599945068

Token 1238: 'Expected' (ID: 28041)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008289256133139133
    2. ')' → logprob: -5.508289337158203
    3. 'self' → logprob: -6.008289337158203
    4. '")' → logprob: -6.883289337158203
    5. '')
' → logprob: -8.383289337158203
    6. '           ' → logprob: -9.133289337158203
    7. ')
' → logprob: -9.258289337158203
    8. '')")
' → logprob: -9.508289337158203
    9. '       ' → logprob: -9.633289337158203
    10. ')')
' → logprob: -9.883289337158203

Token 1239: ' ')'' (ID: 198756)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.723973582556937e-05
    2. ')' → logprob: -11.625017166137695
    3. '")' → logprob: -12.375017166137695
    4. '')")
' → logprob: -12.875017166137695
    5. '')"' → logprob: -13.875017166137695
    6. '}')' → logprob: -15.625017166137695
    7. ' ')' → logprob: -16.125017166137695
    8. '']' → logprob: -16.375017166137695
    9. '')
' → logprob: -16.750017166137695
    10. ' ')'' → logprob: -17.375017166137695

Token 1240: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.039669185876846313
    2. 'at' → logprob: -4.039669036865234
    3. '           ' → logprob: -4.039669036865234
    4. ')' → logprob: -6.414669036865234
    5. ')
' → logprob: -7.039669036865234
    6. 'self' → logprob: -7.539669036865234
    7. '       ' → logprob: -8.164669036865234
    8. '               ' → logprob: -8.664669036865234
    9. '")' → logprob: -10.039669036865234
    10. '   ' → logprob: -10.539669036865234

Token 1241: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.5027299822540954e-05
    2. ' self' → logprob: -10.125055313110352
    3. 'pos' → logprob: -11.625055313110352
    4. ')' → logprob: -12.625055313110352
    5. '(self' → logprob: -13.875055313110352
    6. '")' → logprob: -14.375055313110352
    7. '')' → logprob: -14.750055313110352
    8. '
' → logprob: -15.750055313110352
    9. '   ' → logprob: -16.12505531311035
    10. '       ' → logprob: -16.87505531311035

Token 1242: ' {}".' (ID: 51417)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004871162120252848
    2. ' self' → logprob: -5.754871368408203
    3. '(self' → logprob: -7.004871368408203
    4. '{' → logprob: -8.254871368408203
    5. '{}".' → logprob: -9.004871368408203
    6. ')' → logprob: -9.129871368408203
    7. '{}' → logprob: -9.629871368408203
    8. '           ' → logprob: -9.879871368408203
    9. '{
' → logprob: -10.254871368408203
    10. '               ' → logprob: -10.504871368408203

Token 1243: 'format' (ID: 4078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.6312321753939614e-05
    2. '(self' → logprob: -11.375036239624023
    3. '           ' → logprob: -11.500036239624023
    4. ' self' → logprob: -11.500036239624023
    5. '               ' → logprob: -12.625036239624023
    6. '       ' → logprob: -14.500036239624023
    7. '
' → logprob: -15.250036239624023
    8. '                   ' → logprob: -15.375036239624023
    9. 'return' → logprob: -16.375036239624023
    10. '   ' → logprob: -16.625036239624023

Token 1244: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.0020742492051795e-05
    2. ' self' → logprob: -10.375049591064453
    3. '(self' → logprob: -11.000049591064453
    4. '           ' → logprob: -13.750049591064453
    5. ')' → logprob: -14.875049591064453
    6. '                   ' → logprob: -15.125049591064453
    7. '               ' → logprob: -15.125049591064453
    8. '
' → logprob: -17.250049591064453
    9. ')
' → logprob: -18.000049591064453
    10. 'elf' → logprob: -18.500049591064453

Token 1245: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -13.00000286102295
    3. '.' → logprob: -15.12500286102295
    4. '.position' → logprob: -15.75000286102295
    5. ').' → logprob: -17.875001907348633
    6. '	pos' → logprob: -18.625001907348633
    7. '.peek' → logprob: -19.250001907348633
    8. ' .' → logprob: -19.375001907348633
    9. '))' → logprob: -19.500001907348633
    10. ')' → logprob: -19.750001907348633

Token 1246: '))
' (ID: 2210)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05742804706096649
    2. ')
' → logprob: -2.9324281215667725
    3. ')' → logprob: -6.182427883148193
    4. '       ' → logprob: -8.307428359985352
    5. 'self' → logprob: -9.182428359985352
    6. '               ' → logprob: -9.307428359985352
    7. '')
' → logprob: -11.557428359985352
    8. '")
' → logprob: -11.807428359985352
    9. '))
' → logprob: -12.307428359985352
    10. '                   ' → logprob: -12.557428359985352

Token 1247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00252381875179708
    2. '       ' → logprob: -6.377523899078369
    3. 'self' → logprob: -7.127523899078369
    4. '               ' → logprob: -11.252523422241211
    5. '   ' → logprob: -12.252523422241211
    6. ' self' → logprob: -15.127523422241211
    7. '```' → logprob: -15.377523422241211
    8. '		' → logprob: -16.25252342224121
    9. '                   ' → logprob: -16.25252342224121
    10. '          ' → logprob: -16.37752342224121

Token 1248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25201600790023804
    2. '           ' → logprob: -1.5020160675048828
    3. ' self' → logprob: -10.002016067504883
    4. '       ' → logprob: -10.502016067504883
    5. '   ' → logprob: -11.377016067504883
    6. '               ' → logprob: -13.127016067504883
    7. '```' → logprob: -15.877016067504883
    8. '
' → logprob: -16.127016067504883
    9. '	self' → logprob: -16.377016067504883
    10. '(self' → logprob: -16.627016067504883

Token 1249: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0015048631466925144
    2. 'consume' → logprob: -6.501504898071289
    3. '.' → logprob: -13.751504898071289
    4. '.expect' → logprob: -13.876504898071289
    5. '   ' → logprob: -15.751504898071289
    6. '.pos' → logprob: -15.876504898071289
    7. ' consume' → logprob: -16.12650489807129
    8. 'pos' → logprob: -16.62650489807129
    9. '.cons' → logprob: -17.50150489807129
    10. ' .' → logprob: -17.87650489807129

Token 1250: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.498211145401001
    2. '()' → logprob: -1.123211145401001
    3. ')' → logprob: -2.998211145401001
    4. '()
' → logprob: -4.248210906982422
    5. '       ' → logprob: -6.873210906982422
    6. ')
' → logprob: -7.998210906982422
    7. '(' → logprob: -7.998210906982422
    8. '<|end|>' → logprob: -7.998210906982422
    9. 'return' → logprob: -8.123210906982422
    10. '   ' → logprob: -9.123210906982422

Token 1251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.12258882028982e-05
    2. 'return' → logprob: -10.37506103515625
    3. '       ' → logprob: -10.75006103515625
    4. '		' → logprob: -12.12506103515625
    5. '   ' → logprob: -13.62506103515625
    6. '	       ' → logprob: -14.37506103515625
    7. '               ' → logprob: -15.00006103515625
    8. ' return' → logprob: -15.12506103515625
    9. '	   ' → logprob: -15.50006103515625
    10. '		   ' → logprob: -15.75006103515625

Token 1252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20193949341773987
    2. '           ' → logprob: -1.7019394636154175
    3. ' return' → logprob: -8.076939582824707
    4. '       ' → logprob: -8.576939582824707
    5. '   ' → logprob: -11.701939582824707
    6. '	return' → logprob: -11.826939582824707
    7. '		' → logprob: -12.451939582824707
    8. '               ' → logprob: -12.576939582824707
    9. '{return' → logprob: -13.326939582824707
    10. '                   ' → logprob: -14.201939582824707

Token 1253: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00043102685594931245
    2. ' val' → logprob: -7.750431060791016
    3. '	val' → logprob: -16.250431060791016
    4. '   ' → logprob: -16.375431060791016
    5. '           ' → logprob: -16.625431060791016
    6. '       ' → logprob: -17.750431060791016
    7. '  ' → logprob: -19.250431060791016
    8. '(val' → logprob: -19.250431060791016
    9. 'v' → logprob: -19.375431060791016
    10. ' ' → logprob: -19.375431060791016

Token 1254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.269565634895116e-05
    2. 'else' → logprob: -9.875092506408691
    3. '```' → logprob: -11.250092506408691
    4. '   ' → logprob: -11.375092506408691
    5. 'elif' → logprob: -12.250092506408691
    6. '	' → logprob: -12.250092506408691
    7. '
' → logprob: -12.375092506408691
    8. 'return' → logprob: -13.625092506408691
    9. '           ' → logprob: -13.875092506408691
    10. ' else' → logprob: -15.625092506408691

Token 1255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.73314929776825e-05
    2. 'else' → logprob: -9.62508773803711
    3. '```' → logprob: -11.37508773803711
    4. '
' → logprob: -12.37508773803711
    5. 'elif' → logprob: -12.75008773803711
    6. '   ' → logprob: -13.12508773803711
    7. 'return' → logprob: -15.12508773803711
    8. '	' → logprob: -15.87508773803711
    9. '           ' → logprob: -16.37508773803711
    10. ' else' → logprob: -16.87508773803711

Token 1256: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024143077433109283
    2. 'else' (adapté à ' else') → logprob: -3.7741429805755615
    3. 'elif' → logprob: -7.024143218994141
    4. '   ' → logprob: -12.77414321899414
    5. 'def' → logprob: -13.52414321899414
    6. '
' → logprob: -13.52414321899414
    7. ' else' → logprob: -14.27414321899414
    8. '```' → logprob: -14.39914321899414
    9. 'return' → logprob: -15.39914321899414
    10. ' elif' → logprob: -16.52414321899414

Token 1257: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05538814514875412
    2. ':
' → logprob: -3.8053882122039795
    3. 'return' → logprob: -4.0553879737854
    4. '           ' → logprob: -5.1803879737854
    5. '   ' → logprob: -5.3053879737854
    6. ':' → logprob: -6.4303879737854
    7. ' return' → logprob: -6.6803879737854
    8. ':return' → logprob: -7.3053879737854
    9. 'if' → logprob: -10.430388450622559
    10. ' ' → logprob: -10.680388450622559

Token 1258: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03826788440346718
    2. '       ' → logprob: -3.2882678508758545
    3. '   ' → logprob: -8.788268089294434
    4. ' return' → logprob: -9.663268089294434
    5. '           ' → logprob: -12.663268089294434
    6. 'self' → logprob: -13.038268089294434
    7. 'val' → logprob: -13.038268089294434
    8. '	return' → logprob: -13.788268089294434
    9. '      ' → logprob: -14.788268089294434
    10. 'def' → logprob: -15.038268089294434

Token 1259: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.843177233240567e-05
    2. ' return' → logprob: -11.625018119812012
    3. '           ' → logprob: -12.000018119812012
    4. '       ' → logprob: -13.375018119812012
    5. '   ' → logprob: -13.500018119812012
    6. 'val' (adapté à ' val') → logprob: -14.750018119812012
    7. '
' → logprob: -17.625019073486328
    8. '	return' → logprob: -18.125019073486328
    9. 'def' → logprob: -18.750019073486328
    10. '```' → logprob: -18.750019073486328

Token 1260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2522139847278595
    2. ' =' → logprob: -1.502213954925537
    3. '           ' → logprob: -8.752214431762695
    4. '=self' → logprob: -9.502214431762695
    5. '       ' → logprob: -11.002214431762695
    6. '   ' → logprob: -11.252214431762695
    7. 'return' → logprob: -11.627214431762695
    8. 'def' → logprob: -11.752214431762695
    9. ' ' → logprob: -13.377214431762695
    10. '=
' → logprob: -13.877214431762695

Token 1261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.572941179503687e-05
    2. ' self' → logprob: -10.000045776367188
    3. '           ' → logprob: -15.125045776367188
    4. '       ' → logprob: -19.250045776367188
    5. '(self' → logprob: -19.250045776367188
    6. '0' → logprob: -19.500045776367188
    7. ' ' → logprob: -19.625045776367188
    8. '         ' → logprob: -19.750045776367188
    9. '   ' → logprob: -20.000045776367188
    10. '	self' → logprob: -20.250045776367188

Token 1262: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -9.746380237629637e-05
    2. 'parse' → logprob: -9.250097274780273
    3. '.' → logprob: -13.750097274780273
    4. ' parse' → logprob: -16.500097274780273
    5. ' .' → logprob: -16.625097274780273
    6. '=parse' → logprob: -17.125097274780273
    7. '	parse' → logprob: -17.625097274780273
    8. '   ' → logprob: -17.625097274780273
    9. '.consume' → logprob: -18.625097274780273
    10. '.is' → logprob: -18.750097274780273

Token 1263: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '('' → logprob: -18.625
    3. 'def' → logprob: -18.75
    4. '(' → logprob: -18.875
    5. ' N' → logprob: -19.375
    6. 'parse' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. '`' → logprob: -19.625
    9. 'Number' → logprob: -19.625
    10. 'number' → logprob: -19.875

Token 1264: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003619670169427991
    2. '()
' → logprob: -5.62861967086792
    3. '       ' → logprob: -11.253619194030762
    4. '()`' → logprob: -12.878619194030762
    5. '()

' → logprob: -13.378619194030762
    6. '   ' → logprob: -14.253619194030762
    7. '```' → logprob: -14.503619194030762
    8. '()
' → logprob: -14.878619194030762
    9. '()\' → logprob: -15.253619194030762
    10. ' ()' → logprob: -15.878619194030762

Token 1265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022174416109919548
    2. 'return' → logprob: -4.39717435836792
    3. '           ' → logprob: -4.77217435836792
    4. '   ' → logprob: -7.02217435836792
    5. '```' → logprob: -8.897174835205078
    6. 'def' → logprob: -9.897174835205078
    7. '	' → logprob: -10.147174835205078
    8. '
' → logprob: -11.397174835205078
    9. '	return' → logprob: -11.397174835205078
    10. ' return' → logprob: -12.022174835205078

Token 1266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1015283539891243
    2. '           ' → logprob: -2.3515284061431885
    3. '       ' → logprob: -6.726528167724609
    4. ' return' → logprob: -9.47652816772461
    5. '   ' → logprob: -10.60152816772461
    6. '	return' → logprob: -11.72652816772461
    7. 'if' → logprob: -11.97652816772461
    8. '		' → logprob: -12.85152816772461
    9. '
' → logprob: -13.10152816772461
    10. '```' → logprob: -14.60152816772461

Token 1267: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009114635176956654
    2. ' val' → logprob: -7.000911235809326
    3. '	val' → logprob: -18.875911712646484
    4. '(val' → logprob: -20.750911712646484
    5. '   ' → logprob: -21.375911712646484
    6. 'v' → logprob: -22.500911712646484
    7. '[val' → logprob: -22.625911712646484
    8. ' ' → logprob: -23.375911712646484
    9. '_val' → logprob: -23.750911712646484
    10. '  ' → logprob: -24.500911712646484

Token 1268: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5829166173934937
    2. '   ' → logprob: -0.8329166173934937
    3. ' def' → logprob: -5.957916736602783
    4. '```' → logprob: -6.082916736602783
    5. '
' → logprob: -6.207916736602783
    6. '	def' → logprob: -10.207916259765625
    7. '    
' → logprob: -10.957916259765625
    8. '<|end|>' → logprob: -12.707916259765625
    9. '`' → logprob: -12.832916259765625
    10. '``' → logprob: -13.082916259765625

Token 1269: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3888159394264221
    2. '   ' → logprob: -1.1388158798217773
    3. '```' → logprob: -6.763815879821777
    4. ' def' → logprob: -7.263815879821777
    5. '
' → logprob: -9.513815879821777
    6. '	def' → logprob: -11.638815879821777
    7. '    
' → logprob: -13.388815879821777
    8. '``' → logprob: -14.138815879821777
    9. '`' → logprob: -14.263815879821777
    10. '#' → logprob: -14.513815879821777

Token 1270: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004533142491709441
    2. '   ' → logprob: -7.750453472137451
    3. ' def' → logprob: -10.750452995300293
    4. '```' → logprob: -14.000452995300293
    5. '
' → logprob: -15.000452995300293
    6. '	def' → logprob: -16.00045394897461
    7. 'Def' → logprob: -19.37545394897461
    8. '``' → logprob: -19.87545394897461
    9. '       ' → logprob: -20.62545394897461
    10. '    
' → logprob: -20.62545394897461

Token 1271: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.0921942703134846e-05
    2. 'is' → logprob: -11.75001049041748
    3. ' parse' → logprob: -13.00001049041748
    4. 'peek' → logprob: -15.50001049041748
    5. 'def' → logprob: -15.75001049041748
    6. '```' → logprob: -16.750011444091797
    7. 'parser' → logprob: -17.125011444091797
    8. '(parse' → logprob: -17.250011444091797
    9. '_parse' → logprob: -17.250011444091797
    10. '
' → logprob: -17.750011444091797

Token 1272: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '```' → logprob: -19.875
    3. 'B' → logprob: -20.0
    4. 'n' → logprob: -20.375
    5. 'def' → logprob: -21.125
    6. ' N' → logprob: -21.25
    7. '#' → logprob: -22.125
    8. 'Token' → logprob: -22.25
    9. 'token' → logprob: -22.25
    10. '`' → logprob: -22.5

Token 1273: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012047011114191264
    2. '   ' → logprob: -9.625120162963867
    3. 'def' → logprob: -10.750120162963867
    4. '       ' → logprob: -11.000120162963867
    5. 'self' → logprob: -11.750120162963867
    6. '(' → logprob: -12.125120162963867
    7. '(
' → logprob: -13.000120162963867
    8. '```' → logprob: -15.750120162963867
    9. ' (' → logprob: -16.125120162963867
    10. '
' → logprob: -16.250120162963867

Token 1274: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002187256934121251
    2. '   ' → logprob: -7.002187252044678
    3. '       ' → logprob: -7.877187252044678
    4. 'self' → logprob: -7.877187252044678
    5. '(' → logprob: -8.502187728881836
    6. 'def' → logprob: -8.627187728881836
    7. ')' → logprob: -10.252187728881836
    8. '(
' → logprob: -10.627187728881836
    9. '):
' → logprob: -10.627187728881836
    10. '):' → logprob: -11.002187728881836

Token 1275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014678422594442964
    2. 'def' → logprob: -7.376467704772949
    3. 'ch' → logprob: -7.501467704772949
    4. '   ' → logprob: -8.25146770477295
    5. '```' → logprob: -11.75146770477295
    6. '#' → logprob: -12.12646770477295
    7. 'if' → logprob: -12.75146770477295
    8. '(ch' → logprob: -12.87646770477295
    9. '	' → logprob: -13.00146770477295
    10. '()' → logprob: -13.62646770477295

Token 1276: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0035075340420007706
    2. '       ' → logprob: -5.753507614135742
    3. 'if' → logprob: -8.128507614135742
    4. ' ch' → logprob: -11.253507614135742
    5. 'def' → logprob: -11.378507614135742
    6. '(ch' → logprob: -12.378507614135742
    7. '```' → logprob: -12.628507614135742
    8. '	ch' → logprob: -13.878507614135742
    9. '#' (adapté à ' #') → logprob: -14.003507614135742
    10. '   ' → logprob: -14.878507614135742

Token 1277: ' N' (ID: 478)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0174393430352211
    2. 'def' → logprob: -4.517439365386963
    3. 'if' → logprob: -5.267439365386963
    4. '#' → logprob: -7.642439365386963
    5. '       ' → logprob: -7.892439365386963
    6. '   ' → logprob: -8.892438888549805
    7. 'val' → logprob: -9.642438888549805
    8. 'If' → logprob: -9.892438888549805
    9. 'c' → logprob: -11.017438888549805
    10. 's' → logprob: -11.142438888549805

Token 1278: ' ::=' (ID: 176636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6649521589279175
    2. 'def' → logprob: -0.7899521589279175
    3. ' =' → logprob: -4.414952278137207
    4. ' def' → logprob: -4.539952278137207
    5. '   ' → logprob: -5.914952278137207
    6. 'ch' → logprob: -6.164952278137207
    7. '=' → logprob: -6.914952278137207
    8. ':
' → logprob: -7.539952278137207
    9. '
' → logprob: -7.664952278137207
    10. ':' → logprob: -8.039952278137207

Token 1279: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8760001063346863
    2. 'def' → logprob: -1.126000165939331
    3. 'ch' → logprob: -2.251000165939331
    4. ''' → logprob: -2.751000165939331
    5. 'if' → logprob: -2.876000165939331
    6. '0' → logprob: -4.500999927520752
    7. '       ' → logprob: -4.625999927520752
    8. '
' → logprob: -5.750999927520752
    9. '#' → logprob: -6.375999927520752
    10. 'digit' → logprob: -6.625999927520752

Token 1280: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06309657543897629
    2. 'self' → logprob: -3.313096523284912
    3. 'def' → logprob: -4.313096523284912
    4. '0' → logprob: -5.438096523284912
    5. '
' → logprob: -6.313096523284912
    6. 'ch' → logprob: -6.313096523284912
    7. '`' → logprob: -6.938096523284912
    8. '('' → logprob: -7.063096523284912
    9. 'if' → logprob: -7.938096523284912
    10. '   ' → logprob: -8.43809700012207

Token 1281: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.48874643445014954
    2. '       ' → logprob: -1.3637464046478271
    3. ' |' → logprob: -2.613746404647827
    4. ' or' → logprob: -4.113746643066406
    5. 'def' → logprob: -4.363746643066406
    6. 'if' → logprob: -4.613746643066406
    7. 'or' → logprob: -5.363746643066406
    8. '   ' → logprob: -5.613746643066406
    9. '
' → logprob: -5.863746643066406
    10. ' if' → logprob: -6.113746643066406

Token 1282: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10473639518022537
    2. ''' → logprob: -2.479736328125
    3. '       ' → logprob: -4.854736328125
    4. 'def' → logprob: -5.854736328125
    5. '0' → logprob: -6.604736328125
    6. ''s' → logprob: -6.854736328125
    7. '   ' → logprob: -7.854736328125
    8. '`' → logprob: -7.979736328125
    9. '1' → logprob: -8.104736328125
    10. ' '' → logprob: -8.104736328125

Token 1283: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3120627701282501
    2. '1' → logprob: -1.5620627403259277
    3. ''' → logprob: -3.5620627403259277
    4. '('' → logprob: -4.437062740325928
    5. 'def' → logprob: -4.687062740325928
    6. '
' → logprob: -5.687062740325928
    7. '(self' → logprob: -6.187062740325928
    8. '(' → logprob: -6.562062740325928
    9. '`' → logprob: -7.562062740325928
    10. '#' → logprob: -7.937062740325928

Token 1284: 'B' (ID: 33)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2198675125837326
    2. '       ' → logprob: -2.094867467880249
    3. '|' → logprob: -3.094867467880249
    4. 'ch' → logprob: -4.094867706298828
    5. '   ' → logprob: -5.469867706298828
    6. 'if' → logprob: -6.094867706298828
    7. 'self' → logprob: -6.469867706298828
    8. ' def' → logprob: -6.719867706298828
    9. '
' → logprob: -7.719867706298828
    10. '#' → logprob: -7.719867706298828

Token 1285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2632613778114319
    2. 'ch' → logprob: -1.638261318206787
    3. 'def' → logprob: -3.388261318206787
    4. '(ch' → logprob: -6.513261318206787
    5. '   ' → logprob: -7.013261318206787
    6. ' ch' → logprob: -7.638261318206787
    7. '```' → logprob: -8.513261795043945
    8. 'if' → logprob: -9.138261795043945
    9. ' def' → logprob: -9.763261795043945
    10. '	ch' → logprob: -10.138261795043945

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2347107082605362
    2. 'ch' → logprob: -1.734710693359375
    3. 'def' → logprob: -3.484710693359375
    4. 'if' → logprob: -6.609710693359375
    5. '   ' → logprob: -7.609710693359375
    6. '```' → logprob: -9.234710693359375
    7. ' ch' → logprob: -10.359710693359375
    8. '	ch' → logprob: -10.359710693359375
    9. '(ch' → logprob: -10.484710693359375
    10. ' if' → logprob: -10.984710693359375

Token 1287: ' #' (ID: 1069)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.01954742707312107
    2. '       ' → logprob: -4.644547462463379
    3. 'if' → logprob: -4.644547462463379
    4. 'def' → logprob: -9.144547462463379
    5. 'c' → logprob: -11.769547462463379
    6. '   ' → logprob: -12.269547462463379
    7. ' ch' → logprob: -12.394547462463379
    8. '#' (adapté à ' #') → logprob: -13.144547462463379
    9. '```' → logprob: -13.644547462463379
    10. '(ch' → logprob: -13.894547462463379

Token 1288: ' B' (ID: 418)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.007215541787445545
    2. 'if' → logprob: -5.25721549987793
    3. 'def' → logprob: -6.75721549987793
    4. '       ' → logprob: -7.25721549987793
    5. '   ' → logprob: -9.75721549987793
    6. 'If' → logprob: -10.75721549987793
    7. '#' → logprob: -11.00721549987793
    8. 'start' → logprob: -12.25721549987793
    9. 'c' → logprob: -13.13221549987793
    10. '```' → logprob: -13.25721549987793

Token 1289: ' ::=' (ID: 176636)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1911333054304123
    2. '       ' → logprob: -2.3161332607269287
    3. ' =' → logprob: -2.8161332607269287
    4. '=' → logprob: -4.441133499145508
    5. '   ' → logprob: -6.441133499145508
    6. ' def' → logprob: -6.941133499145508
    7. '```' → logprob: -8.191133499145508
    8. 'ch' → logprob: -9.066133499145508
    9. '=self' → logprob: -9.066133499145508
    10. '	def' → logprob: -9.316133499145508

Token 1290: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.2449483722448349
    2. 'self' → logprob: -2.619948387145996
    3. 'def' → logprob: -2.744948387145996
    4. '''' → logprob: -3.744948387145996
    5. 'None' → logprob: -4.244948387145996
    6. '   ' → logprob: -4.619948387145996
    7. ' empty' → logprob: -4.994948387145996
    8. 'while' → logprob: -5.369948387145996
    9. '(empty' → logprob: -5.619948387145996
    10. '#' → logprob: -5.869948387145996

Token 1291: ' |' (ID: 1022)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19095247983932495
    2. 'ch' → logprob: -2.3159525394439697
    3. 'def' → logprob: -2.8159525394439697
    4. 'if' → logprob: -5.065952301025391
    5. '   ' → logprob: -5.565952301025391
    6. ' if' → logprob: -6.315952301025391
    7. ' ch' → logprob: -6.690952301025391
    8. '```' → logprob: -7.315952301025391
    9. ' def' → logprob: -7.815952301025391
    10. ',ch' → logprob: -8.44095230102539

Token 1292: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6910367608070374
    2. ''' → logprob: -1.1910367012023926
    3. '0' → logprob: -2.9410367012023926
    4. ' self' → logprob: -3.1910367012023926
    5. '('' → logprob: -3.1910367012023926
    6. ' '' → logprob: -3.4410367012023926
    7. ' ' → logprob: -5.066036701202393
    8. '   ' → logprob: -5.191036701202393
    9. ' (' → logprob: -5.441036701202393
    10. 'def' → logprob: -5.816036701202393

Token 1293: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1366390436887741
    2. '0' → logprob: -2.88663911819458
    3. ''' → logprob: -3.38663911819458
    4. 'def' → logprob: -3.76163911819458
    5. '('' → logprob: -4.88663911819458
    6. ' self' → logprob: -6.38663911819458
    7. '(' → logprob: -6.51163911819458
    8. '(self' → logprob: -6.76163911819458
    9. '   ' → logprob: -6.88663911819458
    10. 'ch' → logprob: -7.51163911819458

Token 1294: 'B' (ID: 33)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.016512172296643257
    2. 'B' → logprob: -4.141512393951416
    3. ' |' → logprob: -8.016511917114258
    4. '0' → logprob: -9.641511917114258
    5. ' B' → logprob: -10.766511917114258
    6. '       ' → logprob: -11.266511917114258
    7. '[' → logprob: -11.391511917114258
    8. '[B' → logprob: -11.391511917114258
    9. 'or' → logprob: -12.141511917114258
    10. '
' → logprob: -12.641511917114258

Token 1295: ' |' (ID: 1022)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17500588297843933
    2. 'def' → logprob: -2.3000059127807617
    3. '           ' → logprob: -3.9250059127807617
    4. 'ch' → logprob: -4.425005912780762
    5. 'while' → logprob: -4.425005912780762
    6. '```' → logprob: -5.050005912780762
    7. 'if' → logprob: -5.800005912780762
    8. '   ' → logprob: -5.800005912780762
    9. ' while' → logprob: -7.300005912780762
    10. '               ' → logprob: -7.425005912780762

Token 1296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30639588832855225
    2. ' ' → logprob: -2.056396007537842
    3. '       ' → logprob: -2.056396007537842
    4. ''' → logprob: -5.681396007537842
    5. '0' → logprob: -6.806396007537842
    6. '   ' → logprob: -6.931396007537842
    7. '           ' → logprob: -7.306396007537842
    8. ' ' → logprob: -7.306396007537842
    9. '        ' → logprob: -8.056395530700684
    10. ' '' → logprob: -8.681395530700684

Token 1297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ''' → logprob: -10.375035285949707
    3. ' ' → logprob: -12.875035285949707
    4. '   ' → logprob: -14.500035285949707
    5. '`' → logprob: -14.625035285949707
    6. '0' → logprob: -15.375035285949707
    7. '
' → logprob: -15.500035285949707
    8. 'def' → logprob: -16.125036239624023
    9. '       ' → logprob: -16.250036239624023
    10. '"' → logprob: -16.250036239624023

Token 1298: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09410692751407623
    2. 'self' → logprob: -2.969106912612915
    3. '       ' → logprob: -3.719106912612915
    4. 'def' → logprob: -4.719107151031494
    5. 'while' → logprob: -5.844107151031494
    6. '   ' → logprob: -7.594107151031494
    7. ' B' → logprob: -7.719107151031494
    8. '           ' → logprob: -8.094106674194336
    9. '(self' → logprob: -8.844106674194336
    10. '        
' → logprob: -8.844106674194336

Token 1299: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3915417194366455
    2. 'ch' → logprob: -1.1415417194366455
    3. 'if' → logprob: -6.266541481018066
    4. 'def' → logprob: -6.891541481018066
    5. ' ch' → logprob: -7.016541481018066
    6. '   ' → logprob: -7.891541481018066
    7. '```' → logprob: -8.891541481018066
    8. '	ch' → logprob: -9.141541481018066
    9. '(ch' → logprob: -9.516541481018066
    10. ' if' → logprob: -9.516541481018066

Token 1300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3922087550163269
    2. 'ch' → logprob: -1.1422088146209717
    3. 'def' → logprob: -5.767208576202393
    4. 'if' → logprob: -6.767208576202393
    5. '   ' → logprob: -7.392208576202393
    6. ' ch' → logprob: -8.64220905303955
    7. '```' → logprob: -8.76720905303955
    8. '	ch' → logprob: -10.64220905303955
    9. ' if' → logprob: -10.89220905303955
    10. '(ch' → logprob: -11.01720905303955

Token 1301: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.02450619824230671
    2. 'if' → logprob: -3.899506092071533
    3. '       ' → logprob: -5.649506092071533
    4. 'def' → logprob: -8.524506568908691
    5. 'c' → logprob: -8.649506568908691
    6. 'start' → logprob: -10.774506568908691
    7. '#' → logprob: -11.274506568908691
    8. '   ' → logprob: -11.399506568908691
    9. '```' → logprob: -12.399506568908691
    10. ' ch' → logprob: -12.774506568908691

Token 1302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768232345581055
    2. '=' → logprob: -0.8268232345581055
    3. '=self' → logprob: -7.0768232345581055
    4. '       ' → logprob: -10.701823234558105
    5. 'self' → logprob: -12.201823234558105
    6. '   ' → logprob: -12.451823234558105
    7. ' ' → logprob: -12.826823234558105
    8. 'def' → logprob: -13.326823234558105
    9. '           ' → logprob: -13.701823234558105
    10. 'if' → logprob: -14.201823234558105

Token 1303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004942946252413094
    2. ' self' → logprob: -7.625494480133057
    3. '       ' → logprob: -12.375494003295898
    4. 'None' → logprob: -14.000494003295898
    5. '(self' → logprob: -14.625494003295898
    6. '   ' → logprob: -15.875494003295898
    7. '`' → logprob: -16.2504940032959
    8. ' ' → logprob: -16.2504940032959
    9. '
' → logprob: -16.3754940032959
    10. '```' → logprob: -16.7504940032959

Token 1304: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.4754050374031067
    2. '.consume' → logprob: -0.9754050374031067
    3. 'peek' → logprob: -7.475405216217041
    4. 'consume' → logprob: -7.975405216217041
    5. '.parse' → logprob: -8.100404739379883
    6. '.' → logprob: -10.225404739379883
    7. '.expect' → logprob: -10.475404739379883
    8. '   ' → logprob: -10.475404739379883
    9. ' .' → logprob: -12.100404739379883
    10. '.pos' → logprob: -12.975404739379883

Token 1305: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011766872368752956
    2. '()
' → logprob: -5.3867669105529785
    3. 'if' → logprob: -5.6367669105529785
    4. '()' → logprob: -6.0117669105529785
    5. 'def' → logprob: -7.2617669105529785
    6. 'while' → logprob: -9.01176643371582
    7. ' if' → logprob: -9.76176643371582
    8. '   ' → logprob: -10.26176643371582
    9. '():
' → logprob: -10.63676643371582
    10. ':
' → logprob: -10.63676643371582

Token 1306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16103880107402802
    2. 'if' → logprob: -1.9110387563705444
    3. ' if' → logprob: -7.161038875579834
    4. '   ' → logprob: -10.411038398742676
    5. 'def' → logprob: -12.661038398742676
    6. '	if' → logprob: -13.161038398742676
    7. 'If' → logprob: -13.911038398742676
    8. '```' → logprob: -14.036038398742676
    9. '           ' → logprob: -14.786038398742676
    10. 'self' → logprob: -15.036038398742676

Token 1307: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.652451464906335e-05
    2. '       ' → logprob: -11.500016212463379
    3. ' if' → logprob: -12.000016212463379
    4. 'If' → logprob: -16.375017166137695
    5. '   ' → logprob: -18.375017166137695
    6. '	if' → logprob: -18.375017166137695
    7. '
' → logprob: -19.875017166137695
    8. 'def' → logprob: -20.125017166137695
    9. '        
' → logprob: -20.125017166137695
    10. '           ' → logprob: -21.000017166137695

Token 1308: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0009616006282158196
    2. ' ch' → logprob: -7.375961780548096
    3. 'not' → logprob: -8.375961303710938
    4. 'None' → logprob: -9.625961303710938
    5. '   ' → logprob: -11.125961303710938
    6. '       ' → logprob: -11.375961303710938
    7. ' not' → logprob: -12.500961303710938
    8. ''ch' → logprob: -13.000961303710938
    9. ' ' → logprob: -13.875961303710938
    10. '  ' → logprob: -14.000961303710938

Token 1309: '=='' (ID: 20651)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2574978768825531
    2. '==' → logprob: -2.257497787475586
    3. ' is' → logprob: -2.382497787475586
    4. 'not' → logprob: -4.132497787475586
    5. '=='' → logprob: -4.882497787475586
    6. ' not' → logprob: -5.632497787475586
    7. ' ==' → logprob: -6.507497787475586
    8. '       ' → logprob: -7.757497787475586
    9. '()' → logprob: -8.507497787475586
    10. 'in' → logprob: -8.632497787475586

Token 1310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009760694578289986
    2. ''' → logprob: -4.634760856628418
    3. '('' → logprob: -12.884760856628418
    4. ' ' → logprob: -13.884760856628418
    5. ' '' → logprob: -14.384760856628418
    6. '`' → logprob: -15.634760856628418
    7. '"' → logprob: -16.0097599029541
    8. '(' → logprob: -16.3847599029541
    9. '1' → logprob: -16.8847599029541
    10. '   ' → logprob: -17.0097599029541

Token 1311: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23644545674324036
    2. '           ' → logprob: -2.236445426940918
    3. '       ' → logprob: -3.361445426940918
    4. '':
' → logprob: -3.611445426940918
    5. ':' → logprob: -4.236445426940918
    6. '):
' → logprob: -4.361445426940918
    7. ''):
' → logprob: -4.861445426940918
    8. '0' → logprob: -6.236445426940918
    9. '':' → logprob: -6.361445426940918
    10. '():
' → logprob: -6.986445426940918

Token 1312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014102356508374214
    2. ':
' → logprob: -7.501410007476807
    3. '       ' → logprob: -7.876410007476807
    4. '```' → logprob: -8.626410484313965
    5. 'self' → logprob: -8.751410484313965
    6. '   ' → logprob: -10.126410484313965
    7. ':' → logprob: -10.626410484313965
    8. '{
' → logprob: -10.751410484313965
    9. ' self' → logprob: -11.376410484313965
    10. '):
' → logprob: -11.376410484313965

Token 1313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06396223604679108
    2. '       ' → logprob: -2.93896222114563
    3. '           ' → logprob: -4.813962459564209
    4. ' self' → logprob: -7.188962459564209
    5. '   ' → logprob: -9.18896198272705
    6. '               ' → logprob: -10.43896198272705
    7. '	self' → logprob: -11.56396198272705
    8. '```' → logprob: -12.31396198272705
    9. ' ' → logprob: -12.43896198272705
    10. '
' → logprob: -12.81396198272705

Token 1314: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.26130345463752747
    2. 'consume' → logprob: -1.511303424835205
    3. '       ' → logprob: -5.386303424835205
    4. 'def' → logprob: -6.636303424835205
    5. '```' → logprob: -6.886303424835205
    6. '{
' → logprob: -7.136303424835205
    7. '           ' → logprob: -7.636303424835205
    8. ':
' → logprob: -8.011303901672363
    9. '   ' → logprob: -8.636303901672363
    10. '
' → logprob: -9.011303901672363

Token 1315: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009297349490225315
    2. 'return' → logprob: -5.0092973709106445
    3. '
' → logprob: -6.2592973709106445
    4. '		' → logprob: -8.884297370910645
    5. '<|end|>' → logprob: -9.134297370910645
    6. ' return' → logprob: -9.259297370910645
    7. '<|end|>' → logprob: -9.759297370910645
    8. '()
' → logprob: -10.009297370910645
    9. '()' → logprob: -10.009297370910645
    10. '            
' → logprob: -10.509297370910645

Token 1316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002491118386387825
    2. 'return' → logprob: -6.127490997314453
    3. ' return' → logprob: -8.627490997314453
    4. '
' → logprob: -9.877490997314453
    5. '```' → logprob: -10.252490997314453
    6. '       ' → logprob: -11.877490997314453
    7. 'self' → logprob: -12.127490997314453
    8. '		' → logprob: -12.502490997314453
    9. '   ' → logprob: -12.627490997314453
    10. '               ' → logprob: -12.752490997314453

Token 1317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006628335453569889
    2. '           ' → logprob: -5.131628513336182
    3. '#' → logprob: -7.881628513336182
    4. 'val' → logprob: -8.756628036499023
    5. ' return' → logprob: -9.506628036499023
    6. 'num' → logprob: -10.131628036499023
    7. 'if' → logprob: -10.631628036499023
    8. '
' → logprob: -11.881628036499023
    9. 'while' → logprob: -12.381628036499023
    10. 'count' → logprob: -13.006628036499023

Token 1318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.000001907348633
    4. '  ' → logprob: -20.125001907348633
    5. '۰' → logprob: -20.125001907348633
    6. '    ' → logprob: -21.062501907348633
    7. '       ' → logprob: -21.125001907348633
    8. '           ' → logprob: -21.187501907348633
    9. 'zero' → logprob: -21.250001907348633
    10. '     ' → logprob: -21.375001907348633

Token 1319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.25
    4. '۰' → logprob: -20.1875
    5. '(' → logprob: -20.625
    6. '000' → logprob: -20.75
    7. '           ' → logprob: -20.875
    8. '  ' → logprob: -21.0
    9. '00' → logprob: -21.0625
    10. 'zero' → logprob: -21.25

Token 1320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017484845593571663
    2. 'elif' → logprob: -6.376748561859131
    3. '
' → logprob: -10.626748085021973
    4. '```' → logprob: -12.126748085021973
    5. '   ' → logprob: -12.376748085021973
    6. '           ' → logprob: -12.876748085021973
    7. '0' → logprob: -13.126748085021973
    8. 'if' → logprob: -13.626748085021973
    9. ' elif' → logprob: -13.751748085021973
    10. '        
' → logprob: -14.001748085021973

Token 1321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020764347165822983
    2. 'elif' → logprob: -3.8957643508911133
    3. '```' → logprob: -9.395764350891113
    4. 'if' → logprob: -9.520764350891113
    5. 'else' → logprob: -10.145764350891113
    6. '
' → logprob: -11.395764350891113
    7. '   ' → logprob: -12.145764350891113
    8. ' elif' → logprob: -12.770764350891113
    9. '           ' → logprob: -12.895764350891113
    10. 'el' → logprob: -14.395764350891113

Token 1322: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.08523046970367432
    2. 'if' → logprob: -2.5852303504943848
    3. '       ' → logprob: -5.085230350494385
    4. 'else' → logprob: -8.960230827331543
    5. ' elif' → logprob: -12.585230827331543
    6. '```' → logprob: -14.835230827331543
    7. ' if' → logprob: -15.210230827331543
    8. '   ' → logprob: -15.585230827331543
    9. '
' → logprob: -15.835230827331543
    10. 'el' → logprob: -16.210229873657227

Token 1323: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.000494533043820411
    2. ' ch' → logprob: -7.625494480133057
    3. 'self' → logprob: -12.500494956970215
    4. ''ch' → logprob: -13.250494956970215
    5. '       ' → logprob: -15.250494956970215
    6. '   ' → logprob: -15.875494956970215
    7. '(ch' → logprob: -16.0004940032959
    8. ' self' → logprob: -16.0004940032959
    9. '	ch' → logprob: -16.0004940032959
    10. '           ' → logprob: -16.2504940032959

Token 1324: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0002740906202234328
    2. '==' → logprob: -8.500273704528809
    3. '='' → logprob: -10.625273704528809
    4. ' ==' → logprob: -10.750273704528809
    5. ']=='' → logprob: -11.500273704528809
    6. ' =='' → logprob: -11.750273704528809
    7. ')=='' → logprob: -13.250273704528809
    8. 'def' → logprob: -13.750273704528809
    9. '=="' → logprob: -13.875273704528809
    10. '==='' → logprob: -13.875273704528809

Token 1325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.126930832862854
    2. ''' → logprob: -2.1269307136535645
    3. '`' → logprob: -13.876931190490723
    4. '('' → logprob: -14.001931190490723
    5. ' '' → logprob: -14.876931190490723
    6. '"' → logprob: -15.626931190490723
    7. ' ' → logprob: -16.126930236816406
    8. '['' → logprob: -16.876930236816406
    9. '```' → logprob: -16.876930236816406
    10. '   ' → logprob: -17.126930236816406

Token 1326: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2911986708641052
    2. 'self' → logprob: -1.41619873046875
    3. ':' → logprob: -5.91619873046875
    4. '       ' → logprob: -6.41619873046875
    5. 'def' → logprob: -6.54119873046875
    6. ':
' → logprob: -7.04119873046875
    7. '(self' → logprob: -7.29119873046875
    8. '<|end|>' → logprob: -7.29119873046875
    9. ' self' → logprob: -7.79119873046875
    10. '<|end|>' → logprob: -7.91619873046875

Token 1327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007811574032530189
    2. ':' → logprob: -8.500781059265137
    3. ':
' → logprob: -8.500781059265137
    4. 'self' → logprob: -8.500781059265137
    5. '       ' → logprob: -9.375781059265137
    6. 'def' → logprob: -10.250781059265137
    7. '(self' → logprob: -11.375781059265137
    8. '               ' → logprob: -11.625781059265137
    9. '          ' → logprob: -12.375781059265137
    10. '		' → logprob: -12.375781059265137

Token 1328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007406196556985378
    2. '           ' → logprob: -5.007406234741211
    3. '       ' → logprob: -7.507406234741211
    4. ' self' → logprob: -9.132406234741211
    5. '   ' → logprob: -10.507406234741211
    6. '               ' → logprob: -12.882406234741211
    7. 'def' → logprob: -13.882406234741211
    8. '```' → logprob: -14.257406234741211
    9. '	self' → logprob: -14.382406234741211
    10. ' ' → logprob: -14.632406234741211

Token 1329: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0005579164135269821
    2. 'consume' → logprob: -7.500557899475098
    3. '.' → logprob: -13.000557899475098
    4. '   ' → logprob: -13.125557899475098
    5. '```' → logprob: -15.250557899475098
    6. 'def' → logprob: -16.375558853149414
    7. '.parse' → logprob: -16.500558853149414
    8. '.cons' → logprob: -16.500558853149414
    9. ' consume' → logprob: -16.875558853149414
    10. '       ' → logprob: -17.000558853149414

Token 1330: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005504811182618141
    2. 'while' → logprob: -5.755504608154297
    3. '
' → logprob: -7.380504608154297
    4. '0' → logprob: -7.505504608154297
    5. '1' → logprob: -8.005504608154297
    6. 'val' → logprob: -8.130504608154297
    7. 'def' → logprob: -9.380504608154297
    8. '            
' → logprob: -9.880504608154297
    9. '       ' → logprob: -10.005504608154297
    10. '()' → logprob: -10.255504608154297

Token 1331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007049010135233402
    2. 'while' → logprob: -5.757049083709717
    3. 'val' → logprob: -6.382049083709717
    4. '1' → logprob: -7.757049083709717
    5. '0' → logprob: -8.007048606872559
    6. '		' → logprob: -8.382048606872559
    7. 'def' → logprob: -8.507048606872559
    8. 'b' → logprob: -9.007048606872559
    9. '          ' → logprob: -9.007048606872559
    10. 'return' → logprob: -9.132048606872559

Token 1332: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.5477147698402405
    2. 'num' → logprob: -0.9227147698402405
    3. 'res' → logprob: -4.172714710235596
    4. 'value' → logprob: -5.797714710235596
    5. 'result' → logprob: -7.172714710235596
    6. '#' → logprob: -7.172714710235596
    7. 'bits' → logprob: -7.297714710235596
    8. '       ' → logprob: -7.422714710235596
    9. 'acc' → logprob: -7.547714710235596
    10. '           ' → logprob: -7.797714710235596

Token 1333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018181785941123962
    2. ' =' → logprob: -4.018181800842285
    3. '           ' → logprob: -11.268181800842285
    4. '*=' → logprob: -11.393181800842285
    5. ' <<=' → logprob: -13.018181800842285
    6. 'val' → logprob: -13.768181800842285
    7. '   ' → logprob: -14.143181800842285
    8. '       ' → logprob: -14.143181800842285
    9. ' ' → logprob: -14.393181800842285
    10. '+=' → logprob: -15.393181800842285

Token 1334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0606200210750103
    2. '1' → logprob: -3.435620069503784
    3. 'self' → logprob: -4.310619831085205
    4. 'val' → logprob: -4.435619831085205
    5. '(' → logprob: -7.310619831085205
    6. '(self' → logprob: -8.685620307922363
    7. '(val' → logprob: -9.060620307922363
    8. ' ' → logprob: -9.185620307922363
    9. '   ' → logprob: -9.435620307922363
    10. '
' → logprob: -9.560620307922363

Token 1335: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004760003183037043
    2. 'val' → logprob: -5.754759788513184
    3. 'self' → logprob: -6.504759788513184
    4. '(' → logprob: -10.504759788513184
    5. '1' → logprob: -11.129759788513184
    6. 'parse' → logprob: -11.504759788513184
    7. '
' → logprob: -11.629759788513184
    8. ' ' → logprob: -12.254759788513184
    9. '(self' → logprob: -12.379759788513184
    10. '(val' → logprob: -12.379759788513184

Token 1336: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32864484190940857
    2. '           ' → logprob: -1.953644871711731
    3. '       ' → logprob: -2.5786447525024414
    4. ' while' → logprob: -3.5786447525024414
    5. '
' → logprob: -4.078644752502441
    6. '*' → logprob: -5.328644752502441
    7. '+' → logprob: -5.703644752502441
    8. '	while' → logprob: -6.578644752502441
    9. '<|end|>' → logprob: -6.578644752502441
    10. '<|end|>' → logprob: -7.078644752502441

Token 1337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06335452198982239
    2. '       ' → logprob: -3.0633544921875
    3. 'while' → logprob: -4.3133544921875
    4. '   ' → logprob: -8.0633544921875
    5. '
' → logprob: -8.3133544921875
    6. '```' → logprob: -8.5633544921875
    7. ' while' → logprob: -8.6883544921875
    8. '0' → logprob: -10.0633544921875
    9. '               ' → logprob: -10.0633544921875
    10. '		' → logprob: -10.3133544921875

Token 1338: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004760834388434887
    2. '           ' → logprob: -6.0047607421875
    3. ' while' → logprob: -6.8797607421875
    4. '       ' → logprob: -6.8797607421875
    5. 'val' → logprob: -8.7547607421875
    6. 'ch' → logprob: -10.0047607421875
    7. '
' → logprob: -11.6297607421875
    8. '```' → logprob: -12.6297607421875
    9. '	while' → logprob: -12.6297607421875
    10. 'While' → logprob: -12.7547607421875

Token 1339: ' parse' (ID: 8420)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.4855663721391466e-05
    2. '       ' → logprob: -11.500015258789062
    3. ' while' → logprob: -12.625015258789062
    4. '           ' → logprob: -14.000015258789062
    5. 'While' → logprob: -14.750015258789062
    6. '
' → logprob: -16.750015258789062
    7. 'ch' → logprob: -17.125015258789062
    8. '   ' → logprob: -17.375015258789062
    9. '	while' → logprob: -18.250015258789062
    10. 'val' → logprob: -19.000015258789062

Token 1340: ' B' (ID: 418)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001242847996763885
    2. ' while' → logprob: -7.251242637634277
    3. '       ' → logprob: -7.626242637634277
    4. '           ' → logprob: -10.626242637634277
    5. '
' → logprob: -11.626242637634277
    6. '   ' → logprob: -11.876242637634277
    7. '	while' → logprob: -13.376242637634277
    8. 'ch' → logprob: -14.001242637634277
    9. 'While' → logprob: -14.001242637634277
    10. ' ' → logprob: -14.876242637634277

Token 1341: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.500438928604126
    2. '       ' → logprob: -1.000438928604126
    3. 'ch' → logprob: -3.750438928604126
    4. '           ' → logprob: -6.500438690185547
    5. ' while' → logprob: -7.625438690185547
    6. '   ' → logprob: -8.750438690185547
    7. '```' → logprob: -9.125438690185547
    8. '(ch' → logprob: -10.125438690185547
    9. '
' → logprob: -10.250438690185547
    10. 'if' → logprob: -10.500438690185547

Token 1342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05259524658322334
    2. '       ' → logprob: -3.1775951385498047
    3. 'while' → logprob: -4.677595138549805
    4. '   ' → logprob: -8.802595138549805
    5. ' while' → logprob: -9.677595138549805
    6. '```' → logprob: -11.052595138549805
    7. '               ' → logprob: -12.427595138549805
    8. '		' → logprob: -12.552595138549805
    9. '
' → logprob: -12.552595138549805
    10. '	while' → logprob: -12.677595138549805

Token 1343: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0024535416159778833
    2. 'ch' → logprob: -7.127453327178955
    3. 'if' → logprob: -7.127453327178955
    4. '       ' → logprob: -7.377453327178955
    5. '           ' → logprob: -8.502453804016113
    6. ' while' → logprob: -11.127453804016113
    7. 'While' → logprob: -14.502453804016113
    8. 'c' → logprob: -14.752453804016113
    9. '	while' → logprob: -14.877453804016113
    10. '   ' → logprob: -14.877453804016113

Token 1344: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6400198936462402
    2. 'self' → logprob: -0.7650198936462402
    3. '(True' → logprob: -5.51501989364624
    4. ' True' → logprob: -6.26501989364624
    5. '(self' → logprob: -7.01501989364624
    6. '   ' → logprob: -8.265020370483398
    7. ' self' → logprob: -8.765020370483398
    8. '(' → logprob: -9.390020370483398
    9. '       ' → logprob: -11.390020370483398
    10. 'true' → logprob: -11.390020370483398

Token 1345: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39897722005844116
    2. 'ch' → logprob: -2.023977279663086
    3. '               ' → logprob: -2.148977279663086
    4. ' ch' → logprob: -3.023977279663086
    5. ':' → logprob: -4.273977279663086
    6. ' and' → logprob: -4.773977279663086
    7. ',ch' → logprob: -5.273977279663086
    8. ',' → logprob: -6.523977279663086
    9. 'and' → logprob: -7.148977279663086
    10. '(ch' → logprob: -7.773977279663086

Token 1346: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3183737099170685
    2. 'ch' → logprob: -1.318373680114746
    3. ' ch' → logprob: -5.568373680114746
    4. '               ' → logprob: -6.943373680114746
    5. '	ch' → logprob: -8.943373680114746
    6. '   ' → logprob: -10.068373680114746
    7. '(ch' → logprob: -10.318373680114746
    8. 'if' → logprob: -10.568373680114746
    9. '```' → logprob: -11.068373680114746
    10. 'c' → logprob: -11.318373680114746

Token 1347: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' (adapté à ' ch') → logprob: -0.003723361063748598
    2. 'c' → logprob: -5.62872314453125
    3. 'nc' → logprob: -10.50372314453125
    4. '           ' → logprob: -10.62872314453125
    5. ' ch' → logprob: -10.75372314453125
    6. '               ' → logprob: -11.12872314453125
    7. 'cb' → logprob: -11.87872314453125
    8. 'nb' → logprob: -12.00372314453125
    9. 'next' → logprob: -12.25372314453125
    10. 'n' → logprob: -12.62872314453125

Token 1348: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8286299705505371
    2. ' =' → logprob: -0.8286299705505371
    3. '=self' → logprob: -2.078629970550537
    4. 'self' → logprob: -6.828629970550537
    5. 'in' → logprob: -9.078630447387695
    6. 'if' → logprob: -9.453630447387695
    7. '               ' → logprob: -9.578630447387695
    8. '           ' → logprob: -9.578630447387695
    9. '   ' → logprob: -10.578630447387695
    10. ' in' → logprob: -10.578630447387695

Token 1349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1858246773481369
    2. ' =' → logprob: -1.9358246326446533
    3. '=self' → logprob: -3.6858246326446533
    4. 'self' → logprob: -8.685824394226074
    5. '           ' → logprob: -12.560824394226074
    6. ':=' → logprob: -12.685824394226074
    7. '=
' → logprob: -12.935824394226074
    8. '=sys' → logprob: -12.935824394226074
    9. 'if' → logprob: -13.560824394226074
    10. 'in' → logprob: -13.560824394226074

Token 1350: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8193366486229934e-05
    2. ' self' → logprob: -11.000018119812012
    3. '           ' → logprob: -14.125018119812012
    4. '(self' → logprob: -14.375018119812012
    5. '       ' → logprob: -16.125019073486328
    6. '               ' → logprob: -18.125019073486328
    7. '=self' → logprob: -18.375019073486328
    8. 's' → logprob: -19.000019073486328
    9. '   ' → logprob: -19.625019073486328
    10. '	self' → logprob: -19.625019073486328

Token 1351: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -6.957014556974173e-05
    2. 'peek' → logprob: -9.625069618225098
    3. '.' → logprob: -12.750069618225098
    4. '   ' → logprob: -15.500069618225098
    5. '.pe' → logprob: -15.625069618225098
    6. '       ' → logprob: -17.00006866455078
    7. '.consume' → logprob: -17.00006866455078
    8. '.parse' → logprob: -17.25006866455078
    9. 'def' → logprob: -17.50006866455078
    10. ' .' → logprob: -17.87506866455078

Token 1352: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12429986894130707
    2. ' and' → logprob: -2.7492997646331787
    3. 'if' → logprob: -4.124300003051758
    4. 'and' → logprob: -4.499300003051758
    5. ' if' → logprob: -4.624300003051758
    6. ' in' → logprob: -4.999300003051758
    7. ',' → logprob: -5.749300003051758
    8. '                   ' → logprob: -5.999300003051758
    9. 'in' → logprob: -7.249300003051758
    10. '                ' → logprob: -7.749300003051758

Token 1353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006277294596657157
    2. ' and' → logprob: -8.875627517700195
    3. ' if' → logprob: -9.000627517700195
    4. '           ' → logprob: -9.250627517700195
    5. '```' → logprob: -9.375627517700195
    6. '==' → logprob: -9.875627517700195
    7. ' ==' → logprob: -10.250627517700195
    8. 'if' → logprob: -11.000627517700195
    9. 'and' → logprob: -11.125627517700195
    10. '                   ' → logprob: -11.500627517700195

Token 1354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5376453995704651
    2. '               ' → logprob: -1.0376453399658203
    3. ' if' → logprob: -2.7876453399658203
    4. '           ' → logprob: -11.16264533996582
    5. '                   ' → logprob: -12.28764533996582
    6. '   ' → logprob: -13.66264533996582
    7. '                ' → logprob: -13.91264533996582
    8. ' ' → logprob: -14.28764533996582
    9. '       ' → logprob: -14.53764533996582
    10. '              ' → logprob: -14.66264533996582

Token 1355: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0008066523587331176
    2. ' ch' → logprob: -7.12580680847168
    3. '(ch' → logprob: -13.37580680847168
    4. '	ch' → logprob: -15.12580680847168
    5. 'self' → logprob: -15.25080680847168
    6. '   ' → logprob: -15.62580680847168
    7. ' ' → logprob: -17.12580680847168
    8. '  ' → logprob: -18.00080680847168
    9. 'not' → logprob: -18.12580680847168
    10. '[ch' → logprob: -18.87580680847168

Token 1356: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2148387432098389
    2. '2' → logprob: -1.5898387432098389
    3. '==' → logprob: -1.5898387432098389
    4. 'in' → logprob: -1.7148387432098389
    5. 'is' → logprob: -3.214838743209839
    6. '=='' → logprob: -3.464838743209839
    7. ' is' → logprob: -3.589838743209839
    8. ' ==' → logprob: -4.339838981628418
    9. 'if' → logprob: -7.214838981628418
    10. '!=' → logprob: -7.714838981628418

Token 1357: '=='' (ID: 20651)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.45474952459335327
    2. ' in' → logprob: -1.454749584197998
    3. '=='' → logprob: -2.079749584197998
    4. '==' → logprob: -5.454749584197998
    5. 'is' → logprob: -6.704749584197998
    6. ' is' → logprob: -7.204749584197998
    7. ' ==' → logprob: -7.454749584197998
    8. ' =='' → logprob: -9.45474910736084
    9. '!='' → logprob: -11.07974910736084
    10. 'if' → logprob: -11.57974910736084

Token 1358: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06197541579604149
    2. '0' → logprob: -2.8119754791259766
    3. '
' → logprob: -12.561975479125977
    4. ' '' → logprob: -12.936975479125977
    5. '('' → logprob: -14.186975479125977
    6. '`' → logprob: -14.311975479125977
    7. '1' → logprob: -16.061975479125977
    8. '   ' → logprob: -16.061975479125977
    9. '"' → logprob: -16.561975479125977
    10. '{'' → logprob: -16.936975479125977

Token 1359: '':
' (ID: 7669)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09918984025716782
    2. '                   ' → logprob: -3.0991897583007812
    3. '               ' → logprob: -3.5991897583007812
    4. ':
' → logprob: -4.349189758300781
    5. ':' → logprob: -5.974189758300781
    6. 'or' → logprob: -6.349189758300781
    7. ''or' → logprob: -7.349189758300781
    8. '<|end|>' → logprob: -7.474189758300781
    9. '           ' → logprob: -7.599189758300781
    10. '):
' → logprob: -7.599189758300781

Token 1360: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004323660396039486
    2. '               ' → logprob: -5.504323482513428
    3. '```' → logprob: -9.879323959350586
    4. 'self' → logprob: -10.129323959350586
    5. ':' → logprob: -10.254323959350586
    6. ':
' → logprob: -10.379323959350586
    7. '           ' → logprob: -11.129323959350586
    8. '                       ' → logprob: -11.129323959350586
    9. '                  ' → logprob: -11.254323959350586
    10. '   ' → logprob: -11.254323959350586

Token 1361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18544980883598328
    2. '                   ' → logprob: -1.8104498386383057
    3. ' self' → logprob: -5.310449600219727
    4. '               ' → logprob: -7.435449600219727
    5. '   ' → logprob: -9.935449600219727
    6. '                 ' → logprob: -10.810449600219727
    7. '                       ' → logprob: -10.810449600219727
    8. ' ' → logprob: -10.935449600219727
    9. '
' → logprob: -11.185449600219727
    10. '           ' → logprob: -11.685449600219727

Token 1362: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.0003107943630311638
    2. 'consume' → logprob: -8.125310897827148
    3. '               ' → logprob: -12.250310897827148
    4. '                   ' → logprob: -12.750310897827148
    5. '.' → logprob: -12.875310897827148
    6. '   ' → logprob: -13.125310897827148
    7. '           ' → logprob: -13.375310897827148
    8. ' .' → logprob: -14.750310897827148
    9. '.cons' → logprob: -15.875310897827148
    10. '       ' → logprob: -16.37531089782715

Token 1363: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23462416231632233
    2. 'val' → logprob: -1.8596241474151611
    3. '
' → logprob: -2.984624147415161
    4. '               ' → logprob: -6.85962438583374
    5. ' val' → logprob: -7.23462438583374
    6. '                    
' → logprob: -8.484623908996582
    7. '           ' → logprob: -8.859623908996582
    8. '                    ' → logprob: -9.109623908996582
    9. '                       ' → logprob: -9.109623908996582
    10. '                  ' → logprob: -9.859623908996582

Token 1364: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024326693266630173
    2. 'val' → logprob: -3.774326801300049
    3. '
' → logprob: -7.649326801300049
    4. '               ' → logprob: -7.899326801300049
    5. '                       ' → logprob: -9.27432632446289
    6. ' val' → logprob: -9.77432632446289
    7. '           ' → logprob: -11.14932632446289
    8. '```' → logprob: -11.27432632446289
    9. '                  ' → logprob: -11.52432632446289
    10. '                    ' → logprob: -12.14932632446289

Token 1365: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.002741277450695634
    2. ' val' → logprob: -6.00274133682251
    3. '                   ' → logprob: -8.252740859985352
    4. '               ' → logprob: -13.377740859985352
    5. '	val' → logprob: -13.627740859985352
    6. '   ' → logprob: -15.002740859985352
    7. '.val' → logprob: -15.002740859985352
    8. '
' → logprob: -15.127740859985352
    9. ' ' → logprob: -15.252740859985352
    10. '                  ' → logprob: -15.502740859985352

Token 1366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.042714137583971024
    2. ' =' → logprob: -3.6677141189575195
    3. ' <<=' → logprob: -5.0427141189575195
    4. '<<' → logprob: -5.2927141189575195
    5. '*=' → logprob: -5.4177141189575195
    6. 'val' → logprob: -8.29271411895752
    7. ' val' → logprob: -10.29271411895752
    8. '=
' → logprob: -11.66771411895752
    9. '```' → logprob: -11.66771411895752
    10. '           ' → logprob: -11.79271411895752

Token 1367: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02353975921869278
    2. '(val' → logprob: -3.7735397815704346
    3. ' val' → logprob: -8.523539543151855
    4. '2' → logprob: -10.273539543151855
    5. '(' → logprob: -10.523539543151855
    6. '   ' → logprob: -11.648539543151855
    7. ' (' → logprob: -11.648539543151855
    8. '[val' → logprob: -11.898539543151855
    9. '	val' → logprob: -13.148539543151855
    10. '10' → logprob: -13.148539543151855

Token 1368: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01856519840657711
    2. '<<' → logprob: -4.7685651779174805
    3. ' *' → logprob: -4.8935651779174805
    4. 'val' → logprob: -6.1435651779174805
    5. ' val' → logprob: -8.76856517791748
    6. ' <<' → logprob: -9.89356517791748
    7. '   ' → logprob: -11.51856517791748
    8. '```' → logprob: -11.76856517791748
    9. '=' → logprob: -12.01856517791748
    10. '           ' → logprob: -12.26856517791748

Token 1369: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015312091272789985
    2. '10' → logprob: -8.875153541564941
    3. ' ' → logprob: -11.250153541564941
    4. '   ' → logprob: -16.000152587890625
    5. '
' → logprob: -16.250152587890625
    6. '```' → logprob: -17.500152587890625
    7. '``' → logprob: -18.125152587890625
    8. '=' → logprob: -18.250152587890625
    9. '  ' → logprob: -19.875152587890625
    10. 'binary' → logprob: -20.125152587890625

Token 1370: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5902860760688782
    2. '+' → logprob: -0.9652860760688782
    3. '                   ' → logprob: -2.8402860164642334
    4. '0' → logprob: -5.2152862548828125
    5. '```' → logprob: -8.215286254882812
    6. '               ' → logprob: -8.590286254882812
    7. '           ' → logprob: -9.465286254882812
    8. '|' → logprob: -9.465286254882812
    9. '                       ' → logprob: -9.715286254882812
    10. '                    ' → logprob: -9.715286254882812

Token 1371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.375017166137695
    4. '  ' → logprob: -16.125017166137695
    5. '           ' → logprob: -17.000017166137695
    6. '                   ' → logprob: -17.375017166137695
    7. '       ' → logprob: -17.625017166137695
    8. '               ' → logprob: -18.000017166137695
    9. '     ' → logprob: -18.250017166137695
    10. '    ' → logprob: -18.500017166137695

Token 1372: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1753222793340683
    2. '<|end|>' → logprob: -2.0503222942352295
    3. '                   ' → logprob: -4.30032205581665
    4. 'elif' → logprob: -4.92532205581665
    5. '<|end|>' → logprob: -5.17532205581665
    6. ')' → logprob: -5.55032205581665
    7. '                ' → logprob: -7.55032205581665
    8. '           ' → logprob: -7.92532205581665
    9. '       ' → logprob: -8.925322532653809
    10. ' elif' → logprob: -9.300322532653809

Token 1373: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.057262808084487915
    2. '               ' → logprob: -2.932262897491455
    3. 'self' → logprob: -7.307262897491455
    4. '```' → logprob: -7.432262897491455
    5. '           ' → logprob: -8.307262420654297
    6. '                       ' → logprob: -8.432262420654297
    7. '<|end|>' → logprob: -8.932262420654297
    8. '                  ' → logprob: -9.807262420654297
    9. '                    
' → logprob: -9.807262420654297
    10. '       ' → logprob: -10.057262420654297

Token 1374: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43345290422439575
    2. 'elif' (adapté à ' elif') → logprob: -1.058452844619751
    3. '                   ' → logprob: -5.68345308303833
    4. ' elif' → logprob: -6.80845308303833
    5. 'else' → logprob: -9.433452606201172
    6. '           ' → logprob: -9.933452606201172
    7. '	elif' → logprob: -11.058452606201172
    8. '```' → logprob: -11.183452606201172
    9. '                ' → logprob: -11.558452606201172
    10. '       ' → logprob: -11.558452606201172

Token 1375: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.08129163086414337
    2. ' ch' → logprob: -2.581291675567627
    3. '                   ' → logprob: -6.456291675567627
    4. '               ' → logprob: -7.331291675567627
    5. 'self' → logprob: -8.831291198730469
    6. '	ch' → logprob: -12.081291198730469
    7. ' self' → logprob: -12.331291198730469
    8. '                       ' → logprob: -12.956291198730469
    9. '                  ' → logprob: -12.956291198730469
    10. '              ' → logprob: -13.206291198730469

Token 1376: '2' (ID: 17)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.00032628714689053595
    2. '==' → logprob: -8.125326156616211
    3. ' ==' → logprob: -11.375326156616211
    4. '='' → logprob: -12.250326156616211
    5. ' =='' → logprob: -12.375326156616211
    6. 'elif' → logprob: -12.625326156616211
    7. ']=='' → logprob: -12.875326156616211
    8. '=="' → logprob: -14.125326156616211
    9. ')=='' → logprob: -14.125326156616211
    10. '2' → logprob: -14.250326156616211

Token 1377: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.00030602619517594576
    2. '==' → logprob: -8.125306129455566
    3. ' ==' → logprob: -12.500306129455566
    4. ' =='' → logprob: -13.250306129455566
    5. '==
' → logprob: -13.375306129455566
    6. ']=='' → logprob: -13.875306129455566
    7. '='' → logprob: -13.875306129455566
    8. ')=='' → logprob: -14.625306129455566
    9. '=="' → logprob: -15.500306129455566
    10. '==='' → logprob: -15.750306129455566

Token 1378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ''' → logprob: -10.750021934509277
    3. ' ' → logprob: -16.50002098083496
    4. '   ' → logprob: -17.62502098083496
    5. '`' → logprob: -19.25002098083496
    6. '
' → logprob: -20.50002098083496
    7. '"' → logprob: -20.62502098083496
    8. 'def' → logprob: -20.75002098083496
    9. '')' → logprob: -21.00002098083496
    10. '```' → logprob: -21.12502098083496

Token 1379: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026604365557432175
    2. '               ' → logprob: -3.776604413986206
    3. ':' → logprob: -6.651604175567627
    4. ':
' → logprob: -7.151604175567627
    5. '           ' → logprob: -8.151604652404785
    6. 'self' → logprob: -8.651604652404785
    7. '                       ' → logprob: -8.776604652404785
    8. '(self' → logprob: -9.151604652404785
    9. '                  ' → logprob: -9.401604652404785
    10. '):
' → logprob: -9.526604652404785

Token 1380: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03833465278148651
    2. '               ' → logprob: -3.413334608078003
    3. ':' → logprob: -5.788334846496582
    4. ':
' → logprob: -7.788334846496582
    5. '           ' → logprob: -7.913334846496582
    6. '                       ' → logprob: -8.288334846496582
    7. '                  ' → logprob: -9.163334846496582
    8. '```' → logprob: -9.288334846496582
    9. '{
' → logprob: -9.663334846496582
    10. '                    ' → logprob: -9.663334846496582

Token 1381: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2034427970647812
    2. '                   ' → logprob: -1.7034428119659424
    3. ' self' → logprob: -6.328442573547363
    4. '               ' → logprob: -8.578442573547363
    5. '                       ' → logprob: -10.703442573547363
    6. '           ' → logprob: -11.578442573547363
    7. '[self' → logprob: -11.703442573547363
    8. '	self' → logprob: -12.953442573547363
    9. '```' → logprob: -12.953442573547363
    10. '   ' → logprob: -13.078442573547363

Token 1382: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.00011999329581158236
    2. 'consume' → logprob: -9.125120162963867
    3. '.' → logprob: -11.500120162963867
    4. '.cons' → logprob: -14.375120162963867
    5. '   ' → logprob: -16.000120162963867
    6. '.consumer' → logprob: -16.250120162963867
    7. ' .' → logprob: -16.625120162963867
    8. '_cons' → logprob: -17.000120162963867
    9. ' consume' → logprob: -17.125120162963867
    10. '.collect' → logprob: -17.875120162963867

Token 1383: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019241137197241187
    2. '               ' → logprob: -7.25192403793335
    3. '<|end|>' → logprob: -8.001924514770508
    4. '
' → logprob: -8.376924514770508
    5. '                    ' → logprob: -9.126924514770508
    6. '                       ' → logprob: -9.251924514770508
    7. '           ' → logprob: -9.376924514770508
    8. '                    
' → logprob: -10.001924514770508
    9. '```' → logprob: -10.126924514770508
    10. '()' → logprob: -10.251924514770508

Token 1384: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018838961841538548
    2. '               ' → logprob: -7.2518839836120605
    3. '                       ' → logprob: -7.8768839836120605
    4. '```' → logprob: -9.126883506774902
    5. '                    ' → logprob: -9.251883506774902
    6. '           ' → logprob: -9.376883506774902
    7. '*' → logprob: -10.001883506774902
    8. '                  ' → logprob: -10.001883506774902
    9. '				' → logprob: -10.001883506774902
    10. '0' → logprob: -10.126883506774902

Token 1385: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0037330954801291227
    2. ' val' → logprob: -5.753733158111572
    3. '                   ' → logprob: -7.503733158111572
    4. '               ' → logprob: -12.753732681274414
    5. '	val' → logprob: -14.378732681274414
    6. '           ' → logprob: -15.628732681274414
    7. '_val' → logprob: -16.003732681274414
    8. '.val' → logprob: -16.253732681274414
    9. '                       ' → logprob: -16.503732681274414
    10. '
' → logprob: -16.628732681274414

Token 1386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143400132656097
    2. '=' → logprob: -1.7014340162277222
    3. '                   ' → logprob: -10.951434135437012
    4. '               ' → logprob: -13.951434135437012
    5. '           ' → logprob: -14.076434135437012
    6. ')' → logprob: -15.701434135437012
    7. ' +=' → logprob: -15.826434135437012
    8. '+=' → logprob: -15.826434135437012
    9. '*=' → logprob: -15.951434135437012
    10. '                ' → logprob: -16.076433181762695

Token 1387: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.038062721490859985
    2. ' val' → logprob: -3.288062810897827
    3. '2' → logprob: -11.663063049316406
    4. '   ' → logprob: -12.288063049316406
    5. '(val' → logprob: -13.163063049316406
    6. '  ' → logprob: -13.788063049316406
    7. '	val' → logprob: -13.913063049316406
    8. '           ' → logprob: -14.038063049316406
    9. ' ' → logprob: -14.038063049316406
    10. '                   ' → logprob: -14.163063049316406

Token 1388: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014555037952959538
    2. ' *' → logprob: -4.639554977416992
    3. 'val' → logprob: -5.514554977416992
    4. ' val' → logprob: -7.889554977416992
    5. '1' → logprob: -8.389554977416992
    6. '2' → logprob: -9.264554977416992
    7. '0' → logprob: -10.514554977416992
    8. '
' → logprob: -11.389554977416992
    9. '           ' → logprob: -12.014554977416992
    10. '[val' → logprob: -12.014554977416992

Token 1389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -14.875001907348633
    4. '   ' → logprob: -17.000001907348633
    5. 'int' → logprob: -18.750001907348633
    6. '           ' → logprob: -18.750001907348633
    7. '       ' → logprob: -19.875001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '
' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 1390: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015705463010817766
    2. '                   ' → logprob: -9.000157356262207
    3. ' +' → logprob: -10.500157356262207
    4. '               ' → logprob: -12.250157356262207
    5. '                  ' → logprob: -15.000157356262207
    6. '```' → logprob: -15.375157356262207
    7. '           ' → logprob: -15.750157356262207
    8. ')+' → logprob: -15.875157356262207
    9. '+
' → logprob: -16.37515640258789
    10. '0' → logprob: -16.62515640258789

Token 1391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -19.375
    4. '
' → logprob: -21.625
    5. '0' → logprob: -21.75
    6. '`' → logprob: -21.875
    7. '```' → logprob: -21.875
    8. '           ' → logprob: -22.25
    9. '  ' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 1392: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012317767832428217
    2. '                   ' → logprob: -7.751231670379639
    3. '<|end|>' → logprob: -8.126232147216797
    4. ':' → logprob: -8.376232147216797
    5. '```' → logprob: -9.376232147216797
    6. '<|end|>' → logprob: -9.751232147216797
    7. ')' → logprob: -10.251232147216797
    8. 'else' → logprob: -11.126232147216797
    9. ':
' → logprob: -11.126232147216797
    10. '           ' → logprob: -11.251232147216797

Token 1393: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031981545034796
    2. '                   ' → logprob: -5.878198146820068
    3. '<|end|>' → logprob: -8.753198623657227
    4. '<|end|>' → logprob: -9.128198623657227
    5. '```' → logprob: -10.378198623657227
    6. 'else' → logprob: -10.628198623657227
    7. ':' → logprob: -11.753198623657227
    8. '           ' → logprob: -11.878198623657227
    9. '	               ' → logprob: -12.128198623657227
    10. ')' → logprob: -12.128198623657227

Token 1394: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14452572166919708
    2. '                   ' → logprob: -2.0195257663726807
    3. 'else' (adapté à ' else') → logprob: -6.644525527954102
    4. '```' → logprob: -9.269525527954102
    5. '                       ' → logprob: -9.394525527954102
    6. ' else' → logprob: -9.519525527954102
    7. '           ' → logprob: -9.894525527954102
    8. 'elif' → logprob: -9.894525527954102
    9. ':' → logprob: -10.394525527954102
    10. '	               ' → logprob: -10.769525527954102

Token 1395: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12262257933616638
    2. ':' → logprob: -2.247622489929199
    3. '               ' → logprob: -5.497622489929199
    4. '                       ' → logprob: -5.872622489929199
    5. ':
' → logprob: -6.122622489929199
    6. '           ' → logprob: -8.4976224899292
    7. 'break' → logprob: -8.7476224899292
    8. '                  ' → logprob: -9.7476224899292
    9. '                    ' → logprob: -10.4976224899292
    10. '       ' → logprob: -10.6226224899292

Token 1396: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0068258438259363174
    2. 'break' → logprob: -5.256825923919678
    3. '               ' → logprob: -6.506825923919678
    4. '                       ' → logprob: -10.25682544708252
    5. '           ' → logprob: -10.88182544708252
    6. '_break' → logprob: -11.63182544708252
    7. '   ' → logprob: -11.88182544708252
    8. '                  ' → logprob: -12.25682544708252
    9. '	break' → logprob: -12.25682544708252
    10. ' break' → logprob: -12.25682544708252

Token 1397: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.004134560935199261
    2. '                   ' → logprob: -5.504134654998779
    3. 'return' → logprob: -10.504134178161621
    4. ' break' → logprob: -10.754134178161621
    5. '               ' → logprob: -12.379134178161621
    6. '	break' → logprob: -12.879134178161621
    7. '           ' → logprob: -15.254134178161621
    8. '   ' → logprob: -15.504134178161621
    9. '                       ' → logprob: -16.129135131835938
    10. '_break' → logprob: -16.754135131835938

Token 1398: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001681405701674521
    2. 'return' → logprob: -9.125167846679688
    3. '       ' → logprob: -10.125167846679688
    4. '               ' → logprob: -11.125167846679688
    5. ' return' → logprob: -13.750167846679688
    6. '
' → logprob: -13.750167846679688
    7. '		' → logprob: -13.875167846679688
    8. '                   ' → logprob: -14.625167846679688
    9. '	       ' → logprob: -15.125167846679688
    10. '          ' → logprob: -15.625167846679688

Token 1399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03954039886593819
    2. '               ' → logprob: -3.2895402908325195
    3. '       ' → logprob: -6.7895402908325195
    4. '                   ' → logprob: -8.78954029083252
    5. 'return' → logprob: -8.91454029083252
    6. '
' → logprob: -10.78954029083252
    7. '```' → logprob: -10.78954029083252
    8. '		' → logprob: -10.91454029083252
    9. '	       ' → logprob: -11.91454029083252
    10. ' return' → logprob: -12.66454029083252

Token 1400: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5870984792709351
    2. 'return' (adapté à ' return') → logprob: -0.8370984792709351
    3. '       ' → logprob: -4.587098598480225
    4. ' return' → logprob: -7.587098598480225
    5. '               ' → logprob: -8.087098121643066
    6. '
' → logprob: -9.962098121643066
    7. '   ' → logprob: -11.087098121643066
    8. '	return' → logprob: -11.337098121643066
    9. '                   ' → logprob: -11.462098121643066
    10. '```' → logprob: -11.712098121643066

Token 1401: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.941850526549388e-06
    2. ' val' → logprob: -11.750007629394531
    3. '           ' → logprob: -19.25000762939453
    4. '
' → logprob: -20.12500762939453
    5. '	val' → logprob: -20.12500762939453
    6. '   ' → logprob: -20.25000762939453
    7. '       ' → logprob: -21.62500762939453
    8. '```' → logprob: -22.37500762939453
    9. '[val' → logprob: -22.37500762939453
    10. '(val' → logprob: -22.75000762939453

Token 1402: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005136392544955015
    2. '<|end|>' → logprob: -5.505136489868164
    3. '
' → logprob: -8.130136489868164
    4. 'import' → logprob: -8.380136489868164
    5. '           ' → logprob: -9.130136489868164
    6. 'def' → logprob: -9.255136489868164
    7. '        
' → logprob: -9.380136489868164
    8. '#' → logprob: -9.755136489868164
    9. '```' → logprob: -9.880136489868164
    10. '<|end|>' → logprob: -10.005136489868164

Token 1403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6502293944358826
    2. '<|end|>' → logprob: -0.7752293944358826
    3. '<|end|>' → logprob: -5.400229454040527
    4. '   ' → logprob: -5.525229454040527
    5. 'import' → logprob: -5.775229454040527
    6. 'def' → logprob: -6.150229454040527
    7. '
' → logprob: -6.775229454040527
    8. '```' → logprob: -7.150229454040527
    9. '#' → logprob: -7.400229454040527
    10. '           ' → logprob: -7.400229454040527

Token 1404: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002212942810729146
    2. 'else' (adapté à ' else') → logprob: -6.127213001251221
    3. 'raise' → logprob: -11.377212524414062
    4. '           ' → logprob: -11.877212524414062
    5. '   ' → logprob: -12.377212524414062
    6. ' else' → logprob: -12.502212524414062
    7. 'def' → logprob: -14.627212524414062
    8. 'elif' → logprob: -14.752212524414062
    9. '```' → logprob: -15.252212524414062
    10. '               ' → logprob: -15.752212524414062

Token 1405: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016897005261853337
    2. '       ' → logprob: -7.626689910888672
    3. 'raise' → logprob: -7.751689910888672
    4. ':
' → logprob: -7.876689910888672
    5. '   ' → logprob: -9.376689910888672
    6. '	raise' → logprob: -9.626689910888672
    7. ':' → logprob: -9.751689910888672
    8. '          ' → logprob: -9.751689910888672
    9. ' raise' → logprob: -10.376689910888672
    10. '               ' → logprob: -10.626689910888672

Token 1406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01679483987390995
    2. '       ' → logprob: -4.141794681549072
    3. 'raise' → logprob: -7.391794681549072
    4. '   ' → logprob: -9.14179515838623
    5. '	raise' → logprob: -11.01679515838623
    6. '               ' → logprob: -12.01679515838623
    7. '	       ' → logprob: -12.26679515838623
    8. ' raise' → logprob: -12.51679515838623
    9. '		' → logprob: -13.39179515838623
    10. '```' → logprob: -13.89179515838623

Token 1407: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0016016254667192698
    2. '           ' → logprob: -7.001601696014404
    3. ' raise' → logprob: -8.001601219177246
    4. '       ' → logprob: -8.001601219177246
    5. '	raise' → logprob: -11.001601219177246
    6. '   ' → logprob: -13.626601219177246
    7. '_raise' → logprob: -14.126601219177246
    8. 'Raise' → logprob: -14.251601219177246
    9. 'raising' → logprob: -14.751601219177246
    10. 'raises' → logprob: -15.376601219177246

Token 1408: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -3.128163257315464e-07
    2. ' Parse' → logprob: -15.5
    3. '(Parse' → logprob: -17.875
    4. 'Parser' → logprob: -18.875
    5. 'Value' → logprob: -19.625
    6. '_Parse' → logprob: -20.5
    7. 'parse' → logprob: -20.75
    8. '_parse' → logprob: -21.0
    9. 'Raise' → logprob: -22.125
    10. 'Parsing' → logprob: -22.5

Token 1409: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.625
    3. 'Token' → logprob: -17.875
    4. '(Error' → logprob: -19.75
    5. 'error' → logprob: -19.875
    6. 'Parse' → logprob: -20.375
    7. 'Erro' → logprob: -20.5
    8. ' Error' → logprob: -20.625
    9. '	Error' → logprob: -20.625
    10. 'Code' → logprob: -20.875

Token 1410: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00021152703266125172
    2. '(' → logprob: -9.500211715698242
    3. '"' → logprob: -9.625211715698242
    4. '('' → logprob: -10.375211715698242
    5. '("("' → logprob: -10.625211715698242
    6. '("'' → logprob: -11.500211715698242
    7. '('"' → logprob: -13.625211715698242
    8. '(
' → logprob: -13.875211715698242
    9. '(f' → logprob: -14.250211715698242
    10. '       ' → logprob: -14.875211715698242

Token 1411: 'Expected' (ID: 28041)
  Prédit: 'Unexpected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.6320398449897766
    2. '"' → logprob: -0.8820398449897766
    3. 'Expected' → logprob: -3.132039785385132
    4. 'Invalid' → logprob: -5.132040023803711
    5. 'f' → logprob: -5.507040023803711
    6. ''' → logprob: -8.382040023803711
    7. 'self' → logprob: -8.507040023803711
    8. 'Value' → logprob: -8.507040023803711
    9. 'Syntax' → logprob: -9.007040023803711
    10. 'Parse' → logprob: -9.757040023803711

Token 1412: ' number' (ID: 2086)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12457850575447083
    2. 'self' → logprob: -2.2495784759521484
    3. ' '' → logprob: -5.374578475952148
    4. '('' → logprob: -5.499578475952148
    5. ''N' → logprob: -6.999578475952148
    6. ' self' → logprob: -7.124578475952148
    7. 'a' → logprob: -8.249578475952148
    8. ''s' → logprob: -8.499578475952148
    9. 'digit' → logprob: -8.499578475952148
    10. ''a' → logprob: -8.874578475952148

Token 1413: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.024811390787363052
    2. 'at' → logprob: -3.8998115062713623
    3. '       ' → logprob: -6.399811267852783
    4. ' or' → logprob: -6.899811267852783
    5. '")' → logprob: -7.649811267852783
    6. '   ' → logprob: -8.024811744689941
    7. ')' → logprob: -8.399811744689941
    8. ',' → logprob: -9.399811744689941
    9. ''' → logprob: -9.524811744689941
    10. '"' → logprob: -9.899811744689941

Token 1414: ' pos' (ID: 1253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02341201901435852
    2. 'pos' → logprob: -3.773411989212036
    3. ' self' → logprob: -8.898411750793457
    4. '{' → logprob: -11.648411750793457
    5. '{"' → logprob: -12.523411750793457
    6. ' pos' → logprob: -12.773411750793457
    7. 'position' → logprob: -12.898411750793457
    8. 'def' → logprob: -13.398411750793457
    9. '{
' → logprob: -13.523411750793457
    10. 'parse' → logprob: -13.648411750793457

Token 1415: ' {}".' (ID: 51417)
  Prédit: '{}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}".' → logprob: -0.015436949208378792
    2. 'self' → logprob: -5.140437126159668
    3. ' {}".' → logprob: -5.265437126159668
    4. '{' → logprob: -5.640437126159668
    5. '{}'.' → logprob: -8.140437126159668
    6. '{}' → logprob: -8.265437126159668
    7. ' self' → logprob: -9.015437126159668
    8. '{}",' → logprob: -10.015437126159668
    9. '"' → logprob: -11.515437126159668
    10. '{}\' → logprob: -12.265437126159668

Token 1416: 'format' (ID: 4078)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.829823102336377e-05
    2. ' self' → logprob: -9.37509822845459
    3. '0' → logprob: -11.87509822845459
    4. '(self' → logprob: -13.12509822845459
    5. '{' → logprob: -13.75009822845459
    6. '```' → logprob: -13.75009822845459
    7. '       ' → logprob: -14.00009822845459
    8. '
' → logprob: -14.87509822845459
    9. ')' → logprob: -15.75009822845459
    10. '           ' → logprob: -15.87509822845459

Token 1417: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020869735162705183
    2. '(self' → logprob: -6.252087116241455
    3. ' self' → logprob: -8.877086639404297
    4. '       ' → logprob: -12.127086639404297
    5. ')' → logprob: -12.377086639404297
    6. '           ' → logprob: -12.502086639404297
    7. '{' → logprob: -12.877086639404297
    8. ' (' → logprob: -14.502086639404297
    9. '
' → logprob: -14.627086639404297
    10. '   ' → logprob: -14.877086639404297

Token 1418: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -7.541112427134067e-05
    2. 'pos' → logprob: -9.500075340270996
    3. '.' → logprob: -15.000075340270996
    4. '.position' → logprob: -16.375076293945312
    5. '       ' → logprob: -17.000076293945312
    6. ').' → logprob: -17.625076293945312
    7. '	pos' → logprob: -17.875076293945312
    8. '.val' → logprob: -18.000076293945312
    9. '   ' → logprob: -18.125076293945312
    10. ' .' → logprob: -18.625076293945312

Token 1419: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005419446621090174
    2. ')")' → logprob: -5.6304192543029785
    3. '       ' → logprob: -6.6304192543029785
    4. '))' → logprob: -8.005419731140137
    5. '")' → logprob: -9.130419731140137
    6. ')}' → logprob: -10.505419731140137
    7. '   ' → logprob: -11.505419731140137
    8. '')' → logprob: -12.255419731140137
    9. '}")' → logprob: -13.005419731140137
    10. ' )' → logprob: -13.130419731140137

Token 1420: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020136944949626923
    2. 'allowed' → logprob: -7.752013683319092
    3. 'import' → logprob: -7.877013683319092
    4. '#' → logprob: -8.12701416015625
    5. 'letters' → logprob: -8.87701416015625
    6. 'orig' → logprob: -9.00201416015625
    7. 'input' → logprob: -9.50201416015625
    8. ']' → logprob: -9.50201416015625
    9. 'OR' → logprob: -9.62701416015625
    10. 'AL' → logprob: -9.62701416015625

Token 1421: ' main' (ID: 2758)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4574999511241913
    2. 'main' → logprob: -1.8324999809265137
    3. 'solve' → logprob: -2.2074999809265137
    4. ' main' → logprob: -3.4574999809265137
    5. ' count' → logprob: -3.9574999809265137
    6. ' solve' → logprob: -4.207499980926514
    7. 'back' → logprob: -4.332499980926514
    8. 'possible' → logprob: -5.082499980926514
    9. 'decrypt' → logprob: -5.332499980926514
    10. ' back' → logprob: -6.457499980926514

Token 1422: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000724229437764734
    2. '():
' → logprob: -7.2507243156433105
    3. ' ():' → logprob: -12.000723838806152
    4. '()' → logprob: -12.125723838806152
    5. '(' → logprob: -13.375723838806152
    6. '():
' → logprob: -14.875723838806152
    7. '(argv' → logprob: -15.125723838806152
    8. 'def' → logprob: -16.00072479248047
    9. ':' → logprob: -16.00072479248047
    10. '():

' → logprob: -16.25072479248047

Token 1423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02465798705816269
    2. 'import' → logprob: -3.774657964706421
    3. '```' → logprob: -7.649658203125
    4. 's' → logprob: -7.899658203125
    5. ' import' → logprob: -8.274658203125
    6. 'input' → logprob: -8.399658203125
    7. 'code' → logprob: -10.774658203125
    8. 'n' → logprob: -11.024658203125
    9. '	import' → logprob: -11.774658203125
    10. '   ' → logprob: -11.774658203125

Token 1424: ' expr' (ID: 30206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7095131874084473
    2. '   ' → logprob: -0.7095131874084473
    3. 'import' → logprob: -4.709513187408447
    4. ' s' → logprob: -5.209513187408447
    5. 'S' → logprob: -7.084513187408447
    6. 'input' → logprob: -7.709513187408447
    7. '```' → logprob: -8.334512710571289
    8. ' import' → logprob: -9.209512710571289
    9. ' S' → logprob: -10.084512710571289
    10. ' input' → logprob: -10.459512710571289

Token 1425: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.9504885673522949
    2. ' =' → logprob: -1.075488567352295
    3. '=' → logprob: -1.450488567352295
    4. '_s' → logprob: -4.450488567352295
    5. '=input' → logprob: -4.450488567352295
    6. '_input' → logprob: -4.950488567352295
    7. '=_' → logprob: -6.200488567352295
    8. '=s' → logprob: -7.075488567352295
    9. '=
' → logprob: -7.075488567352295
    10. '_' → logprob: -7.200488567352295

Token 1426: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033963315188884735
    2. ' input' → logprob: -3.533963203430176
    3. 'sys' → logprob: -5.533963203430176
    4. ' sys' → logprob: -8.283963203430176
    5. '   ' → logprob: -14.033963203430176
    6. '(input' → logprob: -15.783963203430176
    7. ' ' → logprob: -16.408964157104492
    8. '	input' → logprob: -16.783964157104492
    9. '=input' → logprob: -17.033964157104492
    10. '(sys' → logprob: -17.533964157104492

Token 1427: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010335094295442104
    2. '.argv' → logprob: -4.8853349685668945
    3. '.' → logprob: -6.1353349685668945
    4. '.readline' → logprob: -8.010334968566895
    5. '.stdout' → logprob: -8.635334968566895
    6. 'stdin' → logprob: -10.385334968566895
    7. '.std' → logprob: -11.885334968566895
    8. '.read' → logprob: -13.135334968566895
    9. '(stdin' → logprob: -13.260334968566895
    10. '._' → logprob: -13.510334968566895

Token 1428: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00033939589047804475
    2. 'read' → logprob: -8.12533950805664
    3. 'buffer' → logprob: -11.25033950805664
    4. ' readline' → logprob: -11.50033950805664
    5. '.read' → logprob: -11.87533950805664
    6. '   ' → logprob: -12.00033950805664
    7. '().' → logprob: -12.87533950805664
    8. '_read' → logprob: -13.37533950805664
    9. 'line' → logprob: -13.87533950805664
    10. '```' → logprob: -14.25033950805664

Token 1429: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002398938377154991
    2. '()' → logprob: -8.375240325927734
    3. '.rstrip' → logprob: -12.250240325927734
    4. '.strip' → logprob: -13.625240325927734
    5. '()
' → logprob: -13.875240325927734
    6. '[:-' → logprob: -14.000240325927734
    7. 'rstrip' → logprob: -14.000240325927734
    8. 'strip' → logprob: -15.250240325927734
    9. '   ' → logprob: -15.625240325927734
    10. '())' → logprob: -16.375240325927734

Token 1430: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014164329506456852
    2. 'rstrip' → logprob: -4.264164447784424
    3. 'read' → logprob: -15.139163970947266
    4. ' strip' → logprob: -15.389163970947266
    5. '(strip' → logprob: -15.764163970947266
    6. '_strip' → logprob: -16.014163970947266
    7. 'decode' → logprob: -17.514163970947266
    8. '```' → logprob: -18.764163970947266
    9. '.rstrip' → logprob: -18.889163970947266
    10. '.strip' → logprob: -19.139163970947266

Token 1431: '('\' (ID: 24345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06983916461467743
    2. 'if' → logprob: -2.9448392391204834
    3. ' if' → logprob: -5.194839000701904
    4. '
' → logprob: -5.569839000701904
    5. 'letters' → logprob: -6.069839000701904
    6. 's' → logprob: -7.194839000701904
    7. 'n' → logprob: -7.444839000701904
    8. 'expr' → logprob: -7.694839000701904
    9. '    
' → logprob: -7.944839000701904
    10. ' letters' → logprob: -8.069839477539062

Token 1432: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. '\n' → logprob: -13.250001907348633
    3. 'r' → logprob: -19.375001907348633
    4. 'newline' → logprob: -19.625001907348633
    5. 't' → logprob: -20.125001907348633
    6. ')' → logprob: -20.875001907348633
    7. 'ndef' → logprob: -21.000001907348633
    8. '')' → logprob: -21.125001907348633
    9. ' n' → logprob: -21.875001907348633
    10. '012' → logprob: -21.875001907348633

Token 1433: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1642751693725586
    2. '')
' → logprob: -2.4142751693725586
    3. ')' → logprob: -3.0392751693725586
    4. '()' → logprob: -4.414275169372559
    5. ')
' → logprob: -6.539275169372559
    6. '())' → logprob: -8.414275169372559
    7. '")' → logprob: -9.164275169372559
    8. ')')
' → logprob: -9.539275169372559
    9. '())
' → logprob: -9.664275169372559
    10. ')\' → logprob: -10.414275169372559

Token 1434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010583776980638504
    2. '
' → logprob: -5.135583877563477
    3. 'letters' → logprob: -5.510583877563477
    4. '    
' → logprob: -7.635583877563477
    5. 'import' → logprob: -9.885583877563477
    6. '#' → logprob: -10.510583877563477
    7. '```' → logprob: -10.885583877563477
    8. 'from' → logprob: -12.010583877563477
    9. 'if' → logprob: -12.760583877563477
    10. ' letters' → logprob: -12.885583877563477

Token 1435: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.026638256385922432
    2. '   ' → logprob: -3.9016382694244385
    3. '#' (adapté à ' #') → logprob: -5.651638031005859
    4. 'letter' → logprob: -6.901638031005859
    5. '
' → logprob: -7.151638031005859
    6. 'from' → logprob: -7.776638031005859
    7. 'import' → logprob: -8.77663803100586
    8. ' letters' → logprob: -10.40163803100586
    9. 'distinct' → logprob: -10.52663803100586
    10. 'def' → logprob: -10.65163803100586

Token 1436: ' Letter' (ID: 36718)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.00781351700425148
    2. '#' → logprob: -5.882813453674316
    3. '   ' → logprob: -6.507813453674316
    4. 'letter' → logprob: -6.757813453674316
    5. 'from' → logprob: -6.882813453674316
    6. 'import' → logprob: -7.507813453674316
    7. 'encrypted' → logprob: -8.132813453674316
    8. '
' → logprob: -8.757813453674316
    9. 'orig' → logprob: -9.632813453674316
    10. 'def' → logprob: -9.882813453674316

Token 1437: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08277762681245804
    2. 'set' → logprob: -2.957777738571167
    3. '_positions' → logprob: -4.332777500152588
    4. 'pos' → logprob: -5.457777500152588
    5. '_set' → logprob: -5.582777500152588
    6. 'positions' → logprob: -5.957777500152588
    7. 'to' → logprob: -7.082777500152588
    8. '_chars' → logprob: -7.582777500152588
    9. 'chars' → logprob: -7.707777500152588
    10. '_pos' → logprob: -7.957777500152588

Token 1438: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3349705934524536
    2. '=' → logprob: -1.8349705934524536
    3. 'letters' → logprob: -2.334970474243164
    4. '_letters' → logprob: -4.334970474243164
    5. 's' → logprob: -5.209970474243164
    6. '   ' → logprob: -5.834970474243164
    7. '=set' → logprob: -5.834970474243164
    8. 'set' → logprob: -6.459970474243164
    9. '_set' → logprob: -6.959970474243164
    10. ' letters' → logprob: -7.209970474243164

Token 1439: ' encrypted' (ID: 47764)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.009854541160166264
    2. 'import' → logprob: -4.759854316711426
    3. 'encrypted' → logprob: -7.634854316711426
    4. ' expr' → logprob: -8.759854316711426
    5. 'set' → logprob: -8.759854316711426
    6. 'letters' → logprob: -9.384854316711426
    7. 'code' → logprob: -9.509854316711426
    8. '
' → logprob: -9.884854316711426
    9. 're' → logprob: -10.384854316711426
    10. 'the' → logprob: -10.634854316711426

Token 1440: ' input' (ID: 3422)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.5675727128982544
    2. '_expr' → logprob: -1.3175727128982544
    3. ' =' → logprob: -2.942572593688965
    4. '_chars' → logprob: -3.317572593688965
    5. 'string' → logprob: -3.817572593688965
    6. 's' → logprob: -3.942572593688965
    7. 'chars' → logprob: -4.567572593688965
    8. '_line' → logprob: -5.317572593688965
    9. 'line' → logprob: -5.442572593688965
    10. '_letters' → logprob: -5.442572593688965

Token 1441: '
' (ID: 198)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.5665977597236633
    2. ' =' → logprob: -1.1915977001190186
    3. '   ' → logprob: -2.6915977001190186
    4. '=' → logprob: -3.1915977001190186
    5. ' letters' → logprob: -4.066597938537598
    6. 's' → logprob: -7.316597938537598
    7. '
' → logprob: -7.441597938537598
    8. 'letter' → logprob: -7.441597938537598
    9. '_letters' → logprob: -7.816597938537598
    10. ':' → logprob: -9.316597938537598

Token 1442: '   ' (ID: 271)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.2325524091720581
    2. '   ' → logprob: -1.607552409172058
    3. ' letters' → logprob: -5.357552528381348
    4. 'letter' → logprob: -6.107552528381348
    5. ' letter' → logprob: -10.357552528381348
    6. '_letters' → logprob: -10.482552528381348
    7. 's' → logprob: -10.732552528381348
    8. 'let' → logprob: -10.857552528381348
    9. '
' → logprob: -11.232552528381348
    10. '```' → logprob: -11.607552528381348

Token 1443: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' (adapté à ' letters') → logprob: -0.0008983621373772621
    2. 'letter' → logprob: -7.125898361206055
    3. ' letters' → logprob: -10.250898361206055
    4. 'import' → logprob: -10.750898361206055
    5. 'enc' → logprob: -11.500898361206055
    6. 'let' → logprob: -11.875898361206055
    7. 'lets' → logprob: -12.500898361206055
    8. 'encrypted' → logprob: -12.500898361206055
    9. 'lett' → logprob: -12.625898361206055
    10. '   ' → logprob: -12.750898361206055

Token 1444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03628077358007431
    2. ' =' → logprob: -3.536280870437622
    3. '=set' → logprob: -5.036280632019043
    4. '=re' → logprob: -12.286280632019043
    5. 'set' → logprob: -13.286280632019043
    6. '_set' → logprob: -13.411280632019043
    7. '   ' → logprob: -13.911280632019043
    8. 's' → logprob: -14.536280632019043
    9. '=
' → logprob: -14.911280632019043
    10. '_=' → logprob: -14.911280632019043

Token 1445: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7643184661865234
    2. 'sorted' → logprob: -1.0143184661865234
    3. '{' → logprob: -1.7643184661865234
    4. '[' → logprob: -8.514318466186523
    5. ' sorted' → logprob: -10.014318466186523
    6. '(sorted' → logprob: -10.514318466186523
    7. '{}
' → logprob: -10.764318466186523
    8. 're' → logprob: -10.889318466186523
    9. '[]
' → logprob: -10.889318466186523
    10. '{s' → logprob: -11.014318466186523

Token 1446: '(ch' (ID: 15574)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5983649492263794
    2. '(ch' → logprob: -1.3483649492263794
    3. '(c' → logprob: -1.8483649492263794
    4. '([' → logprob: -3.47336483001709
    5. 'ch' → logprob: -7.59836483001709
    6. '(expr' → logprob: -7.59836483001709
    7. '(
' → logprob: -7.97336483001709
    8. '()' → logprob: -8.72336483001709
    9. '[ch' → logprob: -8.84836483001709
    10. '()

' → logprob: -8.84836483001709

Token 1447: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4743480980396271
    2. ' for' → logprob: -0.9743480682373047
    3. '   ' → logprob: -8.974348068237305
    4. 'if' → logprob: -9.474348068237305
    5. ' if' → logprob: -11.099348068237305
    6. ' ' → logprob: -11.224348068237305
    7. ' ch' → logprob: -11.849348068237305
    8. '    ' → logprob: -12.224348068237305
    9. '           ' → logprob: -12.349348068237305
    10. ')' → logprob: -12.349348068237305

Token 1448: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03390881419181824
    2. ' ch' → logprob: -3.4089088439941406
    3. 'expr' → logprob: -8.28390884399414
    4. ' expr' → logprob: -13.03390884399414
    5. '_ch' → logprob: -13.40890884399414
    6. '	ch' → logprob: -13.40890884399414
    7. 'c' → logprob: -13.78390884399414
    8. '[ch' → logprob: -13.90890884399414
    9. ' ' → logprob: -14.78390884399414
    10. '
' → logprob: -14.78390884399414

Token 1449: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038058020174503326
    2. 'in' → logprob: -3.288058042526245
    3. 'ch' → logprob: -11.663058280944824
    4. ' ch' → logprob: -12.663058280944824
    5. 'expr' → logprob: -13.288058280944824
    6. ' ' → logprob: -14.413058280944824
    7. 'if' → logprob: -14.413058280944824
    8. 'inp' → logprob: -15.163058280944824
    9. '  ' → logprob: -15.538058280944824
    10. 'import' → logprob: -15.788058280944824

Token 1450: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -2.176947600673884e-05
    2. ' expr' → logprob: -10.750021934509277
    3. '(expr' → logprob: -15.750021934509277
    4. 'express' → logprob: -16.62502098083496
    5. 'expression' → logprob: -19.00002098083496
    6. '
' → logprob: -19.37502098083496
    7. '   ' → logprob: -19.37502098083496
    8. '.expr' → logprob: -19.50002098083496
    9. '_expr' → logprob: -19.62502098083496
    10. 'sys' → logprob: -20.62502098083496

Token 1451: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47416502237319946
    2. 'if' → logprob: -0.9741650223731995
    3. '    ' → logprob: -10.099164962768555
    4. '	if' → logprob: -10.724164962768555
    5. '   ' → logprob: -11.599164962768555
    6. '                ' → logprob: -13.099164962768555
    7. ' in' → logprob: -13.349164962768555
    8. '            ' → logprob: -13.474164962768555
    9. '  ' → logprob: -13.724164962768555
    10. ' ' → logprob: -13.849164962768555

Token 1452: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.4318179488182068
    2. ''ch' → logprob: -1.0568180084228516
    3. ''' → logprob: -6.931818008422852
    4. ''A' → logprob: -7.306818008422852
    5. ''a' → logprob: -7.931818008422852
    6. ' '' → logprob: -8.056818008422852
    7. '('' → logprob: -8.056818008422852
    8. '(ch' → logprob: -8.431818008422852
    9. ' ch' → logprob: -9.056818008422852
    10. '	ch' → logprob: -10.806818008422852

Token 1453: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.05072764307260513
    2. 'is' → logprob: -3.675727605819702
    3. '>' → logprob: -4.425727844238281
    4. 'import' → logprob: -5.550727844238281
    5. '.' → logprob: -5.675727844238281
    6. ' >=' → logprob: -6.800727844238281
    7. '>=' → logprob: -7.175727844238281
    8. ' .' → logprob: -7.425727844238281
    9. '<'' → logprob: -7.425727844238281
    10. ''' → logprob: -8.175727844238281

Token 1454: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.00015979631280060858
    2. 'upper' → logprob: -8.750160217285156
    3. '_alpha' → logprob: -14.125160217285156
    4. 'lower' → logprob: -15.000160217285156
    5. ' alpha' → logprob: -15.875160217285156
    6. 'ascii' → logprob: -17.000160217285156
    7. '(alpha' → logprob: -17.500160217285156
    8. 'al' → logprob: -18.000160217285156
    9. '.alpha' → logprob: -18.125160217285156
    10. 'alphabet' → logprob: -18.375160217285156

Token 1455: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2791350185871124
    2. '())' → logprob: -1.52913498878479
    3. ')
' → logprob: -4.279135227203369
    4. '())
' → logprob: -4.404135227203369
    5. '()' → logprob: -7.904135227203369
    6. '   ' → logprob: -8.279134750366211
    7. ' )' → logprob: -10.154134750366211
    8. 'and' → logprob: -10.654134750366211
    9. ' and' → logprob: -10.779134750366211
    10. ')

' → logprob: -11.529134750366211

Token 1456: '   ' (ID: 271)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.2397732436656952
    2. 'if' → logprob: -2.3647732734680176
    3. '   ' → logprob: -2.6147732734680176
    4. 'letter' → logprob: -3.2397732734680176
    5. ' letters' → logprob: -6.489773273468018
    6. ' if' → logprob: -6.739773273468018
    7. 'chars' → logprob: -6.864773273468018
    8. '#' → logprob: -7.239773273468018
    9. 'orig' → logprob: -7.239773273468018
    10. '
' → logprob: -8.11477279663086

Token 1457: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.06401468068361282
    2. 'if' → logprob: -3.1890146732330322
    3. 'letter' → logprob: -4.189014911651611
    4. 'orig' → logprob: -6.189014911651611
    5. '   ' → logprob: -6.439014911651611
    6. '#' (adapté à ' #') → logprob: -6.814014911651611
    7. 'from' → logprob: -8.064014434814453
    8. 'chars' → logprob: -8.939014434814453
    9. 'def' → logprob: -9.189014434814453
    10. 'c' → logprob: -9.814014434814453

Token 1458: ' If' (ID: 1843)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.3115767240524292
    2. 'from' → logprob: -2.0615768432617188
    3. 'orig' → logprob: -3.1865768432617188
    4. 'if' → logprob: -3.1865768432617188
    5. 'letter' → logprob: -3.5615768432617188
    6. '#' → logprob: -4.186576843261719
    7. 'allowed' → logprob: -5.686576843261719
    8. 'possible' → logprob: -5.811576843261719
    9. 'def' → logprob: -5.936576843261719
    10. 'import' → logprob: -6.561576843261719

Token 1459: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0743381455540657
    2. ' not' → logprob: -3.07433819770813
    3. 'len' → logprob: -3.69933819770813
    4. ' len' → logprob: -7.699337959289551
    5. 'letters' → logprob: -8.44933795928955
    6. '(len' → logprob: -12.07433795928955
    7. ' letters' → logprob: -12.57433795928955
    8. '   ' → logprob: -13.94933795928955
    9. 'n't' → logprob: -14.07433795928955
    10. '(not' → logprob: -14.07433795928955

Token 1460: ' '='' (ID: 98780)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.348675012588501
    2. ' letters' → logprob: -1.223675012588501
    3. 't' → logprob: -8.473674774169922
    4. '_letters' → logprob: -11.848674774169922
    5. ')' → logprob: -13.348674774169922
    6. '>' → logprob: -13.598674774169922
    7. 'len' → logprob: -13.598674774169922
    8. 'letter' → logprob: -13.848674774169922
    9. ' ' → logprob: -13.973674774169922
    10. ' t' → logprob: -14.098674774169922

Token 1461: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.43574008345603943
    2. ' in' → logprob: -1.4357401132583618
    3. 'not' → logprob: -2.6857399940490723
    4. 'in' → logprob: -3.0607399940490723
    5. '   ' → logprob: -9.31074047088623
    6. ':' → logprob: -9.31074047088623
    7. ' ' → logprob: -10.93574047088623
    8. ':
' → logprob: -12.18574047088623
    9. '==' → logprob: -12.31074047088623
    10. 'import' → logprob: -12.31074047088623

Token 1462: ' encrypted' (ID: 47764)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.00028135839966125786
    2. ' expr' → logprob: -8.25028133392334
    3. 'letters' → logprob: -11.12528133392334
    4. 'express' → logprob: -12.37528133392334
    5. 'expression' → logprob: -14.50028133392334
    6. '(expr' → logprob: -15.37528133392334
    7. ' letters' → logprob: -16.000282287597656
    8. '   ' → logprob: -16.625282287597656
    9. 'input' → logprob: -17.125282287597656
    10. '.expr' → logprob: -17.125282287597656

Token 1463: ' input' (ID: 3422)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.008753073401749134
    2. ' expr' → logprob: -4.758753299713135
    3. ' or' → logprob: -10.258752822875977
    4. '(expr' → logprob: -10.633752822875977
    5. ' in' → logprob: -10.758752822875977
    6. 'expression' → logprob: -11.508752822875977
    7. ')' → logprob: -12.008752822875977
    8. 'express' → logprob: -12.133752822875977
    9. 'in' → logprob: -12.133752822875977
    10. '
' → logprob: -12.133752822875977

Token 1464: ' literals' (ID: 193569)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8833173513412476
    2. 'if' → logprob: -1.0083173513412476
    3. ':' → logprob: -2.883317470550537
    4. ':
' → logprob: -3.008317470550537
    5. 'or' → logprob: -3.133317470550537
    6. '   ' → logprob: -3.758317470550537
    7. ' if' → logprob: -4.258317470550537
    8. 'and' → logprob: -4.758317470550537
    9. ' and' → logprob: -5.133317470550537
    10. 'in' → logprob: -5.133317470550537

Token 1465: ',' (ID: 11)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2117178440093994
    2. ' or' → logprob: -1.3367178440093994
    3. ' and' → logprob: -2.0867178440093994
    4. ':' → logprob: -2.8367178440093994
    5. ':
' → logprob: -2.9617178440093994
    6. 'and' → logprob: -2.9617178440093994
    7. '   ' → logprob: -3.2117178440093994
    8. 'not' → logprob: -3.2117178440093994
    9. ' in' → logprob: -3.3367178440093994
    10. 'in' → logprob: -3.9617178440093994

Token 1466: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17103122174739838
    2. 'if' → logprob: -2.5460312366485596
    3. '   ' → logprob: -2.6710312366485596
    4. '#' → logprob: -5.7960309982299805
    5. ' print' → logprob: -5.9210309982299805
    6. 'count' → logprob: -6.7960309982299805
    7. '       ' → logprob: -6.7960309982299805
    8. ' if' → logprob: -7.0460309982299805
    9. 'return' → logprob: -7.4210309982299805
    10. '#print' → logprob: -9.42103099822998

Token 1467: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28370246291160583
    2. 'continue' → logprob: -2.7837023735046387
    3. 'return' → logprob: -2.9087023735046387
    4. 'cannot' → logprob: -3.2837023735046387
    5. '       ' → logprob: -4.033702373504639
    6. '#' → logprob: -4.283702373504639
    7. 'not' → logprob: -4.533702373504639
    8. 'have' → logprob: -4.783702373504639
    9. 'don't' → logprob: -4.783702373504639
    10. 'must' → logprob: -5.158702373504639

Token 1468: ' try' (ID: 2075)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.2516363263130188
    2. 'print' → logprob: -2.001636266708374
    3. 'return' → logprob: -3.001636266708374
    4. 'count' → logprob: -4.751636505126953
    5. ' immediately' → logprob: -5.001636505126953
    6. 'raise' → logprob: -5.251636505126953
    7. '   ' → logprob: -5.376636505126953
    8. '#' → logprob: -5.626636505126953
    9. 'exit' → logprob: -5.876636505126953
    10. 'continue' → logprob: -6.626636505126953

Token 1469: ' letters' (ID: 18151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.189528688788414
    2. 'to' → logprob: -2.814528703689575
    3. 'return' → logprob: -3.814528703689575
    4. 'if' → logprob: -3.814528703689575
    5. 'count' → logprob: -4.189528465270996
    6. 'for' → logprob: -4.189528465270996
    7. 'continue' → logprob: -4.689528465270996
    8. '{
' → logprob: -4.939528465270996
    9. '#' → logprob: -6.189528465270996
    10. '
' → logprob: -6.314528465270996

Token 1470: ' mapped' (ID: 47205)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3006357252597809
    2. '   ' → logprob: -2.425635814666748
    3. '=' → logprob: -3.175635814666748
    4. 'if' → logprob: -3.425635814666748
    5. ' =' → logprob: -3.675635814666748
    6. 'not' → logprob: -4.550635814666748
    7. '
' → logprob: -4.550635814666748
    8. ' in' → logprob: -4.800635814666748
    9. ' if' → logprob: -5.175635814666748
    10. '_in' → logprob: -5.425635814666748

Token 1471: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.41941115260124207
    2. 'in' → logprob: -2.0444111824035645
    3. '=' → logprob: -2.2944111824035645
    4. 'if' → logprob: -3.6694111824035645
    5. ' to' → logprob: -3.7944111824035645
    6. ' =' → logprob: -3.9194111824035645
    7. '_to' → logprob: -4.1694111824035645
    8. ' if' → logprob: -5.4194111824035645
    9. '   ' → logprob: -5.7944111824035645
    10. 'or' → logprob: -5.7944111824035645

Token 1472: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3945152759552002
    2. ''=' → logprob: -1.1445152759552002
    3. '=' → logprob: -6.019515037536621
    4. '['' → logprob: -6.394515037536621
    5. ' '='' → logprob: -7.144515037536621
    6. '{'' → logprob: -7.394515037536621
    7. '('='' → logprob: -7.644515037536621
    8. '[' → logprob: -8.019515037536621
    9. '"' → logprob: -8.019515037536621
    10. ''e' → logprob: -8.394515037536621

Token 1473: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7772053480148315
    2. '   ' → logprob: -0.9022053480148315
    3. ' if' → logprob: -2.402205467224121
    4. '
' → logprob: -3.902205467224121
    5. ':
' → logprob: -5.152205467224121
    6. ':' → logprob: -5.402205467224121
    7. 'and' → logprob: -5.902205467224121
    8. ' and' → logprob: -6.152205467224121
    9. ' or' → logprob: -6.652205467224121
    10. ',' → logprob: -6.902205467224121

Token 1474: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3935057818889618
    2. '   ' → logprob: -1.1435058116912842
    3. ' if' → logprob: -5.268505573272705
    4. '#' → logprob: -7.018505573272705
    5. 'and' → logprob: -8.518506050109863
    6. 'for' → logprob: -9.518506050109863
    7. 'found' → logprob: -10.018506050109863
    8. ':' → logprob: -10.143506050109863
    9. '```' → logprob: -10.518506050109863
    10. '
' → logprob: -10.518506050109863

Token 1475: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022700123488903046
    2. '   ' → logprob: -4.772700309753418
    3. 'has' → logprob: -5.272700309753418
    4. '#' (adapté à ' #') → logprob: -5.897700309753418
    5. 'equal' → logprob: -6.272700309753418
    6. ' if' → logprob: -6.772700309753418
    7. 'possible' → logprob: -7.272700309753418
    8. 'equals' → logprob: -7.397700309753418
    9. 'found' → logprob: -7.772700309753418
    10. 'for' → logprob: -9.022700309753418

Token 1476: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05489887297153473
    2. 'possible' → logprob: -4.054898738861084
    3. '#' → logprob: -4.304898738861084
    4. 'orig' → logprob: -4.804898738861084
    5. 'allowed' → logprob: -5.554898738861084
    6. 'c' → logprob: -5.929898738861084
    7. ' if' → logprob: -6.679898738861084
    8. 'letters' → logprob: -7.054898738861084
    9. 'equal' → logprob: -7.054898738861084
    10. 'candidate' → logprob: -7.429898738861084

Token 1477: ' know' (ID: 1761)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.4230201244354248
    2. 'continue' → logprob: -2.298020124435425
    3. ' need' → logprob: -2.423020124435425
    4. 'must' → logprob: -3.423020124435425
    5. 'have' → logprob: -3.548020124435425
    6. ' must' → logprob: -4.048020362854004
    7. '#' → logprob: -4.423020362854004
    8. 'should' → logprob: -4.673020362854004
    9. ' continue' → logprob: -4.798020362854004
    10. ' =' → logprob: -4.923020362854004

Token 1478: ' original' (ID: 4756)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04768112301826477
    2. ' '='' → logprob: -3.7976810932159424
    3. '('='' → logprob: -5.0476813316345215
    4. ''=' → logprob: -5.1726813316345215
    5. 'expr' → logprob: -5.4226813316345215
    6. '=' → logprob: -6.2976813316345215
    7. 'len' → logprob: -6.4226813316345215
    8. ''e' → logprob: -6.7976813316345215
    9. '"' → logprob: -6.9226813316345215
    10. 'not' → logprob: -7.2976813316345215

Token 1479: ' has' (ID: 853)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.6969732642173767
    2. '_CH' → logprob: -1.1969733238220215
    3. '_letters' → logprob: -1.9469733238220215
    4. '_ch' → logprob: -4.5719733238220215
    5. '_CHAR' → logprob: -4.8219733238220215
    6. '_LE' → logprob: -5.3219733238220215
    7. 'chars' → logprob: -5.3219733238220215
    8. 'letters' → logprob: -5.3219733238220215
    9. '_char' → logprob: -5.4469733238220215
    10. 'CH' → logprob: -5.5719733238220215

Token 1480: ' exactly' (ID: 9707)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.006100731901824474
    2. ' exactly' → logprob: -5.381100654602051
    3. 'one' → logprob: -7.381100654602051
    4. 'only' → logprob: -8.38110065460205
    5. ''' → logprob: -9.00610065460205
    6. 'to' → logprob: -9.13110065460205
    7. '1' → logprob: -9.38110065460205
    8. '   ' → logprob: -9.88110065460205
    9. 'at' → logprob: -10.00610065460205
    10. '=' → logprob: -10.00610065460205

Token 1481: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.38767126202583313
    2. ' one' → logprob: -1.3876712322235107
    3. '1' → logprob: -2.6376712322235107
    4. ' ' → logprob: -9.63767147064209
    5. '=' → logprob: -9.76267147064209
    6. '_one' → logprob: -10.38767147064209
    7. 'exact' → logprob: -11.63767147064209
    8. 'One' → logprob: -12.01267147064209
    9. ' exactly' → logprob: -12.88767147064209
    10. '   ' → logprob: -13.01267147064209

Token 1482: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12909051775932312
    2. '=' → logprob: -2.3790905475616455
    3. ''=' → logprob: -3.6290905475616455
    4. ' '='' → logprob: -7.879090309143066
    5. '"' → logprob: -8.129090309143066
    6. '`' → logprob: -8.254090309143066
    7. 'equal' → logprob: -8.379090309143066
    8. 'equals' → logprob: -8.379090309143066
    9. '('='' → logprob: -8.629090309143066
    10. '=
' → logprob: -8.879090309143066

Token 1483: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22845454514026642
    2. '   ' → logprob: -2.22845458984375
    3. '
' → logprob: -3.22845458984375
    4. ' if' → logprob: -3.60345458984375
    5. '#' → logprob: -3.97845458984375
    6. 'letters' → logprob: -5.97845458984375
    7. '=' → logprob: -6.22845458984375
    8. 'possible' → logprob: -7.35345458984375
    9. 'equal' → logprob: -7.35345458984375
    10. '=
' → logprob: -7.47845458984375

Token 1484: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19623145461082458
    2. '   ' → logprob: -1.821231484413147
    3. '#' → logprob: -4.571231365203857
    4. '
' → logprob: -6.071231365203857
    5. ' if' → logprob: -6.696231365203857
    6. 'orig' → logprob: -7.196231365203857
    7. 'possible' → logprob: -7.821231365203857
    8. 'allowed' → logprob: -8.446231842041016
    9. 'has' → logprob: -8.946231842041016
    10. 'equal' → logprob: -8.946231842041016

Token 1485: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44284412264823914
    2. '#' (adapté à ' #') → logprob: -2.1928441524505615
    3. 'letters' → logprob: -3.0678441524505615
    4. 'possible' → logprob: -3.0678441524505615
    5. 'letter' → logprob: -3.4428441524505615
    6. 'orig' → logprob: -3.6928441524505615
    7. 'c' → logprob: -3.9428441524505615
    8. 'allowed' → logprob: -3.9428441524505615
    9. '   ' → logprob: -4.317843914031982
    10. 'mapping' → logprob: -4.692843914031982

Token 1486: ' prepare' (ID: 13708)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.512911319732666
    2. 'if' → logprob: -1.762911319732666
    3. '#' → logprob: -2.262911319732666
    4. 'letter' → logprob: -3.012911319732666
    5. 'orig' → logprob: -3.262911319732666
    6. 'allowed' → logprob: -5.137911319732666
    7. 'def' → logprob: -5.137911319732666
    8. 'from' → logprob: -5.262911319732666
    9. 'possible' → logprob: -5.262911319732666
    10. 'all' → logprob: -5.637911319732666

Token 1487: ' a' (ID: 261)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.802873969078064
    2. 'from' → logprob: -1.427873969078064
    3. 'letters' → logprob: -1.427873969078064
    4. 'orig' → logprob: -3.4278740882873535
    5. '#' → logprob: -4.3028740882873535
    6. 'import' → logprob: -5.1778740882873535
    7. 'possible' → logprob: -5.1778740882873535
    8. 'c' → logprob: -5.6778740882873535
    9. 'char' → logprob: -6.4278740882873535
    10. 'def' → logprob: -6.8028740882873535

Token 1488: ' mapping' (ID: 22573)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.45007628202438354
    2. 'def' → logprob: -1.0750763416290283
    3. 'letters' → logprob: -5.075076103210449
    4. 'letter' → logprob: -5.450076103210449
    5. '#' → logprob: -5.825076103210449
    6. 'mapping' → logprob: -6.075076103210449
    7. 'counter' → logprob: -6.450076103210449
    8. 'c' → logprob: -6.950076103210449
    9. 'import' → logprob: -7.450076103210449
    10. 'possible' → logprob: -7.450076103210449

Token 1489: ' from' (ID: 591)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.6168144941329956
    2. ' =' → logprob: -0.9918144941329956
    3. 'def' → logprob: -3.366814613342285
    4. 'letters' → logprob: -4.116814613342285
    5. 'from' → logprob: -4.491814613342285
    6. '=' → logprob: -4.741814613342285
    7. ' letter' → logprob: -4.866814613342285
    8. '_letter' → logprob: -5.241814613342285
    9. 'assigned' → logprob: -6.991814613342285
    10. 'char' → logprob: -7.616814613342285

Token 1490: ' letters' (ID: 18151)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.10404878109693527
    2. 'letters' → logprob: -2.354048728942871
    3. ' letter' → logprob: -5.854048728942871
    4. ' letters' → logprob: -7.104048728942871
    5. 'encrypted' → logprob: -9.979048728942871
    6. '_letter' → logprob: -11.104048728942871
    7. 'each' → logprob: -11.229048728942871
    8. 'ord' → logprob: -11.604048728942871
    9. 'Letter' → logprob: -11.854048728942871
    10. 'orig' → logprob: -12.104048728942871

Token 1491: ' ->' (ID: 2747)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5645778179168701
    2. '_to' → logprob: -1.4395778179168701
    3. ' =' → logprob: -1.9395778179168701
    4. '=' → logprob: -3.56457781791687
    5. '{}' → logprob: -5.314578056335449
    6. '_letters' → logprob: -5.689578056335449
    7. '{' → logprob: -5.939578056335449
    8. ' to' → logprob: -5.939578056335449
    9. '_letter' → logprob: -6.439578056335449
    10. '={}' → logprob: -6.814578056335449

Token 1492: ' original' (ID: 4756)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.19669513404369354
    2. '[]' → logprob: -1.82169508934021
    3. '[' → logprob: -5.696695327758789
    4. 'OR' → logprob: -5.821695327758789
    5. '''' → logprob: -5.946695327758789
    6. 'str' → logprob: -6.071695327758789
    7. '{}' → logprob: -6.196695327758789
    8. 'orig' → logprob: -6.821695327758789
    9. '[str' → logprob: -7.571695327758789
    10. ' None' → logprob: -7.821695327758789

Token 1493: ' char' (ID: 1826)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.12516739964485168
    2. '_char' → logprob: -2.6251673698425293
    3. 'chars' → logprob: -3.5001673698425293
    4. 'char' → logprob: -4.250167369842529
    5. '_to' → logprob: -7.750167369842529
    6. '_map' → logprob: -9.125167846679688
    7. 'to' → logprob: -9.750167846679688
    8. '_orig' → logprob: -10.375167846679688
    9. '_mapping' → logprob: -10.625167846679688
    10. ' =' → logprob: -10.625167846679688

Token 1494: '
' (ID: 198)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.19968052208423615
    2. 'letter' → logprob: -2.1996805667877197
    3. 'map' → logprob: -3.3246805667877197
    4. ' =' → logprob: -3.8246805667877197
    5. '=' → logprob: -5.199680328369141
    6. 'assigned' → logprob: -6.574680328369141
    7. 'letters' → logprob: -6.824680328369141
    8. 'assign' → logprob: -7.074680328369141
    9. 'mapped' → logprob: -7.074680328369141
    10. '   ' → logprob: -7.324680328369141

Token 1495: '   ' (ID: 271)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.3474973440170288
    2. 'mapping' → logprob: -1.5974973440170288
    3. 'letters' → logprob: -3.2224974632263184
    4. 'assigned' → logprob: -4.222497463226318
    5. 'map' → logprob: -4.597497463226318
    6. 'possible' → logprob: -4.972497463226318
    7. '   ' → logprob: -5.222497463226318
    8. 'assign' → logprob: -5.347497463226318
    9. 'used' → logprob: -6.097497463226318
    10. 'mapped' → logprob: -6.847497463226318

Token 1496: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7645187377929688
    2. 'letters' → logprob: -0.8895187377929688
    3. 'letter' → logprob: -2.7645187377929688
    4. 'mapping' → logprob: -3.5145187377929688
    5. '#' (adapté à ' #') → logprob: -4.764518737792969
    6. 'possible' → logprob: -4.889518737792969
    7. 'from' → logprob: -5.764518737792969
    8. '   ' → logprob: -5.889518737792969
    9. 'allowed' → logprob: -6.389518737792969
    10. 'orig' → logprob: -7.014518737792969

Token 1497: ' they' (ID: 1023)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.3510511517524719
    2. 'def' → logprob: -2.101051092147827
    3. 'letter' → logprob: -2.226051092147827
    4. 'mapping' → logprob: -2.976051092147827
    5. 'from' → logprob: -5.226051330566406
    6. '#' → logprob: -5.976051330566406
    7. 'used' → logprob: -6.726051330566406
    8. 'assigned' → logprob: -6.726051330566406
    9. 'mapped' → logprob: -6.726051330566406
    10. '   ' → logprob: -6.851051330566406

Token 1498: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40239372849464417
    2. '=' → logprob: -1.1523936986923218
    3. ' are' → logprob: -5.027393817901611
    4. 'are' → logprob: -6.027393817901611
    5. '#' → logprob: -7.277393817901611
    6. 'def' → logprob: -7.277393817901611
    7. '_letters' → logprob: -7.652393817901611
    8. ' will' → logprob: -7.902393817901611
    9. 'size' → logprob: -8.027393341064453
    10. 'will' → logprob: -8.152393341064453

Token 1499: ' be' (ID: 413)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.49774086475372314
    2. 'be' → logprob: -1.1227408647537231
    3. ' be' → logprob: -3.4977407455444336
    4. ' not' → logprob: -3.7477407455444336
    5. '#' → logprob: -5.622740745544434
    6. '_not' → logprob: -6.622740745544434
    7. 'respect' → logprob: -6.747740745544434
    8. 'have' → logprob: -6.872740745544434
    9. 's' → logprob: -7.122740745544434
    10. 'all' → logprob: -7.372740745544434

Token 1500: ' distinct' (ID: 16913)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' → logprob: -0.6333465576171875
    2. 'consistent' → logprob: -1.8833465576171875
    3. 'assigned' → logprob: -2.0083465576171875
    4. 'different' → logprob: -2.3833465576171875
    5. '{}' → logprob: -3.6333465576171875
    6. 'len' → logprob: -4.1333465576171875
    7. ' consistent' → logprob: -4.5083465576171875
    8. 'mapped' → logprob: -4.7583465576171875
    9. ' distinct' → logprob: -5.0083465576171875
    10. 'in' → logprob: -5.7583465576171875

Token 1501: ' chars' (ID: 47991)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7191469669342041
    2. 'mapping' → logprob: -1.094146966934204
    3. 'letters' → logprob: -3.094146966934204
    4. '
' → logprob: -3.594146966934204
    5. '   ' → logprob: -3.719146966934204
    6. '#' → logprob: -4.469146728515625
    7. ' mapping' → logprob: -4.969146728515625
    8. ' =' → logprob: -4.969146728515625
    9. 'assigned' → logprob: -5.094146728515625
    10. 'letter' → logprob: -5.094146728515625

Token 1502: ' chosen' (ID: 16180)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9133471846580505
    2. 'letters' → logprob: -1.4133472442626953
    3. 'mapping' → logprob: -2.2883472442626953
    4. '   ' → logprob: -2.4133472442626953
    5. 'from' → logprob: -3.0383472442626953
    6. 'letter' → logprob: -3.7883472442626953
    7. '
' → logprob: -3.9133472442626953
    8. '#' → logprob: -3.9133472442626953
    9. 'possible' → logprob: -4.163347244262695
    10. 'import' → logprob: -4.663347244262695

Token 1503: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0003397535183466971
    2. ' from' → logprob: -9.00033950805664
    3. '   ' → logprob: -9.12533950805664
    4. '#' → logprob: -10.00033950805664
    5. 'import' → logprob: -10.75033950805664
    6. '=' → logprob: -11.25033950805664
    7. 'for' → logprob: -11.75033950805664
    8. 'among' → logprob: -12.00033950805664
    9. '
' → logprob: -12.12533950805664
    10. 'OR' → logprob: -13.50033950805664

Token 1504: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.002532617887482047
    2. 'set' → logprob: -6.002532482147217
    3. ' OR' → logprob: -10.627532958984375
    4. '['' → logprob: -10.627532958984375
    5. '[' → logprob: -12.127532958984375
    6. ' set' → logprob: -14.002532958984375
    7. 'list' → logprob: -14.377532958984375
    8. '_OR' → logprob: -14.377532958984375
    9. '{' → logprob: -14.877532958984375
    10. ''' → logprob: -15.627532958984375

Token 1505: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -9.150362166110426e-05
    2. 'IGINAL' → logprob: -9.625091552734375
    3. '_' → logprob: -11.500091552734375
    4. 'I' → logprob: -12.000091552734375
    5. '
' → logprob: -12.875091552734375
    6. 'IC' → logprob: -14.250091552734375
    7. '```' → logprob: -14.250091552734375
    8. '`' → logprob: -14.375091552734375
    9. 'C' → logprob: -14.750091552734375
    10. 'IGIN' → logprob: -14.750091552734375

Token 1506: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -5.796184723294573e-06
    2. '_chars' → logprob: -12.875005722045898
    3. '\' → logprob: -13.875005722045898
    4. '```' → logprob: -14.125005722045898
    5. '_CHAR' → logprob: -14.250005722045898
    6. '
' → logprob: -15.625005722045898
    7. 'CH' → logprob: -15.750005722045898
    8. '_UN' → logprob: -16.0000057220459
    9. '`' → logprob: -16.5000057220459
    10. ' _' → logprob: -16.8750057220459

Token 1507: 'ARS' (ID: 25776)
  Prédit: '_CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.2549355924129486
    2. 'ARS' → logprob: -1.504935622215271
    3. 'S' → logprob: -6.1299357414245605
    4. '_AR' → logprob: -8.504935264587402
    5. 'AR' → logprob: -9.129935264587402
    6. '\' → logprob: -9.254935264587402
    7. '_' → logprob: -9.379935264587402
    8. '```' → logprob: -9.504935264587402
    9. '_chars' → logprob: -9.754935264587402
    10. '_CHAR' → logprob: -10.504935264587402

Token 1508: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4820269048213959
    2. 'letters' → logprob: -2.2320268154144287
    3. '   ' → logprob: -2.3570268154144287
    4. 'from' → logprob: -3.2320268154144287
    5. 'mapping' → logprob: -3.2320268154144287
    6. '
' → logprob: -3.4820268154144287
    7. '#' → logprob: -4.107027053833008
    8. 'import' → logprob: -4.232027053833008
    9. ' letters' → logprob: -4.982027053833008
    10. ' def' → logprob: -5.232027053833008

Token 1509: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5067400932312012
    2. '   ' → logprob: -1.2567400932312012
    3. 'mapping' → logprob: -2.881740093231201
    4. ' def' → logprob: -4.631740093231201
    5. 'letters' → logprob: -4.631740093231201
    6. '
' → logprob: -4.631740093231201
    7. 'possible' → logprob: -4.756740093231201
    8. 'allowed' → logprob: -5.756740093231201
    9. '```' → logprob: -6.381740093231201
    10. 'assigned' → logprob: -6.756740093231201

Token 1510: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6692507863044739
    2. 'letters' → logprob: -1.169250726699829
    3. 'from' → logprob: -2.419250726699829
    4. 'possible' → logprob: -4.169250965118408
    5. '#' (adapté à ' #') → logprob: -4.544250965118408
    6. '
' → logprob: -4.544250965118408
    7. 'import' → logprob: -4.794250965118408
    8. 'allowed' → logprob: -4.794250965118408
    9. 'if' → logprob: -4.919250965118408
    10. 'chars' → logprob: -5.044250965118408

Token 1511: ' also' (ID: 1217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6063926219940186
    2. 'letters' → logprob: -1.4813926219940186
    3. 'from' → logprob: -1.8563926219940186
    4. 'import' → logprob: -4.356392860412598
    5. 'orig' → logprob: -4.356392860412598
    6. 'letter' → logprob: -4.856392860412598
    7. 'possible' → logprob: -4.856392860412598
    8. '#' → logprob: -4.981392860412598
    9. 'allowed' → logprob: -5.606392860412598
    10. 'c' → logprob: -5.731392860412598

Token 1512: ' literals' (ID: 193569)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.055466651916504
    2. 'letters' → logprob: -1.430466651916504
    3. 'def' → logprob: -2.305466651916504
    4. '
' → logprob: -2.680466651916504
    5. '#' → logprob: -3.180466651916504
    6. 'import' → logprob: -3.305466651916504
    7. '   ' → logprob: -3.430466651916504
    8. 'letter' → logprob: -3.555466651916504
    9. ' from' → logprob: -3.930466651916504
    10. 'if' → logprob: -3.930466651916504

Token 1513: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5444647073745728
    2. '
' → logprob: -2.044464588165283
    3. '   ' → logprob: -2.044464588165283
    4. ' =' → logprob: -2.794464588165283
    5. ' def' → logprob: -4.294464588165283
    6. '_letters' → logprob: -4.544464588165283
    7. '#' → logprob: -4.794464588165283
    8. 'letters' → logprob: -5.044464588165283
    9. '_chars' → logprob: -5.169464588165283
    10. '_map' → logprob: -5.419464588165283

Token 1514: ' input' (ID: 3422)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.000983862322755158
    2. ' expr' → logprob: -7.000983715057373
    3. 'input' → logprob: -9.750984191894531
    4. 'express' → logprob: -11.750984191894531
    5. 'the' → logprob: -13.500984191894531
    6. 'expression' → logprob: -13.750984191894531
    7. '(expr' → logprob: -14.375984191894531
    8. '#' → logprob: -14.625984191894531
    9. '
' → logprob: -14.625984191894531
    10. 'sys' → logprob: -15.000984191894531

Token 1515: ' must' (ID: 2804)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6957160830497742
    2. ' =' → logprob: -1.695716142654419
    3. '
' → logprob: -2.320716142654419
    4. '_letters' → logprob: -2.445716142654419
    5. '_chars' → logprob: -3.320716142654419
    6. '_used' → logprob: -4.19571590423584
    7. '   ' → logprob: -4.82071590423584
    8. 'chars' → logprob: -4.82071590423584
    9. 'letters' → logprob: -4.82071590423584
    10. '#' → logprob: -4.82071590423584

Token 1516: ' match' (ID: 3981)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.0448431968688965
    2. 'count' → logprob: -1.0448431968688965
    3. 'not' → logprob: -2.1698431968688965
    4. 'appear' → logprob: -2.9198431968688965
    5. 'occur' → logprob: -3.2948431968688965
    6. ' not' → logprob: -4.0448431968688965
    7. 'remain' → logprob: -4.2948431968688965
    8. ' be' → logprob: -4.2948431968688965
    9. '
' → logprob: -4.6698431968688965
    10. 'already' → logprob: -4.9198431968688965

Token 1517: ' original' (ID: 4756)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8604314923286438
    2. '_chars' → logprob: -1.735431432723999
    3. 'chars' → logprob: -2.235431432723999
    4. 'used' → logprob: -2.860431432723999
    5. '_used' → logprob: -3.360431432723999
    6. '
' → logprob: -3.360431432723999
    7. '#' → logprob: -3.610431432723999
    8. '   ' → logprob: -3.985431432723999
    9. 'if' → logprob: -4.235431671142578
    10. 'assigned' → logprob: -4.735431671142578

Token 1518: ' char' (ID: 1826)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5519884824752808
    2. 'def' → logprob: -1.0519884824752808
    3. '
' → logprob: -3.0519886016845703
    4. '_chars' → logprob: -4.80198860168457
    5. '    
' → logprob: -5.80198860168457
    6. ' def' → logprob: -5.92698860168457
    7. '_letters' → logprob: -6.05198860168457
    8. 'chars' → logprob: -6.30198860168457
    9. '```' → logprob: -6.80198860168457
    10. '#' → logprob: -6.92698860168457

Token 1519: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2735932469367981
    2. 'def' → logprob: -2.0235931873321533
    3. '
' → logprob: -2.7735931873321533
    4. '#' → logprob: -4.023593425750732
    5. 'possible' → logprob: -5.148593425750732
    6. 'import' → logprob: -5.898593425750732
    7. 'from' → logprob: -6.023593425750732
    8. 'allowed' → logprob: -6.273593425750732
    9. '    
' → logprob: -6.398593425750732
    10. 'letters' → logprob: -6.523593425750732

Token 1520: ' that' (ID: 484)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.955597996711731
    2. 'same' → logprob: -1.580597996711731
    3. 'the' → logprob: -1.955597996711731
    4. 'their' → logprob: -2.2055978775024414
    5. 'that' → logprob: -2.8305978775024414
    6. 'positions' → logprob: -3.0805978775024414
    7. 'each' → logprob: -3.5805978775024414
    8. 'res' → logprob: -5.080597877502441
    9. 'those' → logprob: -5.580597877502441
    10. 'encrypted' → logprob: -6.080597877502441

Token 1521: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.019287167116999626
    2. 'point' → logprob: -4.394287109375
    3. ' position' → logprob: -5.644287109375
    4. 'pos' → logprob: -6.019287109375
    5. 'token' → logprob: -7.894287109375
    6. 'index' → logprob: -8.394287109375
    7. 'positions' → logprob: -10.519287109375
    8. '
' → logprob: -11.144287109375
    9. '_position' → logprob: -11.144287109375
    10. 'part' → logprob: -11.144287109375

Token 1522: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3040160834789276
    2. 'allowed' → logprob: -2.92901611328125
    3. 'possible' → logprob: -2.92901611328125
    4. '
' → logprob: -3.30401611328125
    5. '#' → logprob: -3.30401611328125
    6. 'orig' → logprob: -4.17901611328125
    7. '   ' → logprob: -4.17901611328125
    8. 'available' → logprob: -4.55401611328125
    9. 'letters' → logprob: -4.55401611328125
    10. 'c' → logprob: -5.30401611328125

Token 1523: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8844887018203735
    2. '   ' → logprob: -1.3844887018203735
    3. 'letters' → logprob: -2.509488582611084
    4. 'from' → logprob: -3.009488582611084
    5. 'c' → logprob: -3.134488582611084
    6. '#' → logprob: -3.509488582611084
    7. 'possible' → logprob: -3.634488582611084
    8. 'allowed' → logprob: -3.634488582611084
    9. 'chars' → logprob: -3.634488582611084
    10. 'orig' → logprob: -4.259488582611084

Token 1524: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0282288789749146
    2. '#' (adapté à ' #') → logprob: -1.7782288789749146
    3. 'letters' → logprob: -1.9032288789749146
    4. 'c' → logprob: -2.653228759765625
    5. 'possible' → logprob: -2.778228759765625
    6. 'from' → logprob: -2.903228759765625
    7. 'letter' → logprob: -3.153228759765625
    8. 'orig' → logprob: -3.528228759765625
    9. 'allowed' → logprob: -4.028228759765625
    10. 'all' → logprob: -4.153228759765625

Token 1525: ' For' (ID: 2214)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.7235070466995239
    2. 'def' → logprob: -1.723507046699524
    3. 'from' → logprob: -1.973507046699524
    4. '#' → logprob: -2.8485069274902344
    5. 'letter' → logprob: -2.8485069274902344
    6. 'if' → logprob: -3.2235069274902344
    7. 'orig' → logprob: -4.223506927490234
    8. '   ' → logprob: -5.223506927490234
    9. 'possible' → logprob: -5.348506927490234
    10. 'import' → logprob: -5.348506927490234

Token 1526: ' each' (ID: 2454)
  Prédit: ' letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.6115630269050598
    2. 'letters' → logprob: -1.736562967300415
    3. ' letter' → logprob: -2.236562967300415
    4. 'from' → logprob: -2.611562967300415
    5. 'import' → logprob: -3.611562967300415
    6. ' from' → logprob: -4.111563205718994
    7. 'letter' → logprob: -4.236563205718994
    8. 'def' → logprob: -4.361563205718994
    9. ' def' → logprob: -4.736563205718994
    10. ' import' → logprob: -4.986563205718994

Token 1527: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.39914608001708984
    2. 'letter' → logprob: -1.2741460800170898
    3. 'def' → logprob: -4.27414608001709
    4. '_letter' → logprob: -5.14914608001709
    5. ' def' → logprob: -5.39914608001709
    6. ')' → logprob: -5.64914608001709
    7. 'ch' → logprob: -6.14914608001709
    8. ' ch' → logprob: -6.27414608001709
    9. 'char' → logprob: -6.89914608001709
    10. 'pos' → logprob: -7.02414608001709

Token 1528: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09866029769182205
    2. 'in' → logprob: -3.2236602306365967
    3. ',' → logprob: -3.3486602306365967
    4. '_in' → logprob: -6.348660469055176
    5. 'for' → logprob: -6.348660469055176
    6. '_index' → logprob: -6.473660469055176
    7. 'def' → logprob: -6.598660469055176
    8. ' ,' → logprob: -6.848660469055176
    9. 'import' → logprob: -7.098660469055176
    10. '
' → logprob: -7.223660469055176

Token 1529: ' candidate' (ID: 17098)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9142265915870667
    2. 'possible' → logprob: -1.5392265319824219
    3. ' possible' → logprob: -2.539226531982422
    4. 'orig' → logprob: -2.789226531982422
    5. 'for' → logprob: -3.164226531982422
    6. '   ' → logprob: -3.164226531982422
    7. ' candidates' → logprob: -3.289226531982422
    8. 'def' → logprob: -4.164226531982422
    9. ' for' → logprob: -4.664226531982422
    10. ' def' → logprob: -4.664226531982422

Token 1530: ' chars' (ID: 47991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5340546369552612
    2. '_chars' → logprob: -0.9090546369552612
    3. '_candidates' → logprob: -5.284054756164551
    4. '_orig' → logprob: -5.659054756164551
    5. 'chars' → logprob: -6.659054756164551
    6. '_sets' → logprob: -8.78405475616455
    7. '_letters' → logprob: -8.78405475616455
    8. '_choices' → logprob: -9.03405475616455
    9. '_original' → logprob: -9.65905475616455
    10. '_tokens' → logprob: -9.78405475616455

Token 1531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27273088693618774
    2. '=' → logprob: -2.522730827331543
    3. '_candidates' → logprob: -2.522730827331543
    4. 's' → logprob: -2.647730827331543
    5. '_map' → logprob: -6.397730827331543
    6. '_list' → logprob: -6.772730827331543
    7. '_possible' → logprob: -7.147730827331543
    8. '_pos' → logprob: -7.522730827331543
    9. 'c' → logprob: -7.897730827331543
    10. '_sets' → logprob: -8.022730827331543

Token 1532: ' OR' (ID: 4917)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.05447788164019585
    2. 'OR' → logprob: -3.0544779300689697
    3. '[' → logprob: -5.929477691650391
    4. ' set' → logprob: -6.804477691650391
    5. '{' → logprob: -6.929477691650391
    6. '['' → logprob: -7.554477691650391
    7. '{'' → logprob: -8.42947769165039
    8. 'list' → logprob: -8.42947769165039
    9. ' OR' → logprob: -9.80447769165039
    10. '[list' → logprob: -11.17947769165039

Token 1533: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.006459801457822323
    2. '_' → logprob: -5.506459712982178
    3. 'I' → logprob: -7.381459712982178
    4. '
' → logprob: -7.631459712982178
    5. 'G' → logprob: -7.881459712982178
    6. 'IC' → logprob: -9.006460189819336
    7. '\' → logprob: -9.256460189819336
    8. ' _' → logprob: -9.256460189819336
    9. '``' → logprob: -9.381460189819336
    10. 'C' → logprob: -9.506460189819336

Token 1534: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -2.4391956685576588e-05
    2. '_chars' → logprob: -11.250024795532227
    3. '_CHAR' → logprob: -12.625024795532227
    4. '```' → logprob: -13.250024795532227
    5. '_C' → logprob: -13.750024795532227
    6. ''_' → logprob: -14.125024795532227
    7. '_CHO' → logprob: -14.125024795532227
    8. '`' → logprob: -14.625024795532227
    9. 'CH' → logprob: -15.000024795532227
    10. '_' → logprob: -15.125024795532227

Token 1535: 'ARS' (ID: 25776)
  Prédit: '_CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.05300777032971382
    2. 'S' → logprob: -3.4280078411102295
    3. 'ARS' → logprob: -4.17800760269165
    4. 'CH' → logprob: -5.92800760269165
    5. 'AR' → logprob: -7.67800760269165
    6. '_chars' → logprob: -8.928008079528809
    7. '_' → logprob: -9.303008079528809
    8. '_CHAR' → logprob: -9.303008079528809
    9. '_AR' → logprob: -9.428008079528809
    10. ' CH' → logprob: -9.553008079528809

Token 1536: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3744081258773804
    2. 's' → logprob: -2.24940824508667
    3. 'import' → logprob: -2.49940824508667
    4. '.copy' → logprob: -2.74940824508667
    5. '   ' → logprob: -2.87440824508667
    6. '_' → logprob: -3.12440824508667
    7. '#' → logprob: -3.24940824508667
    8. '[:]' → logprob: -3.49940824508667
    9. '_candidates' → logprob: -3.74940824508667
    10. 'for' → logprob: -3.87440824508667

Token 1537: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2605228424072266
    2. ' =' → logprob: -1.5105228424072266
    3. 's' → logprob: -2.1355228424072266
    4. '_candidates' → logprob: -2.3855228424072266
    5. '_' → logprob: -2.5105228424072266
    6. '   ' → logprob: -3.2605228424072266
    7. 'S' → logprob: -4.010522842407227
    8. 'for' → logprob: -4.260522842407227
    9. '_possible' → logprob: -4.260522842407227
    10. '#' → logprob: -4.385522842407227

Token 1538: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24394012987613678
    2. 'letter' → logprob: -1.9939401149749756
    3. '
' → logprob: -3.2439401149749756
    4. 'letters' → logprob: -4.368940353393555
    5. '#' (adapté à ' #') → logprob: -4.493940353393555
    6. '   ' → logprob: -4.618940353393555
    7. 'candidate' → logprob: -5.493940353393555
    8. 'cand' → logprob: -6.993940353393555
    9. 'possible' → logprob: -7.618940353393555
    10. '    
' → logprob: -8.118940353393555

Token 1539: ' But' (ID: 3072)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3798442780971527
    2. 'letter' → logprob: -1.504844307899475
    3. '#' → logprob: -3.0048441886901855
    4. 'candidate' → logprob: -4.2548441886901855
    5. 'letters' → logprob: -4.6298441886901855
    6. '   ' → logprob: -5.0048441886901855
    7. 'cand' → logprob: -5.3798441886901855
    8. 'from' → logprob: -5.3798441886901855
    9. '
' → logprob: -6.1298441886901855
    10. 'possible' → logprob: -7.1298441886901855

Token 1540: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4797457456588745
    2. 'for' → logprob: -2.104745864868164
    3. ' for' → logprob: -2.604745864868164
    4. 'len' → logprob: -3.229745864868164
    5. ' all' → logprob: -3.729745864868164
    6. ' #' → logprob: -3.854745864868164
    7. ' not' → logprob: -4.104745864868164
    8. ' we' → logprob: -4.354745864868164
    9. '   ' → logprob: -4.479745864868164
    10. 'all' → logprob: -4.979745864868164

Token 1541: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.5463376641273499
    2. 'must' → logprob: -1.546337604522705
    3. ' need' → logprob: -2.296337604522705
    4. ' must' → logprob: -2.921337604522705
    5. 'have' → logprob: -4.421337604522705
    6. '#' → logprob: -4.546337604522705
    7. 'cannot' → logprob: -4.921337604522705
    8. 'also' → logprob: -5.921337604522705
    9. 'continue' → logprob: -5.921337604522705
    10. 'def' → logprob: -6.046337604522705

Token 1542: ' prune' (ID: 140388)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3344215154647827
    2. 'ref' → logprob: -2.8344216346740723
    3. 'f' → logprob: -2.9594216346740723
    4. 'filter' → logprob: -3.7094216346740723
    5. 'opt' → logprob: -4.084421634674072
    6. '#' → logprob: -4.209421634674072
    7. 'reduce' → logprob: -4.209421634674072
    8. 'use' → logprob: -4.334421634674072
    9. 'n' → logprob: -4.334421634674072
    10. 'implement' → logprob: -4.459421634674072

Token 1543: ' some' (ID: 1236)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.693985104560852
    2. 'for' → logprob: -1.693985104560852
    3. '_candidates' → logprob: -2.1939849853515625
    4. 'def' → logprob: -2.5689849853515625
    5. '_possible' → logprob: -2.6939849853515625
    6. '_letters' → logprob: -2.8189849853515625
    7. 'possible' → logprob: -3.0689849853515625
    8. ' for' → logprob: -3.3189849853515625
    9. '_letter' → logprob: -3.4439849853515625
    10. '_for' → logprob: -3.8189849853515625

Token 1544: ':
' (ID: 734)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8092110753059387
    2. '#' → logprob: -2.184211015701294
    3. 'candidate' → logprob: -2.184211015701294
    4. 'for' → logprob: -2.684211015701294
    5. 'c' → logprob: -3.184211015701294
    6. ' candidates' → logprob: -3.559211015701294
    7. '_candidate' → logprob: -3.809211015701294
    8. '_letter' → logprob: -3.809211015701294
    9. '
' → logprob: -4.184211254119873
    10. '_letters' → logprob: -4.184211254119873

Token 1545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2578892409801483
    2. 'for' → logprob: -1.6328892707824707
    3. '#' → logprob: -4.257889270782471
    4. 'used' → logprob: -5.382889270782471
    5. 'possible' → logprob: -5.882889270782471
    6. 'letter' → logprob: -6.507889270782471
    7. ' for' → logprob: -6.632889270782471
    8. 'c' → logprob: -6.632889270782471
    9. 'if' → logprob: -6.757889270782471
    10. '
' → logprob: -6.882889270782471

Token 1546: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2146220207214355
    2. '   ' → logprob: -1.5896220207214355
    3. 'for' → logprob: -1.7146220207214355
    4. 'letter' → logprob: -2.0896220207214355
    5. 'c' → logprob: -2.2146220207214355
    6. 'possible' → logprob: -4.0896220207214355
    7. 'candidate' → logprob: -4.2146220207214355
    8. 'char' → logprob: -4.4646220207214355
    9. 'cand' → logprob: -4.5896220207214355
    10. 'letters' → logprob: -4.9646220207214355

Token 1547: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5284685492515564
    2. '#' → logprob: -1.9034686088562012
    3. 'possible' → logprob: -2.278468608856201
    4. 'letter' → logprob: -3.278468608856201
    5. 'allowed' → logprob: -3.528468608856201
    6. 'used' → logprob: -4.028468608856201
    7. 'c' → logprob: -4.153468608856201
    8. '   ' → logprob: -4.403468608856201
    9. 'char' → logprob: -4.403468608856201
    10. 'candidate' → logprob: -4.903468608856201

Token 1548: ' same' (ID: 2684)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6962489485740662
    2. ''' → logprob: -1.321249008178711
    3. 'ch' → logprob: -2.321249008178711
    4. 'letter' → logprob: -3.696249008178711
    5. 'any' → logprob: -3.821249008178711
    6. ' ch' → logprob: -4.196249008178711
    7. 'not' → logprob: -4.196249008178711
    8. 'expr' → logprob: -4.321249008178711
    9. 'c' → logprob: -4.696249008178711
    10. ' any' → logprob: -5.196249008178711

Token 1549: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.063819169998169
    2. 'expr' → logprob: -1.563819169998169
    3. 'ch' → logprob: -2.063819169998169
    4. ' letter' → logprob: -2.563819169998169
    5. 'char' → logprob: -2.938819169998169
    6. '_letter' → logprob: -3.063819169998169
    7. 'letters' → logprob: -3.438819169998169
    8. '
' → logprob: -4.06381893157959
    9. '_letters' → logprob: -4.18881893157959
    10. ' ch' → logprob: -4.31381893157959

Token 1550: ' occurs' (ID: 21241)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2622562050819397
    2. ' in' → logprob: -1.637256145477295
    3. 'not' → logprob: -4.012256145477295
    4. 'in' → logprob: -4.512256145477295
    5. '_' → logprob: -6.512256145477295
    6. ' is' → logprob: -6.637256145477295
    7. '_in' → logprob: -7.512256145477295
    8. ' can' → logprob: -7.762256145477295
    9. '_not' → logprob: -7.887256145477295
    10. '```' → logprob: -8.137256622314453

Token 1551: ' multiple' (ID: 7598)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47855663299560547
    2. ' in' → logprob: -1.1035566329956055
    3. ' not' → logprob: -4.3535566329956055
    4. ' at' → logprob: -4.6035566329956055
    5. 'at' → logprob: -4.6035566329956055
    6. 'not' → logprob: -5.1035566329956055
    7. 'ch' → logprob: -6.3535566329956055
    8. ' ch' → logprob: -6.7285566329956055
    9. '```' → logprob: -6.9785566329956055
    10. '_in' → logprob: -7.2285566329956055

Token 1552: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.6821669340133667
    2. ' letters' → logprob: -1.3071669340133667
    3. 'letters' → logprob: -2.4321670532226562
    4. 'positions' → logprob: -3.1821670532226562
    5. 'times' → logprob: -3.5571670532226562
    6. ' positions' → logprob: -4.432167053222656
    7. '=' → logprob: -5.057167053222656
    8. ' occurrences' → logprob: -5.182167053222656
    9. ' lines' → logprob: -5.307167053222656
    10. 'tokens' → logprob: -5.432167053222656

Token 1553: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9469080567359924
    2. ',' → logprob: -1.1969079971313477
    3. 'in' → logprob: -1.8219079971313477
    4. ' at' → logprob: -2.3219079971313477
    5. ':
' → logprob: -4.571907997131348
    6. ',
' → logprob: -5.071907997131348
    7. ':' → logprob: -5.321907997131348
    8. ' for' → logprob: -5.946907997131348
    9. ' and' → logprob: -6.196907997131348
    10. 'at' → logprob: -6.196907997131348

Token 1554: ' must' (ID: 2804)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024656597524881363
    2. '   ' → logprob: -4.024656772613525
    3. 'positions' → logprob: -6.649656772613525
    4. ' #' → logprob: -6.774656772613525
    5. 'for' → logprob: -6.899656772613525
    6. 'letters' → logprob: -7.774656772613525
    7. 'we' → logprob: -7.899656772613525
    8. 'first' → logprob: -8.399656295776367
    9. ' we' → logprob: -8.524656295776367
    10. 'all' → logprob: -8.649656295776367

Token 1555: ' be' (ID: 413)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.536276638507843
    2. 'be' → logprob: -1.1612765789031982
    3. 'match' → logprob: -3.0362765789031982
    4. ' map' → logprob: -3.7862765789031982
    5. ' be' → logprob: -4.536276817321777
    6. 'all' → logprob: -5.036276817321777
    7. 'always' → logprob: -5.536276817321777
    8. 'have' → logprob: -6.036276817321777
    9. 'remain' → logprob: -6.786276817321777
    10. ' all' → logprob: -6.911276817321777

Token 1556: ' consistent' (ID: 20434)
  Prédit: 'mapped'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapped' → logprob: -0.6914687156677246
    2. 'consistent' → logprob: -1.1914687156677246
    3. 'the' → logprob: -2.1914687156677246
    4. 'same' → logprob: -3.6914687156677246
    5. 'assigned' → logprob: -3.8164687156677246
    6. ' consistent' → logprob: -4.316468715667725
    7. 'cons' → logprob: -4.566468715667725
    8. 'all' → logprob: -6.066468715667725
    9. ' mapped' → logprob: -6.066468715667725
    10. ' the' → logprob: -6.316468715667725

Token 1557: ' mapping' (ID: 22573)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4200620651245117
    2. '#' → logprob: -2.0450620651245117
    3. 'def' → logprob: -2.1700620651245117
    4. '
' → logprob: -3.4200620651245117
    5. 'letters' → logprob: -4.295062065124512
    6. 'letter' → logprob: -4.420062065124512
    7. '_letter' → logprob: -4.670062065124512
    8. '```' → logprob: -5.795062065124512
    9. 'char' → logprob: -5.795062065124512
    10. ')
' → logprob: -6.045062065124512

Token 1558: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.547572672367096
    2. '#' → logprob: -2.422572612762451
    3. 'c' → logprob: -2.547572612762451
    4. '
' → logprob: -2.672572612762451
    5. 'letters' → logprob: -2.797572612762451
    6. 'def' → logprob: -3.047572612762451
    7. 'letter' → logprob: -3.672572612762451
    8. '```' → logprob: -4.422572612762451
    9. 'possible' → logprob: -4.922572612762451
    10. 'from' → logprob: -5.297572612762451

Token 1559: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48935481905937195
    2. '   ' → logprob: -0.9893548488616943
    3. '
' → logprob: -5.239354610443115
    4. '#
' → logprob: -6.114354610443115
    5. 'def' → logprob: -6.239354610443115
    6. '```' → logprob: -6.239354610443115
    7. '    
' → logprob: -7.489354610443115
    8. 'for' → logprob: -7.614354610443115
    9. 'candidate' → logprob: -7.989354610443115
    10. ':' → logprob: -8.239355087280273

Token 1560: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.32749027013778687
    2. 'letter' → logprob: -2.0774903297424316
    3. 'c' → logprob: -2.5774903297424316
    4. '   ' → logprob: -3.0774903297424316
    5. '
' → logprob: -4.452490329742432
    6. 'letters' → logprob: -4.827490329742432
    7. 'char' → logprob: -6.202490329742432
    8. 'possible' → logprob: -6.327490329742432
    9. 'for' → logprob: -6.452490329742432
    10. 'from' → logprob: -6.577490329742432

Token 1561: ' literals' (ID: 193569)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.8709133863449097
    2. '#' → logprob: -1.2459133863449097
    3. 'letters' → logprob: -1.7459133863449097
    4. 'c' → logprob: -3.620913505554199
    5. 'possible' → logprob: -3.870913505554199
    6. '   ' → logprob: -4.245913505554199
    7. '
' → logprob: -4.370913505554199
    8. 'def' → logprob: -4.745913505554199
    9. 'char' → logprob: -5.245913505554199
    10. 'orig' → logprob: -5.370913505554199

Token 1562: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5653054714202881
    2. '_in' → logprob: -2.315305471420288
    3. '_positions' → logprob: -2.315305471420288
    4. '_chars' → logprob: -3.315305471420288
    5. 's' → logprob: -3.440305471420288
    6. 'for' → logprob: -3.815305471420288
    7. 'in' → logprob: -4.065305709838867
    8. '_candidates' → logprob: -4.190305709838867
    9. '_map' → logprob: -4.315305709838867
    10. '=' → logprob: -4.565305709838867

Token 1563: ' the' (ID: 290)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7555438280105591
    2. 'expr' → logprob: -0.7555438280105591
    3. 'encrypted' → logprob: -3.0055437088012695
    4. 'the' → logprob: -5.6305437088012695
    5. ' input' → logprob: -6.0055437088012695
    6. 'code' → logprob: -6.7555437088012695
    7. ' expr' → logprob: -6.7555437088012695
    8. 'positions' → logprob: -7.2555437088012695
    9. 'expression' → logprob: -7.3805437088012695
    10. ' encrypted' → logprob: -8.13054370880127

Token 1564: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4401945173740387
    2. 'encrypted' → logprob: -1.3151944875717163
    3. 'expr' → logprob: -2.565194606781006
    4. 'code' → logprob: -5.190194606781006
    5. 'expression' → logprob: -6.440194606781006
    6. '#' → logprob: -6.815194606781006
    7. 'literal' → logprob: -7.440194606781006
    8. ' encrypted' → logprob: -8.315194129943848
    9. 'string' → logprob: -8.315194129943848
    10. ' input' → logprob: -8.565194129943848

Token 1565: ' should' (ID: 1757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1182336807250977
    2. '_positions' → logprob: -1.3682336807250977
    3. '#' → logprob: -2.4932336807250977
    4. '_chars' → logprob: -2.6182336807250977
    5. '_in' → logprob: -2.8682336807250977
    6. 'for' → logprob: -3.3682336807250977
    7. 'positions' → logprob: -3.9932336807250977
    8. 'that' → logprob: -4.243233680725098
    9. 'in' → logprob: -4.243233680725098
    10. '=' → logprob: -4.493233680725098

Token 1566: ' match' (ID: 3981)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5775018334388733
    2. 'not' → logprob: -1.2025017738342285
    3. ' be' → logprob: -3.0775017738342285
    4. 'match' → logprob: -3.8275017738342285
    5. 'be' → logprob: -3.8275017738342285
    6. 'remain' → logprob: -4.7025017738342285
    7. ' in' → logprob: -5.0775017738342285
    8. ' match' → logprob: -5.2025017738342285
    9. 'con' → logprob: -5.3275017738342285
    10. 'appear' → logprob: -5.8275017738342285

Token 1567: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9701393246650696
    2. ' =' → logprob: -1.7201392650604248
    3. '_' → logprob: -2.720139265060425
    4. 'def' → logprob: -2.845139265060425
    5. '#' → logprob: -2.970139265060425
    6. ' for' → logprob: -2.970139265060425
    7. '
' → logprob: -3.220139265060425
    8. '{' → logprob: -3.970139265060425
    9. '```' → logprob: -4.095139503479004
    10. '=' → logprob: -4.220139503479004

Token 1568: ' original' (ID: 4756)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.8092206716537476
    2. 'letters' → logprob: -2.059220790863037
    3. 'encrypted' → logprob: -2.434220790863037
    4. 'mapping' → logprob: -2.684220790863037
    5. 'original' → logprob: -2.934220790863037
    6. ' letter' → logprob: -3.684220790863037
    7. 'mapped' → logprob: -3.934220790863037
    8. 'candidate' → logprob: -4.059220790863037
    9. ' letters' → logprob: -4.184220790863037
    10. ' original' → logprob: -4.434220790863037

Token 1569: ' char' (ID: 1826)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0907805785536766
    2. '_' → logprob: -2.71578049659729
    3. ' _' → logprob: -5.840780735015869
    4. '_CH' → logprob: -5.965780735015869
    5. '_letters' → logprob: -5.965780735015869
    6. '_char' → logprob: -5.965780735015869
    7. '
' → logprob: -6.215780735015869
    8. '_ch' → logprob: -6.840780735015869
    9. '_CHAR' → logprob: -7.215780735015869
    10. '```' → logprob: -7.215780735015869

Token 1570: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6070281267166138
    2. ' =' → logprob: -1.4820281267166138
    3. '_chars' → logprob: -2.732028007507324
    4. 'S' → logprob: -2.982028007507324
    5. '_' → logprob: -3.232028007507324
    6. '
' → logprob: -3.482028007507324
    7. 'def' → logprob: -5.357028007507324
    8. '_
' → logprob: -5.482028007507324
    9. '_candidates' → logprob: -5.482028007507324
    10. '_map' → logprob: -5.857028007507324

Token 1571: ' positions' (ID: 15897)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.24328549206256866
    2. 'the' → logprob: -2.2432854175567627
    3. ' that' → logprob: -3.7432854175567627
    4. 'those' → logprob: -3.8682854175567627
    5. 'positions' → logprob: -4.118285655975342
    6. 'cor' → logprob: -4.618285655975342
    7. 'their' → logprob: -4.618285655975342
    8. 'this' → logprob: -4.868285655975342
    9. 'each' → logprob: -5.243285655975342
    10. 'same' → logprob: -5.243285655975342

Token 1572: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7755065560340881
    2. 's' → logprob: -1.9005064964294434
    3. 'from' → logprob: -3.2755064964294434
    4. '
' → logprob: -3.4005064964294434
    5. ' =' → logprob: -3.4005064964294434
    6. '   ' → logprob: -3.5255064964294434
    7. ' for' → logprob: -3.6505064964294434
    8. 'if' → logprob: -3.6505064964294434
    9. 'def' → logprob: -3.9005064964294434
    10. 'import' → logprob: -3.9005064964294434

Token 1573: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.523417055606842
    2. 'in' → logprob: -1.2734169960021973
    3. 're' → logprob: -2.7734169960021973
    4. 'mapped' → logprob: -3.6484169960021973
    5. 'covered' → logprob: -4.148416996002197
    6. 'occupied' → logprob: -4.648416996002197
    7. 'encrypted' → logprob: -5.773416996002197
    8. '#' → logprob: -6.273416996002197
    9. 'used' → logprob: -6.273416996002197
    10. 'a' → logprob: -6.523416996002197

Token 1574: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5588488578796387
    2. '
' → logprob: -1.1838488578796387
    3. '#' → logprob: -2.8088488578796387
    4. 'def' → logprob: -3.4338488578796387
    5. '```' → logprob: -4.933848857879639
    6. 'letters' → logprob: -5.558848857879639
    7. 'possible' → logprob: -5.683848857879639
    8. '    
' → logprob: -6.558848857879639
    9. 'letter' → logprob: -6.683848857879639
    10. 'available' → logprob: -6.683848857879639

Token 1575: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8196832537651062
    2. '   ' → logprob: -1.194683313369751
    3. 'def' → logprob: -1.944683313369751
    4. 'c' → logprob: -3.319683313369751
    5. 'letters' → logprob: -4.069683074951172
    6. '
' → logprob: -4.444683074951172
    7. 'letter' → logprob: -4.694683074951172
    8. 'available' → logprob: -4.819683074951172
    9. 'possible' → logprob: -4.819683074951172
    10. 'from' → logprob: -5.194683074951172

Token 1576: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.3302861452102661
    2. 'letter' → logprob: -1.4552861452102661
    3. 'c' → logprob: -1.7052861452102661
    4. '   ' → logprob: -2.5802860260009766
    5. 'letters' → logprob: -2.7052860260009766
    6. '
' → logprob: -2.9552860260009766
    7. 'def' → logprob: -3.0802860260009766
    8. 'orig' → logprob: -4.080286026000977
    9. 'char' → logprob: -4.205286026000977
    10. 'possible' → logprob: -4.205286026000977

Token 1577: ' For' (ID: 2214)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.2632489204406738
    2. '#' → logprob: -2.013248920440674
    3. 'letter' → logprob: -2.013248920440674
    4. 'from' → logprob: -2.013248920440674
    5. 'def' → logprob: -2.638248920440674
    6. 'orig' → logprob: -3.013248920440674
    7. 'c' → logprob: -3.138248920440674
    8. 'possible' → logprob: -3.138248920440674
    9. 'char' → logprob: -3.763248920440674
    10. 'allowed' → logprob: -3.763248920440674

Token 1578: ' that' (ID: 484)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.19873227179050446
    2. ' ch' → logprob: -2.448732376098633
    3. 'letter' → logprob: -3.448732376098633
    4. ' l' → logprob: -3.448732376098633
    5. 'ch' → logprob: -4.573732376098633
    6. ' c' → logprob: -4.823732376098633
    7. 'l' → logprob: -5.448732376098633
    8. 'c' → logprob: -6.823732376098633
    9. 'each' → logprob: -7.073732376098633
    10. 'ltr' → logprob: -7.198732376098633

Token 1579: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9769514799118042
    2. 'letter' → logprob: -1.9769514799118042
    3. 'from' → logprob: -2.3519515991210938
    4. '
' → logprob: -2.3519515991210938
    5. 'letters' → logprob: -2.3519515991210938
    6. 'positions' → logprob: -2.7269515991210938
    7. 'pos' → logprob: -3.6019515991210938
    8. 'char' → logprob: -4.101951599121094
    9. '   ' → logprob: -4.351951599121094
    10. 'import' → logprob: -4.601951599121094

Token 1580: ' first' (ID: 1577)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9141656756401062
    2. 'need' → logprob: -1.539165735244751
    3. 'from' → logprob: -2.664165735244751
    4. '#' → logprob: -2.789165735244751
    5. 'continue' → logprob: -2.789165735244751
    6. '   ' → logprob: -3.039165735244751
    7. 'import' → logprob: -3.289165735244751
    8. 'must' → logprob: -4.039165496826172
    9. 'have' → logprob: -4.164165496826172
    10. 'letters' → logprob: -4.414165496826172

Token 1581: ' collect' (ID: 7916)
  Prédit: 'collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.5525220036506653
    2. 'from' → logprob: -2.3025219440460205
    3. 'count' → logprob: -2.3025219440460205
    4. 'build' → logprob: -2.8025219440460205
    5. 'extract' → logprob: -3.1775219440460205
    6. 'identify' → logprob: -3.5525219440460205
    7. 'g' → logprob: -4.1775221824646
    8. 'letters' → logprob: -4.3025221824646
    9. 'find' → logprob: -4.5525221824646
    10. 'def' → logprob: -4.8025221824646

Token 1582: ' occurrences' (ID: 108073)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7479361891746521
    2. 'letter' → logprob: -1.1229362487792969
    3. 'pos' → logprob: -1.7479362487792969
    4. 'letters' → logprob: -4.497936248779297
    5. 'from' → logprob: -4.872936248779297
    6. ' letter' → logprob: -6.122936248779297
    7. 'char' → logprob: -7.247936248779297
    8. 'occur' → logprob: -7.247936248779297
    9. 'occ' → logprob: -7.372936248779297
    10. '#' → logprob: -7.497936248779297

Token 1583: ' of' (ID: 328)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8625562787055969
    2. 'pos' → logprob: -1.4875562191009521
    3. '=' → logprob: -1.7375562191009521
    4. ' =' → logprob: -2.612556219100952
    5. '_positions' → logprob: -2.612556219100952
    6. '_pos' → logprob: -3.737556219100952
    7. 'indices' → logprob: -7.112556457519531
    8. 'of' → logprob: -7.237556457519531
    9. 'def' → logprob: -7.237556457519531
    10. 'for' → logprob: -7.487556457519531

Token 1584: ' each' (ID: 2454)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.1663953810930252
    2. 'each' → logprob: -2.416395425796509
    3. 'letter' → logprob: -3.041395425796509
    4. ' letters' → logprob: -4.41639518737793
    5. 'positions' → logprob: -6.04139518737793
    6. ' each' → logprob: -7.66639518737793
    7. ' letter' → logprob: -7.79139518737793
    8. 'the' → logprob: -8.04139518737793
    9. 'expr' → logprob: -8.91639518737793
    10. 'chars' → logprob: -9.29139518737793

Token 1585: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.001765382126905024
    2. ' letter' → logprob: -6.501765251159668
    3. 'ch' → logprob: -9.001765251159668
    4. '_letter' → logprob: -10.251765251159668
    5. 'letters' → logprob: -10.376765251159668
    6. 'char' → logprob: -10.626765251159668
    7. '```' → logprob: -11.001765251159668
    8. '(letter' → logprob: -11.501765251159668
    9. '
' → logprob: -12.126765251159668
    10. 'l' → logprob: -12.126765251159668

Token 1586: ' positions' (ID: 15897)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9926090836524963
    2. 'letters' → logprob: -1.6176090240478516
    3. ' =' → logprob: -1.8676090240478516
    4. 'positions' → logprob: -2.3676090240478516
    5. 'occ' → logprob: -2.7426090240478516
    6. 'letter' → logprob: -2.9926090240478516
    7. '_occ' → logprob: -4.242609024047852
    8. '_letters' → logprob: -4.742609024047852
    9. '_positions' → logprob: -4.992609024047852
    10. 'occur' → logprob: -4.992609024047852

Token 1587: '
' (ID: 198)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.6082749366760254
    2. 'letters' → logprob: -1.6082749366760254
    3. 'positions' → logprob: -1.8582749366760254
    4. 'occ' → logprob: -3.2332749366760254
    5. '=' → logprob: -3.6082749366760254
    6. ' =' → logprob: -4.233274936676025
    7. 'occur' → logprob: -5.483274936676025
    8. 'pos' → logprob: -5.983274936676025
    9. 'from' → logprob: -6.483274936676025
    10. '
' → logprob: -6.858274936676025

Token 1588: '   ' (ID: 271)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.05945410206913948
    2. 'letters' → logprob: -3.0594542026519775
    3. 'occ' → logprob: -5.809453964233398
    4. 'positions' → logprob: -6.059453964233398
    5. '   ' → logprob: -6.184453964233398
    6. ' letter' → logprob: -7.184453964233398
    7. '(letter' → logprob: -7.684453964233398
    8. ' =' → logprob: -8.059453964233398
    9. '
' → logprob: -8.059453964233398
    10. '=' → logprob: -8.059453964233398

Token 1589: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' (adapté à ' letter') → logprob: -0.09777229279279709
    2. 'letters' → logprob: -2.5977723598480225
    3. 'positions' → logprob: -4.347772121429443
    4. 'occ' → logprob: -5.472772121429443
    5. '{
' → logprob: -7.597772121429443
    6. 'occur' → logprob: -8.097772598266602
    7. '   ' → logprob: -8.847772598266602
    8. 'pos' → logprob: -9.097772598266602
    9. ' letter' → logprob: -9.222772598266602
    10. '{' → logprob: -9.472772598266602

Token 1590: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.2554527223110199
    2. '_pos' → logprob: -1.5054527521133423
    3. 's' → logprob: -5.755452632904053
    4. '_to' → logprob: -9.130453109741211
    5. '_occ' → logprob: -9.380453109741211
    6. '_oc' → logprob: -9.505453109741211
    7. '_counts' → logprob: -10.630453109741211
    8. '_indices' → logprob: -11.130453109741211
    9. '2' → logprob: -11.130453109741211
    10. '_map' → logprob: -11.255453109741211

Token 1591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009512408869341016
    2. ' =' → logprob: -7.000951290130615
    3. '={}' → logprob: -10.375950813293457
    4. '={' → logprob: -12.750950813293457
    5. '.setdefault' → logprob: -13.500950813293457
    6. '={'' → logprob: -13.750950813293457
    7. '={
' → logprob: -14.375950813293457
    8. '={}
' → logprob: -14.500950813293457
    9. '[' → logprob: -14.750950813293457
    10. '=[' → logprob: -14.750950813293457

Token 1592: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -3.128163257315464e-07
    2. ' defaultdict' → logprob: -15.375
    3. '{}
' → logprob: -17.5
    4. '{' → logprob: -17.5
    5. '(default' → logprob: -17.875
    6. '.default' → logprob: -19.0
    7. '"default' → logprob: -19.25
    8. '=' → logprob: -19.875
    9. ''default' → logprob: -20.625
    10. '{}' → logprob: -21.25

Token 1593: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.03319641202688217
    2. 'list' → logprob: -3.533196449279785
    3. '(set' → logprob: -5.783196449279785
    4. 'set' → logprob: -8.408196449279785
    5. '(lambda' → logprob: -9.283196449279785
    6. '[list' → logprob: -10.783196449279785
    7. '(<' → logprob: -11.158196449279785
    8. ':list' → logprob: -12.408196449279785
    9. '=list' → logprob: -12.533196449279785
    10. 'lambda' → logprob: -14.158196449279785

Token 1594: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4018067717552185
    2. ')' → logprob: -1.1518068313598633
    3. 'for' → logprob: -5.276806831359863
    4. ')[' → logprob: -6.151806831359863
    5. ',' → logprob: -6.276806831359863
    6. '[ch' → logprob: -6.401806831359863
    7. ')(' → logprob: -7.276806831359863
    8. '   ' → logprob: -7.401806831359863
    9. 'expr' → logprob: -7.526806831359863
    10. ')
' → logprob: -7.651806831359863

Token 1595: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009958540089428425
    2. '   ' → logprob: -4.759958744049072
    3. ' for' → logprob: -6.634958744049072
    4. '
' → logprob: -11.134958267211914
    5. '```' → logprob: -11.509958267211914
    6. '	for' → logprob: -12.759958267211914
    7. ' ' → logprob: -14.259958267211914
    8. '``' → logprob: -15.009958267211914
    9. 'For' → logprob: -15.634958267211914
    10. '       ' → logprob: -15.634958267211914

Token 1596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006110482499934733
    2. '   ' → logprob: -8.125611305236816
    3. ' for' → logprob: -8.125611305236816
    4. '
' → logprob: -11.750611305236816
    5. '```' → logprob: -12.125611305236816
    6. 'expr' → logprob: -12.500611305236816
    7. 'i' → logprob: -14.250611305236816
    8. '``' → logprob: -14.500611305236816
    9. '	for' → logprob: -15.875611305236816
    10. 'ch' → logprob: -15.875611305236816

Token 1597: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007254361640661955
    2. 'idx' → logprob: -5.507254123687744
    3. 'pos' → logprob: -6.007254123687744
    4. 'ch' → logprob: -7.382254123687744
    5. ' i' → logprob: -9.757254600524902
    6. 'c' → logprob: -10.507254600524902
    7. ' idx' → logprob: -13.382254600524902
    8. ' pos' → logprob: -14.882254600524902
    9. '_i' → logprob: -15.132254600524902
    10. '(i' → logprob: -16.632253646850586

Token 1598: ',ch' (ID: 165575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5733945965766907
    2. ' in' → logprob: -0.9483945965766907
    3. ',' → logprob: -3.073394536972046
    4. ',in' → logprob: -6.573394775390625
    5. ',ch' → logprob: -7.198394775390625
    6. ' ,' → logprob: -7.573394775390625
    7. ',char' → logprob: -10.573394775390625
    8. '_in' → logprob: -10.823394775390625
    9. ',p' → logprob: -11.698394775390625
    10. ',c' → logprob: -12.073394775390625

Token 1599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231319665908813
    2. 'in' → logprob: -0.8981319665908813
    3. ' ' → logprob: -13.14813232421875
    4. '```' → logprob: -13.52313232421875
    5. '_in' → logprob: -13.89813232421875
    6. '	in' → logprob: -14.02313232421875
    7. '   ' → logprob: -14.27313232421875
    8. ',' → logprob: -14.52313232421875
    9. '[in' → logprob: -14.89813232421875
    10. 'i' → logprob: -14.89813232421875

Token 1600: ' enumerate' (ID: 29671)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.08819757401943207
    2. 'enumer' → logprob: -2.5881974697113037
    3. 'range' → logprob: -5.838197708129883
    4. ' expr' → logprob: -6.213197708129883
    5. 'letter' → logprob: -6.338197708129883
    6. ' enumerate' → logprob: -6.713197708129883
    7. '(expr' → logprob: -8.088197708129883
    8. 'express' → logprob: -8.338197708129883
    9. 'letters' → logprob: -8.963197708129883
    10. '(en' → logprob: -9.088197708129883

Token 1601: '(expr' (ID: 78746)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.029822584241628647
    2. '(expr' → logprob: -3.529822587966919
    3. ' expr' → logprob: -9.65482234954834
    4. '   ' → logprob: -12.15482234954834
    5. '(' → logprob: -13.40482234954834
    6. 'express' → logprob: -14.40482234954834
    7. '
' → logprob: -15.52982234954834
    8. '_expr' → logprob: -16.154823303222656
    9. ')' → logprob: -16.404823303222656
    10. ' ' → logprob: -16.529823303222656

Token 1602: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014290554448962212
    2. '):' → logprob: -4.8892903327941895
    3. '   ' → logprob: -6.0142903327941895
    4. ' if' → logprob: -6.2642903327941895
    5. '[ch' → logprob: -6.6392903327941895
    6. 'if' → logprob: -7.8892903327941895
    7. '       ' → logprob: -7.8892903327941895
    8. ':
' → logprob: -8.889290809631348
    9. '):
' → logprob: -10.514290809631348
    10. ':' → logprob: -10.889290809631348

Token 1603: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006274775136262178
    2. '       ' → logprob: -5.256274700164795
    3. 'letter' → logprob: -7.631274700164795
    4. ' letter' → logprob: -7.631274700164795
    5. '(letter' → logprob: -10.006275177001953
    6. '```' → logprob: -11.631275177001953
    7. ' if' → logprob: -12.256275177001953
    8. ' ' → logprob: -13.131275177001953
    9. 'if' → logprob: -13.256275177001953
    10. '  ' → logprob: -13.631275177001953

Token 1604: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5922247171401978
    2. 'letter' → logprob: -0.8422247171401978
    3. 'if' (adapté à ' if') → logprob: -4.592224597930908
    4. '       ' → logprob: -5.967224597930908
    5. ' letter' → logprob: -6.217224597930908
    6. ' if' → logprob: -6.842224597930908
    7. '           ' → logprob: -9.217225074768066
    8. '(letter' → logprob: -9.217225074768066
    9. ' ' → logprob: -9.842225074768066
    10. '```' → logprob: -10.092225074768066

Token 1605: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.012594180181622505
    2. ' ch' → logprob: -4.387594223022461
    3. '   ' → logprob: -9.887594223022461
    4. ''ch' → logprob: -11.637594223022461
    5. ' ' → logprob: -11.887594223022461
    6. '	ch' → logprob: -12.262594223022461
    7. '  ' → logprob: -12.637594223022461
    8. '       ' → logprob: -13.012594223022461
    9. '[ch' → logprob: -13.637594223022461
    10. '    ' → logprob: -13.762594223022461

Token 1606: '.is' (ID: 3109)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41860347986221313
    2. ' ==' → logprob: -2.2936034202575684
    3. '[' → logprob: -2.7936034202575684
    4. 'in' → logprob: -2.9186034202575684
    5. 'is' → logprob: -3.2936034202575684
    6. '.is' → logprob: -3.4186034202575684
    7. ' in' → logprob: -3.9186034202575684
    8. '=='' → logprob: -4.418603420257568
    9. '[ch' → logprob: -4.793603420257568
    10. '```' → logprob: -5.293603420257568

Token 1607: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.00010366239439463243
    2. 'letter' → logprob: -9.625103950500488
    3. 'a' → logprob: -11.250103950500488
    4. ' alpha' → logprob: -11.750103950500488
    5. '(alpha' → logprob: -13.000103950500488
    6. '   ' → logprob: -13.000103950500488
    7. 'alphabet' → logprob: -13.000103950500488
    8. '	alpha' → logprob: -13.625103950500488
    9. 'lower' → logprob: -13.625103950500488
    10. 'l' → logprob: -13.750103950500488

Token 1608: '():
' (ID: 8595)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23846255242824554
    2. '):
' → logprob: -2.238462448120117
    3. '():
' → logprob: -3.238462448120117
    4. '           ' → logprob: -3.988462448120117
    5. ']:
' → logprob: -4.113462448120117
    6. '[' → logprob: -4.613462448120117
    7. ':' → logprob: -4.863462448120117
    8. '       ' → logprob: -4.988462448120117
    9. '(letter' → logprob: -5.988462448120117
    10. '   ' → logprob: -6.363462448120117

Token 1609: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011543353088200092
    2. 'letter' → logprob: -4.886543273925781
    3. '       ' → logprob: -5.886543273925781
    4. '   ' → logprob: -7.511543273925781
    5. ' letter' → logprob: -7.636543273925781
    6. '(letter' → logprob: -9.261543273925781
    7. '```' → logprob: -12.011543273925781
    8. '               ' → logprob: -12.136543273925781
    9. '          ' → logprob: -12.511543273925781
    10. '         ' → logprob: -13.011543273925781

Token 1610: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' (adapté à ' letter') → logprob: -0.3191565275192261
    2. '   ' → logprob: -1.444156527519226
    3. '       ' → logprob: -3.6941566467285156
    4. ' letter' → logprob: -4.944156646728516
    5. '           ' → logprob: -5.319156646728516
    6. '               ' → logprob: -8.444156646728516
    7. '(letter' → logprob: -8.819156646728516
    8. ' ' → logprob: -11.069156646728516
    9. '  ' → logprob: -12.319156646728516
    10. '	' → logprob: -12.694156646728516

Token 1611: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -5.56233171664644e-05
    2. 'positions' → logprob: -9.875055313110352
    3. '_' → logprob: -13.375055313110352
    4. '```' → logprob: -14.375055313110352
    5. '_letters' → logprob: -14.375055313110352
    6. '
' → logprob: -15.000055313110352
    7. '=' → logprob: -15.625055313110352
    8. '_occ' → logprob: -16.12505531311035
    9. ' _' → logprob: -16.25005531311035
    10. 'Positions' → logprob: -16.37505531311035

Token 1612: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -3.531315314830863e-06
    2. 'ch' → logprob: -12.750003814697266
    3. '
' → logprob: -15.375003814697266
    4. '[' → logprob: -15.500003814697266
    5. '```' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '[c' → logprob: -17.375003814697266
    8. ' [' → logprob: -17.500003814697266
    9. '(ch' → logprob: -18.250003814697266
    10. '\[' → logprob: -18.625003814697266

Token 1613: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2539637088775635
    2. '.append' → logprob: -1.5039637088775635
    3. ').' → logprob: -6.378963470458984
    4. 'append' → logprob: -8.253963470458984
    5. '.app' → logprob: -10.503963470458984
    6. '.' → logprob: -11.503963470458984
    7. 'Append' → logprob: -11.753963470458984
    8. '_append' → logprob: -12.128963470458984
    9. ']).' → logprob: -12.378963470458984
    10. 'app' → logprob: -12.753963470458984

Token 1614: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.000000953674316
    3. ' append' → logprob: -15.125000953674316
    4. 'appen' → logprob: -17.625001907348633
    5. '_append' → logprob: -17.875001907348633
    6. '	append' → logprob: -19.250001907348633
    7. 'Append' → logprob: -19.375001907348633
    8. 'app' → logprob: -22.000001907348633
    9. 'extend' → logprob: -22.625001907348633
    10. 'add' → logprob: -22.875001907348633

Token 1615: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002067588793579489
    2. ' i' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.12520694732666
    4. '(i' → logprob: -13.87520694732666
    5. ')i' → logprob: -16.000205993652344
    6. ' ' → logprob: -16.750205993652344
    7. ')' → logprob: -16.750205993652344
    8. '	i' → logprob: -17.250205993652344
    9. '       ' → logprob: -17.375205993652344
    10. '[i' → logprob: -17.750205993652344

Token 1616: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8961017202818766e-05
    2. '   ' → logprob: -10.375059127807617
    3. ')
' → logprob: -10.625059127807617
    4. '       ' → logprob: -13.250059127807617
    5. ' )' → logprob: -14.750059127807617
    6. '<|end|>' → logprob: -15.250059127807617
    7. ')

' → logprob: -15.375059127807617
    8. '')' → logprob: -15.875059127807617
    9. '))' → logprob: -16.500059127807617
    10. '           ' → logprob: -16.500059127807617

Token 1617: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0919384956359863
    2. '   ' → logprob: -1.0919384956359863
    3. 'c' → logprob: -2.4669384956359863
    4. 'possible' → logprob: -2.5919384956359863
    5. 'for' → logprob: -3.2169384956359863
    6. '
' → logprob: -3.3419384956359863
    7. 'candidate' → logprob: -3.3419384956359863
    8. 'all' → logprob: -3.9669384956359863
    9. 'letters' → logprob: -4.716938495635986
    10. 'available' → logprob: -4.841938495635986

Token 1618: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.366538405418396
    2. '   ' → logprob: -1.616538405418396
    3. '#' (adapté à ' #') → logprob: -2.1165385246276855
    4. 'c' → logprob: -2.2415385246276855
    5. 'possible' → logprob: -2.4915385246276855
    6. 'all' → logprob: -2.7415385246276855
    7. 'from' → logprob: -2.7415385246276855
    8. 'letters' → logprob: -2.9915385246276855
    9. 'allowed' → logprob: -4.2415385246276855
    10. 'candidate' → logprob: -4.4915385246276855

Token 1619: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9343931078910828
    2. '#' → logprob: -1.3093931674957275
    3. 'from' → logprob: -1.8093931674957275
    4. 'possible' → logprob: -3.1843931674957275
    5. 'c' → logprob: -3.4343931674957275
    6. 'candidate' → logprob: -3.9343931674957275
    7. 'orig' → logprob: -4.184392929077148
    8. '   ' → logprob: -4.309392929077148
    9. 'import' → logprob: -4.434392929077148
    10. 'allowed' → logprob: -4.684392929077148

Token 1620: ' each' (ID: 2454)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.7741882801055908
    2. ' letter' → logprob: -1.7741882801055908
    3. 'each' → logprob: -2.024188280105591
    4. 'ch' → logprob: -2.899188280105591
    5. 'c' → logprob: -3.149188280105591
    6. 'i' → logprob: -3.649188280105591
    7. 'l' → logprob: -3.774188280105591
    8. ' ch' → logprob: -3.899188280105591
    9. ' each' → logprob: -4.649188041687012
    10. 'pos' → logprob: -4.899188041687012

Token 1621: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.023046772927045822
    2. ' letter' → logprob: -4.273046970367432
    3. 'ch' → logprob: -5.773046970367432
    4. 'l' → logprob: -6.023046970367432
    5. 'c' → logprob: -6.773046970367432
    6. '_letter' → logprob: -7.398046970367432
    7. 'candidate' → logprob: -7.773046970367432
    8. 'ltr' → logprob: -7.898046970367432
    9. 'let' → logprob: -8.773046493530273
    10. 'orig' → logprob: -9.273046493530273

Token 1622: ',' (ID: 11)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.0506267547607422
    2. ',' → logprob: -1.4256267547607422
    3. 'c' → logprob: -2.425626754760742
    4. ' in' → logprob: -2.800626754760742
    5. '_possible' → logprob: -3.175626754760742
    6. '_c' → logprob: -3.300626754760742
    7. ' candidates' → logprob: -3.550626754760742
    8. '_positions' → logprob: -3.925626754760742
    9. '_chars' → logprob: -4.175626754760742
    10. 'possible' → logprob: -4.300626754760742

Token 1623: ' possible' (ID: 4149)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4951798915863037
    2. 'possible' → logprob: -1.3701798915863037
    3. 'candidate' → logprob: -2.7451798915863037
    4. ' candidates' → logprob: -3.4951798915863037
    5. '#' → logprob: -4.245180130004883
    6. '   ' → logprob: -4.745180130004883
    7. 'allowed' → logprob: -5.245180130004883
    8. ' possible' → logprob: -5.620180130004883
    9. 'used' → logprob: -6.370180130004883
    10. ' candidate' → logprob: -6.495180130004883

Token 1624: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.1624937355518341
    2. 'chars' → logprob: -2.2874937057495117
    3. '_candidates' → logprob: -3.4124937057495117
    4. 'c' → logprob: -4.412493705749512
    5. '_orig' → logprob: -6.287493705749512
    6. '_choices' → logprob: -8.037493705749512
    7. 'orig' → logprob: -8.412493705749512
    8. ' candidates' → logprob: -8.662493705749512
    9. '_c' → logprob: -8.787493705749512
    10. '_original' → logprob: -9.037493705749512

Token 1625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04902581870555878
    2. '=' → logprob: -3.049025774002075
    3. '=set' → logprob: -8.174025535583496
    4. ':' → logprob: -9.924025535583496
    5. '   ' → logprob: -10.424025535583496
    6. 'possible' → logprob: -10.549025535583496
    7. '_possible' → logprob: -11.674025535583496
    8. ' possible' → logprob: -11.799025535583496
    9. 'set' → logprob: -12.424025535583496
    10. '=[]' → logprob: -12.674025535583496

Token 1626: ' OR' (ID: 4917)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0004026673559565097
    2. 'OR' → logprob: -8.250402450561523
    3. ' set' → logprob: -9.125402450561523
    4. '[' → logprob: -10.625402450561523
    5. '{' → logprob: -12.625402450561523
    6. 'list' → logprob: -12.750402450561523
    7. '(set' → logprob: -14.000402450561523
    8. '   ' → logprob: -14.500402450561523
    9. ' OR' → logprob: -15.750402450561523
    10. '	set' → logprob: -16.500402450561523

Token 1627: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -4.286852345103398e-05
    2. 'IGINAL' → logprob: -10.875042915344238
    3. '
' → logprob: -11.500042915344238
    4. 'I' → logprob: -13.500042915344238
    5. 'CH' → logprob: -13.625042915344238
    6. 'C' → logprob: -13.625042915344238
    7. '[' → logprob: -13.750042915344238
    8. 'IC' → logprob: -13.875042915344238
    9. '`' → logprob: -14.000042915344238
    10. '{' → logprob: -14.125042915344238

Token 1628: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -4.3822154111694545e-05
    2. 'CH' → logprob: -10.500043869018555
    3. '_CHAR' → logprob: -12.375043869018555
    4. '```' → logprob: -12.500043869018555
    5. '_CHO' → logprob: -12.875043869018555
    6. '_C' → logprob: -13.625043869018555
    7. '`' → logprob: -13.750043869018555
    8. ' CH' → logprob: -14.000043869018555
    9. '_chars' → logprob: -14.125043869018555
    10. 'Chars' → logprob: -15.500043869018555

Token 1629: 'ARS' (ID: 25776)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.37286585569381714
    2. 'ARS' → logprob: -1.497865915298462
    3. '_CH' → logprob: -2.497865915298462
    4. 'CH' → logprob: -5.872865676879883
    5. 'AR' → logprob: -6.747865676879883
    6. '   ' → logprob: -7.997865676879883
    7. '_CHO' → logprob: -8.622865676879883
    8. '_chars' → logprob: -9.122865676879883
    9. '_SET' → logprob: -9.497865676879883
    10. '```' → logprob: -9.997865676879883

Token 1630: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0849363803863525
    2. '_' → logprob: -1.9599363803863525
    3. '
' → logprob: -2.2099363803863525
    4. '.copy' → logprob: -2.2099363803863525
    5. '[:]' → logprob: -2.3349363803863525
    6. '_possible' → logprob: -2.7099363803863525
    7. '   ' → logprob: -3.4599363803863525
    8. '_candidates' → logprob: -4.084936141967773
    9. ':' → logprob: -4.209936141967773
    10. '=' → logprob: -4.834936141967773

Token 1631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0318204164505005
    2. '_possible' → logprob: -1.4068204164505005
    3. ' =' → logprob: -1.9068204164505005
    4. '
' → logprob: -2.656820297241211
    5. 'possible' → logprob: -3.156820297241211
    6. '=' → logprob: -3.906820297241211
    7. '_candidates' → logprob: -4.156820297241211
    8. '[:]' → logprob: -4.156820297241211
    9. 'for' → logprob: -4.656820297241211
    10. '#' → logprob: -4.656820297241211

Token 1632: ' #' (ID: 1069)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.14662396907806396
    2. 'letter' → logprob: -2.0216240882873535
    3. 'c' → logprob: -6.6466240882873535
    4. 'candidate' → logprob: -6.7716240882873535
    5. 'poss' → logprob: -6.8966240882873535
    6. '#' (adapté à ' #') → logprob: -9.146623611450195
    7. 'allowed' → logprob: -9.146623611450195
    8. '   ' → logprob: -9.271623611450195
    9. '
' → logprob: -9.896623611450195
    10. 'letters' → logprob: -10.146623611450195

Token 1633: ' But' (ID: 3072)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.18904165923595428
    2. 'letter' → logprob: -1.8140416145324707
    3. 'c' → logprob: -5.564041614532471
    4. 'candidate' → logprob: -6.314041614532471
    5. 'poss' → logprob: -6.314041614532471
    6. '#' → logprob: -6.564041614532471
    7. 'letters' → logprob: -9.064042091369629
    8. 'allowed' → logprob: -9.314042091369629
    9. 'pos' → logprob: -9.564042091369629
    10. 'cand' → logprob: -9.939042091369629

Token 1634: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6589705348014832
    2. '#' → logprob: -1.033970594406128
    3. 'possible' → logprob: -2.408970594406128
    4. ' for' → logprob: -3.908970594406128
    5. 'continue' → logprob: -5.158970355987549
    6. '   ' → logprob: -5.783970355987549
    7. 'we' → logprob: -6.158970355987549
    8. ' #' → logprob: -6.408970355987549
    9. ' possible' → logprob: -7.033970355987549
    10. '
' → logprob: -7.408970355987549

Token 1635: ' at' (ID: 540)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4584744870662689
    2. 'any' → logprob: -2.2084743976593018
    3. 'ch' → logprob: -2.5834743976593018
    4. ' any' → logprob: -2.7084743976593018
    5. 'letter' → logprob: -3.8334743976593018
    6. ' ch' → logprob: -3.9584743976593018
    7. 'expr' → logprob: -4.083474636077881
    8. 'all' → logprob: -4.458474636077881
    9. ' len' → logprob: -4.583474636077881
    10. ''' → logprob: -4.833474636077881

Token 1636: ' one' (ID: 1001)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9771478772163391
    2. 'some' → logprob: -1.4771478176116943
    3. 'positions' → logprob: -1.9771478176116943
    4. 'least' → logprob: -2.3521478176116943
    5. 'each' → logprob: -3.4771478176116943
    6. 'i' → logprob: -3.4771478176116943
    7. 'letter' → logprob: -3.8521478176116943
    8. ' any' → logprob: -4.227148056030273
    9. 'the' → logprob: -4.227148056030273
    10. 'all' → logprob: -4.727148056030273

Token 1637: ' occurrence' (ID: 55807)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8311989307403564
    2. 'least' → logprob: -2.2061989307403564
    3. 'pos' → logprob: -2.4561989307403564
    4. 'position' → logprob: -2.5811989307403564
    5. ' least' → logprob: -3.3311989307403564
    6. ' for' → logprob: -3.4561989307403564
    7. ' position' → logprob: -3.4561989307403564
    8. ' letter' → logprob: -3.5811989307403564
    9. 'for' → logprob: -4.081198692321777
    10. ' of' → logprob: -4.206198692321777

Token 1638: ' the' (ID: 290)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2491226196289062
    2. ' the' → logprob: -1.4991226196289062
    3. 'the' → logprob: -2.1241226196289062
    4. 'of' → logprob: -2.2491226196289062
    5. '
' → logprob: -2.3741226196289062
    6. ',' → logprob: -2.6241226196289062
    7. ' ch' → logprob: -4.249122619628906
    8. ' in' → logprob: -4.374122619628906
    9. ' a' → logprob: -4.499122619628906
    10. 'a' → logprob: -4.499122619628906

Token 1639: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.7650980353355408
    2. ' letter' → logprob: -1.3900980949401855
    3. ' next' → logprob: -2.6400980949401855
    4. 'possible' → logprob: -3.2650980949401855
    5. ' original' → logprob: -3.6400980949401855
    6. 'original' → logprob: -3.8900980949401855
    7. 'ch' → logprob: -3.8900980949401855
    8. 'next' → logprob: -4.0150980949401855
    9. 'char' → logprob: -4.6400980949401855
    10. 'code' → logprob: -4.8900980949401855

Token 1640: ' is' (ID: 382)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7993877530097961
    2. ' is' → logprob: -1.4243876934051514
    3. ' has' → logprob: -2.5493876934051514
    4. ' in' → logprob: -2.6743876934051514
    5. ' must' → logprob: -3.1743876934051514
    6. '```' → logprob: -3.9243876934051514
    7. ' appears' → logprob: -4.0493879318237305
    8. ' cannot' → logprob: -4.2993879318237305
    9. 'must' → logprob: -4.4243879318237305
    10. ' can' → logprob: -4.5493879318237305

Token 1641: ' '' (ID: 461)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.141469955444336
    2. 'mapped' → logprob: -1.391469955444336
    3. 'not' → logprob: -2.266469955444336
    4. 'fixed' → logprob: -3.141469955444336
    5. 'in' → logprob: -3.516469955444336
    6. 'restricted' → logprob: -3.641469955444336
    7. '```' → logprob: -3.641469955444336
    8. 'at' → logprob: -3.766469955444336
    9. 'known' → logprob: -3.766469955444336
    10. ' constrained' → logprob: -3.891469955444336

Token 1642: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1152145862579346
    2. ''' → logprob: -1.8652145862579346
    3. ')' → logprob: -1.9902145862579346
    4. '=' → logprob: -2.1152145862579346
    5. 'not' → logprob: -2.7402145862579346
    6. '')' → logprob: -3.3652145862579346
    7. 'letter' → logprob: -3.4902145862579346
    8. 'l' → logprob: -4.2402143478393555
    9. ''a' → logprob: -4.2402143478393555
    10. ''=' → logprob: -4.2402143478393555

Token 1643: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2887362837791443
    2. '',' → logprob: -1.413736343383789
    3. ' in' → logprob: -6.788736343383789
    4. '':' → logprob: -7.038736343383789
    5. ''s' → logprob: -7.038736343383789
    6. ',' → logprob: -7.163736343383789
    7. ']'' → logprob: -7.288736343383789
    8. ')'' → logprob: -7.913736343383789
    9. 's' → logprob: -8.288736343383789
    10. '':
' → logprob: -8.413736343383789

Token 1644: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16755114495754242
    2. '_positions' → logprob: -2.917551040649414
    3. ':' → logprob: -3.292551040649414
    4. ':
' → logprob: -4.667551040649414
    5. ' in' → logprob: -4.792551040649414
    6. '_possible' → logprob: -5.292551040649414
    7. ' ,' → logprob: -5.417551040649414
    8. ''s' → logprob: -5.417551040649414
    9. ',
' → logprob: -5.792551040649414
    10. 'possible' → logprob: -5.792551040649414

Token 1645: ' at' (ID: 540)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6770471930503845
    2. 'the' → logprob: -1.9270472526550293
    3. 'letter' → logprob: -2.0520472526550293
    4. '#' → logprob: -3.0520472526550293
    5. 'OR' → logprob: -3.4270472526550293
    6. 'not' → logprob: -3.6770472526550293
    7. ' the' → logprob: -4.552047252655029
    8. '(letter' → logprob: -4.552047252655029
    9. ' expr' → logprob: -4.802047252655029
    10. '(expr' → logprob: -4.927047252655029

Token 1646: ' position' (ID: 4010)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.34395653009414673
    2. 'one' → logprob: -2.093956470489502
    3. ' that' → logprob: -3.343956470489502
    4. 'another' → logprob: -3.468956470489502
    5. 'position' → logprob: -3.718956470489502
    6. 'positions' → logprob: -4.218956470489502
    7. 'some' → logprob: -4.343956470489502
    8. 'a' → logprob: -4.593956470489502
    9. 'the' → logprob: -4.593956470489502
    10. 'other' → logprob: -4.968956470489502

Token 1647: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0210163593292236
    2. ' i' → logprob: -1.6460163593292236
    3. ' the' → logprob: -2.7710163593292236
    4. '0' → logprob: -2.8960163593292236
    5. ' in' → logprob: -2.8960163593292236
    6. 's' → logprob: -3.2710163593292236
    7. ' there' → logprob: -3.6460163593292236
    8. 'the' → logprob: -3.6460163593292236
    9. ' ' → logprob: -3.7710163593292236
    10. ' not' → logprob: -3.8960163593292236

Token 1648: ',' (ID: 11)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1816892623901367
    2. ' in' → logprob: -1.6816892623901367
    3. ',' → logprob: -1.8066892623901367
    4. ' is' → logprob: -2.3066892623901367
    5. 'the' → logprob: -2.5566892623901367
    6. 'in' → logprob: -3.0566892623901367
    7. '
' → logprob: -4.431689262390137
    8. ' we' → logprob: -4.431689262390137
    9. 'is' → logprob: -4.556689262390137
    10. 's' → logprob: -4.556689262390137

Token 1649: ' literal' (ID: 41271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8342757225036621
    2. ' we' → logprob: -2.209275722503662
    3. 'possible' → logprob: -2.334275722503662
    4. '   ' → logprob: -2.834275722503662
    5. ' #' → logprob: -3.334275722503662
    6. 'the' → logprob: -3.334275722503662
    7. ' the' → logprob: -3.334275722503662
    8. ' then' → logprob: -3.584275722503662
    9. ' for' → logprob: -3.709275722503662
    10. ' possible' → logprob: -3.834275722503662

Token 1650: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8912365436553955
    2. ' in' → logprob: -1.3912365436553955
    3. ' not' → logprob: -2.0162365436553955
    4. ' at' → logprob: -2.5162365436553955
    5. ' s' → logprob: -4.391236305236816
    6. '
' → logprob: -4.641236305236816
    7. 'in' → logprob: -4.891236305236816
    8. ' !=' → logprob: -4.891236305236816
    9. 'not' → logprob: -5.016236305236816
    10. '_choices' → logprob: -5.016236305236816

Token 1651: ' expr' (ID: 30206)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03779035434126854
    2. 'expr' → logprob: -3.412790298461914
    3. 'that' → logprob: -6.662790298461914
    4. ' i' → logprob: -6.912790298461914
    5. 'the' → logprob: -7.162790298461914
    6. '#' → logprob: -8.537790298461914
    7. 'position' → logprob: -9.037790298461914
    8. '`' → logprob: -9.287790298461914
    9. '```' → logprob: -9.287790298461914
    10. 'express' → logprob: -9.537790298461914

Token 1652: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005529711954295635
    2. 'i' → logprob: -6.005529880523682
    3. '```' → logprob: -7.505529880523682
    4. 's' → logprob: -7.880529880523682
    5. ' is' → logprob: -8.130529403686523
    6. '[' → logprob: -8.255529403686523
    7. '
' → logprob: -8.380529403686523
    8. '==' → logprob: -8.755529403686523
    9. ')' → logprob: -9.005529403686523
    10. ',' → logprob: -9.130529403686523

Token 1653: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2065655142068863
    2. '[i' → logprob: -2.8315656185150146
    3. ']==' → logprob: -3.4565656185150146
    4. ']!=' → logprob: -3.8315656185150146
    5. '!=' → logprob: -4.3315653800964355
    6. ' !=' → logprob: -4.5815653800964355
    7. ']!='' → logprob: -4.5815653800964355
    8. '']' → logprob: -4.9565653800964355
    9. '!='' → logprob: -5.2065653800964355
    10. 'not' → logprob: -5.3315653800964355

Token 1654: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.8840806484222412
    2. 'not' → logprob: -2.134080648422241
    3. ' is' → logprob: -2.259080648422241
    4. ':' → logprob: -2.384080648422241
    5. '#' → logprob: -2.634080648422241
    6. 'for' → logprob: -3.134080648422241
    7. ' !=' → logprob: -3.384080648422241
    8. ',' → logprob: -3.634080648422241
    9. ':
' → logprob: -3.634080648422241
    10. ''' → logprob: -3.634080648422241

Token 1655: ' letter' (ID: 10263)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.116230845451355
    2. 'not' → logprob: -1.241230845451355
    3. 'None' → logprob: -1.616230845451355
    4. ' not' → logprob: -2.3662309646606445
    5. 'expr' → logprob: -3.6162309646606445
    6. ' None' → logprob: -3.8662309646606445
    7. '')' → logprob: -5.3662309646606445
    8. 'letter' → logprob: -5.3662309646606445
    9. '=None' → logprob: -5.7412309646606445
    10. 'OR' → logprob: -5.9912309646606445

Token 1656: ',
' (ID: 412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8480212688446045
    2. ',' → logprob: -1.4730212688446045
    3. ' not' → logprob: -2.2230212688446045
    4. ':' → logprob: -3.4730212688446045
    5. ':
' → logprob: -3.4730212688446045
    6. '
' → logprob: -3.7230212688446045
    7. '=' → logprob: -3.9730212688446045
    8. ' in' → logprob: -3.9730212688446045
    9. 'not' → logprob: -4.223021507263184
    10. ' =' → logprob: -4.598021507263184

Token 1657: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4044334590435028
    2. '   ' → logprob: -1.9044334888458252
    3. ' but' → logprob: -3.279433488845825
    4. ' then' → logprob: -4.029433250427246
    5. 'not' → logprob: -4.029433250427246
    6. ' not' → logprob: -4.154433250427246
    7. 'but' → logprob: -4.279433250427246
    8. ',' → logprob: -4.529433250427246
    9. ' #' → logprob: -4.779433250427246
    10. 'for' → logprob: -4.779433250427246

Token 1658: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0437970161437988
    2. ' but' → logprob: -2.168797016143799
    3. ' we' → logprob: -2.793797016143799
    4. 'but' → logprob: -2.793797016143799
    5. '   ' → logprob: -3.043797016143799
    6. ' then' → logprob: -3.293797016143799
    7. 'then' → logprob: -3.293797016143799
    8. 'and' → logprob: -3.418797016143799
    9. 'not' → logprob: -3.418797016143799
    10. ' not' → logprob: -3.543797016143799

Token 1659: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41929563879966736
    2. ' #' → logprob: -2.5442955493927
    3. ' for' → logprob: -3.0442955493927
    4. ' we' → logprob: -3.0442955493927
    5. ' so' → logprob: -3.5442955493927
    6. ' no' → logprob: -4.294295787811279
    7. ' continue' → logprob: -4.294295787811279
    8. ' not' → logprob: -4.419295787811279
    9. 'for' → logprob: -4.544295787811279
    10. ' and' → logprob: -4.794295787811279

Token 1660: ' don't' (ID: 4128)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5594221353530884
    2. 'continue' → logprob: -1.3094221353530884
    3. '#' → logprob: -3.059422016143799
    4. ' can' → logprob: -4.059422016143799
    5. ' must' → logprob: -4.184422016143799
    6. 'cannot' → logprob: -4.309422016143799
    7. ' cannot' → logprob: -4.434422016143799
    8. 'must' → logprob: -4.684422016143799
    9. ' have' → logprob: -5.059422016143799
    10. '   ' → logprob: -5.309422016143799

Token 1661: ' know' (ID: 1761)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.6676160097122192
    2. 'continue' → logprob: -1.7926160097122192
    3. ' have' → logprob: -2.1676158905029297
    4. 'restrict' → logprob: -2.2926158905029297
    5. 'allow' → logprob: -2.7926158905029297
    6. ' continue' → logprob: -2.7926158905029297
    7. 'discard' → logprob: -3.0426158905029297
    8. 'need' → logprob: -3.1676158905029297
    9. 'consider' → logprob: -3.2926158905029297
    10. ' need' → logprob: -3.5426158905029297

Token 1662: ' original' (ID: 4756)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8051983714103699
    2. 'for' → logprob: -2.0551984310150146
    3. ' possible' → logprob: -2.1801984310150146
    4. '#' → logprob: -2.4301984310150146
    5. ' for' → logprob: -2.8051984310150146
    6. 'allowed' → logprob: -3.4301984310150146
    7. '
' → logprob: -4.3051981925964355
    8. 'any' → logprob: -4.4301981925964355
    9. ' if' → logprob: -4.4301981925964355
    10. 'if' → logprob: -4.5551981925964355

Token 1663: ' char' (ID: 1826)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.9419969320297241
    2. '_' → logprob: -1.9419969320297241
    3. 's' → logprob: -2.1919970512390137
    4. '_letters' → logprob: -2.3169970512390137
    5. '_candidates' → logprob: -2.8169970512390137
    6. '_possible' → logprob: -3.8169970512390137
    7. ' =' → logprob: -4.191997051239014
    8. '_choices' → logprob: -4.316997051239014
    9. ' for' → logprob: -4.316997051239014
    10. '#' → logprob: -4.441997051239014

Token 1664: '.' (ID: 13)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6783150434494019
    2. '
' → logprob: -2.1783151626586914
    3. ' =' → logprob: -2.5533151626586914
    4. '_' → logprob: -2.9283151626586914
    5. '_possible' → logprob: -2.9283151626586914
    6. '_candidates' → logprob: -3.4283151626586914
    7. '#' → logprob: -3.5533151626586914
    8. ',' → logprob: -4.178315162658691
    9. 'for' → logprob: -4.178315162658691
    10. '   ' → logprob: -4.553315162658691

Token 1665: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2589826285839081
    2. 'possible' → logprob: -2.2589826583862305
    3. '
' → logprob: -2.7589826583862305
    4. 'candidate' → logprob: -3.7589826583862305
    5. 'for' → logprob: -5.0089826583862305
    6. ' #' → logprob: -5.3839826583862305
    7. ' candidates' → logprob: -5.5089826583862305
    8. ' possible' → logprob: -5.8839826583862305
    9. 'Possible' → logprob: -6.1339826583862305
    10. 'c' → logprob: -6.1339826583862305

Token 1666: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3453996777534485
    2. ' continue' → logprob: -1.3453996181488037
    3. 'must' → logprob: -4.845399856567383
    4. ' =' → logprob: -5.720399856567383
    5. '
' → logprob: -5.845399856567383
    6. 'cannot' → logprob: -5.970399856567383
    7. '#' → logprob: -6.095399856567383
    8. 'need' → logprob: -6.220399856567383
    9. 'have' → logprob: -6.345399856567383
    10. ' must' → logprob: -6.720399856567383

Token 1667: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0688321441411972
    2. 'for' → logprob: -3.4438321590423584
    3. 'each' → logprob: -4.318831920623779
    4. ' all' → logprob: -4.943831920623779
    5. 'OR' → logprob: -5.318831920623779
    6. 'possible' → logprob: -6.193831920623779
    7. 'c' → logprob: -6.318831920623779
    8. '   ' → logprob: -6.568831920623779
    9. '       ' → logprob: -7.193831920623779
    10. ' for' → logprob: -7.443831920623779

Token 1668: ' candidates' (ID: 18116)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.011213779449463
    2. '_possible' → logprob: -1.386213779449463
    3. 'for' → logprob: -2.261213779449463
    4. ' possible' → logprob: -2.511213779449463
    5. ' for' → logprob: -3.261213779449463
    6. '_' → logprob: -3.261213779449463
    7. 'poss' → logprob: -3.886213779449463
    8. ')' → logprob: -4.511213779449463
    9. 'OR' → logprob: -4.511213779449463
    10. ' _' → logprob: -4.636213779449463

Token 1669: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.665725827217102
    2. 'for' → logprob: -2.0407257080078125
    3. 'def' → logprob: -2.5407257080078125
    4. '   ' → logprob: -3.0407257080078125
    5. ':' → logprob: -3.2907257080078125
    6. ':
' → logprob: -3.4157257080078125
    7. ' for' → logprob: -3.5407257080078125
    8. ')
' → logprob: -4.0407257080078125
    9. 'import' → logprob: -4.4157257080078125
    10. '#' → logprob: -4.4157257080078125

Token 1670: '   ' (ID: 271)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.387880802154541
    2. '#' → logprob: -1.512880802154541
    3. '   ' → logprob: -1.887880802154541
    4. 'c' → logprob: -2.012880802154541
    5. 'letter' → logprob: -2.137880802154541
    6. 'candidate' → logprob: -3.512880802154541
    7. '
' → logprob: -3.762880802154541
    8. 'letters' → logprob: -4.012880802154541
    9. 'def' → logprob: -4.137880802154541
    10. 'allowed' → logprob: -4.512880802154541

Token 1671: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0256439447402954
    2. 'def' → logprob: -1.6506439447402954
    3. 'possible' → logprob: -1.9006439447402954
    4. 'c' → logprob: -2.150643825531006
    5. '   ' → logprob: -2.275643825531006
    6. 'letter' → logprob: -3.900643825531006
    7. 'from' → logprob: -4.150643825531006
    8. 'candidate' → logprob: -4.275643825531006
    9. 'letters' → logprob: -4.900643825531006
    10. 'all' → logprob: -5.275643825531006

Token 1672: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5094319581985474
    2. '#' → logprob: -1.8844319581985474
    3. 'from' → logprob: -2.259431838989258
    4. 'possible' → logprob: -2.759431838989258
    5. 'c' → logprob: -3.509431838989258
    6. 'import' → logprob: -4.634431838989258
    7. 'letter' → logprob: -4.759431838989258
    8. 'candidate' → logprob: -5.009431838989258
    9. '   ' → logprob: -5.134431838989258
    10. 'letters' → logprob: -5.384431838989258

Token 1673: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10933735221624374
    2. 'for' → logprob: -3.609337329864502
    3. 'from' → logprob: -4.109337329864502
    4. ' #' → logprob: -4.359337329864502
    5. '
' → logprob: -4.484337329864502
    6. 'we' → logprob: -4.859337329864502
    7. 'possible' → logprob: -4.859337329864502
    8. ' for' → logprob: -5.234337329864502
    9. ' we' → logprob: -6.109337329864502
    10. ' from' → logprob: -6.984337329864502

Token 1674: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.2355601042509079
    2. 'must' → logprob: -2.610560178756714
    3. 'continue' → logprob: -3.235560178756714
    4. 'cannot' → logprob: -3.360560178756714
    5. '#' → logprob: -3.735560178756714
    6. ' need' → logprob: -4.360559940338135
    7. 'have' → logprob: -4.735559940338135
    8. ' must' → logprob: -5.735559940338135
    9. 'do' → logprob: -5.860559940338135
    10. 'def' → logprob: -6.235559940338135

Token 1675: ' prune' (ID: 140388)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3331204950809479
    2. 'continue' → logprob: -1.7081204652786255
    3. '   ' → logprob: -4.708120346069336
    4. '#' → logprob: -4.708120346069336
    5. ' continue' → logprob: -4.708120346069336
    6. 'try' → logprob: -4.833120346069336
    7. 'filter' → logprob: -5.208120346069336
    8. 'ref' → logprob: -5.208120346069336
    9. ' prune' → logprob: -5.208120346069336
    10. 'restrict' → logprob: -5.333120346069336

Token 1676: ' candidates' (ID: 18116)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6035351753234863
    2. 'possible' → logprob: -2.1035351753234863
    3. '_possible' → logprob: -2.1035351753234863
    4. 'for' → logprob: -2.2285351753234863
    5. '
' → logprob: -2.3535351753234863
    6. '_' → logprob: -2.4785351753234863
    7. '_candidates' → logprob: -3.1035351753234863
    8. 'from' → logprob: -3.2285351753234863
    9. '#' → logprob: -3.4785351753234863
    10. '_
' → logprob: -3.9785351753234863

Token 1677: ' when' (ID: 1261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20704729855060577
    2. ' =' → logprob: -2.5820472240448
    3. 'possible' → logprob: -3.7070472240448
    4. '_possible' → logprob: -3.7070472240448
    5. '=' → logprob: -3.9570472240448
    6. '#' → logprob: -4.707047462463379
    7. 'per' → logprob: -5.457047462463379
    8. 'def' → logprob: -5.457047462463379
    9. 'filtered' → logprob: -5.707047462463379
    10. '_candidates' → logprob: -5.832047462463379

Token 1678: ' a' (ID: 261)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6072562336921692
    2. 'letter' → logprob: -2.1072561740875244
    3. 'any' → logprob: -2.2322561740875244
    4. 'expr' → logprob: -2.7322561740875244
    5. 'ch' → logprob: -3.3572561740875244
    6. 'all' → logprob: -3.9822561740875244
    7. ' any' → logprob: -3.9822561740875244
    8. 'i' → logprob: -4.1072564125061035
    9. '#' → logprob: -4.6072564125061035
    10. 'the' → logprob: -4.7322564125061035

Token 1679: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.9315550327301025
    2. ' letter' → logprob: -2.1815550327301025
    3. 'l' → logprob: -2.4315550327301025
    4. 'll' → logprob: -2.5565550327301025
    5. 'ch' → logprob: -2.5565550327301025
    6. 'len' → logprob: -3.4315550327301025
    7. 's' → logprob: -3.8065550327301025
    8. '#' → logprob: -3.8065550327301025
    9. 'c' → logprob: -3.9315550327301025
    10. 'candidate' → logprob: -4.056554794311523

Token 1680: ' and' (ID: 326)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.18030360341072083
    2. ' in' → logprob: -2.8053035736083984
    3. 's' → logprob: -4.055303573608398
    4. '_candidates' → logprob: -4.555303573608398
    5. '_possible' → logprob: -4.555303573608398
    6. 'in' → logprob: -4.680303573608398
    7. ' not' → logprob: -4.930303573608398
    8. '_' → logprob: -5.055303573608398
    9. '_constraints' → logprob: -5.055303573608398
    10. '```' → logprob: -5.430303573608398

Token 1681: ' a' (ID: 261)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -1.827499508857727
    2. 'the' → logprob: -1.952499508857727
    3. ' its' → logprob: -2.0774993896484375
    4. 'its' → logprob: -2.4524993896484375
    5. 'position' → logprob: -2.7024993896484375
    6. ' the' → logprob: -2.7024993896484375
    7. ' literal' → logprob: -3.0774993896484375
    8. ' their' → logprob: -3.2024993896484375
    9. 'their' → logprob: -3.2024993896484375
    10. 'expr' → logprob: -3.5774993896484375

Token 1682: ' literal' (ID: 41271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.028743505477905273
    2. 'position' → logprob: -4.278743743896484
    3. ' literal' → logprob: -5.028743743896484
    4. 'l' → logprob: -6.028743743896484
    5. '#' → logprob: -6.778743743896484
    6. 'letter' → logprob: -6.903743743896484
    7. 'non' → logprob: -7.028743743896484
    8. 'pos' → logprob: -7.653743743896484
    9. '...' → logprob: -7.778743743896484
    10. 'token' → logprob: -8.403743743896484

Token 1683: ' appear' (ID: 7680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8633111715316772
    2. 'in' → logprob: -1.8633111715316772
    3. ' at' → logprob: -1.8633111715316772
    4. ' !=' → logprob: -3.363311290740967
    5. ' is' → logprob: -3.613311290740967
    6. 'cannot' → logprob: -3.738311290740967
    7. ' not' → logprob: -3.863311290740967
    8. 'ch' → logprob: -3.863311290740967
    9. '!=' → logprob: -3.863311290740967
    10. '==' → logprob: -4.113311290740967

Token 1684: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.918627142906189
    2. 's' → logprob: -2.0436272621154785
    3. ' =' → logprob: -2.1686272621154785
    4. '=' → logprob: -2.1686272621154785
    5. '_' → logprob: -2.2936272621154785
    6. ' in' → logprob: -2.6686272621154785
    7. 'def' → logprob: -2.7936272621154785
    8. ':' → logprob: -3.4186272621154785
    9. ':
' → logprob: -3.6686272621154785
    10. ' not' → logprob: -3.7936272621154785

Token 1685: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4759393334388733
    2. 'same' → logprob: -1.2259392738342285
    3. 'a' → logprob: -3.4759392738342285
    4. 'some' → logprob: -3.6009392738342285
    5. 'one' → logprob: -5.1009392738342285
    6. 'position' → logprob: -5.7259392738342285
    7. 'positions' → logprob: -5.7259392738342285
    8. '#' → logprob: -5.8509392738342285
    9. ' same' → logprob: -6.2259392738342285
    10. ' the' → logprob: -6.2259392738342285

Token 1686: ' pos' (ID: 1253)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.06210414692759514
    2. 'time' → logprob: -3.4371042251586914
    3. 'positions' → logprob: -4.312104225158691
    4. 'pos' → logprob: -4.562104225158691
    5. 'index' → logprob: -6.187104225158691
    6. 'i' → logprob: -7.312104225158691
    7. ' position' → logprob: -7.312104225158691
    8. 'token' → logprob: -8.312104225158691
    9. '
' → logprob: -8.437104225158691
    10. ' time' → logprob: -9.312104225158691

Token 1687: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3786959648132324
    2. ':' → logprob: -1.8786959648132324
    3. ':
' → logprob: -2.0036959648132324
    4. '=' → logprob: -2.1286959648132324
    5. ' =' → logprob: -3.1286959648132324
    6. ' and' → logprob: -3.1286959648132324
    7. '_' → logprob: -3.3786959648132324
    8. ' ' → logprob: -3.6286959648132324
    9. ' if' → logprob: -3.6286959648132324
    10. ''' → logprob: -3.6286959648132324

Token 1688: ' letters' (ID: 18151)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18684713542461395
    2. '   ' → logprob: -2.18684720993042
    3. 'continue' → logprob: -4.43684720993042
    4. '
' → logprob: -4.56184720993042
    5. ' continue' → logprob: -5.06184720993042
    6. 'and' → logprob: -5.06184720993042
    7. 'if' → logprob: -5.68684720993042
    8. 'for' → logprob: -5.93684720993042
    9. ' continuing' → logprob: -6.06184720993042
    10. ' and' → logprob: -6.06184720993042

Token 1689: ' are' (ID: 553)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.2681413888931274
    2. 'in' → logprob: -2.018141269683838
    3. ' in' → logprob: -2.143141269683838
    4. 'cannot' → logprob: -2.893141269683838
    5. 'and' → logprob: -3.268141269683838
    6. 'are' → logprob: -3.393141269683838
    7. ' are' → logprob: -3.393141269683838
    8. ' at' → logprob: -3.643141269683838
    9. ' =' → logprob: -3.768141269683838
    10. ' cannot' → logprob: -3.893141269683838

Token 1690: ' distinct' (ID: 16913)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.6292461156845093
    2. 'distinct' → logprob: -1.5042461156845093
    3. 'not' → logprob: -2.254246234893799
    4. 'dis' → logprob: -2.629246234893799
    5. 'never' → logprob: -4.004246234893799
    6. 'mut' → logprob: -4.254246234893799
    7. 'exclusive' → logprob: -4.879246234893799
    8. 'im' → logprob: -5.004246234893799
    9. 'excluded' → logprob: -5.254246234893799
    10. 'in' → logprob: -5.379246234893799

Token 1691: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.360451102256775
    2. 'for' → logprob: -1.735451102256775
    3. 'and' → logprob: -1.860451102256775
    4. ':' → logprob: -2.9854512214660645
    5. 'def' → logprob: -2.9854512214660645
    6. ':
' → logprob: -2.9854512214660645
    7. '#' → logprob: -3.1104512214660645
    8. ' and' → logprob: -3.2354512214660645
    9. '   ' → logprob: -3.4854512214660645
    10. '=' → logprob: -3.9854512214660645

Token 1692: ' literals' (ID: 193569)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.709873378276825
    2. 'letters' → logprob: -1.5848734378814697
    3. 'OR' → logprob: -1.7098734378814697
    4. 'set' → logprob: -2.7098734378814697
    5. 'digits' → logprob: -4.334873199462891
    6. 'orig' → logprob: -4.459873199462891
    7. 'original' → logprob: -4.584873199462891
    8. 'expr' → logprob: -5.584873199462891
    9. 'literal' → logprob: -5.584873199462891
    10. ' literals' → logprob: -5.709873199462891

Token 1693: '.

' (ID: 364)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2421691417694092
    2. '   ' → logprob: -1.4921691417694092
    3. '#' → logprob: -1.8671691417694092
    4. '
' → logprob: -2.367169141769409
    5. ':' → logprob: -2.867169141769409
    6. 'def' → logprob: -3.242169141769409
    7. ' and' → logprob: -3.742169141769409
    8. 'for' → logprob: -4.117169380187988
    9. ',' → logprob: -4.242169380187988
    10. ' =' → logprob: -4.492169380187988

Token 1694: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2154139131307602
    2. 'for' → logprob: -2.715413808822632
    3. 'orig' → logprob: -3.715413808822632
    4. 'possible' → logprob: -3.715413808822632
    5. '   ' → logprob: -4.340414047241211
    6. 'allowed' → logprob: -4.590414047241211
    7. 'letters' → logprob: -4.840414047241211
    8. 'c' → logprob: -4.965414047241211
    9. 'candidate' → logprob: -4.965414047241211
    10. '
' → logprob: -5.090414047241211

Token 1695: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8519771099090576
    2. 'c' → logprob: -1.6019771099090576
    3. 'possible' → logprob: -1.9769771099090576
    4. '   ' → logprob: -2.1019771099090576
    5. 'letter' → logprob: -3.4769771099090576
    6. 'def' → logprob: -3.9769771099090576
    7. 'candidate' → logprob: -3.9769771099090576
    8. 'letters' → logprob: -4.601977348327637
    9. 'allowed' → logprob: -4.726977348327637
    10. 'used' → logprob: -4.976977348327637

Token 1696: ' So' (ID: 2632)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.4650681018829346
    2. '#' → logprob: -1.5900681018829346
    3. 'def' → logprob: -1.9650681018829346
    4. 'letters' → logprob: -2.4650681018829346
    5. 'allowed' → logprob: -2.9650681018829346
    6. 'for' → logprob: -3.0900681018829346
    7. 'orig' → logprob: -3.2150681018829346
    8. 'letter' → logprob: -3.3400681018829346
    9. '   ' → logprob: -3.4650681018829346
    10. 'available' → logprob: -3.8400681018829346

Token 1697: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8886604309082031
    2. 'c' → logprob: -1.2636604309082031
    3. 'possible' → logprob: -2.013660430908203
    4. 'for' → logprob: -3.263660430908203
    5. 'letters' → logprob: -3.388660430908203
    6. 'letter' → logprob: -3.513660430908203
    7. 'from' → logprob: -3.513660430908203
    8. 'candidate' → logprob: -4.638660430908203
    9. '   ' → logprob: -5.138660430908203
    10. 'all' → logprob: -5.263660430908203

Token 1698: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20678851008415222
    2. '#' → logprob: -2.3317885398864746
    3. 'need' → logprob: -3.2067885398864746
    4. 'def' → logprob: -4.081788539886475
    5. 'have' → logprob: -4.581788539886475
    6. 'must' → logprob: -5.581788539886475
    7. '   ' → logprob: -6.081788539886475
    8. 'can' → logprob: -6.081788539886475
    9. 'cannot' → logprob: -6.331788539886475
    10. 'do' → logprob: -6.456788539886475

Token 1699: ' all' (ID: 722)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34705421328544617
    2. 'from' → logprob: -1.5970542430877686
    3. 'all' → logprob: -3.8470542430877686
    4. 'import' → logprob: -4.2220540046691895
    5. 'for' → logprob: -4.3470540046691895
    6. ' from' → logprob: -4.5970540046691895
    7. ' all' → logprob: -4.7220540046691895
    8. '   ' → logprob: -5.3470540046691895
    9. ' def' → logprob: -5.4720540046691895
    10. ' for' → logprob: -5.5970540046691895

Token 1700: ' assignments' (ID: 41477)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.004274606704712
    2. ' possible' → logprob: -1.629274606704712
    3. 'def' → logprob: -1.754274606704712
    4. '_possible' → logprob: -2.879274606704712
    5. '   ' → logprob: -3.379274606704712
    6. 'import' → logprob: -3.629274606704712
    7. 'OR' → logprob: -3.879274606704712
    8. ' ' → logprob: -4.254274368286133
    9. ' OR' → logprob: -4.379274368286133
    10. '
' → logprob: -4.879274368286133

Token 1701: ' letter' (ID: 10263)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3816356360912323
    2. 'def' → logprob: -1.7566356658935547
    3. 'for' → logprob: -2.6316356658935547
    4. '{' → logprob: -4.131635665893555
    5. '(
' → logprob: -4.506635665893555
    6. ' from' → logprob: -4.631635665893555
    7. ' for' → logprob: -4.631635665893555
    8. 'import' → logprob: -5.006635665893555
    9. '(' → logprob: -5.256635665893555
    10. '   ' → logprob: -5.631635665893555

Token 1702: '->' (ID: 609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2857975959777832
    2. '_chars' → logprob: -1.2857975959777832
    3. '_positions' → logprob: -1.5357975959777832
    4. 's' → logprob: -2.535797595977783
    5. '_to' → logprob: -3.160797595977783
    6. '_list' → logprob: -4.160797595977783
    7. 'def' → logprob: -4.535797595977783
    8. ')' → logprob: -4.535797595977783
    9. '_choices' → logprob: -4.535797595977783
    10. '   ' → logprob: -4.910797595977783

Token 1703: 'original' (ID: 22155)
  Prédit: 'orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orig' → logprob: -0.5034846663475037
    2. 'OR' → logprob: -1.1284847259521484
    3. 'char' → logprob: -3.5034847259521484
    4. '_orig' → logprob: -4.128484725952148
    5. 'original' → logprob: -4.753484725952148
    6. 'ch' → logprob: -5.503484725952148
    7. 'c' → logprob: -6.378484725952148
    8. ''' → logprob: -6.628484725952148
    9. '_OR' → logprob: -6.878484725952148
    10. 'chars' → logprob: -6.878484725952148

Token 1704: ' char' (ID: 1826)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.08382485806941986
    2. '_' → logprob: -2.958824872970581
    3. '_char' → logprob: -4.458824634552002
    4. '```' → logprob: -4.833824634552002
    5. '_CH' → logprob: -5.833824634552002
    6. ' _' → logprob: -6.208824634552002
    7. '_CHAR' → logprob: -6.458824634552002
    8. '
' → logprob: -7.583824634552002
    9. '_
' → logprob: -7.583824634552002
    10. '_ch' → logprob: -7.958824634552002

Token 1705: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6289622187614441
    2. 'def' → logprob: -1.0039622783660889
    3. '   ' → logprob: -3.878962278366089
    4. 'for' → logprob: -3.878962278366089
    5. ':
' → logprob: -4.25396203994751
    6. ',' → logprob: -4.62896203994751
    7. ' from' → logprob: -5.00396203994751
    8. ':' → logprob: -5.00396203994751
    9. 'import' → logprob: -5.00396203994751
    10. '
' → logprob: -6.12896203994751

Token 1706: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.03730858862400055
    2. ' OR' → logprob: -3.537308692932129
    3. ')' → logprob: -6.537308692932129
    4. 'range' → logprob: -6.912308692932129
    5. '['' → logprob: -7.037308692932129
    6. 'per' → logprob: -7.662308692932129
    7. ' itertools' → logprob: -7.787308692932129
    8. '[' → logprob: -8.162308692932129
    9. 'def' → logprob: -8.162308692932129
    10. 'it' → logprob: -8.287308692932129

Token 1707: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.0005301565979607403
    2. '_' → logprob: -7.875530242919922
    3. '
' → logprob: -9.125530242919922
    4. 'IGINAL' → logprob: -11.375530242919922
    5. ' _' → logprob: -11.750530242919922
    6. '`' → logprob: -12.000530242919922
    7. '```' → logprob: -12.500530242919922
    8. 'I' → logprob: -13.000530242919922
    9. '_
' → logprob: -13.875530242919922
    10. '

' → logprob: -14.000530242919922

Token 1708: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.750009536743164
    3. '_chars' → logprob: -13.375009536743164
    4. ''_' → logprob: -13.500009536743164
    5. '```' → logprob: -13.750009536743164
    6. '_CHAR' → logprob: -14.000009536743164
    7. ' _' → logprob: -14.250009536743164
    8. 'CH' → logprob: -15.750009536743164
    9. '"_' → logprob: -15.875009536743164
    10. '`' → logprob: -16.000009536743164

Token 1709: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.00667913630604744
    2. '_CH' → logprob: -5.506679058074951
    3. 'AR' → logprob: -6.756679058074951
    4. 'S' → logprob: -7.381679058074951
    5. '_AR' → logprob: -7.756679058074951
    6. '_' → logprob: -9.13167953491211
    7. '```' → logprob: -9.75667953491211
    8. 'ars' → logprob: -10.13167953491211
    9. '   ' → logprob: -10.13167953491211
    10. 'AS' → logprob: -11.25667953491211

Token 1710: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2470073699951172
    2. 'import' → logprob: -1.3720073699951172
    3. 'from' → logprob: -1.7470073699951172
    4. ':
' → logprob: -2.122007369995117
    5. ':' → logprob: -2.622007369995117
    6. '   ' → logprob: -3.122007369995117
    7. '
' → logprob: -4.622007369995117
    8. ',' → logprob: -5.247007369995117
    9. ' =' → logprob: -5.247007369995117
    10. 'for' → logprob: -5.497007369995117

Token 1711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6752244234085083
    2. '#' → logprob: -0.9252244234085083
    3. 'and' → logprob: -3.5502243041992188
    4. 'def' → logprob: -4.300224304199219
    5. 'with' → logprob: -4.300224304199219
    6. ' and' → logprob: -4.675224304199219
    7. 'from' → logprob: -5.175224304199219
    8. '```' → logprob: -5.675224304199219
    9. ',' → logprob: -6.050224304199219
    10. ' with' → logprob: -6.050224304199219

Token 1712: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6330845355987549
    2. '   ' → logprob: -1.0080845355987549
    3. 'and' → logprob: -3.008084535598755
    4. ' and' → logprob: -4.258084297180176
    5. 'with' → logprob: -4.258084297180176
    6. ',' → logprob: -5.758084297180176
    7. ' #' → logprob: -6.133084297180176
    8. 'while' → logprob: -6.383084297180176
    9. 'def' → logprob: -6.383084297180176
    10. ' with' → logprob: -6.508084297180176

Token 1713: ' with' (ID: 483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05733056738972664
    2. '   ' → logprob: -3.18233060836792
    3. 'def' → logprob: -4.43233060836792
    4. 'from' → logprob: -7.18233060836792
    5. 'import' → logprob: -8.057330131530762
    6. ' #' → logprob: -8.182330131530762
    7. 'letters' → logprob: -8.807330131530762
    8. 'visited' → logprob: -8.932330131530762
    9. 'and' → logprob: -9.057330131530762
    10. 'used' → logprob: -9.057330131530762

Token 1714: ' letters' (ID: 18151)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5710437297821045
    2. ' len' → logprob: -2.4460437297821045
    3. 'used' → logprob: -2.5710437297821045
    4. '0' → logprob: -2.8210437297821045
    5. ' no' → logprob: -3.0710437297821045
    6. ' used' → logprob: -3.0710437297821045
    7. 'None' → logprob: -4.071043968200684
    8. 'no' → logprob: -4.321043968200684
    9. 'def' → logprob: -4.571043968200684
    10. 'distinct' → logprob: -4.696043968200684

Token 1715: ' mapping' (ID: 22573)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5204817652702332
    2. '_constraints' → logprob: -3.020481824874878
    3. ' in' → logprob: -3.145481824874878
    4. '_' → logprob: -3.145481824874878
    5. '_not' → logprob: -3.395481824874878
    6. '_to' → logprob: -3.520481824874878
    7. '_ass' → logprob: -3.645481824874878
    8. '_in' → logprob: -3.895481824874878
    9. '_choices' → logprob: -4.270481586456299
    10. ' assigned' → logprob: -4.270481586456299

Token 1716: ' distinct' (ID: 16913)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3562302589416504
    2. 'to' → logprob: -2.2312302589416504
    3. ' to' → logprob: -2.8562302589416504
    4. '=' → logprob: -2.8562302589416504
    5. ' =' → logprob: -4.23123025894165
    6. ' only' → logprob: -4.73123025894165
    7. 'ing' → logprob: -4.85623025894165
    8. '_keys' → logprob: -5.48123025894165
    9. '_items' → logprob: -5.60623025894165
    10. ' not' → logprob: -5.73123025894165

Token 1717: ' original' (ID: 4756)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.18945343792438507
    2. 'chars' → logprob: -2.314453363418579
    3. '_orig' → logprob: -4.439453601837158
    4. ' for' → logprob: -4.814453601837158
    5. ' chars' → logprob: -4.814453601837158
    6. ' original' → logprob: -5.064453601837158
    7. 'for' → logprob: -5.189453601837158
    8. ' characters' → logprob: -5.564453601837158
    9. '_char' → logprob: -5.689453601837158
    10. 'from' → logprob: -5.689453601837158

Token 1718: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.033248770982027054
    2. '_char' → logprob: -4.1582489013671875
    3. 'chars' → logprob: -4.7832489013671875
    4. ' chars' → logprob: -5.1582489013671875
    5. ' _' → logprob: -7.0332489013671875
    6. ')' → logprob: -7.4082489013671875
    7. 'char' → logprob: -8.033248901367188
    8. '_' → logprob: -8.158248901367188
    9. ' characters' → logprob: -8.783248901367188
    10. '_ch' → logprob: -9.533248901367188

Token 1719: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7467196583747864
    2. 'from' → logprob: -1.4967195987701416
    3. ':
' → logprob: -2.4967195987701416
    4. ':' → logprob: -3.1217195987701416
    5. ' =' → logprob: -3.2467195987701416
    6. 'import' → logprob: -3.3717195987701416
    7. ',' → logprob: -3.7467195987701416
    8. 'for' → logprob: -4.246719837188721
    9. 's' → logprob: -4.746719837188721
    10. '=' → logprob: -4.996719837188721

Token 1720: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1524774134159088
    2. '   ' → logprob: -2.027477502822876
    3. 'and' → logprob: -4.902477264404297
    4. ' and' → logprob: -6.902477264404297
    5. 'def' → logprob: -7.402477264404297
    6. 'import' → logprob: -8.902477264404297
    7. ',' → logprob: -9.027477264404297
    8. ')' → logprob: -9.277477264404297
    9. ' #' → logprob: -9.277477264404297
    10. 'from' → logprob: -9.527477264404297

Token 1721: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2952765226364136
    2. '   ' → logprob: -1.4202765226364136
    3. 'and' → logprob: -4.420276641845703
    4. ' and' → logprob: -6.420276641845703
    5. 'def' → logprob: -9.170276641845703
    6. ' #' → logprob: -9.670276641845703
    7. ',' → logprob: -9.670276641845703
    8. '#
' → logprob: -10.670276641845703
    9. ')' → logprob: -11.045276641845703
    10. '.' → logprob: -11.295276641845703

Token 1722: ' apply' (ID: 6096)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12912656366825104
    2. 'and' → logprob: -2.87912654876709
    3. 'def' → logprob: -3.37912654876709
    4. '   ' → logprob: -4.50412654876709
    5. ' and' → logprob: -4.87912654876709
    6. 'from' → logprob: -5.12912654876709
    7. 'import' → logprob: -6.37912654876709
    8. ' #' → logprob: -6.75412654876709
    9. '#
' → logprob: -7.25412654876709
    10. '
' → logprob: -7.37912654876709

Token 1723: ' substitution' (ID: 92838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5312297940254211
    2. 'the' → logprob: -1.9062297344207764
    3. 'mapping' → logprob: -2.4062297344207764
    4. 'lambda' → logprob: -3.6562297344207764
    5. 'expr' → logprob: -3.7812297344207764
    6. 's' → logprob: -4.0312299728393555
    7. ' the' → logprob: -4.1562299728393555
    8. '):
' → logprob: -4.5312299728393555
    9. '   ' → logprob: -4.7812299728393555
    10. ')
' → logprob: -5.1562299728393555

Token 1724: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.65549635887146
    2. '   ' → logprob: -1.03049635887146
    3. 'from' → logprob: -2.90549635887146
    4. 'import' → logprob: -3.40549635887146
    5. '(
' → logprob: -4.905496597290039
    6. 'for' → logprob: -5.030496597290039
    7. ':
' → logprob: -5.530496597290039
    8. ',' → logprob: -5.905496597290039
    9. '#' → logprob: -5.905496597290039
    10. ':' → logprob: -6.155496597290039

Token 1725: ' encrypted' (ID: 47764)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.23518241941928864
    2. 'list' → logprob: -1.6101824045181274
    3. 'the' → logprob: -5.360182285308838
    4. ' expr' → logprob: -6.610182285308838
    5. ' list' → logprob: -6.985182285308838
    6. 'express' → logprob: -7.360182285308838
    7. '[' → logprob: -7.610182285308838
    8. 'range' → logprob: -8.110182762145996
    9. 'generate' → logprob: -8.735182762145996
    10. 'encrypted' → logprob: -8.860182762145996

Token 1726: ' input' (ID: 3422)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.730050802230835
    2. '_expr' → logprob: -1.105050802230835
    3. 'string' → logprob: -2.480050802230835
    4. '_string' → logprob: -3.105050802230835
    5. ' expr' → logprob: -3.605050802230835
    6. '_str' → logprob: -4.230051040649414
    7. ' string' → logprob: -4.605051040649414
    8. ')' → logprob: -6.980051040649414
    9. '
' → logprob: -7.105051040649414
    10. 'expression' → logprob: -7.230051040649414

Token 1727: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17663802206516266
    2. 'def' → logprob: -2.426638126373291
    3. 'import' → logprob: -2.926638126373291
    4. 'from' → logprob: -5.051638126373291
    5. '
' → logprob: -5.551638126373291
    6. ',' → logprob: -6.426638126373291
    7. '```' → logprob: -6.426638126373291
    8. '#' → logprob: -6.551638126373291
    9. 'for' → logprob: -7.301638126373291
    10. ',
' → logprob: -7.301638126373291

Token 1728: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12885445356369019
    2. '   ' → logprob: -2.128854513168335
    3. 'and' → logprob: -6.503854274749756
    4. ' and' → logprob: -8.503854751586914
    5. 'def' → logprob: -9.128854751586914
    6. ' #' → logprob: -9.503854751586914
    7. 'import' → logprob: -11.503854751586914
    8. '```' → logprob: -11.878854751586914
    9. ',' → logprob: -12.628854751586914
    10. ')' → logprob: -12.878854751586914

Token 1729: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2302396148443222
    2. 'and' → logprob: -1.8552396297454834
    3. '#' (adapté à ' #') → logprob: -3.4802396297454834
    4. ' and' → logprob: -4.105239391326904
    5. 'then' → logprob: -7.980239391326904
    6. ' then' → logprob: -7.980239391326904
    7. '
' → logprob: -8.105239868164062
    8. 'replace' → logprob: -8.355239868164062
    9. 'build' → logprob: -8.855239868164062
    10. 'def' → logprob: -9.230239868164062

Token 1730: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1278124451637268
    2. '   ' → logprob: -2.377812385559082
    3. 'count' → logprob: -4.752812385559082
    4. 'and' → logprob: -5.002812385559082
    5. 'def' → logprob: -5.502812385559082
    6. 'validate' → logprob: -5.502812385559082
    7. 'then' → logprob: -6.877812385559082
    8. 'check' → logprob: -7.252812385559082
    9. 'try' → logprob: -7.502812385559082
    10. ' #' → logprob: -7.752812385559082

Token 1731: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5015622973442078
    2. ' if' → logprob: -1.2515623569488525
    3. '   ' → logprob: -3.2515623569488525
    4. 'valid' → logprob: -3.6265623569488525
    5. ')' → logprob: -4.251562118530273
    6. '(
' → logprob: -5.251562118530273
    7. 'len' → logprob: -5.626562118530273
    8. ' validity' → logprob: -6.001562118530273
    9. '(' → logprob: -6.126562118530273
    10. '```' → logprob: -6.251562118530273

Token 1732: ' results' (ID: 4376)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.40404918789863586
    2. 'the' → logprob: -1.9040491580963135
    3. 'all' → logprob: -3.0290491580963135
    4. ' valid' → logprob: -3.7790491580963135
    5. 'parsed' → logprob: -3.7790491580963135
    6. ' all' → logprob: -3.9040491580963135
    7. ' the' → logprob: -4.029049396514893
    8. '#' → logprob: -4.404049396514893
    9. 'it' → logprob: -4.404049396514893
    10. ' it' → logprob: -5.154049396514893

Token 1733: ' have' (ID: 679)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.367902547121048
    2. ' in' → logprob: -1.3679025173187256
    3. '   ' → logprob: -3.9929025173187256
    4. 'ing' → logprob: -4.367902755737305
    5. ' are' → logprob: -5.617902755737305
    6. 's' → logprob: -5.617902755737305
    7. '_in' → logprob: -5.992902755737305
    8. ' ' → logprob: -6.367902755737305
    9. ')' → logprob: -6.367902755737305
    10. 'are' → logprob: -6.617902755737305

Token 1734: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.3904837667942047
    2. 'exact' → logprob: -1.1404837369918823
    3. ''' → logprob: -7.015483856201172
    4. 'one' → logprob: -7.515483856201172
    5. ' one' → logprob: -7.890483856201172
    6. ' exact' → logprob: -8.140483856201172
    7. 'valid' → logprob: -8.265483856201172
    8. ''s' → logprob: -8.265483856201172
    9. 'expr' → logprob: -8.890483856201172
    10. ' valid' → logprob: -9.390483856201172

Token 1735: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.16275109350681305
    2. ' one' → logprob: -1.9127510786056519
    3. '1' → logprob: -6.662751197814941
    4. ' exactly' → logprob: -7.287751197814941
    5. '_one' → logprob: -8.912751197814941
    6. '```' → logprob: -9.037751197814941
    7. '=' → logprob: -9.162751197814941
    8. 'exact' → logprob: -9.537751197814941
    9. ''' → logprob: -9.912751197814941
    10. '==' → logprob: -10.662751197814941

Token 1736: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2723590135574341
    2. '=' → logprob: -1.647359013557434
    3. ''=' → logprob: -3.1473588943481445
    4. ' '='' → logprob: -6.8973588943481445
    5. '('='' → logprob: -7.1473588943481445
    6. '`' → logprob: -8.397358894348145
    7. '='' → logprob: -8.397358894348145
    8. '"' → logprob: -8.647358894348145
    9. '=
' → logprob: -8.897358894348145
    10. 'equals' → logprob: -9.022358894348145

Token 1737: ' literal' (ID: 41271)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11531056463718414
    2. 'def' → logprob: -2.7403106689453125
    3. '
' → logprob: -4.4903106689453125
    4. '#' → logprob: -4.9903106689453125
    5. 'import' → logprob: -4.9903106689453125
    6. ',
' → logprob: -5.7403106689453125
    7. 'for' → logprob: -5.7403106689453125
    8. 'from' → logprob: -5.9903106689453125
    9. ',' → logprob: -6.2403106689453125
    10. ' and' → logprob: -6.7403106689453125

Token 1738: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3691495656967163
    2. '
' → logprob: -1.4941495656967163
    3. 'def' → logprob: -3.119149684906006
    4. 'import' → logprob: -5.244149684906006
    5. ':
' → logprob: -5.244149684906006
    6. '_chars' → logprob: -5.619149684906006
    7. '```' → logprob: -5.744149684906006
    8. ':' → logprob: -5.994149684906006
    9. 'from' → logprob: -6.244149684906006
    10. '_letters' → logprob: -6.244149684906006

Token 1739: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21087315678596497
    2. '   ' → logprob: -1.7108731269836426
    3. 'and' → logprob: -4.710873126983643
    4. ' and' → logprob: -7.960873126983643
    5. ' #' → logprob: -10.4608736038208
    6. 'def' → logprob: -10.8358736038208
    7. '       ' → logprob: -12.4608736038208
    8. 'import' → logprob: -12.4608736038208
    9. '#
' → logprob: -12.9608736038208
    10. ',' → logprob: -13.0858736038208

Token 1740: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6115042567253113
    2. '   ' → logprob: -1.111504316329956
    3. 'and' → logprob: -2.236504316329956
    4. ' and' → logprob: -3.861504316329956
    5. ' #' → logprob: -8.611504554748535
    6. '```' → logprob: -9.486504554748535
    7. ',' → logprob: -9.611504554748535
    8. ')' → logprob: -10.236504554748535
    9. 'def' → logprob: -10.361504554748535
    10. '
' → logprob: -10.361504554748535

Token 1741: ' parse' (ID: 8420)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06378486007452011
    2. '   ' → logprob: -2.9387848377227783
    3. 'and' → logprob: -4.938785076141357
    4. ' #' → logprob: -7.188785076141357
    5. 'count' → logprob: -7.938785076141357
    6. 'then' → logprob: -8.9387845993042
    7. ' and' → logprob: -8.9387845993042
    8. 'def' → logprob: -9.3137845993042
    9. 'try' → logprob: -9.8137845993042
    10. '
' → logprob: -10.1887845993042

Token 1742: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9766465425491333
    2. 'and' → logprob: -1.4766465425491333
    3. ' and' → logprob: -1.7266465425491333
    4. ')' → logprob: -2.1016464233398438
    5. ',' → logprob: -3.6016464233398438
    6. 'expr' → logprob: -3.7266464233398438
    7. ')
' → logprob: -4.476646423339844
    8. '       ' → logprob: -5.351646423339844
    9. '(expr' → logprob: -5.351646423339844
    10. '=' → logprob: -5.601646423339844

Token 1743: ' eval' (ID: 29383)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.009375059977173805
    2. 'eval' → logprob: -4.759375095367432
    3. ' evaluate' → logprob: -7.259375095367432
    4. '   ' → logprob: -10.759374618530273
    5. '
' → logprob: -11.009374618530273
    6. 'check' → logprob: -11.884374618530273
    7. 'validate' → logprob: -12.134374618530273
    8. 'return' → logprob: -13.384374618530273
    9. '```' → logprob: -13.384374618530273
    10. 'if' → logprob: -14.134374618530273

Token 1744: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3444559574127197
    2. 'def' → logprob: -2.0944559574127197
    3. 'for' → logprob: -3.7194559574127197
    4. '
' → logprob: -3.8444559574127197
    5. '_chars' → logprob: -3.9694559574127197
    6. ':
' → logprob: -4.469455718994141
    7. '(
' → logprob: -4.594455718994141
    8. '#' → logprob: -5.094455718994141
    9. ',' → logprob: -5.094455718994141
    10. '_letters' → logprob: -5.219455718994141

Token 1745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6413803696632385
    2. '#' → logprob: -0.7663803696632385
    3. 'and' → logprob: -5.266380310058594
    4. ' and' → logprob: -5.766380310058594
    5. '
' → logprob: -8.766380310058594
    6. ' #' → logprob: -9.641380310058594
    7. 'def' → logprob: -9.891380310058594
    8. 'import' → logprob: -10.141380310058594
    9. ',' → logprob: -10.266380310058594
    10. '```' → logprob: -10.641380310058594

Token 1746: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.620427131652832
    2. '#' (adapté à ' #') → logprob: -0.870427131652832
    3. '
' → logprob: -3.995427131652832
    4. 'and' → logprob: -4.495427131652832
    5. 'def' → logprob: -5.370427131652832
    6. ' and' → logprob: -5.495427131652832
    7. ' #' → logprob: -6.870427131652832
    8. 'import' → logprob: -7.120427131652832
    9. '```' → logprob: -7.245427131652832
    10. '#
' → logprob: -7.370427131652832

Token 1747: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8330268263816833
    2. '#' → logprob: -1.0830268859863281
    3. 'count' → logprob: -1.7080268859863281
    4. 'for' → logprob: -4.208026885986328
    5. '
' → logprob: -4.583026885986328
    6. 'def' → logprob: -5.458026885986328
    7. 'and' → logprob: -5.833026885986328
    8. ' #' → logprob: -6.083026885986328
    9. 'result' → logprob: -6.583026885986328
    10. 'import' → logprob: -6.708026885986328

Token 1748: ' correct' (ID: 6145)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1031742095947266
    2. '   ' → logprob: -1.3531742095947266
    3. '(' → logprob: -2.1031742095947266
    4. '(
' → logprob: -2.6031742095947266
    5. 'def' → logprob: -2.8531742095947266
    6. '_chars' → logprob: -3.7281742095947266
    7. ' =' → logprob: -3.8531742095947266
    8. 'for' → logprob: -4.103174209594727
    9. ':' → logprob: -4.228174209594727
    10. ')' → logprob: -4.353174209594727

Token 1749: '.

' (ID: 364)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.3109567165374756
    2. 'def' → logprob: -2.5609567165374756
    3. '   ' → logprob: -2.6859567165374756
    4. '_' → logprob: -3.3109567165374756
    5. '_letters' → logprob: -3.8109567165374756
    6. 's' → logprob: -4.060956954956055
    7. '_
' → logprob: -4.560956954956055
    8. '_candidates' → logprob: -5.185956954956055
    9. '_map' → logprob: -5.435956954956055
    10. '_char' → logprob: -5.685956954956055

Token 1750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24615070223808289
    2. 'from' → logprob: -2.2461507320404053
    3. 'def' → logprob: -2.7461507320404053
    4. 'import' → logprob: -3.6211507320404053
    5. 'letters' → logprob: -5.496150493621826
    6. 'possible' → logprob: -5.496150493621826
    7. '
' → logprob: -5.996150493621826
    8. 'allowed' → logprob: -6.246150493621826
    9. 'available' → logprob: -6.496150493621826
    10. '#' → logprob: -6.621150493621826

Token 1751: ' letters' (ID: 18151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8249285817146301
    2. 'from' → logprob: -1.4499285221099854
    3. 'def' → logprob: -1.8249285221099854
    4. 'letters' (adapté à ' letters') → logprob: -2.8249285221099854
    5. 'possible' → logprob: -3.3249285221099854
    6. 'import' → logprob: -3.5749285221099854
    7. 'c' → logprob: -3.9499285221099854
    8. 'allowed' → logprob: -4.6999287605285645
    9. '#' → logprob: -5.6999287605285645
    10. 'chars' → logprob: -6.0749287605285645

Token 1752: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02100438065826893
    2. '=' → logprob: -4.1460041999816895
    3. '_list' → logprob: -5.3960041999816895
    4. '=list' → logprob: -8.771004676818848
    5. 'list' → logprob: -9.021004676818848
    6. '_sorted' → logprob: -9.771004676818848
    7. ')' → logprob: -11.146004676818848
    8. '   ' → logprob: -11.271004676818848
    9. 's' → logprob: -11.521004676818848
    10. '_letters' → logprob: -11.521004676818848

Token 1753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.226418137550354
    2. '=' → logprob: -1.601418137550354
    3. ')' → logprob: -7.7264180183410645
    4. '[' → logprob: -8.976418495178223
    5. '.' → logprob: -9.601418495178223
    6. ',' → logprob: -9.726418495178223
    7. '<|end|>' → logprob: -9.726418495178223
    8. '=[]' → logprob: -9.851418495178223
    9. '   ' → logprob: -10.351418495178223
    10. '[:]' → logprob: -10.601418495178223

Token 1754: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10040690749883652
    2. 'sorted' → logprob: -2.3504068851470947
    3. ' list' → logprob: -8.600406646728516
    4. ' sorted' → logprob: -11.100406646728516
    5. '[list' → logprob: -14.225406646728516
    6. '   ' → logprob: -15.475406646728516
    7. '(sorted' → logprob: -15.975406646728516
    8. '[' → logprob: -16.600406646728516
    9. 'tuple' → logprob: -17.475406646728516
    10. 'List' → logprob: -17.725406646728516

Token 1755: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007144584087654948
    2. 'letters' → logprob: -7.375714302062988
    3. '(sorted' → logprob: -9.500714302062988
    4. '_letters' → logprob: -12.000714302062988
    5. '(letter' → logprob: -12.250714302062988
    6. ' letters' → logprob: -14.250714302062988
    7. 'sorted' → logprob: -14.875714302062988
    8. '```' → logprob: -15.125714302062988
    9. 'of' → logprob: -15.375714302062988
    10. '(
' → logprob: -15.375714302062988

Token 1756: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -7.465036105713807e-06
    2. 'letter' → logprob: -12.125007629394531
    3. ' letters' → logprob: -13.375007629394531
    4. 'sorted' → logprob: -15.375007629394531
    5. ')' → logprob: -16.12500762939453
    6. '_letters' → logprob: -17.00000762939453
    7. '(' → logprob: -17.62500762939453
    8. '```' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.62500762939453
    10. 'let' → logprob: -19.12500762939453

Token 1757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12786206603050232
    2. ')
' → logprob: -2.127861976623535
    3. '   ' → logprob: -7.002861976623535
    4. ')

' → logprob: -11.377861976623535
    5. ')
' → logprob: -12.252861976623535
    6. '):
' → logprob: -13.752861976623535
    7. ',' → logprob: -14.002861976623535
    8. ']' → logprob: -14.252861976623535
    9. ' )' → logprob: -14.377861976623535
    10. ' =' → logprob: -14.627861976623535

Token 1758: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9826433062553406
    2. 'possible' → logprob: -1.8576433658599854
    3. '   ' → logprob: -1.9826433658599854
    4. 'import' → logprob: -2.9826433658599854
    5. 'from' → logprob: -3.1076433658599854
    6. 'c' → logprob: -3.3576433658599854
    7. 'allowed' → logprob: -3.6076433658599854
    8. 'num' → logprob: -3.8576433658599854
    9. 'candidate' → logprob: -3.8576433658599854
    10. 'letters' → logprob: -3.8576433658599854

Token 1759: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7793276906013489
    2. 'used' → logprob: -1.904327630996704
    3. 'n' → logprob: -2.654327630996704
    4. 'from' → logprob: -2.779327630996704
    5. 'orig' → logprob: -2.779327630996704
    6. 'M' → logprob: -3.404327630996704
    7. 'possible' → logprob: -3.779327630996704
    8. 'import' → logprob: -3.904327630996704
    9. 'candidate' → logprob: -4.154327869415283
    10. 'N' → logprob: -4.279327869415283

Token 1760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1628209799528122
    2. 'et' → logprob: -2.537821054458618
    3. '=' → logprob: -3.037821054458618
    4. '=len' → logprob: -4.787820816040039
    5. '_' → logprob: -5.412820816040039
    6. 'etter' → logprob: -5.787820816040039
    7. 'en' → logprob: -6.537820816040039
    8. '_len' → logprob: -7.037820816040039
    9. '_size' → logprob: -7.037820816040039
    10. '_letters' → logprob: -7.162820816040039

Token 1761: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001387009397149086
    2. ' len' → logprob: -9.000138282775879
    3. '(len' → logprob: -11.250138282775879
    4. '[len' → logprob: -13.125138282775879
    5. '   ' → logprob: -15.750138282775879
    6. '=len' → logprob: -16.125139236450195
    7. '0' → logprob: -17.125139236450195
    8. '<len' → logprob: -17.875139236450195
    9. ',len' → logprob: -18.250139236450195
    10. '	len' → logprob: -18.250139236450195

Token 1762: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12693022191524506
    2. 'letters' → logprob: -2.1269302368164062
    3. ' letters' → logprob: -13.501930236816406
    4. '(
' → logprob: -15.001930236816406
    5. '_letters' → logprob: -15.376930236816406
    6. '
' → logprob: -16.376930236816406
    7. '(letter' → logprob: -17.001930236816406
    8. 'Letters' → logprob: -17.376930236816406
    9. '```' → logprob: -17.501930236816406
    10. ')' → logprob: -17.751930236816406

Token 1763: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -2.5941604690160602e-05
    2. '(' → logprob: -10.750025749206543
    3. ' letters' → logprob: -12.375025749206543
    4. ')' → logprob: -15.625025749206543
    5. '_letters' → logprob: -17.62502670288086
    6. '```' → logprob: -18.87502670288086
    7. 'Letters' → logprob: -19.62502670288086
    8. '   ' → logprob: -19.62502670288086
    9. 'letter' → logprob: -20.00002670288086
    10. '[' → logprob: -20.00002670288086

Token 1764: '_list' (ID: 4162)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01265067607164383
    2. ')
' → logprob: -4.387650489807129
    3. '   ' → logprob: -9.262650489807129
    4. '
' → logprob: -11.512650489807129
    5. '_)' → logprob: -12.262650489807129
    6. ' )' → logprob: -12.387650489807129
    7. '_list' → logprob: -12.637650489807129
    8. 'def' → logprob: -12.637650489807129
    9. '_' → logprob: -12.887650489807129
    10. '```' → logprob: -12.887650489807129

Token 1765: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009739085100591183
    2. ')
' → logprob: -5.134738922119141
    3. '   ' → logprob: -5.634738922119141
    4. '
' → logprob: -8.50973892211914
    5. 'def' → logprob: -11.88473892211914
    6. '```' → logprob: -12.13473892211914
    7. '    
' → logprob: -12.75973892211914
    8. '):
' → logprob: -12.88473892211914
    9. ')

' → logprob: -13.38473892211914
    10. '#' → logprob: -13.63473892211914

Token 1766: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4676026403903961
    2. '   ' → logprob: -2.3426027297973633
    3. 'from' → logprob: -2.7176027297973633
    4. 'used' → logprob: -3.0926027297973633
    5. 'possible' → logprob: -3.3426027297973633
    6. 'allowed' → logprob: -3.8426027297973633
    7. 'import' → logprob: -3.8426027297973633
    8. 'orig' → logprob: -4.092602729797363
    9. 'assigned' → logprob: -4.217602729797363
    10. '
' → logprob: -4.467602729797363

Token 1767: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1085481643676758
    2. 'from' → logprob: -1.1085481643676758
    3. 'possible' → logprob: -2.858548164367676
    4. 'orig' → logprob: -2.983548164367676
    5. 'c' → logprob: -3.108548164367676
    6. 'import' → logprob: -3.233548164367676
    7. 'candidate' → logprob: -3.358548164367676
    8. 'allowed' → logprob: -3.483548164367676
    9. 'used' → logprob: -3.858548164367676
    10. '   ' → logprob: -4.108548164367676

Token 1768: ' Pre' (ID: 4659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44493335485458374
    2. 'from' → logprob: -1.6949334144592285
    3. 'import' → logprob: -2.4449334144592285
    4. 'possible' → logprob: -3.6949334144592285
    5. '   ' → logprob: -3.8199334144592285
    6. 'allowed' → logprob: -4.0699334144592285
    7. 'c' → logprob: -4.5699334144592285
    8. 'available' → logprob: -5.4449334144592285
    9. '#' → logprob: -6.3199334144592285
    10. 'candidate' → logprob: -6.8199334144592285

Token 1769: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.020409345626831
    2. 'compute' → logprob: -1.895409345626831
    3. 'd' → logprob: -2.145409345626831
    4. 'computed' → logprob: -2.270409345626831
    5. 'dict' → logprob: -2.520409345626831
    6. 'c' → logprob: -2.770409345626831
    7. 'vious' → logprob: -4.02040958404541
    8. 'def' → logprob: -4.02040958404541
    9. '#' → logprob: -4.14540958404541
    10. 'f' → logprob: -4.39540958404541

Token 1770: ' literals' (ID: 193569)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.2678273916244507
    2. 'pos' → logprob: -2.0178275108337402
    3. 'used' → logprob: -2.0178275108337402
    4. 'from' → logprob: -2.1428275108337402
    5. 'letter' → logprob: -2.7678275108337402
    6. 'positions' → logprob: -2.8928275108337402
    7. '#' → logprob: -3.1428275108337402
    8. 'char' → logprob: -3.1428275108337402
    9. 'orig' → logprob: -3.5178275108337402
    10. 'allowed' → logprob: -3.5178275108337402

Token 1771: ' positions' (ID: 15897)
  Prédit: '_literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_literals' → logprob: -1.0733575820922852
    2. '_literal' → logprob: -1.3233575820922852
    3. '_positions' → logprob: -2.198357582092285
    4. '_pos' → logprob: -2.198357582092285
    5. '   ' → logprob: -3.323357582092285
    6. 'literal' → logprob: -3.323357582092285
    7. '_is' → logprob: -3.448357582092285
    8. ' =' → logprob: -3.823357582092285
    9. 'pos' → logprob: -4.698357582092285
    10. 'is' → logprob: -4.948357582092285

Token 1772: ' to' (ID: 316)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.4766668975353241
    2. '=' → logprob: -1.4766669273376465
    3. ' =' → logprob: -2.7266669273376465
    4. '_literals' → logprob: -3.6016669273376465
    5. '_literal' → logprob: -3.9766669273376465
    6. 'l' → logprob: -4.3516669273376465
    7. '   ' → logprob: -4.8516669273376465
    8. 'lit' → logprob: -4.8516669273376465
    9. 'non' → logprob: -5.7266669273376465
    10. ' literals' → logprob: -6.9766669273376465

Token 1773: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.9945957064628601
    2. 'exclude' → logprob: -1.8695957660675049
    3. 'assign' → logprob: -2.369595766067505
    4. '{' → logprob: -2.744595766067505
    5. 'try' → logprob: -2.744595766067505
    6. 'set' → logprob: -2.869595766067505
    7. 'orig' → logprob: -3.244595766067505
    8. 'avoid' → logprob: -3.369595766067505
    9. 'map' → logprob: -3.494595766067505
    10. 'original' → logprob: -3.869595766067505

Token 1774: ' no' (ID: 860)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.27548059821128845
    2. 'l' → logprob: -1.5254806280136108
    3. '   ' → logprob: -4.1504807472229
    4. 'lit' → logprob: -6.1504807472229
    5. '#' → logprob: -6.5254807472229
    6. 'used' → logprob: -7.1504807472229
    7. 'non' → logprob: -7.7754807472229
    8. ' literals' → logprob: -7.9004807472229
    9. 'is' → logprob: -8.150480270385742
    10. 'for' → logprob: -8.275480270385742

Token 1775: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.12619484961032867
    2. ' conflicts' → logprob: -3.876194953918457
    3. ' overlap' → logprob: -4.126194953918457
    4. 'over' → logprob: -4.251194953918457
    5. 'repeat' → logprob: -4.626194953918457
    6. 'reuse' → logprob: -4.751194953918457
    7. 'collision' → logprob: -5.126194953918457
    8. ' conflict' → logprob: -5.251194953918457
    9. 'duplicates' → logprob: -5.376194953918457
    10. 'duplicate' → logprob: -5.501194953918457

Token 1776: '
' (ID: 198)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.4312564730644226
    2. 'l' → logprob: -1.3062565326690674
    3. '   ' → logprob: -2.8062565326690674
    4. 'lit' → logprob: -5.806256294250488
    5. 'used' → logprob: -5.931256294250488
    6. '#' → logprob: -6.056256294250488
    7. 'for' → logprob: -6.431256294250488
    8. 'non' → logprob: -6.931256294250488
    9. '
' → logprob: -6.931256294250488
    10. '=' → logprob: -7.056256294250488

Token 1777: '   ' (ID: 271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.6948531270027161
    2. 'used' → logprob: -1.5698530673980713
    3. 'l' → logprob: -2.5698530673980713
    4. 'letter' → logprob: -3.4448530673980713
    5. 'assigned' → logprob: -3.5698530673980713
    6. 'possible' → logprob: -3.6948530673980713
    7. 'for' → logprob: -3.8198530673980713
    8. '#' → logprob: -3.9448530673980713
    9. '   ' → logprob: -4.81985330581665
    10. '
' → logprob: -4.94485330581665

Token 1778: ' #' (ID: 1069)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.3994966447353363
    2. 'l' → logprob: -1.1494966745376587
    3. 'lit' → logprob: -5.774496555328369
    4. 'pos' → logprob: -6.524496555328369
    5. 'used' → logprob: -6.524496555328369
    6. '#' (adapté à ' #') → logprob: -6.524496555328369
    7. 'conf' → logprob: -7.149496555328369
    8. 'letter' → logprob: -7.649496555328369
    9. 'occupied' → logprob: -7.649496555328369
    10. 'fixed' → logprob: -7.774496555328369

Token 1779: ' For' (ID: 2214)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.47783833742141724
    2. 'l' → logprob: -1.1028382778167725
    3. '#' → logprob: -4.477838516235352
    4. 'used' → logprob: -5.102838516235352
    5. 'orig' → logprob: -5.227838516235352
    6. 'lit' → logprob: -5.352838516235352
    7. 'pos' → logprob: -5.602838516235352
    8. 'conf' → logprob: -6.227838516235352
    9. '   ' → logprob: -6.352838516235352
    10. 'encrypted' → logprob: -6.477838516235352

Token 1780: ' literal' (ID: 41271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7923783659934998
    2. 'pos' → logprob: -0.7923783659934998
    3. 'lit' → logprob: -3.0423784255981445
    4. 'l' → logprob: -4.6673784255981445
    5. 'literal' → logprob: -5.2923784255981445
    6. 'c' → logprob: -5.4173784255981445
    7. 'letter' → logprob: -5.5423784255981445
    8. '_' → logprob: -5.6673784255981445
    9. '_literal' → logprob: -5.6673784255981445
    10. 'ch' → logprob: -5.9173784255981445

Token 1781: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.3111790120601654
    2. 's' → logprob: -2.4361789226531982
    3. 'positions' → logprob: -2.5611789226531982
    4. 'pos' → logprob: -2.5611789226531982
    5. '_pos' → logprob: -4.811179161071777
    6. 'expr' → logprob: -5.811179161071777
    7. 'in' → logprob: -6.061179161071777
    8. 'i' → logprob: -6.811179161071777
    9. '_to' → logprob: -7.186179161071777
    10. 'def' → logprob: -7.186179161071777

Token 1782: ':' (ID: 25)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.053167957812547684
    2. 'l' → logprob: -4.053167819976807
    3. 'lit' → logprob: -4.803167819976807
    4. '   ' → logprob: -5.053167819976807
    5. 'pos' → logprob: -5.053167819976807
    6. 'for' → logprob: -5.303167819976807
    7. 'non' → logprob: -5.803167819976807
    8. 'i' → logprob: -7.053167819976807
    9. '=' → logprob: -7.053167819976807
    10. '#' → logprob: -7.678167819976807

Token 1783: ' if' (ID: 538)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.5481400489807129
    2. 'for' → logprob: -0.9231400489807129
    3. '   ' → logprob: -4.423140048980713
    4. 'l' → logprob: -5.548140048980713
    5. 'lit' → logprob: -6.048140048980713
    6. 'non' → logprob: -6.298140048980713
    7. 'pos' → logprob: -6.673140048980713
    8. ' literal' → logprob: -7.298140048980713
    9. ' for' → logprob: -7.423140048980713
    10. 'if' → logprob: -7.548140048980713

Token 1784: ' ch' (ID: 549)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3218015730381012
    2. 'expr' → logprob: -1.3218015432357788
    3. 'ch' → logprob: -5.196801662445068
    4. ' not' → logprob: -6.446801662445068
    5. 'i' → logprob: -8.44680118560791
    6. 'chr' → logprob: -8.44680118560791
    7. '#' → logprob: -8.69680118560791
    8. '   ' → logprob: -8.82180118560791
    9. ' expr' → logprob: -8.94680118560791
    10. 'express' → logprob: -9.44680118560791

Token 1785: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7542704343795776
    2. ' in' → logprob: -1.3792704343795776
    3. 'not' → logprob: -1.7542704343795776
    4. 'in' → logprob: -2.379270553588867
    5. '```' → logprob: -5.629270553588867
    6. 'is' → logprob: -6.129270553588867
    7. '==' → logprob: -6.629270553588867
    8. ' !=' → logprob: -6.754270553588867
    9. '!=' → logprob: -6.754270553588867
    10. ' is' → logprob: -7.129270553588867

Token 1786: ' letter' (ID: 10263)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.026376008987426758
    2. ' in' → logprob: -3.9013760089874268
    3. 'ch' → logprob: -5.401375770568848
    4. 'letters' → logprob: -8.151375770568848
    5. 'alpha' → logprob: -8.401375770568848
    6. 'is' → logprob: -8.651375770568848
    7. '```' → logprob: -9.276375770568848
    8. ''' → logprob: -9.276375770568848
    9. 'a' → logprob: -9.526375770568848
    10. ''in' → logprob: -9.776375770568848

Token 1787: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9513760209083557
    2. 'if' → logprob: -2.326375961303711
    3. 'for' → logprob: -2.451375961303711
    4. ':
' → logprob: -2.701375961303711
    5. ' not' → logprob: -2.826375961303711
    6. ' in' → logprob: -2.826375961303711
    7. ' if' → logprob: -2.951375961303711
    8. ' for' → logprob: -3.076375961303711
    9. ',' → logprob: -3.576375961303711
    10. 'not' → logprob: -3.701375961303711

Token 1788: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5797644257545471
    2. '   ' → logprob: -2.0797643661499023
    3. 'orig' → logprob: -2.5797643661499023
    4. 'original' → logprob: -2.7047643661499023
    5. '#' → logprob: -2.9547643661499023
    6. ' if' → logprob: -3.3297643661499023
    7. ' original' → logprob: -3.9547643661499023
    8. 'not' → logprob: -4.454764366149902
    9. 'continue' → logprob: -4.579764366149902
    10. '
' → logprob: -5.204764366149902

Token 1789: ' match' (ID: 3981)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8106234669685364
    2. 'match' → logprob: -0.8106234669685364
    3. 'equal' → logprob: -3.0606234073638916
    4. '==' → logprob: -3.8106234073638916
    5. 'not' → logprob: -4.060623645782471
    6. ' be' → logprob: -5.060623645782471
    7. ' match' → logprob: -5.310623645782471
    8. '=' → logprob: -5.435623645782471
    9. 'remain' → logprob: -5.435623645782471
    10. 'in' → logprob: -6.185623645782471

Token 1790: ' itself' (ID: 8807)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.9888601303100586
    2. ''' → logprob: -2.4888601303100586
    3. '{' → logprob: -2.7388601303100586
    4. '=' → logprob: -2.7388601303100586
    5. '   ' → logprob: -2.8638601303100586
    6. 'for' → logprob: -2.9888601303100586
    7. 'if' → logprob: -3.3638601303100586
    8. '#' → logprob: -3.8638601303100586
    9. 'def' → logprob: -3.8638601303100586
    10. ' at' → logprob: -3.9888601303100586

Token 1791: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3442977666854858
    2. 'def' → logprob: -1.8442977666854858
    3. 'possible' → logprob: -1.8442977666854858
    4. '
' → logprob: -2.5942978858947754
    5. '#' → logprob: -2.8442978858947754
    6. 'orig' → logprob: -2.9692978858947754
    7. 'for' → logprob: -3.0942978858947754
    8. 'allowed' → logprob: -3.2192978858947754
    9. 'literal' → logprob: -3.9692978858947754
    10. 'used' → logprob: -4.094297885894775

Token 1792: ' final' (ID: 1721)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.5588110685348511
    2. 'expr' → logprob: -1.058811068534851
    3. 'the' → logprob: -3.0588111877441406
    4. 'orig' → logprob: -4.183811187744141
    5. 'sub' → logprob: -4.808811187744141
    6. 'encrypted' → logprob: -5.808811187744141
    7. '#' → logprob: -6.433811187744141
    8. '
' → logprob: -6.683811187744141
    9. 'candidate' → logprob: -7.058811187744141
    10. 'expression' → logprob: -7.058811187744141

Token 1793: ' mapping' (ID: 22573)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23639681935310364
    2. 'def' → logprob: -2.4863967895507812
    3. 'for' → logprob: -3.7363967895507812
    4. '
' → logprob: -3.7363967895507812
    5. '#' → logprob: -3.9863967895507812
    6. 'orig' → logprob: -3.9863967895507812
    7. 'literal' → logprob: -4.736396789550781
    8. 'if' → logprob: -5.361396789550781
    9. ' =' → logprob: -5.861396789550781
    10. 'possible' → logprob: -5.986396789550781

Token 1794: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3881995975971222
    2. 'def' → logprob: -1.6381995677947998
    3. '
' → logprob: -3.0131995677948
    4. 'possible' → logprob: -3.6381995677948
    5. 'allowed' → logprob: -4.513199806213379
    6. 'orig' → logprob: -4.638199806213379
    7. '#' → logprob: -4.763199806213379
    8. 'used' → logprob: -5.513199806213379
    9. 'assigned' → logprob: -5.638199806213379
    10. 'available' → logprob: -6.013199806213379

Token 1795: '   ' (ID: 271)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.00721412617713213
    2. 'l' → logprob: -5.632214069366455
    3. '   ' → logprob: -6.757214069366455
    4. 'non' → logprob: -7.132214069366455
    5. 'lit' → logprob: -7.132214069366455
    6. '#' → logprob: -8.507214546203613
    7. 'for' → logprob: -8.507214546203613
    8. 'fixed' → logprob: -8.757214546203613
    9. '
' → logprob: -9.882214546203613
    10. '```' → logprob: -9.882214546203613

Token 1796: ' #' (ID: 1069)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.0107327401638031
    2. 'l' → logprob: -5.760732650756836
    3. 'fixed' → logprob: -6.260732650756836
    4. 'used' → logprob: -6.885732650756836
    5. 'for' → logprob: -6.885732650756836
    6. 'lit' → logprob: -6.885732650756836
    7. '#' (adapté à ' #') → logprob: -7.635732650756836
    8. 'non' → logprob: -7.885732650756836
    9. 'conf' → logprob: -8.135732650756836
    10. 'pos' → logprob: -8.510732650756836

Token 1797: ' After' (ID: 6311)
  Prédit: 'literal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'literal' → logprob: -0.08610069751739502
    2. 'l' → logprob: -3.2111005783081055
    3. 'used' → logprob: -4.4611005783081055
    4. 'for' → logprob: -4.9611005783081055
    5. '#' → logprob: -5.3361005783081055
    6. 'fixed' → logprob: -5.4611005783081055
    7. 'pos' → logprob: -5.7111005783081055
    8. 'orig' → logprob: -6.0861005783081055
    9. 'lit' → logprob: -6.4611005783081055
    10. 'conf' → logprob: -6.4611005783081055

Token 1798: ' substitution' (ID: 92838)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.8327215313911438
    2. '#' → logprob: -1.207721471786499
    3. '   ' → logprob: -2.207721471786499
    4. 'for' → logprob: -3.582721471786499
    5. 'def' → logprob: -3.582721471786499
    6. 'len' → logprob: -3.582721471786499
    7. '
' → logprob: -4.457721710205078
    8. ' letters' → logprob: -4.957721710205078
    9. ')' → logprob: -5.082721710205078
    10. 'import' → logprob: -5.332721710205078

Token 1799: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0202430486679077
    2. ':
' → logprob: -2.0202431678771973
    3. ' =' → logprob: -2.3952431678771973
    4. '#' → logprob: -2.8952431678771973
    5. 'for' → logprob: -2.8952431678771973
    6. 'def' → logprob: -2.8952431678771973
    7. '
' → logprob: -3.1452431678771973
    8. '=' → logprob: -3.1452431678771973
    9. ':' → logprob: -3.2702431678771973
    10. 'if' → logprob: -3.8952431678771973

Token 1800: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.0032845442183315754
    2. 'all' → logprob: -6.128284454345703
    3. 'each' → logprob: -7.753284454345703
    4. 'letter' → logprob: -8.128284454345703
    5. ' letters' → logprob: -8.378284454345703
    6. 'the' → logprob: -9.253284454345703
    7. 'encrypted' → logprob: -11.878284454345703
    8. 'mapping' → logprob: -12.003284454345703
    9. '
' → logprob: -12.128284454345703
    10. '#' → logprob: -12.503284454345703

Token 1801: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.667170524597168
    2. ' =' → logprob: -2.167170524597168
    3. '#' → logprob: -2.417170524597168
    4. 'used' → logprob: -2.417170524597168
    5. 'possible' → logprob: -2.417170524597168
    6. 'for' → logprob: -2.542170524597168
    7. 'def' → logprob: -2.792170524597168
    8. 'allowed' → logprob: -3.042170524597168
    9. '
' → logprob: -3.042170524597168
    10. '=' → logprob: -3.417170524597168

Token 1802: ' combined' (ID: 15890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5531538128852844
    2. '#' → logprob: -1.6781537532806396
    3. '   ' → logprob: -2.0531537532806396
    4. ' for' → logprob: -3.6781537532806396
    5. 'def' → logprob: -3.8031537532806396
    6. 'original' → logprob: -4.303153991699219
    7. 'we' → logprob: -4.678153991699219
    8. 'final' → logprob: -5.053153991699219
    9. '
' → logprob: -5.178153991699219
    10. 'orig' → logprob: -5.303153991699219

Token 1803: ' string' (ID: 1621)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2111214399337769
    2. '#' → logprob: -1.5861214399337769
    3. ' =' → logprob: -2.2111215591430664
    4. '   ' → logprob: -2.4611215591430664
    5. 'must' → logprob: -2.5861215591430664
    6. 'mapping' → logprob: -2.9611215591430664
    7. 'for' → logprob: -3.2111215591430664
    8. '
' → logprob: -3.9611215591430664
    9. 'expr' → logprob: -4.336121559143066
    10. 'original' → logprob: -4.961121559143066

Token 1804: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235658288002014
    2. '   ' → logprob: -1.5235657691955566
    3. '=' → logprob: -2.2735657691955566
    4. 'final' → logprob: -4.148565769195557
    5. '
' → logprob: -4.398565769195557
    6. '#' → logprob: -4.773565769195557
    7. '_sub' → logprob: -4.898565769195557
    8. 'def' → logprob: -5.148565769195557
    9. 'sub' → logprob: -5.398565769195557
    10. 's' → logprob: -5.648565769195557

Token 1805: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3522910177707672
    2. ' =' → logprob: -1.2272909879684448
    3. 's' → logprob: -6.477291107177734
    4. '=
' → logprob: -7.227291107177734
    5. '=[]' → logprob: -7.977291107177734
    6. '=""' → logprob: -8.352291107177734
    7. '   ' → logprob: -8.727291107177734
    8. '=[]
' → logprob: -8.852291107177734
    9. '=''' → logprob: -9.227291107177734
    10. '```' → logprob: -9.477291107177734

Token 1806: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40835490822792053
    2. '=' → logprob: -1.2833548784255981
    3. '   ' → logprob: -3.7833549976348877
    4. 's' → logprob: -4.158354759216309
    5. '
' → logprob: -4.908354759216309
    6. '#' → logprob: -5.908354759216309
    7. 'final' → logprob: -6.658354759216309
    8. '```' → logprob: -6.658354759216309
    9. 'def' → logprob: -6.783354759216309
    10. '=
' → logprob: -6.908354759216309

Token 1807: ' original' (ID: 4756)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3735978901386261
    2. 'expr' → logprob: -2.7485978603363037
    3. '[]
' → logprob: -3.1235978603363037
    4. '''.' → logprob: -3.1235978603363037
    5. '''' → logprob: -3.3735978603363037
    6. '""' → logprob: -3.7485978603363037
    7. '   ' → logprob: -4.123598098754883
    8. '['' → logprob: -4.248598098754883
    9. 'len' → logprob: -4.373598098754883
    10. 'final' → logprob: -4.748598098754883

Token 1808: ' string' (ID: 1621)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3862687945365906
    2. 'def' → logprob: -2.0112688541412354
    3. '
' → logprob: -2.1362688541412354
    4. 'from' → logprob: -4.261268615722656
    5. 'import' → logprob: -4.636268615722656
    6. 'used' → logprob: -4.761268615722656
    7. '#' → logprob: -4.886268615722656
    8. '```' → logprob: -5.261268615722656
    9. 'possible' → logprob: -5.511268615722656
    10. 'allowed' → logprob: -5.636268615722656

Token 1809: ' candidate' (ID: 17098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45628806948661804
    2. '
' → logprob: -1.7062880992889404
    3. 'def' → logprob: -2.5812880992889404
    4. ' =' → logprob: -3.7062880992889404
    5. '```' → logprob: -4.706287860870361
    6. ')
' → logprob: -4.706287860870361
    7. '#' → logprob: -4.956287860870361
    8. ' for' → logprob: -5.206287860870361
    9. 'import' → logprob: -5.206287860870361
    10. 'for' → logprob: -5.331287860870361

Token 1810: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14734476804733276
    2. 'def' → logprob: -2.6473448276519775
    3. '
' → logprob: -4.147344589233398
    4. '#' → logprob: -4.897344589233398
    5. ')
' → logprob: -5.147344589233398
    6. 'allowed' → logprob: -5.272344589233398
    7. 'possible' → logprob: -5.522344589233398
    8. 'import' → logprob: -5.772344589233398
    9. 'for' → logprob: -6.272344589233398
    10. ' =' → logprob: -6.272344589233398

Token 1811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0121186971664429
    2. 'def' → logprob: -1.6371186971664429
    3. 'used' → logprob: -2.3871188163757324
    4. 'possible' → logprob: -2.3871188163757324
    5. 'allowed' → logprob: -2.7621188163757324
    6. 'c' → logprob: -3.1371188163757324
    7. 'available' → logprob: -3.1371188163757324
    8. '#' → logprob: -3.7621188163757324
    9. '
' → logprob: -4.012118816375732
    10. 'assigned' → logprob: -4.387118816375732

Token 1812: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8725958466529846
    2. '   ' → logprob: -1.6225957870483398
    3. 'c' → logprob: -1.9975957870483398
    4. 'possible' → logprob: -2.62259578704834
    5. 'allowed' → logprob: -3.12259578704834
    6. 'used' → logprob: -3.12259578704834
    7. 'available' → logprob: -3.74759578704834
    8. '
' → logprob: -4.87259578704834
    9. 'orig' → logprob: -5.12259578704834
    10. '```' → logprob: -5.12259578704834

Token 1813: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8512534499168396
    2. 'def' → logprob: -1.9762535095214844
    3. ')' → logprob: -2.1012535095214844
    4. '9' → logprob: -2.7262535095214844
    5. ')
' → logprob: -3.1012535095214844
    6. 'for' → logprob: -3.3512535095214844
    7. 'possible' → logprob: -3.3512535095214844
    8. 'OR' → logprob: -3.4762535095214844
    9. '):
' → logprob: -4.851253509521484
    10. ']' → logprob: -4.851253509521484

Token 1814: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03705405816435814
    2. 'from' → logprob: -4.037054061889648
    3. 'import' → logprob: -4.537054061889648
    4. '
' → logprob: -5.787054061889648
    5. '   ' → logprob: -6.037054061889648
    6. '```' → logprob: -7.412054061889648
    7. 'continue' → logprob: -7.537054061889648
    8. '#' → logprob: -8.162054061889648
    9. ' def' → logprob: -8.787054061889648
    10. 'indent' → logprob: -8.912054061889648

Token 1815: ' DFS' (ID: 115767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001581162796355784
    2. '
' → logprob: -7.001581192016602
    3. '   ' → logprob: -8.126581192016602
    4. 'from' → logprob: -9.001581192016602
    5. '```' → logprob: -9.251581192016602
    6. 'lambda' → logprob: -10.376581192016602
    7. '#' → logprob: -10.376581192016602
    8. 'letter' → logprob: -10.501581192016602
    9. 'import' → logprob: -10.876581192016602
    10. 'possible' → logprob: -11.626581192016602

Token 1816: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025563618168234825
    2. '   ' → logprob: -3.7755637168884277
    3. '
' → logprob: -6.275563716888428
    4. 'stack' → logprob: -8.40056324005127
    5. 'allowed' → logprob: -9.65056324005127
    6. 'from' → logprob: -10.40056324005127
    7. ' def' → logprob: -10.40056324005127
    8. '#' → logprob: -11.02556324005127
    9. '    
' → logprob: -11.15056324005127
    10. 'import' → logprob: -11.40056324005127

Token 1817: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.5751821994781494
    2. 'def' → logprob: -1.0751821994781494
    3. 'search' → logprob: -3.2001821994781494
    4. 'dfs' → logprob: -3.7001821994781494
    5. '   ' → logprob: -4.20018196105957
    6. '
' → logprob: -6.20018196105957
    7. 'solve' → logprob: -6.20018196105957
    8. 'expl' → logprob: -6.57518196105957
    9. 'letter' → logprob: -6.70018196105957
    10. 'index' → logprob: -6.70018196105957

Token 1818: ' letters' (ID: 18151)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0799180269241333
    2. 'i' → logprob: -1.4549180269241333
    3. 'idx' → logprob: -1.9549180269241333
    4. 'def' → logprob: -2.0799179077148438
    5. '   ' → logprob: -2.7049179077148438
    6. 'index' → logprob: -2.9549179077148438
    7. '```' → logprob: -4.579917907714844
    8. 'letter' → logprob: -4.954917907714844
    9. 'lambda' → logprob: -5.454917907714844
    10. ' idx' → logprob: -5.704917907714844

Token 1819: ' distinct' (ID: 16913)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10764608532190323
    2. '(i' → logprob: -3.2326459884643555
    3. '(' → logprob: -3.8576459884643555
    4. '(index' → logprob: -4.3576459884643555
    5. '(idx' → logprob: -4.4826459884643555
    6. '   ' → logprob: -4.8576459884643555
    7. '(
' → logprob: -5.6076459884643555
    8. '```' → logprob: -6.9826459884643555
    9. '(depth' → logprob: -7.3576459884643555
    10. '(l' → logprob: -7.3576459884643555

Token 1820: ' original' (ID: 4756)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.5021812319755554
    2. 'chars' → logprob: -1.3771812915802002
    3. '_original' → logprob: -3.1271812915802
    4. 'original' → logprob: -3.5021812915802
    5. '_orig' → logprob: -3.8771812915802
    6. 'def' → logprob: -4.252181053161621
    7. 'orig' → logprob: -5.377181053161621
    8. 'OR' → logprob: -5.502181053161621
    9. '_char' → logprob: -5.502181053161621
    10. ')' → logprob: -5.877181053161621

Token 1821: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0964251309633255
    2. '_char' → logprob: -2.7214250564575195
    3. 'chars' → logprob: -4.9714250564575195
    4. 'char' → logprob: -5.7214250564575195
    5. '   ' → logprob: -5.8464250564575195
    6. '
' → logprob: -5.8464250564575195
    7. ' chars' → logprob: -5.9714250564575195
    8. ' _' → logprob: -6.5964250564575195
    9. ' ' → logprob: -6.8464250564575195
    10. '       ' → logprob: -7.0964250564575195

Token 1822: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017953136935830116
    2. '   ' → logprob: -4.392952919006348
    3. '(
' → logprob: -7.392952919006348
    4. ':' → logprob: -7.392952919006348
    5. '```' → logprob: -7.392952919006348
    6. ',' → logprob: -7.642952919006348
    7. 'import' → logprob: -7.892952919006348
    8. ':
' → logprob: -7.892952919006348
    9. '
' → logprob: -7.892952919006348
    10. ' def' → logprob: -8.142952919006348

Token 1823: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09567757695913315
    2. '   ' → logprob: -2.470677614212036
    3. '
' → logprob: -5.095677375793457
    4. ' def' → logprob: -8.345677375793457
    5. 'allowed' → logprob: -8.845677375793457
    6. '    
' → logprob: -9.470677375793457
    7. 'used' → logprob: -10.470677375793457
    8. 'possible' → logprob: -10.845677375793457
    9. '```' → logprob: -10.970677375793457
    10. 'import' → logprob: -11.220677375793457

Token 1824: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1812324970960617
    2. '   ' → logprob: -2.056232452392578
    3. 'used' → logprob: -4.681232452392578
    4. 'allowed' → logprob: -4.806232452392578
    5. 'possible' → logprob: -5.556232452392578
    6. '
' → logprob: -5.681232452392578
    7. 'assigned' → logprob: -5.806232452392578
    8. 'c' → logprob: -6.181232452392578
    9. 'assign' → logprob: -6.306232452392578
    10. 'available' → logprob: -6.556232452392578

Token 1825: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21957126259803772
    2. '   ' → logprob: -1.7195712327957153
    3. 'import' → logprob: -5.344571113586426
    4. 'from' → logprob: -5.469571113586426
    5. '
' → logprob: -5.969571113586426
    6. ' def' → logprob: -6.469571113586426
    7. 'allowed' → logprob: -6.594571113586426
    8. 'possible' → logprob: -7.469571113586426
    9. 'c' → logprob: -7.844571113586426
    10. 'stack' → logprob: -8.094571113586426

Token 1826: ' store' (ID: 4897)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08590786904096603
    2. ' =' → logprob: -3.0859079360961914
    3. ' def' → logprob: -3.8359079360961914
    4. '=' → logprob: -4.710907936096191
    5. '   ' → logprob: -5.460907936096191
    6. '_' → logprob: -7.960907936096191
    7. '```' → logprob: -8.835907936096191
    8. 'import' → logprob: -9.085907936096191
    9. ':' → logprob: -9.210907936096191
    10. ')' → logprob: -9.210907936096191

Token 1827: ':
' (ID: 734)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.7015284895896912
    2. 'used' → logprob: -1.451528549194336
    3. '{
' → logprob: -2.326528549194336
    4. 'def' → logprob: -2.951528549194336
    5. 'mapping' → logprob: -3.326528549194336
    6. '{}' → logprob: -3.451528549194336
    7. 'idx' → logprob: -4.576528549194336
    8. '{' → logprob: -4.701528549194336
    9. 'assign' → logprob: -5.076528549194336
    10. 'visited' → logprob: -5.701528549194336

Token 1828: '   ' (ID: 271)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6419856548309326
    2. 'used' → logprob: -1.8919856548309326
    3. 'possible' → logprob: -2.7669856548309326
    4. '   ' → logprob: -2.7669856548309326
    5. '```' → logprob: -3.0169856548309326
    6. 'mapping' → logprob: -3.6419856548309326
    7. ' assigned' → logprob: -3.8919856548309326
    8. 'letter' → logprob: -3.8919856548309326
    9. 'def' → logprob: -4.016985893249512
    10. '``' → logprob: -5.016985893249512

Token 1829: ' #' (ID: 1069)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9177055358886719
    2. 'assigned' → logprob: -1.2927055358886719
    3. 'used' → logprob: -1.6677055358886719
    4. 'mapping' → logprob: -3.792705535888672
    5. 'letter' → logprob: -4.167705535888672
    6. 'possible' → logprob: -4.292705535888672
    7. ' assigned' → logprob: -4.292705535888672
    8. ' used' → logprob: -4.542705535888672
    9. '{
' → logprob: -5.042705535888672
    10. '{}
' → logprob: -5.167705535888672

Token 1830: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.4458498954772949
    2. '{}' → logprob: -2.445849895477295
    3. 'letter' → logprob: -2.445849895477295
    4. 'used' → logprob: -2.445849895477295
    5. 'mapping' → logprob: -2.945849895477295
    6. 'assign' → logprob: -4.445849895477295
    7. '{}
' → logprob: -5.320849895477295
    8. 'possible' → logprob: -5.445849895477295
    9. '{' → logprob: -5.570849895477295
    10. ' assigned' → logprob: -6.070849895477295

Token 1831: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.119253009557724
    2. ' =' → logprob: -2.244252920150757
    3. '={}' → logprob: -5.869253158569336
    4. '_chars' → logprob: -6.744253158569336
    5. '_letters' → logprob: -7.619253158569336
    6. '={}
' → logprob: -8.119253158569336
    7. '{}' → logprob: -8.244253158569336
    8. '```' → logprob: -8.494253158569336
    9. '_char' → logprob: -9.119253158569336
    10. '_=' → logprob: -9.119253158569336

Token 1832: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0005423080874606967
    2. '{}
' → logprob: -7.750542163848877
    3. 'dict' → logprob: -9.750542640686035
    4. '{' → logprob: -10.250542640686035
    5. '{}

' → logprob: -11.750542640686035
    6. '[' → logprob: -11.875542640686035
    7. '{}\' → logprob: -13.500542640686035
    8. '{},' → logprob: -14.375542640686035
    9. ' {}' → logprob: -14.375542640686035
    10. '[-' → logprob: -15.125542640686035

Token 1833: ' letter' (ID: 10263)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.43040767312049866
    2. '()' → logprob: -1.5554076433181763
    3. 'from' → logprob: -2.555407762527466
    4. '{' → logprob: -3.555407762527466
    5. ' =' → logprob: -4.180407524108887
    6. '=' → logprob: -4.805407524108887
    7. '```' → logprob: -6.055407524108887
    8. '{}' → logprob: -7.055407524108887
    9. '=
' → logprob: -7.430407524108887
    10. '[str' → logprob: -7.930407524108887

Token 1834: '->' (ID: 609)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45783019065856934
    2. '```' → logprob: -1.7078301906585693
    3. '[ch' → logprob: -3.0828301906585693
    4. ']' → logprob: -3.3328301906585693
    5. '=' → logprob: -4.082830429077148
    6. '   ' → logprob: -4.207830429077148
    7. '<|end|>' → logprob: -4.332830429077148
    8. '<|end|>' → logprob: -5.207830429077148
    9. ' =' → logprob: -5.332830429077148
    10. ':' → logprob: -5.332830429077148

Token 1835: 'orig' (ID: 25312)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03312953561544418
    2. 'OR' → logprob: -4.033129692077637
    3. 'chr' → logprob: -5.158129692077637
    4. 'None' → logprob: -5.283129692077637
    5. 'orig' → logprob: -6.283129692077637
    6. 'char' → logprob: -7.158129692077637
    7. 'assigned' → logprob: -7.908129692077637
    8. '''' → logprob: -8.158129692077637
    9. '[str' → logprob: -9.033129692077637
    10. 'ch' → logprob: -9.533129692077637

Token 1836: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.057149212807416916
    2. 'char' → logprob: -3.4321491718292236
    3. '_chars' → logprob: -4.182149410247803
    4. '```' → logprob: -5.807149410247803
    5. '_' → logprob: -6.057149410247803
    6. '
' → logprob: -7.307149410247803
    7. '_ch' → logprob: -7.432149410247803
    8. '_c' → logprob: -8.307148933410645
    9. ')' → logprob: -8.682148933410645
    10. '   ' → logprob: -8.932148933410645

Token 1837: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2759292125701904
    2. 'assigned' → logprob: -1.4009292125701904
    3. ' =' → logprob: -1.4009292125701904
    4. '{' → logprob: -1.6509292125701904
    5. '{
' → logprob: -5.4009294509887695
    6. '   ' → logprob: -5.5259294509887695
    7. '```' → logprob: -5.5259294509887695
    8. '{}' → logprob: -5.9009294509887695
    9. '[' → logprob: -5.9009294509887695
    10. '={}' → logprob: -6.0259294509887695

Token 1838: '   ' (ID: 271)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6267233490943909
    2. '   ' → logprob: -1.251723289489746
    3. 'used' → logprob: -2.376723289489746
    4. 'def' → logprob: -4.126723289489746
    5. 'possible' → logprob: -4.626723289489746
    6. '{
' → logprob: -4.751723289489746
    7. 'available' → logprob: -5.001723289489746
    8. ' =' → logprob: -5.126723289489746
    9. '
' → logprob: -5.126723289489746
    10. '#' → logprob: -5.376723289489746

Token 1839: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3488430082798004
    2. '   ' → logprob: -1.848842978477478
    3. 'assigned' → logprob: -2.5988430976867676
    4. 'used' → logprob: -3.7238430976867676
    5. 'stack' → logprob: -3.9738430976867676
    6. '#' (adapté à ' #') → logprob: -5.098843097686768
    7. '
' → logprob: -5.473843097686768
    8. 'available' → logprob: -5.848843097686768
    9. 'possible' → logprob: -6.223843097686768
    10. 'visited' → logprob: -7.098843097686768

Token 1840: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.455969899892807
    2. 'def' → logprob: -1.0809699296951294
    3. 'assigned' → logprob: -4.20596981048584
    4. 'available' → logprob: -4.95596981048584
    5. 'possible' → logprob: -6.83096981048584
    6. 'idx' → logprob: -7.33096981048584
    7. 'pos' → logprob: -7.45596981048584
    8. 'orig' → logprob: -7.70596981048584
    9. 'unused' → logprob: -8.08096981048584
    10. '   ' → logprob: -8.20596981048584

Token 1841: '_chars' (ID: 94246)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20625567436218262
    2. ' =' → logprob: -1.7062556743621826
    3. '_chars' → logprob: -5.456255912780762
    4. '=set' → logprob: -7.831255912780762
    5. 'chars' → logprob: -9.581255912780762
    6. 'set' → logprob: -10.706255912780762
    7. '_letters' → logprob: -11.081255912780762
    8. '```' → logprob: -11.206255912780762
    9. ' ' → logprob: -11.581255912780762
    10. '`' → logprob: -12.081255912780762

Token 1842: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22546686232089996
    2. '=' → logprob: -1.6004668474197388
    3. '=set' → logprob: -10.60046672821045
    4. '   ' → logprob: -11.60046672821045
    5. ' ' → logprob: -12.85046672821045
    6. '```' → logprob: -12.97546672821045
    7. '={'' → logprob: -13.10046672821045
    8. '={}' → logprob: -13.10046672821045
    9. ')' → logprob: -13.72546672821045
    10. ',' → logprob: -13.85046672821045

Token 1843: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.941850526549388e-06
    2. ' set' → logprob: -11.750007629394531
    3. '=set' → logprob: -22.87500762939453
    4. '	set' → logprob: -23.12500762939453
    5. '   ' → logprob: -23.50000762939453
    6. '[' → logprob: -23.75000762939453
    7. '{' → logprob: -25.00000762939453
    8. '(set' → logprob: -25.12500762939453
    9. '{}' → logprob: -25.75000762939453
    10. ')set' → logprob: -26.12500762939453

Token 1844: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0476156547665596
    2. ' =' → logprob: -3.1726157665252686
    3. '=set' → logprob: -5.6726155281066895
    4. 'def' → logprob: -7.5476155281066895
    5. 'assigned' → logprob: -8.547616004943848
    6. '=
' → logprob: -9.047616004943848
    7. 'used' → logprob: -9.172616004943848
    8. 'set' → logprob: -9.297616004943848
    9. '   ' → logprob: -10.547616004943848
    10. '{' → logprob: -10.547616004943848

Token 1845: ' orig' (ID: 17481)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.05956439673900604
    2. 'orig' → logprob: -3.1845643520355225
    3. 'original' → logprob: -4.934564590454102
    4. 'used' → logprob: -5.309564590454102
    5. 'mapped' → logprob: -6.684564590454102
    6. 'chars' → logprob: -6.809564590454102
    7. 'OR' → logprob: -7.434564590454102
    8. 'already' → logprob: -7.434564590454102
    9. ' assigned' → logprob: -7.934564590454102
    10. 'characters' → logprob: -8.684564590454102

Token 1846: '_char' (ID: 23398)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.000843576155602932
    2. '_CH' → logprob: -7.375843524932861
    3. '_char' → logprob: -9.25084400177002
    4. '_ch' → logprob: -10.25084400177002
    5. '_CHAR' → logprob: -10.87584400177002
    6. 'chars' → logprob: -11.00084400177002
    7. '   ' → logprob: -11.12584400177002
    8. '
' → logprob: -11.75084400177002
    9. 'Chars' → logprob: -11.75084400177002
    10. '```' → logprob: -12.37584400177002

Token 1847: ' already' (ID: 4279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.491386741399765
    2. '   ' → logprob: -1.1163867712020874
    3. '
' → logprob: -3.991386651992798
    4. ')' → logprob: -4.241386890411377
    5. ' def' → logprob: -4.616386890411377
    6. ')
' → logprob: -5.241386890411377
    7. '```' → logprob: -5.616386890411377
    8. '):
' → logprob: -6.116386890411377
    9. ' =' → logprob: -6.491386890411377
    10. '_' → logprob: -7.366386890411377

Token 1848: ' assigned' (ID: 21482)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.27512621879577637
    2. 'assigned' → logprob: -1.5251262187957764
    3. '_used' → logprob: -4.7751264572143555
    4. '=' → logprob: -5.1501264572143555
    5. '
' → logprob: -6.2751264572143555
    6. ' used' → logprob: -6.4001264572143555
    7. 'in' → logprob: -7.2751264572143555
    8. 'occupied' → logprob: -7.5251264572143555
    9. '   ' → logprob: -7.6501264572143555
    10. ')' → logprob: -7.7751264572143555

Token 1849: '

' (ID: 279)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4340606927871704
    2. ' =' → logprob: -1.4340606927871704
    3. 'def' → logprob: -2.434060573577881
    4. '   ' → logprob: -4.309060573577881
    5. '=
' → logprob: -4.559060573577881
    6. ' =
' → logprob: -7.809060573577881
    7. 'assigned' → logprob: -7.934060573577881
    8. '
' → logprob: -8.434061050415039
    9. ' def' → logprob: -8.434061050415039
    10. ',' → logprob: -8.434061050415039

Token 1850: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10215172916650772
    2. '   ' → logprob: -2.72715163230896
    3. '
' → logprob: -3.47715163230896
    4. '    
' → logprob: -8.102151870727539
    5. ' def' → logprob: -8.352151870727539
    6. 'allowed' → logprob: -9.727151870727539
    7. 'possible' → logprob: -9.852151870727539
    8. '```' → logprob: -9.852151870727539
    9. '#' → logprob: -10.852151870727539
    10. 'orig' → logprob: -10.977151870727539

Token 1851: ' res' (ID: 694)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015002215513959527
    2. '   ' → logprob: -6.626500129699707
    3. '
' → logprob: -9.126500129699707
    4. 'allowed' → logprob: -10.751500129699707
    5. ' def' → logprob: -11.626500129699707
    6. 'c' → logprob: -11.626500129699707
    7. 'possible' → logprob: -11.626500129699707
    8. 'orig' → logprob: -12.126500129699707
    9. 'candidate' → logprob: -12.376500129699707
    10. 'available' → logprob: -13.251500129699707

Token 1852: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5234028697013855
    2. ' =' → logprob: -0.8984028697013855
    3. '_' → logprob: -8.89840316772461
    4. 's' → logprob: -9.27340316772461
    5. '   ' → logprob: -10.89840316772461
    6. ',' → logprob: -12.02340316772461
    7. ' =
' → logprob: -12.27340316772461
    8. ')' → logprob: -12.39840316772461
    9. '_=' → logprob: -12.77340316772461
    10. ' _' → logprob: -12.89840316772461

Token 1853: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '[' → logprob: -17.000015258789062
    4. '   ' → logprob: -17.000015258789062
    5. '  ' → logprob: -20.625015258789062
    6. '
' → logprob: -20.750015258789062
    7. '{' → logprob: -21.000015258789062
    8. '#' → logprob: -21.625015258789062
    9. '    ' → logprob: -21.625015258789062
    10. '```' → logprob: -21.625015258789062

Token 1854: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. ' ' → logprob: -16.500003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '
' → logprob: -21.500003814697266
    6. '{' → logprob: -21.750003814697266
    7. '[]
' → logprob: -21.875003814697266
    8. ' [' → logprob: -22.500003814697266
    9. '[int' → logprob: -23.250003814697266
    10. '۰' → logprob: -23.500003814697266

Token 1855: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39413702487945557
    2. 'def' → logprob: -1.7691370248794556
    3. '   ' → logprob: -1.8941370248794556
    4. '    
' → logprob: -5.519136905670166
    5. ' def' → logprob: -7.644136905670166
    6. '```' → logprob: -8.269137382507324
    7. '        
' → logprob: -11.519137382507324
    8. '   
' → logprob: -11.769137382507324
    9. 'import' → logprob: -11.769137382507324
    10. '
' → logprob: -12.019137382507324

Token 1856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22603879868984222
    2. '
' → logprob: -2.351038694381714
    3. 'def' → logprob: -2.351038694381714
    4. '```' → logprob: -4.976038932800293
    5. '    
' → logprob: -5.351038932800293
    6. ' def' → logprob: -9.476038932800293
    7. '``' → logprob: -11.351038932800293
    8. '        
' → logprob: -11.351038932800293
    9. 'import' → logprob: -11.726038932800293
    10. '#' → logprob: -12.476038932800293

Token 1857: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.889424836728722e-05
    2. '   ' → logprob: -9.500099182128906
    3. '
' → logprob: -10.750099182128906
    4. ' def' → logprob: -14.000099182128906
    5. 'import' → logprob: -14.375099182128906
    6. 'from' → logprob: -14.750099182128906
    7. '```' → logprob: -15.000099182128906
    8. 'idx' → logprob: -15.250099182128906
    9. 'index' → logprob: -16.000099182128906
    10. 'stack' → logprob: -16.750099182128906

Token 1858: ' check' (ID: 2371)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -9.93710636976175e-05
    2. ' dfs' → logprob: -9.750099182128906
    3. 'search' → logprob: -10.500099182128906
    4. 'back' → logprob: -11.875099182128906
    5. 'assign' → logprob: -12.625099182128906
    6. 'solve' → logprob: -13.500099182128906
    7. '
' → logprob: -14.500099182128906
    8. 'df' → logprob: -15.000099182128906
    9. 'DFS' → logprob: -15.375099182128906
    10. '```' → logprob: -15.500099182128906

Token 1859: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31230276823043823
    2. '_' → logprob: -1.437302827835083
    3. '_ass' → logprob: -4.562302589416504
    4. '_assign' → logprob: -5.312302589416504
    5. '_assignment' → logprob: -6.062302589416504
    6. '(assign' → logprob: -6.062302589416504
    7. '(letter' → logprob: -6.312302589416504
    8. '_depth' → logprob: -7.312302589416504
    9. '_map' → logprob: -7.312302589416504
    10. '('_' → logprob: -7.312302589416504

Token 1860: '_count' (ID: 7536)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.1650831401348114
    2. 'continue' → logprob: -2.790083169937134
    3. 'try' → logprob: -2.915083169937134
    4. 're' → logprob: -4.415082931518555
    5. 'count' → logprob: -4.665082931518555
    6. 'search' → logprob: -4.915082931518555
    7. 'go' → logprob: -5.540082931518555
    8. 'assign' → logprob: -5.915082931518555
    9. 'back' → logprob: -8.290082931518555
    10. 'expand' → logprob: -8.415082931518555

Token 1861: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05486546456813812
    2. '(letter' → logprob: -3.0548653602600098
    3. '(assign' → logprob: -6.05486536026001
    4. '('' → logprob: -7.42986536026001
    5. '(ch' → logprob: -7.42986536026001
    6. '(
' → logprob: -7.80486536026001
    7. '(i' → logprob: -8.054865837097168
    8. '(l' → logprob: -8.054865837097168
    9. '(depth' → logprob: -8.429865837097168
    10. '(next' → logprob: -9.054865837097168

Token 1862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002996124094352126
    2. '   ' → logprob: -5.87799596786499
    3. '    
' → logprob: -10.002996444702148
    4. '```' → logprob: -10.502996444702148
    5. '(' → logprob: -10.627996444702148
    6. '
' → logprob: -11.127996444702148
    7. 'def' → logprob: -11.377996444702148
    8. '        
' → logprob: -11.377996444702148
    9. '    ' → logprob: -12.002996444702148
    10. '           ' → logprob: -12.252996444702148

Token 1863: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18764588236808777
    2. 's' → logprob: -1.8126459121704102
    3. '           ' → logprob: -5.81264591217041
    4. 'if' → logprob: -6.18764591217041
    5. '   ' → logprob: -7.18764591217041
    6. 'non' → logprob: -7.56264591217041
    7. '#' (adapté à ' #') → logprob: -7.93764591217041
    8. 'try' → logprob: -8.18764591217041
    9. ' s' → logprob: -8.43764591217041
    10. 'string' → logprob: -8.68764591217041

Token 1864: ' produce' (ID: 10635)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28469136357307434
    2. '       ' → logprob: -1.659691333770752
    3. 'if' → logprob: -3.534691333770752
    4. '   ' → logprob: -4.034691333770752
    5. '#' → logprob: -5.284691333770752
    6. 'sub' → logprob: -6.034691333770752
    7. '           ' → logprob: -7.034691333770752
    8. 'try' → logprob: -7.784691333770752
    9. ' s' → logprob: -8.03469181060791
    10. 'mapped' → logprob: -8.28469181060791

Token 1865: ' candidate' (ID: 17098)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01430958230048418
    2. '       ' → logprob: -5.139309406280518
    3. 'sub' → logprob: -5.389309406280518
    4. 'mapped' → logprob: -6.764309406280518
    5. '   ' → logprob: -7.264309406280518
    6. 'orig' → logprob: -7.514309406280518
    7. ' s' → logprob: -8.514309883117676
    8. 'subs' → logprob: -8.889309883117676
    9. '           ' → logprob: -9.014309883117676
    10. '#' → logprob: -9.014309883117676

Token 1866: ' original' (ID: 4756)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.7968441843986511
    2. ' =' → logprob: -1.046844244003296
    3. '_expr' → logprob: -2.921844244003296
    4. '_string' → logprob: -3.421844244003296
    5. '_s' → logprob: -3.421844244003296
    6. '   ' → logprob: -4.046844005584717
    7. '       ' → logprob: -4.171844005584717
    8. 's' → logprob: -4.171844005584717
    9. 'string' → logprob: -4.546844005584717
    10. '=' → logprob: -5.046844005584717

Token 1867: ' string' (ID: 1621)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7680166959762573
    2. '_str' → logprob: -0.8930166959762573
    3. '_expr' → logprob: -3.518016815185547
    4. '=' → logprob: -3.518016815185547
    5. 's' → logprob: -4.018016815185547
    6. '       ' → logprob: -4.268016815185547
    7. '   ' → logprob: -5.143016815185547
    8. 'str' → logprob: -5.393016815185547
    9. '_string' → logprob: -5.393016815185547
    10. 'string' → logprob: -5.518016815185547

Token 1868: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1036744937300682
    2. 's' → logprob: -2.9786744117736816
    3. '():' → logprob: -3.4786744117736816
    4. '()' → logprob: -5.103674411773682
    5. '():
' → logprob: -5.603674411773682
    6. 'def' → logprob: -6.603674411773682
    7. '   ' → logprob: -6.728674411773682
    8. '           ' → logprob: -7.228674411773682
    9. 'candidate' → logprob: -7.478674411773682
    10. ' =' → logprob: -7.603674411773682

Token 1869: ' replacing' (ID: 39866)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.7812932133674622
    2. 'def' → logprob: -1.1562931537628174
    3. 'sub' → logprob: -1.9062931537628174
    4. 's' → logprob: -3.6562931537628174
    5. '   ' → logprob: -4.1562933921813965
    6. '       ' → logprob: -4.6562933921813965
    7. '"' → logprob: -5.1562933921813965
    8. '
' → logprob: -5.4062933921813965
    9. 'res' → logprob: -5.4062933921813965
    10. 'subs' → logprob: -5.6562933921813965

Token 1870: ' letters' (ID: 18151)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6524128913879395
    2. 'ch' → logprob: -1.5274128913879395
    3. 'i' → logprob: -2.4024128913879395
    4. 'letters' → logprob: -3.2774128913879395
    5. 'c' → logprob: -3.9024128913879395
    6. '       ' → logprob: -3.9024128913879395
    7. ')' → logprob: -3.9024128913879395
    8. 's' → logprob: -4.0274128913879395
    9. 'letter' → logprob: -4.2774128913879395
    10. '   ' → logprob: -4.6524128913879395

Token 1871: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.178508996963501
    2. '=' → logprob: -1.303508996963501
    3. 's' → logprob: -1.553508996963501
    4. 'def' → logprob: -1.928508996963501
    5. ' =' → logprob: -3.178508996963501
    6. '   ' → logprob: -5.678508758544922
    7. '=lambda' → logprob: -5.678508758544922
    8. '()' → logprob: -6.303508758544922
    9. '_str' → logprob: -6.303508758544922
    10. '           ' → logprob: -6.678508758544922

Token 1872: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0009250381262972951
    2. ' assigned' → logprob: -7.125925064086914
    3. '   ' → logprob: -9.375925064086914
    4. '
' → logprob: -10.875925064086914
    5. '''.' → logprob: -11.875925064086914
    6. '       ' → logprob: -13.125925064086914
    7. '[' → logprob: -13.750925064086914
    8. '           ' → logprob: -13.875925064086914
    9. '  ' → logprob: -14.250925064086914
    10. 'mapped' → logprob: -14.250925064086914

Token 1873: ' chars' (ID: 47991)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -1.4785960912704468
    2. 'def' → logprob: -1.6035960912704468
    3. '_chars' → logprob: -2.1035962104797363
    4. '{' → logprob: -2.3535962104797363
    5. '
' → logprob: -2.6035962104797363
    6. 's' → logprob: -2.8535962104797363
    7. 'chars' → logprob: -3.3535962104797363
    8. '       ' → logprob: -3.3535962104797363
    9. '_orig' → logprob: -3.3535962104797363
    10. '```' → logprob: -3.6035962104797363

Token 1874: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011462150141596794
    2. 's' → logprob: -5.386462211608887
    3. 'def' → logprob: -5.761462211608887
    4. '()' → logprob: -6.511462211608887
    5. '():' → logprob: -7.511462211608887
    6. '():
' → logprob: -7.511462211608887
    7. '   ' → logprob: -8.011462211608887
    8. '):
' → logprob: -8.761462211608887
    9. '           ' → logprob: -9.011462211608887
    10. '()
' → logprob: -9.136462211608887

Token 1875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005831766175106168
    2. 's' → logprob: -8.25058364868164
    3. '           ' → logprob: -9.25058364868164
    4. '```' → logprob: -9.37558364868164
    5. ':' → logprob: -10.12558364868164
    6. '   ' → logprob: -10.25058364868164
    7. 'def' → logprob: -10.75058364868164
    8. ' s' → logprob: -11.50058364868164
    9. '(' → logprob: -11.62558364868164
    10. 'expr' → logprob: -12.62558364868164

Token 1876: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.21105261147022247
    2. '       ' → logprob: -1.711052656173706
    3. 'candidate' → logprob: -5.211052417755127
    4. 'orig' → logprob: -6.086052417755127
    5. 'cand' → logprob: -7.586052417755127
    6. '   ' → logprob: -8.086052894592285
    7. 'result' → logprob: -8.461052894592285
    8. 'mapped' → logprob: -8.586052894592285
    9. 'original' → logprob: -8.836052894592285
    10. 'def' → logprob: -9.211052894592285

Token 1877: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768002867698669
    2. '=' → logprob: -0.8268002867698669
    3. 's' → logprob: -7.826800346374512
    4. '       ' → logprob: -8.701800346374512
    5. '   ' → logprob: -8.826800346374512
    6. '```' → logprob: -10.201800346374512
    7. '=
' → logprob: -10.326800346374512
    8. '_' → logprob: -11.576800346374512
    9. '='' → logprob: -11.826800346374512
    10. 'def' → logprob: -12.201800346374512

Token 1878: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47434201836586
    2. ' =' → logprob: -0.9743419885635376
    3. '       ' → logprob: -9.224342346191406
    4. '   ' → logprob: -9.349342346191406
    5. '=
' → logprob: -10.849342346191406
    6. ' ' → logprob: -11.849342346191406
    7. '=[]' → logprob: -11.849342346191406
    8. '=s' → logprob: -11.849342346191406
    9. 's' → logprob: -11.974342346191406
    10. '           ' → logprob: -12.224342346191406

Token 1879: ' list' (ID: 1562)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.3682851791381836
    2. '""' → logprob: -2.3682851791381836
    3. '[]
' → logprob: -2.3682851791381836
    4. '"' → logprob: -2.7432851791381836
    5. '[]' → logprob: -3.7432851791381836
    6. '''' → logprob: -4.118285179138184
    7. '['' → logprob: -5.368285179138184
    8. '   ' → logprob: -5.993285179138184
    9. '''
' → logprob: -5.993285179138184
    10. '["' → logprob: -6.243285179138184

Token 1880: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.014165391214191914
    2. 'expr' → logprob: -4.26416540145874
    3. '(s' → logprob: -14.389164924621582
    4. '(' → logprob: -15.389164924621582
    5. 's' → logprob: -15.514164924621582
    6. ' expr' → logprob: -15.514164924621582
    7. '(
' → logprob: -15.764164924621582
    8. '
' → logprob: -15.889164924621582
    9. '_expr' → logprob: -16.0141658782959
    10. 'for' → logprob: -16.5141658782959

Token 1881: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008180367760360241
    2. ')' → logprob: -5.258180141448975
    3. '       ' → logprob: -5.883180141448975
    4. '   ' → logprob: -9.383180618286133
    5. ')
' → logprob: -10.383180618286133
    6. '.replace' → logprob: -11.133180618286133
    7. '           ' → logprob: -11.633180618286133
    8. ')

' → logprob: -12.758180618286133
    9. ' )
' → logprob: -13.133180618286133
    10. '[:' → logprob: -13.133180618286133

Token 1882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004195906512904912
    2. 'for' → logprob: -8.125419616699219
    3. ' for' → logprob: -10.000419616699219
    4. '   ' → logprob: -10.375419616699219
    5. '           ' → logprob: -10.500419616699219
    6. '```' → logprob: -11.375419616699219
    7. '
' → logprob: -12.875419616699219
    8. ')' → logprob: -13.625419616699219
    9. ' ' → logprob: -14.000419616699219
    10. '               ' → logprob: -14.125419616699219

Token 1883: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08147163689136505
    2. 'for' (adapté à ' for') → logprob: -2.5814716815948486
    3. '   ' → logprob: -6.8314714431762695
    4. '           ' → logprob: -7.2064714431762695
    5. ' for' → logprob: -7.2064714431762695
    6. '               ' → logprob: -11.45647144317627
    7. '```' → logprob: -12.70647144317627
    8. '                   ' → logprob: -14.33147144317627
    9. ' ' → logprob: -14.45647144317627
    10. '     ' → logprob: -15.08147144317627

Token 1884: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06980480998754501
    2. 'c' → logprob: -3.9448049068450928
    3. 'ch' → logprob: -3.9448049068450928
    4. 'l' → logprob: -4.194804668426514
    5. 'idx' → logprob: -4.694804668426514
    6. 'letter' → logprob: -6.194804668426514
    7. 'lt' → logprob: -6.694804668426514
    8. 'ltr' → logprob: -7.444804668426514
    9. 'let' → logprob: -8.319805145263672
    10. 'pos' → logprob: -8.444805145263672

Token 1885: 'tr' (ID: 371)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09715913981199265
    2. ' in' → logprob: -2.4721591472625732
    3. 'etter' → logprob: -5.222158908843994
    4. 'i' → logprob: -6.222158908843994
    5. '   ' → logprob: -8.722159385681152
    6. ',' → logprob: -9.097159385681152
    7. '_idx' → logprob: -9.472159385681152
    8. 'l' → logprob: -9.472159385681152
    9. ' ' → logprob: -9.597159385681152
    10. 'idx' → logprob: -9.972159385681152

Token 1886: ',ch' (ID: 165575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42913350462913513
    2. ' in' → logprob: -1.0541335344314575
    3. '       ' → logprob: -8.679133415222168
    4. '   ' → logprob: -9.429133415222168
    5. '           ' → logprob: -9.929133415222168
    6. ' ' → logprob: -9.929133415222168
    7. '_idx' → logprob: -11.304133415222168
    8. 'i' → logprob: -11.429133415222168
    9. '_in' → logprob: -11.679133415222168
    10. ']' → logprob: -11.679133415222168

Token 1887: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34917372465133667
    2. 'in' → logprob: -1.2241737842559814
    3. '       ' → logprob: -7.724173545837402
    4. '           ' → logprob: -9.349173545837402
    5. '   ' → logprob: -9.599173545837402
    6. ' ' → logprob: -10.224173545837402
    7. '_in' → logprob: -10.849173545837402
    8. '        ' → logprob: -11.599173545837402
    9. '    ' → logprob: -11.724173545837402
    10. '=' → logprob: -12.099173545837402

Token 1888: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1427888423204422
    2. ' in' → logprob: -2.017788887023926
    3. '   ' → logprob: -10.142788887023926
    4. ' ' → logprob: -10.267788887023926
    5. '       ' → logprob: -11.392788887023926
    6. '
' → logprob: -12.142788887023926
    7. '```' → logprob: -12.892788887023926
    8. '=' → logprob: -13.017788887023926
    9. '  ' → logprob: -13.017788887023926
    10. '    ' → logprob: -13.017788887023926

Token 1889: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0007070713327266276
    2. 'zip' → logprob: -7.625707149505615
    3. ' assigned' → logprob: -8.750706672668457
    4. 'enumer' → logprob: -9.875706672668457
    5. ' zip' → logprob: -12.250706672668457
    6. '   ' → logprob: -13.000706672668457
    7. 'assign' → logprob: -14.375706672668457
    8. 'in' → logprob: -15.125706672668457
    9. 'sorted' → logprob: -15.375706672668457
    10. '(zip' → logprob: -15.500706672668457

Token 1890: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0047367531806230545
    2. 'items' → logprob: -5.37973690032959
    3. '.' → logprob: -9.37973690032959
    4. '.iteritems' → logprob: -10.87973690032959
    5. '().' → logprob: -12.25473690032959
    6. '_items' → logprob: -13.00473690032959
    7. '(items' → logprob: -13.12973690032959
    8. '```' → logprob: -13.12973690032959
    9. ' .' → logprob: -14.37973690032959
    10. 'in' → logprob: -14.87973690032959

Token 1891: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.022222911939024925
    2. '():' → logprob: -3.8972229957580566
    3. '       ' → logprob: -7.272222995758057
    4. '()' → logprob: -7.897222995758057
    5. '()):
' → logprob: -8.272222518920898
    6. '.items' → logprob: -9.022222518920898
    7. 'items' → logprob: -9.397222518920898
    8. ':
' → logprob: -10.022222518920898
    9. ':' → logprob: -10.272222518920898
    10. '():
' → logprob: -10.772222518920898

Token 1892: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44337666034698486
    2. '       ' → logprob: -1.1933766603469849
    3. '   ' → logprob: -3.0683765411376953
    4. ' for' → logprob: -4.943376541137695
    5. 'for' → logprob: -7.443376541137695
    6. '```' → logprob: -8.568376541137695
    7. '	       ' → logprob: -8.943376541137695
    8. '#' → logprob: -9.693376541137695
    9. ':' → logprob: -9.818376541137695
    10. '	   ' → logprob: -10.318376541137695

Token 1893: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2363501340150833
    2. 'positions' → logprob: -2.8613500595092773
    3. '           ' → logprob: -3.1113500595092773
    4. ' for' → logprob: -3.2363500595092773
    5. '   ' → logprob: -3.3613500595092773
    6. '       ' → logprob: -3.6113500595092773
    7. 'pos' → logprob: -5.361350059509277
    8. 'inds' → logprob: -7.236350059509277
    9. ' positions' → logprob: -7.361350059509277
    10. '	for' → logprob: -7.986350059509277

Token 1894: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00019591135787777603
    2. 'p' → logprob: -8.750195503234863
    3. 'idx' → logprob: -10.500195503234863
    4. 'i' → logprob: -12.000195503234863
    5. 'pi' → logprob: -12.875195503234863
    6. ' pos' → logprob: -14.500195503234863
    7. '   ' → logprob: -14.875195503234863
    8. 'pid' → logprob: -15.875195503234863
    9. '	pos' → logprob: -16.12519645690918
    10. '
' → logprob: -17.12519645690918

Token 1895: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760689377784729
    2. ' in' → logprob: -0.8260689377784729
    3. '	in' → logprob: -10.326068878173828
    4. '           ' → logprob: -10.451068878173828
    5. '<|end|>' → logprob: -11.201068878173828
    6. '   ' → logprob: -11.201068878173828
    7. '       ' → logprob: -11.701068878173828
    8. ' ' → logprob: -11.826068878173828
    9. '_in' → logprob: -12.076068878173828
    10. '               ' → logprob: -12.451068878173828

Token 1896: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0006688326830044389
    2. ' letter' → logprob: -7.375669002532959
    3. '   ' → logprob: -10.5006685256958
    4. '(letter' → logprob: -11.5006685256958
    5. '           ' → logprob: -13.5006685256958
    6. '       ' → logprob: -14.2506685256958
    7. 'range' → logprob: -14.3756685256958
    8. ' ' → logprob: -14.8756685256958
    9. '[' → logprob: -15.0006685256958
    10. '    ' → logprob: -15.5006685256958

Token 1897: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.10110608488321304
    2. 's' → logprob: -2.8511061668395996
    3. 'positions' → logprob: -3.3511061668395996
    4. '           ' → logprob: -7.1011061668396
    5. '   ' → logprob: -7.1011061668396
    6. '       ' → logprob: -8.226105690002441
    7. '
' → logprob: -8.476105690002441
    8. '                   ' → logprob: -8.476105690002441
    9. '               ' → logprob: -8.601105690002441
    10. 'Positions' → logprob: -9.101105690002441

Token 1898: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -6.0629870858974755e-05
    2. '[ch' → logprob: -9.87506103515625
    3. 'ltr' → logprob: -12.25006103515625
    4. '   ' → logprob: -13.25006103515625
    5. '[
' → logprob: -14.00006103515625
    6. '	l' → logprob: -15.00006103515625
    7. '       ' → logprob: -15.50006103515625
    8. ',l' → logprob: -15.62506103515625
    9. '
' → logprob: -16.00006103515625
    10. '[[' → logprob: -16.00006103515625

Token 1899: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3887310028076172
    2. 'ltr' → logprob: -1.1387310028076172
    3. '[l' → logprob: -6.763731002807617
    4. 'ch' → logprob: -9.138731002807617
    5. '[' → logprob: -9.388731002807617
    6. 'l' → logprob: -9.513731002807617
    7. '[ch' → logprob: -9.638731002807617
    8. 'r' → logprob: -10.138731002807617
    9. 'ctr' → logprob: -10.513731002807617
    10. 'lt' → logprob: -10.513731002807617

Token 1900: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4581860899925232
    2. ':
' → logprob: -1.083186149597168
    3. '               ' → logprob: -3.833186149597168
    4. '           ' → logprob: -5.583186149597168
    5. ':' → logprob: -6.458186149597168
    6. '):
' → logprob: -7.583186149597168
    7. ']:' → logprob: -7.833186149597168
    8. '']:
' → logprob: -8.208186149597168
    9. '():
' → logprob: -8.333186149597168
    10. '       ' → logprob: -8.333186149597168

Token 1901: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.539801688631997e-05
    2. 's' → logprob: -10.625065803527832
    3. '                   ' → logprob: -11.125065803527832
    4. '           ' → logprob: -11.625065803527832
    5. '```' → logprob: -11.625065803527832
    6. '       ' → logprob: -12.625065803527832
    7. '   ' → logprob: -12.625065803527832
    8. '                       ' → logprob: -14.375065803527832
    9. '              ' → logprob: -14.750065803527832
    10. '		       ' → logprob: -15.750065803527832

Token 1902: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.552158534526825
    2. '                   ' → logprob: -1.1771585941314697
    3. '               ' → logprob: -2.6771585941314697
    4. '       ' → logprob: -3.3021585941314697
    5. ' s' → logprob: -4.927158355712891
    6. '                       ' → logprob: -6.677158355712891
    7. '   ' → logprob: -6.927158355712891
    8. '           ' → logprob: -6.927158355712891
    9. '                  ' → logprob: -10.55215835571289
    10. ' ' → logprob: -10.92715835571289

Token 1903: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014115321449935436
    2. '[pos' → logprob: -4.389115333557129
    3. '                   ' → logprob: -7.514115333557129
    4. 's' → logprob: -7.514115333557129
    5. '               ' → logprob: -8.139115333557129
    6. '           ' → logprob: -10.014115333557129
    7. '[' → logprob: -10.389115333557129
    8. '   ' → logprob: -10.514115333557129
    9. 'pos' → logprob: -10.639115333557129
    10. '```' → logprob: -10.764115333557129

Token 1904: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0011216417187824845
    2. '[s' → logprob: -6.876121520996094
    3. '=' → logprob: -10.376121520996094
    4. '               ' → logprob: -11.001121520996094
    5. '                   ' → logprob: -11.751121520996094
    6. 'pos' → logprob: -11.751121520996094
    7. '[' → logprob: -11.751121520996094
    8. 's' → logprob: -12.501121520996094
    9. '```' → logprob: -12.751121520996094
    10. '][' → logprob: -13.376121520996094

Token 1905: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5771171450614929
    2. ']=' → logprob: -1.0771172046661377
    3. ']' → logprob: -2.3271172046661377
    4. ' =' → logprob: -8.202116966247559
    5. ')=' → logprob: -10.452116966247559
    6. '=
' → logprob: -12.202116966247559
    7. '']=' → logprob: -12.577116966247559
    8. 's' → logprob: -12.702116966247559
    9. '                   ' → logprob: -12.702116966247559
    10. '=s' → logprob: -12.827116966247559

Token 1906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033713103039190173
    2. ' =' → logprob: -8.000337600708008
    3. '=
' → logprob: -13.500337600708008
    4. ']=' → logprob: -15.250337600708008
    5. ')=' → logprob: -17.125337600708008
    6. '=

' → logprob: -17.375337600708008
    7. '=s' → logprob: -17.625337600708008
    8. ']' → logprob: -18.125337600708008
    9. '.=' → logprob: -19.000337600708008
    10. '=c' → logprob: -19.000337600708008

Token 1907: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.9361264946837764e-07
    2. ' ch' → logprob: -16.375
    3. '   ' → logprob: -18.25
    4. '           ' → logprob: -18.875
    5. '       ' → logprob: -19.25
    6. 'assigned' → logprob: -19.625
    7. '(ch' → logprob: -20.375
    8. '	ch' → logprob: -20.625
    9. '               ' → logprob: -21.0
    10. '```' → logprob: -21.5

Token 1908: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13578039407730103
    2. 'ch' → logprob: -2.1357803344726562
    3. '[ch' → logprob: -5.010780334472656
    4. ' ch' → logprob: -7.510780334472656
    5. '               ' → logprob: -8.135780334472656
    6. '[' → logprob: -8.385780334472656
    7. '           ' → logprob: -8.510780334472656
    8. 'assigned' → logprob: -8.885780334472656
    9. '_ch' → logprob: -9.135780334472656
    10. '       ' → logprob: -9.135780334472656

Token 1909: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04338895529508591
    2. '
' → logprob: -3.168388843536377
    3. '<|end|>' → logprob: -8.918389320373535
    4. '        
' → logprob: -9.418389320373535
    5. ')' → logprob: -9.668389320373535
    6. '
' → logprob: -10.668389320373535
    7. '<|end|>' → logprob: -11.168389320373535
    8. '           ' → logprob: -11.168389320373535
    9. 's' → logprob: -11.293389320373535
    10. ')
' → logprob: -11.793389320373535

Token 1910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016533277928829193
    2. '
' → logprob: -4.141533374786377
    3. '<|end|>' → logprob: -8.016532897949219
    4. ')' → logprob: -10.391532897949219
    5. '```' → logprob: -10.766532897949219
    6. '        
' → logprob: -10.766532897949219
    7. '
' → logprob: -10.891532897949219
    8. '           ' → logprob: -10.891532897949219
    9. '<|end|>' → logprob: -11.141532897949219
    10. ',' → logprob: -11.641532897949219

Token 1911: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005687850061804056
    2. '
' → logprob: -5.380687713623047
    3. 'if' → logprob: -7.380687713623047
    4. 'for' → logprob: -9.505687713623047
    5. ' if' → logprob: -9.505687713623047
    6. '        
' → logprob: -9.630687713623047
    7. '   ' → logprob: -9.755687713623047
    8. '```' → logprob: -9.880687713623047
    9. '#' → logprob: -10.005687713623047
    10. 'def' → logprob: -10.130687713623047

Token 1912: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02062644064426422
    2. 'tr' → logprob: -5.020626544952393
    3. ' =' → logprob: -5.020626544952393
    4. '=' → logprob: -5.520626544952393
    5. '   ' → logprob: -6.395626544952393
    6. '       ' → logprob: -7.645626544952393
    7. 's' → logprob: -7.645626544952393
    8. 'tring' → logprob: -8.395626068115234
    9. '=s' → logprob: -9.770626068115234
    10. '```' → logprob: -9.770626068115234

Token 1913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4601009786128998
    2. ' =' → logprob: -1.0851010084152222
    3. '_str' → logprob: -5.085101127624512
    4. '='' → logprob: -5.210101127624512
    5. '"' → logprob: -5.460101127624512
    6. 's' → logprob: -5.710101127624512
    7. '```' → logprob: -5.835101127624512
    8. '="' → logprob: -6.085101127624512
    9. ')' → logprob: -6.585101127624512
    10. 'str' → logprob: -6.835101127624512

Token 1914: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.576422929763794
    2. '"' → logprob: -0.826422929763794
    3. ' "".' → logprob: -8.201422691345215
    4. ' ''.' → logprob: -8.826422691345215
    5. '"s' → logprob: -10.076422691345215
    6. ''' → logprob: -11.451422691345215
    7. 's' → logprob: -12.201422691345215
    8. '""' → logprob: -12.951422691345215
    9. '''' → logprob: -13.451422691345215
    10. ''s' → logprob: -15.826422691345215

Token 1915: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.5
    3. '''.' → logprob: -17.875
    4. '.join' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. 'Join' → logprob: -19.625
    7. 'jo' → logprob: -19.75
    8. '(join' → logprob: -20.125
    9. 'j' → logprob: -20.875
    10. '_join' → logprob: -21.0

Token 1916: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759397745132446
    2. '(s' → logprob: -0.8259397745132446
    3. '```' → logprob: -15.825940132141113
    4. '`s' → logprob: -16.575939178466797
    5. '   ' → logprob: -16.700939178466797
    6. ' s' → logprob: -17.200939178466797
    7. ')s' → logprob: -17.325939178466797
    8. ')' → logprob: -17.825939178466797
    9. '`' → logprob: -18.950939178466797
    10. '(
' → logprob: -19.200939178466797

Token 1917: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023766323924064636
    2. ')' → logprob: -4.14876651763916
    3. 's' → logprob: -4.89876651763916
    4. '       ' → logprob: -9.14876651763916
    5. '   ' → logprob: -9.14876651763916
    6. '(s' → logprob: -11.77376651763916
    7. ')s' → logprob: -12.27376651763916
    8. ' s' → logprob: -12.52376651763916
    9. ')
' → logprob: -12.89876651763916
    10. '           ' → logprob: -13.14876651763916

Token 1918: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001553428708575666
    2. ')
' → logprob: -6.501553535461426
    3. '       ' → logprob: -10.126553535461426
    4. '')' → logprob: -11.626553535461426
    5. '   ' → logprob: -14.626553535461426
    6. ')
' → logprob: -15.126553535461426
    7. ')return' → logprob: -15.501553535461426
    8. '")' → logprob: -15.501553535461426
    9. ')

' → logprob: -15.751553535461426
    10. '<|end|>' → logprob: -15.751553535461426

Token 1919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.2762428822461516e-05
    2. '
' → logprob: -10.000052452087402
    3. '        
' → logprob: -13.000052452087402
    4. '```' → logprob: -13.250052452087402
    5. '   ' → logprob: -13.375052452087402
    6. '           ' → logprob: -13.375052452087402
    7. '    
' → logprob: -17.25005340576172
    8. '`' → logprob: -17.25005340576172
    9. ' if' → logprob: -17.37505340576172
    10. 'if' → logprob: -17.37505340576172

Token 1920: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6774011254310608
    2. 'try' → logprob: -1.052401065826416
    3. 'if' → logprob: -2.052401065826416
    4. '#' (adapté à ' #') → logprob: -4.677401065826416
    5. '   ' → logprob: -5.427401065826416
    6. '
' → logprob: -7.677401065826416
    7. ' if' → logprob: -8.302401542663574
    8. ' try' → logprob: -9.802401542663574
    9. 'count' → logprob: -11.052401542663574
    10. 'for' → logprob: -11.302401542663574

Token 1921: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028478223830461502
    2. '#' → logprob: -4.028478145599365
    3. 'try' → logprob: -5.153478145599365
    4. '       ' → logprob: -6.028478145599365
    5. '   ' → logprob: -6.403478145599365
    6. ' if' → logprob: -8.528478622436523
    7. 'count' → logprob: -9.528478622436523
    8. '
' → logprob: -10.153478622436523
    9. 'for' → logprob: -10.278478622436523
    10. 'equal' → logprob: -10.278478622436523

Token 1922: ' equal' (ID: 12629)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12574133276939392
    2. 'if' → logprob: -2.2507412433624268
    3. ' s' → logprob: -5.500741481781006
    4. ' if' → logprob: -6.250741481781006
    5. '   ' → logprob: -6.375741481781006
    6. '
' → logprob: -6.500741481781006
    7. '('='' → logprob: -6.875741481781006
    8. '#' → logprob: -7.125741481781006
    9. '       ' → logprob: -7.625741481781006
    10. '=s' → logprob: -8.500741004943848

Token 1923: ' sign' (ID: 2232)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018643245100975037
    2. 'count' → logprob: -4.518643379211426
    3. 'sign' → logprob: -5.893643379211426
    4. '_count' → logprob: -6.893643379211426
    5. '```' → logprob: -7.893643379211426
    6. 'pos' → logprob: -8.018643379211426
    7. '   ' → logprob: -8.018643379211426
    8. '_sign' → logprob: -8.143643379211426
    9. 'if' → logprob: -8.518643379211426
    10. 'counts' → logprob: -8.643643379211426

Token 1924: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07439158111810684
    2. 'cnt' → logprob: -3.1993916034698486
    3. 'pos' → logprob: -3.6993916034698486
    4. '_count' → logprob: -5.5743913650512695
    5. '   ' → logprob: -7.1993913650512695
    6. '_cnt' → logprob: -7.8243913650512695
    7. 'idx' → logprob: -8.07439136505127
    8. 's' → logprob: -8.44939136505127
    9. 'c' → logprob: -8.57439136505127
    10. '_pos' → logprob: -8.94939136505127

Token 1925: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6589217782020569
    2. '       ' → logprob: -0.7839217782020569
    3. 'count' → logprob: -4.158921718597412
    4. '=' → logprob: -5.533921718597412
    5. ' if' → logprob: -5.658921718597412
    6. 'equal' → logprob: -7.283921718597412
    7. ' =' → logprob: -7.533921718597412
    8. '==' → logprob: -7.783921718597412
    9. '```' → logprob: -7.783921718597412
    10. 'eq' → logprob: -8.03392219543457

Token 1926: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.7719362378120422
    2. 's' → logprob: -0.8969362378120422
    3. ' be' → logprob: -2.6469361782073975
    4. '==' → logprob: -3.0219361782073975
    5. '2' → logprob: -5.271936416625977
    6. '=' → logprob: -6.521936416625977
    7. ' s' → logprob: -7.021936416625977
    8. '(s' → logprob: -7.021936416625977
    9. 'equal' → logprob: -7.771936416625977
    10. 'count' → logprob: -8.146936416625977

Token 1927: ' exactly' (ID: 9707)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054290346801280975
    2. 's' → logprob: -3.304290294647217
    3. 'exact' → logprob: -4.304290294647217
    4. '==' → logprob: -6.679290294647217
    5. ' exactly' → logprob: -6.929290294647217
    6. '=' → logprob: -8.929290771484375
    7. ' s' → logprob: -9.804290771484375
    8. 'equal' → logprob: -10.054290771484375
    9. 'one' → logprob: -10.554290771484375
    10. ' ' → logprob: -10.679290771484375

Token 1928: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5818614363670349
    2. '1' → logprob: -0.8318614363670349
    3. '   ' → logprob: -6.45686149597168
    4. ' s' → logprob: -6.70686149597168
    5. '=' → logprob: -7.20686149597168
    6. 'one' → logprob: -7.45686149597168
    7. '       ' → logprob: -8.20686149597168
    8. '
' → logprob: -8.33186149597168
    9. ' one' → logprob: -8.45686149597168
    10. ' ' → logprob: -8.45686149597168

Token 1929: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003208037815056741
    2. 's' → logprob: -8.250320434570312
    3. 'one' → logprob: -10.125320434570312
    4. 'exact' → logprob: -11.000320434570312
    5. '```' → logprob: -14.125320434570312
    6. ' ' → logprob: -14.500320434570312
    7. ' exactly' → logprob: -15.375320434570312
    8. 'One' → logprob: -15.625320434570312
    9. ' one' → logprob: -15.750320434570312
    10. '=' → logprob: -15.750320434570312

Token 1930: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11958549171686172
    2. 'if' → logprob: -2.2445855140686035
    3. ' if' → logprob: -5.1195855140686035
    4. 'count' → logprob: -7.7445855140686035
    5. '=' → logprob: -8.744585037231445
    6. ' =' → logprob: -9.369585037231445
    7. '
' → logprob: -11.119585037231445
    8. ',' → logprob: -11.119585037231445
    9. '```' → logprob: -11.369585037231445
    10. 'equal' → logprob: -11.494585037231445

Token 1931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003927606623619795
    2. 'if' → logprob: -5.753927707672119
    3. ' if' → logprob: -7.503927707672119
    4. '   ' → logprob: -8.628927230834961
    5. 'count' → logprob: -11.128927230834961
    6. '           ' → logprob: -13.503927230834961
    7. '
' → logprob: -13.753927230834961
    8. '```' → logprob: -14.128927230834961
    9. 'return' → logprob: -15.003927230834961
    10. 'counts' → logprob: -15.003927230834961

Token 1932: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0871046781539917
    2. '       ' → logprob: -2.5871047973632812
    3. ' if' → logprob: -5.337104797363281
    4. 'eq' → logprob: -6.212104797363281
    5. 'count' → logprob: -7.462104797363281
    6. 'equal' → logprob: -7.462104797363281
    7. 'return' → logprob: -9.712104797363281
    8. '```' → logprob: -10.087104797363281
    9. '=' → logprob: -10.462104797363281
    10. 'equals' → logprob: -10.837104797363281

Token 1933: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014211451634764671
    2. ' s' → logprob: -4.264211654663086
    3. '   ' → logprob: -11.014211654663086
    4. '`s' → logprob: -11.639211654663086
    5. ''s' → logprob: -11.889211654663086
    6. '
' → logprob: -12.389211654663086
    7. '(s' → logprob: -12.514211654663086
    8. '       ' → logprob: -13.889211654663086
    9. ' ' → logprob: -14.139211654663086
    10. ' ' → logprob: -14.264211654663086

Token 1934: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001222508290084079
    2. '.count' → logprob: -9.1251220703125
    3. 'count' → logprob: -12.1251220703125
    4. '```' → logprob: -12.8751220703125
    5. 's' → logprob: -13.3751220703125
    6. '_count' → logprob: -14.0001220703125
    7. '
' → logprob: -14.7501220703125
    8. ''s' → logprob: -14.7501220703125
    9. '₂' → logprob: -14.7501220703125
    10. '`' → logprob: -15.3751220703125

Token 1935: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0005012048059143126
    2. '       ' → logprob: -8.87550163269043
    3. '.find' → logprob: -8.87550163269043
    4. '.' → logprob: -9.25050163269043
    5. 'count' → logprob: -9.37550163269043
    6. '           ' → logprob: -11.25050163269043
    7. '.index' → logprob: -11.75050163269043
    8. '```' → logprob: -12.25050163269043
    9. ').' → logprob: -12.37550163269043
    10. '   ' → logprob: -12.75050163269043

Token 1936: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002627500332891941
    2. ''' → logprob: -6.377627372741699
    3. ''=' → logprob: -7.127627372741699
    4. '=' → logprob: -10.1276273727417
    5. '("="' → logprob: -10.3776273727417
    6. '('='' → logprob: -11.5026273727417
    7. '"' → logprob: -11.6276273727417
    8. '(' → logprob: -11.6276273727417
    9. '
' → logprob: -11.8776273727417
    10. '(('' → logprob: -12.3776273727417

Token 1937: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006808568723499775
    2. ''=' → logprob: -5.006808757781982
    3. ''' → logprob: -9.631808280944824
    4. '='' → logprob: -11.256808280944824
    5. '')' → logprob: -11.631808280944824
    6. '\'' → logprob: -13.256808280944824
    7. '('' → logprob: -13.506808280944824
    8. '"' → logprob: -14.256808280944824
    9. '=',' → logprob: -14.256808280944824
    10. '('='' → logprob: -14.381808280944824

Token 1938: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02722356840968132
    2. ')' → logprob: -3.652223587036133
    3. '=' → logprob: -7.277223587036133
    4. ')!=' → logprob: -9.777223587036133
    5. '('' → logprob: -10.152223587036133
    6. '!=' → logprob: -10.527223587036133
    7. '==' → logprob: -10.652223587036133
    8. '")' → logprob: -10.777223587036133
    9. '1' → logprob: -10.777223587036133
    10. ')==' → logprob: -11.152223587036133

Token 1939: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06324362754821777
    2. ' !=' → logprob: -2.8132436275482178
    3. ')!=' → logprob: -7.188243865966797
    4. '()!=' → logprob: -7.813243865966797
    5. '==' → logprob: -9.563243865966797
    6. '```' → logprob: -10.813243865966797
    7. ')' → logprob: -11.563243865966797
    8. ']!=' → logprob: -11.938243865966797
    9. '!==' → logprob: -12.563243865966797
    10. '           ' → logprob: -13.563243865966797

Token 1940: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.375000953674316
    4. 'exact' → logprob: -16.125
    5. '   ' → logprob: -17.125
    6. 'Exactly' → logprob: -18.25
    7. '`' → logprob: -18.5
    8. '=' → logprob: -19.5
    9. '
' → logprob: -19.75
    10. '...' → logprob: -19.875

Token 1941: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6764145493507385
    2. '           ' → logprob: -1.3014144897460938
    3. ':
' → logprob: -1.5514144897460938
    4. '       ' → logprob: -5.551414489746094
    5. ':return' → logprob: -5.801414489746094
    6. ' or' → logprob: -8.926414489746094
    7. '):
' → logprob: -9.051414489746094
    8. '):' → logprob: -9.051414489746094
    9. '               ' → logprob: -10.051414489746094
    10. ')' → logprob: -10.051414489746094

Token 1942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011087790131568909
    2. '       ' → logprob: -4.511087894439697
    3. 'return' → logprob: -10.386087417602539
    4. ' return' → logprob: -13.011087417602539
    5. '               ' → logprob: -13.136087417602539
    6. '          ' → logprob: -13.761087417602539
    7. '```' → logprob: -13.761087417602539
    8. '   ' → logprob: -14.261087417602539
    9. ':return' → logprob: -14.511087417602539
    10. '		' → logprob: -14.886087417602539

Token 1943: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25244489312171936
    2. '           ' → logprob: -1.502444863319397
    3. '       ' → logprob: -7.752444744110107
    4. ' return' → logprob: -9.627445220947266
    5. '               ' → logprob: -11.252445220947266
    6. '   ' → logprob: -12.877445220947266
    7. '```' → logprob: -13.627445220947266
    8. ':return' → logprob: -13.877445220947266
    9. '	return' → logprob: -14.252445220947266
    10. '{return' → logprob: -14.502445220947266

Token 1944: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2900240123271942
    2. '
' → logprob: -1.4150240421295166
    3. '

' → logprob: -5.0400238037109375
    4. 'None' → logprob: -6.2900238037109375
    5. '1' → logprob: -8.540023803710938
    6. 'False' → logprob: -9.415023803710938
    7. ' ' → logprob: -9.665023803710938
    8. '       ' → logprob: -9.665023803710938
    9. '   ' → logprob: -10.665023803710938
    10. '        
' → logprob: -10.790023803710938

Token 1945: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. 'None' → logprob: -12.250009536743164
    3. 'False' → logprob: -12.375009536743164
    4. '<|end|>' → logprob: -15.250009536743164
    5. '#' → logprob: -15.500009536743164
    6. 'return' → logprob: -16.250009536743164
    7. ' ' → logprob: -17.500009536743164
    8. 'continue' → logprob: -17.625009536743164
    9. '
' → logprob: -18.000009536743164
    10. '```' → logprob: -18.250009536743164

Token 1946: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029995699878782034
    2. '
' → logprob: -6.002999782562256
    3. '```' → logprob: -8.377999305725098
    4. ')' → logprob: -9.252999305725098
    5. '        
' → logprob: -9.752999305725098
    6. ')
' → logprob: -10.252999305725098
    7. '<|end|>' → logprob: -10.877999305725098
    8. '   ' → logprob: -10.877999305725098
    9. '\n' → logprob: -11.127999305725098
    10. '\
' → logprob: -11.877999305725098

Token 1947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009436229011043906
    2. '
' → logprob: -7.250943660736084
    3. '```' → logprob: -9.000943183898926
    4. '   ' → logprob: -9.375943183898926
    5. 'try' → logprob: -11.250943183898926
    6. '        
' → logprob: -12.375943183898926
    7. '           ' → logprob: -12.375943183898926
    8. 'def' → logprob: -14.250943183898926
    9. '    
' → logprob: -14.375943183898926
    10. ' try' → logprob: -14.375943183898926

Token 1948: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067484090104699135
    2. 'try' → logprob: -5.006748199462891
    3. '   ' → logprob: -10.38174819946289
    4. '```' → logprob: -13.88174819946289
    5. '
' → logprob: -14.75674819946289
    6. '           ' → logprob: -15.00674819946289
    7. 'def' → logprob: -15.88174819946289
    8. ' try' → logprob: -16.13174819946289
    9. 'Try' → logprob: -16.38174819946289
    10. '      ' → logprob: -18.50674819946289

Token 1949: ' Check' (ID: 6208)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -4.870950215263292e-05
    2. '       ' → logprob: -10.250048637390137
    3. '   ' → logprob: -11.750048637390137
    4. ' try' → logprob: -12.625048637390137
    5. '
' → logprob: -13.750048637390137
    6. 'Try' → logprob: -14.125048637390137
    7. '#' → logprob: -15.000048637390137
    8. '```' → logprob: -17.375049591064453
    9. 'def' → logprob: -18.750049591064453
    10. '           ' → logprob: -19.000049591064453

Token 1950: ' all' (ID: 722)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.17203159630298615
    2. 's' → logprob: -2.7970316410064697
    3. 'len' → logprob: -3.0470316410064697
    4. '       ' → logprob: -4.172031402587891
    5. '   ' → logprob: -4.422031402587891
    6. '
' → logprob: -4.422031402587891
    7. '#' → logprob: -5.672031402587891
    8. 'not' → logprob: -6.172031402587891
    9. 'def' → logprob: -6.547031402587891
    10. '```' → logprob: -7.047031402587891

Token 1951: ' chars' (ID: 47991)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7649268507957458
    2. 'ch' → logprob: -1.2649269104003906
    3. 'c' → logprob: -1.8899269104003906
    4. ' all' → logprob: -3.5149269104003906
    5. '(ch' → logprob: -4.264926910400391
    6. 'pos' → logprob: -4.764926910400391
    7. '(c' → logprob: -4.889926910400391
    8. '(' → logprob: -5.389926910400391
    9. '(all' → logprob: -5.389926910400391
    10. 'ord' → logprob: -5.389926910400391

Token 1952: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8170206546783447
    2. ' in' → logprob: -0.8170206546783447
    3. '       ' → logprob: -2.9420206546783447
    4. 'for' → logprob: -3.3170206546783447
    5. 'allowed' → logprob: -5.192020416259766
    6. ' for' → logprob: -5.442020416259766
    7. 'if' → logprob: -5.692020416259766
    8. 'all' → logprob: -6.067020416259766
    9. 'not' → logprob: -6.317020416259766
    10. ' if' → logprob: -6.567020416259766

Token 1953: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2679734230041504
    2. 'OR' → logprob: -1.5179734230041504
    3. 'set' → logprob: -4.26797342300415
    4. ''s' → logprob: -7.14297342300415
    5. ''' → logprob: -7.51797342300415
    6. '{'' → logprob: -8.892972946166992
    7. '"' → logprob: -9.392972946166992
    8. ' s' → logprob: -9.392972946166992
    9. ' OR' → logprob: -9.392972946166992
    10. ' set' → logprob: -9.767972946166992

Token 1954: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02241818793118
    2. 'for' → logprob: -4.522418022155762
    3. 's' → logprob: -5.647418022155762
    4. '       ' → logprob: -5.772418022155762
    5. '   ' → logprob: -6.397418022155762
    6. 'set' → logprob: -6.897418022155762
    7. 'et' → logprob: -7.147418022155762
    8. 'in' → logprob: -7.397418022155762
    9. '
' → logprob: -9.397418022155762
    10. '(s' → logprob: -9.647418022155762

Token 1955: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3612826466560364
    2. ' in' → logprob: -1.8612825870513916
    3. 'in' → logprob: -3.2362825870513916
    4. 'for' → logprob: -3.4862825870513916
    5. 'not' → logprob: -4.111282825469971
    6. ' not' → logprob: -4.111282825469971
    7. 'allowed' → logprob: -4.361282825469971
    8. ' for' → logprob: -4.986282825469971
    9. 'set' → logprob: -5.111282825469971
    10. 'valid' → logprob: -5.486282825469971

Token 1956: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.24904587864875793
    2. ''' → logprob: -2.3740458488464355
    3. 'set' → logprob: -2.3740458488464355
    4. '{'' → logprob: -3.6240458488464355
    5. '('' → logprob: -6.3740458488464355
    6. ' OR' → logprob: -6.4990458488464355
    7. ''s' → logprob: -6.4990458488464355
    8. ' set' → logprob: -6.8740458488464355
    9. '"' → logprob: -7.4990458488464355
    10. '   ' → logprob: -8.374046325683594

Token 1957: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.00017743845819495618
    2. '
' → logprob: -9.750177383422852
    3. 'IGINAL' → logprob: -10.750177383422852
    4. 'OR' → logprob: -11.000177383422852
    5. 'ig' → logprob: -11.375177383422852
    6. 'I' → logprob: -11.375177383422852
    7. '```' → logprob: -11.625177383422852
    8. '`' → logprob: -12.250177383422852
    9. 'C' → logprob: -12.375177383422852
    10. 'CH' → logprob: -12.375177383422852

Token 1958: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -5.676981345459353e-06
    2. 'CH' → logprob: -12.500005722045898
    3. '_CHAR' → logprob: -13.500005722045898
    4. '_chars' → logprob: -15.875005722045898
    5. '```' → logprob: -16.1250057220459
    6. ' CH' → logprob: -16.3750057220459
    7. '`' → logprob: -17.1250057220459
    8. '\' → logprob: -17.3750057220459
    9. 'Chars' → logprob: -17.6250057220459
    10. '       ' → logprob: -17.6250057220459

Token 1959: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.0008825227851048112
    2. 'S' → logprob: -7.625882625579834
    3. 'AR' → logprob: -8.375882148742676
    4. '_CH' → logprob: -10.375882148742676
    5. '#' → logprob: -10.500882148742676
    6. '   ' → logprob: -10.750882148742676
    7. 'RS' → logprob: -11.125882148742676
    8. '```' → logprob: -11.375882148742676
    9. 'ars' → logprob: -12.125882148742676
    10. 'AS' → logprob: -12.250882148742676

Token 1960: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026305289939045906
    2. 'for' → logprob: -4.901305198669434
    3. ' for' → logprob: -5.026305198669434
    4. ':
' → logprob: -5.901305198669434
    5. ' if' → logprob: -6.401305198669434
    6. '   ' → logprob: -6.401305198669434
    7. ':' → logprob: -6.901305198669434
    8. 'if' → logprob: -7.026305198669434
    9. ' and' → logprob: -7.401305198669434
    10. ' or' → logprob: -7.401305198669434

Token 1961: ' literals' (ID: 193569)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.047121550887823105
    2. '
' → logprob: -4.297121524810791
    3. '=' → logprob: -5.547121524810791
    4. '('' → logprob: -5.672121524810791
    5. '{'' → logprob: -5.672121524810791
    6. ''s' → logprob: -5.922121524810791
    7. '['' → logprob: -6.297121524810791
    8. ''=' → logprob: -6.297121524810791
    9. '('='' → logprob: -6.297121524810791
    10. '"' → logprob: -6.547121524810791

Token 1962: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0144239142537117
    2. ' if' → logprob: -5.264423847198486
    3. ' =' → logprob: -6.139423847198486
    4. ' for' → logprob: -6.389423847198486
    5. '
' → logprob: -6.639423847198486
    6. ' or' → logprob: -7.764423847198486
    7. 'if' → logprob: -7.764423847198486
    8. 'for' → logprob: -7.764423847198486
    9. ',' → logprob: -8.139424324035645
    10. '   ' → logprob: -8.264424324035645

Token 1963: '0' (ID: 15)
  Prédit: '012'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.1041007786989212
    2. '0' → logprob: -2.8541007041931152
    3. ''' → logprob: -3.2291007041931152
    4. '=' → logprob: -7.729100704193115
    5. '01' → logprob: -8.229101181030273
    6. '
' → logprob: -8.604101181030273
    7. '('' → logprob: -9.104101181030273
    8. ' ' → logprob: -9.104101181030273
    9. ' =' → logprob: -9.854101181030273
    10. '"' → logprob: -9.854101181030273

Token 1964: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.4478932023048401
    2. ''' → logprob: -1.4478931427001953
    3. '012' → logprob: -2.4478931427001953
    4. '',' → logprob: -3.8228931427001953
    5. '-' → logprob: -4.572893142700195
    6. '')' → logprob: -6.447893142700195
    7. '123' → logprob: -6.572893142700195
    8. ',' → logprob: -6.822893142700195
    9. ''-' → logprob: -7.322893142700195
    10. '1' → logprob: -7.447893142700195

Token 1965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005249153473414481
    2. '9' → logprob: -8.250524520874023
    3. ''' → logprob: -8.625524520874023
    4. '=' → logprob: -10.000524520874023
    5. '
' → logprob: -11.000524520874023
    6. ' ' → logprob: -12.125524520874023
    7. '='' → logprob: -12.750524520874023
    8. ',' → logprob: -13.375524520874023
    9. '"' → logprob: -13.375524520874023
    10. '123' → logprob: -13.750524520874023

Token 1966: '','' (ID: 4074)
  Prédit: ',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -1.2328846454620361
    2. ',' → logprob: -1.6078846454620361
    3. '')' → logprob: -1.8578846454620361
    4. ''+' → logprob: -2.232884645462036
    5. ''' → logprob: -2.357884645462036
    6. '',' → logprob: -3.107884645462036
    7. ''=' → logprob: -3.232884645462036
    8. '','' → logprob: -4.232884407043457
    9. '=' → logprob: -4.732884407043457
    10. '','=' → logprob: -4.857884407043457

Token 1967: '+' (ID: 10)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30453673005104065
    2. ''=' → logprob: -2.054536819458008
    3. ''' → logprob: -2.679536819458008
    4. '')' → logprob: -3.929536819458008
    5. ')' → logprob: -4.429536819458008
    6. ')=' → logprob: -4.554536819458008
    7. '('='' → logprob: -4.804536819458008
    8. '='' → logprob: -5.429536819458008
    9. '=
' → logprob: -6.304536819458008
    10. '(' → logprob: -6.554536819458008

Token 1968: '','' (ID: 4074)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6423469185829163
    2. ''-' → logprob: -1.0173468589782715
    3. '')' → logprob: -3.1423468589782715
    4. '','' → logprob: -3.2673468589782715
    5. '',' → logprob: -4.6423468589782715
    6. ''' → logprob: -4.8923468589782715
    7. '()-' → logprob: -5.7673468589782715
    8. ',' → logprob: -6.3923468589782715
    9. '-=' → logprob: -6.3923468589782715
    10. ','' → logprob: -7.0173468589782715

Token 1969: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006385299377143383
    2. ''-' → logprob: -5.506385326385498
    3. '-=' → logprob: -7.006385326385498
    4. '-',' → logprob: -7.131385326385498
    5. '-
' → logprob: -8.50638484954834
    6. '-,' → logprob: -9.38138484954834
    7. '()-' → logprob: -9.63138484954834
    8. '=' → logprob: -9.88138484954834
    9. '-'' → logprob: -9.88138484954834
    10. ''' → logprob: -10.13138484954834

Token 1970: '','' (ID: 4074)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.05436916649341583
    2. ''' → logprob: -3.4293692111968994
    3. '')' → logprob: -4.92936897277832
    4. '',' → logprob: -5.67936897277832
    5. ','' → logprob: -5.80436897277832
    6. '','' → logprob: -6.17936897277832
    7. ',' → logprob: -6.42936897277832
    8. '       ' → logprob: -7.05436897277832
    9. '*' → logprob: -7.30436897277832
    10. ''s' → logprob: -7.92936897277832

Token 1971: '*' (ID: 9)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13777828216552734
    2. ')' → logprob: -3.5127782821655273
    3. ''' → logprob: -3.7627782821655273
    4. '*' → logprob: -4.387778282165527
    5. '='' → logprob: -4.387778282165527
    6. '=',' → logprob: -4.512778282165527
    7. '')' → logprob: -5.012778282165527
    8. ')'' → logprob: -5.262778282165527
    9. '('='' → logprob: -5.387778282165527
    10. '(' → logprob: -5.512778282165527

Token 1972: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.8716675639152527
    2. ',' → logprob: -1.1216676235198975
    3. '')' → logprob: -2.3716676235198975
    4. '       ' → logprob: -2.9966676235198975
    5. '','' → logprob: -3.6216676235198975
    6. ','' → logprob: -3.6216676235198975
    7. ''' → logprob: -3.9966676235198975
    8. '(),'' → logprob: -3.9966676235198975
    9. '(),' → logprob: -5.371667385101318
    10. ')' → logprob: -5.746667385101318

Token 1973: '(',' (ID: 30548)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8481239080429077
    2. '(' → logprob: -0.9731239080429077
    3. ')' → logprob: -2.9731240272521973
    4. '(',' → logprob: -3.4731240272521973
    5. ''' → logprob: -3.5981240272521973
    6. '()' → logprob: -4.223124027252197
    7. '('' → logprob: -4.223124027252197
    8. '()='' → logprob: -4.473124027252197
    9. '(','' → logprob: -4.723124027252197
    10. '('='' → logprob: -5.098124027252197

Token 1974: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.08919485658407211
    2. ')' → logprob: -2.4641947746276855
    3. ''' → logprob: -9.714195251464844
    4. ')'' → logprob: -10.339195251464844
    5. '=' → logprob: -10.714195251464844
    6. ')=' → logprob: -10.714195251464844
    7. 's' → logprob: -10.714195251464844
    8. '   ' → logprob: -11.089195251464844
    9. '       ' → logprob: -11.214195251464844
    10. '',' → logprob: -11.714195251464844

Token 1975: '','' (ID: 4074)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24132201075553894
    2. '
' → logprob: -2.6163220405578613
    3. ' or' → logprob: -3.4913220405578613
    4. ' if' → logprob: -3.9913220405578613
    5. '=' → logprob: -4.366322040557861
    6. ' and' → logprob: -4.491322040557861
    7. '==' → logprob: -4.491322040557861
    8. 'if' → logprob: -4.616322040557861
    9. ':
' → logprob: -5.116322040557861
    10. '           ' → logprob: -5.241322040557861

Token 1976: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5625079274177551
    2. '='' → logprob: -0.9375079274177551
    3. ''' → logprob: -3.5625078678131104
    4. ''=' → logprob: -4.6875081062316895
    5. '=''' → logprob: -8.187507629394531
    6. '=',' → logprob: -8.187507629394531
    7. '=
' → logprob: -8.437507629394531
    8. '','=' → logprob: -9.562507629394531
    9. '('='' → logprob: -9.937507629394531
    10. ' '='' → logprob: -10.562507629394531

Token 1977: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17996232211589813
    2. ':
' → logprob: -2.929962396621704
    3. ' and' → logprob: -3.804962396621704
    4. ' if' → logprob: -3.929962396621704
    5. '
' → logprob: -4.054962158203125
    6. '   ' → logprob: -4.554962158203125
    7. ' or' → logprob: -4.804962158203125
    8. ':' → logprob: -4.929962158203125
    9. ' =' → logprob: -5.179962158203125
    10. 'and' → logprob: -5.554962158203125

Token 1978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023020319640636444
    2. '==' → logprob: -7.752302169799805
    3. ' if' → logprob: -8.002302169799805
    4. '
' → logprob: -8.002302169799805
    5. ' and' → logprob: -8.002302169799805
    6. '   ' → logprob: -8.627302169799805
    7. ' ==' → logprob: -9.127302169799805
    8. '           ' → logprob: -9.252302169799805
    9. 'if' → logprob: -9.502302169799805
    10. 'and' → logprob: -9.502302169799805

Token 1979: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045326050370931625
    2. 'if' → logprob: -3.795325994491577
    3. ' if' → logprob: -4.545326232910156
    4. 'for' → logprob: -4.920326232910156
    5. ' for' → logprob: -6.295326232910156
    6. '
' → logprob: -6.670326232910156
    7. '   ' → logprob: -7.545326232910156
    8. '           ' → logprob: -9.545326232910156
    9. '#' (adapté à ' #') → logprob: -9.920326232910156
    10. '```' → logprob: -10.170326232910156

Token 1980: ' Here' (ID: 7306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5177208185195923
    2. 'if' → logprob: -1.3927208185195923
    3. 'for' → logprob: -2.0177206993103027
    4. ' if' → logprob: -4.517720699310303
    5. '   ' → logprob: -5.267720699310303
    6. ' for' → logprob: -5.642720699310303
    7. '
' → logprob: -5.892720699310303
    8. '           ' → logprob: -10.017721176147461
    9. 'set' → logprob: -10.017721176147461
    10. 'allowed' → logprob: -10.017721176147461

Token 1981: ' allowed' (ID: 9279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45076295733451843
    2. '       ' → logprob: -1.2007629871368408
    3. ' for' → logprob: -3.575762987136841
    4. 'if' → logprob: -3.700762987136841
    5. ' if' → logprob: -5.700762748718262
    6. '#' → logprob: -5.950762748718262
    7. '   ' → logprob: -6.325762748718262
    8. '
' → logprob: -7.825762748718262
    9. 'allowed' → logprob: -7.825762748718262
    10. 'set' → logprob: -9.075762748718262

Token 1982: ' chars' (ID: 47991)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9495264291763306
    2. 'for' → logprob: -1.5745264291763306
    3. '       ' → logprob: -1.8245264291763306
    4. ' if' → logprob: -2.574526309967041
    5. ' for' → logprob: -3.199526309967041
    6. '   ' → logprob: -3.949526309967041
    7. ' =' → logprob: -4.324526309967041
    8. 'return' → logprob: -4.324526309967041
    9. 'set' → logprob: -4.324526309967041
    10. '=' → logprob: -5.074526309967041

Token 1983: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8142293691635132
    2. ' =' → logprob: -1.0642293691635132
    3. 'in' → logprob: -2.8142294883728027
    4. '       ' → logprob: -2.9392294883728027
    5. '=set' → logprob: -3.8142294883728027
    6. ' in' → logprob: -4.189229488372803
    7. '   ' → logprob: -4.314229488372803
    8. 's' → logprob: -4.814229488372803
    9. 'set' → logprob: -5.189229488372803
    10. ')' → logprob: -5.189229488372803

Token 1984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4442448019981384
    2. '   ' → logprob: -1.9442448616027832
    3. 'set' → logprob: -2.069244861602783
    4. ' set' → logprob: -3.569244861602783
    5. 'for' → logprob: -4.319244861602783
    6. 'if' → logprob: -4.444244861602783
    7. ' for' → logprob: -5.069244861602783
    8. ' if' → logprob: -5.319244861602783
    9. 'allowed' → logprob: -5.319244861602783
    10. ' =' → logprob: -5.819244861602783

Token 1985: ' #' (ID: 1069)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2996220886707306
    2. ' set' → logprob: -1.9246220588684082
    3. '   ' → logprob: -3.299622058868408
    4. '{'' → logprob: -3.424622058868408
    5. ''' → logprob: -3.924622058868408
    6. '       ' → logprob: -5.049622058868408
    7. 'OR' → logprob: -5.424622058868408
    8. '0' → logprob: -5.924622058868408
    9. ' {'' → logprob: -5.924622058868408
    10. 'for' → logprob: -6.174622058868408

Token 1986: ' The' (ID: 623)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.22377030551433563
    2. 'allowed' → logprob: -2.7237703800201416
    3. 'valid' → logprob: -2.9737703800201416
    4. 'for' → logprob: -3.0987703800201416
    5. 'if' → logprob: -4.5987701416015625
    6. '   ' → logprob: -5.2237701416015625
    7. ' set' → logprob: -5.4737701416015625
    8. ''' → logprob: -5.5987701416015625
    9. '{'' → logprob: -5.5987701416015625
    10. '0' → logprob: -5.7237701416015625

Token 1987: ' original' (ID: 4756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6083532571792603
    2. 'if' → logprob: -2.1083531379699707
    3. ' s' → logprob: -2.3583531379699707
    4. '#' → logprob: -2.3583531379699707
    5. 'allowed' → logprob: -2.3583531379699707
    6. '=' → logprob: -2.9833531379699707
    7. ' allowed' → logprob: -3.3583531379699707
    8. ' =' → logprob: -3.3583531379699707
    9. ' for' → logprob: -3.6083531379699707
    10. 'for' → logprob: -3.6083531379699707

Token 1988: ' chars' (ID: 47991)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.04534006491303444
    2. 'chars' → logprob: -3.795340061187744
    3. '_CH' → logprob: -5.670340061187744
    4. 's' → logprob: -5.670340061187744
    5. '_ch' → logprob: -5.670340061187744
    6. ''' → logprob: -6.170340061187744
    7. 'CH' → logprob: -6.545340061187744
    8. ' chars' → logprob: -6.795340061187744
    9. 'Chars' → logprob: -6.920340061187744
    10. '_char' → logprob: -6.920340061187744

Token 1989: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295714199542999
    2. '=' → logprob: -1.5545713901519775
    3. 's' → logprob: -3.5545713901519775
    4. ' in' → logprob: -4.429571628570557
    5. ' are' → logprob: -4.429571628570557
    6. '
' → logprob: -5.054571628570557
    7. '.' → logprob: -5.179571628570557
    8. ''' → logprob: -5.179571628570557
    9. '=set' → logprob: -5.179571628570557
    10. '='' → logprob: -5.554571628570557

Token 1990: ' OR' (ID: 4917)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6704241037368774
    2. ''' → logprob: -1.2954241037368774
    3. '{'' → logprob: -2.295423984527588
    4. 'OR' → logprob: -2.420423984527588
    5. ' set' → logprob: -4.670423984527588
    6. '0' → logprob: -5.045423984527588
    7. ''s' → logprob: -5.920423984527588
    8. 's' → logprob: -6.045423984527588
    9. '['' → logprob: -6.920423984527588
    10. ' OR' → logprob: -7.670423984527588

Token 1991: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.00012749579036608338
    2. 'IGINAL' → logprob: -10.000127792358398
    3. 'I' → logprob: -10.500127792358398
    4. 'CH' → logprob: -11.000127792358398
    5. 'OR' → logprob: -11.750127792358398
    6. '
' → logprob: -12.250127792358398
    7. 'ig' → logprob: -12.625127792358398
    8. '`' → logprob: -12.875127792358398
    9. 'C' → logprob: -13.125127792358398
    10. ''' → logprob: -13.250127792358398

Token 1992: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -6.015305552864447e-05
    2. 'CH' → logprob: -10.000060081481934
    3. '```' → logprob: -12.500060081481934
    4. '_CHAR' → logprob: -12.750060081481934
    5. '_chars' → logprob: -13.375060081481934
    6. '`' → logprob: -13.375060081481934
    7. ''_' → logprob: -13.625060081481934
    8. '\' → logprob: -14.125060081481934
    9. ' CH' → logprob: -14.500060081481934
    10. 'Chars' → logprob: -14.625060081481934

Token 1993: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.41587433218955994
    2. 'S' → logprob: -1.2908743619918823
    3. '_CH' → logprob: -2.7908742427825928
    4. 'AR' → logprob: -6.665874481201172
    5. '_AR' → logprob: -7.665874481201172
    6. '_' → logprob: -7.790874481201172
    7. '```' → logprob: -8.290874481201172
    8. 'CH' → logprob: -8.540874481201172
    9. '`' → logprob: -8.790874481201172
    10. '\' → logprob: -8.790874481201172

Token 1994: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.352185994386673
    2. '+' → logprob: -1.4771859645843506
    3. ' or' → logprob: -3.8521859645843506
    4. '
' → logprob: -4.72718620300293
    5. '   ' → logprob: -5.22718620300293
    6. '+
' → logprob: -5.47718620300293
    7. ')' → logprob: -5.47718620300293
    8. ' =' → logprob: -5.85218620300293
    9. 'OR' → logprob: -5.85218620300293
    10. 'or' → logprob: -5.85218620300293

Token 1995: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09577583521604538
    2. '   ' → logprob: -3.345775842666626
    3. ' =' → logprob: -4.220775604248047
    4. ' or' → logprob: -4.345775604248047
    5. '
' → logprob: -4.470775604248047
    6. ' and' → logprob: -5.470775604248047
    7. ' +' → logprob: -5.595775604248047
    8. ')' → logprob: -6.345775604248047
    9. ''' → logprob: -7.220775604248047
    10. 'or' → logprob: -7.220775604248047

Token 1996: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059404224157333374
    2. ' if' → logprob: -3.934404134750366
    3. '   ' → logprob: -4.559404373168945
    4. 'if' → logprob: -4.684404373168945
    5. 'for' → logprob: -4.934404373168945
    6. ' for' → logprob: -5.184404373168945
    7. '
' → logprob: -5.684404373168945
    8. ')' → logprob: -7.809404373168945
    9. ',' → logprob: -8.309404373168945
    10. ' =' → logprob: -8.434404373168945

Token 1997: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9340928196907043
    2. 'if' → logprob: -1.1840927600860596
    3. '       ' → logprob: -1.4340927600860596
    4. '   ' → logprob: -3.5590927600860596
    5. 'allowed' → logprob: -4.434092998504639
    6. ' if' → logprob: -5.059092998504639
    7. '
' → logprob: -5.184092998504639
    8. ' for' → logprob: -5.559092998504639
    9. 'valid' → logprob: -5.934092998504639
    10. 'set' → logprob: -6.059092998504639

Token 1998: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4329148828983307
    2. ' if' → logprob: -2.807914972305298
    3. ':' → logprob: -3.182914972305298
    4. ' that' → logprob: -3.182914972305298
    5. 'allowed' → logprob: -3.307914972305298
    6. ' for' → logprob: -3.557914972305298
    7. '
' → logprob: -3.807914972305298
    8. '   ' → logprob: -4.057914733886719
    9. ' =' → logprob: -4.182914733886719
    10. ' allowed' → logprob: -4.307914733886719

Token 1999: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0406298637390137
    2. 'set' → logprob: -2.0406298637390137
    3. ' set' → logprob: -2.0406298637390137
    4. ''' → logprob: -2.1656298637390137
    5. '#' → logprob: -3.0406298637390137
    6. ' s' → logprob: -3.2906298637390137
    7. 'len' → logprob: -3.6656298637390137
    8. 'allowed' → logprob: -3.6656298637390137
    9. '
' → logprob: -3.9156298637390137
    10. ' all' → logprob: -4.290629863739014

Token 2000: ' literals' (ID: 193569)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9193450212478638
    2. 'in' → logprob: -2.169344902038574
    3. ' must' → logprob: -2.544344902038574
    4. ' not' → logprob: -2.544344902038574
    5. 's' → logprob: -2.669344902038574
    6. 'must' → logprob: -2.919344902038574
    7. ' s' → logprob: -3.419344902038574
    8. '
' → logprob: -3.669344902038574
    9. '   ' → logprob: -3.794344902038574
    10. 'not' → logprob: -4.419344902038574

Token 2001: ' must' (ID: 2804)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7622160911560059
    2. '       ' → logprob: -2.137216091156006
    3. ' =' → logprob: -2.762216091156006
    4. '   ' → logprob: -2.887216091156006
    5. 'in' → logprob: -3.262216091156006
    6. 'allowed' → logprob: -3.262216091156006
    7. '
' → logprob: -3.512216091156006
    8. ' for' → logprob: -3.887216091156006
    9. 'for' → logprob: -4.137216091156006
    10. ' must' → logprob: -4.137216091156006

Token 2002: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.44367560744285583
    2. ' be' → logprob: -1.6936756372451782
    3. 'in' → logprob: -2.8186755180358887
    4. 'all' → logprob: -3.4436755180358887
    5. ' all' → logprob: -3.6936755180358887
    6. ' in' → logprob: -4.068675518035889
    7. 'also' → logprob: -4.943675518035889
    8. 'include' → logprob: -5.193675518035889
    9. 'only' → logprob: -5.568675518035889
    10. '   ' → logprob: -5.818675518035889

Token 2003: ' from' (ID: 591)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.061997827142477036
    2. 'one' → logprob: -4.186997890472412
    3. 'all' → logprob: -4.186997890472412
    4. ' in' → logprob: -4.436997890472412
    5. ''in' → logprob: -5.436997890472412
    6. 'from' → logprob: -5.561997890472412
    7. '0' → logprob: -6.686997890472412
    8. ''' → logprob: -6.686997890472412
    9. 'either' → logprob: -6.686997890472412
    10. 'checked' → logprob: -7.311997890472412

Token 2004: ' valid' (ID: 4529)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.054064393043518066
    2. 'set' → logprob: -3.6790642738342285
    3. '{'' → logprob: -4.1790642738342285
    4. ''' → logprob: -4.6790642738342285
    5. 'the' → logprob: -6.3040642738342285
    6. ' OR' → logprob: -8.429064750671387
    7. '`' → logprob: -8.429064750671387
    8. '0' → logprob: -8.554064750671387
    9. ''s' → logprob: -9.804064750671387
    10. '{' → logprob: -10.179064750671387

Token 2005: ' chars' (ID: 47991)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.02342470921576023
    2. 'set' → logprob: -4.0234246253967285
    3. ''' → logprob: -5.8984246253967285
    4. 'chars' → logprob: -6.7734246253967285
    5. '{'' → logprob: -7.8984246253967285
    6. 'allowed' → logprob: -9.023425102233887
    7. ''s' → logprob: -9.148425102233887
    8. 's' → logprob: -9.273425102233887
    9. 'orig' → logprob: -9.398425102233887
    10. '"' → logprob: -9.398425102233887

Token 2006: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8969489932060242
    2. '       ' → logprob: -1.396949052810669
    3. ' if' → logprob: -2.396949052810669
    4. 'allowed' → logprob: -2.771949052810669
    5. 'for' → logprob: -3.021949052810669
    6. 'if' → logprob: -3.146949052810669
    7. ' for' → logprob: -3.271949052810669
    8. 'valid' → logprob: -3.771949052810669
    9. ' valid' → logprob: -4.39694881439209
    10. '
' → logprob: -4.89694881439209

Token 2007: ' otherwise' (ID: 10275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4555457830429077
    2. '#' → logprob: -1.4555457830429077
    3. 'if' → logprob: -2.8305459022521973
    4. '
' → logprob: -3.3305459022521973
    5. 'for' → logprob: -3.8305459022521973
    6. ' if' → logprob: -4.705545902252197
    7. ' for' → logprob: -6.205545902252197
    8. '   ' → logprob: -6.580545902252197
    9. '```' → logprob: -7.080545902252197
    10. ' #' → logprob: -7.705545902252197

Token 2008: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00390836875885725
    2. ' return' → logprob: -6.128908157348633
    3. 'raise' → logprob: -6.878908157348633
    4. '#' → logprob: -7.628908157348633
    5. '```' → logprob: -9.503908157348633
    6. 'continue' → logprob: -10.503908157348633
    7. 'print' → logprob: -10.628908157348633
    8. '       ' → logprob: -10.878908157348633
    9. '           ' → logprob: -11.378908157348633
    10. 'for' → logprob: -11.503908157348633

Token 2009: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32150962948799133
    2. ' return' → logprob: -2.321509599685669
    3. 'if' → logprob: -2.571509599685669
    4. '```' → logprob: -3.446509599685669
    5. '   ' → logprob: -3.821509599685669
    6. ' if' → logprob: -3.946509599685669
    7. ')' → logprob: -5.196509838104248
    8. 'def' → logprob: -5.321509838104248
    9. 's' → logprob: -5.821509838104248
    10. '``' → logprob: -6.196509838104248

Token 2010: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7394676804542542
    2. 'if' → logprob: -1.9894676208496094
    3. ' if' → logprob: -1.9894676208496094
    4. 'for' → logprob: -2.6144676208496094
    5. ' for' → logprob: -2.8644676208496094
    6. '   ' → logprob: -2.9894676208496094
    7. 'allowed' → logprob: -3.4894676208496094
    8. ' allowed' → logprob: -4.614467620849609
    9. ' valid' → logprob: -5.114467620849609
    10. 'valid' → logprob: -5.489467620849609

Token 2011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00947957206517458
    2. '
' → logprob: -5.509479522705078
    3. '   ' → logprob: -5.509479522705078
    4. ' if' → logprob: -7.509479522705078
    5. 'if' → logprob: -7.884479522705078
    6. 'for' → logprob: -9.009479522705078
    7. '```' → logprob: -9.509479522705078
    8. 'def' → logprob: -9.634479522705078
    9. ' for' → logprob: -9.884479522705078
    10. '`' → logprob: -10.509479522705078

Token 2012: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0217331163585186
    2. '   ' → logprob: -4.396733283996582
    3. '
' → logprob: -5.271733283996582
    4. 'if' → logprob: -6.271733283996582
    5. 'for' → logprob: -6.396733283996582
    6. ' if' → logprob: -8.396733283996582
    7. ' for' → logprob: -9.146733283996582
    8. '```' → logprob: -10.021733283996582
    9. 'valid' → logprob: -10.396733283996582
    10. 'allowed' → logprob: -10.896733283996582

Token 2013: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8974381685256958
    2. 'for' → logprob: -1.2724381685256958
    3. '   ' → logprob: -1.7724381685256958
    4. '       ' → logprob: -2.6474380493164062
    5. 'valid' → logprob: -3.1474380493164062
    6. 'allowed' → logprob: -3.6474380493164062
    7. ' if' → logprob: -6.772438049316406
    8. '#' → logprob: -8.147438049316406
    9. ' for' → logprob: -8.272438049316406
    10. '
' → logprob: -8.522438049316406

Token 2014: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07054339349269867
    2. 'if' → logprob: -2.9455432891845703
    3. '
' → logprob: -5.07054328918457
    4. '   ' → logprob: -5.57054328918457
    5. '       ' → logprob: -6.07054328918457
    6. 'return' → logprob: -6.69554328918457
    7. 'all' → logprob: -7.57054328918457
    8. ' for' → logprob: -7.69554328918457
    9. 'allowed' → logprob: -7.69554328918457
    10. 'set' → logprob: -8.82054328918457

Token 2015: ' s' (ID: 265)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.33062970638275146
    2. 'any' → logprob: -1.3306297063827515
    3. 'all' → logprob: -4.580629825592041
    4. 'set' → logprob: -5.705629825592041
    5. ' not' → logprob: -6.330629825592041
    6. ' any' → logprob: -7.830629825592041
    7. 're' → logprob: -7.955629825592041
    8. 'ch' → logprob: -7.955629825592041
    9. 's' → logprob: -8.830629348754883
    10. 'len' → logprob: -8.955629348754883

Token 2016: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.505351095460355e-05
    2. '_' → logprob: -11.000075340270996
    3. '```' → logprob: -11.375075340270996
    4. 'et' → logprob: -11.625075340270996
    5. '
' → logprob: -12.250075340270996
    6. 's' → logprob: -12.375075340270996
    7. 'tr' → logprob: -12.500075340270996
    8. ''' → logprob: -12.625075340270996
    9. '`' → logprob: -12.750075340270996
    10. '₂' → logprob: -13.000075340270996

Token 2017: ' contains' (ID: 8895)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.3433921337127686
    2. 'not' → logprob: -1.9683921337127686
    3. '.count' → logprob: -2.0933921337127686
    4. 'in' → logprob: -2.2183921337127686
    5. ' in' → logprob: -2.7183921337127686
    6. '   ' → logprob: -3.0933921337127686
    7. '       ' → logprob: -3.0933921337127686
    8. '.' → logprob: -3.0933921337127686
    9. '```' → logprob: -3.2183921337127686
    10. 'all' → logprob: -3.5933921337127686

Token 2018: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.04274040460586548
    2. ' any' → logprob: -3.2927403450012207
    3. 'ch' → logprob: -6.292740345001221
    4. 'not' → logprob: -7.292740345001221
    5. 'set' → logprob: -7.542740345001221
    6. 'c' → logprob: -7.542740345001221
    7. '
' → logprob: -8.667740821838379
    8. 'anything' → logprob: -8.667740821838379
    9. 'a' → logprob: -8.917740821838379
    10. '   ' → logprob: -9.167740821838379

Token 2019: ' char' (ID: 1826)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5939846634864807
    2. 'c' → logprob: -0.9689846634864807
    3. 'char' → logprob: -3.343984603881836
    4. 'not' → logprob: -3.718984603881836
    5. ' ch' → logprob: -5.468984603881836
    6. '(ch' → logprob: -6.843984603881836
    7. 'any' → logprob: -6.968984603881836
    8. '   ' → logprob: -7.843984603881836
    9. 'chr' → logprob: -7.968984603881836
    10. '
' → logprob: -8.218984603881836

Token 2020: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.313610315322876
    2. ' not' → logprob: -1.313610315322876
    3. '```' → logprob: -9.313610076904297
    4. '       ' → logprob: -9.563610076904297
    5. '
' → logprob: -10.063610076904297
    6. '   ' → logprob: -10.188610076904297
    7. 'import' → logprob: -10.313610076904297
    8. '``' → logprob: -11.063610076904297
    9. ')' → logprob: -11.563610076904297
    10. '(not' → logprob: -12.188610076904297

Token 2021: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06234777346253395
    2. ' in' → logprob: -2.812347888946533
    3. '
' → logprob: -8.562347412109375
    4. 'c' → logprob: -9.812347412109375
    5. '   ' → logprob: -10.937347412109375
    6. ' ' → logprob: -11.062347412109375
    7. '0' → logprob: -11.062347412109375
    8. '```' → logprob: -11.187347412109375
    9. 'not' → logprob: -11.812347412109375
    10. 'OR' → logprob: -11.812347412109375

Token 2022: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.011092275381088257
    2. 'set' → logprob: -4.636092185974121
    3. ''' → logprob: -7.386092185974121
    4. '{'' → logprob: -8.261092185974121
    5. ' OR' → logprob: -8.261092185974121
    6. '('' → logprob: -9.886092185974121
    7. '`' → logprob: -10.386092185974121
    8. '"' → logprob: -10.386092185974121
    9. ' set' → logprob: -10.511092185974121
    10. '(' → logprob: -11.636092185974121

Token 2023: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.004355821758508682
    2. 'OR' → logprob: -6.3793559074401855
    3. 'G' → logprob: -6.8793559074401855
    4. 'CH' → logprob: -7.7543559074401855
    5. 'IGINAL' → logprob: -8.379355430603027
    6. 'IC' → logprob: -8.754355430603027
    7. '
' → logprob: -9.004355430603027
    8. 'C' → logprob: -9.004355430603027
    9. '`' → logprob: -9.254355430603027
    10. ''' → logprob: -9.629355430603027

Token 2024: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.0005757896578870714
    2. 'CH' → logprob: -7.500576019287109
    3. '_CHAR' → logprob: -11.75057601928711
    4. ' CH' → logprob: -12.62557601928711
    5. '```' → logprob: -13.00057601928711
    6. ''_' → logprob: -13.25057601928711
    7. '_chars' → logprob: -13.37557601928711
    8. '`' → logprob: -13.87557601928711
    9. 'S' → logprob: -14.25057601928711
    10. 'Chars' → logprob: -14.25057601928711

Token 2025: 'ARS' (ID: 25776)
  Prédit: '_CH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.6335234642028809
    2. 'S' → logprob: -1.1335234642028809
    3. 'ARS' → logprob: -2.008523464202881
    4. 'CH' → logprob: -4.883523464202881
    5. 'AR' → logprob: -6.258523464202881
    6. 'RS' → logprob: -7.633523464202881
    7. '   ' → logprob: -8.133523941040039
    8. 'ars' → logprob: -8.508523941040039
    9. '_CHAR' → logprob: -8.633523941040039
    10. '_AR' → logprob: -8.633523941040039

Token 2026: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14417438209056854
    2. 'or' → logprob: -3.269174337387085
    3. ' and' → logprob: -3.269174337387085
    4. ':
' → logprob: -3.769174337387085
    5. '       ' → logprob: -3.894174337387085
    6. 'and' → logprob: -5.019174575805664
    7. ':' → logprob: -5.769174575805664
    8. '   ' → logprob: -6.269174575805664
    9. '           ' → logprob: -6.769174575805664
    10. '.union' → logprob: -7.644174575805664

Token 2027: ' reject' (ID: 14841)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2943549156188965
    2. 'return' → logprob: -1.4193549156188965
    3. '       ' → logprob: -4.9193549156188965
    4. '   ' → logprob: -5.7943549156188965
    5. ' return' → logprob: -5.9193549156188965
    6. '               ' → logprob: -10.544355392456055
    7. '#' → logprob: -11.919355392456055
    8. '
' → logprob: -12.044355392456055
    9. 'we' → logprob: -12.294355392456055
    10. '          ' → logprob: -12.294355392456055

Token 2028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019150081789121032
    2. ' if' → logprob: -10.000191688537598
    3. '           ' → logprob: -10.250191688537598
    4. '
' → logprob: -10.625191688537598
    5. '   ' → logprob: -10.750191688537598
    6. 'if' → logprob: -11.000191688537598
    7. ' for' → logprob: -11.750191688537598
    8. ',' → logprob: -12.000191688537598
    9. ')' → logprob: -12.000191688537598
    10. '```' → logprob: -12.375191688537598

Token 2029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3438327843905427e-05
    2. '           ' → logprob: -11.87502384185791
    3. '   ' → logprob: -12.37502384185791
    4. ')' → logprob: -12.50002384185791
    5. ',' → logprob: -13.62502384185791
    6. ' if' → logprob: -13.75002384185791
    7. 'if' → logprob: -13.87502384185791
    8. '```' → logprob: -14.25002384185791
    9. '
' → logprob: -14.62502384185791
    10. ':' → logprob: -14.62502384185791

Token 2030: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05583106726408005
    2. 'if' → logprob: -3.180830955505371
    3. 'for' (adapté à ' for') → logprob: -5.055830955505371
    4. ' if' → logprob: -5.305830955505371
    5. '   ' → logprob: -7.555830955505371
    6. ' for' → logprob: -7.930830955505371
    7. '
' → logprob: -8.055830955505371
    8. 'allowed' → logprob: -9.805830955505371
    9. 'set' → logprob: -10.430830955505371
    10. '```' → logprob: -11.055830955505371

Token 2031: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006720347795635462
    2. 'ch' → logprob: -5.006720542907715
    3. ' c' → logprob: -12.506720542907715
    4. 'x' → logprob: -14.881720542907715
    5. '   ' → logprob: -15.006720542907715
    6. 'cc' → logprob: -15.006720542907715
    7. ' ch' → logprob: -16.2567195892334
    8. 'cs' → logprob: -16.6317195892334
    9. '	c' → logprob: -17.0067195892334
    10. '_c' → logprob: -17.2567195892334

Token 2032: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023270288482308388
    2. 'in' → logprob: -3.77327036857605
    3. '       ' → logprob: -11.898270606994629
    4. 's' → logprob: -12.273270606994629
    5. ' not' → logprob: -13.273270606994629
    6. ' ' → logprob: -13.273270606994629
    7. '_in' → logprob: -13.773270606994629
    8. '  ' → logprob: -14.023270606994629
    9. 'not' → logprob: -14.023270606994629
    10. '
' → logprob: -14.023270606994629

Token 2033: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006615649326704443
    2. 'OR' → logprob: -7.625661373138428
    3. ' s' → logprob: -8.875661849975586
    4. '   ' → logprob: -10.625661849975586
    5. ' ' → logprob: -13.500661849975586
    6. '       ' → logprob: -13.750661849975586
    7. '(' → logprob: -13.875661849975586
    8. ' OR' → logprob: -13.875661849975586
    9. 'set' → logprob: -14.000661849975586
    10. '[' → logprob: -14.125661849975586

Token 2034: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6050919890403748
    2. '2' → logprob: -0.8550919890403748
    3. 'OR' → logprob: -3.6050920486450195
    4. '(s' → logprob: -7.7300920486450195
    5. ' s' → logprob: -8.35509204864502
    6. '_orig' → logprob: -8.85509204864502
    7. '   ' → logprob: -8.98009204864502
    8. '_OR' → logprob: -9.10509204864502
    9. '
' → logprob: -9.23009204864502
    10. 'if' → logprob: -9.73009204864502

Token 2035: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.200883686542511
    2. '           ' → logprob: -2.450883626937866
    3. ' not' → logprob: -3.575883626937866
    4. '       ' → logprob: -3.575883626937866
    5. ':' → logprob: -3.825883626937866
    6. 'if' → logprob: -4.950883865356445
    7. ' if' → logprob: -5.450883865356445
    8. '   ' → logprob: -6.325883865356445
    9. '):
' → logprob: -6.325883865356445
    10. 'not' → logprob: -6.575883865356445

Token 2036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010688089241739362
    2. '       ' → logprob: -9.250106811523438
    3. '   ' → logprob: -12.125106811523438
    4. '	       ' → logprob: -13.250106811523438
    5. '               ' → logprob: -13.875106811523438
    6. 'if' → logprob: -14.250106811523438
    7. '          ' → logprob: -14.375106811523438
    8. '         ' → logprob: -14.750106811523438
    9. '<|end|>' → logprob: -15.000106811523438
    10. '```' → logprob: -15.125106811523438

Token 2037: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6351290941238403
    2. 'if' (adapté à ' if') → logprob: -0.7601290941238403
    3. '       ' → logprob: -6.260128974914551
    4. ' if' → logprob: -7.760128974914551
    5. '   ' → logprob: -8.76012897491455
    6. '               ' → logprob: -11.13512897491455
    7. 'not' → logprob: -12.38512897491455
    8. '	if' → logprob: -12.63512897491455
    9. '	       ' → logprob: -12.76012897491455
    10. 'If' → logprob: -13.13512897491455

Token 2038: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009825548622757196
    2. ' c' → logprob: -7.000982761383057
    3. '           ' → logprob: -9.625982284545898
    4. 'not' → logprob: -13.750982284545898
    5. '   ' → logprob: -14.125982284545898
    6. '       ' → logprob: -14.250982284545898
    7. '          ' → logprob: -14.500982284545898
    8. ')c' → logprob: -14.750982284545898
    9. '         ' → logprob: -15.125982284545898
    10. '               ' → logprob: -15.125982284545898

Token 2039: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16027896106243134
    2. 'not' → logprob: -1.9102789163589478
    3. ')' → logprob: -10.410279273986816
    4. '           ' → logprob: -12.410279273986816
    5. '       ' → logprob: -12.410279273986816
    6. '```' → logprob: -12.785279273986816
    7. 'Not' → logprob: -12.910279273986816
    8. '<' → logprob: -13.160279273986816
    9. 'if' → logprob: -13.410279273986816
    10. '   ' → logprob: -13.785279273986816

Token 2040: ' in' (ID: 306)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.06549259275197983
    2. ' in' → logprob: -3.440492630004883
    3. ' OR' → logprob: -3.690492630004883
    4. 'in' → logprob: -5.440492630004883
    5. '_OR' → logprob: -6.565492630004883
    6. '('' → logprob: -7.815492630004883
    7. '{'' → logprob: -10.315492630004883
    8. ''' → logprob: -10.690492630004883
    9. 'IN' → logprob: -10.690492630004883
    10. '=' → logprob: -10.815492630004883

Token 2041: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.000605337496381253
    2. 'set' → logprob: -7.50060510635376
    3. '{'' → logprob: -10.875605583190918
    4. ' OR' → logprob: -11.125605583190918
    5. ''' → logprob: -11.500605583190918
    6. '('' → logprob: -12.000605583190918
    7. '_OR' → logprob: -14.375605583190918
    8. '{' → logprob: -14.750605583190918
    9. ' set' → logprob: -15.000605583190918
    10. '(' → logprob: -15.375605583190918

Token 2042: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.004671730101108551
    2. 'CH' → logprob: -5.629671573638916
    3. 'OR' → logprob: -7.379671573638916
    4. 'G' → logprob: -9.504672050476074
    5. 'C' → logprob: -9.754672050476074
    6. '_CH' → logprob: -9.879672050476074
    7. 'IC' → logprob: -9.879672050476074
    8. 'ig' → logprob: -10.629672050476074
    9. 'orig' → logprob: -10.629672050476074
    10. '
' → logprob: -11.004672050476074

Token 2043: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -0.00018327576981391758
    2. 'CH' → logprob: -8.62518310546875
    3. '_CHAR' → logprob: -13.00018310546875
    4. ' CH' → logprob: -14.37518310546875
    5. '_C' → logprob: -15.12518310546875
    6. '```' → logprob: -15.50018310546875
    7. '   ' → logprob: -16.75018310546875
    8. '_chars' → logprob: -16.75018310546875
    9. '\' → logprob: -17.12518310546875
    10. '
' → logprob: -17.37518310546875

Token 2044: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.16170477867126465
    2. '_CH' → logprob: -2.0367047786712646
    3. 'S' → logprob: -4.161705017089844
    4. 'CH' → logprob: -6.661705017089844
    5. 'AR' → logprob: -6.911705017089844
    6. 'ars' → logprob: -8.536705017089844
    7. '```' → logprob: -8.661705017089844
    8. '   ' → logprob: -8.786705017089844
    9. '_AR' → logprob: -9.661705017089844
    10. '_chars' → logprob: -10.036705017089844

Token 2045: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4619692265987396
    2. ':' → logprob: -1.836969256401062
    3. '           ' → logprob: -2.4619691371917725
    4. ' and' → logprob: -2.8369691371917725
    5. '               ' → logprob: -3.0869691371917725
    6. '       ' → logprob: -4.586969375610352
    7. 'and' → logprob: -5.336969375610352
    8. ':return' → logprob: -5.961969375610352
    9. '):
' → logprob: -6.336969375610352
    10. '<|end|>' → logprob: -7.586969375610352

Token 2046: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018999822437763214
    2. '           ' → logprob: -4.019000053405762
    3. ':' → logprob: -7.769000053405762
    4. ':
' → logprob: -8.269000053405762
    5. ' and' → logprob: -9.519000053405762
    6. ':return' → logprob: -10.394000053405762
    7. ',' → logprob: -11.519000053405762
    8. '              ' → logprob: -11.644000053405762
    9. '                   ' → logprob: -12.019000053405762
    10. 'and' → logprob: -12.144000053405762

Token 2047: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007413055747747421
    2. '               ' → logprob: -5.257412910461426
    3. '           ' → logprob: -6.257412910461426
    4. ' return' → logprob: -8.507412910461426
    5. '                   ' → logprob: -9.757412910461426
    6. '   ' → logprob: -14.632412910461426
    7. '	return' → logprob: -15.757412910461426
    8. '                       ' → logprob: -15.882412910461426
    9. '       ' → logprob: -16.882413864135742
    10. '
' → logprob: -16.882413864135742

Token 2048: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'False' → logprob: -14.250005722045898
    4. '           ' → logprob: -15.875005722045898
    5. '```' → logprob: -17.6250057220459
    6. '   ' → logprob: -17.8750057220459
    7. '               ' → logprob: -18.0000057220459
    8. '                   ' → logprob: -18.7500057220459
    9. '       ' → logprob: -18.7500057220459
    10. '
' → logprob: -18.7500057220459

Token 2049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. 'False' → logprob: -13.875000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.750001907348633
    5. '```' → logprob: -19.000001907348633
    6. 'false' → logprob: -20.000001907348633
    7. '000' → logprob: -20.000001907348633
    8. '
' → logprob: -20.000001907348633
    9. 'None' → logprob: -20.750001907348633
    10. '  ' → logprob: -20.875001907348633

Token 2050: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01291960570961237
    2. '<|end|>' → logprob: -4.5129194259643555
    3. ')' → logprob: -6.8879194259643555
    4. '```' → logprob: -7.7629194259643555
    5. '           ' → logprob: -8.887919425964355
    6. '<|end|>' → logprob: -9.262919425964355
    7. '               ' → logprob: -10.762919425964355
    8. '   ' → logprob: -10.762919425964355
    9. '
' → logprob: -11.012919425964355
    10. '      ' → logprob: -11.262919425964355

Token 2051: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017816872568801045
    2. '
' → logprob: -6.376781463623047
    3. '        
' → logprob: -10.251781463623047
    4. '```' → logprob: -10.876781463623047
    5. '   ' → logprob: -11.501781463623047
    6. '<|end|>' → logprob: -11.751781463623047
    7. 'import' → logprob: -13.501781463623047
    8. '           ' → logprob: -13.751781463623047
    9. 'def' → logprob: -14.126781463623047
    10. '
' → logprob: -14.376781463623047

Token 2052: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016129620373249054
    2. 'try' → logprob: -4.141129493713379
    3. '   ' → logprob: -10.391129493713379
    4. '
' → logprob: -11.016129493713379
    5. '```' → logprob: -11.016129493713379
    6. '           ' → logprob: -11.641129493713379
    7. 'import' → logprob: -11.891129493713379
    8. 'def' → logprob: -12.391129493713379
    9. ' try' → logprob: -12.391129493713379
    10. 'Try' → logprob: -13.016129493713379

Token 2053: ' Parse' (ID: 26701)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.00037597675691358745
    2. '       ' → logprob: -8.000375747680664
    3. '   ' → logprob: -10.750375747680664
    4. '
' → logprob: -11.750375747680664
    5. 'def' → logprob: -12.125375747680664
    6. 'Try' → logprob: -13.000375747680664
    7. ' try' → logprob: -13.500375747680664
    8. '#' → logprob: -13.625375747680664
    9. '```' → logprob: -14.000375747680664
    10. '           ' → logprob: -16.750375747680664

Token 2054: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48557788133621216
    2. 'try' → logprob: -0.9855778813362122
    3. '
' → logprob: -5.6105780601501465
    4. 'def' → logprob: -5.9855780601501465
    5. '   ' → logprob: -6.1105780601501465
    6. 'parser' → logprob: -6.2355780601501465
    7. 'p' → logprob: -7.7355780601501465
    8. '```' → logprob: -7.7355780601501465
    9. '           ' → logprob: -9.735577583312988
    10. 'error' → logprob: -10.110577583312988

Token 2055: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.10141268372535706
    2. 'eval' → logprob: -2.726412773132324
    3. 'try' → logprob: -3.726412773132324
    4. '   ' → logprob: -5.476412773132324
    5. '       ' → logprob: -7.101412773132324
    6. '
' → logprob: -7.476412773132324
    7. ' evaluate' → logprob: -7.851412773132324
    8. 'def' → logprob: -7.976412773132324
    9. '#' → logprob: -8.851412773132324
    10. 'validate' → logprob: -8.976412773132324

Token 2056: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16070416569709778
    2. 'try' → logprob: -1.9107041358947754
    3. '   ' → logprob: -8.035704612731934
    4. ' try' → logprob: -8.910704612731934
    5. '
' → logprob: -11.660704612731934
    6. '           ' → logprob: -12.535704612731934
    7. '```' → logprob: -12.535704612731934
    8. 'parser' → logprob: -13.160704612731934
    9. 'def' → logprob: -14.160704612731934
    10. '	try' → logprob: -14.285704612731934

Token 2057: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003397535183466971
    2. 'try' → logprob: -8.00033950805664
    3. '```' → logprob: -12.87533950805664
    4. '   ' → logprob: -14.00033950805664
    5. '           ' → logprob: -14.62533950805664
    6. ' try' → logprob: -14.87533950805664
    7. '
' → logprob: -17.12533950805664
    8. 'Try' → logprob: -17.62533950805664
    9. '      ' → logprob: -19.25033950805664
    10. '	try' → logprob: -19.37533950805664

Token 2058: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4740927219390869
    2. 'try' (adapté à ' try') → logprob: -0.9740927219390869
    3. '   ' → logprob: -11.724092483520508
    4. ' try' → logprob: -11.974092483520508
    5. '```' → logprob: -14.724092483520508
    6. '           ' → logprob: -14.849092483520508
    7. 'parser' → logprob: -15.099092483520508
    8. '	try' → logprob: -15.724092483520508
    9. '
' → logprob: -15.974092483520508
    10. '      ' → logprob: -17.474092483520508

Token 2059: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1809913069009781
    2. ':
' → logprob: -1.805991291999817
    3. ':' → logprob: -6.930991172790527
    4. '       ' → logprob: -8.680991172790527
    5. 'parser' → logprob: -9.930991172790527
    6. '   ' → logprob: -11.555991172790527
    7. ' parser' → logprob: -11.555991172790527
    8. '               ' → logprob: -11.930991172790527
    9. '          ' → logprob: -12.430991172790527
    10. '```' → logprob: -12.555991172790527

Token 2060: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.93710636976175e-05
    2. 'parser' → logprob: -9.750099182128906
    3. '       ' → logprob: -10.500099182128906
    4. '   ' → logprob: -12.875099182128906
    5. '```' → logprob: -12.875099182128906
    6. '               ' → logprob: -13.000099182128906
    7. 'p' → logprob: -13.125099182128906
    8. 'parse' → logprob: -13.625099182128906
    9. '          ' → logprob: -14.250099182128906
    10. ' parser' → logprob: -14.375099182128906

Token 2061: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.6037676334381104
    2. 'p' → logprob: -0.8537676334381104
    3. '           ' → logprob: -3.6037676334381104
    4. '   ' → logprob: -9.728767395019531
    5. 'par' → logprob: -10.353767395019531
    6. '       ' → logprob: -10.353767395019531
    7. ' parser' → logprob: -10.728767395019531
    8. 'Parser' → logprob: -10.978767395019531
    9. '               ' → logprob: -11.103767395019531
    10. 'parse' → logprob: -11.478767395019531

Token 2062: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10081729292869568
    2. ' =' → logprob: -2.3508172035217285
    3. '           ' → logprob: -7.8508172035217285
    4. '       ' → logprob: -8.975817680358887
    5. '               ' → logprob: -10.975817680358887
    6. '   ' → logprob: -11.100817680358887
    7. '(Parser' → logprob: -11.225817680358887
    8. ')' → logprob: -11.725817680358887
    9. '(' → logprob: -11.725817680358887
    10. '=
' → logprob: -11.850817680358887

Token 2063: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.00043162284418940544
    2. ' Parser' → logprob: -7.750431537628174
    3. '       ' → logprob: -14.500432014465332
    4. '(Parser' → logprob: -15.000432014465332
    5. '           ' → logprob: -16.625431060791016
    6. '   ' → logprob: -17.250431060791016
    7. '.Parser' → logprob: -18.875431060791016
    8. 'Parse' → logprob: -20.125431060791016
    9. '```' → logprob: -20.875431060791016
    10. '_parser' → logprob: -21.125431060791016

Token 2064: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.22618436813354492
    2. 's' → logprob: -1.726184368133545
    3. '       ' → logprob: -3.726184368133545
    4. '           ' → logprob: -8.351184844970703
    5. '(' → logprob: -9.351184844970703
    6. '   ' → logprob: -10.351184844970703
    7. ' s' → logprob: -11.601184844970703
    8. '               ' → logprob: -12.476184844970703
    9. '(
' → logprob: -12.601184844970703
    10. '        ' → logprob: -13.101184844970703

Token 2065: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '       ' → logprob: -13.50000286102295
    3. '   ' → logprob: -14.37500286102295
    4. ')' → logprob: -14.87500286102295
    5. 's' → logprob: -14.87500286102295
    6. '           ' → logprob: -15.62500286102295
    7. '               ' → logprob: -16.500003814697266
    8. '```' → logprob: -16.500003814697266
    9. '
' → logprob: -17.000003814697266
    10. ')
' → logprob: -17.250003814697266

Token 2066: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005001886747777462
    2. ')
' → logprob: -6.005002021789551
    3. '       ' → logprob: -6.130002021789551
    4. '           ' → logprob: -8.50500202178955
    5. '(' → logprob: -10.38000202178955
    6. '   ' → logprob: -10.88000202178955
    7. '(parser' → logprob: -11.00500202178955
    8. '               ' → logprob: -11.13000202178955
    9. '(s' → logprob: -11.13000202178955
    10. ',' → logprob: -11.63000202178955

Token 2067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004170052707195282
    2. 'val' → logprob: -5.754169940948486
    3. 'result' → logprob: -7.629169940948486
    4. '       ' → logprob: -8.129170417785645
    5. 'parser' → logprob: -10.254170417785645
    6. 'parse' → logprob: -10.379170417785645
    7. '               ' → logprob: -10.629170417785645
    8. 'parsed' → logprob: -10.879170417785645
    9. 'count' → logprob: -11.004170417785645
    10. 'return' → logprob: -11.129170417785645

Token 2068: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.009003927931189537
    2. 'left' → logprob: -5.00900411605835
    3. '           ' → logprob: -6.38400411605835
    4. 'vals' → logprob: -8.509003639221191
    5. '(val' → logprob: -9.884003639221191
    6. '       ' → logprob: -10.009003639221191
    7. 'lhs' → logprob: -10.134003639221191
    8. 'l' → logprob: -10.259003639221191
    9. 'parse' → logprob: -10.384003639221191
    10. 'v' → logprob: -10.384003639221191

Token 2069: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.007214829791337252
    2. 's' → logprob: -6.0072150230407715
    3. '=' → logprob: -6.7572150230407715
    4. ' =' → logprob: -7.0072150230407715
    5. 'left' → logprob: -7.1322150230407715
    6. '           ' → logprob: -7.1322150230407715
    7. 'Q' → logprob: -8.132214546203613
    8. '       ' → logprob: -8.382214546203613
    9. 'L' → logprob: -8.507214546203613
    10. '_l' → logprob: -8.882214546203613

Token 2070: ',' (ID: 11)
  Prédit: ',val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.42899033427238464
    2. ',' → logprob: -1.053990364074707
    3. '=' → logprob: -9.053990364074707
    4. ' ,' → logprob: -9.428990364074707
    5. '           ' → logprob: -10.303990364074707
    6. ' =' → logprob: -10.803990364074707
    7. 'val' → logprob: -11.428990364074707
    8. ',value' → logprob: -12.553990364074707
    9. '_,' → logprob: -13.053990364074707
    10. '   ' → logprob: -13.178990364074707

Token 2071: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011150982230901718
    2. ' val' → logprob: -4.51115083694458
    3. '           ' → logprob: -9.261151313781738
    4. '       ' → logprob: -12.511151313781738
    5. '   ' → logprob: -14.011151313781738
    6. '	val' → logprob: -14.011151313781738
    7. '_val' → logprob: -14.261151313781738
    8. '               ' → logprob: -14.761151313781738
    9. '            ' → logprob: -15.261151313781738
    10. '          ' → logprob: -15.261151313781738

Token 2072: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00035048185964114964
    2. 'right' → logprob: -8.000350952148438
    3. 'Right' → logprob: -11.625350952148438
    4. '```' → logprob: -12.875350952148438
    5. '=' → logprob: -13.750350952148438
    6. '_RIGHT' → logprob: -14.375350952148438
    7. '_Right' → logprob: -14.875350952148438
    8. '_left' → logprob: -15.500350952148438
    9. '_val' → logprob: -15.500350952148438
    10. '=_' → logprob: -15.625350952148438

Token 2073: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411787509918213
    2. '=' → logprob: -0.9741178750991821
    3. '           ' → logprob: -10.34911823272705
    4. ')' → logprob: -12.22411823272705
    5. '       ' → logprob: -13.59911823272705
    6. '               ' → logprob: -13.72411823272705
    7. '   ' → logprob: -15.09911823272705
    8. '=parse' → logprob: -15.09911823272705
    9. '(parser' → logprob: -16.099117279052734
    10. 'parser' → logprob: -16.099117279052734

Token 2074: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.01870034635066986
    2. ' parser' → logprob: -4.018700122833252
    3. '           ' → logprob: -7.518700122833252
    4. '(parser' → logprob: -12.26870059967041
    5. '	parser' → logprob: -13.64370059967041
    6. '               ' → logprob: -14.76870059967041
    7. '```' → logprob: -15.14370059967041
    8. '.parser' → logprob: -15.26870059967041
    9. '       ' → logprob: -15.89370059967041
    10. '/parser' → logprob: -16.143699645996094

Token 2075: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.00015217094914987683
    2. 'parse' → logprob: -9.125152587890625
    3. '.' → logprob: -10.375152587890625
    4. '=parse' → logprob: -12.250152587890625
    5. '   ' → logprob: -13.000152587890625
    6. '       ' → logprob: -13.750152587890625
    7. '```' → logprob: -13.750152587890625
    8. ' .' → logprob: -14.375152587890625
    9. '_parse' → logprob: -14.625152587890625
    10. '           ' → logprob: -15.375152587890625

Token 2076: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.5
    3. '```' → logprob: -16.5
    4. ')' → logprob: -17.125
    5. '(Q' → logprob: -18.0
    6. '`' → logprob: -18.5
    7. '('' → logprob: -19.0
    8. '
' → logprob: -19.0
    9. ' Q' → logprob: -19.0
    10. 'E' → logprob: -19.875

Token 2077: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02342529408633709
    2. '()
' → logprob: -3.773425340652466
    3. '           ' → logprob: -8.648425102233887
    4. '()
' → logprob: -13.273425102233887
    5. '()`' → logprob: -13.523425102233887
    6. '())' → logprob: -14.648425102233887
    7. '()\' → logprob: -15.273425102233887
    8. '               ' → logprob: -15.273425102233887
    9. ')' → logprob: -16.023426055908203
    10. '();' → logprob: -16.023426055908203

Token 2078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.621933451038785e-05
    2. '       ' → logprob: -10.000056266784668
    3. 'except' → logprob: -11.875056266784668
    4. '               ' → logprob: -12.875056266784668
    5. 'return' → logprob: -14.125056266784668
    6. '   ' → logprob: -15.625056266784668
    7. '```' → logprob: -16.12505531311035
    8. '
' → logprob: -17.25005531311035
    9. '                   ' → logprob: -17.50005531311035
    10. '		' → logprob: -17.50005531311035

Token 2079: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06321777403354645
    2. 'if' (adapté à ' if') → logprob: -2.813217878341675
    3. 'return' → logprob: -6.813217639923096
    4. '       ' → logprob: -9.188218116760254
    5. '               ' → logprob: -10.438218116760254
    6. ' if' → logprob: -11.563218116760254
    7. '   ' → logprob: -11.813218116760254
    8. '                   ' → logprob: -14.438218116760254
    9. 'def' → logprob: -15.063218116760254
    10. '		' → logprob: -15.313218116760254

Token 2080: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.014264699071645737
    2. ' val' → logprob: -4.2642645835876465
    3. '           ' → logprob: -9.264265060424805
    4. '(val' → logprob: -12.514265060424805
    5. '               ' → logprob: -13.889265060424805
    6. '	val' → logprob: -14.389265060424805
    7. '[val' → logprob: -14.639265060424805
    8. ',val' → logprob: -15.264265060424805
    9. '_val' → logprob: -15.639265060424805
    10. '            ' → logprob: -16.139265060424805

Token 2081: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.0339031834737398e-05
    2. '_right' → logprob: -11.250020027160645
    3. '==' → logprob: -12.875020027160645
    4. 'left' → logprob: -13.625020027160645
    5. '_equal' → logprob: -13.875020027160645
    6. '       ' → logprob: -14.000020027160645
    7. '   ' → logprob: -14.375020027160645
    8. '           ' → logprob: -14.500020027160645
    9. 'Left' → logprob: -16.25002098083496
    10. ' ==' → logprob: -16.37502098083496

Token 2082: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02370089665055275
    2. ' ==' → logprob: -3.7737009525299072
    3. '           ' → logprob: -7.898700714111328
    4. '==
' → logprob: -10.023700714111328
    5. '```' → logprob: -11.148700714111328
    6. ')==' → logprob: -11.773700714111328
    7. '=' → logprob: -12.148700714111328
    8. '!=' → logprob: -12.648700714111328
    9. '               ' → logprob: -12.773700714111328
    10. ')' → logprob: -13.648700714111328

Token 2083: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -4.47757811343763e-05
    2. ' val' → logprob: -10.500044822692871
    3. '           ' → logprob: -11.000044822692871
    4. '	val' → logprob: -15.250044822692871
    5. '(val' → logprob: -16.250043869018555
    6. ',val' → logprob: -17.125043869018555
    7. '[val' → logprob: -17.375043869018555
    8. '               ' → logprob: -17.875043869018555
    9. '       ' → logprob: -18.000043869018555
    10. '.val' → logprob: -18.125043869018555

Token 2084: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0018316576024517417
    2. 'right' → logprob: -7.126831531524658
    3. 'ight' → logprob: -7.251831531524658
    4. 'val' → logprob: -9.001832008361816
    5. 'eft' → logprob: -9.126832008361816
    6. 'Right' → logprob: -10.126832008361816
    7. '_left' → logprob: -11.626832008361816
    8. '           ' → logprob: -11.876832008361816
    9. 'ft' → logprob: -12.126832008361816
    10. '
' → logprob: -12.126832008361816

Token 2085: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2015310525894165
    2. ':' → logprob: -2.201530933380127
    3. '               ' → logprob: -2.826530933380127
    4. ':return' → logprob: -4.701530933380127
    5. '):
' → logprob: -5.826530933380127
    6. '           ' → logprob: -8.201531410217285
    7. '):' → logprob: -8.951531410217285
    8. ' and' → logprob: -9.326531410217285
    9. ')' → logprob: -9.701531410217285
    10. '              ' → logprob: -10.826531410217285

Token 2086: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.500108141452074e-05
    2. 'return' → logprob: -10.500035285949707
    3. '                       ' → logprob: -12.750035285949707
    4. '                   ' → logprob: -12.875035285949707
    5. '           ' → logprob: -14.125035285949707
    6. '```' → logprob: -14.625035285949707
    7. '              ' → logprob: -15.500035285949707
    8. ' return' → logprob: -15.750035285949707
    9. ':
' → logprob: -16.25003433227539
    10. ':return' → logprob: -16.62503433227539

Token 2087: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06981948763132095
    2. 'return' (adapté à ' return') → logprob: -3.069819450378418
    3. 'non' → logprob: -4.569819450378418
    4. '               ' → logprob: -5.069819450378418
    5. '                       ' → logprob: -6.694819450378418
    6. '           ' → logprob: -6.694819450378418
    7. 'global' → logprob: -7.569819450378418
    8. '   ' → logprob: -8.069819450378418
    9. 'res' → logprob: -8.069819450378418
    10. ' non' → logprob: -8.819819450378418

Token 2088: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '           ' → logprob: -17.250003814697266
    5. '       ' → logprob: -17.250003814697266
    6. '
' → logprob: -18.125003814697266
    7. '+' → logprob: -18.750003814697266
    8. '               ' → logprob: -19.625003814697266
    9. '```' → logprob: -19.875003814697266
    10. '                   ' → logprob: -20.125003814697266

Token 2089: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -20.375
    4. '       ' → logprob: -22.125
    5. '           ' → logprob: -22.5
    6. '```' → logprob: -23.25
    7. '۱' → logprob: -23.75
    8. '+' → logprob: -23.875
    9. '
' → logprob: -24.375
    10. '#' → logprob: -24.375

Token 2090: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07913686335086823
    2. '           ' → logprob: -2.579136848449707
    3. '
' → logprob: -9.204136848449707
    4. '```' → logprob: -9.329136848449707
    5. 'return' → logprob: -10.329136848449707
    6. '               ' → logprob: -11.579136848449707
    7. '   ' → logprob: -12.329136848449707
    8. 'else' → logprob: -12.329136848449707
    9. '0' → logprob: -12.704136848449707
    10. ' return' → logprob: -14.454136848449707

Token 2091: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25200730562210083
    2. '           ' → logprob: -1.502007246017456
    3. '```' → logprob: -9.752007484436035
    4. '
' → logprob: -12.002007484436035
    5. 'else' → logprob: -12.377007484436035
    6. '               ' → logprob: -12.627007484436035
    7. 'return' → logprob: -12.877007484436035
    8. '   ' → logprob: -13.127007484436035
    9. '         ' → logprob: -15.252007484436035
    10. '0' → logprob: -15.377007484436035

Token 2092: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.05499910004437e-05
    2. '       ' → logprob: -9.625090599060059
    3. '
' → logprob: -11.375090599060059
    4. 'return' → logprob: -11.375090599060059
    5. '               ' → logprob: -13.875090599060059
    6. '0' → logprob: -15.375090599060059
    7. '          ' → logprob: -15.500090599060059
    8. 'else' (adapté à ' else') → logprob: -17.000089645385742
    9. '         ' → logprob: -17.000089645385742
    10. ' return' → logprob: -17.375089645385742

Token 2093: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000621653685811907
    2. ':
' → logprob: -8.000621795654297
    3. 'return' → logprob: -9.000621795654297
    4. ':return' → logprob: -9.750621795654297
    5. '0' → logprob: -10.000621795654297
    6. ':' → logprob: -10.625621795654297
    7. ' return' → logprob: -11.125621795654297
    8. '           ' → logprob: -11.750621795654297
    9. '                   ' → logprob: -12.500621795654297
    10. '   ' → logprob: -13.125621795654297

Token 2094: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1755976378917694
    2. '0' → logprob: -1.9255976676940918
    3. 'return' → logprob: -4.425597667694092
    4. '                   ' → logprob: -5.925597667694092
    5. ' return' → logprob: -8.550597190856934
    6. '                       ' → logprob: -8.675597190856934
    7. '           ' → logprob: -8.925597190856934
    8. '                ' → logprob: -10.800597190856934
    9. '              ' → logprob: -10.925597190856934
    10. ' ' → logprob: -11.050597190856934

Token 2095: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07908861339092255
    2. '               ' → logprob: -2.8290886878967285
    3. ' return' → logprob: -4.0790886878967285
    4. '                   ' → logprob: -9.95408821105957
    5. '           ' → logprob: -13.82908821105957
    6. '0' → logprob: -14.32908821105957
    7. '```' → logprob: -14.32908821105957
    8. '	return' → logprob: -14.45408821105957
    9. '{return' → logprob: -14.57908821105957
    10. ':return' → logprob: -14.57908821105957

Token 2096: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '           ' → logprob: -19.875
    4. '               ' → logprob: -21.0
    5. '                   ' → logprob: -21.75
    6. '
' → logprob: -21.875
    7. '۰' → logprob: -22.625
    8. '   ' → logprob: -23.0
    9. '                       ' → logprob: -24.0
    10. '```' → logprob: -24.25

Token 2097: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '           ' → logprob: -22.75
    4. '۰' → logprob: -23.0
    5. '
' → logprob: -23.875
    6. '   ' → logprob: -24.0
    7. '000' → logprob: -24.125
    8. '```' → logprob: -24.25
    9. '               ' → logprob: -24.375
    10. '00' → logprob: -24.75

Token 2098: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028541131177917123
    2. '
' → logprob: -8.625285148620605
    3. '           ' → logprob: -10.000285148620605
    4. '```' → logprob: -10.000285148620605
    5. '   ' → logprob: -11.625285148620605
    6. ')' → logprob: -13.625285148620605
    7. '        
' → logprob: -13.750285148620605
    8. 'return' → logprob: -14.375285148620605
    9. '               ' → logprob: -14.375285148620605
    10. '\n' → logprob: -15.125285148620605

Token 2099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003364158037584275
    2. '
' → logprob: -8.250336647033691
    3. '```' → logprob: -9.625336647033691
    4. '   ' → logprob: -12.625336647033691
    5. '           ' → logprob: -12.875336647033691
    6. '        
' → logprob: -13.625336647033691
    7. 'return' → logprob: -14.625336647033691
    8. '
' → logprob: -14.750336647033691
    9. '``' → logprob: -15.750336647033691
    10. '    
' → logprob: -15.750336647033691

Token 2100: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004707565065473318
    2. '   ' → logprob: -5.504707336425781
    3. '           ' → logprob: -8.004707336425781
    4. '
' → logprob: -8.629707336425781
    5. 'else' → logprob: -10.379707336425781
    6. '```' → logprob: -10.504707336425781
    7. 'return' → logprob: -11.004707336425781
    8. '     ' → logprob: -11.629707336425781
    9. '	' → logprob: -12.254707336425781
    10. 'def' → logprob: -12.379707336425781

Token 2101: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -0.28990963101387024
    2. ' Parse' → logprob: -1.5399096012115479
    3. '(Parse' → logprob: -3.289909601211548
    4. 'Parser' → logprob: -12.414909362792969
    5. '_Parse' → logprob: -12.789909362792969
    6. '   ' → logprob: -13.789909362792969
    7. '(' → logprob: -14.164909362792969
    8. '_parse' → logprob: -14.164909362792969
    9. '
' → logprob: -14.414909362792969
    10. 'Parsing' → logprob: -14.789909362792969

Token 2102: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.696889623621246e-06
    2. 'rror' → logprob: -13.00000286102295
    3. '
' → logprob: -15.50000286102295
    4. '#' → logprob: -17.000001907348633
    5. 'error' → logprob: -17.125001907348633
    6. 'Exception' → logprob: -17.250001907348633
    7. 'Erro' → logprob: -17.250001907348633
    8. 'Parse' → logprob: -17.875001907348633
    9. 'Err' → logprob: -18.375001907348633
    10. '(Error' → logprob: -18.625001907348633

Token 2103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21333101391792297
    2. ':
' → logprob: -2.0883309841156006
    3. '           ' → logprob: -4.08833122253418
    4. '(' → logprob: -4.21333122253418
    5. '():' → logprob: -4.33833122253418
    6. ' as' → logprob: -4.33833122253418
    7. '():
' → logprob: -5.46333122253418
    8. '       ' → logprob: -5.83833122253418
    9. 'as' → logprob: -6.83833122253418
    10. '()' → logprob: -7.08833122253418

Token 2104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008439337252639234
    2. '       ' → logprob: -7.1258440017700195
    3. 'return' → logprob: -10.50084400177002
    4. '```' → logprob: -12.62584400177002
    5. '               ' → logprob: -12.75084400177002
    6. '   ' → logprob: -13.25084400177002
    7. '	       ' → logprob: -13.62584400177002
    8. '		' → logprob: -13.87584400177002
    9. '0' → logprob: -14.87584400177002
    10. ' return' → logprob: -15.25084400177002

Token 2105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023355422541499138
    2. '           ' → logprob: -3.773355484008789
    3. ' return' → logprob: -9.273355484008789
    4. '       ' → logprob: -11.273355484008789
    5. '   ' → logprob: -13.398355484008789
    6. '	return' → logprob: -14.273355484008789
    7. 'pass' → logprob: -14.648355484008789
    8. '               ' → logprob: -14.773355484008789
    9. '```' → logprob: -16.52335548400879
    10. '		' → logprob: -16.64835548400879

Token 2106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -22.37501335144043
    4. '   ' → logprob: -22.50001335144043
    5. '000' → logprob: -23.00001335144043
    6. '           ' → logprob: -23.25001335144043
    7. '
' → logprob: -23.50001335144043
    8. '00' → logprob: -23.75001335144043
    9. 'False' → logprob: -24.75001335144043
    10. '       ' → logprob: -25.12501335144043

Token 2107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -20.75
    4. '           ' → logprob: -22.25
    5. '۰' → logprob: -22.75
    6. '       ' → logprob: -23.0
    7. 'False' → logprob: -23.25
    8. '000' → logprob: -23.375
    9. '00' → logprob: -23.875
    10. '
' → logprob: -24.5

Token 2108: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04236500337719917
    2. '
' → logprob: -3.792365074157715
    3. '       ' → logprob: -4.167365074157715
    4. '    
' → logprob: -6.292365074157715
    5. '```' → logprob: -6.917365074157715
    6. '        
' → logprob: -8.042365074157715
    7. 'def' → logprob: -9.542365074157715
    8. '  
' → logprob: -10.042365074157715
    9. '<|end|>' → logprob: -10.042365074157715
    10. '	' → logprob: -11.292365074157715

Token 2109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0050483872182667255
    2. 'def' → logprob: -5.6300482749938965
    3. '```' → logprob: -6.6300482749938965
    4. '
' → logprob: -9.005048751831055
    5. '    
' → logprob: -13.130048751831055
    6. ' def' → logprob: -13.755048751831055
    7. '``' → logprob: -14.630048751831055
    8. '#' → logprob: -15.005048751831055
    9. '       ' → logprob: -15.880048751831055
    10. '`' → logprob: -16.505048751831055

Token 2110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04860859736800194
    2. '   ' → logprob: -3.0486085414886475
    3. ' def' → logprob: -11.048608779907227
    4. '
' → logprob: -12.298608779907227
    5. '    
' → logprob: -15.048608779907227
    6. '```' → logprob: -15.173608779907227
    7. '	def' → logprob: -16.298608779907227
    8. '#' → logprob: -18.048608779907227
    9. 'if' → logprob: -18.173608779907227
    10. '`' → logprob: -18.673608779907227

Token 2111: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.062304094433784485
    2. ' dfs' → logprob: -2.8123040199279785
    3. 'back' → logprob: -8.187304496765137
    4. ' back' → logprob: -10.437304496765137
    5. 'search' → logprob: -10.687304496765137
    6. 'solve' → logprob: -12.687304496765137
    7. 'd' → logprob: -14.062304496765137
    8. 'df' → logprob: -14.187304496765137
    9. 'DFS' → logprob: -15.062304496765137
    10. ' search' → logprob: -15.187304496765137

Token 2112: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3395359516143799
    2. '(idx' → logprob: -1.7145359516143799
    3. '(pos' → logprob: -2.96453595161438
    4. '(depth' → logprob: -3.33953595161438
    5. '(index' → logprob: -3.96453595161438
    6. '(level' → logprob: -7.339535713195801
    7. '(ind' → logprob: -7.714535713195801
    8. '(d' → logprob: -8.3395357131958
    9. '(' → logprob: -8.4645357131958
    10. '(k' → logprob: -9.5895357131958

Token 2113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3522506654262543
    2. '(i' → logprob: -1.4772506952285767
    3. '(l' → logprob: -3.727250576019287
    4. '(letter' → logprob: -3.852250576019287
    5. '):
' → logprob: -4.727250576019287
    6. '   ' → logprob: -5.352250576019287
    7. '):' → logprob: -5.602250576019287
    8. ',l' → logprob: -6.227250576019287
    9. ',i' → logprob: -6.727250576019287
    10. '(idx' → logprob: -8.102251052856445

Token 2114: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.041015446186065674
    2. ' assigned' → logprob: -3.541015386581421
    3. '):
' → logprob: -5.166015625
    4. 'used' → logprob: -5.791015625
    5. '   ' → logprob: -7.041015625
    6. '):' → logprob: -8.291015625
    7. ')' → logprob: -8.416015625
    8. 'chosen' → logprob: -8.791015625
    9. 'assignment' → logprob: -8.916015625
    10. 'mapping' → logprob: -9.291015625

Token 2115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005215974524617195
    2. '):' → logprob: -5.505216121673584
    3. ',l' → logprob: -7.005216121673584
    4. ' ,' → logprob: -9.505215644836426
    5. '   ' → logprob: -10.130215644836426
    6. '):
' → logprob: -10.255215644836426
    7. ',key' → logprob: -10.880215644836426
    8. ',i' → logprob: -11.755215644836426
    9. ',k' → logprob: -12.005215644836426
    10. '       ' → logprob: -12.255215644836426

Token 2116: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.012521898373961449
    2. ' used' → logprob: -4.387521743774414
    3. '   ' → logprob: -11.887521743774414
    4. '
' → logprob: -12.762521743774414
    5. ' ' → logprob: -14.512521743774414
    6. '_used' → logprob: -14.637521743774414
    7. '    
' → logprob: -14.887521743774414
    8. '.used' → logprob: -15.512521743774414
    9. '       ' → logprob: -15.637521743774414
    10. 'visited' → logprob: -15.887521743774414

Token 2117: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9504606825648807e-05
    2. 'chars' → logprob: -11.125019073486328
    3. '
' → logprob: -12.875019073486328
    4. '```' → logprob: -14.125019073486328
    5. 'Chars' → logprob: -14.625019073486328
    6. ')' → logprob: -14.875019073486328
    7. '):
' → logprob: -15.250019073486328
    8. '_orig' → logprob: -16.250019073486328
    9. '_char' → logprob: -16.625019073486328
    10. '=' → logprob: -17.375019073486328

Token 2118: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06200980395078659
    2. '):' → logprob: -2.812009811401367
    3. '):
' → logprob: -10.312009811401367
    4. '   ' → logprob: -12.687009811401367
    5. '):

' → logprob: -12.687009811401367
    6. ',' → logprob: -13.437009811401367
    7. ')' → logprob: -15.062009811401367
    8. ' ):
' → logprob: -15.062009811401367
    9. '       ' → logprob: -15.312009811401367
    10. ' ):' → logprob: -16.687009811401367

Token 2119: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00905921682715416
    2. '       ' → logprob: -5.009059429168701
    3. ' if' → logprob: -6.634059429168701
    4. '```' → logprob: -8.134058952331543
    5. ':' → logprob: -8.634058952331543
    6. 'if' → logprob: -9.009058952331543
    7. '   ' → logprob: -9.634058952331543
    8. '    
' → logprob: -9.634058952331543
    9. '):
' → logprob: -9.759058952331543
    10. ':
' → logprob: -10.009058952331543

Token 2120: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09376204013824463
    2. ' if' → logprob: -2.593761920928955
    3. '   ' → logprob: -4.468761920928955
    4. '       ' → logprob: -5.718761920928955
    5. '	if' → logprob: -11.718762397766113
    6. 'ch' → logprob: -12.093762397766113
    7. '```' → logprob: -13.468762397766113
    8. ' ' → logprob: -15.093762397766113
    9. 'tokens' → logprob: -15.468762397766113
    10. 'for' → logprob: -15.468762397766113

Token 2121: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.003719199914485216
    2. 'empty' → logprob: -6.753719329833984
    3. 'space' → logprob: -7.378719329833984
    4. 'def' → logprob: -7.378719329833984
    5. 'i' → logprob: -8.753719329833984
    6. 'locals' → logprob: -8.753719329833984
    7. 'None' → logprob: -9.253719329833984
    8. 'e' → logprob: -9.253719329833984
    9. 'l' → logprob: -9.378719329833984
    10. '_empty' → logprob: -9.628719329833984

Token 2122: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1472419600977446e-06
    2. ' res' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.500001907348633
    5. 'dfs' → logprob: -18.500001907348633
    6. '
' → logprob: -18.625001907348633
    7. '0' → logprob: -19.500001907348633
    8. '_res' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.500001907348633
    10. '	res' → logprob: -20.625001907348633

Token 2123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00937376357614994
    2. '   ' → logprob: -5.134373664855957
    3. ',' → logprob: -6.884373664855957
    4. ':' → logprob: -7.134373664855957
    5. ':
' → logprob: -7.134373664855957
    6. '):
' → logprob: -8.259373664855957
    7. '
' → logprob: -8.759373664855957
    8. '<|end|>' → logprob: -9.009373664855957
    9. ' if' → logprob: -9.759373664855957
    10. '        
' → logprob: -10.134373664855957

Token 2124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646600306034088
    2. '       ' → logprob: -1.8896600008010864
    3. ' if' → logprob: -2.639660120010376
    4. 'if' → logprob: -5.139659881591797
    5. '	if' → logprob: -5.639659881591797
    6. '```' → logprob: -8.014659881591797
    7. '    
' → logprob: -9.639659881591797
    8. '    ' → logprob: -9.889659881591797
    9. '        
' → logprob: -10.514659881591797
    10. '   ' → logprob: -10.889659881591797

Token 2125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05639774724841118
    2. '   ' → logprob: -4.056397914886475
    3. 'ltr' → logprob: -4.056397914886475
    4. 'letter' → logprob: -4.681397914886475
    5. ' if' → logprob: -4.806397914886475
    6. 'ch' → logprob: -7.056397914886475
    7. 'l' → logprob: -7.056397914886475
    8. '```' → logprob: -7.931397914886475
    9. 'for' → logprob: -8.056397438049316
    10. '       ' → logprob: -8.681397438049316

Token 2126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018151935189962387
    2. ' i' → logprob: -4.018151760101318
    3. '   ' → logprob: -13.393152236938477
    4. ' ' → logprob: -15.643152236938477
    5. '       ' → logprob: -16.518152236938477
    6. '	i' → logprob: -16.768152236938477
    7. '```' → logprob: -16.893152236938477
    8. '
' → logprob: -17.018152236938477
    9. '  ' → logprob: -17.393152236938477
    10. '_i' → logprob: -17.518152236938477

Token 2127: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14380164444446564
    2. ' ==' → logprob: -2.018801689147949
    3. '>=' → logprob: -7.018801689147949
    4. ' >=' → logprob: -9.39380168914795
    5. '===' → logprob: -10.26880168914795
    6. '<|end|>' → logprob: -10.76880168914795
    7. '<len' → logprob: -10.89380168914795
    8. '<' → logprob: -11.14380168914795
    9. '=' → logprob: -11.51880168914795
    10. '==
' → logprob: -11.64380168914795

Token 2128: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.0948158382670954e-05
    2. 'len' → logprob: -11.000030517578125
    3. ' L' → logprob: -11.250030517578125
    4. '   ' → logprob: -14.875030517578125
    5. '
' → logprob: -15.625030517578125
    6. '       ' → logprob: -15.875030517578125
    7. '```' → logprob: -16.250030517578125
    8. 'Len' → logprob: -16.875030517578125
    9. 'length' → logprob: -17.125030517578125
    10. '(L' → logprob: -17.125030517578125

Token 2129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3139212131500244
    2. ':
' → logprob: -1.3139212131500244
    3. '       ' → logprob: -7.563920974731445
    4. '           ' → logprob: -9.813920974731445
    5. '{' → logprob: -10.813920974731445
    6. '):
' → logprob: -11.063920974731445
    7. ':return' → logprob: -11.188920974731445
    8. '   ' → logprob: -11.438920974731445
    9. '):' → logprob: -11.438920974731445
    10. '{
' → logprob: -12.938920974731445

Token 2130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4846416711807251
    2. '       ' → logprob: -0.9846416711807251
    3. 'if' → logprob: -5.9846415519714355
    4. ':
' → logprob: -6.2346415519714355
    5. '{
' → logprob: -6.4846415519714355
    6. '{' → logprob: -6.9846415519714355
    7. '   ' → logprob: -6.9846415519714355
    8. ':' → logprob: -7.2346415519714355
    9. ' if' → logprob: -7.3596415519714355
    10. 'for' → logprob: -7.7346415519714355

Token 2131: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.013538522645831108
    2. 'if' → logprob: -4.763538360595703
    3. '       ' → logprob: -6.013538360595703
    4. '           ' → logprob: -6.013538360595703
    5. '               ' → logprob: -12.263538360595703
    6. ' res' → logprob: -12.388538360595703
    7. 'non' → logprob: -12.763538360595703
    8. 'return' → logprob: -13.013538360595703
    9. 'count' → logprob: -13.263538360595703
    10. ' if' → logprob: -14.138538360595703

Token 2132: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024783893022686243
    2. ' +=' → logprob: -6.00247859954834
    3. '+=(' → logprob: -13.50247859954834
    4. ']+=' → logprob: -14.75247859954834
    5. '+' → logprob: -15.37747859954834
    6. '   ' → logprob: -15.37747859954834
    7. '       ' → logprob: -15.50247859954834
    8. '+="' → logprob: -15.87747859954834
    9. '=' → logprob: -16.502477645874023
    10. '+='' → logprob: -16.877477645874023

Token 2133: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -4.320199877838604e-07
    2. ' check' → logprob: -14.75
    3. '1' → logprob: -19.25
    4. '   ' → logprob: -20.75
    5. 'count' → logprob: -22.125
    6. '(check' → logprob: -22.375
    7. '	check' → logprob: -22.875
    8. '       ' → logprob: -23.75
    9. ' ' → logprob: -23.875
    10. '           ' → logprob: -24.0

Token 2134: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0013601169921457767
    2. 'and' → logprob: -6.876359939575195
    3. '_' → logprob: -8.876359939575195
    4. '()' → logprob: -9.376359939575195
    5. '(' → logprob: -10.626359939575195
    6. '```' → logprob: -11.001359939575195
    7. '+' → logprob: -11.876359939575195
    8. '_for' → logprob: -12.001359939575195
    9. 'And' → logprob: -12.001359939575195
    10. ' and' → logprob: -12.126359939575195

Token 2135: '_count' (ID: 7536)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9361264946837764e-07
    2. '_count' → logprob: -17.375
    3. '0' → logprob: -17.5
    4. '1' → logprob: -17.75
    5. ' count' → logprob: -18.625
    6. '
' → logprob: -18.875
    7. 'int' → logprob: -18.875
    8. 'add' → logprob: -19.0
    9. 'check' → logprob: -19.375
    10. 'assign' → logprob: -19.75

Token 2136: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008750165579840541
    2. '       ' → logprob: -7.500874996185303
    3. 'return' → logprob: -8.250875473022461
    4. '		' → logprob: -11.000875473022461
    5. ' return' → logprob: -11.000875473022461
    6. '   ' → logprob: -11.375875473022461
    7. '	return' → logprob: -12.125875473022461
    8. '<|end|>' → logprob: -12.625875473022461
    9. '               ' → logprob: -12.750875473022461
    10. '
' → logprob: -13.750875473022461

Token 2137: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03487229347229004
    2. '           ' → logprob: -3.40987229347229
    3. '   ' → logprob: -7.159872055053711
    4. 'return' → logprob: -8.284872055053711
    5. '
' → logprob: -9.034872055053711
    6. ' return' → logprob: -10.534872055053711
    7. '```' → logprob: -10.784872055053711
    8. '               ' → logprob: -12.034872055053711
    9. '        
' → logprob: -12.159872055053711
    10. '<|end|>' → logprob: -12.659872055053711

Token 2138: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001960393972694874
    2. 'return' (adapté à ' return') → logprob: -6.251960277557373
    3. '       ' → logprob: -10.376960754394531
    4. ' return' → logprob: -15.001960754394531
    5. '   ' → logprob: -15.251960754394531
    6. '		' → logprob: -16.62696075439453
    7. '               ' → logprob: -17.25196075439453
    8. '	return' → logprob: -18.50196075439453
    9. '          ' → logprob: -19.37696075439453
    10. '         ' → logprob: -19.62696075439453

Token 2139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.243137925863266
    2. 'for' → logprob: -1.6181379556655884
    3. '   ' → logprob: -4.868137836456299
    4. '```' → logprob: -5.618137836456299
    5. 'ch' → logprob: -5.868137836456299
    6. ' for' → logprob: -6.993137836456299
    7. 'ltr' → logprob: -6.993137836456299
    8. 'l' → logprob: -7.118137836456299
    9. 'letter' → logprob: -7.868137836456299
    10. '``' → logprob: -9.618138313293457

Token 2140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005114565137773752
    2. '   ' → logprob: -5.380114555358887
    3. '```' → logprob: -7.630114555358887
    4. 'for' → logprob: -13.130114555358887
    5. '``' → logprob: -13.255114555358887
    6. '
' → logprob: -13.380114555358887
    7. ' for' → logprob: -13.630114555358887
    8. '        
' → logprob: -14.005114555358887
    9. '           ' → logprob: -15.380114555358887
    10. '`' → logprob: -15.380114555358887

Token 2141: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37148454785346985
    2. 'letter' → logprob: -1.8714845180511475
    3. 'ltr' → logprob: -2.4964845180511475
    4. 'for' → logprob: -2.8714845180511475
    5. '```' → logprob: -4.746484756469727
    6. 'letters' → logprob: -5.746484756469727
    7. 'l' (adapté à ' l') → logprob: -5.871484756469727
    8. '       ' → logprob: -6.246484756469727
    9. ' for' → logprob: -8.746484756469727
    10. 'ch' → logprob: -8.871484756469727

Token 2142: 'tr' (ID: 371)
  Prédit: 'etter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.06527205556631088
    2. 'tr' → logprob: -2.815272092819214
    3. 'tter' → logprob: -6.565271854400635
    4. '=' → logprob: -7.690271854400635
    5. ' =' → logprob: -7.690271854400635
    6. 'ette' → logprob: -8.315272331237793
    7. 'et' → logprob: -8.440272331237793
    8. 'ter' → logprob: -8.940272331237793
    9. 'ett' → logprob: -8.940272331237793
    10. '   ' → logprob: -9.065272331237793

Token 2143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2351994663476944
    2. '=' → logprob: -1.6101994514465332
    3. '   ' → logprob: -4.985199451446533
    4. 'for' → logprob: -7.360199451446533
    5. ' for' → logprob: -7.485199451446533
    6. '       ' → logprob: -7.485199451446533
    7. ' in' → logprob: -7.610199451446533
    8. ' ' → logprob: -8.860199928283691
    9. '    ' → logprob: -8.985199928283691
    10. ',' → logprob: -9.110199928283691

Token 2144: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.0007102862582542002
    2. ' letters' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.750710487365723
    4. '       ' → logprob: -17.750709533691406
    5. 'Letters' → logprob: -17.875709533691406
    6. '_letters' → logprob: -18.250709533691406
    7. '```' → logprob: -18.250709533691406
    8. '           ' → logprob: -19.500709533691406
    9. '`' → logprob: -19.625709533691406
    10. 'letter' → logprob: -19.625709533691406

Token 2145: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.08171532303094864
    2. '[i' → logprob: -2.7067153453826904
    3. ' =' → logprob: -5.081715106964111
    4. '       ' → logprob: -6.456715106964111
    5. '[' → logprob: -6.581715106964111
    6. '```' → logprob: -7.831715106964111
    7. '[l' → logprob: -8.08171558380127
    8. '   ' → logprob: -8.08171558380127
    9. '=' → logprob: -8.33171558380127
    10. 'i' → logprob: -8.83171558380127

Token 2146: '[i' (ID: 1768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4341224431991577
    2. '       ' → logprob: -1.6841224431991577
    3. ' for' → logprob: -2.5591225624084473
    4. 'for' → logprob: -2.6841225624084473
    5. '        
' → logprob: -4.559122562408447
    6. '    
' → logprob: -6.184122562408447
    7. ',' → logprob: -6.684122562408447
    8. '<|end|>' → logprob: -6.684122562408447
    9. '<|end|>' → logprob: -6.934122562408447
    10. '
' → logprob: -7.184122562408447

Token 2147: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6588414907455444
    2. '       ' → logprob: -1.4088414907455444
    3. ')' → logprob: -1.5338414907455444
    4. '):
' → logprob: -4.283841609954834
    5. '
' → logprob: -6.283841609954834
    6. '   ' → logprob: -6.408841609954834
    7. '        
' → logprob: -6.533841609954834
    8. ',' → logprob: -6.908841609954834
    9. '<|end|>' → logprob: -6.908841609954834
    10. ':
' → logprob: -7.783841609954834

Token 2148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036978233605623245
    2. ' for' → logprob: -3.911978244781494
    3. 'for' → logprob: -4.286978244781494
    4. '   ' → logprob: -6.036978244781494
    5. '```' → logprob: -9.786977767944336
    6. 'possible' → logprob: -10.036977767944336
    7. '	for' → logprob: -10.661977767944336
    8. ' possible' → logprob: -10.786977767944336
    9. '        
' → logprob: -12.036977767944336
    10. '<|end|>' → logprob: -12.161977767944336

Token 2149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007279691286385059
    2. '       ' → logprob: -5.507279872894287
    3. ' for' → logprob: -5.757279872894287
    4. '   ' → logprob: -10.382279396057129
    5. '```' → logprob: -12.507279396057129
    6. '	for' → logprob: -13.507279396057129
    7. '``' → logprob: -16.257280349731445
    8. '#' → logprob: -16.632280349731445
    9. ' ' → logprob: -16.882280349731445
    10. 'possible' → logprob: -17.007280349731445

Token 2150: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3688485324382782
    2. 'ch' → logprob: -1.6188485622406006
    3. 'orig' → logprob: -2.4938485622406006
    4. 'cand' → logprob: -3.7438485622406006
    5. 'oc' → logprob: -6.1188483238220215
    6. 'candidate' → logprob: -6.4938483238220215
    7. 'char' → logprob: -8.36884880065918
    8. ' orig' → logprob: -10.49384880065918
    9. 'choice' → logprob: -10.49384880065918
    10. 'orc' → logprob: -11.11884880065918

Token 2151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029751067981123924
    2. 'in' → logprob: -3.5297510623931885
    3. '	in' → logprob: -14.77975082397461
    4. ' ' → logprob: -15.77975082397461
    5. '  ' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.02975082397461
    7. '   ' → logprob: -18.02975082397461
    8. '_in' → logprob: -18.15475082397461
    9. 'n' → logprob: -18.90475082397461
    10. 'In' → logprob: -19.02975082397461

Token 2152: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -8.506661833962426e-05
    2. ' OR' → logprob: -9.37508487701416
    3. '_OR' → logprob: -16.125085830688477
    4. '   ' → logprob: -18.375085830688477
    5. '['' → logprob: -18.625085830688477
    6. 'range' → logprob: -18.750085830688477
    7. ' ' → logprob: -19.250085830688477
    8. '.OR' → logprob: -19.625085830688477
    9. '[' → logprob: -20.000085830688477
    10. 'ORS' → logprob: -20.375085830688477

Token 2153: 'IG' (ID: 3205)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.753376305103302
    2. 'IG' → logprob: -0.753376305103302
    3. 'CH' → logprob: -3.0033762454986572
    4. 'orig' → logprob: -5.753376483917236
    5. '_OR' → logprob: -6.378376483917236
    6. '_CH' → logprob: -6.503376483917236
    7. '_orig' → logprob: -6.878376483917236
    8. 'OG' → logprob: -7.628376483917236
    9. 'c' → logprob: -8.753376007080078
    10. 'C' → logprob: -9.378376007080078

Token 2154: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -1.0087516784551553e-05
    2. '_CHAR' → logprob: -12.50001049041748
    3. 'CH' → logprob: -13.00001049041748
    4. '_C' → logprob: -13.25001049041748
    5. ' CH' → logprob: -14.37501049041748
    6. ''_' → logprob: -14.75001049041748
    7. '```' → logprob: -15.00001049041748
    8. ' _' → logprob: -15.75001049041748
    9. '_chars' → logprob: -15.87501049041748
    10. '_' → logprob: -16.375009536743164

Token 2155: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.6684544086456299
    2. '_CH' → logprob: -0.7934544086456299
    3. 'CH' → logprob: -3.54345440864563
    4. 'AR' → logprob: -5.418454170227051
    5. 'S' → logprob: -7.168454170227051
    6. '```' → logprob: -7.918454170227051
    7. '#' → logprob: -9.16845417022705
    8. '_AR' → logprob: -9.16845417022705
    9. '\' → logprob: -9.29345417022705
    10. '`' → logprob: -9.66845417022705

Token 2156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3651694059371948
    2. ':
' → logprob: -1.2401694059371948
    3. '<|end|>' → logprob: -4.990169525146484
    4. '           ' → logprob: -5.115169525146484
    5. '       ' → logprob: -6.865169525146484
    6. '<|end|>' → logprob: -7.490169525146484
    7. '[' → logprob: -7.865169525146484
    8. ' if' → logprob: -8.240169525146484
    9. ' in' → logprob: -8.365169525146484
    10. '[::-' → logprob: -8.865169525146484

Token 2157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002023212378844619
    2. ':
' → logprob: -7.502023220062256
    3. ' if' → logprob: -7.627023220062256
    4. ':' → logprob: -8.252022743225098
    5. '       ' → logprob: -8.502022743225098
    6. '	       ' → logprob: -9.002022743225098
    7. '<|end|>' → logprob: -9.002022743225098
    8. '               ' → logprob: -10.127022743225098
    9. '          ' → logprob: -10.252022743225098
    10. '		' → logprob: -10.252022743225098

Token 2158: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6626229286193848
    2. 'if' (adapté à ' if') → logprob: -1.1626229286193848
    3. '           ' → logprob: -1.7876229286193848
    4. '               ' → logprob: -5.537622928619385
    5. '   ' → logprob: -7.912622928619385
    6. '	if' → logprob: -9.912622451782227
    7. '       ' → logprob: -10.162622451782227
    8. '```' → logprob: -10.412622451782227
    9. '          ' → logprob: -11.412622451782227
    10. ' ' → logprob: -11.412622451782227

Token 2159: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005236479919403791
    2. ' c' → logprob: -5.255236625671387
    3. '           ' → logprob: -13.505236625671387
    4. 'not' → logprob: -14.130236625671387
    5. ' not' → logprob: -14.755236625671387
    6. ')c' → logprob: -16.63023567199707
    7. '   ' → logprob: -17.25523567199707
    8. '               ' → logprob: -17.63023567199707
    9. '                   ' → logprob: -17.75523567199707
    10. '	c' → logprob: -18.00523567199707

Token 2160: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17991730570793152
    2. 'not' → logprob: -1.804917335510254
    3. ' !=' → logprob: -9.304917335510254
    4. '!=' → logprob: -10.304917335510254
    5. ' in' → logprob: -10.554917335510254
    6. 'in' → logprob: -11.304917335510254
    7. ')' → logprob: -12.679917335510254
    8. '_not' → logprob: -13.179917335510254
    9. '!='' → logprob: -13.304917335510254
    10. '```' → logprob: -14.804917335510254

Token 2161: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.547789674485102e-05
    2. ' used' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.625036239624023
    4. '.used' → logprob: -19.000036239624023
    5. 'assigned' → logprob: -19.500036239624023
    6. '_used' → logprob: -20.625036239624023
    7. '{' → logprob: -21.375036239624023
    8. 'use' → logprob: -21.750036239624023
    9. '
' → logprob: -21.875036239624023
    10. '```' → logprob: -21.875036239624023

Token 2162: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9361264946837764e-07
    2. '_char' → logprob: -16.75
    3. 'chars' → logprob: -16.875
    4. '```' → logprob: -17.625
    5. 'Chars' → logprob: -18.125
    6. '
' → logprob: -19.0
    7. '_
' → logprob: -20.25
    8. '`' → logprob: -20.5
    9. '(chars' → logprob: -20.5
    10. '_' → logprob: -21.0

Token 2163: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.427433580160141
    2. ':' → logprob: -1.3024336099624634
    3. '               ' → logprob: -2.677433490753174
    4. ' and' → logprob: -6.052433490753174
    5. '<|end|>' → logprob: -6.302433490753174
    6. '           ' → logprob: -6.427433490753174
    7. 'and' → logprob: -7.802433490753174
    8. ':return' → logprob: -8.677433967590332
    9. '):
' → logprob: -8.802433967590332
    10. ' or' → logprob: -8.927433967590332

Token 2164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044520407915115356
    2. ':
' → logprob: -3.544520378112793
    3. ' and' → logprob: -4.419520378112793
    4. ':' → logprob: -6.294520378112793
    5. '           ' → logprob: -8.294520378112793
    6. 'and' → logprob: -8.794520378112793
    7. ',' → logprob: -9.794520378112793
    8. '<|end|>' → logprob: -10.169520378112793
    9. '                               ' → logprob: -10.294520378112793
    10. '):
' → logprob: -10.419520378112793

Token 2165: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5814914703369141
    2. '               ' → logprob: -0.8314914703369141
    3. ' continue' → logprob: -5.206491470336914
    4. '           ' → logprob: -10.456491470336914
    5. '	continue' → logprob: -11.456491470336914
    6. '```' → logprob: -12.206491470336914
    7. '_continue' → logprob: -12.456491470336914
    8. '   ' → logprob: -12.581491470336914
    9. '                   ' → logprob: -14.331491470336914
    10. '			' → logprob: -14.331491470336914

Token 2166: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002636006975080818
    2. '            
' → logprob: -8.875263214111328
    3. '
' → logprob: -10.000263214111328
    4. '               ' → logprob: -10.750263214111328
    5. '<|end|>' → logprob: -11.250263214111328
    6. '		' → logprob: -11.625263214111328
    7. '       ' → logprob: -11.750263214111328
    8. '   ' → logprob: -12.125263214111328
    9. ',' → logprob: -12.500263214111328
    10. '	       ' → logprob: -12.625263214111328

Token 2167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.751746746478602e-05
    2. '       ' → logprob: -10.62504768371582
    3. '<|end|>' → logprob: -11.62504768371582
    4. '               ' → logprob: -12.25004768371582
    5. '            
' → logprob: -13.12504768371582
    6. '          ' → logprob: -13.12504768371582
    7. '	       ' → logprob: -13.12504768371582
    8. '   ' → logprob: -13.75004768371582
    9. '```' → logprob: -14.50004768371582
    10. '<|end|>' → logprob: -15.00004768371582

Token 2168: ' #' (ID: 1069)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.21051903069019318
    2. '           ' → logprob: -1.7105190753936768
    3. 'if' → logprob: -4.710518836975098
    4. ' assigned' → logprob: -10.460518836975098
    5. '       ' → logprob: -10.710518836975098
    6. '   ' → logprob: -12.585518836975098
    7. '#' (adapté à ' #') → logprob: -12.710518836975098
    8. '               ' → logprob: -13.085518836975098
    9. 'assign' → logprob: -13.210518836975098
    10. ' if' → logprob: -13.835518836975098

Token 2169: ' assign' (ID: 14975)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.33911219239234924
    2. '           ' → logprob: -1.7141121625900269
    3. 'if' → logprob: -2.4641122817993164
    4. '#' → logprob: -3.8391122817993164
    5. '       ' → logprob: -7.589112281799316
    6. '   ' → logprob: -8.714112281799316
    7. 'valid' → logprob: -10.214112281799316
    8. ' assigned' → logprob: -10.339112281799316
    9. 'assign' → logprob: -10.339112281799316
    10. 'new' → logprob: -11.089112281799316

Token 2170: '
' (ID: 198)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.038549408316612244
    2. '           ' → logprob: -3.2885494232177734
    3. ' assigned' → logprob: -7.663549423217773
    4. '               ' → logprob: -11.163549423217773
    5. '[' → logprob: -11.413549423217773
    6. '   ' → logprob: -12.538549423217773
    7. 'ltr' → logprob: -12.538549423217773
    8. '       ' → logprob: -12.788549423217773
    9. '            
' → logprob: -14.038549423217773
    10. '[l' → logprob: -14.288549423217773

Token 2171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.651664137840271
    2. 'assigned' → logprob: -0.776664137840271
    3. ' assigned' → logprob: -4.1516642570495605
    4. 'ltr' → logprob: -6.6516642570495605
    5. '               ' → logprob: -7.1516642570495605
    6. '[' → logprob: -8.026663780212402
    7. '[l' → logprob: -8.151663780212402
    8. '   ' → logprob: -8.401663780212402
    9. '       ' → logprob: -9.026663780212402
    10. '                   ' → logprob: -10.026663780212402

Token 2172: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' (adapté à ' assigned') → logprob: -0.005247514229267836
    2. '           ' → logprob: -5.255247592926025
    3. ' assigned' → logprob: -11.255247116088867
    4. '   ' → logprob: -14.755247116088867
    5. '       ' → logprob: -14.880247116088867
    6. '               ' → logprob: -16.755247116088867
    7. 'if' → logprob: -18.255247116088867
    8. 'allocated' → logprob: -18.755247116088867
    9. 'assign' → logprob: -19.130247116088867
    10. 'Assigned' → logprob: -19.505247116088867

Token 2173: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.1782583391759545e-05
    2. '[' → logprob: -10.375031471252441
    3. '```' → logprob: -15.000031471252441
    4. '\[' → logprob: -16.625032424926758
    5. '=l' → logprob: -17.625032424926758
    6. '   ' → logprob: -17.750032424926758
    7. ' [' → logprob: -18.250032424926758
    8. '[L' → logprob: -18.250032424926758
    9. ',l' → logprob: -19.000032424926758
    10. 'ltr' → logprob: -19.125032424926758

Token 2174: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.7954958821064793e-05
    2. 'rt' → logprob: -12.250018119812012
    3. '[' → logprob: -12.625018119812012
    4. 'r' → logprob: -12.875018119812012
    5. 'ltr' → logprob: -12.875018119812012
    6. '<tr' → logprob: -13.500018119812012
    7. '[l' → logprob: -14.625018119812012
    8. '   ' → logprob: -14.750018119812012
    9. 't' → logprob: -15.375018119812012
    10. '```' → logprob: -15.375018119812012

Token 2175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7388893365859985
    2. '=' → logprob: -0.9888893365859985
    3. ']=' → logprob: -2.363889217376709
    4. ' =' → logprob: -2.988889217376709
    5. '[c' → logprob: -5.613889217376709
    6. '[l' → logprob: -6.238889217376709
    7. '=c' → logprob: -8.863889694213867
    8. '   ' → logprob: -9.863889694213867
    9. ' ]' → logprob: -9.988889694213867
    10. '[' → logprob: -10.238889694213867

Token 2176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861132428050041
    2. ' =' → logprob: -3.0486114025115967
    3. '=c' → logprob: -10.673611640930176
    4. '='' → logprob: -14.548611640930176
    5. ']=' → logprob: -16.29861068725586
    6. ']' → logprob: -16.79861068725586
    7. ' ='' → logprob: -16.92361068725586
    8. '[c' → logprob: -16.92361068725586
    9. '=True' → logprob: -17.04861068725586
    10. '=
' → logprob: -17.42361068725586

Token 2177: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -14.75
    3. '	c' → logprob: -21.75
    4. '   ' → logprob: -22.5
    5. '           ' → logprob: -23.125
    6. ')c' → logprob: -23.125
    7. '```' → logprob: -24.75
    8. '$c' → logprob: -25.5
    9. '%c' → logprob: -25.5
    10. '       ' → logprob: -26.0

Token 2178: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.800739018013701e-05
    2. '
' → logprob: -10.3750581741333
    3. '<|end|>' → logprob: -11.6250581741333
    4. '       ' → logprob: -12.5000581741333
    5. '		' → logprob: -12.5000581741333
    6. 'dfs' → logprob: -12.8750581741333
    7. '   ' → logprob: -13.3750581741333
    8. 'd' → logprob: -13.6250581741333
    9. '```' → logprob: -14.0000581741333
    10. '               ' → logprob: -14.1250581741333

Token 2179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.061676347395405e-05
    2. '<|end|>' → logprob: -10.25005054473877
    3. '```' → logprob: -11.87505054473877
    4. '       ' → logprob: -12.87505054473877
    5. '<|end|>' → logprob: -13.00005054473877
    6. '
' → logprob: -13.75005054473877
    7. '            
' → logprob: -14.50005054473877
    8. '   ' → logprob: -14.50005054473877
    9. '               ' → logprob: -15.25005054473877
    10. '		' → logprob: -15.25005054473877

Token 2180: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.4244330823421478
    2. '           ' → logprob: -1.4244331121444702
    3. 'dfs' → logprob: -2.9244329929351807
    4. '       ' → logprob: -3.0494329929351807
    5. ' used' → logprob: -6.42443323135376
    6. '```' → logprob: -6.54943323135376
    7. '   ' → logprob: -7.17443323135376
    8. '``' → logprob: -9.424432754516602
    9. 'if' → logprob: -9.674432754516602
    10. ' dfs' → logprob: -9.924432754516602

Token 2181: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -3.128163257315464e-07
    2. 'chars' → logprob: -15.875
    3. 'Chars' → logprob: -16.375
    4. '_char' → logprob: -17.0
    5. '_' → logprob: -17.25
    6. '```' → logprob: -17.25
    7. '(chars' → logprob: -18.75
    8. '
' → logprob: -19.625
    9. '_coords' → logprob: -19.875
    10. 'char' → logprob: -20.125

Token 2182: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.849109119386412e-06
    2. '.' → logprob: -11.875009536743164
    3. 'add' → logprob: -13.000009536743164
    4. ' .' → logprob: -14.500009536743164
    5. '|' → logprob: -16.750009536743164
    6. '_add' → logprob: -18.500009536743164
    7. ' add' → logprob: -19.000009536743164
    8. '.Add' → logprob: -19.000009536743164
    9. ')add' → logprob: -19.000009536743164
    10. '	add' → logprob: -19.250009536743164

Token 2183: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.1160349458805285e-05
    2. 'c' → logprob: -12.000011444091797
    3. '(' → logprob: -12.250011444091797
    4. ' c' → logprob: -16.125011444091797
    5. '(
' → logprob: -17.125011444091797
    6. ' (' → logprob: -17.125011444091797
    7. '('' → logprob: -18.125011444091797
    8. '	c' → logprob: -18.625011444091797
    9. ')c' → logprob: -19.625011444091797
    10. '```' → logprob: -20.250011444091797

Token 2184: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042764510959386826
    2. ')' → logprob: -3.29276442527771
    3. ')
' → logprob: -5.417764663696289
    4. '<|end|>' → logprob: -9.417764663696289
    5. '<|end|>' → logprob: -9.667764663696289
    6. ',' → logprob: -10.667764663696289
    7. '
' → logprob: -10.667764663696289
    8. '       ' → logprob: -10.917764663696289
    9. '):
' → logprob: -11.167764663696289
    10. '               ' → logprob: -11.417764663696289

Token 2185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013202552509028465
    2. '<|end|>' → logprob: -10.375131607055664
    3. '       ' → logprob: -10.500131607055664
    4. '
' → logprob: -10.500131607055664
    5. '```' → logprob: -11.125131607055664
    6. '<|end|>' → logprob: -11.625131607055664
    7. '            
' → logprob: -11.750131607055664
    8. '   ' → logprob: -12.750131607055664
    9. 'd' → logprob: -12.875131607055664
    10. 'dfs' → logprob: -13.375131607055664

Token 2186: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.2522466778755188
    2. '           ' → logprob: -1.502246618270874
    3. '       ' → logprob: -8.252246856689453
    4. ' dfs' → logprob: -10.002246856689453
    5. '   ' → logprob: -12.127246856689453
    6. 'df' → logprob: -12.627246856689453
    7. '          ' → logprob: -14.252246856689453
    8. '               ' → logprob: -14.252246856689453
    9. '```' → logprob: -14.752246856689453
    10. 'd' → logprob: -15.002246856689453

Token 2187: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.375000953674316
    3. '(' → logprob: -16.625
    4. '   ' → logprob: -17.75
    5. '(
' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. '       ' → logprob: -20.375
    8. ' (' → logprob: -20.375
    9. '           ' → logprob: -20.75
    10. '`' → logprob: -21.25

Token 2188: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024769625160843134
    2. ' +' → logprob: -6.002477169036865
    3. '1' → logprob: -13.877476692199707
    4. '+i' → logprob: -15.752476692199707
    5. '＋' → logprob: -16.877477645874023
    6. '   ' → logprob: -17.002477645874023
    7. '+
' → logprob: -17.252477645874023
    8. '```' → logprob: -17.877477645874023
    9. '()+' → logprob: -18.127477645874023
    10. '           ' → logprob: -18.502477645874023

Token 2189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012689977302215993
    2. 'i' → logprob: -9.000126838684082
    3. 'L' → logprob: -13.500126838684082
    4. '   ' → logprob: -14.250126838684082
    5. '```' → logprob: -14.875126838684082
    6. ' ' → logprob: -15.500126838684082
    7. '
' → logprob: -15.500126838684082
    8. '       ' → logprob: -15.500126838684082
    9. ',' → logprob: -15.750126838684082
    10. '+' → logprob: -15.875126838684082

Token 2190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.56364209135063e-05
    2. '           ' → logprob: -10.250065803527832
    3. '(' → logprob: -11.375065803527832
    4. ' ,' → logprob: -11.375065803527832
    5. 'assigned' → logprob: -13.125065803527832
    6. '```' → logprob: -13.125065803527832
    7. '   ' → logprob: -13.750065803527832
    8. ',i' → logprob: -15.000065803527832
    9. '(),' → logprob: -15.125065803527832
    10. ',
' → logprob: -15.375065803527832

Token 2191: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -4.978233846486546e-05
    2. 'used' → logprob: -10.500049591064453
    3. ' assigned' → logprob: -11.250049591064453
    4. '   ' → logprob: -12.500049591064453
    5. '           ' → logprob: -12.500049591064453
    6. '       ' → logprob: -14.250049591064453
    7. '     ' → logprob: -15.250049591064453
    8. '        ' → logprob: -15.625049591064453
    9. '         ' → logprob: -15.875049591064453
    10. '{' → logprob: -16.000049591064453

Token 2192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001519325451226905
    2. '           ' → logprob: -9.000151634216309
    3. ',
' → logprob: -11.375151634216309
    4. ' ,' → logprob: -12.125151634216309
    5. '   ' → logprob: -12.375151634216309
    6. '       ' → logprob: -12.750151634216309
    7. ',use' → logprob: -13.500151634216309
    8. '               ' → logprob: -14.125151634216309
    9. '          ' → logprob: -14.375151634216309
    10. '```' → logprob: -14.750151634216309

Token 2193: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -7.52919222577475e-05
    2. ' used' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. '       ' → logprob: -17.12507438659668
    5. '           ' → logprob: -17.75007438659668
    6. '
' → logprob: -18.50007438659668
    7. '     ' → logprob: -18.87507438659668
    8. ' ' → logprob: -19.00007438659668
    9. '    ' → logprob: -19.12507438659668
    10. '         ' → logprob: -19.75007438659668

Token 2194: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9361264946837764e-07
    2. 'chars' → logprob: -16.375
    3. 'Chars' → logprob: -16.75
    4. '```' → logprob: -18.0
    5. '_coords' → logprob: -18.25
    6. '
' → logprob: -18.25
    7. '(chars' → logprob: -19.0
    8. ' chars' → logprob: -19.0
    9. '\' → logprob: -19.375
    10. ')' → logprob: -19.375

Token 2195: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012097643688321114
    2. ')
' → logprob: -4.5120978355407715
    3. ')' → logprob: -6.8870978355407715
    4. '       ' → logprob: -11.637097358703613
    5. '               ' → logprob: -12.012097358703613
    6. ',' → logprob: -12.387097358703613
    7. '          ' → logprob: -12.387097358703613
    8. '```' → logprob: -13.887097358703613
    9. '                   ' → logprob: -14.512097358703613
    10. '
' → logprob: -14.512097358703613

Token 2196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -15.000000953674316
    3. 'used' → logprob: -15.250000953674316
    4. '       ' → logprob: -15.375000953674316
    5. '```' → logprob: -17.125
    6. ' used' → logprob: -18.125
    7. '               ' → logprob: -19.375
    8. '          ' → logprob: -19.625
    9. '         ' → logprob: -21.0
    10. '
' → logprob: -21.0

Token 2197: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -2.2007883671903983e-05
    2. '           ' → logprob: -10.750021934509277
    3. ' used' → logprob: -14.750021934509277
    4. 'assigned' → logprob: -16.250022888183594
    5. '   ' → logprob: -18.500022888183594
    6. '
' → logprob: -18.750022888183594
    7. '       ' → logprob: -19.375022888183594
    8. 'del' → logprob: -19.500022888183594
    9. 'Used' → logprob: -21.500022888183594
    10. '```' → logprob: -22.000022888183594

Token 2198: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9361264946837764e-07
    2. 'Chars' → logprob: -17.375
    3. 'chars' → logprob: -17.875
    4. '_char' → logprob: -18.125
    5. 's' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. '(chars' → logprob: -19.125
    8. '_coords' → logprob: -19.25
    9. '
' → logprob: -19.625
    10. 'ed' → logprob: -19.625

Token 2199: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -2.2723104848410003e-05
    2. '.dis' → logprob: -11.250022888183594
    3. '.' → logprob: -11.625022888183594
    4. 'remove' → logprob: -14.125022888183594
    5. '.Remove' → logprob: -18.500022888183594
    6. ' .' → logprob: -18.875022888183594
    7. '_remove' → logprob: -18.875022888183594
    8. '	remove' → logprob: -19.125022888183594
    9. '.add' → logprob: -19.375022888183594
    10. '.pop' → logprob: -20.625022888183594

Token 2200: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -15.25
    3. '(' → logprob: -18.0
    4. 'assigned' → logprob: -19.75
    5. '©' → logprob: -20.0
    6. '(
' → logprob: -20.125
    7. '```' → logprob: -20.5
    8. '   ' → logprob: -20.75
    9. '	c' → logprob: -21.0
    10. '       ' → logprob: -21.125

Token 2201: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32127001881599426
    2. ')
' → logprob: -1.3212699890136719
    3. ')' → logprob: -4.946269989013672
    4. ',' → logprob: -8.321269989013672
    5. '       ' → logprob: -8.446269989013672
    6. 'del' → logprob: -8.571269989013672
    7. 'assigned' → logprob: -9.321269989013672
    8. '               ' → logprob: -10.821269989013672
    9. '#' → logprob: -11.071269989013672
    10. ',l' → logprob: -11.196269989013672

Token 2202: '           ' (ID: 352)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.07967793941497803
    2. '           ' → logprob: -2.5796780586242676
    3. ' del' → logprob: -8.07967758178711
    4. 'assigned' → logprob: -8.20467758178711
    5. '```' → logprob: -8.57967758178711
    6. '	del' → logprob: -11.32967758178711
    7. '#' → logprob: -13.20467758178711
    8. '_del' → logprob: -14.20467758178711
    9. '``' → logprob: -14.95467758178711
    10. ' assigned' → logprob: -15.07967758178711

Token 2203: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.005703854374587536
    2. 'assigned' → logprob: -5.255703926086426
    3. '           ' → logprob: -7.755703926086426
    4. ' del' → logprob: -10.130703926086426
    5. '#' → logprob: -14.130703926086426
    6. '            
' → logprob: -15.255703926086426
    7. '
' → logprob: -15.255703926086426
    8. '	del' → logprob: -15.380703926086426
    9. '```' → logprob: -15.755703926086426
    10. ' assigned' → logprob: -16.00570297241211

Token 2204: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0015023599844425917
    2. ' assigned' → logprob: -6.501502513885498
    3. 'Assigned' → logprob: -20.626502990722656
    4. 'assign' → logprob: -21.501502990722656
    5. 'allocated' → logprob: -21.501502990722656
    6. 'ass' → logprob: -21.626502990722656
    7. '```' → logprob: -22.251502990722656
    8. 'assignment' → logprob: -22.626502990722656
    9. '[' → logprob: -23.001502990722656
    10. 'assing' → logprob: -23.126502990722656

Token 2205: '[l' (ID: 38286)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2206: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.009564830921590328
    2. 'ltr' → logprob: -5.0095648765563965
    3. '[l' → logprob: -6.5095648765563965
    4. 'r' → logprob: -7.7595648765563965
    5. 't' → logprob: -7.7595648765563965
    6. '[i' → logprob: -9.509564399719238
    7. 'rt' → logprob: -10.009564399719238
    8. '[' → logprob: -10.134564399719238
    9. '```' → logprob: -10.384564399719238
    10. 'i' → logprob: -10.384564399719238

Token 2207: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -4.0484450437361374e-05
    2. '<|end|>' → logprob: -10.750040054321289
    3. ']
' → logprob: -11.750040054321289
    4. '']' → logprob: -12.750040054321289
    5. ')' → logprob: -12.750040054321289
    6. '       ' → logprob: -13.125040054321289
    7. '<|end|>' → logprob: -14.250040054321289
    8. '])' → logprob: -14.750040054321289
    9. '"]' → logprob: -14.750040054321289
    10. ' ]' → logprob: -14.875040054321289

Token 2208: '   ' (ID: 271)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.1698533296585083
    2. '
' → logprob: -1.4198533296585083
    3. '   ' → logprob: -1.6698533296585083
    4. '```' → logprob: -2.1698532104492188
    5. '<|end|>' → logprob: -2.2948532104492188
    6. ')' → logprob: -3.4198532104492188
    7. 'if' → logprob: -5.794853210449219
    8. '``' → logprob: -6.419853210449219
    9. '    
' → logprob: -6.419853210449219
    10. '<|end|>' → logprob: -7.044853210449219

Token 2209: ' if' (ID: 538)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.06372725963592529
    2. 'if' (adapté à ' if') → logprob: -2.813727378845215
    3. '   ' → logprob: -7.188727378845215
    4. '```' → logprob: -7.313727378845215
    5. '
' → logprob: -8.063727378845215
    6. '    
' → logprob: -11.313727378845215
    7. 'def' → logprob: -12.813727378845215
    8. 'for' → logprob: -13.063727378845215
    9. 'df' → logprob: -13.563727378845215
    10. ' dfs' → logprob: -13.688727378845215

Token 2210: ' L' (ID: 451)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010867179371416569
    2. 'len' → logprob: -5.260867118835449
    3. 'letters' → logprob: -6.135867118835449
    4. 'not' → logprob: -7.135867118835449
    5. ' '='' → logprob: -7.135867118835449
    6. '__' → logprob: -7.135867118835449
    7. '('='' → logprob: -7.635867118835449
    8. 'any' → logprob: -8.88586711883545
    9. '"' → logprob: -9.26086711883545
    10. 'set' → logprob: -9.76086711883545

Token 2211: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.050879254937171936
    2. ' >' → logprob: -3.1758792400360107
    3. '==' → logprob: -5.42587947845459
    4. ' ==' → logprob: -6.42587947845459
    5. ':
' → logprob: -7.55087947845459
    6. ':' → logprob: -7.67587947845459
    7. '   ' → logprob: -8.55087947845459
    8. '<' → logprob: -8.67587947845459
    9. ' <' → logprob: -8.67587947845459
    10. ' !=' → logprob: -9.80087947845459

Token 2212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.62500286102295
    4. '1' → logprob: -16.125003814697266
    5. '```' → logprob: -16.375003814697266
    6. '>' → logprob: -16.875003814697266
    7. '       ' → logprob: -17.250003814697266
    8. '#' → logprob: -18.125003814697266
    9. '=' → logprob: -18.375003814697266
    10. '           ' → logprob: -18.875003814697266

Token 2213: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03360973671078682
    2. ':' → logprob: -3.658609628677368
    3. '   ' → logprob: -5.283609867095947
    4. ' and' → logprob: -6.533609867095947
    5. '):
' → logprob: -8.158609390258789
    6. '       ' → logprob: -8.533609390258789
    7. '():
' → logprob: -8.783609390258789
    8. 'and' → logprob: -10.658609390258789
    9. '=' → logprob: -10.783609390258789
    10. ':

' → logprob: -11.158609390258789

Token 2214: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006142667261883616
    2. '```' → logprob: -8.125614166259766
    3. 'if' → logprob: -8.250614166259766
    4. ' if' → logprob: -11.000614166259766
    5. '#' → logprob: -11.750614166259766
    6. '       ' → logprob: -11.875614166259766
    7. 'import' → logprob: -12.000614166259766
    8. 'print' → logprob: -12.250614166259766
    9. '``' → logprob: -12.250614166259766
    10. '
' → logprob: -13.125614166259766

Token 2215: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09200214594602585
    2. 'if' → logprob: -2.9670021533966064
    3. 'res' → logprob: -3.7170021533966064
    4. '   ' → logprob: -4.717001914978027
    5. '#' (adapté à ' #') → logprob: -6.467001914978027
    6. '
' → logprob: -7.092001914978027
    7. '{
' → logprob: -8.842001914978027
    8. '       ' → logprob: -8.842001914978027
    9. 'try' → logprob: -9.342001914978027
    10. '```' → logprob: -9.592001914978027

Token 2216: ' no' (ID: 860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5395388007164001
    2. 'print' → logprob: -0.9145388007164001
    3. 'res' → logprob: -5.039538860321045
    4. '#' → logprob: -5.164538860321045
    5. 'count' → logprob: -6.039538860321045
    6. 'result' → logprob: -7.289538860321045
    7. '   ' → logprob: -7.539538860321045
    8. 's' → logprob: -8.789538383483887
    9. 'cnt' → logprob: -8.914538383483887
    10. 'try' → logprob: -10.039538383483887

Token 2217: ' letters' (ID: 18151)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2964950501918793
    2. '=' → logprob: -2.171494960784912
    3. 'if' → logprob: -2.421494960784912
    4. '('='' → logprob: -3.421494960784912
    5. 'equal' → logprob: -4.796494960784912
    6. '"' → logprob: -5.796494960784912
    7. ''=' → logprob: -6.296494960784912
    8. 'import' → logprob: -6.546494960784912
    9. ' '='' → logprob: -6.671494960784912
    10. 'expr' → logprob: -6.796494960784912

Token 2218: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03273862227797508
    2. 'if' → logprob: -3.65773868560791
    3. ':
' → logprob: -5.90773868560791
    4. 'print' → logprob: -6.15773868560791
    5. '       ' → logprob: -8.15773868560791
    6. 'res' → logprob: -8.28273868560791
    7. '#' → logprob: -8.40773868560791
    8. ' if' → logprob: -8.53273868560791
    9. '
' → logprob: -8.90773868560791
    10. 'else' → logprob: -9.03273868560791

Token 2219: ' just' (ID: 1327)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3702259361743927
    2. 'if' → logprob: -1.3702259063720703
    3. '#' → logprob: -3.4952259063720703
    4. '   ' → logprob: -4.37022590637207
    5. 'res' → logprob: -4.99522590637207
    6. 'try' → logprob: -5.87022590637207
    7. 'count' → logprob: -6.87022590637207
    8. '       ' → logprob: -7.24522590637207
    9. 'result' → logprob: -7.49522590637207
    10. 'cnt' → logprob: -8.49522590637207

Token 2220: ' try' (ID: 2075)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.427175372838974
    2. '#' → logprob: -2.302175283432007
    3. 'try' → logprob: -2.302175283432007
    4. '
' → logprob: -3.052175283432007
    5. 'if' → logprob: -3.177175283432007
    6. 's' → logprob: -3.677175283432007
    7. 'res' → logprob: -4.427175521850586
    8. 'expr' → logprob: -4.927175521850586
    9. '   ' → logprob: -5.052175521850586
    10. 'count' → logprob: -6.052175521850586

Token 2221: ' parsing' (ID: 51039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4726807475090027
    2. '   ' → logprob: -1.8476808071136475
    3. '
' → logprob: -2.9726808071136475
    4. 'if' → logprob: -3.0976808071136475
    5. 'try' → logprob: -3.3476808071136475
    6. '       ' → logprob: -3.3476808071136475
    7. 'res' → logprob: -3.8476808071136475
    8. 'count' → logprob: -4.472680568695068
    9. '```' → logprob: -4.722680568695068
    10. ':
' → logprob: -5.347680568695068

Token 2222: ' literal' (ID: 41271)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.2625519335269928
    2. '   ' → logprob: -1.5125519037246704
    3. 'if' → logprob: -5.262551784515381
    4. '       ' → logprob: -5.762551784515381
    5. '```' → logprob: -6.762551784515381
    6. '
' → logprob: -8.012552261352539
    7. '{
' → logprob: -8.262552261352539
    8. '=' → logprob: -9.012552261352539
    9. 'and' → logprob: -9.512552261352539
    10. 'count' → logprob: -10.137552261352539

Token 2223: ' expression' (ID: 12973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.120160311460495
    2. 'try' → logprob: -2.6201603412628174
    3. '       ' → logprob: -3.4951603412628174
    4. '```' → logprob: -5.745160102844238
    5. '
' → logprob: -6.245160102844238
    6. ':
' → logprob: -6.370160102844238
    7. 'if' → logprob: -6.620160102844238
    8. '{
' → logprob: -7.745160102844238
    9. '``' → logprob: -7.995160102844238
    10. ':' → logprob: -8.620160102844238

Token 2224: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028395498171448708
    2. '       ' → logprob: -3.903395414352417
    3. 'try' → logprob: -4.903395652770996
    4. '
' → logprob: -9.028395652770996
    5. ':
' → logprob: -9.403395652770996
    6. '```' → logprob: -9.653395652770996
    7. 'if' → logprob: -9.778395652770996
    8. ':' → logprob: -10.028395652770996
    9. '    
' → logprob: -12.028395652770996
    10. '{
' → logprob: -12.028395652770996

Token 2225: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0008460793760605156
    2. '-is' → logprob: -7.375845909118652
    3. 'original' → logprob: -9.625845909118652
    4. ' is' → logprob: -9.750845909118652
    5. 'expr' → logprob: -10.250845909118652
    6. 'try' → logprob: -10.625845909118652
    7. 'f' → logprob: -11.750845909118652
    8. 'it' → logprob: -12.000845909118652
    9. 'given' → logprob: -12.000845909118652
    10. 's' → logprob: -12.375845909118652

Token 2226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2982942461967468
    2. '   ' → logprob: -1.5482943058013916
    3. 'try' → logprob: -3.1732943058013916
    4. 'if' → logprob: -6.7982940673828125
    5. '```' → logprob: -6.7982940673828125
    6. '
' → logprob: -7.7982940673828125
    7. ':
' → logprob: -7.7982940673828125
    8. '{
' → logprob: -8.673294067382812
    9. ':' → logprob: -9.673294067382812
    10. '``' → logprob: -10.548294067382812

Token 2227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11947929859161377
    2. '   ' → logprob: -2.369479179382324
    3. 'try' → logprob: -3.994479179382324
    4. '```' → logprob: -7.619479179382324
    5. '{
' → logprob: -9.869479179382324
    6. 'if' → logprob: -10.494479179382324
    7. 'res' → logprob: -10.869479179382324
    8. 'result' → logprob: -11.119479179382324
    9. ' try' → logprob: -11.244479179382324
    10. '``' → logprob: -11.494479179382324

Token 2228: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.015353143215179443
    2. '   ' → logprob: -4.765353202819824
    3. '       ' → logprob: -5.890353202819824
    4. 'print' → logprob: -6.515353202819824
    5. 'if' → logprob: -6.890353202819824
    6. 'res' → logprob: -7.390353202819824
    7. '```' → logprob: -7.390353202819824
    8. '
' → logprob: -9.515353202819824
    9. '{
' → logprob: -9.765353202819824
    10. 'result' → logprob: -10.390353202819824

Token 2229: ' Check' (ID: 6208)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.731444239616394
    2. 'try' → logprob: -0.731444239616394
    3. 'res' → logprob: -4.231444358825684
    4. '   ' → logprob: -4.356444358825684
    5. 'if' → logprob: -5.231444358825684
    6. 'result' → logprob: -6.356444358825684
    7. 'count' → logprob: -6.481444358825684
    8. '       ' → logprob: -6.856444358825684
    9. 'val' → logprob: -8.481444358825684
    10. 'cnt' → logprob: -8.981444358825684

Token 2230: ' '='' (ID: 98780)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17337632179260254
    2. 'try' → logprob: -2.5483763217926025
    3. 'print' → logprob: -3.2983763217926025
    4. 's' → logprob: -4.423376083374023
    5. '   ' → logprob: -4.673376083374023
    6. 'expr' → logprob: -4.673376083374023
    7. 'count' → logprob: -5.298376083374023
    8. '
' → logprob: -5.673376083374023
    9. 'res' → logprob: -6.173376083374023
    10. '=' → logprob: -6.798376083374023

Token 2231: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17494875192642212
    2. 'in' → logprob: -2.6749486923217773
    3. ' in' → logprob: -3.0499486923217773
    4. '       ' → logprob: -4.299948692321777
    5. '   ' → logprob: -4.424948692321777
    6. 'count' → logprob: -4.549948692321777
    7. ' if' → logprob: -5.174948692321777
    8. '=' → logprob: -7.049948692321777
    9. 'not' → logprob: -7.424948692321777
    10. '
' → logprob: -8.299948692321777

Token 2232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16689246892929077
    2. 'if' → logprob: -2.2918925285339355
    3. '   ' → logprob: -3.2918925285339355
    4. '==' → logprob: -4.5418925285339355
    5. ' if' → logprob: -6.1668925285339355
    6. ' ==' → logprob: -7.0418925285339355
    7. '!=' → logprob: -7.1668925285339355
    8. '=' → logprob: -7.6668925285339355
    9. ' !=' → logprob: -9.166892051696777
    10. 'and' → logprob: -9.291892051696777

Token 2233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43838369846343994
    2. '!=' → logprob: -1.31338369846344
    3. '   ' → logprob: -2.9383835792541504
    4. 'if' → logprob: -4.56338357925415
    5. '()!=' → logprob: -4.56338357925415
    6. '```' → logprob: -5.31338357925415
    7. '==' → logprob: -5.56338357925415
    8. ' !=' → logprob: -6.06338357925415
    9. '()' → logprob: -8.188384056091309
    10. ')!=' → logprob: -8.438384056091309

Token 2234: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07952425628900528
    2. '       ' → logprob: -2.579524278640747
    3. '   ' → logprob: -7.579524040222168
    4. ' if' → logprob: -9.079524040222168
    5. '```' → logprob: -11.704524040222168
    6. '           ' → logprob: -15.079524040222168
    7. '	if' → logprob: -15.454524040222168
    8. 'count' → logprob: -16.329524993896484
    9. '{
' → logprob: -16.454524993896484
    10. '``' → logprob: -16.454524993896484

Token 2235: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.00887927133589983
    2. ''' → logprob: -4.7588791847229
    3. ' expr' → logprob: -8.633879661560059
    4. ''ex' → logprob: -10.383879661560059
    5. 'express' → logprob: -11.258879661560059
    6. '   ' → logprob: -11.508879661560059
    7. '(expr' → logprob: -11.508879661560059
    8. '=' → logprob: -12.258879661560059
    9. ''=' → logprob: -12.508879661560059
    10. '('='' → logprob: -12.758879661560059

Token 2236: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0006588232354260981
    2. '==' → logprob: -8.250658988952637
    3. '.' → logprob: -9.125658988952637
    4. '.find' → logprob: -9.500658988952637
    5. 'count' → logprob: -9.875658988952637
    6. '       ' → logprob: -10.000658988952637
    7. '```' → logprob: -10.125658988952637
    8. '   ' → logprob: -10.625658988952637
    9. '!=' → logprob: -11.000658988952637
    10. '.strip' → logprob: -11.750658988952637

Token 2237: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.003499811515212059
    2. ''' → logprob: -6.128499984741211
    3. ''=' → logprob: -6.878499984741211
    4. '('='' → logprob: -8.503499984741211
    5. '(' → logprob: -10.253499984741211
    6. '=' → logprob: -11.003499984741211
    7. '("="' → logprob: -11.128499984741211
    8. '
' → logprob: -12.628499984741211
    9. '1' → logprob: -12.878499984741211
    10. '`' → logprob: -13.878499984741211

Token 2238: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00031043673516251147
    2. ''=' → logprob: -8.125310897827148
    3. '='' → logprob: -11.500310897827148
    4. ''' → logprob: -13.375310897827148
    5. '=',' → logprob: -13.875310897827148
    6. '')' → logprob: -14.125310897827148
    7. '=
' → logprob: -14.750310897827148
    8. '=\'' → logprob: -15.500310897827148
    9. '1' → logprob: -15.750310897827148
    10. '=

' → logprob: -16.75031089782715

Token 2239: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5967344045639038
    2. '1' → logprob: -1.0967344045639038
    3. ')' → logprob: -2.3467345237731934
    4. '=' → logprob: -4.846734523773193
    5. ')==' → logprob: -4.971734523773193
    6. '==' → logprob: -5.346734523773193
    7. ''' → logprob: -9.096734046936035
    8. ')!=' → logprob: -10.971734046936035
    9. ')=' → logprob: -11.221734046936035
    10. '!=' → logprob: -11.721734046936035

Token 2240: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002847198164090514
    2. ' ==' → logprob: -6.002847194671631
    3. '!=' → logprob: -8.377847671508789
    4. ')==' → logprob: -9.127847671508789
    5. '()==' → logprob: -11.002847671508789
    6. '   ' → logprob: -12.752847671508789
    7. ']==' → logprob: -12.877847671508789
    8. ')' → logprob: -13.002847671508789
    9. ' !=' → logprob: -13.252847671508789
    10. '       ' → logprob: -13.252847671508789

Token 2241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.875000953674316
    3. 'exact' → logprob: -16.5
    4. ' ' → logprob: -17.25
    5. 'Exactly' → logprob: -17.625
    6. '   ' → logprob: -18.0
    7. '0' → logprob: -18.125
    8. '==' → logprob: -18.25
    9. '=' → logprob: -19.0
    10. '`' → logprob: -19.875

Token 2242: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38194236159324646
    2. ':' → logprob: -2.0069422721862793
    3. ' and' → logprob: -2.0069422721862793
    4. '       ' → logprob: -3.2569422721862793
    5. 'and' → logprob: -5.506942272186279
    6. '           ' → logprob: -5.506942272186279
    7. '):
' → logprob: -7.006942272186279
    8. '==' → logprob: -7.256942272186279
    9. '   ' → logprob: -9.006942749023438
    10. '):' → logprob: -9.381942749023438

Token 2243: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062285166233778
    2. ':
' → logprob: -3.1872851848602295
    3. ':' → logprob: -4.43728494644165
    4. '```' → logprob: -5.93728494644165
    5. '           ' → logprob: -6.06228494644165
    6. ' and' → logprob: -6.56228494644165
    7. '   ' → logprob: -8.187285423278809
    8. 'and' → logprob: -8.437285423278809
    9. 'try' → logprob: -8.562285423278809
    10. '):
' → logprob: -8.937285423278809

Token 2244: ' valid' (ID: 4529)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.0069318125024437904
    2. '       ' → logprob: -5.381931781768799
    3. '           ' → logprob: -6.256931781768799
    4. '   ' → logprob: -8.506932258605957
    5. '```' → logprob: -9.131932258605957
    6. 'print' → logprob: -10.506932258605957
    7. '               ' → logprob: -11.381932258605957
    8. '
' → logprob: -11.381932258605957
    9. '{
' → logprob: -11.631932258605957
    10. ' try' → logprob: -11.881932258605957

Token 2245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3936214447021484
    2. '           ' → logprob: -1.3936214447021484
    3. ' =' → logprob: -1.6436214447021484
    4. ':
' → logprob: -1.8936214447021484
    5. ' and' → logprob: -3.5186214447021484
    6. '       ' → logprob: -3.5186214447021484
    7. 'try' → logprob: -3.8936214447021484
    8. '=True' → logprob: -4.268621444702148
    9. '_parser' → logprob: -4.268621444702148
    10. '   ' → logprob: -4.393621444702148

Token 2246: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4710230529308319
    2. '1' → logprob: -1.7210230827331543
    3. 'False' → logprob: -2.5960230827331543
    4. '0' → logprob: -2.8460230827331543
    5. '(' → logprob: -4.471023082733154
    6. 'Parser' → logprob: -4.596023082733154
    7. 'Parse' → logprob: -4.596023082733154
    8. 'check' → logprob: -5.096023082733154
    9. '(True' → logprob: -5.096023082733154
    10. 'int' → logprob: -5.221023082733154

Token 2247: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.772903561592102
    2. 'True' → logprob: -1.647903561592102
    3. '0' → logprob: -2.0229034423828125
    4. 'check' → logprob: -2.5229034423828125
    5. '(' → logprob: -3.1479034423828125
    6. 'int' → logprob: -3.6479034423828125
    7. 'try' → logprob: -3.7729034423828125
    8. 'Parser' → logprob: -4.2729034423828125
    9. '(True' → logprob: -5.0229034423828125
    10. 'Parse' → logprob: -5.3979034423828125

Token 2248: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041512916795909405
    2. '       ' → logprob: -6.129151344299316
    3. 'try' → logprob: -6.504151344299316
    4. '   ' → logprob: -8.504151344299316
    5. ' =' → logprob: -9.504151344299316
    6. '
' → logprob: -9.879151344299316
    7. ' try' → logprob: -10.004151344299316
    8. '```' → logprob: -10.504151344299316
    9. ',' → logprob: -10.879151344299316
    10. '               ' → logprob: -11.129151344299316

Token 2249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009840729646384716
    2. 'try' → logprob: -5.259840965270996
    3. '       ' → logprob: -5.634840965270996
    4. '```' → logprob: -7.634840965270996
    5. '=' → logprob: -8.384840965270996
    6. '   ' → logprob: -9.134840965270996
    7. ' =' → logprob: -9.259840965270996
    8. '
' → logprob: -9.634840965270996
    9. ' try' → logprob: -11.259840965270996
    10. '               ' → logprob: -11.634840965270996

Token 2250: ' for' (ID: 395)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.1613769680261612
    2. '           ' → logprob: -1.911376953125
    3. '   ' → logprob: -7.161376953125
    4. '       ' → logprob: -8.411376953125
    5. '```' → logprob: -9.536376953125
    6. ' try' → logprob: -9.786376953125
    7. 'if' → logprob: -11.536376953125
    8. '
' → logprob: -11.786376953125
    9. '``' → logprob: -13.161376953125
    10. '               ' → logprob: -13.286376953125

Token 2251: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8892809748649597
    2. '_' → logprob: -2.0142810344696045
    3. '
' → logprob: -2.0142810344696045
    4. 'ch' → logprob: -2.3892810344696045
    5. '_parser' → logprob: -2.7642810344696045
    6. 'try' → logprob: -3.2642810344696045
    7. ' _' → logprob: -4.139280796051025
    8. '_parse' → logprob: -4.264280796051025
    9. ' ch' → logprob: -4.514280796051025
    10. ' c' → logprob: -4.639280796051025

Token 2252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14290271699428558
    2. 'in' → logprob: -2.0179026126861572
    3. '           ' → logprob: -9.892902374267578
    4. '	in' → logprob: -10.642902374267578
    5. '               ' → logprob: -11.142902374267578
    6. 'c' → logprob: -11.142902374267578
    7. ' ' → logprob: -11.517902374267578
    8. ')' → logprob: -11.517902374267578
    9. '_in' → logprob: -11.642902374267578
    10. ' c' → logprob: -11.767902374267578

Token 2253: ' expr' (ID: 30206)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.642493486404419
    2. 'range' → logprob: -1.767493486404419
    3. ''' → logprob: -2.392493486404419
    4. 'expr' → logprob: -2.642493486404419
    5. '['' → logprob: -3.517493486404419
    6. '"' → logprob: -3.767493486404419
    7. ' range' → logprob: -3.892493486404419
    8. 'OR' → logprob: -4.26749324798584
    9. '('' → logprob: -4.26749324798584
    10. 'try' → logprob: -4.51749324798584

Token 2254: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4935992956161499
    2. ':
' → logprob: -1.49359929561615
    3. 'in' → logprob: -2.1185994148254395
    4. ':' → logprob: -4.1185994148254395
    5. '               ' → logprob: -4.8685994148254395
    6. '           ' → logprob: -4.9935994148254395
    7. '):
' → logprob: -5.1185994148254395
    8. ')' → logprob: -5.6185994148254395
    9. '==' → logprob: -7.4935994148254395
    10. '):' → logprob: -7.6185994148254395

Token 2255: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003353328676894307
    2. ' in' → logprob: -7.128353118896484
    3. '           ' → logprob: -7.128353118896484
    4. ':
' → logprob: -7.878353118896484
    5. ':' → logprob: -8.003353118896484
    6. '<|end|>' → logprob: -8.128353118896484
    7. '	           ' → logprob: -8.378353118896484
    8. '       ' → logprob: -9.753353118896484
    9. 'in' → logprob: -9.753353118896484
    10. '		       ' → logprob: -9.753353118896484

Token 2256: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04745333269238472
    2. 'if' (adapté à ' if') → logprob: -3.1724534034729004
    3. ' if' → logprob: -5.5474534034729
    4. '           ' → logprob: -8.297452926635742
    5. ' in' → logprob: -9.547452926635742
    6. '#' → logprob: -10.047452926635742
    7. '       ' → logprob: -10.047452926635742
    8. '                   ' → logprob: -10.297452926635742
    9. '   ' → logprob: -11.047452926635742
    10. 'not' → logprob: -11.297452926635742

Token 2257: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00027134892297908664
    2. ' c' → logprob: -8.250271797180176
    3. 'not' → logprob: -12.125271797180176
    4. '   ' → logprob: -13.375271797180176
    5. '           ' → logprob: -14.250271797180176
    6. '               ' → logprob: -14.500271797180176
    7. ' not' → logprob: -15.000271797180176
    8. ' ' → logprob: -15.125271797180176
    9. '                   ' → logprob: -15.250271797180176
    10. '       ' → logprob: -15.375271797180176

Token 2258: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.38994383811950684
    2. 'not' → logprob: -1.1399438381195068
    3. ' in' → logprob: -6.139944076538086
    4. 'in' → logprob: -7.014944076538086
    5. ')' → logprob: -12.764944076538086
    6. 'if' → logprob: -12.764944076538086
    7. '```' → logprob: -13.014944076538086
    8. 'import' → logprob: -13.264944076538086
    9. '
' → logprob: -14.514944076538086
    10. 'c' → logprob: -14.514944076538086

Token 2259: ' in' (ID: 306)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.7484520673751831
    2. ' in' → logprob: -0.9984520673751831
    3. 'in' → logprob: -1.873452067375183
    4. ' OR' → logprob: -5.498452186584473
    5. 'IN' → logprob: -7.998452186584473
    6. '_OR' → logprob: -8.623452186584473
    7. ')' → logprob: -9.498452186584473
    8. 'ORS' → logprob: -10.623452186584473
    9. '('' → logprob: -10.748452186584473
    10. ''' → logprob: -10.748452186584473

Token 2260: ' OR' (ID: 4917)
  Prédit: 'OR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.00011129142512800172
    2. ' OR' → logprob: -9.12511157989502
    3. '{'' → logprob: -13.62511157989502
    4. ''' → logprob: -14.62511157989502
    5. '['' → logprob: -15.25011157989502
    6. '_OR' → logprob: -15.62511157989502
    7. 'set' → logprob: -15.75011157989502
    8. '('' → logprob: -16.125110626220703
    9. '   ' → logprob: -18.250110626220703
    10. '.OR' → logprob: -19.250110626220703

Token 2261: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.0002158146962756291
    2. 'CH' → logprob: -9.000215530395508
    3. '
' → logprob: -10.750215530395508
    4. 'OR' → logprob: -10.750215530395508
    5. 'ig' → logprob: -11.250215530395508
    6. 'orig' → logprob: -11.875215530395508
    7. '```' → logprob: -12.000215530395508
    8. '_CH' → logprob: -13.250215530395508
    9. '`' → logprob: -13.250215530395508
    10. 'C' → logprob: -13.375215530395508

Token 2262: '_CH' (ID: 13894)
  Prédit: '_CH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CH' → logprob: -4.2987729102605954e-05
    2. 'CH' → logprob: -10.125042915344238
    3. '_CHAR' → logprob: -13.625042915344238
    4. '```' → logprob: -14.500042915344238
    5. ' CH' → logprob: -14.875042915344238
    6. '_chars' → logprob: -15.500042915344238
    7. 'Chars' → logprob: -15.625042915344238
    8. '`' → logprob: -16.250043869018555
    9. '_C' → logprob: -16.875043869018555
    10. '\' → logprob: -16.875043869018555

Token 2263: 'ARS' (ID: 25776)
  Prédit: 'ARS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARS' → logprob: -0.0012872596271336079
    2. 'S' → logprob: -7.001287460327148
    3. 'AR' → logprob: -8.876287460327148
    4. 'RS' → logprob: -9.126287460327148
    5. 'ars' → logprob: -10.001287460327148
    6. '_' → logprob: -11.126287460327148
    7. '_chars' → logprob: -11.501287460327148
    8. '_CH' → logprob: -11.501287460327148
    9. '```' → logprob: -11.626287460327148
    10. 'AS' → logprob: -12.126287460327148

Token 2264: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23969736695289612
    2. ':
' → logprob: -1.6146973371505737
    3. ':' → logprob: -4.364697456359863
    4. ':return' → logprob: -7.739697456359863
    5. '                   ' → logprob: -8.364697456359863
    6. '                       ' → logprob: -8.364697456359863
    7. '):
' → logprob: -8.864697456359863
    8. '           ' → logprob: -9.739697456359863
    9. '=' → logprob: -10.114697456359863
    10. ' and' → logprob: -10.239697456359863

Token 2265: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008128581568598747
    2. ':
' → logprob: -5.508128643035889
    3. '                   ' → logprob: -6.258128643035889
    4. ':' → logprob: -6.633128643035889
    5. '           ' → logprob: -8.75812816619873
    6. '                       ' → logprob: -8.88312816619873
    7. ' and' → logprob: -9.38312816619873
    8. '                ' → logprob: -9.75812816619873
    9. '              ' → logprob: -9.75812816619873
    10. '   ' → logprob: -9.88312816619873

Token 2266: ' print' (ID: 2123)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4614550769329071
    2. 'break' → logprob: -1.4614551067352295
    3. 'print' (adapté à ' print') → logprob: -2.3364551067352295
    4. '                   ' → logprob: -3.3364551067352295
    5. '               ' → logprob: -5.46145486831665
    6. 'return' → logprob: -7.33645486831665
    7. 'invalid' → logprob: -8.586455345153809
    8. ' valid' → logprob: -9.336455345153809
    9. ' break' → logprob: -9.336455345153809
    10. '   ' → logprob: -9.711455345153809

Token 2267: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04307340830564499
    2. '(' → logprob: -3.1680734157562256
    3. '
' → logprob: -11.043073654174805
    4. '           ' → logprob: -11.293073654174805
    5. '("' → logprob: -11.543073654174805
    6. '   ' → logprob: -11.793073654174805
    7. 'return' → logprob: -12.418073654174805
    8. '('' → logprob: -12.543073654174805
    9. '       ' → logprob: -12.793073654174805
    10. '               ' → logprob: -12.918073654174805

Token 2268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. '"' → logprob: -11.375017166137695
    3. '   ' → logprob: -13.500017166137695
    4. '           ' → logprob: -14.125017166137695
    5. ')' → logprob: -14.250017166137695
    6. ''' → logprob: -14.500017166137695
    7. ' ' → logprob: -14.625017166137695
    8. '
' → logprob: -15.000017166137695
    9. '               ' → logprob: -15.000017166137695
    10. '       ' → logprob: -15.250017166137695

Token 2269: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007033142726868391
    2. ')
' → logprob: -5.257033348083496
    3. ')' → logprob: -6.757033348083496
    4. '                       ' → logprob: -7.632033348083496
    5. '
' → logprob: -9.757033348083496
    6. '               ' → logprob: -10.382033348083496
    7. '           ' → logprob: -11.257033348083496
    8. ')return' → logprob: -11.257033348083496
    9. ',' → logprob: -12.382033348083496
    10. ');' → logprob: -12.507033348083496

Token 2270: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00045962471631355584
    2. '                       ' → logprob: -7.750459671020508
    3. '               ' → logprob: -10.875459671020508
    4. ',' → logprob: -12.625459671020508
    5. '       ' → logprob: -13.250459671020508
    6. '           ' → logprob: -13.750459671020508
    7. '                    ' → logprob: -14.375459671020508
    8. '```' → logprob: -14.625459671020508
    9. '                           ' → logprob: -14.750459671020508
    10. '   ' → logprob: -14.875459671020508

Token 2271: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.2762428822461516e-05
    2. 'return' (adapté à ' return') → logprob: -10.000052452087402
    3. '                       ' → logprob: -12.625052452087402
    4. '               ' → logprob: -13.625052452087402
    5. '           ' → logprob: -14.000052452087402
    6. '
' → logprob: -14.375052452087402
    7. '                  ' → logprob: -15.625052452087402
    8. '   ' → logprob: -15.625052452087402
    9. '				' → logprob: -15.625052452087402
    10. '                           ' → logprob: -15.750052452087402

Token 2272: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006108078174293041
    2. '                   ' → logprob: -5.131108283996582
    3. '               ' → logprob: -9.631108283996582
    4. '
' → logprob: -9.881108283996582
    5. '       ' → logprob: -10.006108283996582
    6. '   ' → logprob: -11.506108283996582
    7. 'def' → logprob: -12.756108283996582
    8. 'import' → logprob: -13.131108283996582
    9. '```' → logprob: -14.256108283996582
    10. '                       ' → logprob: -14.881108283996582

Token 2273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019424250058364123
    2. '       ' → logprob: -9.000194549560547
    3. '               ' → logprob: -10.500194549560547
    4. '                   ' → logprob: -10.625194549560547
    5. '   ' → logprob: -11.625194549560547
    6. '
' → logprob: -12.000194549560547
    7. 'print' → logprob: -13.375194549560547
    8. '```' → logprob: -13.500194549560547
    9. 'def' → logprob: -14.625194549560547
    10. ' ' → logprob: -16.375194549560547

Token 2274: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4165562093257904
    2. '   ' → logprob: -1.9165562391281128
    3. 'try' (adapté à ' try') → logprob: -2.1665561199188232
    4. '       ' → logprob: -2.5415561199188232
    5. '
' → logprob: -8.791556358337402
    6. ' try' → logprob: -10.166556358337402
    7. 'def' → logprob: -10.541556358337402
    8. '               ' → logprob: -11.416556358337402
    9. '```' → logprob: -11.666556358337402
    10. 'parser' → logprob: -12.416556358337402

Token 2275: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25447404384613037
    2. ':' → logprob: -2.12947416305542
    3. '               ' → logprob: -2.50447416305542
    4. '           ' → logprob: -3.75447416305542
    5. '       ' → logprob: -8.504473686218262
    6. '):
' → logprob: -9.004473686218262
    7. '{
' → logprob: -9.504473686218262
    8. '```' → logprob: -9.629473686218262
    9. '{' → logprob: -9.879473686218262
    10. '                   ' → logprob: -10.379473686218262

Token 2276: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11913692206144333
    2. '           ' → logprob: -2.6191368103027344
    3. ':
' → logprob: -3.8691368103027344
    4. ':' → logprob: -4.119136810302734
    5. '       ' → logprob: -7.119136810302734
    6. '```' → logprob: -7.744136810302734
    7. '                   ' → logprob: -7.994136810302734
    8. '   ' → logprob: -8.369136810302734
    9. '              ' → logprob: -9.119136810302734
    10. '             ' → logprob: -9.619136810302734

Token 2277: ' parser' (ID: 14216)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7485851049423218
    2. '                   ' → logprob: -1.6235851049423218
    3. '               ' → logprob: -1.7485851049423218
    4. 'parser' (adapté à ' parser') → logprob: -1.9985851049423218
    5. ':' → logprob: -4.623585224151611
    6. '           ' → logprob: -4.998585224151611
    7. '   ' → logprob: -6.498585224151611
    8. '```' → logprob: -7.373585224151611
    9. '{
' → logprob: -7.873585224151611
    10. 'parse' → logprob: -7.998585224151611

Token 2278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4904327988624573
    2. ':
' → logprob: -1.1154327392578125
    3. ' =' → logprob: -3.3654327392578125
    4. ':' → logprob: -4.1154327392578125
    5. '               ' → logprob: -5.4904327392578125
    6. '                   ' → logprob: -6.1154327392578125
    7. '           ' → logprob: -6.2404327392578125
    8. '=
' → logprob: -7.6154327392578125
    9. '{
' → logprob: -9.615432739257812
    10. '   ' → logprob: -10.240432739257812

Token 2279: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -6.2729995988775045e-06
    2. ' Parser' → logprob: -12.000006675720215
    3. '.Parser' → logprob: -17.1250057220459
    4. 'Parse' → logprob: -17.2500057220459
    5. '(Parser' → logprob: -17.2500057220459
    6. '               ' → logprob: -18.5000057220459
    7. 'Parsing' → logprob: -18.8750057220459
    8. 'Parsed' → logprob: -20.3750057220459
    9. '_parser' → logprob: -20.8750057220459
    10. '                   ' → logprob: -20.8750057220459

Token 2280: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -4.0484450437361374e-05
    2. 'expr' → logprob: -10.125040054321289
    3. '(express' → logprob: -15.875040054321289
    4. '(' → logprob: -17.12504005432129
    5. '(eval' → logprob: -17.12504005432129
    6. ' expr' → logprob: -17.12504005432129
    7. '           ' → logprob: -17.12504005432129
    8. '(
' → logprob: -17.25004005432129
    9. '(exc' → logprob: -17.50004005432129
    10. '(EXPR' → logprob: -18.00004005432129

Token 2281: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005240514408797026
    2. ')' → logprob: -5.630240440368652
    3. '           ' → logprob: -6.630240440368652
    4. '               ' → logprob: -8.130240440368652
    5. '       ' → logprob: -11.880240440368652
    6. ')
' → logprob: -11.880240440368652
    7. '())
' → logprob: -12.380240440368652
    8. '                   ' → logprob: -12.505240440368652
    9. '   ' → logprob: -14.380240440368652
    10. ').' → logprob: -14.880240440368652

Token 2282: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000700045726262033
    2. '           ' → logprob: -7.375699996948242
    3. '                   ' → logprob: -10.375699996948242
    4. '```' → logprob: -11.625699996948242
    5. '<|end|>' → logprob: -11.875699996948242
    6. 'except' → logprob: -12.000699996948242
    7. '       ' → logprob: -12.125699996948242
    8. '              ' → logprob: -12.875699996948242
    9. '                
' → logprob: -13.000699996948242
    10. '	           ' → logprob: -13.500699996948242

Token 2283: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.02164655178785324
    2. '               ' → logprob: -4.146646499633789
    3. '           ' → logprob: -5.271646499633789
    4. 'print' → logprob: -9.146646499633789
    5. '(val' → logprob: -9.271646499633789
    6. ' val' → logprob: -9.521646499633789
    7. '
' → logprob: -10.146646499633789
    8. 'result' → logprob: -10.396646499633789
    9. 'res' → logprob: -10.771646499633789
    10. '       ' → logprob: -11.271646499633789

Token 2284: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.392824874026701e-05
    2. 'left' → logprob: -11.87503433227539
    3. ',' → logprob: -12.00003433227539
    4. '               ' → logprob: -12.12503433227539
    5. ',left' → logprob: -12.62503433227539
    6. '           ' → logprob: -12.75003433227539
    7. '=' → logprob: -13.25003433227539
    8. 'Left' → logprob: -13.37503433227539
    9. ' =' → logprob: -13.50003433227539
    10. '   ' → logprob: -13.87503433227539

Token 2285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02370450645685196
    2. ',val' → logprob: -3.7737045288085938
    3. '               ' → logprob: -8.523704528808594
    4. '==' → logprob: -8.523704528808594
    5. ',
' → logprob: -11.273704528808594
    6. '=' → logprob: -11.773704528808594
    7. '           ' → logprob: -11.773704528808594
    8. ' ,' → logprob: -11.898704528808594
    9. '                   ' → logprob: -12.148704528808594
    10. ')==' → logprob: -12.523704528808594

Token 2286: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2519300878047943
    2. ' val' → logprob: -1.5019301176071167
    3. '           ' → logprob: -14.626930236816406
    4. '               ' → logprob: -15.001930236816406
    5. '_val' → logprob: -16.751930236816406
    6. '	val' → logprob: -17.001930236816406
    7. '            ' → logprob: -17.001930236816406
    8. ',val' → logprob: -17.501930236816406
    9. '(val' → logprob: -18.001930236816406
    10. 'v' → logprob: -18.126930236816406

Token 2287: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -5.931863051955588e-05
    2. 'right' → logprob: -10.125059127807617
    3. 'Right' → logprob: -11.500059127807617
    4. '_left' → logprob: -12.375059127807617
    5. 'parser' → logprob: -13.750059127807617
    6. '   ' → logprob: -14.000059127807617
    7. '_RIGHT' → logprob: -14.125059127807617
    8. '=' → logprob: -14.500059127807617
    9. ' =' → logprob: -15.000059127807617
    10. '_parser' → logprob: -15.125059127807617

Token 2288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47446903586387634
    2. ' =' → logprob: -0.9744690656661987
    3. '               ' → logprob: -7.974469184875488
    4. '                   ' → logprob: -10.474469184875488
    5. '           ' → logprob: -11.849469184875488
    6. ')' → logprob: -12.349469184875488
    7. '==' → logprob: -12.474469184875488
    8. '```' → logprob: -13.849469184875488
    9. '   ' → logprob: -14.724469184875488
    10. '                ' → logprob: -14.974469184875488

Token 2289: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.03806949034333229
    2. ' parser' → logprob: -3.288069486618042
    3. '               ' → logprob: -10.663069725036621
    4. '(parser' → logprob: -12.788069725036621
    5. '           ' → logprob: -14.163069725036621
    6. '	parser' → logprob: -14.413069725036621
    7. '                   ' → logprob: -15.413069725036621
    8. '.parser' → logprob: -16.413068771362305
    9. 'parse' → logprob: -16.663068771362305
    10. '   ' → logprob: -17.038068771362305

Token 2290: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.8219583075260743e-05
    2. '           ' → logprob: -11.250038146972656
    3. 'parse' → logprob: -11.500038146972656
    4. '=parse' → logprob: -12.000038146972656
    5. '               ' → logprob: -12.375038146972656
    6. '.' → logprob: -13.625038146972656
    7. '   ' → logprob: -14.000038146972656
    8. '                   ' → logprob: -14.375038146972656
    9. ' =' → logprob: -14.625038146972656
    10. '       ' → logprob: -15.375038146972656

Token 2291: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.62500286102295
    3. '()
' → logprob: -14.25000286102295
    4. '```' → logprob: -14.75000286102295
    5. '())' → logprob: -16.750001907348633
    6. ')' → logprob: -16.750001907348633
    7. '(expr' → logprob: -17.000001907348633
    8. '
' → logprob: -17.000001907348633
    9. '0' → logprob: -17.125001907348633
    10. ' Q' → logprob: -17.250001907348633

Token 2292: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4360162317752838
    2. '()
' → logprob: -1.0610162019729614
    3. '               ' → logprob: -4.936016082763672
    4. '()
' → logprob: -10.061016082763672
    5. '           ' → logprob: -11.561016082763672
    6. '                   ' → logprob: -11.936016082763672
    7. '<|end|>' → logprob: -11.936016082763672
    8. '()

' → logprob: -12.061016082763672
    9. '())
' → logprob: -12.186016082763672
    10. '())' → logprob: -12.186016082763672

Token 2293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003234262694604695
    2. '           ' → logprob: -8.125323295593262
    3. 'except' → logprob: -10.875323295593262
    4. '                   ' → logprob: -12.250323295593262
    5. 'print' → logprob: -13.125323295593262
    6. '       ' → logprob: -14.000323295593262
    7. '```' → logprob: -15.000323295593262
    8. '   ' → logprob: -15.000323295593262
    9. '              ' → logprob: -16.750324249267578
    10. ' except' → logprob: -17.250324249267578

Token 2294: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5790551900863647
    2. '               ' → logprob: -0.8290551900863647
    3. 'if' (adapté à ' if') → logprob: -5.829055309295654
    4. '           ' → logprob: -8.829054832458496
    5. ' print' → logprob: -11.454054832458496
    6. '                   ' → logprob: -11.579054832458496
    7. '#print' → logprob: -14.454054832458496
    8. '```' → logprob: -14.454054832458496
    9. 'except' → logprob: -14.579054832458496
    10. '   ' → logprob: -14.704054832458496

Token 2295: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03804768621921539
    2. ' val' → logprob: -3.2880477905273438
    3. '               ' → logprob: -12.163047790527344
    4. '                   ' → logprob: -14.913047790527344
    5. '(val' → logprob: -15.163047790527344
    6. '           ' → logprob: -15.663047790527344
    7. 'valid' → logprob: -15.913047790527344
    8. '	val' → logprob: -16.413047790527344
    9. '[val' → logprob: -17.788047790527344
    10. '   ' → logprob: -18.288047790527344

Token 2296: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.008615635335445404
    2. '_right' → logprob: -4.758615493774414
    3. 'left' → logprob: -15.133615493774414
    4. '_equal' → logprob: -15.633615493774414
    5. '_LEFT' → logprob: -16.133615493774414
    6. '==' → logprob: -16.258615493774414
    7. 'val' → logprob: -16.258615493774414
    8. '   ' → logprob: -16.383615493774414
    9. 'Left' → logprob: -16.633615493774414
    10. '_' → logprob: -17.758615493774414

Token 2297: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00041065402911044657
    2. ' ==' → logprob: -8.625411033630371
    3. '==
' → logprob: -9.000411033630371
    4. ')==' → logprob: -9.625411033630371
    5. '()==' → logprob: -10.250411033630371
    6. '```' → logprob: -13.000411033630371
    7. ']==' → logprob: -13.375411033630371
    8. '==-' → logprob: -14.875411033630371
    9. '           ' → logprob: -15.000411033630371
    10. '==(' → logprob: -15.000411033630371

Token 2298: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.558399319241289e-05
    2. ' val' → logprob: -10.625025749206543
    3. '           ' → logprob: -14.125025749206543
    4. '   ' → logprob: -16.250024795532227
    5. '       ' → logprob: -16.625024795532227
    6. '               ' → logprob: -16.750024795532227
    7. '                   ' → logprob: -16.875024795532227
    8. '
' → logprob: -17.000024795532227
    9. '0' → logprob: -17.125024795532227
    10. '	val' → logprob: -17.500024795532227

Token 2299: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -7.839121826691553e-05
    2. 'right' → logprob: -9.500078201293945
    3. 'Right' → logprob: -12.750078201293945
    4. '_left' → logprob: -15.875078201293945
    5. '
' → logprob: -16.125078201293945
    6. '_RIGHT' → logprob: -16.500078201293945
    7. '_equal' → logprob: -16.500078201293945
    8. 'val' → logprob: -17.500078201293945
    9. '_Right' → logprob: -18.000078201293945
    10. '-right' → logprob: -18.125078201293945

Token 2300: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03308282047510147
    2. '                   ' → logprob: -3.5330827236175537
    3. ':' → logprob: -6.283082962036133
    4. '               ' → logprob: -7.158082962036133
    5. '):
' → logprob: -7.783082962036133
    6. '():
' → logprob: -8.408082962036133
    7. '           ' → logprob: -11.158082962036133
    8. '```' → logprob: -11.783082962036133
    9. ' and' → logprob: -12.283082962036133
    10. '==' → logprob: -12.783082962036133

Token 2301: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020422483794391155
    2. 'print' → logprob: -6.252042293548584
    3. '```' → logprob: -9.502041816711426
    4. '                  ' → logprob: -11.377041816711426
    5. '               ' → logprob: -12.002041816711426
    6. ':
' → logprob: -12.127041816711426
    7. '                       ' → logprob: -12.377041816711426
    8. '   ' → logprob: -13.377041816711426
    9. ' print' → logprob: -13.377041816711426
    10. '``' → logprob: -13.627041816711426

Token 2302: ' valid' (ID: 4529)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015869855415076017
    2. '                       ' → logprob: -6.5015869140625
    3. '                   ' → logprob: -9.6265869140625
    4. ' print' → logprob: -11.1265869140625
    5. '```' → logprob: -13.0015869140625
    6. '               ' → logprob: -14.3765869140625
    7. '   ' → logprob: -14.7515869140625
    8. '       ' → logprob: -15.0015869140625
    9. '
' → logprob: -16.1265869140625
    10. '           ' → logprob: -16.5015869140625

Token 2303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10169020295143127
    2. ' =' → logprob: -2.3516902923583984
    3. '+=' → logprob: -6.976690292358398
    4. ' +=' → logprob: -7.726690292358398
    5. '               ' → logprob: -10.226690292358398
    6. '=True' → logprob: -10.601690292358398
    7. '
' → logprob: -11.851690292358398
    8. '                   ' → logprob: -11.851690292358398
    9. '                       ' → logprob: -11.976690292358398
    10. '=
' → logprob: -12.226690292358398

Token 2304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '                   ' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '                       ' → logprob: -15.375000953674316
    5. '               ' → logprob: -15.625000953674316
    6. '           ' → logprob: -16.625001907348633
    7. '+' → logprob: -17.625001907348633
    8. '                               ' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '                           ' → logprob: -18.250001907348633

Token 2305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. 'print' → logprob: -17.125
    4. 'res' → logprob: -17.625
    5. 'valid' → logprob: -18.75
    6. '   ' → logprob: -19.875
    7. '+' → logprob: -20.625
    8. '=' → logprob: -20.875
    9. '۱' → logprob: -20.875
    10. '0' → logprob: -21.375

Token 2306: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06673764437437057
    2. 'print' → logprob: -2.816737651824951
    3. '```' → logprob: -5.441737651824951
    4. '               ' → logprob: -8.691737174987793
    5. '
' → logprob: -8.816737174987793
    6. '       ' → logprob: -10.066737174987793
    7. '                   ' → logprob: -10.191737174987793
    8. '``' → logprob: -11.191737174987793
    9. ' print' → logprob: -11.691737174987793
    10. '   ' → logprob: -11.816737174987793

Token 2307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05553893372416496
    2. '                   ' → logprob: -3.8055388927459717
    3. '```' → logprob: -3.8055388927459717
    4. 'print' → logprob: -5.180539131164551
    5. '               ' → logprob: -5.805539131164551
    6. '       ' → logprob: -7.305539131164551
    7. '
' → logprob: -9.18053913116455
    8. '   ' → logprob: -9.68053913116455
    9. '``' → logprob: -10.30553913116455
    10. '                       ' → logprob: -10.93053913116455

Token 2308: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02345137856900692
    2. 'print' → logprob: -3.773451328277588
    3. '               ' → logprob: -9.273451805114746
    4. '       ' → logprob: -9.273451805114746
    5. 'except' (adapté à ' except') → logprob: -11.273451805114746
    6. '   ' → logprob: -13.023451805114746
    7. '                   ' → logprob: -13.273451805114746
    8. ' print' → logprob: -14.023451805114746
    9. '
' → logprob: -14.773451805114746
    10. '          ' → logprob: -16.52345085144043

Token 2309: ' Parse' (ID: 26701)
  Prédit: 'Parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parse' → logprob: -3.500108141452074e-05
    2. '(Parse' → logprob: -10.500035285949707
    3. 'Print' → logprob: -12.750035285949707
    4. 'Parser' → logprob: -13.750035285949707
    5. ' Parse' → logprob: -13.750035285949707
    6. '
' → logprob: -14.000035285949707
    7. 'Parsing' → logprob: -14.375035285949707
    8. 'Exception' → logprob: -15.375035285949707
    9. '_parse' → logprob: -15.375035285949707
    10. 'parse' → logprob: -15.500035285949707

Token 2310: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.75
    3. 'error' → logprob: -17.25
    4. '
' → logprob: -17.875
    5. 'ERROR' → logprob: -18.625
    6. 'Parse' → logprob: -18.875
    7. '(Error' → logprob: -19.25
    8. '```' → logprob: -19.375
    9. '_Error' → logprob: -19.375
    10. 'Errors' → logprob: -19.75

Token 2311: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41097769141197205
    2. ':' → logprob: -1.1609777212142944
    3. '           ' → logprob: -4.535977840423584
    4. '():
' → logprob: -5.410977840423584
    5. ' as' → logprob: -5.410977840423584
    6. '       ' → logprob: -6.535977840423584
    7. '):
' → logprob: -6.910977840423584
    8. '               ' → logprob: -7.910977840423584
    9. '):' → logprob: -8.285977363586426
    10. '   ' → logprob: -8.535977363586426

Token 2312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005130100063979626
    2. '```' → logprob: -5.880130290985107
    3. '           ' → logprob: -6.255130290985107
    4. '       ' → logprob: -8.50512981414795
    5. '                   ' → logprob: -9.75512981414795
    6. '                       ' → logprob: -10.00512981414795
    7. '	           ' → logprob: -11.00512981414795
    8. '``' → logprob: -11.00512981414795
    9. '   ' → logprob: -11.25512981414795
    10. '	       ' → logprob: -11.50512981414795

Token 2313: ' valid' (ID: 4529)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0038086227141320705
    2. '               ' → logprob: -6.253808498382568
    3. '           ' → logprob: -6.503808498382568
    4. '```' → logprob: -8.253808975219727
    5. '                   ' → logprob: -10.253808975219727
    6. ' print' → logprob: -10.503808975219727
    7. '   ' → logprob: -11.128808975219727
    8. '       ' → logprob: -11.628808975219727
    9. '``' → logprob: -11.753808975219727
    10. '0' → logprob: -12.003808975219727

Token 2314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008933625183999538
    2. ' =' → logprob: -4.7589335441589355
    3. '           ' → logprob: -8.758934020996094
    4. '(' → logprob: -9.633934020996094
    5. '               ' → logprob: -10.258934020996094
    6. '                   ' → logprob: -10.758934020996094
    7. '=True' → logprob: -11.633934020996094
    8. '=
' → logprob: -11.758934020996094
    9. '=False' → logprob: -12.508934020996094
    10. '       ' → logprob: -12.508934020996094

Token 2315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '           ' → logprob: -20.75
    4. '   ' → logprob: -22.0
    5. '```' → logprob: -22.75
    6. '۰' → logprob: -23.75
    7. '                   ' → logprob: -24.125
    8. '               ' → logprob: -24.25
    9. '       ' → logprob: -24.375
    10. '000' → logprob: -24.875

Token 2316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. '   ' → logprob: -20.5
    4. '           ' → logprob: -21.5
    5. '۰' → logprob: -22.75
    6. '       ' → logprob: -23.25
    7. '```' → logprob: -23.5
    8. '000' → logprob: -23.625
    9. '                   ' → logprob: -24.0
    10. '               ' → logprob: -24.125

Token 2317: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024918487295508385
    2. 'print' → logprob: -4.399918556213379
    3. '       ' → logprob: -5.399918556213379
    4. '   ' → logprob: -5.399918556213379
    5. '```' → logprob: -5.774918556213379
    6. '
' → logprob: -8.649918556213379
    7. ' print' → logprob: -11.774918556213379
    8. '``' → logprob: -12.274918556213379
    9. '               ' → logprob: -13.399918556213379
    10. 'import' → logprob: -14.024918556213379

Token 2318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4204724133014679
    2. 'print' → logprob: -1.1704723834991455
    3. '   ' → logprob: -3.9204723834991455
    4. '       ' → logprob: -4.795472621917725
    5. '```' → logprob: -5.920472621917725
    6. '
' → logprob: -6.170472621917725
    7. ' print' → logprob: -9.045472145080566
    8. '               ' → logprob: -10.920472145080566
    9. '``' → logprob: -11.420472145080566
    10. '                   ' → logprob: -12.170472145080566

Token 2319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.47463685274124146
    2. '           ' → logprob: -0.9746368527412415
    3. '       ' → logprob: -7.724637031555176
    4. '   ' → logprob: -9.224637031555176
    5. ' print' → logprob: -11.474637031555176
    6. '```' → logprob: -11.724637031555176
    7. '
' → logprob: -14.474637031555176
    8. '	print' → logprob: -15.849637031555176
    9. '``' → logprob: -16.72463607788086
    10. '               ' → logprob: -16.84963607788086

Token 2320: '(valid' (ID: 76588)
  Prédit: '(valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(valid' → logprob: -0.00012201975914649665
    2. '(' → logprob: -9.5001220703125
    3. 'valid' → logprob: -10.0001220703125
    4. '0' → logprob: -13.3751220703125
    5. '	valid' → logprob: -17.0001220703125
    6. ' valid' → logprob: -17.3751220703125
    7. '```' → logprob: -17.3751220703125
    8. '(
' → logprob: -18.2501220703125
    9. '((' → logprob: -18.6251220703125
    10. '1' → logprob: -18.7501220703125

Token 2321: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.203338623046875
    2. ')' → logprob: -1.703338623046875
    3. '   ' → logprob: -6.453338623046875
    4. '       ' → logprob: -8.703338623046875
    5. '           ' → logprob: -8.703338623046875
    6. ')
' → logprob: -11.578338623046875
    7. ')return' → logprob: -12.703338623046875
    8. ')`
' → logprob: -13.578338623046875
    9. '")
' → logprob: -14.703338623046875
    10. '')
' → logprob: -15.078338623046875

Token 2322: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010155626572668552
    2. '```' → logprob: -5.38515567779541
    3. '       ' → logprob: -5.63515567779541
    4. 'else' → logprob: -6.63515567779541
    5. '           ' → logprob: -7.88515567779541
    6. 'return' → logprob: -8.51015567779541
    7. '``' → logprob: -10.26015567779541
    8. '<|end|>' → logprob: -11.76015567779541
    9. '	return' → logprob: -12.01015567779541
    10. '
' → logprob: -13.13515567779541

Token 2323: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007627923507243395
    2. '   ' → logprob: -4.882627964019775
    3. 'else' (adapté à ' else') → logprob: -11.257627487182617
    4. '```' → logprob: -12.257627487182617
    5. 'return' → logprob: -13.382627487182617
    6. '           ' → logprob: -13.882627487182617
    7. '<|end|>' → logprob: -14.132627487182617
    8. '	return' → logprob: -15.882627487182617
    9. '	' → logprob: -16.007627487182617
    10. '<|end|>' → logprob: -16.507627487182617

Token 2324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5682666897773743
    2. ':
' → logprob: -1.3182666301727295
    3. '       ' → logprob: -1.9432666301727295
    4. '           ' → logprob: -4.443266868591309
    5. '   ' → logprob: -5.568266868591309
    6. '():
' → logprob: -5.568266868591309
    7. ':return' → logprob: -6.568266868591309
    8. 'print' → logprob: -7.443266868591309
    9. '(' → logprob: -7.693266868591309
    10. 'return' → logprob: -8.693266868591309

Token 2325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26715725660324097
    2. '       ' → logprob: -1.6421573162078857
    3. 'return' → logprob: -3.7671573162078857
    4. '```' → logprob: -4.392157077789307
    5. 'print' → logprob: -5.892157077789307
    6. '   ' → logprob: -6.017157077789307
    7. '``' → logprob: -9.017157554626465
    8. ' return' → logprob: -10.392157554626465
    9. '0' → logprob: -11.267157554626465
    10. ' ' → logprob: -12.392157554626465

Token 2326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.11996734328568e-05
    2. '```' → logprob: -10.375041007995605
    3. '   ' → logprob: -12.875041007995605
    4. '       ' → logprob: -13.000041007995605
    5. ' print' → logprob: -13.125041007995605
    6. 'return' → logprob: -13.375041007995605
    7. '           ' → logprob: -13.625041007995605
    8. '``' → logprob: -15.125041007995605
    9. '0' → logprob: -16.750041961669922
    10. '	print' → logprob: -17.250041961669922

Token 2327: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804149478673935
    2. '(' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.913042068481445
    4. '(
' → logprob: -18.163042068481445
    5. '```' → logprob: -18.163042068481445
    6. '('' → logprob: -18.413042068481445
    7. '`' → logprob: -18.788042068481445
    8. '   ' → logprob: -19.038042068481445
    9. '
' → logprob: -19.663042068481445
    10. ' (' → logprob: -19.913042068481445

Token 2328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.625
    3. '   ' → logprob: -23.25
    4. '０' → logprob: -25.375
    5. '       ' → logprob: -25.375
    6. '۰' → logprob: -25.375
    7. '000' → logprob: -25.75
    8. '(' → logprob: -25.875
    9. '00' → logprob: -26.0
    10. ')' → logprob: -26.125

Token 2329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050583615899086
    2. ')
' → logprob: -3.300583600997925
    3. '       ' → logprob: -5.050583839416504
    4. '   ' → logprob: -5.175583839416504
    5. '           ' → logprob: -8.050583839416504
    6. ')return' → logprob: -9.800583839416504
    7. '")' → logprob: -11.925583839416504
    8. '```' → logprob: -12.050583839416504
    9. '')' → logprob: -12.675583839416504
    10. ')**' → logprob: -13.175583839416504

Token 2330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14467200636863708
    2. 'else' → logprob: -2.01967191696167
    3. '```' → logprob: -6.89467191696167
    4. '       ' → logprob: -7.26967191696167
    5. 'return' → logprob: -8.644672393798828
    6. '<|end|>' → logprob: -9.894672393798828
    7. ' else' → logprob: -10.519672393798828
    8. '	else' → logprob: -11.019672393798828
    9. '``' → logprob: -12.269672393798828
    10. 'elif' → logprob: -13.144672393798828

Token 2331: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10026415437459946
    2. '   ' → logprob: -2.350264072418213
    3. '```' → logprob: -10.475264549255371
    4. ' else' → logprob: -10.725264549255371
    5. 'elif' → logprob: -12.600264549255371
    6. '	else' → logprob: -12.975264549255371
    7. '_else' → logprob: -13.850264549255371
    8. '``' → logprob: -15.600264549255371
    9. '       ' → logprob: -16.225263595581055
    10. ' ' → logprob: -16.225263595581055

Token 2332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6189144253730774
    2. ':
' → logprob: -0.9939144253730774
    3. '       ' → logprob: -2.8689143657684326
    4. '   ' → logprob: -3.4939143657684326
    5. '<|end|>' → logprob: -6.993914604187012
    6. '():
' → logprob: -7.368914604187012
    7. '```' → logprob: -7.618914604187012
    8. '):
' → logprob: -7.868914604187012
    9. '(' → logprob: -7.868914604187012
    10. ',' → logprob: -8.118914604187012

Token 2333: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.215330409351736e-05
    2. '```' → logprob: -10.500041961669922
    3. 'def' → logprob: -12.125041961669922
    4. 'dfs' → logprob: -12.625041961669922
    5. '
' → logprob: -13.000041961669922
    6. '    
' → logprob: -13.250041961669922
    7. '``' → logprob: -14.875041961669922
    8. '       ' → logprob: -14.875041961669922
    9. '(' → logprob: -15.625041961669922
    10. '   ' → logprob: -16.500041961669922

Token 2334: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38922974467277527
    2. 'dfs' (adapté à ' dfs') → logprob: -1.1392297744750977
    3. '```' → logprob: -6.264229774475098
    4. ' dfs' → logprob: -8.014229774475098
    5. 'd' → logprob: -10.389229774475098
    6. 'df' → logprob: -10.514229774475098
    7. '
' → logprob: -10.889229774475098
    8. '``' → logprob: -11.139229774475098
    9. '       ' → logprob: -11.889229774475098
    10. 'def' → logprob: -11.889229774475098

Token 2335: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004923873930238187
    2. '0' → logprob: -7.625492572784424
    3. ' (' → logprob: -13.375492095947266
    4. '(
' → logprob: -13.500492095947266
    5. '   ' → logprob: -14.250492095947266
    6. '```' → logprob: -15.000492095947266
    7. '(len' → logprob: -15.250492095947266
    8. '       ' → logprob: -17.375492095947266
    9. '
' → logprob: -17.500492095947266
    10. 'def' → logprob: -18.000492095947266

Token 2336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -19.25
    4. ')' → logprob: -19.875
    5. '
' → logprob: -20.875
    6. '       ' → logprob: -21.875
    7. '(' → logprob: -21.875
    8. '۰' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. '1' → logprob: -22.9375

Token 2337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002022378146648407
    2. '   ' → logprob: -7.2520222663879395
    3. '(' → logprob: -7.3770222663879395
    4. '       ' → logprob: -8.752022743225098
    5. ',(' → logprob: -8.752022743225098
    6. '(),' → logprob: -8.877022743225098
    7. '([],' → logprob: -9.127022743225098
    8. ')' → logprob: -10.877022743225098
    9. ',
' → logprob: -11.127022743225098
    10. ',,' → logprob: -11.377022743225098

Token 2338: ' {},' (ID: 32178)
  Prédit: '{},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{},' → logprob: -0.02981448359787464
    2. 'assigned' → logprob: -4.029814720153809
    3. 'dict' → logprob: -4.904814720153809
    4. '{}' → logprob: -5.904814720153809
    5. ' {},' → logprob: -7.029814720153809
    6. '{})' → logprob: -8.279814720153809
    7. '{' → logprob: -8.904814720153809
    8. '{},
' → logprob: -9.154814720153809
    9. '{}
' → logprob: -10.279814720153809
    10. '   ' → logprob: -11.529814720153809

Token 2339: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0001593195047462359
    2. ' set' → logprob: -8.75015926361084
    3. ')set' → logprob: -14.37515926361084
    4. '{}' → logprob: -16.875160217285156
    5. ')' → logprob: -17.125160217285156
    6. '	set' → logprob: -17.125160217285156
    7. ' ' → logprob: -17.375160217285156
    8. '=set' → logprob: -17.375160217285156
    9. '   ' → logprob: -17.750160217285156
    10. '{' → logprob: -18.000160217285156

Token 2340: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023669464513659477
    2. '())
' → logprob: -3.773669481277466
    3. ')' → logprob: -8.398669242858887
    4. '()' → logprob: -9.273669242858887
    5. 'OR' → logprob: -10.273669242858887
    6. '(' → logprob: -10.398669242858887
    7. '(['' → logprob: -11.023669242858887
    8. '('' → logprob: -11.898669242858887
    9. '())

' → logprob: -12.273669242858887
    10. '()
' → logprob: -12.898669242858887

Token 2341: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028513523284345865
    2. '   ' → logprob: -6.002851486206055
    3. '```' → logprob: -8.127851486206055
    4. '
' → logprob: -10.252851486206055
    5. ' print' → logprob: -11.627851486206055
    6. ')' → logprob: -11.627851486206055
    7. '<|end|>' → logprob: -12.002851486206055
    8. '``' → logprob: -12.002851486206055
    9. ')
' → logprob: -12.877851486206055
    10. '       ' → logprob: -13.002851486206055

Token 2342: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5332478142227046e-05
    2. '```' → logprob: -11.250015258789062
    3. ' print' → logprob: -13.250015258789062
    4. '``' → logprob: -14.875015258789062
    5. '   ' → logprob: -16.625015258789062
    6. '
' → logprob: -18.500015258789062
    7. '	print' → logprob: -18.750015258789062
    8. '`' → logprob: -19.375015258789062
    9. '(print' → logprob: -20.125015258789062
    10. '#print' → logprob: -20.625015258789062

Token 2343: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.006715370807796717
    2. 'res' → logprob: -5.006715297698975
    3. ' res' → logprob: -16.881715774536133
    4. '$res' → logprob: -18.256715774536133
    5. '(' → logprob: -18.506715774536133
    6. '_res' → logprob: -18.881715774536133
    7. '	res' → logprob: -19.381715774536133
    8. '0' → logprob: -19.881715774536133
    9. '```' → logprob: -19.881715774536133
    10. ',res' → logprob: -20.506715774536133

Token 2344: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.500006675720215
    3. '   ' → logprob: -13.000006675720215
    4. '())' → logprob: -16.3750057220459
    5. '}' → logprob: -16.5000057220459
    6. '')' → logprob: -16.7500057220459
    7. '```' → logprob: -16.7500057220459
    8. '()' → logprob: -16.8750057220459
    9. '")' → logprob: -16.8750057220459
    10. '),' → logprob: -17.3750057220459

Token 2345: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3884216845035553
    2. '<|end|>' → logprob: -1.513421654701233
    3. '```' → logprob: -3.2634217739105225
    4. ''' → logprob: -3.6384217739105225
    5. ']' → logprob: -4.513421535491943
    6. ':' → logprob: -4.763421535491943
    7. '')' → logprob: -5.513421535491943
    8. '#' → logprob: -5.638421535491943
    9. '<|end|>' → logprob: -5.763421535491943
    10. '0' → logprob: -7.138421535491943

Token 2346: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741983413696289
    2. ' __' → logprob: -0.9741983413696289
    3. '_name' → logprob: -10.224198341369629
    4. 'name' → logprob: -10.474198341369629
    5. '___' → logprob: -10.474198341369629
    6. '____' → logprob: -11.849198341369629
    7. '```' → logprob: -11.974198341369629
    8. '(__' → logprob: -12.349198341369629
    9. 'if' → logprob: -12.599198341369629
    10. '.__' → logprob: -13.474198341369629

Token 2347: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004585822578519583
    2. '==' → logprob: -6.0045857429504395
    3. '```' → logprob: -7.6295857429504395
    4. '=="' → logprob: -7.7545857429504395
    5. ' ==' → logprob: -7.8795857429504395
    6. 'name' → logprob: -8.379586219787598
    7. '=='' → logprob: -8.754586219787598
    8. '__":
' → logprob: -9.254586219787598
    9. 'if' → logprob: -9.379586219787598
    10. '__':
' → logprob: -10.254586219787598

Token 2348: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003234394360333681
    2. '==' → logprob: -6.128234386444092
    3. '__.__' → logprob: -7.878234386444092
    4. '=="' → logprob: -8.62823486328125
    5. ' ==' → logprob: -9.12823486328125
    6. '=='' → logprob: -9.25323486328125
    7. '__":
' → logprob: -9.87823486328125
    8. '```' → logprob: -9.87823486328125
    9. '__':
' → logprob: -10.12823486328125
    10. '__.' → logprob: -10.37823486328125

Token 2349: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4328708052635193
    2. '=="' → logprob: -2.057870864868164
    3. '=='' → logprob: -2.057870864868164
    4. '__' → logprob: -2.807870864868164
    5. ' ==' → logprob: -3.432870864868164
    6. '```' → logprob: -6.057870864868164
    7. '==='' → logprob: -8.432870864868164
    8. '==
' → logprob: -8.807870864868164
    9. '"' → logprob: -9.682870864868164
    10. ''' → logprob: -9.807870864868164

Token 2350: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006627569673582911
    2. '"' → logprob: -7.500662803649902
    3. ''' → logprob: -9.125662803649902
    4. 'main' → logprob: -14.125662803649902
    5. '_main' → logprob: -17.000661849975586
    6. '/__' → logprob: -17.125661849975586
    7. '___' → logprob: -17.250661849975586
    8. ' __' → logprob: -17.375661849975586
    9. ' "__' → logprob: -17.750661849975586
    10. '____' → logprob: -19.000661849975586

Token 2351: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.5491004129871726e-05
    2. 'name' → logprob: -10.000045776367188
    3. ' main' → logprob: -16.875045776367188
    4. '_main' → logprob: -18.500045776367188
    5. '__' → logprob: -18.750045776367188
    6. '```' → logprob: -20.000045776367188
    7. 'built' → logprob: -20.250045776367188
    8. 'import' → logprob: -21.250045776367188
    9. '(main' → logprob: -21.500045776367188
    10. 'm' → logprob: -21.500045776367188

Token 2352: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023889247328042984
    2. '__' → logprob: -3.8988893032073975
    3. '__':
' → logprob: -6.773889064788818
    4. ':' → logprob: -7.273889064788818
    5. '():
' → logprob: -7.273889064788818
    6. ':
' → logprob: -7.398889064788818
    7. '__:' → logprob: -8.898889541625977
    8. '__
' → logprob: -10.898889541625977
    9. '```' → logprob: -11.273889541625977
    10. '":
' → logprob: -12.273889541625977

Token 2353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36325058341026306
    2. 'main' → logprob: -1.2382506132125854
    3. '	main' → logprob: -4.238250732421875
    4. '```' → logprob: -8.988250732421875
    5. ' main' → logprob: -9.613250732421875
    6. '(main' → logprob: -10.238250732421875
    7. '    
' → logprob: -11.988250732421875
    8. '_main' → logprob: -11.988250732421875
    9. '   ' → logprob: -12.238250732421875
    10. '
' → logprob: -12.488250732421875

Token 2354: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.2664456789934775e-06
    2. ' main' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '	main' → logprob: -15.250000953674316
    5. '_main' → logprob: -18.125001907348633
    6. '(main' → logprob: -18.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '.main' → logprob: -21.875001907348633
    9. 'Main' → logprob: -22.000001907348633
    10. 'import' → logprob: -22.500001907348633

Token 2355: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2353
Tokens correctement prédits (1ère position, stricte): 639
Tokens correctement prédits (1ère position, avec adaptation): 749
Tokens correctement prédits (top 10): 1578
Précision stricte (1ère position): 27.16%
Précision adaptée (1ère position): 31.83%
Précision (top 10): 67.06%
================================================================================
