================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Point:
    __slots__ = ('x', 'y')

    def __init__(self, x: int, y: int):
        self.x = x
        self.y = y

    def __sub__(self, other: 'Point') -> 'Vector':
        return Vector(self.x - other.x, self.y - other.y)

    def __add__(self, vector: 'Vector') -> 'Point':
        return Point(self.x + vector.dx, self.y + vector.dy)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Point):
            return False
        return self.x == other.x and self.y == other.y

    def __hash__(self) -> int:
        return hash((self.x, self.y))

class Vector:
    __slots__ = ('dx', 'dy')

    def __init__(self, dx: int, dy: int):
        self.dx = dx
        self.dy = dy

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Vector):
            return False
        return self.dx == other.dx and self.dy == other.dy

class StarPattern:
    def __init__(self, stars: list[Point]):
        if not stars:
            raise ValueError("StarPattern requires at least one star")
        self.stars = stars
        self.reference_star = stars[0]
        self.relative_positions = self._calculate_relative_positions()

    def _calculate_relative_positions(self) -> set:
        # Positions of stars relative to the reference star
        return {star - self.reference_star for star in self.stars[1:]}

class StarMap:
    def __init__(self, stars: list[Point]):
        self.stars = stars
        self.star_set = set(stars)

    def contains_pattern_at(self, pattern: StarPattern, top_star_candidate: Point) -> bool:
        offset = Vector(top_star_candidate.x - pattern.reference_star.x,
                        top_star_candidate.y - pattern.reference_star.y)
        # Check that all stars in the pattern (offset by vector) exist in star map
        for relative_pos in pattern.relative_positions:
            check_point = Point(top_star_candidate.x + relative_pos.dx,
                                top_star_candidate.y + relative_pos.dy)
            if check_point not in self.star_set:
                return False
        return True

    def find_pattern_offset(self, pattern: StarPattern) -> Vector | None:
        # Iterate over all stars in star map, attempt to match pattern reference star
        for candidate in self.stars:
            if self.contains_pattern_at(pattern, candidate):
                dx = candidate.x - pattern.reference_star.x
                dy = candidate.y - pattern.reference_star.y
                return Vector(dx, dy)
        return None

class StarPatternDetector:
    def __init__(self):
        self.results = []

    def read_pattern(self, input_iter) -> StarPattern | None:
        try:
            m = int(next(input_iter))
        except StopIteration:
            return None
        if m == 0:
            return None
        stars = []
        for _ in range(m):
            x_str, y_str = next(input_iter).split()
            stars.append(Point(int(x_str), int(y_str)))
        return StarPattern(stars)

    def read_star_map(self, input_iter) -> StarMap:
        n = int(next(input_iter))
        stars = []
        for _ in range(n):
            x_str, y_str = next(input_iter).split()
            stars.append(Point(int(x_str), int(y_str)))
        return StarMap(stars)

    def process(self, input_lines: list[str]):
        input_iter = iter(line.strip() for line in input_lines if line.strip())
        while True:
            pattern = self.read_pattern(input_iter)
            if pattern is None:
                break
            star_map = self.read_star_map(input_iter)
            offset = star_map.find_pattern_offset(pattern)
            self.results.append(offset)

    def output_results(self):
        for offset in self.results:
            if offset is not None:
                print(offset.dx, offset.dy)

def main():
    import sys
    detector = StarPatternDetector()
    detector.process(sys.stdin)
    detector.output_results()

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Point' (ID: 9971)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7489643692970276
    2. '```' → logprob: -1.2489643096923828
    3. '   ' → logprob: -1.7489643096923828
    4. '(' → logprob: -3.373964309692383
    5. '():' → logprob: -4.748964309692383
    6. '<|end|>' → logprob: -4.998964309692383
    7. '``' → logprob: -6.123964309692383
    8. '(
' → logprob: -6.248964309692383
    9. '()' → logprob: -6.248964309692383
    10. '\' → logprob: -6.373964309692383

Token 4: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0834633111953735
    2. '    ' → logprob: -1.0834633111953735
    3. '   ' → logprob: -2.333463191986084
    4. '```' → logprob: -2.458463191986084
    5. ' def' → logprob: -3.958463191986084
    6. '`' → logprob: -4.083463191986084
    7. '_' → logprob: -4.333463191986084
    8. 'def' → logprob: -4.458463191986084
    9. ' pass' → logprob: -4.708463191986084
    10. ' ```' → logprob: -4.833463191986084

Token 5: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.08170488476753235
    2. '_init' → logprob: -2.58170485496521
    3. '_' → logprob: -5.956705093383789
    4. '_i' → logprob: -9.581705093383789
    5. ' init' → logprob: -9.706705093383789
    6. '_in' → logprob: -10.581705093383789
    7. ' _' → logprob: -10.706705093383789
    8. '_x' → logprob: -11.081705093383789
    9. '_new' → logprob: -11.581705093383789
    10. 'i' → logprob: -13.081705093383789

Token 6: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.098748053773306e-05
    2. '__[' → logprob: -11.00006103515625
    3. '=' → logprob: -11.12506103515625
    4. '__.__' → logprob: -11.25006103515625
    5. '__.' → logprob: -11.62506103515625
    6. '___' → logprob: -12.62506103515625
    7. '__["' → logprob: -13.00006103515625
    8. '____' → logprob: -14.87506103515625
    9. '__('' → logprob: -15.25006103515625
    10. '__:' → logprob: -15.37506103515625

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28118428587913513
    2. '=['' → logprob: -1.6561843156814575
    3. '__' → logprob: -3.531184196472168
    4. ' =' → logprob: -4.781184196472168
    5. '=[' → logprob: -5.031184196472168
    6. '=["' → logprob: -5.531184196472168
    7. '=[
' → logprob: -5.656184196472168
    8. '[' → logprob: -6.781184196472168
    9. '=('' → logprob: -8.156184196472168
    10. ' =[' → logprob: -8.531184196472168

Token 8: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011847573332488537
    2. ''_' → logprob: -5.511847496032715
    3. '('_' → logprob: -6.261847496032715
    4. '('__' → logprob: -6.386847496032715
    5. '['' → logprob: -7.011847496032715
    6. ' ('' → logprob: -7.386847496032715
    7. '['_' → logprob: -7.636847496032715
    8. ' '' → logprob: -7.636847496032715
    9. ''s' → logprob: -7.886847496032715
    10. ' '__' → logprob: -7.886847496032715

Token 9: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007421217858791351
    2. '_x' → logprob: -5.007421016693115
    3. '__' → logprob: -7.257421016693115
    4. ' x' → logprob: -15.257421493530273
    5. ''x' → logprob: -15.632421493530273
    6. '"x' → logprob: -16.882421493530273
    7. '___' → logprob: -17.132421493530273
    8. 'name' → logprob: -17.507421493530273
    9. '_' → logprob: -17.757421493530273
    10. '```' → logprob: -18.382421493530273

Token 10: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.01258029043674469
    2. ',' → logprob: -4.387580394744873
    3. '','' → logprob: -10.137579917907715
    4. ' ',' → logprob: -11.137579917907715
    5. '')' → logprob: -11.887579917907715
    6. '_',' → logprob: -12.512579917907715
    7. '',
' → logprob: -13.637579917907715
    8. ''' → logprob: -13.637579917907715
    9. ','' → logprob: -14.012579917907715
    10. '.',' → logprob: -14.512579917907715

Token 11: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.066945381462574
    2. ' y' → logprob: -3.4419453144073486
    3. 'y' → logprob: -4.191945552825928
    4. ''' → logprob: -4.566945552825928
    5. ' '' → logprob: -5.066945552825928
    6. '‘y' → logprob: -7.066945552825928
    7. ' ' → logprob: -10.44194507598877
    8. '   ' → logprob: -10.94194507598877
    9. '’y' → logprob: -11.44194507598877
    10. '`' → logprob: -11.56694507598877

Token 12: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.7697225252486533e-06
    2. ' y' → logprob: -13.000003814697266
    3. ''y' → logprob: -13.750003814697266
    4. '_y' → logprob: -15.375003814697266
    5. '   ' → logprob: -16.500003814697266
    6. '‘y' → logprob: -17.375003814697266
    7. '__' → logprob: -18.000003814697266
    8. ''' → logprob: -18.500003814697266
    9. 'y's' → logprob: -18.625003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014778479002416134
    2. '',' → logprob: -4.5147786140441895
    3. ')' → logprob: -5.6397786140441895
    4. ''' → logprob: -8.764778137207031
    5. '')
' → logprob: -12.264778137207031
    6. ',' → logprob: -13.514778137207031
    7. '(',' → logprob: -13.514778137207031
    8. '('' → logprob: -13.639778137207031
    9. '','' → logprob: -13.639778137207031
    10. '')

' → logprob: -13.889778137207031

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16537459194660187
    2. ':' → logprob: -2.415374517440796
    3. '
' → logprob: -4.040374755859375
    4. ',' → logprob: -4.165374755859375
    5. '```' → logprob: -4.790374755859375
    6. '    
' → logprob: -4.915374755859375
    7. 'def' → logprob: -5.540374755859375
    8. '(' → logprob: -5.915374755859375
    9. '\n' → logprob: -6.915374755859375
    10. ' def' → logprob: -6.915374755859375

Token 15: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00036667886888608336
    2. ' def' → logprob: -8.0003662109375
    3. '   ' → logprob: -10.5003662109375
    4. 'de' → logprob: -13.2503662109375
    5. 'd' → logprob: -13.7503662109375
    6. '```' → logprob: -15.6253662109375
    7. '@property' → logprob: -15.7503662109375
    8. '@' → logprob: -15.7503662109375
    9. '    ' → logprob: -16.0003662109375
    10. '__' → logprob: -16.1253662109375

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3483666181564331
    2. ' ' → logprob: -1.348366618156433
    3. '__' → logprob: -3.5983667373657227
    4. ' init' → logprob: -5.348366737365723
    5. ' def' → logprob: -6.473366737365723
    6. '_init' → logprob: -8.348366737365723
    7. '  ' → logprob: -9.098366737365723
    8. ' space' → logprob: -9.223366737365723
    9. ' ' → logprob: -10.223366737365723
    10. ' calculate' → logprob: -10.348366737365723

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.047134305234067e-05
    2. 'i' → logprob: -10.875030517578125
    3. 'ini' → logprob: -12.125030517578125
    4. ' init' → logprob: -12.250030517578125
    5. 'in' → logprob: -14.000030517578125
    6. '_init' → logprob: -15.375030517578125
    7. 'int' → logprob: -15.750030517578125
    8. '_i' → logprob: -17.750030517578125
    9. 'inti' → logprob: -17.750030517578125
    10. '	init' → logprob: -17.750030517578125

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4800107479095459
    2. '__' → logprob: -1.105010747909546
    3. '(' → logprob: -3.730010747909546
    4. '<|end|>' → logprob: -4.980010986328125
    5. '(self' → logprob: -5.105010986328125
    6. '_' → logprob: -5.230010986328125
    7. '__(
' → logprob: -5.980010986328125
    8. ' (' → logprob: -6.605010986328125
    9. '__((' → logprob: -6.730010986328125
    10. '<|end|>' → logprob: -7.480010986328125

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.65101717156358e-05
    2. ' self' → logprob: -9.250096321105957
    3. ')' → logprob: -15.750096321105957
    4. '(self' → logprob: -16.500097274780273
    5. 'x' → logprob: -16.875097274780273
    6. '   ' → logprob: -17.125097274780273
    7. ' ' → logprob: -17.875097274780273
    8. '       ' → logprob: -18.750097274780273
    9. 'sel' → logprob: -18.875097274780273
    10. '	self' → logprob: -19.250097274780273

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006880426779389381
    2. 'self' → logprob: -5.631880283355713
    3. ' ,' → logprob: -5.881880283355713
    4. ')' → logprob: -8.256880760192871
    5. '<|end|>' → logprob: -9.006880760192871
    6. ',self' → logprob: -10.131880760192871
    7. ' self' → logprob: -10.256880760192871
    8. 's' → logprob: -12.256880760192871
    9. ' )' → logprob: -12.381880760192871
    10. ',x' → logprob: -12.631880760192871

Token 21: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4046569764614105
    2. ' x' → logprob: -1.529657006263733
    3. 'self' → logprob: -2.2796568870544434
    4. ' self' → logprob: -4.279656887054443
    5. ' ' → logprob: -12.279657363891602
    6. ')x' → logprob: -12.404657363891602
    7. '   ' → logprob: -12.654657363891602
    8. ')' → logprob: -12.779657363891602
    9. '```' → logprob: -14.404657363891602
    10. '`' → logprob: -14.654657363891602

Token 22: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03485306352376938
    2. ')' → logprob: -3.409852981567383
    3. ' ,' → logprob: -7.284852981567383
    4. '):' → logprob: -8.534852981567383
    5. '<|end|>' → logprob: -8.659852981567383
    6. ' )' → logprob: -10.284852981567383
    7. ',x' → logprob: -10.409852981567383
    8. '<|end|>' → logprob: -11.284852981567383
    9. ',)' → logprob: -11.409852981567383
    10. ')x' → logprob: -11.534852981567383

Token 23: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.15905724465847015
    2. ')' → logprob: -2.409057140350342
    3. 'int' → logprob: -3.409057140350342
    4. ' int' → logprob: -4.534057140350342
    5. ' ,' → logprob: -5.284057140350342
    6. ' ' → logprob: -5.784057140350342
    7. '<|end|>' → logprob: -6.284057140350342
    8. 'x' → logprob: -6.659057140350342
    9. ' x' → logprob: -7.659057140350342
    10. ' ):' → logprob: -8.1590576171875

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009247742593288422
    2. ')' → logprob: -5.134247779846191
    3. '):' → logprob: -5.884247779846191
    4. ' ,' → logprob: -8.134247779846191
    5. '<|end|>' → logprob: -8.634247779846191
    6. ',
' → logprob: -11.134247779846191
    7. '):
' → logprob: -11.259247779846191
    8. '<|end|>' → logprob: -12.009247779846191
    9. '),' → logprob: -12.384247779846191
    10. ',x' → logprob: -12.634247779846191

Token 25: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.005953329615294933
    2. 'y' → logprob: -5.130953311920166
    3. ' ' → logprob: -10.755953788757324
    4. ' ' → logprob: -13.130953788757324
    5. '<|end|>' → logprob: -14.755953788757324
    6. '	y' → logprob: -14.880953788757324
    7. ')' → logprob: -15.255953788757324
    8. ' )' → logprob: -16.505952835083008
    9. ' ,' → logprob: -16.755952835083008
    10. ' x' → logprob: -16.880952835083008

Token 26: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.616420328617096
    2. ')' → logprob: -0.866420328617096
    3. ':' → logprob: -3.241420269012451
    4. '=' → logprob: -8.49142074584961
    5. '):
' → logprob: -8.61642074584961
    6. ',' → logprob: -9.99142074584961
    7. ' ):' → logprob: -10.49142074584961
    8. '<|end|>' → logprob: -10.99142074584961
    9. '<|end|>' → logprob: -11.11642074584961
    10. ' ' → logprob: -11.24142074584961

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16023966670036316
    2. 'int' → logprob: -1.9102396965026855
    3. ':int' → logprob: -12.160239219665527
    4. ')' → logprob: -12.535239219665527
    5. '=int' → logprob: -12.910239219665527
    6. '	int' → logprob: -13.785239219665527
    7. '[int' → logprob: -14.160239219665527
    8. ' )' → logprob: -14.535239219665527
    9. ' ' → logprob: -14.660239219665527
    10. '<int' → logprob: -14.660239219665527

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016086924821138382
    2. ')' → logprob: -4.141087055206299
    3. ':' → logprob: -10.51608657836914
    4. ''):' → logprob: -11.51608657836914
    5. '):
' → logprob: -11.89108657836914
    6. '   ' → logprob: -12.26608657836914
    7. ' ):' → logprob: -13.01608657836914
    8. ',' → logprob: -15.01608657836914
    9. ')：' → logprob: -15.64108657836914
    10. '),' → logprob: -15.76608657836914

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013224351219832897
    2. '<|end|>' → logprob: -5.138224124908447
    3. '    ' → logprob: -6.138224124908447
    4. ' ' → logprob: -6.138224124908447
    5. '   ' → logprob: -7.388224124908447
    6. ')' → logprob: -7.638224124908447
    7. ' 
' → logprob: -7.638224124908447
    8. ' )' → logprob: -7.763224124908447
    9. '        ' → logprob: -8.263224601745605
    10. '        
' → logprob: -8.388224601745605

Token 30: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2533421218395233
    2. 'self' (adapté à ' self') → logprob: -1.5033421516418457
    3. '       ' → logprob: -6.628342151641846
    4. '        ' → logprob: -9.628341674804688
    5. ' ' → logprob: -11.378341674804688
    6. '   ' → logprob: -12.628341674804688
    7. '```' → logprob: -12.628341674804688
    8. ' ' → logprob: -13.378341674804688
    9. '    ' → logprob: -13.628341674804688
    10. '	self' → logprob: -14.003341674804688

Token 31: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0010384062770754099
    2. '.x' → logprob: -6.876038551330566
    3. ' .' → logprob: -12.876038551330566
    4. '.)' → logprob: -14.376038551330566
    5. '.
' → logprob: -14.751038551330566
    6. '.point' → logprob: -15.001038551330566
    7. '<|end|>' → logprob: -15.501038551330566
    8. '.y' → logprob: -15.751038551330566
    9. '._' → logprob: -16.00103759765625
    10. '.`' → logprob: -16.25103759765625

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938445568084717
    2. ' =' → logprob: -0.6938445568084717
    3. ' ' → logprob: -8.06884479522705
    4. '.' → logprob: -9.19384479522705
    5. ')' → logprob: -9.19384479522705
    6. '<|end|>' → logprob: -9.44384479522705
    7. '_' → logprob: -10.31884479522705
    8. ' =)' → logprob: -10.56884479522705
    9. ',' → logprob: -11.31884479522705
    10. ' )' → logprob: -11.81884479522705

Token 33: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692978978157043
    2. ' x' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.376930236816406
    4. '	x' → logprob: -16.251930236816406
    5. ')x' → logprob: -17.751930236816406
    6. ')' → logprob: -18.876930236816406
    7. '<|end|>' → logprob: -19.001930236816406
    8. '(x' → logprob: -19.126930236816406
    9. '"x' → logprob: -19.376930236816406
    10. ' ' → logprob: -19.876930236816406

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5533164739608765
    2. '<|end|>' → logprob: -1.3033164739608765
    3. '
' → logprob: -2.178316593170166
    4. '        
' → logprob: -4.928316593170166
    5. ' 
' → logprob: -5.053316593170166
    6. '\n' → logprob: -5.178316593170166
    7. '        ' → logprob: -5.803316593170166
    8. ')' → logprob: -6.053316593170166
    9. '```' → logprob: -6.053316593170166
    10. 'newline' → logprob: -6.178316593170166

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7427882552146912
    2. '<|end|>' → logprob: -1.242788314819336
    3. '
' → logprob: -1.992788314819336
    4. '        
' → logprob: -3.367788314819336
    5. ' 
' → logprob: -4.117788314819336
    6. ' ' → logprob: -4.742788314819336
    7. '        ' → logprob: -4.742788314819336
    8. '    
' → logprob: -4.867788314819336
    9. '\n' → logprob: -5.117788314819336
    10. '   ' → logprob: -5.992788314819336

Token 36: ' self' (ID: 1051)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.24063746631145477
    2. ' ' → logprob: -1.8656374216079712
    3. ''' → logprob: -4.115637302398682
    4. 'y' → logprob: -4.490637302398682
    5. '        ' → logprob: -4.990637302398682
    6. 'self' (adapté à ' self') → logprob: -5.240637302398682
    7. '       ' → logprob: -5.240637302398682
    8. ' self' → logprob: -5.365637302398682
    9. ' 
' → logprob: -5.865637302398682
    10. ')' → logprob: -6.490637302398682

Token 37: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.3915141355246305e-05
    2. '.y' → logprob: -10.87502384185791
    3. ' .' → logprob: -12.37502384185791
    4. '.x' → logprob: -15.00002384185791
    5. ' ' → logprob: -16.625024795532227
    6. '.​' → logprob: -16.625024795532227
    7. '<|end|>' → logprob: -17.000024795532227
    8. '‌.' → logprob: -17.625024795532227
    9. '.

' → logprob: -18.000024795532227
    10. '.
' → logprob: -18.250024795532227

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10256870090961456
    2. '=' → logprob: -2.3525686264038086
    3. '.' → logprob: -6.102568626403809
    4. ' ' → logprob: -9.727568626403809
    5. ' =
' → logprob: -11.352568626403809
    6. ' .' → logprob: -11.602568626403809
    7. ')' → logprob: -11.852568626403809
    8. '<|end|>' → logprob: -11.852568626403809
    9. ' .=' → logprob: -12.102568626403809
    10. '.=' → logprob: -12.227568626403809

Token 39: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519296407699585
    2. 'y' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '	y' → logprob: -16.376930236816406
    6. '(y' → logprob: -18.751930236816406
    7. '‘y' → logprob: -18.751930236816406
    8. ''y' → logprob: -18.876930236816406
    9. '<|end|>' → logprob: -19.126930236816406
    10. ')y' → logprob: -19.251930236816406

Token 40: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3837093114852905
    2. '<|end|>' → logprob: -1.5087093114852905
    3. '
' → logprob: -3.13370943069458
    4. '\n' → logprob: -3.75870943069458
    5. '\' → logprob: -4.38370943069458
    6. ')' → logprob: -5.63370943069458
    7. '```' → logprob: -5.88370943069458
    8. '.
' → logprob: -6.25870943069458
    9. '' → logprob: -6.75870943069458
    10. 'n' → logprob: -6.88370943069458

Token 41: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05273910611867905
    2. '
' → logprob: -4.177739143371582
    3. '```' → logprob: -4.177739143371582
    4. '<|end|>' → logprob: -5.302739143371582
    5. ')' → logprob: -5.427739143371582
    6. ':' → logprob: -5.677739143371582
    7. '\' → logprob: -6.427739143371582
    8. '.
' → logprob: -6.552739143371582
    9. ',' → logprob: -6.677739143371582
    10. '\n' → logprob: -6.927739143371582

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06235774606466293
    2. '   ' → logprob: -3.9373576641082764
    3. '
' → logprob: -4.3123579025268555
    4. ' def' → logprob: -4.9373579025268555
    5. 'd' → logprob: -5.0623579025268555
    6. '    
' → logprob: -5.1873579025268555
    7. '@property' → logprob: -6.0623579025268555
    8. '\n' → logprob: -6.6873579025268555
    9. ' ' → logprob: -6.9373579025268555
    10. ' 
' → logprob: -7.0623579025268555

Token 43: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008150450885295868
    2. '_' → logprob: -5.133150577545166
    3. ' __' → logprob: -7.258150577545166
    4. '.' → logprob: -7.383150577545166
    5. ' space' → logprob: -7.758150577545166
    6. ' ' → logprob: -8.883150100708008
    7. ' .' → logprob: -9.883150100708008
    8. ' _' → logprob: -10.133150100708008
    9. ' distance' → logprob: -10.258150100708008
    10. 'space' → logprob: -10.508150100708008

Token 44: 'sub' (ID: 3834)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.9748443961143494
    2. 'repr' → logprob: -1.4748444557189941
    3. 'r' → logprob: -1.8498444557189941
    4. '_' → logprob: -2.474844455718994
    5. 's' → logprob: -2.724844455718994
    6. 'e' → logprob: -3.099844455718994
    7. 'str' → logprob: -4.099844455718994
    8. 'i' → logprob: -4.474844455718994
    9. 'a' → logprob: -5.474844455718994
    10. 're' → logprob: -6.099844455718994

Token 45: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22804561257362366
    2. '__(' → logprob: -1.6030455827713013
    3. '_' → logprob: -6.728045463562012
    4. '__(
' → logprob: -6.978045463562012
    5. '```' → logprob: -8.728045463562012
    6. '__((' → logprob: -9.478045463562012
    7. '(' → logprob: -9.478045463562012
    8. '(self' → logprob: -9.603045463562012
    9. '__('' → logprob: -9.728045463562012
    10. '___' → logprob: -11.103045463562012

Token 46: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06607827544212341
    2. ' self' → logprob: -3.0660781860351562
    3. 'other' → logprob: -4.316078186035156
    4. ' other' → logprob: -5.566078186035156
    5. ' ' → logprob: -9.691078186035156
    6. ')' → logprob: -10.691078186035156
    7. '   ' → logprob: -11.566078186035156
    8. 'o' → logprob: -11.566078186035156
    9. '`' → logprob: -11.816078186035156
    10. 's' → logprob: -11.816078186035156

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7346445918083191
    2. ' ,' → logprob: -0.9846445918083191
    3. ' ' → logprob: -1.9846446514129639
    4. ')' → logprob: -5.109644412994385
    5. '<|end|>' → logprob: -6.984644412994385
    6. ' )' → logprob: -7.234644412994385
    7. ' ' → logprob: -8.234644889831543
    8. ' space' → logprob: -8.234644889831543
    9. ' other' → logprob: -8.484644889831543
    10. '  ' → logprob: -8.859644889831543

Token 48: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3133370876312256
    2. ' other' → logprob: -1.3133370876312256
    3. ' o' → logprob: -10.438337326049805
    4. 'self' → logprob: -10.688337326049805
    5. 'o' → logprob: -11.188337326049805
    6. 'Other' → logprob: -12.438337326049805
    7. ' self' → logprob: -13.063337326049805
    8. ' ' → logprob: -14.063337326049805
    9. '(other' → logprob: -14.313337326049805
    10. '_other' → logprob: -14.313337326049805

Token 49: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02451328933238983
    2. ')' → logprob: -3.7745132446289062
    3. ',' → logprob: -7.149513244628906
    4. ':' → logprob: -7.899513244628906
    5. '):
' → logprob: -9.524513244628906
    6. ' ):' → logprob: -10.649513244628906
    7. '<|end|>' → logprob: -11.899513244628906
    8. '),' → logprob: -13.899513244628906
    9. ' )' → logprob: -13.899513244628906
    10. ' ' → logprob: -14.399513244628906

Token 50: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7121570110321045
    2. ' Point' → logprob: -0.7121570110321045
    3. ' )' → logprob: -4.462157249450684
    4. ')' → logprob: -5.462157249450684
    5. 'Point' → logprob: -6.337157249450684
    6. '<|end|>' → logprob: -8.212157249450684
    7. ' '' → logprob: -8.462157249450684
    8. ' space' → logprob: -8.962157249450684
    9. ' ' → logprob: -9.337157249450684
    10. ' point' → logprob: -9.462157249450684

Token 51: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0016000831965357065
    2. 'P' → logprob: -6.50160026550293
    3. 'Po' → logprob: -9.62660026550293
    4. ' Point' → logprob: -11.12660026550293
    5. 'Poi' → logprob: -11.25160026550293
    6. '	Point' → logprob: -13.87660026550293
    7. 'Points' → logprob: -14.00160026550293
    8. '<Point' → logprob: -14.12660026550293
    9. '_Point' → logprob: -14.50160026550293
    10. '.Point' → logprob: -14.62660026550293

Token 52: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.41264763474464417
    2. ''):' → logprob: -1.1626476049423218
    3. ')' → logprob: -3.9126477241516113
    4. '):' → logprob: -5.287647724151611
    5. ':' → logprob: -8.162647247314453
    6. ''):
' → logprob: -9.537647247314453
    7. '':' → logprob: -11.162647247314453
    8. '')->' → logprob: -11.287647247314453
    9. ''):
' → logprob: -12.162647247314453
    10. '`)' → logprob: -12.412647247314453

Token 53: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010887817479670048
    2. '):' → logprob: -7.251088619232178
    3. ' :' → logprob: -8.501089096069336
    4. ':
' → logprob: -9.751089096069336
    5. ':return' → logprob: -10.501089096069336
    6. ')' → logprob: -10.626089096069336
    7. '():' → logprob: -11.001089096069336
    8. '(' → logprob: -11.251089096069336
    9. ' ->' → logprob: -11.626089096069336
    10. '->' → logprob: -11.626089096069336

Token 54: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.2882412075996399
    2. ' '' → logprob: -1.7882411479949951
    3. ''' → logprob: -2.913241147994995
    4. 'Point' → logprob: -3.788241147994995
    5. ' int' → logprob: -5.663241386413574
    6. ' ' → logprob: -7.288241386413574
    7. 'int' → logprob: -7.538241386413574
    8. '	Point' → logprob: -7.663241386413574
    9. ' ' → logprob: -8.163241386413574
    10. ' float' → logprob: -8.788241386413574

Token 55: 'Vector' (ID: 7580)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.003013953333720565
    2. ' Point' → logprob: -6.253014087677002
    3. 'P' → logprob: -7.753014087677002
    4. 'Po' → logprob: -8.128013610839844
    5. 'int' → logprob: -8.378013610839844
    6. 'Poi' → logprob: -9.753013610839844
    7. '	Point' → logprob: -10.628013610839844
    8. '_Point' → logprob: -11.503013610839844
    9. 'Vector' → logprob: -12.128013610839844
    10. '.Point' → logprob: -12.253013610839844

Token 56: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03565310686826706
    2. ''' → logprob: -3.4106531143188477
    3. ':' → logprob: -7.285653114318848
    4. '(':' → logprob: -7.410653114318848
    5. '':
' → logprob: -7.785653114318848
    6. ' ':' → logprob: -8.910653114318848
    7. '('' → logprob: -10.410653114318848
    8. '':'' → logprob: -10.410653114318848
    9. '):' → logprob: -10.910653114318848
    10. ''):' → logprob: -11.285653114318848

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4040028750896454
    2. ':' → logprob: -1.7790029048919678
    3. '<|end|>' → logprob: -2.1540029048919678
    4. ':
' → logprob: -4.279002666473389
    5. '
' → logprob: -4.779002666473389
    6. ':return' → logprob: -5.279002666473389
    7. ' ' → logprob: -5.404002666473389
    8. ' :' → logprob: -5.529002666473389
    9. '   ' → logprob: -5.779002666473389
    10. ' return' → logprob: -5.779002666473389

Token 58: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.03548595309257507
    2. ' ' → logprob: -3.5354859828948975
    3. 'return' (adapté à ' return') → logprob: -6.160485744476318
    4. 'r' → logprob: -6.660485744476318
    5. ' return' → logprob: -7.035485744476318
    6. '  
' → logprob: -7.410485744476318
    7. '    
' → logprob: -8.410486221313477
    8. ' ' → logprob: -9.035486221313477
    9. '
' → logprob: -9.660486221313477
    10. '        
' → logprob: -10.285486221313477

Token 59: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.011166906915605068
    2. ' self' → logprob: -5.136167049407959
    3. ' ' → logprob: -5.386167049407959
    4. 'Vector' → logprob: -8.1361665725708
    5. ' ' → logprob: -8.5111665725708
    6. 'self' → logprob: -9.6361665725708
    7. ' Point' → logprob: -10.1361665725708
    8. ' Vec' → logprob: -11.6361665725708
    9. '_Vector' → logprob: -11.6361665725708
    10. ' vector' → logprob: -12.0111665725708

Token 60: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00123332638759166
    2. '(self' → logprob: -6.751233100891113
    3. '(
' → logprob: -10.251233100891113
    4. '((' → logprob: -11.626233100891113
    5. '(x' → logprob: -12.001233100891113
    6. '('' → logprob: -12.376233100891113
    7. ' (' → logprob: -12.751233100891113
    8. '(s' → logprob: -13.251233100891113
    9. '(

' → logprob: -13.626233100891113
    10. '(this' → logprob: -14.751233100891113

Token 61: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.038480233401060104
    2. '.' → logprob: -3.288480281829834
    3. 'x' → logprob: -7.788480281829834
    4. ' .' → logprob: -10.788479804992676
    5. ').' → logprob: -14.413479804992676
    6. ' -' → logprob: -14.788479804992676
    7. ' ' → logprob: -14.788479804992676
    8. ' x' → logprob: -15.288479804992676
    9. '.
' → logprob: -15.288479804992676
    10. ',' → logprob: -15.413479804992676

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00020628207130357623
    2. '-' → logprob: -8.500205993652344
    3. ' –' → logprob: -13.500205993652344
    4. ' ' → logprob: -13.875205993652344
    5. ' ' → logprob: -15.750205993652344
    6. ' —' → logprob: -16.250205993652344
    7. '<|end|>' → logprob: -16.500205993652344
    8. ' −' → logprob: -16.875205993652344
    9. ' -
' → logprob: -17.250205993652344
    10. ')' → logprob: -17.750205993652344

Token 63: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.11341177672147751
    2. 'other' → logprob: -2.2384116649627686
    3. '<|end|>' → logprob: -7.613411903381348
    4. ' ' → logprob: -9.863411903381348
    5. '(other' → logprob: -10.738411903381348
    6. '_other' → logprob: -11.488411903381348
    7. '.other' → logprob: -11.988411903381348
    8. 'Other' → logprob: -13.488411903381348
    9. '<|end|>' → logprob: -13.738411903381348
    10. ' ' → logprob: -13.738411903381348

Token 64: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31338831782341003
    2. '.x' → logprob: -1.3133883476257324
    3. ' .' → logprob: -9.938387870788574
    4. ').' → logprob: -10.938387870788574
    5. '<|end|>' → logprob: -11.063387870788574
    6. '`.' → logprob: -11.563387870788574
    7. '.
' → logprob: -11.938387870788574
    8. ' ' → logprob: -12.063387870788574
    9. ''.' → logprob: -12.313387870788574
    10. '".' → logprob: -12.688387870788574

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032021927181631327
    2. ' ,' → logprob: -5.753201961517334
    3. ')' → logprob: -11.378202438354492
    4. ',
' → logprob: -11.628202438354492
    5. '<|end|>' → logprob: -13.628202438354492
    6. ',self' → logprob: -14.253202438354492
    7. ',y' → logprob: -14.253202438354492
    8. '),' → logprob: -14.753202438354492
    9. ' ' → logprob: -15.003202438354492
    10. ' ,
' → logprob: -15.753202438354492

Token 66: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.12549835443496704
    2. '.' → logprob: -2.2504982948303223
    3. '.x' → logprob: -4.375498294830322
    4. ' .' → logprob: -12.37549877166748
    5. 'y' → logprob: -13.12549877166748
    6. ').' → logprob: -13.37549877166748
    7. '<|end|>' → logprob: -13.50049877166748
    8. '[' → logprob: -13.75049877166748
    9. ')' → logprob: -14.50049877166748
    10. '.s' → logprob: -14.75049877166748

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0008220185991376638
    2. '-' → logprob: -7.250822067260742
    3. ')' → logprob: -9.875822067260742
    4. '<|end|>' → logprob: -10.000822067260742
    5. ' )' → logprob: -12.125822067260742
    6. ' ' → logprob: -12.125822067260742
    7. ' ' → logprob: -13.375822067260742
    8. '<|end|>' → logprob: -13.625822067260742
    9. '-)' → logprob: -13.875822067260742
    10. ' –' → logprob: -15.000822067260742

Token 69: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.4740982949733734
    2. ' other' → logprob: -0.9740983247756958
    3. '<|end|>' → logprob: -11.099098205566406
    4. '(other' → logprob: -13.224098205566406
    5. ' ' → logprob: -13.224098205566406
    6. '.other' → logprob: -13.849098205566406
    7. 'Other' → logprob: -14.474098205566406
    8. '_other' → logprob: -14.474098205566406
    9. 'y' → logprob: -15.599098205566406
    10. 'othe' → logprob: -15.849098205566406

Token 70: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.05838138610124588
    2. '.' → logprob: -3.0583813190460205
    3. ')' → logprob: -4.9333815574646
    4. 'y' → logprob: -6.5583815574646
    5. '<|end|>' → logprob: -6.9333815574646
    6. '	y' → logprob: -10.558381080627441
    7. ').' → logprob: -10.558381080627441
    8. '<|end|>' → logprob: -10.808381080627441
    9. ' y' → logprob: -11.058381080627441
    10. '.)' → logprob: -11.308381080627441

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.069664333248511e-05
    2. ')
' → logprob: -10.875020980834961
    3. ' )' → logprob: -14.250020980834961
    4. '<|end|>' → logprob: -14.500020980834961
    5. '   ' → logprob: -15.875020980834961
    6. ')

' → logprob: -16.62502098083496
    7. '       ' → logprob: -17.00002098083496
    8. ')return' → logprob: -17.12502098083496
    9. '`)' → logprob: -17.37502098083496
    10. '')' → logprob: -17.50002098083496

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5128759741783142
    2. '<|end|>' → logprob: -1.387876033782959
    3. '```' → logprob: -2.387876033782959
    4. '

' → logprob: -3.512876033782959
    5. ' ' → logprob: -5.512876033782959
    6. ' 
' → logprob: -5.762876033782959
    7. '' → logprob: -5.887876033782959
    8. '.' → logprob: -6.012876033782959
    9. '\n' → logprob: -6.262876033782959
    10. ' 

' → logprob: -6.262876033782959

Token 73: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056254081428050995
    2. '   ' → logprob: -3.4312541484832764
    3. 'class' → logprob: -4.931253910064697
    4. '```' → logprob: -5.056253910064697
    5. '<|end|>' → logprob: -5.806253910064697
    6. '    
' → logprob: -6.681253910064697
    7. ' 
' → logprob: -6.681253910064697
    8. ' ' → logprob: -6.806253910064697
    9. 'def' (adapté à ' def') → logprob: -7.056253910064697
    10. '' → logprob: -8.056254386901855

Token 74: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13568514585494995
    2. ' __' → logprob: -3.0106852054595947
    3. '_' → logprob: -3.1356852054595947
    4. ' ' → logprob: -5.385684967041016
    5. '.' → logprob: -5.510684967041016
    6. ' distance' → logprob: -5.510684967041016
    7. 'distance' → logprob: -5.760684967041016
    8. ' ﻿' → logprob: -6.635684967041016
    9. ' def' → logprob: -6.698184967041016
    10. ' ​' → logprob: -6.698184967041016

Token 75: 'add' (ID: 964)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.3579798936843872
    2. 'add' → logprob: -1.2329798936843872
    3. 'a' → logprob: -5.107979774475098
    4. 'repr' → logprob: -6.357979774475098
    5. 'r' → logprob: -7.107979774475098
    6. 'ad' → logprob: -7.857979774475098
    7. 'e' → logprob: -8.607979774475098
    8. 'd' → logprob: -8.857979774475098
    9. 'i' → logprob: -9.357979774475098
    10. 'lt' → logprob: -10.482979774475098

Token 76: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6990171670913696
    2. '__(' → logprob: -0.6990171670913696
    3. '__('' → logprob: -5.44901704788208
    4. '__((' → logprob: -7.19901704788208
    5. '__(
' → logprob: -7.44901704788208
    6. '__(*' → logprob: -9.324017524719238
    7. '__("' → logprob: -9.699017524719238
    8. '_' → logprob: -10.449017524719238
    9. '(' → logprob: -10.574017524719238
    10. '__(/*!' → logprob: -12.449017524719238

Token 77: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03698547184467316
    2. ' self' → logprob: -3.911985397338867
    3. 'other' → logprob: -4.161985397338867
    4. ' other' → logprob: -7.286985397338867
    5. '(self' → logprob: -10.911985397338867
    6. ' ' → logprob: -11.411985397338867
    7. 'Other' → logprob: -12.161985397338867
    8. '	self' → logprob: -12.536985397338867
    9. '<|end|>' → logprob: -12.536985397338867
    10. '  ' → logprob: -13.661985397338867

Token 78: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02823210135102272
    2. '__' → logprob: -4.028232097625732
    3. '__('' → logprob: -5.153232097625732
    4. '__(
' → logprob: -6.153232097625732
    5. '(' → logprob: -6.903232097625732
    6. '__((' → logprob: -7.278232097625732
    7. ' (' → logprob: -8.40323257446289
    8. '__(*' → logprob: -9.02823257446289
    9. '__("' → logprob: -10.52823257446289
    10. '(self' → logprob: -10.65323257446289

Token 79: ' vector' (ID: 9727)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06281191855669022
    2. 'other' → logprob: -2.812811851501465
    3. ' '' → logprob: -8.312811851501465
    4. ' ' → logprob: -8.437811851501465
    5. 'Other' → logprob: -8.562811851501465
    6. ''' → logprob: -9.812811851501465
    7. ' self' → logprob: -10.312811851501465
    8. ' ' → logprob: -10.687811851501465
    9. '<|end|>' → logprob: -10.812811851501465
    10. '_other' → logprob: -10.937811851501465

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5617365837097168
    2. '):' → logprob: -1.1867365837097168
    3. '<|end|>' → logprob: -2.436736583709717
    4. ' :' → logprob: -4.686736583709717
    5. ' ):' → logprob: -4.686736583709717
    6. ')' → logprob: -4.686736583709717
    7. '<|end|>' → logprob: -4.811736583709717
    8. ''):' → logprob: -7.936736583709717
    9. ' )' → logprob: -8.186737060546875
    10. ' ' → logprob: -8.311737060546875

Token 81: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5846472978591919
    2. ' '' → logprob: -0.9596472978591919
    3. ' Vector' → logprob: -3.2096471786499023
    4. '<|end|>' → logprob: -4.834647178649902
    5. ' )' → logprob: -5.084647178649902
    6. ' vector' → logprob: -5.834647178649902
    7. ')' → logprob: -7.209647178649902
    8. 'Vector' → logprob: -7.584647178649902
    9. ' ' → logprob: -7.959647178649902
    10. ' ')' → logprob: -8.459647178649902

Token 82: 'Vector' (ID: 7580)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.4740866422653198
    2. 'Vector' → logprob: -0.9740866422653198
    3. ' vector' → logprob: -12.59908676147461
    4. '	Vector' → logprob: -13.09908676147461
    5. '_Vector' → logprob: -13.09908676147461
    6. '<Vector' → logprob: -14.09908676147461
    7. ' ' → logprob: -14.34908676147461
    8. '.Vector' → logprob: -15.22408676147461
    9. ' ' → logprob: -15.84908676147461
    10. '_vector' → logprob: -16.72408676147461

Token 83: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10226817429065704
    2. ''):' → logprob: -2.4772682189941406
    3. ')' → logprob: -4.352268218994141
    4. '):' → logprob: -8.60226821899414
    5. ' ')' → logprob: -9.22726821899414
    6. ':' → logprob: -10.72726821899414
    7. ''' → logprob: -11.10226821899414
    8. ''):
' → logprob: -11.35226821899414
    9. '':' → logprob: -11.35226821899414
    10. '',' → logprob: -12.60226821899414

Token 84: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004125575942452997
    2. ' ->' → logprob: -9.000412940979004
    3. '->' → logprob: -9.125412940979004
    4. ' :' → logprob: -9.125412940979004
    5. '):' → logprob: -10.875412940979004
    6. ':
' → logprob: -10.875412940979004
    7. ':return' → logprob: -11.000412940979004
    8. ')' → logprob: -12.000412940979004
    9. '<|end|>' → logprob: -12.000412940979004
    10. '   ' → logprob: -13.500412940979004

Token 85: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.5039412379264832
    2. ' '' → logprob: -1.128941297531128
    3. ''' → logprob: -2.753941297531128
    4. ' ' → logprob: -5.253941059112549
    5. 'Point' → logprob: -6.003941059112549
    6. ' ' → logprob: -7.378941059112549
    7. '	Point' → logprob: -8.128941535949707
    8. '_Point' → logprob: -9.878941535949707
    9. '<Point' → logprob: -10.003941535949707
    10. '<|end|>' → logprob: -10.378941535949707

Token 86: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009188431431539357
    2. ' Point' → logprob: -7.000918865203857
    3. '	Point' → logprob: -12.5009183883667
    4. '.Point' → logprob: -14.1259183883667
    5. 'Po' → logprob: -14.1259183883667
    6. 'P' → logprob: -14.1259183883667
    7. '_Point' → logprob: -14.2509183883667
    8. '<Point' → logprob: -14.8759183883667
    9. 'Poi' → logprob: -15.2509183883667
    10. '_point' → logprob: -16.625919342041016

Token 87: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.035935480147600174
    2. '):' → logprob: -4.285935401916504
    3. ':' → logprob: -4.535935401916504
    4. ''):' → logprob: -5.035935401916504
    5. ''' → logprob: -5.910935401916504
    6. '(':' → logprob: -7.410935401916504
    7. ')' → logprob: -8.160935401916504
    8. '('' → logprob: -8.285935401916504
    9. '')' → logprob: -8.535935401916504
    10. '':
' → logprob: -9.660935401916504

Token 88: '       ' (ID: 309)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.2992950677871704
    2. ' Vector' → logprob: -2.049294948577881
    3. ' ' → logprob: -2.924294948577881
    4. ' 
' → logprob: -3.549294948577881
    5. '<|end|>' → logprob: -4.049294948577881
    6. ' self' → logprob: -4.549294948577881
    7. 'Point' → logprob: -5.549294948577881
    8. '   ' → logprob: -5.924294948577881
    9. ' ' → logprob: -6.049294948577881
    10. 'Vector' → logprob: -6.049294948577881

Token 89: ' return' (ID: 622)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.7724691033363342
    2. ' return' → logprob: -1.6474690437316895
    3. 'return' (adapté à ' return') → logprob: -1.8974690437316895
    4. 'Point' → logprob: -1.8974690437316895
    5. '       ' → logprob: -3.7724690437316895
    6. ' 
' → logprob: -4.5224690437316895
    7. '<|end|>' → logprob: -4.8974690437316895
    8. '(Point' → logprob: -6.3974690437316895
    9. '        
' → logprob: -7.6474690437316895
    10. '	Point' → logprob: -8.022469520568848

Token 90: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.012516246177256107
    2. 'Point' → logprob: -4.387516021728516
    3. '	Point' → logprob: -12.262516021728516
    4. '   ' → logprob: -14.637516021728516
    5. '(Point' → logprob: -15.137516021728516
    6. '.Point' → logprob: -15.137516021728516
    7. '_Point' → logprob: -15.262516021728516
    8. ' ' → logprob: -15.637516021728516
    9. ' self' → logprob: -15.762516021728516
    10. ' class' → logprob: -16.137516021728516

Token 91: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07896767556667328
    2. '(' → logprob: -2.578967571258545
    3. '(
' → logprob: -9.953968048095703
    4. '(s' → logprob: -10.453968048095703
    5. '((' → logprob: -13.828968048095703
    6. ' (' → logprob: -15.203968048095703
    7. '(

' → logprob: -16.453968048095703
    8. '(this' → logprob: -16.578968048095703
    9. 'self' → logprob: -17.078968048095703
    10. '(sel' → logprob: -17.328968048095703

Token 92: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47410959005355835
    2. '.x' → logprob: -0.9741095900535583
    3. ' .' → logprob: -11.099109649658203
    4. ' ' → logprob: -11.599109649658203
    5. 'x' → logprob: -12.224109649658203
    6. '.
' → logprob: -14.224109649658203
    7. '<|end|>' → logprob: -14.224109649658203
    8. ')' → logprob: -15.474109649658203
    9. '<|end|>' → logprob: -15.474109649658203
    10. '.

' → logprob: -15.724109649658203

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.004464773926883936
    2. '+' → logprob: -5.504464626312256
    3. ' ' → logprob: -7.879464626312256
    4. ' ' → logprob: -12.504465103149414
    5. ' plus' → logprob: -12.504465103149414
    6. ' +
' → logprob: -15.879465103149414
    7. '<|end|>' → logprob: -16.504465103149414
    8. ' +=' → logprob: -17.004465103149414
    9. ' ,' → logprob: -17.379465103149414
    10. ' +#+' → logprob: -17.754465103149414

Token 94: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.023246292024850845
    2. 'vector' → logprob: -3.7732462882995605
    3. '(vector' → logprob: -15.023246765136719
    4. '	vector' → logprob: -15.523246765136719
    5. ' ' → logprob: -16.14824676513672
    6. '<vector' → logprob: -16.52324676513672
    7. '<|end|>' → logprob: -17.52324676513672
    8. '_vector' → logprob: -17.64824676513672
    9. '.vector' → logprob: -18.02324676513672
    10. ' v' → logprob: -18.39824676513672

Token 95: '.dx' (ID: 111318)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.04881082475185394
    2. '.' → logprob: -3.0488107204437256
    3. ' .' → logprob: -8.798810958862305
    4. '.dx' → logprob: -10.673810958862305
    5. '.v' → logprob: -10.798810958862305
    6. '.i' → logprob: -11.798810958862305
    7. '.value' → logprob: -12.048810958862305
    8. '._' → logprob: -13.048810958862305
    9. ' ' → logprob: -13.548810958862305
    10. '.s' → logprob: -13.673810958862305

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011727249948307872
    2. ' ,' → logprob: -6.7511725425720215
    3. ',
' → logprob: -13.37617301940918
    4. ')' → logprob: -14.37617301940918
    5. '‌,' → logprob: -15.75117301940918
    6. '<|end|>' → logprob: -16.00117301940918
    7. ',

' → logprob: -17.87617301940918
    8. ' ,
' → logprob: -18.00117301940918
    9. ' ' → logprob: -18.00117301940918
    10. '_,' → logprob: -18.25117301940918

Token 97: ' self' (ID: 1051)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.09197072684764862
    2. 'vector' → logprob: -3.091970682144165
    3. '<|end|>' → logprob: -3.716970682144165
    4. ' ' → logprob: -4.091970920562744
    5. ' ' → logprob: -6.966970920562744
    6. ' 
' → logprob: -9.966970443725586
    7. '        ' → logprob: -10.091970443725586
    8. ')' → logprob: -10.091970443725586
    9. '(vector' → logprob: -10.091970443725586
    10. '<vector' → logprob: -10.216970443725586

Token 98: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012510828673839569
    2. '.dx' → logprob: -4.887510776519775
    3. '.dy' → logprob: -6.012510776519775
    4. '<|end|>' → logprob: -6.387510776519775
    5. ')' → logprob: -7.637510776519775
    6. '.d' → logprob: -9.762511253356934
    7. ').' → logprob: -10.012511253356934
    8. '.
' → logprob: -10.512511253356934
    9. '.y' → logprob: -10.887511253356934
    10. ' .' → logprob: -11.012511253356934

Token 99: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' vector' (ID: 9727)
  Prédit: ' vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.4740796685218811
    2. 'vector' → logprob: -0.9740796685218811
    3. '(vector' → logprob: -14.224080085754395
    4. ' ' → logprob: -14.724080085754395
    5. '<|end|>' → logprob: -14.724080085754395
    6. '	vector' → logprob: -14.974080085754395
    7. '.vector' → logprob: -15.349080085754395
    8. '<vector' → logprob: -15.599080085754395
    9. 'v' → logprob: -16.599079132080078
    10. ' ' → logprob: -16.724079132080078

Token 101: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -0.6148072481155396
    2. '.dx' → logprob: -1.2398072481155396
    3. '.' → logprob: -1.8648072481155396
    4. '.d' → logprob: -4.23980712890625
    5. '.dg' → logprob: -9.36480712890625
    6. '.ds' → logprob: -9.48980712890625
    7. '.dp' → logprob: -9.86480712890625
    8. ' .' → logprob: -10.23980712890625
    9. '.dj' → logprob: -10.36480712890625
    10. '<|end|>' → logprob: -10.61480712890625

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.125008583068848
    4. '<|end|>' → logprob: -16.625009536743164
    5. '')' → logprob: -17.375009536743164
    6. ')

' → logprob: -17.625009536743164
    7. ')return' → logprob: -17.625009536743164
    8. '   ' → logprob: -18.250009536743164
    9. '       ' → logprob: -18.750009536743164
    10. ')#' → logprob: -19.000009536743164

Token 103: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.314516544342041
    2. 'class' → logprob: -1.314516544342041
    3. '<|end|>' → logprob: -7.689516544342041
    4. '

' → logprob: -8.314516067504883
    5. '   ' → logprob: -8.439516067504883
    6. ' class' → logprob: -9.064516067504883
    7. '```' → logprob: -9.314516067504883
    8. '	class' → logprob: -11.189516067504883
    9. '    
' → logprob: -11.189516067504883
    10. '' → logprob: -11.189516067504883

Token 104: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.621933451038785e-05
    2. '
' → logprob: -9.875056266784668
    3. '   ' → logprob: -13.625056266784668
    4. '```' → logprob: -13.750056266784668
    5. ' class' → logprob: -14.000056266784668
    6. '    
' → logprob: -15.125056266784668
    7. '<class' → logprob: -15.500056266784668
    8. 'from' → logprob: -15.750056266784668
    9. 'classmethod' → logprob: -15.875056266784668
    10. 'def' (adapté à ' def') → logprob: -16.25005531311035

Token 105: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5757273435592651
    2. ' __' → logprob: -1.0757273435592651
    3. ' distance' → logprob: -2.7007274627685547
    4. ' tuple' → logprob: -4.200727462768555
    5. ' def' → logprob: -5.325727462768555
    6. '_' → logprob: -5.825727462768555
    7. ' ' → logprob: -6.325727462768555
    8. '_repr' → logprob: -7.200727462768555
    9. ' as' → logprob: -7.700727462768555
    10. ' _' → logprob: -7.825727462768555

Token 106: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.03414962813258171
    2. 'repr' → logprob: -3.409149646759033
    3. 'r' → logprob: -8.159149169921875
    4. 'e' → logprob: -8.659149169921875
    5. 'lt' → logprob: -10.659149169921875
    6. 're' → logprob: -12.034149169921875
    7. 'i' → logprob: -12.659149169921875
    8. 'str' → logprob: -12.909149169921875
    9. 'rep' → logprob: -13.034149169921875
    10. 'mul' → logprob: -13.409149169921875

Token 107: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06200454384088516
    2. '__(' → logprob: -2.812004566192627
    3. '__((' → logprob: -10.937004089355469
    4. '__('' → logprob: -11.312004089355469
    5. '__(
' → logprob: -12.937004089355469
    6. '___' → logprob: -13.562004089355469
    7. '__.__' → logprob: -13.687004089355469
    8. '__(*' → logprob: -13.812004089355469
    9. '__("' → logprob: -14.687004089355469
    10. '_' → logprob: -15.312004089355469

Token 108: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002141812816262245
    2. 'other' → logprob: -6.627141952514648
    3. ' self' → logprob: -7.127141952514648
    4. ' other' → logprob: -11.877141952514648
    5. ')' → logprob: -13.377141952514648
    6. ' ' → logprob: -13.502141952514648
    7. '(self' → logprob: -13.502141952514648
    8. '   ' → logprob: -14.377141952514648
    9. '	self' → logprob: -15.752141952514648
    10. '0' → logprob: -16.25214195251465

Token 109: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2685319781303406
    2. '__' → logprob: -2.5185320377349854
    3. '__,' → logprob: -2.6435320377349854
    4. ',' → logprob: -2.8935320377349854
    5. 'self' → logprob: -4.393531799316406
    6. '(self' → logprob: -4.393531799316406
    7. '__((' → logprob: -6.893531799316406
    8. '__('' → logprob: -7.018531799316406
    9. '__(
' → logprob: -7.268531799316406
    10. '__,
' → logprob: -8.393531799316406

Token 110: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3868725895881653
    2. 'other' → logprob: -1.1368725299835205
    3. 'self' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.761872291564941
    5. ' self' → logprob: -15.511872291564941
    6. 'Other' → logprob: -15.886872291564941
    7. '(other' → logprob: -16.511873245239258
    8. '_other' → logprob: -17.136873245239258
    9. 'o' → logprob: -17.636873245239258
    10. '   ' → logprob: -17.761873245239258

Token 111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46606600284576416
    2. ')' → logprob: -1.5910660028457642
    3. '):' → logprob: -2.5910658836364746
    4. ' :' → logprob: -3.4660658836364746
    5. ' ):' → logprob: -3.5910658836364746
    6. ' )' → logprob: -3.9660658836364746
    7. ' ' → logprob: -5.216065883636475
    8. '<|end|>' → logprob: -5.591065883636475
    9. '<|end|>' → logprob: -5.716065883636475
    10. ',' → logprob: -6.841065883636475

Token 112: ' object' (ID: 2817)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.2929442822933197
    2. ''' → logprob: -1.417944312095642
    3. ' ' → logprob: -4.667944431304932
    4. ')' → logprob: -6.292944431304932
    5. ''s' → logprob: -9.417943954467773
    6. 'None' → logprob: -9.417943954467773
    7. ' None' → logprob: -10.042943954467773
    8. '<|end|>' → logprob: -10.042943954467773
    9. ''value' → logprob: -10.292943954467773
    10. '  ' → logprob: -10.292943954467773

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20157314836978912
    2. '):' → logprob: -1.701573133468628
    3. ':' → logprob: -9.201573371887207
    4. '):
' → logprob: -9.951573371887207
    5. ' )' → logprob: -12.576573371887207
    6. ')->' → logprob: -13.201573371887207
    7. ' ):' → logprob: -13.201573371887207
    8. '   ' → logprob: -13.451573371887207
    9. ')=' → logprob: -14.576573371887207
    10. '),' → logprob: -14.576573371887207

Token 114: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003175456076860428
    2. '):' → logprob: -6.378175258636475
    3. ' :' → logprob: -7.253175258636475
    4. ')' → logprob: -7.628175258636475
    5. ':
' → logprob: -8.878175735473633
    6. ' ->' → logprob: -10.378175735473633
    7. '   ' → logprob: -10.378175735473633
    8. ':return' → logprob: -11.003175735473633
    9. '->' → logprob: -11.128175735473633
    10. '):
' → logprob: -11.253175735473633

Token 115: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.47412392497062683
    2. ' bool' → logprob: -0.9741239547729492
    3. '	bool' → logprob: -11.34912395477295
    4. ' ' → logprob: -11.59912395477295
    5. '<bool' → logprob: -11.84912395477295
    6. 'True' → logprob: -12.47412395477295
    7. ' ' → logprob: -12.47412395477295
    8. ' True' → logprob: -12.84912395477295
    9. '  ' → logprob: -13.22412395477295
    10. ''' → logprob: -13.34912395477295

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001645430107600987
    2. ':
' → logprob: -6.626645565032959
    3. ' :' → logprob: -8.2516450881958
    4. '):' → logprob: -10.5016450881958
    5. '<|end|>' → logprob: -11.2516450881958
    6. '():' → logprob: -12.3766450881958
    7. ':return' → logprob: -12.6266450881958
    8. '):
' → logprob: -13.2516450881958
    9. ' :
' → logprob: -13.5016450881958
    10. ':

' → logprob: -13.6266450881958

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1804370880126953
    2. '<|end|>' → logprob: -1.9304370880126953
    3. ' True' → logprob: -2.0554370880126953
    4. '    ' → logprob: -2.0554370880126953
    5. ' isinstance' → logprob: -2.1804370880126953
    6. '   ' → logprob: -2.8054370880126953
    7. ' ' → logprob: -3.4304370880126953
    8. ' (' → logprob: -3.8054370880126953
    9. ' 
' → logprob: -4.305437088012695
    10. '
' → logprob: -4.805437088012695

Token 118: ' if' (ID: 538)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.9835895299911499
    2. 'if' (adapté à ' if') → logprob: -1.23358952999115
    3. ' if' → logprob: -1.85858952999115
    4. 'is' → logprob: -1.98358952999115
    5. '       ' → logprob: -3.3585896492004395
    6. 'return' → logprob: -5.7335896492004395
    7. 'True' → logprob: -6.6085896492004395
    8. ' return' → logprob: -6.9835896492004395
    9. ' True' → logprob: -8.233589172363281
    10. '   ' → logprob: -8.733589172363281

Token 119: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.055348217487335205
    2. ' isinstance' → logprob: -3.5553481578826904
    3. 'not' → logprob: -3.6803481578826904
    4. '	not' → logprob: -11.18034839630127
    5. ' ' → logprob: -11.30534839630127
    6. 'is' → logprob: -11.68034839630127
    7. '   ' → logprob: -11.80534839630127
    8. ' self' → logprob: -12.05534839630127
    9. '    ' → logprob: -12.68034839630127
    10. '  ' → logprob: -13.18034839630127

Token 120: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.006715967319905758
    2. 'is' → logprob: -5.006715774536133
    3. ' is' → logprob: -15.381715774536133
    4. '
' → logprob: -15.631715774536133
    5. '   ' → logprob: -16.006715774536133
    6. ' hasattr' → logprob: -16.756715774536133
    7. '(is' → logprob: -17.256715774536133
    8. '    ' → logprob: -17.881715774536133
    9. '  ' → logprob: -17.881715774536133
    10. ' ' → logprob: -19.006715774536133

Token 121: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -9.782141569303349e-05
    2. 'other' → logprob: -9.50009822845459
    3. '(' → logprob: -10.75009822845459
    4. ' other' → logprob: -13.50009822845459
    5. 'Other' → logprob: -17.250097274780273
    6. '(
' → logprob: -17.250097274780273
    7. '(o' → logprob: -17.500097274780273
    8. '(object' → logprob: -17.750097274780273
    9. '.other' → logprob: -18.375097274780273
    10. '_other' → logprob: -18.750097274780273

Token 122: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0019975120667368174
    2. '(' → logprob: -6.501997470855713
    3. ' (' → logprob: -8.626997947692871
    4. 'other' → logprob: -8.751997947692871
    5. ',' → logprob: -9.501997947692871
    6. '(self' → logprob: -10.126997947692871
    7. ' other' → logprob: -10.251997947692871
    8. ')' → logprob: -13.126997947692871
    9. '(object' → logprob: -13.251997947692871
    10. '(
' → logprob: -13.876997947692871

Token 123: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.12697577476501465
    2. 'Point' → logprob: -2.1269757747650146
    3. '	Point' → logprob: -10.126976013183594
    4. ' ' → logprob: -12.626976013183594
    5. '(Point' → logprob: -13.501976013183594
    6. '_Point' → logprob: -13.501976013183594
    7. '<Point' → logprob: -13.626976013183594
    8. '.Point' → logprob: -16.376976013183594
    9. '  ' → logprob: -16.626976013183594
    10. ' ' → logprob: -17.376976013183594

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024278635159134865
    2. '):
' → logprob: -3.7742786407470703
    3. ')' → logprob: -7.02427864074707
    4. ' ):' → logprob: -8.89927864074707
    5. '):
' → logprob: -13.39927864074707
    6. '):

' → logprob: -13.52427864074707
    7. ' ):
' → logprob: -13.52427864074707
    8. '   ' → logprob: -14.39927864074707
    9. ':' → logprob: -14.89927864074707
    10. ' )' → logprob: -15.52427864074707

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003946367651224136
    2. 'return' → logprob: -6.378946304321289
    3. ' return' → logprob: -6.503946304321289
    4. ':return' → logprob: -8.128946304321289
    5. 'True' → logprob: -9.003946304321289
    6. '
' → logprob: -9.253946304321289
    7. ' True' → logprob: -9.878946304321289
    8. '               ' → logprob: -10.253946304321289
    9. 'False' → logprob: -10.253946304321289
    10. '<|end|>' → logprob: -10.378946304321289

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17406027019023895
    2. '           ' → logprob: -2.424060344696045
    3. ' return' → logprob: -2.674060344696045
    4. '
' → logprob: -6.549060344696045
    5. 'False' → logprob: -8.174059867858887
    6. '       ' → logprob: -8.299059867858887
    7. ':return' → logprob: -9.424059867858887
    8. '   ' → logprob: -9.549059867858887
    9. ' 
' → logprob: -10.924059867858887
    10. '               ' → logprob: -11.049059867858887

Token 127: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16023772954940796
    2. ' False' → logprob: -1.9102377891540527
    3. 'Not' → logprob: -11.660237312316895
    4. ' Not' → logprob: -12.535237312316895
    5. '(False' → logprob: -13.785237312316895
    6. '   ' → logprob: -15.660237312316895
    7. '=False' → logprob: -16.03523826599121
    8. 'True' → logprob: -17.78523826599121
    9. '
' → logprob: -18.16023826599121
    10. '    ' → logprob: -18.16023826599121

Token 128: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022202637046575546
    2. '       ' → logprob: -4.522202491760254
    3. '<|end|>' → logprob: -4.522202491760254
    4. '        
' → logprob: -10.022202491760254
    5. '
' → logprob: -10.147202491760254
    6. '  
' → logprob: -10.272202491760254
    7. ' 
' → logprob: -10.272202491760254
    8. '' → logprob: -10.772202491760254
    9. '<|end|>' → logprob: -11.022202491760254
    10. '\n' → logprob: -11.647202491760254

Token 129: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03847942873835564
    2. '       ' → logprob: -3.2884793281555176
    3. '        
' → logprob: -8.538479804992676
    4. '<|end|>' → logprob: -9.163479804992676
    5. ' return' → logprob: -10.288479804992676
    6. 'return' → logprob: -10.413479804992676
    7. '' → logprob: -10.663479804992676
    8. '
' → logprob: -11.413479804992676
    9. '    
' → logprob: -11.413479804992676
    10. '  
' → logprob: -11.663479804992676

Token 130: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0933503657579422
    2. 'return' (adapté à ' return') → logprob: -2.468350410461426
    3. ' return' → logprob: -5.593350410461426
    4. '
' → logprob: -7.593350410461426
    5. '<|end|>' → logprob: -9.468350410461426
    6. '   ' → logprob: -9.843350410461426
    7. '	return' → logprob: -10.593350410461426
    8. '        
' → logprob: -12.093350410461426
    9. '```' → logprob: -13.093350410461426
    10. ' ' → logprob: -13.093350410461426

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10207368433475494
    2. ' self' → logprob: -2.3520736694335938
    3. '(self' → logprob: -6.352073669433594
    4. ' (' → logprob: -9.102073669433594
    5. '
' → logprob: -11.977073669433594
    6. ' ' → logprob: -13.352073669433594
    7. '	self' → logprob: -14.102073669433594
    8. '       ' → logprob: -14.102073669433594
    9. '(' → logprob: -14.477073669433594
    10. '   ' → logprob: -15.352073669433594

Token 132: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0013372665271162987
    2. '.' → logprob: -6.626337051391602
    3. 'x' → logprob: -11.501337051391602
    4. ' .' → logprob: -13.876337051391602
    5. '
' → logprob: -16.5013370513916
    6. '.
' → logprob: -17.0013370513916
    7. '<|end|>' → logprob: -17.2513370513916
    8. '.

' → logprob: -17.8763370513916
    9. '‌.' → logprob: -18.3763370513916
    10. '.i' → logprob: -18.7513370513916

Token 133: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0380459688603878
    2. '==' → logprob: -3.288045883178711
    3. '=' → logprob: -12.913045883178711
    4. ' ' → logprob: -13.538045883178711
    5. '==
' → logprob: -14.538045883178711
    6. ' ==
' → logprob: -16.16304588317871
    7. ' =' → logprob: -16.41304588317871
    8. ')==' → logprob: -18.16304588317871
    9. ' ' → logprob: -18.41304588317871
    10. '()==' → logprob: -18.53804588317871

Token 134: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.31326213479042053
    2. 'other' → logprob: -1.3132621049880981
    3. '_other' → logprob: -15.813261985778809
    4. '.other' → logprob: -16.313262939453125
    5. 'Other' → logprob: -16.438262939453125
    6. ' ' → logprob: -16.813262939453125
    7. '(other' → logprob: -16.938262939453125
    8. '<|end|>' → logprob: -18.438262939453125
    9. '
' → logprob: -18.688262939453125
    10. ' oth' → logprob: -19.063262939453125

Token 135: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.5761305689811707
    2. '.' → logprob: -0.8261305689811707
    3. ' .' → logprob: -8.951130867004395
    4. '.
' → logprob: -9.951130867004395
    5. ' ' → logprob: -12.951130867004395
    6. '.y' → logprob: -12.951130867004395
    7. 'x' → logprob: -12.951130867004395
    8. '.

' → logprob: -13.576130867004395
    9. '
' → logprob: -14.326130867004395
    10. ').' → logprob: -14.326130867004395

Token 136: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0009244420798495412
    2. 'and' → logprob: -7.000924587249756
    3. ' ' → logprob: -11.875924110412598
    4. '       ' → logprob: -12.750924110412598
    5. '        ' → logprob: -13.750924110412598
    6. '	and' → logprob: -14.000924110412598
    7. '    ' → logprob: -14.750924110412598
    8. '<|end|>' → logprob: -15.375924110412598
    9. '   ' → logprob: -15.750924110412598
    10. ' ' → logprob: -15.750924110412598

Token 137: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0005887754959985614
    2. 'self' → logprob: -7.625588893890381
    3. ' other' → logprob: -9.375588417053223
    4. ' ' → logprob: -11.500588417053223
    5. ' ' → logprob: -12.125588417053223
    6. '	self' → logprob: -15.625588417053223
    7. 'other' → logprob: -16.62558937072754
    8. ' y' → logprob: -16.75058937072754
    9. '    ' → logprob: -17.25058937072754
    10. '
' → logprob: -18.37558937072754

Token 138: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.02325945533812046
    2. '.' → logprob: -3.773259401321411
    3. ' .' → logprob: -11.398259162902832
    4. 'y' → logprob: -13.648259162902832
    5. '<|end|>' → logprob: -13.898259162902832
    6. '.user' → logprob: -15.898259162902832
    7. '.
' → logprob: -16.27326011657715
    8. '.ylabel' → logprob: -16.52326011657715
    9. '.x' → logprob: -16.52326011657715
    10. '.py' → logprob: -16.64826011657715

Token 139: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006741777528077364
    2. '==' → logprob: -5.006742000579834
    3. '<|end|>' → logprob: -10.631741523742676
    4. ' ' → logprob: -13.631741523742676
    5. ' ==
' → logprob: -14.756741523742676
    6. '==
' → logprob: -15.506741523742676
    7. ' =' → logprob: -16.381742477416992
    8. '<|end|>' → logprob: -16.506742477416992
    9. ' ' → logprob: -16.756742477416992
    10. '=' → logprob: -16.881742477416992

Token 140: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.1269282102584839
    2. 'other' → logprob: -2.1269283294677734
    3. '(other' → logprob: -16.001928329467773
    4. '.other' → logprob: -17.626928329467773
    5. 'Other' → logprob: -18.001928329467773
    6. '_other' → logprob: -18.626928329467773
    7. ' ' → logprob: -20.501928329467773
    8. ' ' → logprob: -20.501928329467773
    9. ' oth' → logprob: -21.126928329467773
    10. '其他' → logprob: -21.751928329467773

Token 141: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.011055956594645977
    2. '.' → logprob: -4.511055946350098
    3. ' .' → logprob: -12.886055946350098
    4. 'y' → logprob: -13.136055946350098
    5. '.x' → logprob: -13.136055946350098
    6. '.
' → logprob: -14.261055946350098
    7. '<|end|>' → logprob: -15.136055946350098
    8. '.z' → logprob: -15.886055946350098
    9. '	y' → logprob: -16.261056900024414
    10. ' y' → logprob: -16.386056900024414

Token 142: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028501858934760094
    2. '<|end|>' → logprob: -3.7785017490386963
    3. '   ' → logprob: -6.278501987457275
    4. '<|end|>' → logprob: -6.903501987457275
    5. '```' → logprob: -7.278501987457275
    6. '

' → logprob: -7.403501987457275
    7. '\n' → logprob: -8.028501510620117
    8. 'class' → logprob: -8.528501510620117
    9. 'newline' → logprob: -8.528501510620117
    10. '' → logprob: -9.778501510620117

Token 143: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.27851903438568115
    2. '
' → logprob: -1.7785190343856812
    3. '   ' → logprob: -2.6535191535949707
    4. '<|end|>' → logprob: -6.528519153594971
    5. ' class' → logprob: -6.778519153594971
    6. '```' → logprob: -8.278518676757812
    7. ':' → logprob: -8.528518676757812
    8. '    
' → logprob: -8.778518676757812
    9. '

' → logprob: -8.778518676757812
    10. '<|end|>' → logprob: -9.528518676757812

Token 144: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4554699659347534
    2. 'def' (adapté à ' def') → logprob: -1.3304699659347534
    3. '   ' → logprob: -2.330470085144043
    4. '@' → logprob: -6.080470085144043
    5. '
' → logprob: -7.455470085144043
    6. '@property' → logprob: -7.705470085144043
    7. '@dat' → logprob: -8.330470085144043
    8. 'hash' → logprob: -8.955470085144043
    9. '```' → logprob: -9.080470085144043
    10. '    
' → logprob: -9.330470085144043

Token 145: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28374913334846497
    2. ' __' → logprob: -1.4087491035461426
    3. '_repr' → logprob: -7.158749103546143
    4. 'distance' → logprob: -7.658749103546143
    5. ' ' → logprob: -8.0337495803833
    6. ' distance' → logprob: -8.2837495803833
    7. 'repr' → logprob: -8.4087495803833
    8. '_distance' → logprob: -8.7837495803833
    9. '_' → logprob: -8.9087495803833
    10. ' ' → logprob: -9.1587495803833

Token 146: 'hash' (ID: 16909)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.030069103464484215
    2. 'hash' → logprob: -3.53006911277771
    3. 'lt' → logprob: -8.655069351196289
    4. 'str' → logprob: -9.030069351196289
    5. 'ne' → logprob: -11.030069351196289
    6. 'neg' → logprob: -12.780069351196289
    7. 'iter' → logprob: -12.905069351196289
    8. 'mul' → logprob: -13.655069351196289
    9. 'rep' → logprob: -14.655069351196289
    10. 'r' → logprob: -14.905069351196289

Token 147: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00258196284994483
    2. '__' → logprob: -6.00258207321167
    3. '__(
' → logprob: -9.252581596374512
    4. '__((' → logprob: -12.252581596374512
    5. '(self' → logprob: -12.752581596374512
    6. '__('' → logprob: -13.377581596374512
    7. '_(' → logprob: -14.877581596374512
    8. '__(*' → logprob: -15.377581596374512
    9. '___' → logprob: -15.752581596374512
    10. '__[' → logprob: -16.002582550048828

Token 148: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -12.000011444091797
    3. ' self' → logprob: -12.500011444091797
    4. '
' → logprob: -13.375011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '(self' → logprob: -15.875011444091797
    7. '<|end|>' → logprob: -17.125011444091797
    8. '  ' → logprob: -17.750011444091797
    9. ' ' → logprob: -17.875011444091797
    10. '	self' → logprob: -18.125011444091797

Token 149: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0978037416934967
    2. ')' → logprob: -2.597803831100464
    3. 'self' → logprob: -4.347803592681885
    4. '):
' → logprob: -5.222803592681885
    5. '__' → logprob: -9.222804069519043
    6. '<|end|>' → logprob: -9.222804069519043
    7. ',' → logprob: -10.097804069519043
    8. ' self' → logprob: -10.222804069519043
    9. ' ):' → logprob: -10.597804069519043
    10. ')__' → logprob: -10.847804069519043

Token 150: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7108677625656128
    2. '(self' → logprob: -0.7108677625656128
    3. ':
' → logprob: -4.960867881774902
    4. '       ' → logprob: -5.585867881774902
    5. '   ' → logprob: -5.710867881774902
    6. '(
' → logprob: -6.460867881774902
    7. '(' → logprob: -6.585867881774902
    8. '():' → logprob: -8.960867881774902
    9. ' :' → logprob: -9.460867881774902
    10. 'self' → logprob: -9.710867881774902

Token 151: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519296407699585
    2. ' int' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.87692928314209
    4. '   ' → logprob: -16.001930236816406
    5. '(int' → logprob: -16.626930236816406
    6. ':int' → logprob: -16.876930236816406
    7. '	int' → logprob: -16.876930236816406
    8. '<int' → logprob: -17.251930236816406
    9. '[int' → logprob: -17.501930236816406
    10. 'hash' → logprob: -18.126930236816406

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030008727684617043
    2. ':
' → logprob: -3.5300087928771973
    3. '       ' → logprob: -8.780008316040039
    4. '   ' → logprob: -10.155008316040039
    5. '(self' → logprob: -11.155008316040039
    6. '():' → logprob: -11.155008316040039
    7. '():
' → logprob: -11.655008316040039
    8. '):' → logprob: -11.905008316040039
    9. ':return' → logprob: -12.280008316040039
    10. '):
' → logprob: -12.530008316040039

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006196353584527969
    2. 'return' → logprob: -5.75619649887085
    3. ' return' → logprob: -6.13119649887085
    4. '   ' → logprob: -7.38119649887085
    5. '
' → logprob: -9.631196022033691
    6. '      ' → logprob: -9.881196022033691
    7. '        ' → logprob: -10.131196022033691
    8. '    ' → logprob: -11.131196022033691
    9. '        
' → logprob: -11.381196022033691
    10. 'hash' → logprob: -11.756196022033691

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015133836306631565
    2. '       ' → logprob: -4.640133857727051
    3. ' return' → logprob: -5.265133857727051
    4. '   ' → logprob: -9.14013385772705
    5. 'hash' → logprob: -9.51513385772705
    6. '
' → logprob: -12.14013385772705
    7. 'x' → logprob: -12.89013385772705
    8. '	return' → logprob: -13.64013385772705
    9. ' hash' → logprob: -14.14013385772705
    10. '        
' → logprob: -14.26513385772705

Token 155: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.3138495981693268
    2. ' hash' → logprob: -1.3138495683670044
    3. '(hash' → logprob: -7.563849449157715
    4. ' self' → logprob: -10.188849449157715
    5. 'self' → logprob: -10.938849449157715
    6. ' ' → logprob: -12.438849449157715
    7. '   ' → logprob: -12.438849449157715
    8. ' (' → logprob: -12.688849449157715
    9. '	hash' → logprob: -14.188849449157715
    10. '(' → logprob: -14.563849449157715

Token 156: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005240275990217924
    2. '(' → logprob: -5.255240440368652
    3. '(self' → logprob: -12.005240440368652
    4. '(
' → logprob: -15.380240440368652
    5. ' (' → logprob: -17.380239486694336
    6. '(x' → logprob: -17.380239486694336
    7. '(('' → logprob: -17.630239486694336
    8. '__((' → logprob: -18.630239486694336
    9. '(((' → logprob: -18.755239486694336
    10. '(("' → logprob: -18.880239486694336

Token 157: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.2020991056924686e-05
    2. ' self' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.875032424926758
    4. '
' → logprob: -16.125032424926758
    5. '       ' → logprob: -16.250032424926758
    6. '(self' → logprob: -16.250032424926758
    7. ' ' → logprob: -17.000032424926758
    8. '	self' → logprob: -18.125032424926758
    9. '  ' → logprob: -18.250032424926758
    10. '           ' → logprob: -18.750032424926758

Token 158: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.636475493200123e-05
    2. '.' → logprob: -9.750076293945312
    3. 'x' → logprob: -11.375076293945312
    4. ' .' → logprob: -12.000076293945312
    5. ' ' → logprob: -16.375076293945312
    6. ').' → logprob: -16.500076293945312
    7. '   ' → logprob: -16.750076293945312
    8. 'self' → logprob: -17.375076293945312
    9. '`.' → logprob: -17.625076293945312
    10. '.y' → logprob: -17.750076293945312

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016277639952022582
    2. ' ,' → logprob: -8.750163078308105
    3. ',
' → logprob: -12.500163078308105
    4. ',y' → logprob: -15.000163078308105
    5. ',self' → logprob: -15.500163078308105
    6. ',x' → logprob: -17.25016212463379
    7. ' ' → logprob: -17.37516212463379
    8. '
' → logprob: -17.37516212463379
    9. '‌,' → logprob: -18.62516212463379
    10. ',

' → logprob: -19.00016212463379

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.523198664188385
    2. ' self' → logprob: -0.898198664188385
    3. ' ' → logprob: -10.273199081420898
    4. '       ' → logprob: -11.273199081420898
    5. 'y' → logprob: -11.648199081420898
    6. '   ' → logprob: -12.523199081420898
    7. '	self' → logprob: -12.648199081420898
    8. ' y' → logprob: -12.898199081420898
    9. '        ' → logprob: -13.023199081420898
    10. '    ' → logprob: -13.273199081420898

Token 161: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0005429040757007897
    2. '.' → logprob: -8.000542640686035
    3. 'y' → logprob: -8.500542640686035
    4. ',y' → logprob: -13.250542640686035
    5. ',' → logprob: -14.250542640686035
    6. ' y' → logprob: -14.250542640686035
    7. ' .' → logprob: -14.625542640686035
    8. ' ' → logprob: -15.750542640686035
    9. ').' → logprob: -16.37554359436035
    10. '	y' → logprob: -16.50054359436035

Token 162: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029772937297821045
    2. ')' → logprob: -3.529772996902466
    3. '))
' → logprob: -10.779772758483887
    4. ')
' → logprob: -13.654772758483887
    5. ')))' → logprob: -15.154772758483887
    6. ' ))' → logprob: -16.654773712158203
    7. '})' → logprob: -17.279773712158203
    8. '),' → logprob: -17.529773712158203
    9. '))

' → logprob: -17.779773712158203
    10. ')}' → logprob: -17.779773712158203

Token 163: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00041970983147621155
    2. '
' → logprob: -7.875419616699219
    3. ' class' → logprob: -10.500419616699219
    4. '```' → logprob: -12.750419616699219
    5. ':' → logprob: -14.000419616699219
    6. '<class' → logprob: -14.000419616699219
    7. '   ' → logprob: -14.250419616699219
    8. '    
' → logprob: -14.250419616699219
    9. 'from' → logprob: -14.375419616699219
    10. '"class' → logprob: -14.500419616699219

Token 164: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.0015593778807669878
    2. ' ' → logprob: -7.251559257507324
    3. 'Vector' → logprob: -7.376559257507324
    4. ' ' → logprob: -8.876559257507324
    5. ' vector' → logprob: -10.501559257507324
    6. '_Vector' → logprob: -10.751559257507324
    7. ' Point' → logprob: -11.626559257507324
    8. ' 
' → logprob: -12.126559257507324
    9. '.Vector' → logprob: -12.251559257507324
    10. '_vector' → logprob: -13.001559257507324

Token 165: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08895636349916458
    2. ':' → logprob: -2.463956356048584
    3. ':
' → logprob: -11.713956832885742
    4. ':

' → logprob: -12.463956832885742
    5. '(' → logprob: -13.463956832885742
    6. '):
' → logprob: -13.588956832885742
    7. ' :
' → logprob: -14.213956832885742
    8. '   ' → logprob: -14.963956832885742
    9. '(object' → logprob: -15.213956832885742
    10. '：
' → logprob: -16.088956832885742

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03951575979590416
    2. '__' → logprob: -3.289515733718872
    3. ' __' → logprob: -6.539515972137451
    4. 'def' → logprob: -12.539515495300293
    5. '_slots' → logprob: -12.539515495300293
    6. '___' → logprob: -12.914515495300293
    7. '  ' → logprob: -13.039515495300293
    8. 'slots' → logprob: -13.414515495300293
    9. '(__' → logprob: -13.414515495300293
    10. ' slots' → logprob: -13.539515495300293

Token 167: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.055102188140153885
    2. ' __' → logprob: -2.9301021099090576
    3. '   ' → logprob: -8.430102348327637
    4. '.__' → logprob: -14.430102348327637
    5. '___' → logprob: -14.680102348327637
    6. 'def' → logprob: -15.930102348327637
    7. '	' → logprob: -16.18010139465332
    8. '____' → logprob: -16.43010139465332
    9. '```' → logprob: -16.43010139465332
    10. '(__' → logprob: -16.80510139465332

Token 168: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.0004083891399204731
    2. '_slots' → logprob: -8.250408172607422
    3. '__' → logprob: -8.875408172607422
    4. ' slots' → logprob: -11.875408172607422
    5. 'sl' → logprob: -16.375408172607422
    6. 'Slots' → logprob: -16.875408172607422
    7. 'slot' → logprob: -16.875408172607422
    8. '
' → logprob: -16.875408172607422
    9. 'x' → logprob: -17.375408172607422
    10. '___' → logprob: -18.000408172607422

Token 169: '__' (ID: 771)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04194694012403488
    2. '=' → logprob: -3.5419468879699707
    3. '__' → logprob: -4.416946887969971
    4. '_' → logprob: -10.166947364807129
    5. '=('' → logprob: -12.166947364807129
    6. ' ' → logprob: -12.916947364807129
    7. '_=' → logprob: -12.916947364807129
    8. ' __' → logprob: -14.166947364807129
    9. '<|end|>' → logprob: -14.416947364807129
    10. '   ' → logprob: -15.166947364807129

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977497547864914
    2. '=' → logprob: -4.634775161743164
    3. ' ' → logprob: -11.009775161743164
    4. '=('' → logprob: -13.259775161743164
    5. '__' → logprob: -15.634775161743164
    6. ' ='' → logprob: -15.884775161743164
    7. '<|end|>' → logprob: -16.509775161743164
    8. '=['' → logprob: -16.634775161743164
    9. '('' → logprob: -16.759775161743164
    10. '_' → logprob: -17.009775161743164

Token 171: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16025184094905853
    2. ' ('' → logprob: -1.9102518558502197
    3. ''d' → logprob: -11.66025161743164
    4. ' '' → logprob: -12.16025161743164
    5. '('_' → logprob: -12.28525161743164
    6. '('__' → logprob: -12.66025161743164
    7. '(' → logprob: -12.91025161743164
    8. '['' → logprob: -14.03525161743164
    9. ''' → logprob: -14.16025161743164
    10. ' ' → logprob: -14.53525161743164

Token 172: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.759734732331708e-05
    2. ' dx' → logprob: -11.000017166137695
    3. '_dx' → logprob: -14.625017166137695
    4. 'd' → logprob: -15.500017166137695
    5. '   ' → logprob: -16.750017166137695
    6. '.dx' → logprob: -17.625017166137695
    7. '(dx' → logprob: -18.625017166137695
    8. 'x' → logprob: -18.875017166137695
    9. ' ' → logprob: -19.000017166137695
    10. '  ' → logprob: -19.875017166137695

Token 173: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004084693267941475
    2. ',' → logprob: -5.504084587097168
    3. '','' → logprob: -12.504084587097168
    4. ' ',' → logprob: -13.379084587097168
    5. ''' → logprob: -14.629084587097168
    6. '',
' → logprob: -15.254084587097168
    7. '",' → logprob: -16.129085540771484
    8. ',d' → logprob: -16.504085540771484
    9. ' ,' → logprob: -17.004085540771484
    10. ','' → logprob: -17.129085540771484

Token 174: ' '' (ID: 461)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6910064220428467
    2. ' dy' → logprob: -0.9410064220428467
    3. ''d' → logprob: -2.6910064220428467
    4. ''' → logprob: -3.3160064220428467
    5. ' '' → logprob: -5.441006660461426
    6. ''y' → logprob: -9.066006660461426
    7. '   ' → logprob: -9.191006660461426
    8. '.dy' → logprob: -11.066006660461426
    9. 'd' → logprob: -12.316006660461426
    10. ' ' → logprob: -12.691006660461426

Token 175: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.7729658540920354e-05
    2. ' dy' → logprob: -10.500027656555176
    3. ''' → logprob: -17.125028610229492
    4. '.dy' → logprob: -17.625028610229492
    5. ''d' → logprob: -18.000028610229492
    6. 'd' → logprob: -18.250028610229492
    7. '   ' → logprob: -18.375028610229492
    8. '
' → logprob: -18.500028610229492
    9. 'dym' → logprob: -19.875028610229492
    10. 'Dy' → logprob: -20.250028610229492

Token 176: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0061013237573206425
    2. '',' → logprob: -5.256101131439209
    3. ')' → logprob: -7.131101131439209
    4. '')
' → logprob: -10.381101608276367
    5. ''' → logprob: -11.131101608276367
    6. '')

' → logprob: -11.256101608276367
    7. '   ' → logprob: -12.256101608276367
    8. ',' → logprob: -13.381101608276367
    9. ' ')' → logprob: -13.881101608276367
    10. '('' → logprob: -14.881101608276367

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43077290058135986
    2. '
' → logprob: -1.0557729005813599
    3. '    
' → logprob: -6.68077278137207
    4. 'def' → logprob: -7.93077278137207
    5. '

' → logprob: -8.68077278137207
    6. '<|end|>' → logprob: -8.68077278137207
    7. '  
' → logprob: -10.80577278137207
    8. '```' → logprob: -11.05577278137207
    9. ' 
' → logprob: -11.18077278137207
    10. '  ' → logprob: -11.55577278137207

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03143758326768875
    2. ' def' → logprob: -3.531437635421753
    3. '   ' → logprob: -6.406437397003174
    4. '
' → logprob: -10.531437873840332
    5. '    
' → logprob: -12.031437873840332
    6. ' 
' → logprob: -14.031437873840332
    7. '	def' → logprob: -14.156437873840332
    8. '```' → logprob: -15.531437873840332
    9. '  
' → logprob: -16.156436920166016
    10. '    ' → logprob: -16.781436920166016

Token 179: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0490538626909256
    2. 'def' → logprob: -3.299053907394409
    3. ' dx' → logprob: -4.67405366897583
    4. ' d' → logprob: -7.42405366897583
    5. ' __' → logprob: -7.67405366897583
    6. ' ' → logprob: -7.79905366897583
    7. 'd' → logprob: -9.924054145812988
    8. ' ' → logprob: -10.174054145812988
    9. 'dx' → logprob: -10.674054145812988
    10. ' de' → logprob: -11.549054145812988

Token 180: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.816093228830141e-06
    2. 'slots' → logprob: -13.37500286102295
    3. 'def' → logprob: -14.37500286102295
    4. '_init' → logprob: -15.00000286102295
    5. ' init' → logprob: -16.625001907348633
    6. 'ini' → logprob: -16.625001907348633
    7. 'int' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.500001907348633
    9. '```' → logprob: -18.375001907348633
    10. '	init' → logprob: -18.625001907348633

Token 181: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004625579807907343
    2. '(self' → logprob: -5.6296257972717285
    3. '__' → logprob: -7.0046257972717285
    4. '__(
' → logprob: -9.75462532043457
    5. '__((' → logprob: -10.75462532043457
    6. 'self' → logprob: -11.12962532043457
    7. '(' → logprob: -11.37962532043457
    8. '_(' → logprob: -12.50462532043457
    9. ' (' → logprob: -12.75462532043457
    10. '<|end|>' → logprob: -13.12962532043457

Token 182: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033665422233752906
    2. ' self' → logprob: -8.000336647033691
    3. '(self' → logprob: -13.875336647033691
    4. ',' → logprob: -16.625337600708008
    5. '0' → logprob: -17.000337600708008
    6. '	self' → logprob: -17.125337600708008
    7. 'dx' → logprob: -17.125337600708008
    8. '   ' → logprob: -17.250337600708008
    9. ' ' → logprob: -18.125337600708008
    10. 's' → logprob: -18.750337600708008

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007868755492381752
    2. 'self' → logprob: -7.750786781311035
    3. '(self' → logprob: -8.250786781311035
    4. ' ,' → logprob: -9.375786781311035
    5. ',self' → logprob: -12.250786781311035
    6. ' self' → logprob: -12.500786781311035
    7. ' (' → logprob: -14.750786781311035
    8. '<|end|>' → logprob: -14.750786781311035
    9. '(' → logprob: -14.875786781311035
    10. '   ' → logprob: -15.375786781311035

Token 184: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.029753267765045166
    2. ' dx' → logprob: -3.5297532081604004
    3. '_dx' → logprob: -13.029753684997559
    4. '.dx' → logprob: -15.154753684997559
    5. '   ' → logprob: -16.154752731323242
    6. 'd' → logprob: -16.279752731323242
    7. '(dx' → logprob: -16.404752731323242
    8. ' ' → logprob: -17.029752731323242
    9. 'Dx' → logprob: -17.904752731323242
    10. 'self' → logprob: -18.029752731323242

Token 185: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06254387646913528
    2. ':' → logprob: -2.8125438690185547
    3. ' ,' → logprob: -7.812543869018555
    4. ':int' → logprob: -8.812543869018555
    5. ' :' → logprob: -11.562543869018555
    6. '=' → logprob: -12.312543869018555
    7. ':,' → logprob: -12.687543869018555
    8. '<|end|>' → logprob: -13.562543869018555
    9. ',int' → logprob: -14.187543869018555
    10. '   ' → logprob: -14.187543869018555

Token 186: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324605919420719
    2. ' int' → logprob: -3.7732460498809814
    3. '	int' → logprob: -15.648245811462402
    4. '(int' → logprob: -16.39824676513672
    5. ':int' → logprob: -16.39824676513672
    6. '=int' → logprob: -16.89824676513672
    7. ' ' → logprob: -17.14824676513672
    8. 'float' → logprob: -17.64824676513672
    9. '[int' → logprob: -17.64824676513672
    10. '<int' → logprob: -17.77324676513672

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000297685619443655
    2. ' ,' → logprob: -8.125297546386719
    3. ',d' → logprob: -13.625297546386719
    4. '‌,' → logprob: -15.750297546386719
    5. ',
' → logprob: -16.00029754638672
    6. ',int' → logprob: -16.25029754638672
    7. '   ' → logprob: -17.75029754638672
    8. '<|end|>' → logprob: -18.12529754638672
    9. 'dx' → logprob: -18.62529754638672
    10. ',

' → logprob: -18.87529754638672

Token 188: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6931474208831787
    2. ' dy' → logprob: -0.6931474208831787
    3. '.dy' → logprob: -15.818147659301758
    4. 'Dy' → logprob: -16.818147659301758
    5. 'd' → logprob: -17.568147659301758
    6. ' ' → logprob: -18.943147659301758
    7. '   ' → logprob: -19.068147659301758
    8. ' Dy' → logprob: -19.193147659301758
    9. ' dyd' → logprob: -19.693147659301758
    10. 'dym' → logprob: -19.818147659301758

Token 189: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004330532974563539
    2. ':int' → logprob: -7.875432968139648
    3. '):' → logprob: -10.125432968139648
    4. ')' → logprob: -12.125432968139648
    5. ' :' → logprob: -12.125432968139648
    6. '<|end|>' → logprob: -13.750432968139648
    7. '   ' → logprob: -14.875432968139648
    8. '):
' → logprob: -15.125432968139648
    9. '<|end|>' → logprob: -15.375432968139648
    10. ' ):' → logprob: -17.00043296813965

Token 190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324768900871277
    2. ' int' → logprob: -3.773247718811035
    3. '<int' → logprob: -14.773247718811035
    4. '=int' → logprob: -14.898247718811035
    5. ':int' → logprob: -14.898247718811035
    6. ')' → logprob: -15.148247718811035
    7. '[int' → logprob: -15.273247718811035
    8. ' ' → logprob: -15.523247718811035
    9. '(int' → logprob: -15.523247718811035
    10. '	int' → logprob: -16.27324676513672

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002610974188428372
    2. '):
' → logprob: -8.875261306762695
    3. ')' → logprob: -9.125261306762695
    4. ':' → logprob: -11.750261306762695
    5. ''):' → logprob: -12.875261306762695
    6. ' ):' → logprob: -13.625261306762695
    7. '   ' → logprob: -15.000261306762695
    8. '):
' → logprob: -16.250261306762695
    9. ')):' → logprob: -16.500261306762695
    10. '):

' → logprob: -16.750261306762695

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000561969296541065
    2. 'self' → logprob: -7.7505621910095215
    3. ' self' → logprob: -9.250561714172363
    4. '   ' → logprob: -11.375561714172363
    5. 'dx' → logprob: -11.500561714172363
    6. ' dx' → logprob: -11.750561714172363
    7. '	' → logprob: -13.375561714172363
    8. ' ' → logprob: -14.000561714172363
    9. '      ' → logprob: -14.375561714172363
    10. ' ' → logprob: -14.375561714172363

Token 193: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022689301520586014
    2. ' self' → logprob: -3.8976893424987793
    3. '       ' → logprob: -6.147689342498779
    4. 'dx' → logprob: -12.897688865661621
    5. '   ' → logprob: -13.147688865661621
    6. ' ' → logprob: -13.897688865661621
    7. '	self' → logprob: -14.397688865661621
    8. '
' → logprob: -15.147688865661621
    9. ' dx' → logprob: -16.022689819335938
    10. 'd' → logprob: -16.522689819335938

Token 194: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -0.06220172345638275
    2. '.' → logprob: -2.812201738357544
    3. ' .' → logprob: -9.187201499938965
    4. '.dy' → logprob: -9.437201499938965
    5. '.d' → logprob: -10.562201499938965
    6. '=' → logprob: -12.437201499938965
    7. '.dp' → logprob: -12.562201499938965
    8. ' =' → logprob: -12.687201499938965
    9. '.dc' → logprob: -12.812201499938965
    10. '.ds' → logprob: -12.937201499938965

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022694617509842
    2. '=' → logprob: -2.350226879119873
    3. ' ' → logprob: -10.850227355957031
    4. ' =
' → logprob: -14.100227355957031
    5. ')' → logprob: -16.72522735595703
    6. ' =)' → logprob: -17.10022735595703
    7. ' ' → logprob: -18.35022735595703
    8. ' +=' → logprob: -18.35022735595703
    9. '=d' → logprob: -18.60022735595703
    10. ' =
' → logprob: -18.60022735595703

Token 196: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.12692894041538239
    2. ' dx' → logprob: -2.1269290447235107
    3. 'dy' → logprob: -14.25192928314209
    4. '_dx' → logprob: -16.126928329467773
    5. ' dy' → logprob: -16.501928329467773
    6. 'd' → logprob: -17.751928329467773
    7. '(dx' → logprob: -18.001928329467773
    8. '.dx' → logprob: -18.126928329467773
    9. 'Dx' → logprob: -19.126928329467773
    10. '	d' → logprob: -20.751928329467773

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27268198132514954
    2. '
' → logprob: -1.7726819515228271
    3. ' dy' → logprob: -2.897681951522827
    4. ' 
' → logprob: -4.522682189941406
    5. '        
' → logprob: -7.022682189941406
    6. '  
' → logprob: -7.272682189941406
    7. 'dy' → logprob: -7.772682189941406
    8. '<|end|>' → logprob: -8.522682189941406
    9. ' ' → logprob: -8.897682189941406
    10. '   ' → logprob: -9.397682189941406

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25463706254959106
    2. ' dy' → logprob: -1.5046370029449463
    3. 'dy' → logprob: -6.004637241363525
    4. ' self' → logprob: -9.754636764526367
    5. ' =' → logprob: -10.129636764526367
    6. 'self' → logprob: -10.129636764526367
    7. ',' → logprob: -10.754636764526367
    8. ' ' → logprob: -11.004636764526367
    9. '=' → logprob: -11.004636764526367
    10. '   ' → logprob: -11.504636764526367

Token 199: ' self' (ID: 1051)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -9.627176768844947e-05
    2. ' dy' → logprob: -9.250096321105957
    3. 'self' (adapté à ' self') → logprob: -16.87509536743164
    4. 'dx' → logprob: -17.62509536743164
    5. '   ' → logprob: -17.75009536743164
    6. '       ' → logprob: -18.00009536743164
    7. '.dy' → logprob: -18.37509536743164
    8. 'd' → logprob: -18.50009536743164
    9. 'ddy' → logprob: -20.00009536743164
    10. ' ' → logprob: -20.00009536743164

Token 200: '.dy' (ID: 147561)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17902715504169464
    2. ' =' → logprob: -2.5540270805358887
    3. 'dy' → logprob: -2.9290270805358887
    4. '.dy' → logprob: -4.054027080535889
    5. ' dy' → logprob: -4.304027080535889
    6. 'y' → logprob: -7.304027080535889
    7. '.' → logprob: -7.679027080535889
    8. ' ' → logprob: -8.054027557373047
    9. '   ' → logprob: -9.054027557373047
    10. '       ' → logprob: -9.429027557373047

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34144458174705505
    2. '<|end|>' → logprob: -1.5914446115493774
    3. ' =' → logprob: -2.591444492340088
    4. ')' → logprob: -5.341444492340088
    5. ' ' → logprob: -5.466444492340088
    6. '<|end|>' → logprob: -6.591444492340088
    7. ' )' → logprob: -9.341444969177246
    8. '_' → logprob: -10.341444969177246
    9. '+' → logprob: -10.341444969177246
    10. ' ' → logprob: -10.716444969177246

Token 202: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.04858759790658951
    2. ' dy' → logprob: -3.0485875606536865
    3. '.dy' → logprob: -15.923587799072266
    4. 'd' → logprob: -17.673587799072266
    5. 'dym' → logprob: -18.048587799072266
    6. ' ' → logprob: -18.048587799072266
    7. 'Dy' → logprob: -19.173587799072266
    8. 'y' → logprob: -19.548587799072266
    9. '	d' → logprob: -19.673587799072266
    10. '   ' → logprob: -19.798587799072266

Token 203: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011212872341275215
    2. '<|end|>' → logprob: -4.8862128257751465
    3. 'def' → logprob: -5.7612128257751465
    4. ' def' → logprob: -8.761213302612305
    5. ')' → logprob: -9.386213302612305
    6. '
' → logprob: -9.761213302612305
    7. '<|end|>' → logprob: -10.261213302612305
    8. ' ' → logprob: -10.261213302612305
    9. '```' → logprob: -10.511213302612305
    10. '    
' → logprob: -10.761213302612305

Token 205: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000592947646509856
    2. '   ' → logprob: -7.750593185424805
    3. ' def' → logprob: -8.750593185424805
    4. '__' → logprob: -13.000593185424805
    5. '```' → logprob: -14.250593185424805
    6. '<|end|>' → logprob: -15.125593185424805
    7. '	def' → logprob: -15.500593185424805
    8. '@property' → logprob: -16.000593185424805
    9. '#' → logprob: -16.625593185424805
    10. '+' → logprob: -16.750593185424805

Token 206: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048933085054159164
    2. '__' → logprob: -3.0489330291748047
    3. ' def' → logprob: -8.298933029174805
    4. ' ' → logprob: -9.798933029174805
    5. 'def' → logprob: -10.298933029174805
    6. ' ' → logprob: -13.048933029174805
    7. ' length' → logprob: -13.673933029174805
    8. ' _' → logprob: -13.673933029174805
    9. '_' → logprob: -14.048933029174805
    10. '.__' → logprob: -14.298933029174805

Token 207: 'eq' (ID: 21725)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.20916156470775604
    2. 'eq' → logprob: -1.7091615200042725
    3. 'mul' → logprob: -5.084161758422852
    4. 'neg' → logprob: -6.584161758422852
    5. 'sub' → logprob: -9.334161758422852
    6. 'hash' → logprob: -10.959161758422852
    7. 'repr' → logprob: -11.084161758422852
    8. 'abs' → logprob: -11.334161758422852
    9. ' add' → logprob: -13.334161758422852
    10. 'imul' → logprob: -13.584161758422852

Token 208: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019381542224436998
    2. '__' → logprob: -6.251938343048096
    3. '__((' → logprob: -12.501937866210938
    4. '(self' → logprob: -12.876937866210938
    5. '__(
' → logprob: -13.376937866210938
    6. '__('' → logprob: -13.501937866210938
    7. '__(*' → logprob: -16.001937866210938
    8. '(' → logprob: -16.001937866210938
    9. '__("' → logprob: -16.126937866210938
    10. '__[' → logprob: -17.501937866210938

Token 209: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.190178904333152e-05
    2. ' self' → logprob: -10.500031471252441
    3. 'other' → logprob: -12.625031471252441
    4. '(self' → logprob: -14.875031471252441
    5. '   ' → logprob: -15.250031471252441
    6. '
' → logprob: -16.000032424926758
    7. '<|end|>' → logprob: -16.500032424926758
    8. ' ' → logprob: -16.625032424926758
    9. '  ' → logprob: -17.625032424926758
    10. 's' → logprob: -17.625032424926758

Token 210: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.049927107989788055
    2. '__(' → logprob: -3.049926996231079
    3. '(' → logprob: -6.799927234649658
    4. ' (' → logprob: -9.0499267578125
    5. 'self' → logprob: -9.2999267578125
    6. ',' → logprob: -12.4249267578125
    7. '__' → logprob: -12.9249267578125
    8. '_(' → logprob: -13.0499267578125
    9. '```' → logprob: -13.2999267578125
    10. ')(' → logprob: -13.5499267578125

Token 211: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12707561254501343
    2. ' other' → logprob: -2.127075672149658
    3. 'self' → logprob: -9.0020751953125
    4. 'Other' → logprob: -10.7520751953125
    5. ' self' → logprob: -13.7520751953125
    6. '(other' → logprob: -13.7520751953125
    7. '<|end|>' → logprob: -14.7520751953125
    8. '_other' → logprob: -15.3770751953125
    9. ' ' → logprob: -16.2520751953125
    10. '.other' → logprob: -16.6270751953125

Token 212: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029915833845734596
    2. ' :' → logprob: -3.5299158096313477
    3. ')' → logprob: -9.029915809631348
    4. ',' → logprob: -11.029915809631348
    5. ' )' → logprob: -11.154915809631348
    6. ' ):' → logprob: -12.154915809631348
    7. '):' → logprob: -12.154915809631348
    8. ' ,' → logprob: -13.279915809631348
    9. ' ' → logprob: -13.904915809631348
    10. '=' → logprob: -14.529915809631348

Token 213: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.3214242458343506
    2. ' object' → logprob: -1.3214242458343506
    3. ''' → logprob: -5.07142448425293
    4. ' '' → logprob: -6.57142448425293
    5. '(object' → logprob: -8.69642448425293
    6. ')object' → logprob: -9.19642448425293
    7. ' ' → logprob: -10.07142448425293
    8. ')' → logprob: -10.32142448425293
    9. ''s' → logprob: -10.57142448425293
    10. ''objet' → logprob: -10.69642448425293

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -11.750008583068848
    3. '`)' → logprob: -15.125008583068848
    4. '')' → logprob: -15.375008583068848
    5. '   ' → logprob: -16.250009536743164
    6. ')->' → logprob: -16.750009536743164
    7. '):' → logprob: -17.875009536743164
    8. '):
' → logprob: -18.375009536743164
    9. '")' → logprob: -19.125009536743164
    10. ':' → logprob: -19.250009536743164

Token 215: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.41017869114875793
    2. ')' → logprob: -1.4101786613464355
    3. '->' → logprob: -2.5351786613464355
    4. ':' → logprob: -4.5351786613464355
    5. ')->' → logprob: -6.5351786613464355
    6. '   ' → logprob: -8.035179138183594
    7. ' ' → logprob: -8.160179138183594
    8. ' )' → logprob: -8.660179138183594
    9. ' )->' → logprob: -10.410179138183594
    10. ' :' → logprob: -10.410179138183594

Token 216: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.018150994554162025
    2. ' bool' → logprob: -4.018150806427002
    3. '	bool' → logprob: -15.14315128326416
    4. ' ' → logprob: -15.51815128326416
    5. '<bool' → logprob: -15.64315128326416
    6. 'b' → logprob: -16.268150329589844
    7. ' ' → logprob: -16.643150329589844
    8. ''' → logprob: -16.768150329589844
    9. 'object' → logprob: -16.893150329589844
    10. 'bo' → logprob: -17.518150329589844

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029987392481416464
    2. ':
' → logprob: -6.1279988288879395
    3. '       ' → logprob: -7.8779988288879395
    4. ')' → logprob: -8.752998352050781
    5. '):' → logprob: -9.252998352050781
    6. '   ' → logprob: -9.377998352050781
    7. '):
' → logprob: -10.252998352050781
    8. ' :' → logprob: -10.252998352050781
    9. '<|end|>' → logprob: -11.627998352050781
    10. '->' → logprob: -12.877998352050781

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.337155355140567e-05
    2. ' if' → logprob: -9.750062942504883
    3. '      ' → logprob: -13.125062942504883
    4. 'if' → logprob: -13.750062942504883
    5. '   ' → logprob: -14.000062942504883
    6. '        ' → logprob: -15.250062942504883
    7. '    ' → logprob: -15.375062942504883
    8. '<|end|>' → logprob: -15.375062942504883
    9. ' ' → logprob: -16.000062942504883
    10. '     ' → logprob: -16.250062942504883

Token 219: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5239149332046509
    2. 'if' (adapté à ' if') → logprob: -1.0239149332046509
    3. '       ' → logprob: -3.0239148139953613
    4. ' isinstance' → logprob: -13.14891529083252
    5. 'return' → logprob: -13.89891529083252
    6. '   ' → logprob: -13.89891529083252
    7. '	if' → logprob: -14.64891529083252
    8. '
' → logprob: -14.77391529083252
    9. 'If' → logprob: -15.02391529083252
    10. ' return' → logprob: -15.27391529083252

Token 220: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005234002135694027
    2. 'not' → logprob: -5.2552337646484375
    3. '	not' → logprob: -16.255233764648438
    4. ' isinstance' → logprob: -18.505233764648438
    5. ' no' → logprob: -18.630233764648438
    6. '
' → logprob: -19.005233764648438
    7. '(not' → logprob: -19.130233764648438
    8. ' ' → logprob: -19.505233764648438
    9. '_not' → logprob: -19.505233764648438
    10. ':not' → logprob: -19.630233764648438

Token 221: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.20141352713108063
    2. 'is' → logprob: -1.7014135122299194
    3. '(is' → logprob: -15.82641315460205
    4. 'Is' → logprob: -16.951414108276367
    5. 'instance' → logprob: -17.951414108276367
    6. ' ' → logprob: -19.201414108276367
    7. '_is' → logprob: -19.951414108276367
    8. ' is' → logprob: -20.451414108276367
    9. ' hasattr' → logprob: -20.826414108276367
    10. '.is' → logprob: -21.201414108276367

Token 222: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.392202976712724e-06
    2. 'other' → logprob: -12.000006675720215
    3. ' other' → logprob: -15.625006675720215
    4. 'Other' → logprob: -18.0000057220459
    5. ' (' → logprob: -20.0000057220459
    6. '(' → logprob: -20.5000057220459
    7. '(self' → logprob: -21.1250057220459
    8. '_other' → logprob: -21.3750057220459
    9. '.other' → logprob: -22.0000057220459
    10. '(object' → logprob: -22.2500057220459

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07969015836715698
    2. '(other' → logprob: -2.5796902179718018
    3. 'other' → logprob: -7.454689979553223
    4. ' other' → logprob: -9.329689979553223
    5. '(Vector' → logprob: -9.579689979553223
    6. '(' → logprob: -10.704689979553223
    7. ' ,' → logprob: -10.829689979553223
    8. '(self' → logprob: -11.079689979553223
    9. ' (' → logprob: -13.829689979553223
    10. 'self' → logprob: -14.079689979553223

Token 224: ' Vector' (ID: 8764)
  Prédit: ' Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.16022716462612152
    2. 'Vector' → logprob: -1.9102271795272827
    3. ' vector' → logprob: -13.660226821899414
    4. '	Vector' → logprob: -14.160226821899414
    5. '_Vector' → logprob: -14.285226821899414
    6. '<Vector' → logprob: -15.785226821899414
    7. '(Vector' → logprob: -15.910226821899414
    8. ' ' → logprob: -16.035226821899414
    9. '.Vector' → logprob: -16.660226821899414
    10. '_vector' → logprob: -17.785226821899414

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002189045073464513
    2. '):' → logprob: -6.1271891593933105
    3. '       ' → logprob: -13.127188682556152
    4. '):
' → logprob: -14.127188682556152
    5. '):

' → logprob: -15.252188682556152
    6. ')' → logprob: -15.377188682556152
    7. ':
' → logprob: -15.377188682556152
    8. ''):
' → logprob: -15.752188682556152
    9. '   ' → logprob: -16.00218963623047
    10. '           ' → logprob: -16.25218963623047

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.034592388459714e-06
    2. 'return' → logprob: -12.250005722045898
    3. '       ' → logprob: -14.500005722045898
    4. ' return' → logprob: -15.250005722045898
    5. '          ' → logprob: -15.375005722045898
    6. '		' → logprob: -17.0000057220459
    7. ':return' → logprob: -17.0000057220459
    8. '               ' → logprob: -17.2500057220459
    9. '	       ' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.6250057220459

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4786842465400696
    2. ' return' → logprob: -0.9786842465400696
    3. '           ' → logprob: -5.478684425354004
    4. '       ' → logprob: -7.853684425354004
    5. '   ' → logprob: -10.603684425354004
    6. '	return' → logprob: -12.853684425354004
    7. ' ' → logprob: -13.103684425354004
    8. ':return' → logprob: -13.228684425354004
    9. '               ' → logprob: -14.103684425354004
    10. '
' → logprob: -14.478684425354004

Token 228: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.836499985889532e-05
    2. ' False' → logprob: -9.7500581741333
    3. 'True' → logprob: -19.625059127807617
    4. 'F' → logprob: -21.750059127807617
    5. '(False' → logprob: -21.875059127807617
    6. 'Not' → logprob: -22.125059127807617
    7. 'false' → logprob: -22.750059127807617
    8. '_false' → logprob: -24.000059127807617
    9. '=False' → logprob: -24.125059127807617
    10. '   ' → logprob: -25.000059127807617

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021343429398257285
    2. '
' → logprob: -8.750213623046875
    3. '	' → logprob: -11.375213623046875
    4. '        
' → logprob: -11.375213623046875
    5. 'return' → logprob: -12.000213623046875
    6. '   ' → logprob: -12.000213623046875
    7. ' return' → logprob: -12.750213623046875
    8. '           ' → logprob: -13.000213623046875
    9. '' → logprob: -13.250213623046875
    10. '<|end|>' → logprob: -13.375213623046875

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.0391463193809614e-05
    2. '           ' → logprob: -10.500060081481934
    3. 'return' → logprob: -11.250060081481934
    4. '
' → logprob: -11.375060081481934
    5. ' return' → logprob: -12.625060081481934
    6. '   ' → logprob: -12.750060081481934
    7. '        
' → logprob: -14.750060081481934
    8. '```' → logprob: -15.000060081481934
    9. '	' → logprob: -15.125060081481934
    10. '      ' → logprob: -15.375060081481934

Token 231: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10060656815767288
    2. 'return' (adapté à ' return') → logprob: -2.350606679916382
    3. ' return' → logprob: -7.850606441497803
    4. '   ' → logprob: -11.600606918334961
    5. '           ' → logprob: -14.225606918334961
    6. '	return' → logprob: -15.475606918334961
    7. '      ' → logprob: -15.850606918334961
    8. ' ' → logprob: -16.22560691833496
    9. '```' → logprob: -17.10060691833496
    10. '     ' → logprob: -17.60060691833496

Token 232: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020828247070312
    2. ' self' → logprob: -2.350208282470703
    3. '(self' → logprob: -13.350208282470703
    4. '
' → logprob: -17.975208282470703
    5. ' (' → logprob: -18.100208282470703
    6. '	self' → logprob: -18.350208282470703
    7. ' ' → logprob: -18.475208282470703
    8. '   ' → logprob: -19.350208282470703
    9. '[self' → logprob: -19.850208282470703
    10. 's' → logprob: -19.975208282470703

Token 233: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -2.856408536899835e-05
    2. '.dy' → logprob: -11.000028610229492
    3. '.' → logprob: -11.750028610229492
    4. ' .' → logprob: -13.375028610229492
    5. '.df' → logprob: -13.625028610229492
    6. '.dt' → logprob: -15.750028610229492
    7. '.dp' → logprob: -16.000028610229492
    8. '.dk' → logprob: -16.000028610229492
    9. '.dc' → logprob: -16.250028610229492
    10. '.dj' → logprob: -16.375028610229492

Token 234: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.001702675479464233
    2. '==' → logprob: -6.376702785491943
    3. ' =' → logprob: -15.501702308654785
    4. ' ' → logprob: -15.876702308654785
    5. ' ==
' → logprob: -16.3767032623291
    6. '=' → logprob: -16.7517032623291
    7. ',' → logprob: -17.6267032623291
    8. '==
' → logprob: -17.7517032623291
    9. ' ' → logprob: -19.5017032623291
    10. ')==' → logprob: -19.6267032623291

Token 235: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3132622241973877
    2. 'other' → logprob: -1.3132622241973877
    3. '(other' → logprob: -15.188261985778809
    4. 'Other' → logprob: -15.813261985778809
    5. '_other' → logprob: -16.688262939453125
    6. '.other' → logprob: -16.938262939453125
    7. '<|end|>' → logprob: -18.813262939453125
    8. ' oth' → logprob: -20.563262939453125
    9. '其他' → logprob: -21.563262939453125
    10. ' andere' → logprob: -21.563262939453125

Token 236: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -0.001970031065866351
    2. '.' → logprob: -6.251969814300537
    3. ' .' → logprob: -10.876970291137695
    4. '.dy' → logprob: -10.876970291137695
    5. 'dx' → logprob: -13.126970291137695
    6. '.dp' → logprob: -14.251970291137695
    7. '.other' → logprob: -15.251970291137695
    8. '.d' → logprob: -16.001970291137695
    9. '_dx' → logprob: -16.251970291137695
    10. '.df' → logprob: -16.376970291137695

Token 237: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0011723674833774567
    2. 'and' → logprob: -6.7511725425720215
    3. '       ' → logprob: -14.001172065734863
    4. ' ' → logprob: -14.126172065734863
    5. '        ' → logprob: -14.626172065734863
    6. ' ' → logprob: -17.00117301940918
    7. '    ' → logprob: -17.50117301940918
    8. '           ' → logprob: -18.12617301940918
    9. '   ' → logprob: -18.12617301940918
    10. ' an' → logprob: -18.37617301940918

Token 238: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.062105268239974976
    2. 'other' → logprob: -2.812105178833008
    3. ' self' → logprob: -9.062105178833008
    4. 'self' → logprob: -10.812105178833008
    5. 'Other' → logprob: -13.812105178833008
    6. '(other' → logprob: -15.812105178833008
    7. '.other' → logprob: -16.062105178833008
    8. '       ' → logprob: -16.187105178833008
    9. '_other' → logprob: -16.687105178833008
    10. ' oth' → logprob: -17.562105178833008

Token 239: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -0.011078237555921078
    2. 'dy' → logprob: -4.511078357696533
    3. ' dy' → logprob: -11.011077880859375
    4. '.' → logprob: -11.261077880859375
    5. '.d' → logprob: -14.886077880859375
    6. ' .' → logprob: -15.261077880859375
    7. '.y' → logprob: -15.511077880859375
    8. '.dx' → logprob: -15.886077880859375
    9. ' ' → logprob: -16.386077880859375
    10. '   ' → logprob: -17.386077880859375

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014163628220558167
    2. '==' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.514163970947266
    4. '==
' → logprob: -17.139163970947266
    5. ' ==
' → logprob: -17.264163970947266
    6. '=' → logprob: -17.514163970947266
    7. ' ' → logprob: -18.139163970947266
    8. ' =' → logprob: -18.389163970947266
    9. ')==' → logprob: -19.264163970947266
    10. '[' → logprob: -19.639163970947266

Token 241: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.25192928314208984
    2. ' other' → logprob: -1.5019292831420898
    3. '(other' → logprob: -15.87692928314209
    4. 'Other' → logprob: -17.001930236816406
    5. '.other' → logprob: -17.376930236816406
    6. '_other' → logprob: -19.501930236816406
    7. ' oth' → logprob: -20.751930236816406
    8. 'others' → logprob: -21.626930236816406
    9. '其他' → logprob: -21.751930236816406
    10. ' ' → logprob: -22.001930236816406

Token 242: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.625004768371582
    3. 'dy' → logprob: -14.375004768371582
    4. ' .' → logprob: -15.000004768371582
    5. '.d' → logprob: -15.250004768371582
    6. ' dy' → logprob: -17.500003814697266
    7. '.dx' → logprob: -17.750003814697266
    8. '.y' → logprob: -17.750003814697266
    9. 'Dy' → logprob: -19.000003814697266
    10. '.cy' → logprob: -19.375003814697266

Token 243: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09044957160949707
    2. '
' → logprob: -2.590449571609497
    3. '<|end|>' → logprob: -4.590449333190918
    4. '```' → logprob: -7.090449333190918
    5. 'def' → logprob: -8.590449333190918
    6. '    
' → logprob: -8.840449333190918
    7. '<|end|>' → logprob: -10.090449333190918
    8. ' ' → logprob: -10.465449333190918
    9. ' def' → logprob: -10.465449333190918
    10. ' 
' → logprob: -11.090449333190918

Token 245: ' Star' (ID: 11307)
  Prédit: ' Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -1.124143362045288
    2. ' Point' → logprob: -1.249143362045288
    3. ' Line' → logprob: -1.749143362045288
    4. ' Vector' → logprob: -2.499143362045288
    5. ' Polygon' → logprob: -3.124143362045288
    6. 'Rectangle' → logprob: -3.499143362045288
    7. 'Line' → logprob: -4.249143600463867
    8. 'Point' → logprob: -4.499143600463867
    9. ' Segment' → logprob: -5.249143600463867
    10. 'Vector' → logprob: -5.249143600463867

Token 246: 'Pattern' (ID: 16821)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28286707401275635
    2. ':
' → logprob: -1.4078670740127563
    3. '(Point' → logprob: -7.282866954803467
    4. '(' → logprob: -7.657866954803467
    5. '   ' → logprob: -8.657867431640625
    6. ' :' → logprob: -9.782867431640625
    7. 'Point' → logprob: -9.782867431640625
    8. ':

' → logprob: -10.157867431640625
    9. '(Vector' → logprob: -10.157867431640625
    10. '(object' → logprob: -10.532867431640625

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003655075328424573
    2. ':
' → logprob: -5.628654956817627
    3. '(' → logprob: -10.128655433654785
    4. ' :' → logprob: -12.128655433654785
    5. '   ' → logprob: -12.378655433654785
    6. ':

' → logprob: -13.753655433654785
    7. '(object' → logprob: -13.878655433654785
    8. ':def' → logprob: -14.128655433654785
    9. '():' → logprob: -14.753655433654785
    10. 'def' → logprob: -14.753655433654785

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039111197111196816
    2. ' def' → logprob: -8.375391006469727
    3. 'def' → logprob: -9.375391006469727
    4. ' __' → logprob: -10.375391006469727
    5. '    
' → logprob: -11.250391006469727
    6. ' slots' → logprob: -11.625391006469727
    7. '__' → logprob: -12.375391006469727
    8. '   ' → logprob: -12.625391006469727
    9. 'class' → logprob: -12.875391006469727
    10. '(' → logprob: -13.625391006469727

Token 249: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2996113300323486
    2. 'def' (adapté à ' def') → logprob: -1.2996113300323486
    3. ' def' → logprob: -1.4246113300323486
    4. ' __' → logprob: -1.5496113300323486
    5. '   ' → logprob: -6.6746110916137695
    6. 'class' → logprob: -8.92461109161377
    7. 'points' → logprob: -9.42461109161377
    8. ' points' → logprob: -9.54961109161377
    9. 'patterns' → logprob: -10.17461109161377
    10. 'pattern' → logprob: -10.42461109161377

Token 250: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00012118533049942926
    2. ' _' → logprob: -9.500121116638184
    3. ' ___' → logprob: -11.250121116638184
    4. '__' → logprob: -11.500121116638184
    5. ' ' → logprob: -11.875121116638184
    6. ' def' → logprob: -12.250121116638184
    7. ' init' → logprob: -12.250121116638184
    8. ' ' → logprob: -12.375121116638184
    9. '_init' → logprob: -14.000121116638184
    10. ' ____' → logprob: -14.875121116638184

Token 251: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006272526225075126
    2. 'slots' → logprob: -7.375627040863037
    3. ' init' → logprob: -15.000627517700195
    4. 'slot' → logprob: -16.125627517700195
    5. '_init' → logprob: -17.375627517700195
    6. '_slots' → logprob: -17.500627517700195
    7. 'inite' → logprob: -17.625627517700195
    8. '   ' → logprob: -17.625627517700195
    9. ' slots' → logprob: -17.875627517700195
    10. 'ini' → logprob: -18.125627517700195

Token 252: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011247287504374981
    2. '(self' → logprob: -4.511247158050537
    3. '(' → logprob: -9.011247634887695
    4. '__(
' → logprob: -10.136247634887695
    5. '__' → logprob: -11.011247634887695
    6. '_(' → logprob: -11.636247634887695
    7. ' (' → logprob: -12.761247634887695
    8. 'self' → logprob: -13.011247634887695
    9. ')(' → logprob: -13.386247634887695
    10. '__((' → logprob: -13.636247634887695

Token 253: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.515961285913363e-05
    2. '
' → logprob: -10.000064849853516
    3. ' self' → logprob: -11.250064849853516
    4. '   ' → logprob: -12.875064849853516
    5. '0' → logprob: -13.125064849853516
    6. ')' → logprob: -13.750064849853516
    7. '       ' → logprob: -14.625064849853516
    8. '  ' → logprob: -16.000064849853516
    9. '(self' → logprob: -16.125064849853516
    10. ',' → logprob: -16.500064849853516

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005253921262919903
    2. 'self' → logprob: -8.37552547454834
    3. '       ' → logprob: -9.12552547454834
    4. '   ' → logprob: -9.25052547454834
    5. ' ,' → logprob: -9.75052547454834
    6. '(self' → logprob: -10.87552547454834
    7. ')' → logprob: -12.62552547454834
    8. ' self' → logprob: -13.50052547454834
    9. ' (' → logprob: -13.62552547454834
    10. '
' → logprob: -13.75052547454834

Token 255: ' stars' (ID: 13701)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7130138874053955
    2. ' points' → logprob: -1.2130138874053955
    3. ' center' → logprob: -2.5880138874053955
    4. 'center' → logprob: -2.7130138874053955
    5. 'self' → logprob: -3.3380138874053955
    6. 'pattern' → logprob: -4.588013648986816
    7. ' self' → logprob: -5.088013648986816
    8. ' pattern' → logprob: -5.838013648986816
    9. '   ' → logprob: -5.963013648986816
    10. 'star' → logprob: -6.463013648986816

Token 256: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03205044940114021
    2. '):' → logprob: -3.532050371170044
    3. '):
' → logprob: -6.782050609588623
    4. ')' → logprob: -7.282050609588623
    5. ' :' → logprob: -8.532050132751465
    6. '=' → logprob: -9.282050132751465
    7. ',' → logprob: -9.907050132751465
    8. ' ):' → logprob: -10.157050132751465
    9. ' =' → logprob: -11.157050132751465
    10. '':' → logprob: -11.282050132751465

Token 257: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6753675937652588
    2. 'set' → logprob: -1.1753675937652588
    3. '[list' → logprob: -1.9253675937652588
    4. 'fro' → logprob: -3.675367593765259
    5. ')' → logprob: -5.67536735534668
    6. 'tuple' → logprob: -5.92536735534668
    7. 'None' → logprob: -6.55036735534668
    8. '[' → logprob: -7.42536735534668
    9. '[f' → logprob: -7.55036735534668
    10. ' list' → logprob: -7.80036735534668

Token 258: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018971276585943997
    2. '['' → logprob: -9.000189781188965
    3. 'Point' → logprob: -10.750189781188965
    4. '[str' → logprob: -11.375189781188965
    5. '<Point' → logprob: -11.500189781188965
    6. '   ' → logprob: -12.000189781188965
    7. '[int' → logprob: -12.625189781188965
    8. '):' → logprob: -12.625189781188965
    9. '(Point' → logprob: -12.875189781188965
    10. ' [' → logprob: -13.250189781188965

Token 259: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.245724504580721e-05
    2. '[' → logprob: -10.125092506408691
    3. ' Point' → logprob: -10.750092506408691
    4. 'Star' → logprob: -10.875092506408691
    5. 'Vector' → logprob: -12.250092506408691
    6. '	Point' → logprob: -12.625092506408691
    7. ''' → logprob: -14.125092506408691
    8. '   ' → logprob: -14.625092506408691
    9. '<Point' → logprob: -15.000092506408691
    10. '['' → logprob: -15.000092506408691

Token 260: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.08812564611434937
    2. '])' → logprob: -2.713125705718994
    3. ']' → logprob: -4.463125705718994
    4. ']):
' → logprob: -5.588125705718994
    5. '[' → logprob: -6.588125705718994
    6. ')' → logprob: -7.213125705718994
    7. '],' → logprob: -8.088125228881836
    8. '):' → logprob: -8.213125228881836
    9. ']:' → logprob: -10.713125228881836
    10. '[int' → logprob: -12.213125228881836

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004485461104195565
    2. 'self' → logprob: -7.750448703765869
    3. ' self' → logprob: -11.250448226928711
    4. '   ' → logprob: -12.500448226928711
    5. '      ' → logprob: -14.750448226928711
    6. '    ' → logprob: -15.500448226928711
    7. ',' → logprob: -16.25044822692871
    8. '           ' → logprob: -16.50044822692871
    9. '	   ' → logprob: -16.75044822692871
    10. '     ' → logprob: -17.00044822692871

Token 262: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2465665489435196
    2. ' self' → logprob: -1.7465665340423584
    3. '       ' → logprob: -3.1215665340423584
    4. '   ' → logprob: -9.871566772460938
    5. '	self' → logprob: -12.621566772460938
    6. ' ' → logprob: -12.871566772460938
    7. 'super' → logprob: -13.746566772460938
    8. '      ' → logprob: -14.496566772460938
    9. '     ' → logprob: -15.246566772460938
    10. '#' → logprob: -15.246566772460938

Token 263: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5951077342033386
    2. 'len' → logprob: -1.7201077938079834
    3. 'not' → logprob: -1.8451077938079834
    4. ' len' → logprob: -2.2201077938079834
    5. 'stars' → logprob: -6.345107555389404
    6. 'any' → logprob: -7.845107555389404
    7. ' any' → logprob: -7.970107555389404
    8. ' stars' → logprob: -8.220108032226562
    9. '(len' → logprob: -10.470108032226562
    10. '   ' → logprob: -11.095108032226562

Token 264: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.05591956526041031
    2. ' stars' → logprob: -2.930919647216797
    3. 'all' → logprob: -7.055919647216797
    4. ' all' → logprob: -8.930919647216797
    5. ' isinstance' → logprob: -10.930919647216797
    6. 'len' → logprob: -11.430919647216797
    7. '
' → logprob: -12.805919647216797
    8. ' len' → logprob: -13.430919647216797
    9. 'star' → logprob: -13.680919647216797
    10. '   ' → logprob: -14.055919647216797

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011111955158412457
    2. ':
' → logprob: -4.761111736297607
    3. ' or' → logprob: -6.011111736297607
    4. ' :' → logprob: -10.136112213134766
    5. '):' → logprob: -14.011112213134766
    6. ':return' → logprob: -14.386112213134766
    7. ':list' → logprob: -14.886112213134766
    8. '[' → logprob: -15.136112213134766
    9. 'or' → logprob: -15.511112213134766
    10. '   ' → logprob: -15.511112213134766

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034674715250730515
    2. ':
' → logprob: -3.659674644470215
    3. ':' → logprob: -5.034674644470215
    4. '
' → logprob: -7.284674644470215
    5. ',' → logprob: -7.409674644470215
    6. ' raise' → logprob: -8.534674644470215
    7. 'raise' → logprob: -8.784674644470215
    8. '       ' → logprob: -9.409674644470215
    9. ' or' → logprob: -11.034674644470215
    10. ' :
' → logprob: -11.284674644470215

Token 267: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4743313491344452
    2. 'raise' (adapté à ' raise') → logprob: -0.9743313789367676
    3. '           ' → logprob: -8.47433090209961
    4. '
' → logprob: -10.72433090209961
    5. '	raise' → logprob: -11.34933090209961
    6. 'return' → logprob: -12.09933090209961
    7. '_raise' → logprob: -13.09933090209961
    8. ' return' → logprob: -13.34933090209961
    9. 'Raise' → logprob: -14.34933090209961
    10. '            ' → logprob: -14.47433090209961

Token 268: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.2014247477054596
    2. 'Value' → logprob: -1.7014247179031372
    3. '	Value' → logprob: -11.701424598693848
    4. '_Value' → logprob: -14.201424598693848
    5. '<Value' → logprob: -14.326424598693848
    6. '_value' → logprob: -14.576424598693848
    7. '(Value' → logprob: -14.576424598693848
    8. '.Value' → logprob: -15.076424598693848
    9. ' Val' → logprob: -15.826424598693848
    10. ' value' → logprob: -15.826424598693848

Token 269: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.2113979209971149e-05
    2. 'rror' → logprob: -11.375012397766113
    3. 'Value' → logprob: -14.500012397766113
    4. 'Argument' → logprob: -17.875011444091797
    5. 'error' → logprob: -18.625011444091797
    6. 'ror' → logprob: -18.750011444091797
    7. 'Erro' → logprob: -19.500011444091797
    8. 'Er' → logprob: -19.625011444091797
    9. 'r' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.000011444091797

Token 270: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004106184933334589
    2. '('' → logprob: -5.504106044769287
    3. '(' → logprob: -10.504106521606445
    4. '       ' → logprob: -15.629106521606445
    5. ' ("' → logprob: -16.504106521606445
    6. '("'' → logprob: -16.504106521606445
    7. '('"' → logprob: -17.254106521606445
    8. '   ' → logprob: -18.254106521606445
    9. '"' → logprob: -18.379106521606445
    10. '(
' → logprob: -18.629106521606445

Token 271: 'Star' (ID: 17883)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.014030921272933483
    2. 'Stars' → logprob: -4.889030933380127
    3. 'At' → logprob: -5.639030933380127
    4. 'Star' → logprob: -6.389030933380127
    5. ' stars' → logprob: -7.639030933380127
    6. 'star' → logprob: -8.139030456542969
    7. 'The' → logprob: -8.764030456542969
    8. 'List' → logprob: -9.389030456542969
    9. 'Must' → logprob: -10.514030456542969
    10. 'Cannot' → logprob: -11.139030456542969

Token 272: 'Pattern' (ID: 16821)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029597735032439232
    2. ' list' → logprob: -4.279597759246826
    3. ' pattern' → logprob: -5.029597759246826
    4. 'Pattern' → logprob: -5.529597759246826
    5. ' s' → logprob: -5.779597759246826
    6. 'pattern' → logprob: -7.404597759246826
    7. 'list' → logprob: -7.904597759246826
    8. ' Pattern' → logprob: -8.154597282409668
    9. '       ' → logprob: -8.904597282409668
    10. '   ' → logprob: -9.029597282409668

Token 273: ' requires' (ID: 10860)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.13994832336902618
    2. ' cannot' → logprob: -2.1399483680725098
    3. 'must' → logprob: -5.51494836807251
    4. ' list' → logprob: -5.76494836807251
    5. ' stars' → logprob: -5.88994836807251
    6. ' requires' → logprob: -6.63994836807251
    7. 'stars' → logprob: -7.13994836807251
    8. 'cannot' → logprob: -7.88994836807251
    9. ':' → logprob: -8.889947891235352
    10. ' should' → logprob: -9.514947891235352

Token 274: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.015149679966270924
    2. 'at' → logprob: -4.2651495933532715
    3. ' stars' → logprob: -7.5151495933532715
    4. ' a' → logprob: -8.39015007019043
    5. 'stars' → logprob: -8.89015007019043
    6. ' non' → logprob: -10.76515007019043
    7. ' ' → logprob: -11.01515007019043
    8. 'a' → logprob: -11.64015007019043
    9. ' some' → logprob: -11.76515007019043
    10. '1' → logprob: -11.89015007019043

Token 275: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.04166203364729881
    2. ' least' → logprob: -3.2916619777679443
    3. 'east' → logprob: -5.666662216186523
    4. 'e' → logprob: -9.541662216186523
    5. 'le' → logprob: -10.791662216186523
    6. 'at' → logprob: -11.041662216186523
    7. 'lease' → logprob: -11.291662216186523
    8. 'Least' → logprob: -11.666662216186523
    9. '   ' → logprob: -12.041662216186523
    10. '>' → logprob: -12.666662216186523

Token 276: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.0067170290276408195
    2. 'one' → logprob: -5.006717205047607
    3. ' ' → logprob: -14.13171672821045
    4. '1' → logprob: -14.63171672821045
    5. '_one' → logprob: -15.63171672821045
    6. ' on' → logprob: -15.75671672821045
    7. 'One' → logprob: -16.256717681884766
    8. '   ' → logprob: -16.756717681884766
    9. ' two' → logprob: -17.881717681884766
    10. '  ' → logprob: -19.131717681884766

Token 277: ' star' (ID: 8253)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.168021559715271
    2. ' star' → logprob: -1.918021559715271
    3. ' Point' → logprob: -5.0430216789245605
    4. 'point' → logprob: -7.2930216789245605
    5. 'star' → logprob: -7.7930216789245605
    6. 'Point' → logprob: -9.293021202087402
    7. ')' → logprob: -10.043021202087402
    8. '")' → logprob: -11.293021202087402
    9. ' element' → logprob: -11.668021202087402
    10. ' Star' → logprob: -11.793021202087402

Token 278: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.20234854519367218
    2. '")' → logprob: -1.7023485898971558
    3. '.")
' → logprob: -7.327348709106445
    4. '.")' → logprob: -9.202348709106445
    5. '")
' → logprob: -9.577348709106445
    6. '")

' → logprob: -10.702348709106445
    7. ')")
' → logprob: -10.827348709106445
    8. ')")' → logprob: -11.077348709106445
    9. ')
' → logprob: -11.577348709106445
    10. ' to' → logprob: -11.577348709106445

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019853383128065616
    2. 'self' → logprob: -8.750198364257812
    3. ' self' → logprob: -10.375198364257812
    4. '           ' → logprob: -12.500198364257812
    5. '
' → logprob: -13.000198364257812
    6. '   ' → logprob: -13.625198364257812
    7. '        
' → logprob: -14.125198364257812
    8. '      ' → logprob: -15.125198364257812
    9. '<|end|>' → logprob: -15.875198364257812
    10. '	self' → logprob: -16.000198364257812

Token 280: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.264236718416214
    2. '       ' → logprob: -1.8892366886138916
    3. 'self' (adapté à ' self') → logprob: -2.5142366886138916
    4. '   ' → logprob: -10.264236450195312
    5. '
' → logprob: -10.889236450195312
    6. ' ' → logprob: -10.889236450195312
    7. '	self' → logprob: -11.764236450195312
    8. '      ' → logprob: -12.639236450195312
    9. '        ' → logprob: -13.014236450195312
    10. '           ' → logprob: -13.139236450195312

Token 281: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.009515230543911457
    2. '.' → logprob: -4.884515285491943
    3. ' .' → logprob: -6.634515285491943
    4. 'stars' → logprob: -8.134514808654785
    5. '.s' → logprob: -9.259514808654785
    6. '.points' → logprob: -9.509514808654785
    7. '.star' → logprob: -9.759514808654785
    8. '   ' → logprob: -11.009514808654785
    9. '       ' → logprob: -11.009514808654785
    10. ' stars' → logprob: -11.759514808654785

Token 282: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -1.8624639324116288e-06
    2. 'ar' → logprob: -14.000001907348633
    3. ' ars' → logprob: -15.500001907348633
    4. '_' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '#' → logprob: -16.250001907348633
    7. '
' → logprob: -16.375001907348633
    8. '=' → logprob: -16.750001907348633
    9. '`' → logprob: -17.000001907348633
    10. '[' → logprob: -17.000001907348633

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193122029304504
    2. ' =' → logprob: -1.5019311904907227
    3. ':' → logprob: -13.501931190490723
    4. '   ' → logprob: -15.251931190490723
    5. 's' → logprob: -15.751931190490723
    6. '[' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.25193214416504
    8. '[:]' → logprob: -16.75193214416504
    9. '.extend' → logprob: -17.75193214416504
    10. '=set' → logprob: -17.87693214416504

Token 284: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.09733262658119202
    2. ' stars' → logprob: -2.722332715988159
    3. 'set' → logprob: -4.22233247756958
    4. ' set' → logprob: -5.34733247756958
    5. '[' → logprob: -5.97233247756958
    6. 'sorted' → logprob: -6.59733247756958
    7. 'fro' → logprob: -6.72233247756958
    8. 'tuple' → logprob: -7.34733247756958
    9. ' fro' → logprob: -7.97233247756958
    10. ' [' → logprob: -7.97233247756958

Token 285: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6088874936103821
    2. '<|end|>' → logprob: -0.9838874936103821
    3. '   ' → logprob: -2.6088874340057373
    4. '<|end|>' → logprob: -4.983887672424316
    5. '    
' → logprob: -7.233887672424316
    6. '

' → logprob: -7.858887672424316
    7. 'def' → logprob: -7.858887672424316
    8. ',' → logprob: -10.233887672424316
    9. ' def' → logprob: -10.483887672424316
    10. ')' → logprob: -10.608887672424316

Token 286: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09071557968854904
    2. ' self' → logprob: -3.5907156467437744
    3. '       ' → logprob: -3.7157156467437744
    4. 'origin' → logprob: -4.465715408325195
    5. 'base' → logprob: -4.465715408325195
    6. 'reference' → logprob: -5.465715408325195
    7. ' base' → logprob: -6.340715408325195
    8. 'ref' → logprob: -6.965715408325195
    9. 'center' → logprob: -7.090715408325195
    10. 'first' → logprob: -7.090715408325195

Token 288: '.reference' (ID: 101461)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6932652592658997
    2. '.st' → logprob: -1.4432651996612549
    3. '.' → logprob: -2.193265199661255
    4. '.points' → logprob: -3.443265199661255
    5. '.center' → logprob: -4.068265438079834
    6. '.v' → logprob: -4.068265438079834
    7. '.vector' → logprob: -4.318265438079834
    8. '.offset' → logprob: -4.568265438079834
    9. '.star' → logprob: -4.693265438079834
    10. '.cent' → logprob: -4.943265438079834

Token 289: '_star' (ID: 78943)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8464450836181641
    2. '_point' → logprob: -0.8464450836181641
    3. '=' → logprob: -1.971445083618164
    4. '_star' → logprob: -6.346445083618164
    5. '_' → logprob: -7.096445083618164
    6. 'point' → logprob: -9.346445083618164
    7. '_vector' → logprob: -9.971445083618164
    8. '_points' → logprob: -10.096445083618164
    9. 'Point' → logprob: -10.596445083618164
    10. '_index' → logprob: -10.721445083618164

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011067510582506657
    2. '=' → logprob: -4.5110673904418945
    3. ' ' → logprob: -11.011067390441895
    4. ':' → logprob: -13.386067390441895
    5. '<|end|>' → logprob: -13.636067390441895
    6. 's' → logprob: -15.386067390441895
    7. '_' → logprob: -16.13606834411621
    8. ')' → logprob: -16.76106834411621
    9. '=None' → logprob: -16.76106834411621
    10. '.' → logprob: -17.63606834411621

Token 291: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.18212692439556122
    2. ' stars' → logprob: -1.8071268796920776
    3. 'self' → logprob: -6.182126998901367
    4. ' self' → logprob: -8.182126998901367
    5. 'star' → logprob: -11.307126998901367
    6. '   ' → logprob: -11.557126998901367
    7. '       ' → logprob: -12.932126998901367
    8. ' ' → logprob: -13.557126998901367
    9. 'points' → logprob: -13.682126998901367
    10. ' star' → logprob: -13.807126998901367

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. '0' → logprob: -12.125005722045898
    3. ' [' → logprob: -15.250005722045898
    4. '[
' → logprob: -16.5000057220459
    5. '[-' → logprob: -17.6250057220459
    6. '```' → logprob: -18.2500057220459
    7. 's' → logprob: -18.3750057220459
    8. ' ' → logprob: -18.3750057220459
    9. '   ' → logprob: -19.0000057220459
    10. '
' → logprob: -19.0000057220459

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.937508583068848
    4. '[' → logprob: -16.37500762939453
    5. '1' → logprob: -17.06250762939453
    6. '
' → logprob: -17.12500762939453
    7. '۰' → logprob: -17.31250762939453
    8. '00' → logprob: -17.81250762939453
    9. ':' → logprob: -17.93750762939453
    10. '  ' → logprob: -18.50000762939453

Token 294: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3890967071056366
    2. ']' → logprob: -1.139096736907959
    3. '<|end|>' → logprob: -6.389096736907959
    4. ' ]' → logprob: -8.3890962600708
    5. ' )' → logprob: -8.6390962600708
    6. ')]' → logprob: -9.6390962600708
    7. '])' → logprob: -10.5140962600708
    8. '<|end|>' → logprob: -10.8890962600708
    9. ')
' → logprob: -11.7640962600708
    10. ' ' → logprob: -12.1390962600708

Token 295: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41983819007873535
    2. '<|end|>' → logprob: -1.7948381900787354
    3. '   ' → logprob: -1.9198381900787354
    4. 'def' → logprob: -4.169837951660156
    5. '    
' → logprob: -5.044837951660156
    6. '<|end|>' → logprob: -5.419837951660156
    7. ' def' → logprob: -6.169837951660156
    8. '

' → logprob: -7.794837951660156
    9. '  
' → logprob: -8.294837951660156
    10. '        
' → logprob: -8.669837951660156

Token 296: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006076687481254339
    2. '       ' → logprob: -5.131076812744141
    3. ' self' → logprob: -9.75607681274414
    4. '#' → logprob: -10.25607681274414
    5. '   ' → logprob: -10.63107681274414
    6. 'def' → logprob: -11.75607681274414
    7. 'offset' → logprob: -11.75607681274414
    8. 'star' → logprob: -12.13107681274414
    9. 'vectors' → logprob: -13.13107681274414
    10. 'diff' → logprob: -13.38107681274414

Token 297: '.relative' (ID: 154007)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.9993543028831482
    2. '.v' → logprob: -1.249354362487793
    3. '.' → logprob: -2.749354362487793
    4. '.pattern' → logprob: -2.874354362487793
    5. '.vector' → logprob: -2.999354362487793
    6. '._' → logprob: -3.124354362487793
    7. '.relative' → logprob: -3.499354362487793
    8. '.reference' → logprob: -3.624354362487793
    9. '.points' → logprob: -3.624354362487793
    10. '.offset' → logprob: -3.874354362487793

Token 298: '_positions' (ID: 93193)
  Prédit: '_vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vectors' → logprob: -0.6030218005180359
    2. '_positions' → logprob: -0.8530218005180359
    3. '_st' → logprob: -4.228021621704102
    4. '_points' → logprob: -4.478021621704102
    5. '_offsets' → logprob: -7.478021621704102
    6. 's' → logprob: -9.728021621704102
    7. '_vector' → logprob: -10.353021621704102
    8. 'positions' → logprob: -10.728021621704102
    9. '_dist' → logprob: -10.978021621704102
    10. '_star' → logprob: -11.103021621704102

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03397461026906967
    2. '=' → logprob: -3.4089746475219727
    3. ':' → logprob: -8.033974647521973
    4. ' :' → logprob: -12.533974647521973
    5. '=[]' → logprob: -15.033974647521973
    6. ' =[' → logprob: -15.533974647521973
    7. ' ' → logprob: -15.783974647521973
    8. '[' → logprob: -16.033973693847656
    9. 's' → logprob: -16.283973693847656
    10. '[:]' → logprob: -16.533973693847656

Token 300: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5991013050079346
    2. '[' → logprob: -0.8491013050079346
    3. '[self' → logprob: -4.0991010665893555
    4. '[
' → logprob: -6.8491010665893555
    5. '[new' → logprob: -7.2241010665893555
    6. '{' → logprob: -7.7241010665893555
    7. '[start' → logprob: -7.8491010665893555
    8. '[class' → logprob: -7.9741010665893555
    9. '[len' → logprob: -8.349101066589355
    10. ' ' → logprob: -8.849101066589355

Token 301: '._' (ID: 2697)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.2262173593044281
    2. '._' → logprob: -2.726217269897461
    3. '.' → logprob: -2.976217269897461
    4. '[' → logprob: -3.101217269897461
    5. '.[' → logprob: -4.351217269897461
    6. '.__' → logprob: -4.351217269897461
    7. '[-' → logprob: -5.851217269897461
    8. ' [' → logprob: -5.976217269897461
    9. '.relative' → logprob: -6.601217269897461
    10. ' .' → logprob: -6.976217269897461

Token 302: 'calculate' (ID: 58453)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.08005698770284653
    2. 'calculate' → logprob: -2.58005690574646
    3. 'get' → logprob: -7.205057144165039
    4. 'calc' → logprob: -8.580057144165039
    5. 'build' → logprob: -9.580057144165039
    6. '[' → logprob: -9.955057144165039
    7. '_compute' → logprob: -9.955057144165039
    8. '[get' → logprob: -10.705057144165039
    9. '.compute' → logprob: -11.330057144165039
    10. 'create' → logprob: -11.830057144165039

Token 303: '_relative' (ID: 73580)
  Prédit: '_relative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_relative' → logprob: -0.013003509491682053
    2. '_vectors' → logprob: -5.763003349304199
    3. '_positions' → logprob: -5.888003349304199
    4. 'relative' → logprob: -6.013003349304199
    5. '([' → logprob: -6.263003349304199
    6. '_' → logprob: -7.638003349304199
    7. '()' → logprob: -7.763003349304199
    8. '(' → logprob: -7.763003349304199
    9. '_rel' → logprob: -7.888003349304199
    10. '([(' → logprob: -8.2630033493042

Token 304: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0007162463734857738
    2. '()' → logprob: -7.875716209411621
    3. 'positions' → logprob: -8.250716209411621
    4. '()
' → logprob: -10.750716209411621
    5. '_vectors' → logprob: -10.875716209411621
    6. '_' → logprob: -11.500716209411621
    7. '```' → logprob: -12.000716209411621
    8. '_points' → logprob: -12.125716209411621
    9. 'Positions' → logprob: -12.625716209411621
    10. 's' → logprob: -13.000716209411621

Token 305: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006212961161509156
    2. '()
' → logprob: -7.500621318817139
    3. '()

' → logprob: -10.62562084197998
    4. ' ()' → logprob: -10.75062084197998
    5. '()[' → logprob: -11.75062084197998
    6. '(st' → logprob: -12.00062084197998
    7. '(' → logprob: -12.50062084197998
    8. '()]' → logprob: -14.12562084197998
    9. '()`' → logprob: -14.25062084197998
    10. '([' → logprob: -14.62562084197998

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07415708154439926
    2. 'def' → logprob: -2.6991569995880127
    3. '
' → logprob: -5.949157238006592
    4. '    
' → logprob: -6.574157238006592
    5. ' def' → logprob: -9.699156761169434
    6. '	def' → logprob: -9.949156761169434
    7. '```' → logprob: -10.324156761169434
    8. '<|end|>' → logprob: -10.824156761169434
    9. '	
' → logprob: -10.949156761169434
    10. '  
' → logprob: -11.699156761169434

Token 307: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0798296183347702
    2. '   ' → logprob: -2.579829692840576
    3. ' def' → logprob: -7.079829692840576
    4. '
' → logprob: -9.704829216003418
    5. '	def' → logprob: -10.954829216003418
    6. '    
' → logprob: -10.954829216003418
    7. '```' → logprob: -14.454829216003418
    8. ' ' → logprob: -14.954829216003418
    9. '  ' → logprob: -15.329829216003418
    10. '  
' → logprob: -15.579829216003418

Token 308: ' _' (ID: 1175)
  Prédit: '_cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -0.0003413031517993659
    2. ' _' → logprob: -8.875341415405273
    3. '_relative' → logprob: -9.375341415405273
    4. '_' → logprob: -10.125341415405273
    5. '_calc' → logprob: -10.875341415405273
    6. '_star' → logprob: -11.750341415405273
    7. '_c' → logprob: -12.000341415405273
    8. '_define' → logprob: -12.000341415405273
    9. '_reference' → logprob: -12.625341415405273
    10. '_update' → logprob: -12.875341415405273

Token 309: 'calculate' (ID: 58453)
  Prédit: 'calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.0280383548888494e-06
    2. ' calculate' → logprob: -14.750000953674316
    3. '_cal' → logprob: -15.000000953674316
    4. 'calc' → logprob: -16.000001907348633
    5. 'cal' → logprob: -17.000001907348633
    6. 'calcul' → logprob: -17.125001907348633
    7. '.calculate' → logprob: -17.500001907348633
    8. 'alculate' → logprob: -18.000001907348633
    9. 'def' → logprob: -18.125001907348633
    10. 'compute' → logprob: -19.000001907348633

Token 310: '_relative' (ID: 73580)
  Prédit: '_relative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_relative' → logprob: -8.180258191714529e-06
    2. '_rel' → logprob: -12.500008583068848
    3. '_' → logprob: -13.125008583068848
    4. '_positions' → logprob: -14.250008583068848
    5. '_re' → logprob: -14.625008583068848
    6. '_absolute' → logprob: -14.750008583068848
    7. ' _' → logprob: -15.250008583068848
    8. '_remaining' → logprob: -15.375008583068848
    9. 'relative' → logprob: -15.750008583068848
    10. '_real' → logprob: -16.25000762939453

Token 311: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.875004768371582
    3. ' _' → logprob: -13.375004768371582
    4. '_offsets' → logprob: -15.875004768371582
    5. '_points' → logprob: -16.000003814697266
    6. '_locations' → logprob: -16.750003814697266
    7. '_dist' → logprob: -16.875003814697266
    8. '_pos' → logprob: -16.875003814697266
    9. '_vectors' → logprob: -17.500003814697266
    10. '_
' → logprob: -18.125003814697266

Token 312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012678056373260915
    2. '(' → logprob: -9.375126838684082
    3. '   ' → logprob: -10.875126838684082
    4. ' (' → logprob: -11.625126838684082
    5. 'self' → logprob: -11.625126838684082
    6. ' self' → logprob: -12.500126838684082
    7. '(
' → logprob: -14.625126838684082
    8. ' ' → logprob: -15.250126838684082
    9. '(s' → logprob: -15.375126838684082
    10. '       ' → logprob: -15.750126838684082

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04207029193639755
    2. 'self' → logprob: -3.9170703887939453
    3. '):' → logprob: -4.542070388793945
    4. '):
' → logprob: -5.042070388793945
    5. '(self' → logprob: -5.542070388793945
    6. ' )' → logprob: -9.542070388793945
    7. '   ' → logprob: -9.917070388793945
    8. ')->' → logprob: -10.042070388793945
    9. ',' → logprob: -10.917070388793945
    10. ')(' → logprob: -11.417070388793945

Token 314: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022535098833031952
    2. ' (' → logprob: -9.875225067138672
    3. '(' → logprob: -10.125225067138672
    4. 'self' → logprob: -10.250225067138672
    5. ' ->' → logprob: -10.375225067138672
    6. '   ' → logprob: -10.375225067138672
    7. ' self' → logprob: -10.625225067138672
    8. '       ' → logprob: -12.000225067138672
    9. '->' → logprob: -12.875225067138672
    10. '(s' → logprob: -14.375225067138672

Token 315: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6450668573379517
    2. 'list' → logprob: -0.7700668573379517
    3. 'dict' → logprob: -4.520066738128662
    4. ' list' → logprob: -7.145066738128662
    5. ' set' → logprob: -7.645066738128662
    6. '   ' → logprob: -9.27006721496582
    7. ' dict' → logprob: -10.14506721496582
    8. '[list' → logprob: -10.39506721496582
    9. 'tuple' → logprob: -10.52006721496582
    10. 'fro' → logprob: -10.64506721496582

Token 316: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023894020705483854
    2. '[self' → logprob: -9.375239372253418
    3. '       ' → logprob: -9.750239372253418
    4. '   ' → logprob: -10.000239372253418
    5. '['' → logprob: -10.750239372253418
    6. ':
' → logprob: -11.500239372253418
    7. '[int' → logprob: -11.750239372253418
    8. ':' → logprob: -13.000239372253418
    9. '[
' → logprob: -13.000239372253418
    10. '[str' → logprob: -13.125239372253418

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002031827752944082
    2. ':' → logprob: -9.500203132629395
    3. '{' → logprob: -9.500203132629395
    4. '()' → logprob: -11.500203132629395
    5. '():' → logprob: -11.500203132629395
    6. 'return' → logprob: -12.625203132629395
    7. ' set' → logprob: -12.750203132629395
    8. ' {' → logprob: -12.750203132629395
    9. '   ' → logprob: -12.750203132629395
    10. ' return' → logprob: -12.875203132629395

Token 318: ' #' (ID: 1069)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4378298819065094
    2. '       ' → logprob: -1.187829852104187
    3. '{return' → logprob: -4.187829971313477
    4. 'return' → logprob: -4.437829971313477
    5. ' {' → logprob: -4.687829971313477
    6. '{s' → logprob: -5.187829971313477
    7. '{x' → logprob: -5.812829971313477
    8. '{
' → logprob: -6.062829971313477
    9. ' return' → logprob: -6.187829971313477
    10. '{i' → logprob: -9.062829971313477

Token 319: ' Positions' (ID: 138312)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14259172976016998
    2. '       ' → logprob: -2.142591714859009
    3. 'positions' → logprob: -4.767591953277588
    4. ' return' → logprob: -5.142591953277588
    5. 'relative' → logprob: -7.142591953277588
    6. '{' → logprob: -8.89259147644043
    7. 'result' → logprob: -9.26759147644043
    8. ' positions' → logprob: -9.26759147644043
    9. 'pos' → logprob: -10.51759147644043
    10. '```' → logprob: -10.89259147644043

Token 320: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04468046501278877
    2. '       ' → logprob: -3.66968035697937
    3. '=' → logprob: -4.169680595397949
    4. ':' → logprob: -6.419680595397949
    5. 'return' → logprob: -7.544680595397949
    6. '=set' → logprob: -8.16968059539795
    7. ' return' → logprob: -9.41968059539795
    8. '{' → logprob: -9.66968059539795
    9. 'eturn' → logprob: -9.91968059539795
    10. 'of' → logprob: -10.41968059539795

Token 321: ' stars' (ID: 13701)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.19878201186656952
    2. ' vectors' → logprob: -2.823781967163086
    3. 'self' → logprob: -3.698781967163086
    4. 'vector' → logprob: -3.948781967163086
    5. '{' → logprob: -4.073781967163086
    6. ' Vector' → logprob: -4.198781967163086
    7. ' vector' → logprob: -4.448781967163086
    8. 'vectors' → logprob: -4.573781967163086
    9. '       ' → logprob: -4.948781967163086
    10. 'Vectors' → logprob: -5.573781967163086

Token 322: ' relative' (ID: 15001)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08642690628767014
    2. '       ' → logprob: -2.9614269733428955
    3. '=' → logprob: -3.5864269733428955
    4. 'relative' → logprob: -6.711426734924316
    5. ' relative' → logprob: -7.086426734924316
    6. ' as' → logprob: -7.711426734924316
    7. 'return' → logprob: -8.211426734924316
    8. ':' → logprob: -8.461426734924316
    9. ' in' → logprob: -9.336426734924316
    10. '{' → logprob: -9.586426734924316

Token 323: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.050253767520189285
    2. ' to' → logprob: -3.3002538681030273
    3. '       ' → logprob: -4.425253868103027
    4. 'self' → logprob: -8.800253868103027
    5. '   ' → logprob: -11.925253868103027
    6. ' self' → logprob: -12.675253868103027
    7. '_to' → logprob: -13.550253868103027
    8. '        ' → logprob: -13.925253868103027
    9. ',' → logprob: -14.425253868103027
    10. '      ' → logprob: -14.800253868103027

Token 324: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008657239377498627
    2. ' self' → logprob: -4.758657455444336
    3. 'the' → logprob: -10.633657455444336
    4. ' the' → logprob: -11.258657455444336
    5. '       ' → logprob: -13.133657455444336
    6. '(self' → logprob: -13.383657455444336
    7. '[self' → logprob: -14.258657455444336
    8. '   ' → logprob: -15.008657455444336
    9. '=self' → logprob: -15.258657455444336
    10. '	self' → logprob: -15.383657455444336

Token 325: ' reference' (ID: 9682)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4752131402492523
    2. 'reference' → logprob: -0.9752131700515747
    3. ' reference' → logprob: -7.475213050842285
    4. ' self' → logprob: -7.600213050842285
    5. '.reference' → logprob: -10.975213050842285
    6. 'star' → logprob: -11.225213050842285
    7. 'Reference' → logprob: -11.475213050842285
    8. 'references' → logprob: -11.850213050842285
    9. '
' → logprob: -12.600213050842285
    10. '[self' → logprob: -13.225213050842285

Token 326: ' star' (ID: 8253)
  Prédit: '_star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -0.005190113093703985
    2. '_point' → logprob: -5.880189895629883
    3. ' star' → logprob: -7.255189895629883
    4. '       ' → logprob: -7.755189895629883
    5. 'star' → logprob: -7.755189895629883
    6. 'self' → logprob: -8.130189895629883
    7. '_st' → logprob: -8.880189895629883
    8. '_' → logprob: -9.755189895629883
    9. '   ' → logprob: -9.755189895629883
    10. ' =' → logprob: -10.005189895629883

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04611200839281082
    2. ':' → logprob: -3.921112060546875
    3. ' =' → logprob: -4.046112060546875
    4. 'return' → logprob: -5.421112060546875
    5. '=' → logprob: -6.796112060546875
    6. '{' → logprob: -7.296112060546875
    7. ':
' → logprob: -7.921112060546875
    8. ' return' → logprob: -8.171112060546875
    9. '   ' → logprob: -8.546112060546875
    10. '(self' → logprob: -8.546112060546875

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000351670227246359
    2. ':' → logprob: -8.750351905822754
    3. 'return' → logprob: -9.125351905822754
    4. '{' → logprob: -10.875351905822754
    5. 'set' → logprob: -11.000351905822754
    6. ' =' → logprob: -11.500351905822754
    7. ' return' → logprob: -11.500351905822754
    8. ' set' → logprob: -11.875351905822754
    9. '      ' → logprob: -12.875351905822754
    10. '=set' → logprob: -13.000351905822754

Token 329: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1741056591272354
    2. '       ' → logprob: -2.174105644226074
    3. '{' → logprob: -3.299105644226074
    4. 'positions' → logprob: -5.549105644226074
    5. 'rel' → logprob: -6.174105644226074
    6. '{return' → logprob: -6.924105644226074
    7. 'relative' → logprob: -7.174105644226074
    8. ' return' → logprob: -7.299105644226074
    9. 'result' → logprob: -7.799105644226074
    10. 'pos' → logprob: -8.924105644226074

Token 330: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014287851750850677
    2. ' {' → logprob: -4.264287948608398
    3. '{
' → logprob: -9.639287948608398
    4. 'set' → logprob: -10.889287948608398
    5. '   ' → logprob: -11.264287948608398
    6. '{x' → logprob: -11.389287948608398
    7. '{s' → logprob: -11.639287948608398
    8. '{i' → logprob: -13.139287948608398
    9. ' set' → logprob: -13.264287948608398
    10. '       ' → logprob: -13.264287948608398

Token 331: 'star' (ID: 16204)
  Prédit: 'star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'star' → logprob: -0.04814008250832558
    2. 'self' → logprob: -3.298140048980713
    3. ' star' → logprob: -5.048140048980713
    4. 'point' → logprob: -6.423140048980713
    5. 's' → logprob: -7.548140048980713
    6. '       ' → logprob: -7.548140048980713
    7. 'vector' → logprob: -7.923140048980713
    8. 'other' → logprob: -8.423140525817871
    9. ' self' → logprob: -8.923140525817871
    10. 'p' → logprob: -9.798140525817871

Token 332: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005240037105977535
    2. '-' → logprob: -5.255239963531494
    3. ' ' → logprob: -12.005240440368652
    4. ' ' → logprob: -16.005239486694336
    5. ' -
' → logprob: -18.255239486694336
    6. ')' → logprob: -18.380239486694336
    7. ' for' → logprob: -18.630239486694336
    8. '   ' → logprob: -19.130239486694336
    9. '  ' → logprob: -19.130239486694336
    10. '-star' → logprob: -19.130239486694336

Token 333: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001997273648157716
    2. ' self' → logprob: -6.251997470855713
    3. '       ' → logprob: -9.626996994018555
    4. '(self' → logprob: -13.376996994018555
    5. '
' → logprob: -14.001996994018555
    6. '<|end|>' → logprob: -16.001996994018555
    7. '	self' → logprob: -16.126996994018555
    8. '[self' → logprob: -16.376996994018555
    9. '=self' → logprob: -17.626996994018555
    10. '```' → logprob: -17.876996994018555

Token 334: '.reference' (ID: 101461)
  Prédit: '.reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reference' → logprob: -0.0003436872211750597
    2. 'reference' → logprob: -8.000343322753906
    3. '.' → logprob: -12.125343322753906
    4. ' .' → logprob: -13.125343322753906
    5. 'self' → logprob: -15.250343322753906
    6. '.self' → logprob: -15.250343322753906
    7. ' reference' → logprob: -15.625343322753906
    8. '.re' → logprob: -16.875343322753906
    9. '
' → logprob: -17.250343322753906
    10. '.references' → logprob: -17.250343322753906

Token 335: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -6.034592388459714e-06
    2. 'star' → logprob: -13.000005722045898
    3. '_' → logprob: -13.375005722045898
    4. 'Star' → logprob: -13.750005722045898
    5. '_point' → logprob: -14.625005722045898
    6. '_STAR' → logprob: -15.375005722045898
    7. '_st' → logprob: -16.2500057220459
    8. '.star' → logprob: -16.8750057220459
    9. ' star' → logprob: -17.1250057220459
    10. '```' → logprob: -17.2500057220459

Token 336: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015286688692867756
    2. '}' → logprob: -4.515286922454834
    3. 'for' → logprob: -5.515286922454834
    4. '<|end|>' → logprob: -9.515286445617676
    5. ' ' → logprob: -10.140286445617676
    6. '       ' → logprob: -10.515286445617676
    7. '	for' → logprob: -10.515286445617676
    8. '[' → logprob: -11.390286445617676
    9. ' }' → logprob: -12.265286445617676
    10. ')' → logprob: -12.640286445617676

Token 337: ' star' (ID: 8253)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'star' → logprob: -0.16031348705291748
    2. ' star' → logprob: -1.9103134870529175
    3. 'self' → logprob: -9.410313606262207
    4. ' self' → logprob: -12.035313606262207
    5. '.star' → logprob: -14.410313606262207
    6. '
' → logprob: -15.160313606262207
    7. '_star' → logprob: -15.160313606262207
    8. 'stars' → logprob: -15.785313606262207
    9. ' ' → logprob: -16.53531265258789
    10. 'Star' → logprob: -16.66031265258789

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869483470916748
    2. 'in' → logprob: -1.1369483470916748
    3. '}' → logprob: -9.886948585510254
    4. 'self' → logprob: -11.636948585510254
    5. '<|end|>' → logprob: -12.011948585510254
    6. 'star' → logprob: -13.136948585510254
    7. '<|end|>' → logprob: -13.511948585510254
    8. '
' → logprob: -13.761948585510254
    9. ')' → logprob: -13.886948585510254
    10. 'stars' → logprob: -14.011948585510254

Token 339: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080897197127342
    2. ' self' → logprob: -5.504080772399902
    3. '       ' → logprob: -13.754080772399902
    4. '
' → logprob: -14.254080772399902
    5. '	self' → logprob: -15.129080772399902
    6. '           ' → logprob: -15.504080772399902
    7. '   ' → logprob: -16.00408172607422
    8. '(self' → logprob: -16.25408172607422
    9. '[self' → logprob: -16.87908172607422
    10. '    ' → logprob: -18.25408172607422

Token 340: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -1.6047699318733066e-05
    2. 'stars' → logprob: -11.625016212463379
    3. '.' → logprob: -12.125016212463379
    4. '.star' → logprob: -15.250016212463379
    5. '	st' → logprob: -15.500016212463379
    6. '.points' → logprob: -15.625016212463379
    7. '(st' → logprob: -15.625016212463379
    8. '}' → logprob: -15.625016212463379
    9. '.s' → logprob: -16.250015258789062
    10. 'Stars' → logprob: -16.375015258789062

Token 341: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -2.939851037808694e-05
    2. 'ar' → logprob: -10.500029563903809
    3. ' ars' → logprob: -14.375029563903809
    4. 'arts' → logprob: -15.125029563903809
    5. 'rs' → logprob: -16.125028610229492
    6. '#' → logprob: -16.250028610229492
    7. '   ' → logprob: -16.500028610229492
    8. '[' → logprob: -16.500028610229492
    9. 'stars' → logprob: -16.500028610229492
    10. '
' → logprob: -16.875028610229492

Token 342: '[' (ID: 58)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00016957100888248533
    2. ' }' → logprob: -9.12516975402832
    3. '       ' → logprob: -10.12516975402832
    4. '   ' → logprob: -11.12516975402832
    5. '}
' → logprob: -12.62516975402832
    6. ' if' → logprob: -13.62516975402832
    7. '	' → logprob: -14.00016975402832
    8. '}

' → logprob: -15.75016975402832
    9. ')' → logprob: -15.87516975402832
    10. '  ' → logprob: -17.12516975402832

Token 343: '1' (ID: 16)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.022055821493268013
    2. '1' → logprob: -3.8970558643341064
    3. ']}' → logprob: -7.022055625915527
    4. ')}' → logprob: -8.022055625915527
    5. '})' → logprob: -8.772055625915527
    6. '}}' → logprob: -9.897055625915527
    7. '[' → logprob: -10.272055625915527
    8. '}]' → logprob: -10.772055625915527
    9. ' }' → logprob: -11.022055625915527
    10. 'if' → logprob: -12.397055625915527

Token 344: ':]' (ID: 67377)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.050758469849824905
    2. ']}' → logprob: -3.0507583618164062
    3. ')}' → logprob: -6.800758361816406
    4. ' }' → logprob: -7.050758361816406
    5. '()}' → logprob: -9.675758361816406
    6. '}]' → logprob: -10.050758361816406
    7. ']' → logprob: -10.550758361816406
    8. '}}' → logprob: -11.300758361816406
    9. '>}' → logprob: -11.300758361816406
    10. ' ]' → logprob: -11.925758361816406

Token 345: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0001149867384810932
    2. ' }' → logprob: -9.375115394592285
    3. '   ' → logprob: -11.250115394592285
    4. '}
' → logprob: -11.500115394592285
    5. '       ' → logprob: -12.250115394592285
    6. '	' → logprob: -13.875115394592285
    7. '}

' → logprob: -14.125115394592285
    8. ' ' → logprob: -15.750115394592285
    9. '  ' → logprob: -16.50011444091797
    10. ')' → logprob: -16.62511444091797

Token 346: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' Star' (ID: 11307)
  Prédit: ' Star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Star' → logprob: -0.22368472814559937
    2. 'Star' → logprob: -2.223684787750244
    3. ' Trans' → logprob: -3.973684787750244
    4. 'Trans' → logprob: -4.598684787750244
    5. ' Pattern' → logprob: -4.598684787750244
    6. 'Pattern' → logprob: -4.973684787750244
    7. ' Translation' → logprob: -5.723684787750244
    8. 'const' → logprob: -5.848684787750244
    9. 'Translation' → logprob: -5.848684787750244
    10. 'Transform' → logprob: -5.973684787750244

Token 348: 'Map' (ID: 2307)
  Prédit: 'Matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -0.7739983201026917
    2. 'Pattern' → logprob: -0.8989983201026917
    3. 'Map' → logprob: -2.523998260498047
    4. 'Finder' → logprob: -4.523998260498047
    5. 'Scanner' → logprob: -5.023998260498047
    6. 'Tracker' → logprob: -5.023998260498047
    7. 'Mapper' → logprob: -5.273998260498047
    8. 'Locator' → logprob: -5.648998260498047
    9. 'Recognizer' → logprob: -5.773998260498047
    10. 'Field' → logprob: -6.023998260498047

Token 349: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026324795559048653
    2. ':
' → logprob: -3.65132474899292
    3. '   ' → logprob: -11.151325225830078
    4. ':

' → logprob: -12.901325225830078
    5. ':def' → logprob: -13.276325225830078
    6. ' :' → logprob: -14.026325225830078
    7. '):' → logprob: -14.151325225830078
    8. '(object' → logprob: -14.151325225830078
    9. ':list' → logprob: -14.276325225830078
    10. 'def' → logprob: -15.026325225830078

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013059526681900024
    2. ':' → logprob: -7.626306056976318
    3. ':
' → logprob: -7.876306056976318
    4. 'class' → logprob: -8.50130558013916
    5. '(' → logprob: -9.50130558013916
    6. 'def' → logprob: -9.87630558013916
    7. ' def' → logprob: -10.62630558013916
    8. '    
' → logprob: -10.87630558013916
    9. '
' → logprob: -11.50130558013916
    10. '):
' → logprob: -11.62630558013916

Token 351: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01666787639260292
    2. 'def' (adapté à ' def') → logprob: -4.39166784286499
    3. '   ' → logprob: -5.51666784286499
    4. ' __' → logprob: -9.391668319702148
    5. 'class' → logprob: -10.391668319702148
    6. '__' → logprob: -11.641668319702148
    7. ' class' → logprob: -12.266668319702148
    8. '    ' → logprob: -13.891668319702148
    9. '```' → logprob: -14.141668319702148
    10. ' ' → logprob: -15.391668319702148

Token 352: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.32511186599731445
    2. '__' → logprob: -1.3251118659973145
    3. ' def' → logprob: -4.9501118659973145
    4. 'def' → logprob: -5.7001118659973145
    5. 'class' → logprob: -7.2001118659973145
    6. '   ' → logprob: -9.075111389160156
    7. '```' → logprob: -9.075111389160156
    8. '___' → logprob: -9.450111389160156
    9. 'object' → logprob: -9.825111389160156
    10. ' list' → logprob: -9.950111389160156

Token 353: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.018150178715586662
    2. 'slots' → logprob: -4.018150329589844
    3. '_slots' → logprob: -16.143150329589844
    4. 'slot' → logprob: -17.518150329589844
    5. ' slots' → logprob: -17.768150329589844
    6. '_init' → logprob: -17.893150329589844
    7. '__' → logprob: -18.393150329589844
    8. 'def' → logprob: -18.518150329589844
    9. ' init' → logprob: -18.768150329589844
    10. '   ' → logprob: -18.893150329589844

Token 354: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00013738969573751092
    2. '__' → logprob: -9.000137329101562
    3. '(self' → logprob: -11.750137329101562
    4. '__(
' → logprob: -12.250137329101562
    5. '_(' → logprob: -13.875137329101562
    6. '   ' → logprob: -15.500137329101562
    7. '```' → logprob: -16.125137329101562
    8. 'self' → logprob: -17.250137329101562
    9. ' (' → logprob: -17.375137329101562
    10. 'def' → logprob: -17.875137329101562

Token 355: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1279553291387856e-05
    2. ' self' → logprob: -12.250011444091797
    3. '   ' → logprob: -12.375011444091797
    4. '
' → logprob: -13.625011444091797
    5. ',' → logprob: -14.875011444091797
    6. '       ' → logprob: -15.000011444091797
    7. '):
' → logprob: -16.000011444091797
    8. ')' → logprob: -16.375011444091797
    9. '  ' → logprob: -17.625011444091797
    10. '0' → logprob: -17.875011444091797

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06480535864830017
    2. 'self' → logprob: -2.814805269241333
    3. '       ' → logprob: -6.439805507659912
    4. '   ' → logprob: -6.814805507659912
    5. ' self' → logprob: -10.064805030822754
    6. '):
' → logprob: -10.439805030822754
    7. '(self' → logprob: -10.439805030822754
    8. '
' → logprob: -11.564805030822754
    9. ' ,' → logprob: -11.939805030822754
    10. '__(' → logprob: -12.064805030822754

Token 357: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.13357119262218475
    2. ' stars' → logprob: -2.383571147918701
    3. 'points' → logprob: -3.758571147918701
    4. ' points' → logprob: -5.133571147918701
    5. 'star' → logprob: -6.258571147918701
    6. 'patterns' → logprob: -6.883571147918701
    7. ' patterns' → logprob: -8.88357162475586
    8. ' star' → logprob: -9.00857162475586
    9. 'self' → logprob: -10.00857162475586
    10. 'pattern' → logprob: -10.00857162475586

Token 358: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.320199877838604e-07
    2. '):' → logprob: -15.5
    3. '   ' → logprob: -16.125
    4. ' :' → logprob: -17.0
    5. ':list' → logprob: -17.25
    6. '):
' → logprob: -18.0
    7. '_:' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. '       ' → logprob: -19.5
    10. '  ' → logprob: -19.75

Token 359: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023547448217868805
    2. ' list' → logprob: -3.773547410964966
    3. 'set' → logprob: -8.148547172546387
    4. '   ' → logprob: -11.773547172546387
    5. ' set' → logprob: -13.398547172546387
    6. '       ' → logprob: -13.398547172546387
    7. '[list' → logprob: -13.398547172546387
    8. 'List' → logprob: -15.523547172546387
    9. '           ' → logprob: -16.273548126220703
    10. '	list' → logprob: -16.523548126220703

Token 360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004894073354080319
    2. 'Point' → logprob: -7.625489234924316
    3. '(Point' → logprob: -15.125489234924316
    4. ' Point' → logprob: -15.250489234924316
    5. '<Point' → logprob: -15.375489234924316
    6. ')' → logprob: -15.500489234924316
    7. '   ' → logprob: -15.625489234924316
    8. ':' → logprob: -15.625489234924316
    9. '	Point' → logprob: -16.375490188598633
    10. '       ' → logprob: -16.625490188598633

Token 361: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.319370302458992e-06
    2. 'Star' → logprob: -12.375005722045898
    3. ' Point' → logprob: -13.875005722045898
    4. '	Point' → logprob: -17.6250057220459
    5. 'Vector' → logprob: -18.1250057220459
    6. 'int' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.7500057220459
    8. '[' → logprob: -19.7500057220459
    9. '(Point' → logprob: -20.6250057220459
    10. '<Point' → logprob: -21.0000057220459

Token 362: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.06453247368335724
    2. ']):' → logprob: -2.814532518386841
    3. '):
' → logprob: -6.689532279968262
    4. ']' → logprob: -7.189532279968262
    5. '']):
' → logprob: -8.189532279968262
    6. '):' → logprob: -8.564532279968262
    7. ')' → logprob: -10.189532279968262
    8. '])' → logprob: -10.814532279968262
    9. '       ' → logprob: -11.189532279968262
    10. '   ' → logprob: -11.314532279968262

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.1888679839321412e-05
    2. 'self' → logprob: -11.000021934509277
    3. ' self' → logprob: -12.750021934509277
    4. '   ' → logprob: -13.250021934509277
    5. '      ' → logprob: -16.00002098083496
    6. ',' → logprob: -16.37502098083496
    7. ':' → logprob: -16.62502098083496
    8. '<|end|>' → logprob: -16.75002098083496
    9. '	self' → logprob: -17.25002098083496
    10. '           ' → logprob: -17.62502098083496

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009988279081881046
    2. '       ' → logprob: -5.134988307952881
    3. ' self' → logprob: -5.509988307952881
    4. '   ' → logprob: -12.634987831115723
    5. '	self' → logprob: -13.884987831115723
    6. ' ' → logprob: -14.384987831115723
    7. 'from' → logprob: -15.884987831115723
    8. '
' → logprob: -16.88498878479004
    9. '(self' → logprob: -17.00998878479004
    10. 'class' → logprob: -17.13498878479004

Token 365: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0010889010736718774
    2. '.' → logprob: -7.251089096069336
    3. ' .' → logprob: -8.501089096069336
    4. 'stars' → logprob: -9.501089096069336
    5. '   ' → logprob: -10.501089096069336
    6. '.star' → logprob: -10.501089096069336
    7. '.points' → logprob: -10.626089096069336
    8. '.s' → logprob: -11.626089096069336
    9. '	st' → logprob: -12.751089096069336
    10. ' stars' → logprob: -13.126089096069336

Token 366: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -1.7432603272027336e-06
    2. 'ar' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '#' → logprob: -15.250001907348633
    5. '[' → logprob: -16.500001907348633
    6. '       ' → logprob: -17.000001907348633
    7. '_' → logprob: -17.500001907348633
    8. ' ars' → logprob: -17.875001907348633
    9. 'a' → logprob: -18.000001907348633
    10. '
' → logprob: -18.000001907348633

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132665753364563
    2. ' =' → logprob: -1.3132665157318115
    3. '   ' → logprob: -13.06326675415039
    4. ':' → logprob: -13.31326675415039
    5. '=set' → logprob: -14.18826675415039
    6. ')' → logprob: -15.93826675415039
    7. ' ' → logprob: -16.18826675415039
    8. '_set' → logprob: -16.43826675415039
    9. '       ' → logprob: -16.56326675415039
    10. ' =
' → logprob: -17.43826675415039

Token 368: ' stars' (ID: 13701)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12911471724510193
    2. 'stars' → logprob: -2.1291146278381348
    3. ' set' → logprob: -6.254114627838135
    4. ' stars' → logprob: -9.004115104675293
    5. '{' → logprob: -10.504115104675293
    6. 'star' → logprob: -10.629115104675293
    7. 'sorted' → logprob: -10.879115104675293
    8. '   ' → logprob: -10.879115104675293
    9. 'points' → logprob: -11.004115104675293
    10. 'fro' → logprob: -11.629115104675293

Token 369: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5483001470565796
    2. '<|end|>' → logprob: -0.9233001470565796
    3. '       ' → logprob: -4.048300266265869
    4. '   ' → logprob: -5.673300266265869
    5. '<|end|>' → logprob: -5.923300266265869
    6. '

' → logprob: -6.923300266265869
    7. 'def' → logprob: -9.423299789428711
    8. '    
' → logprob: -10.298299789428711
    9. '  
' → logprob: -10.423299789428711
    10. ',' → logprob: -10.673299789428711

Token 370: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5092067718505859
    2. '
' → logprob: -1.634206771850586
    3. '<|end|>' → logprob: -2.134206771850586
    4. '       ' → logprob: -2.884206771850586
    5. 'def' → logprob: -3.634206771850586
    6. 'self' → logprob: -6.759206771850586
    7. ' def' → logprob: -7.759206771850586
    8. '<|end|>' → logprob: -8.009206771850586
    9. '    
' → logprob: -8.384206771850586
    10. '  ' → logprob: -8.634206771850586

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00015633940347470343
    2. '       ' → logprob: -9.12515640258789
    3. 'def' → logprob: -10.87515640258789
    4. '   ' → logprob: -11.62515640258789
    5. '#' → logprob: -11.75015640258789
    6. 'star' → logprob: -12.00015640258789
    7. ' self' → logprob: -13.50015640258789
    8. 'class' → logprob: -13.87515640258789
    9. '	self' → logprob: -14.12515640258789
    10. 'from' → logprob: -14.25015640258789

Token 372: '.star' (ID: 99405)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.9859611392021179
    2. '.star' → logprob: -0.9859611392021179
    3. '.st' → logprob: -1.8609611988067627
    4. '.points' → logprob: -2.7359611988067627
    5. '.positions' → logprob: -4.735960960388184
    6. '_star' → logprob: -5.110960960388184
    7. '.point' → logprob: -5.110960960388184
    8. '_points' → logprob: -5.485960960388184
    9. '.__' → logprob: -6.360960960388184
    10. '_st' → logprob: -6.485960960388184

Token 373: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25216424465179443
    2. '_set' → logprob: -2.127164363861084
    3. '_positions' → logprob: -2.502164363861084
    4. '_map' → logprob: -4.502164363861084
    5. 'set' → logprob: -5.127164363861084
    6. '_points' → logprob: -6.127164363861084
    7. '_sets' → logprob: -6.627164363861084
    8. '_patterns' → logprob: -7.502164363861084
    9. 'sets' → logprob: -8.752163887023926
    10. '_to' → logprob: -9.002163887023926

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018158841878175735
    2. '=' → logprob: -4.018158912658691
    3. '=set' → logprob: -11.893158912658691
    4. ':' → logprob: -13.268158912658691
    5. 'set' → logprob: -16.018157958984375
    6. '   ' → logprob: -16.393157958984375
    7. 's' → logprob: -17.393157958984375
    8. ' ' → logprob: -17.893157958984375
    9. ' =
' → logprob: -18.018157958984375
    10. ')' → logprob: -18.018157958984375

Token 375: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007124318508431315
    2. ' set' → logprob: -7.2507123947143555
    3. '{' → logprob: -13.000712394714355
    4. 'fro' → logprob: -15.250712394714355
    5. '=set' → logprob: -17.000713348388672
    6. '	set' → logprob: -17.750713348388672
    7. '   ' → logprob: -18.375713348388672
    8. '(set' → logprob: -18.750713348388672
    9. ')set' → logprob: -19.625713348388672
    10. ' {' → logprob: -19.750713348388672

Token 376: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.12695613503456116
    2. '(self' → logprob: -2.1269562244415283
    3. '(' → logprob: -10.87695598602295
    4. 'self' → logprob: -12.50195598602295
    5. '(s' → logprob: -12.75195598602295
    6. 'stars' → logprob: -13.75195598602295
    7. '()' → logprob: -14.62695598602295
    8. ' (' → logprob: -15.25195598602295
    9. '(points' → logprob: -15.50195598602295
    10. '((' → logprob: -15.75195598602295

Token 377: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.00032163821742869914
    2. 'ar' → logprob: -8.125321388244629
    3. 'stars' → logprob: -11.000321388244629
    4. '(st' → logprob: -12.375321388244629
    5. '[' → logprob: -13.250321388244629
    6. 'self' → logprob: -13.625321388244629
    7. '(self' → logprob: -14.250321388244629
    8. 'f' → logprob: -14.750321388244629
    9. '{' → logprob: -15.750321388244629
    10. '[self' → logprob: -16.500322341918945

Token 378: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ' )' → logprob: -12.750005722045898
    3. '   ' → logprob: -13.375005722045898
    4. ')
' → logprob: -14.000005722045898
    5. '       ' → logprob: -15.500005722045898
    6. '<|end|>' → logprob: -15.875005722045898
    7. '())' → logprob: -16.3750057220459
    8. '))' → logprob: -17.6250057220459
    9. '}' → logprob: -17.7500057220459
    10. ' ' → logprob: -17.8750057220459

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18129822611808777
    2. 'def' → logprob: -1.9312982559204102
    3. '<|end|>' → logprob: -4.05629825592041
    4. ' def' → logprob: -5.80629825592041
    5. '
' → logprob: -8.43129825592041
    6. '<|end|>' → logprob: -8.55629825592041
    7. '```' → logprob: -10.55629825592041
    8. '	def' → logprob: -10.68129825592041
    9. ' ' → logprob: -10.93129825592041
    10. '    
' → logprob: -11.18129825592041

Token 380: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016228145686909556
    2. '   ' → logprob: -7.001622676849365
    3. ' def' → logprob: -7.251622676849365
    4. '	def' → logprob: -14.126623153686523
    5. '<|end|>' → logprob: -14.751623153686523
    6. ' ' → logprob: -14.876623153686523
    7. '
' → logprob: -15.626623153686523
    8. ')' → logprob: -16.001623153686523
    9. '```' → logprob: -16.126623153686523
    10. 'class' → logprob: -16.626623153686523

Token 381: ' contains' (ID: 8895)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.17951810359954834
    2. ' find' → logprob: -1.9295181035995483
    3. 'has' → logprob: -5.304518222808838
    4. 'def' → logprob: -5.429518222808838
    5. 'contains' → logprob: -5.679518222808838
    6. 'matches' → logprob: -6.179518222808838
    7. 'is' → logprob: -7.554518222808838
    8. ' has' → logprob: -7.554518222808838
    9. ' def' → logprob: -7.554518222808838
    10. 'can' → logprob: -7.554518222808838

Token 382: '_pattern' (ID: 50002)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019666971638798714
    2. '(' → logprob: -6.75196647644043
    3. '_pattern' → logprob: -7.25196647644043
    4. 'pattern' → logprob: -10.37696647644043
    5. '_star' → logprob: -10.37696647644043
    6. '_point' → logprob: -12.00196647644043
    7. ' (' → logprob: -12.00196647644043
    8. '(
' → logprob: -12.75196647644043
    9. '   ' → logprob: -12.75196647644043
    10. '_' → logprob: -13.12696647644043

Token 383: '_at' (ID: 8254)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.62500286102295
    4. '   ' → logprob: -15.37500286102295
    5. 'self' → logprob: -16.000003814697266
    6. '(
' → logprob: -16.375003814697266
    7. '       ' → logprob: -18.250003814697266
    8. '(s' → logprob: -19.000003814697266
    9. ' self' → logprob: -19.500003814697266
    10. 'def' → logprob: -19.625003814697266

Token 384: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000513952283654362
    2. 'self' → logprob: -7.625514030456543
    3. '(' → logprob: -10.750514030456543
    4. 'def' → logprob: -13.500514030456543
    5. 'point' → logprob: -13.750514030456543
    6. '_point' → logprob: -14.625514030456543
    7. '(
' → logprob: -15.375514030456543
    8. ' self' → logprob: -15.500514030456543
    9. 'position' → logprob: -15.500514030456543
    10. ' (' → logprob: -15.625514030456543

Token 385: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20245595276355743
    2. ',' → logprob: -2.077455997467041
    3. '(self' → logprob: -2.952455997467041
    4. ' self' → logprob: -5.702455997467041
    5. '       ' → logprob: -6.577455997467041
    6. '   ' → logprob: -7.452455997467041
    7. ')' → logprob: -8.952455520629883
    8. ' ,' → logprob: -9.202455520629883
    9. ',self' → logprob: -9.452455520629883
    10. 'def' → logprob: -9.827455520629883

Token 386: ' pattern' (ID: 8302)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004934602184221148
    2. ' self' → logprob: -7.62549352645874
    3. 'point' → logprob: -13.500493049621582
    4. '(self' → logprob: -13.625493049621582
    5. 'star' → logprob: -14.000493049621582
    6. '       ' → logprob: -14.375493049621582
    7. ')' → logprob: -14.750493049621582
    8. 'def' → logprob: -14.875493049621582
    9. '   ' → logprob: -14.875493049621582
    10. 'position' → logprob: -16.3754940032959

Token 387: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6307205557823181
    2. ':' → logprob: -0.8807205557823181
    3. 'self' → logprob: -3.130720615386963
    4. '   ' → logprob: -5.505720615386963
    5. ' self' → logprob: -6.005720615386963
    6. '       ' → logprob: -7.130720615386963
    7. '(self' → logprob: -7.130720615386963
    8. ' ,' → logprob: -7.380720615386963
    9. ' :' → logprob: -9.505720138549805
    10. 'pattern' → logprob: -9.505720138549805

Token 388: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -0.1497420072555542
    2. ' Star' → logprob: -2.1497421264648438
    3. 'Point' → logprob: -3.8997421264648438
    4. ' Point' → logprob: -7.149742126464844
    5. ')' → logprob: -7.399742126464844
    6. '   ' → logprob: -8.024742126464844
    7. ',' → logprob: -8.274742126464844
    8. ''' → logprob: -8.649742126464844
    9. 'self' → logprob: -9.899742126464844
    10. 'star' → logprob: -10.899742126464844

Token 389: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -5.512236498361744e-07
    2. 'pattern' → logprob: -15.625000953674316
    3. '   ' → logprob: -15.750000953674316
    4. 'attern' → logprob: -16.5
    5. ' Pattern' → logprob: -17.875
    6. 'P' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. 'Point' → logprob: -18.5
    9. '       ' → logprob: -18.625
    10. '[' → logprob: -18.875

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.380904672667384e-05
    2. ' ,' → logprob: -10.500033378601074
    3. 'self' → logprob: -12.250033378601074
    4. '       ' → logprob: -14.500033378601074
    5. '   ' → logprob: -14.625033378601074
    6. ')' → logprob: -16.50003433227539
    7. '`,' → logprob: -16.62503433227539
    8. '',' → logprob: -16.75003433227539
    9. ',
' → logprob: -17.00003433227539
    10. 'def' → logprob: -17.37503433227539

Token 391: ' top' (ID: 2344)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3389590382575989
    2. 'location' → logprob: -1.963958978652954
    3. 'point' → logprob: -3.088958978652954
    4. ' position' → logprob: -3.338958978652954
    5. 'origin' → logprob: -3.338958978652954
    6. ' location' → logprob: -4.713959217071533
    7. 'offset' → logprob: -5.088959217071533
    8. ' point' → logprob: -5.338959217071533
    9. 'anchor' → logprob: -5.963959217071533
    10. 'base' → logprob: -6.213959217071533

Token 392: '_star' (ID: 78943)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.029599590227007866
    2. 'left' → logprob: -3.904599666595459
    3. ':' → logprob: -5.404599666595459
    4. '_point' → logprob: -6.279599666595459
    5. 'Left' → logprob: -6.779599666595459
    6. 'oint' → logprob: -7.779599666595459
    7. '   ' → logprob: -8.1545991897583
    8. ' left' → logprob: -8.5295991897583
    9. ')' → logprob: -9.0295991897583
    10. '-left' → logprob: -9.1545991897583

Token 393: '_candidate' (ID: 158186)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.159660890465602e-05
    2. '_point' → logprob: -9.62507152557373
    3. 'point' → logprob: -13.75007152557373
    4. ')' → logprob: -13.87507152557373
    5. ' :' → logprob: -13.87507152557373
    6. '_position' → logprob: -14.37507152557373
    7. '):' → logprob: -14.37507152557373
    8. '   ' → logprob: -14.50007152557373
    9. '_offset' → logprob: -15.75007152557373
    10. '_:' → logprob: -15.87507152557373

Token 394: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.407366916188039e-05
    2. ',' → logprob: -9.875054359436035
    3. ' :' → logprob: -13.750054359436035
    4. '   ' → logprob: -14.500054359436035
    5. '):' → logprob: -14.625054359436035
    6. ')' → logprob: -15.375054359436035
    7. 'point' → logprob: -16.87505340576172
    8. '       ' → logprob: -16.87505340576172
    9. ' ,' → logprob: -17.37505340576172
    10. '_point' → logprob: -17.62505340576172

Token 395: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.47495681833243e-05
    2. ' Point' → logprob: -10.625024795532227
    3. '	Point' → logprob: -15.875024795532227
    4. 'Star' → logprob: -16.000024795532227
    5. '   ' → logprob: -16.250024795532227
    6. ')' → logprob: -17.250024795532227
    7. '_Point' → logprob: -17.625024795532227
    8. '_point' → logprob: -17.875024795532227
    9. ''' → logprob: -18.000024795532227
    10. 'point' → logprob: -18.250024795532227

Token 396: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. '   ' → logprob: -11.625011444091797
    3. ' )' → logprob: -13.375011444091797
    4. '')' → logprob: -15.125011444091797
    5. '`)' → logprob: -15.625011444091797
    6. '       ' → logprob: -15.875011444091797
    7. ',' → logprob: -16.250011444091797
    8. '):' → logprob: -17.000011444091797
    9. ',)' → logprob: -17.625011444091797
    10. '")' → logprob: -17.875011444091797

Token 397: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.25190702080726624
    2. ')' → logprob: -2.0019071102142334
    3. '->' → logprob: -2.5019071102142334
    4. '   ' → logprob: -5.501906871795654
    5. ':' → logprob: -7.251906871795654
    6. ')->' → logprob: -7.626906871795654
    7. '       ' → logprob: -8.001907348632812
    8. ' ' → logprob: -11.126907348632812
    9. '    ' → logprob: -11.376907348632812
    10. ' )->' → logprob: -11.626907348632812

Token 398: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0002647927321959287
    2. ' bool' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.750265121459961
    4. '	bool' → logprob: -15.750265121459961
    5. '<bool' → logprob: -16.12526512145996
    6. '
' → logprob: -16.50026512145996
    7. ' ' → logprob: -16.87526512145996
    8. 'True' → logprob: -16.87526512145996
    9. '  ' → logprob: -17.50026512145996
    10. '[' → logprob: -17.62526512145996

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006856154650449753
    2. '       ' → logprob: -5.2568559646606445
    3. ':
' → logprob: -6.7568559646606445
    4. '):' → logprob: -8.131855964660645
    5. '   ' → logprob: -9.881855964660645
    6. ',' → logprob: -10.256855964660645
    7. '():' → logprob: -10.256855964660645
    8. '):
' → logprob: -10.631855964660645
    9. ')' → logprob: -11.756855964660645
    10. '.' → logprob: -13.506855964660645

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.2166411478538066e-05
    2. 'for' → logprob: -10.875052452087402
    3. '   ' → logprob: -11.500052452087402
    4. 'offset' → logprob: -12.000052452087402
    5. '```' → logprob: -12.750052452087402
    6. 'target' → logprob: -13.000052452087402
    7. ' for' → logprob: -13.000052452087402
    8. 'positions' → logprob: -13.250052452087402
    9. 'candidate' → logprob: -13.625052452087402
    10. 'shift' → logprob: -14.250052452087402

Token 401: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' (adapté à ' offset') → logprob: -0.996299147605896
    2. '       ' → logprob: -1.121299147605896
    3. 'for' → logprob: -1.371299147605896
    4. 'translation' → logprob: -3.9962992668151855
    5. 'relative' → logprob: -4.9962992668151855
    6. 'if' → logprob: -5.1212992668151855
    7. 'pattern' → logprob: -5.1212992668151855
    8. 'vector' → logprob: -5.4962992668151855
    9. '#' → logprob: -6.1212992668151855
    10. 'required' → logprob: -6.6212992668151855

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941713690757751
    2. ' =' → logprob: -0.6941713690757751
    3. 'vector' → logprob: -8.069170951843262
    4. ':' → logprob: -8.069170951843262
    5. '_vector' → logprob: -8.319170951843262
    6. 'Vector' → logprob: -9.194170951843262
    7. 's' → logprob: -10.319170951843262
    8. ' vector' → logprob: -11.819170951843262
    9. '   ' → logprob: -12.444170951843262
    10. ')' → logprob: -13.819170951843262

Token 403: ' Vector' (ID: 8764)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.023983528837561607
    2. 'pattern' → logprob: -3.7739834785461426
    3. ' top' → logprob: -7.398983478546143
    4. ' pattern' → logprob: -9.3989839553833
    5. '(top' → logprob: -10.8989839553833
    6. 'point' → logprob: -12.3989839553833
    7. 'offset' → logprob: -12.8989839553833
    8. '   ' → logprob: -12.8989839553833
    9. 'Vector' → logprob: -13.0239839553833
    10. 'pat' → logprob: -13.0239839553833

Token 404: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.008214065805077553
    2. 'top' → logprob: -4.883213996887207
    3. '(' → logprob: -8.008213996887207
    4. '(pattern' → logprob: -8.633213996887207
    5. 'pattern' → logprob: -9.883213996887207
    6. '(
' → logprob: -10.258213996887207
    7. '	top' → logprob: -13.383213996887207
    8. '(*' → logprob: -13.508213996887207
    9. '[top' → logprob: -13.758213996887207
    10. '(t' → logprob: -13.883213996887207

Token 405: '_star' (ID: 78943)
  Prédit: '_candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.3490613102912903
    2. '_star' → logprob: -1.2240612506866455
    3. 'star' → logprob: -8.099061012268066
    4. 'candidate' → logprob: -8.349061012268066
    5. '=' → logprob: -9.974061012268066
    6. 'Candidate' → logprob: -11.849061012268066
    7. '.star' → logprob: -12.599061012268066
    8. '   ' → logprob: -12.849061012268066
    9. 'x' → logprob: -12.974061012268066
    10. '
' → logprob: -13.224061012268066

Token 406: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.00011403311509639025
    2. 'candidate' → logprob: -9.125114440917969
    3. '_' → logprob: -14.000114440917969
    4. 'Candidate' → logprob: -14.000114440917969
    5. '
' → logprob: -14.125114440917969
    6. '_star' → logprob: -14.250114440917969
    7. '_c' → logprob: -14.875114440917969
    8. '   ' → logprob: -15.250114440917969
    9. ' candidate' → logprob: -15.750114440917969
    10. '.x' → logprob: -16.00011444091797

Token 407: '.x' (ID: 3700)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.62131267786026
    2. '.dx' → logprob: -1.2463126182556152
    3. '-' → logprob: -1.8713126182556152
    4. 'dx' → logprob: -3.9963126182556152
    5. '.x' → logprob: -6.496312618255615
    6. ' dx' → logprob: -8.121313095092773
    7. '.' → logprob: -8.121313095092773
    8. ',' → logprob: -8.496313095092773
    9. '-d' → logprob: -8.621313095092773
    10. ')' → logprob: -8.621313095092773

Token 408: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021087527275085
    2. '-' → logprob: -2.3502109050750732
    3. ',' → logprob: -12.725211143493652
    4. '   ' → logprob: -13.975211143493652
    5. ' ' → logprob: -15.600211143493652
    6. '```' → logprob: -16.600210189819336
    7. '-
' → logprob: -17.100210189819336
    8. '  ' → logprob: -17.225210189819336
    9. '
' → logprob: -17.725210189819336
    10. ' ' → logprob: -17.850210189819336

Token 409: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.00016480287013109773
    2. ' pattern' → logprob: -9.250164985656738
    3. 'self' → logprob: -9.625164985656738
    4. 'pat' → logprob: -13.750164985656738
    5. '   ' → logprob: -14.625164985656738
    6. '(pattern' → logprob: -14.750164985656738
    7. '       ' → logprob: -15.000164985656738
    8. 'patterns' → logprob: -16.750164031982422
    9. ')' → logprob: -17.125164031982422
    10. '           ' → logprob: -17.125164031982422

Token 410: '.reference' (ID: 101461)
  Prédit: '.reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reference' → logprob: -0.0015104549238458276
    2. 'reference' → logprob: -6.5015106201171875
    3. '.' → logprob: -11.751510620117188
    4. ' .' → logprob: -15.751510620117188
    5. '.relative' → logprob: -16.501510620117188
    6. '
' → logprob: -16.876510620117188
    7. '(reference' → logprob: -17.626510620117188
    8. '.references' → logprob: -18.001510620117188
    9. '.re' → logprob: -18.251510620117188
    10. '.Reference' → logprob: -18.501510620117188

Token 411: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -2.696889623621246e-06
    2. 'star' → logprob: -13.12500286102295
    3. 'Star' → logprob: -15.75000286102295
    4. '_point' → logprob: -15.87500286102295
    5. '.star' → logprob: -16.500001907348633
    6. '_STAR' → logprob: -16.625001907348633
    7. '_' → logprob: -16.750001907348633
    8. 'x' → logprob: -17.750001907348633
    9. '
' → logprob: -17.750001907348633
    10. ' star' → logprob: -18.125001907348633

Token 412: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0014735567383468151
    2. '.' → logprob: -6.751473426818848
    3. 'x' → logprob: -8.126473426818848
    4. ' .' → logprob: -11.876473426818848
    5. ' x' → logprob: -15.126473426818848
    6. ',' → logprob: -16.376474380493164
    7. '.
' → logprob: -16.501474380493164
    8. ').' → logprob: -16.626474380493164
    9. ')' → logprob: -17.001474380493164
    10. '
' → logprob: -17.376474380493164

Token 413: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ',
' → logprob: -9.250099182128906
    3. ' ,' → logprob: -12.875099182128906
    4. 'offset' → logprob: -15.375099182128906
    5. ',

' → logprob: -15.750099182128906
    6. '   ' → logprob: -17.250099182128906
    7. ')' → logprob: -17.250099182128906
    8. '),' → logprob: -17.625099182128906
    9. ',\
' → logprob: -17.625099182128906
    10. '       ' → logprob: -18.250099182128906

Token 414: '                       ' (ID: 968)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.0206720617134124e-05
    2. ' top' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.000009536743164
    4. '	top' → logprob: -19.250009536743164
    5. 't' → logprob: -20.750009536743164
    6. '    ' → logprob: -21.875009536743164
    7. '
' → logprob: -22.250009536743164
    8. '  ' → logprob: -22.375009536743164
    9. 'Top' → logprob: -22.375009536743164
    10. ' ' → logprob: -22.875009536743164

Token 415: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -2.4391956685576588e-05
    2. ' top' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.125024795532227
    4. 't' → logprob: -17.750024795532227
    5. '	top' → logprob: -17.875024795532227
    6. '  ' → logprob: -19.875024795532227
    7. '           ' → logprob: -20.000024795532227
    8. '(top' → logprob: -20.125024795532227
    9. '               ' → logprob: -20.375024795532227
    10. '[top' → logprob: -20.375024795532227

Token 416: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -2.6776029699249193e-05
    2. '_candidate' → logprob: -11.25002670288086
    3. 'star' → logprob: -11.37502670288086
    4. '-star' → logprob: -14.12502670288086
    5. 'Star' → logprob: -14.37502670288086
    6. '_top' → logprob: -14.62502670288086
    7. '_STAR' → logprob: -15.12502670288086
    8. '.star' → logprob: -17.12502670288086
    9. '
' → logprob: -17.25002670288086
    10. '```' → logprob: -17.25002670288086

Token 417: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.0010418595047667623
    2. 'candidate' → logprob: -6.876041889190674
    3. '_star' → logprob: -12.001041412353516
    4. 'Candidate' → logprob: -13.626041412353516
    5. 'star' → logprob: -14.251041412353516
    6. 'top' → logprob: -15.001041412353516
    7. '
' → logprob: -15.376041412353516
    8. '_c' → logprob: -16.126041412353516
    9. ' candidate' → logprob: -16.251041412353516
    10. 'andidate' → logprob: -16.501041412353516

Token 418: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006282062386162579
    2. '.' → logprob: -7.3756279945373535
    3. 'y' → logprob: -14.125628471374512
    4. ' .' → logprob: -14.250628471374512
    5. '.py' → logprob: -17.250627517700195
    6. '-' → logprob: -17.375627517700195
    7. ' -' → logprob: -17.375627517700195
    8. '.
' → logprob: -17.875627517700195
    9. '
' → logprob: -18.625627517700195
    10. ' ' → logprob: -18.625627517700195

Token 419: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020543284714221954
    2. '-' → logprob: -3.895543336868286
    3. ' ' → logprob: -14.395543098449707
    4. '<|end|>' → logprob: -14.770543098449707
    5. '                           ' → logprob: -16.020544052124023
    6. ')' → logprob: -16.145544052124023
    7. ' -
' → logprob: -16.145544052124023
    8. '                       ' → logprob: -17.020544052124023
    9. '-
' → logprob: -17.395544052124023
    10. '   ' → logprob: -17.395544052124023

Token 420: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.10021411627531052
    2. ' pattern' → logprob: -2.3502140045166016
    3. '(pattern' → logprob: -12.850214004516602
    4. ' ' → logprob: -13.725214004516602
    5. '                           ' → logprob: -14.350214004516602
    6. '                       ' → logprob: -14.725214004516602
    7. '                               ' → logprob: -14.850214004516602
    8. '   ' → logprob: -14.975214004516602
    9. '-' → logprob: -15.225214004516602
    10. 'pat' → logprob: -15.600214004516602

Token 421: '.reference' (ID: 101461)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03431229665875435
    2. '-' → logprob: -3.5343122482299805
    3. ' -' → logprob: -6.0343122482299805
    4. '.' → logprob: -6.4093122482299805
    5. 'y' → logprob: -8.28431224822998
    6. '-star' → logprob: -9.28431224822998
    7. '-y' → logprob: -10.03431224822998
    8. ')' → logprob: -10.28431224822998
    9. '.star' → logprob: -10.53431224822998
    10. '<|end|>' → logprob: -10.65931224822998

Token 422: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -9.329167369287461e-05
    2. '-star' → logprob: -9.750093460083008
    3. '.star' → logprob: -11.375093460083008
    4. 'star' → logprob: -12.250093460083008
    5. '_candidate' → logprob: -12.375093460083008
    6. '_STAR' → logprob: -12.375093460083008
    7. '-' → logprob: -12.875093460083008
    8. 'Star' → logprob: -13.250093460083008
    9. ' star' → logprob: -14.000093460083008
    10. '   ' → logprob: -14.250093460083008

Token 423: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.02415645867586136
    2. 'y' → logprob: -3.7741565704345703
    3. '.' → logprob: -7.39915657043457
    4. '-' → logprob: -8.89915657043457
    5. ')' → logprob: -9.39915657043457
    6. '-y' → logprob: -10.52415657043457
    7. ' -' → logprob: -10.52415657043457
    8. ').' → logprob: -12.02415657043457
    9. ' y' → logprob: -12.52415657043457
    10. '[' → logprob: -13.02415657043457

Token 424: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18565864861011505
    2. ')
' → logprob: -1.9356586933135986
    3. '       ' → logprob: -3.6856586933135986
    4. ')
' → logprob: -10.81065845489502
    5. '   ' → logprob: -12.56065845489502
    6. ' )' → logprob: -12.81065845489502
    7. '               ' → logprob: -13.56065845489502
    8. ' )
' → logprob: -13.81065845489502
    9. ')

' → logprob: -13.93565845489502
    10. '           ' → logprob: -14.31065845489502

Token 425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005666632670909166
    2. 'for' → logprob: -5.755666732788086
    3. ' for' → logprob: -6.130666732788086
    4. '
' → logprob: -8.505666732788086
    5. '   ' → logprob: -9.380666732788086
    6. '        
' → logprob: -11.380666732788086
    7. '	for' → logprob: -12.130666732788086
    8. '```' → logprob: -13.880666732788086
    9. '    
' → logprob: -14.130666732788086
    10. ')' → logprob: -14.130666732788086

Token 426: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030482450500130653
    2. '       ' → logprob: -3.530482530593872
    3. ' for' → logprob: -7.280482292175293
    4. 'return' → logprob: -10.655482292175293
    5. '   ' → logprob: -11.530482292175293
    6. 'target' → logprob: -13.530482292175293
    7. '```' → logprob: -13.530482292175293
    8. 'pattern' → logprob: -13.655482292175293
    9. 'expected' → logprob: -13.655482292175293
    10. '
' → logprob: -13.780482292175293

Token 427: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019806181080639362
    2. 'return' → logprob: -6.876980781555176
    3. 'translated' → logprob: -8.001980781555176
    4. 'expected' → logprob: -8.751980781555176
    5. 'shift' → logprob: -8.876980781555176
    6. ' for' → logprob: -9.751980781555176
    7. 'trans' → logprob: -9.876980781555176
    8. '#' → logprob: -10.126980781555176
    9. 'offset' → logprob: -10.251980781555176
    10. '       ' → logprob: -10.626980781555176

Token 428: ' that' (ID: 484)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9518734812736511
    2. 'all' → logprob: -1.576873540878296
    3. ' for' → logprob: -1.701873540878296
    4. 'for' → logprob: -1.951873540878296
    5. '       ' → logprob: -2.826873540878296
    6. ' if' → logprob: -4.201873302459717
    7. 'if' → logprob: -5.201873302459717
    8. 'return' → logprob: -6.076873302459717
    9. ' return' → logprob: -7.326873302459717
    10. '   ' → logprob: -8.326873779296875

Token 429: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0025649568997323513
    2. ' all' → logprob: -7.502564907073975
    3. 'Point' → logprob: -7.502564907073975
    4. 'pattern' → logprob: -7.752564907073975
    5. 'Vector' → logprob: -8.252565383911133
    6. '   ' → logprob: -8.877565383911133
    7. '
' → logprob: -8.877565383911133
    8. '       ' → logprob: -8.877565383911133
    9. '           ' → logprob: -9.002565383911133
    10. 'for' → logprob: -9.252565383911133

Token 430: ' stars' (ID: 13701)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'star' → logprob: -1.3433443307876587
    2. 'pattern' → logprob: -1.3433443307876587
    3. '(st' → logprob: -1.4683443307876587
    4. '(pattern' → logprob: -2.218344211578369
    5. 'relative' → logprob: -3.093344211578369
    6. 'offset' → logprob: -3.718344211578369
    7. 'point' → logprob: -4.968344211578369
    8. 'pos' → logprob: -5.093344211578369
    9. '(pos' → logprob: -5.093344211578369
    10. 'stars' → logprob: -5.093344211578369

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5997392535209656
    2. 'in' → logprob: -0.8497392535209656
    3. 'for' → logprob: -5.099739074707031
    4. ' for' → logprob: -5.599739074707031
    5. ' are' → logprob: -5.724739074707031
    6. '       ' → logprob: -6.099739074707031
    7. ' at' → logprob: -6.099739074707031
    8. 'are' → logprob: -6.974739074707031
    9. '   ' → logprob: -7.099739074707031
    10. 'star' → logprob: -7.599739074707031

Token 432: ' the' (ID: 290)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0690908282995224
    2. '{' → logprob: -2.8190908432006836
    3. '(pattern' → logprob: -5.569090843200684
    4. ' pattern' → logprob: -5.944090843200684
    5. '{
' → logprob: -8.819090843200684
    6. '
' → logprob: -8.819090843200684
    7. ' {' → logprob: -9.319090843200684
    8. '[' → logprob: -9.694090843200684
    9. 'star' → logprob: -9.694090843200684
    10. 'the' → logprob: -9.819090843200684

Token 433: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.008622966706752777
    2. 'relative' → logprob: -5.258623123168945
    3. ' pattern' → logprob: -6.508623123168945
    4. '.pattern' → logprob: -7.133623123168945
    5. 'star' → logprob: -8.133623123168945
    6. '[' → logprob: -8.633623123168945
    7. '   ' → logprob: -8.633623123168945
    8. 'stars' → logprob: -9.883623123168945
    9. '{' → logprob: -10.008623123168945
    10. '
' → logprob: -10.008623123168945

Token 434: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8977554440498352
    2. ' are' → logprob: -1.3977553844451904
    3. '       ' → logprob: -1.8977553844451904
    4. ' for' → logprob: -2.7727553844451904
    5. 'in' → logprob: -3.1477553844451904
    6. ' at' → logprob: -3.2727553844451904
    7. 'are' → logprob: -3.6477553844451904
    8. 'for' → logprob: -4.1477556228637695
    9. 'return' → logprob: -6.1477556228637695
    10. ' exist' → logprob: -6.3977556228637695

Token 435: 'offset' (ID: 6680)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.0811896324157715
    2. 'self' → logprob: -1.4561896324157715
    3. 'offset' → logprob: -2.2061896324157715
    4. ')' → logprob: -2.2061896324157715
    5. 'for' → logprob: -2.3311896324157715
    6. ' at' → logprob: -3.5811896324157715
    7. ' for' → logprob: -4.0811896324157715
    8. 'at' → logprob: -4.7061896324157715
    9. '(pattern' → logprob: -4.7061896324157715
    10. ' are' → logprob: -4.8311896324157715

Token 436: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1900937706232071
    2. ' by' → logprob: -2.190093755722046
    3. ' )' → logprob: -4.190093994140625
    4. 'ed' → logprob: -4.440093994140625
    5. ' +' → logprob: -4.815093994140625
    6. 'by' → logprob: -5.315093994140625
    7. ' with' → logprob: -5.565093994140625
    8. '+' → logprob: -5.690093994140625
    9. 'positions' → logprob: -6.315093994140625
    10. 'with' → logprob: -6.565093994140625

Token 437: ' vector' (ID: 9727)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.00409419322386384
    2. ' offset' → logprob: -5.504094123840332
    3. 'the' → logprob: -11.504094123840332
    4. '
' → logprob: -12.504094123840332
    5. 'pattern' → logprob: -14.754094123840332
    6. ' the' → logprob: -15.004094123840332
    7. '	offset' → logprob: -15.004094123840332
    8. ' ' → logprob: -15.504094123840332
    9. '   ' → logprob: -15.629094123840332
    10. ')' → logprob: -15.754094123840332

Token 438: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12392238527536392
    2. 'offset' → logprob: -2.373922348022461
    3. ' offset' → logprob: -3.998922348022461
    4. ' )' → logprob: -5.873922348022461
    5. '(offset' → logprob: -7.123922348022461
    6. ' in' → logprob: -7.748922348022461
    7. 'from' → logprob: -8.248922348022461
    8. 'in' → logprob: -8.873922348022461
    9. ' from' → logprob: -9.123922348022461
    10. '.offset' → logprob: -9.498922348022461

Token 439: ' exist' (ID: 4310)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.34761008620262146
    2. ' for' → logprob: -2.0976099967956543
    3. '       ' → logprob: -2.4726099967956543
    4. ' in' → logprob: -3.3476099967956543
    5. ' exist' → logprob: -3.7226099967956543
    6. 'are' → logprob: -3.9726099967956543
    7. ' return' → logprob: -6.097609996795654
    8. 'for' → logprob: -6.472609996795654
    9. '   ' → logprob: -7.222609996795654
    10. 'in' → logprob: -7.222609996795654

Token 440: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03048522211611271
    2. ' in' → logprob: -3.530485153198242
    3. ' for' → logprob: -7.530485153198242
    4. ',' → logprob: -9.530485153198242
    5. 'in' → logprob: -9.905485153198242
    6. '   ' → logprob: -11.405485153198242
    7. 'for' → logprob: -11.405485153198242
    8. '           ' → logprob: -11.905485153198242
    9. '.' → logprob: -12.030485153198242
    10. ':' → logprob: -12.155485153198242

Token 441: ' star' (ID: 8253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02178863435983658
    2. ' self' → logprob: -4.646788597106934
    3. '{' → logprob: -4.896788597106934
    4. 'Point' → logprob: -6.396788597106934
    5. '       ' → logprob: -6.896788597106934
    6. '(self' → logprob: -7.646788597106934
    7. ' Point' → logprob: -7.771788597106934
    8. ' {' → logprob: -8.396788597106934
    9. '[self' → logprob: -8.896788597106934
    10. 'set' → logprob: -9.521788597106934

Token 442: ' map' (ID: 4014)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.19044482707977295
    2. '_map' → logprob: -2.4404449462890625
    3. 'self' → logprob: -2.6904449462890625
    4. 'set' → logprob: -4.1904449462890625
    5. '       ' → logprob: -6.4404449462890625
    6. 's' → logprob: -7.1904449462890625
    7. 'map' → logprob: -7.6904449462890625
    8. ')' → logprob: -9.315444946289062
    9. ' self' → logprob: -9.815444946289062
    10. '
' → logprob: -9.940444946289062

Token 443: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020401063375175
    2. ' for' → logprob: -6.377039909362793
    3. '
' → logprob: -8.377039909362793
    4. 'for' → logprob: -9.377039909362793
    5. 'return' → logprob: -11.502039909362793
    6. '<|end|>' → logprob: -13.252039909362793
    7. '```' → logprob: -13.377039909362793
    8. ' in' → logprob: -13.377039909362793
    9. ' return' → logprob: -13.627039909362793
    10. '   ' → logprob: -13.627039909362793

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003890854713972658
    2. ' for' → logprob: -8.625389099121094
    3. '
' → logprob: -8.875389099121094
    4. 'for' → logprob: -9.625389099121094
    5. 'return' → logprob: -13.750389099121094
    6. '```' → logprob: -13.875389099121094
    7. '   ' → logprob: -14.625389099121094
    8. '        
' → logprob: -15.250389099121094
    9. '           ' → logprob: -15.375389099121094
    10. '
' → logprob: -15.625389099121094

Token 445: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6399053335189819
    2. '       ' → logprob: -1.139905333518982
    3. 'return' → logprob: -1.889905333518982
    4. ' for' → logprob: -6.5149054527282715
    5. ' return' → logprob: -8.764904975891113
    6. 'all' → logprob: -10.014904975891113
    7. '   ' → logprob: -10.764904975891113
    8. '
' → logprob: -11.639904975891113
    9. '```' → logprob: -11.889904975891113
    10. '	for' → logprob: -13.389904975891113

Token 446: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.10944389551877975
    2. 'rel' → logprob: -2.4844439029693604
    3. ' relative' → logprob: -5.109443664550781
    4. 'pos' → logprob: -5.234443664550781
    5. 'pattern' → logprob: -5.359443664550781
    6. ' rel' → logprob: -5.984443664550781
    7. 'position' → logprob: -7.484443664550781
    8. 'offset' → logprob: -7.734443664550781
    9. 'star' → logprob: -7.984443664550781
    10. '   ' → logprob: -9.609443664550781

Token 447: '_pos' (ID: 14692)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.08331871032714844
    2. '_pos' → logprob: -2.5833187103271484
    3. 'position' → logprob: -5.708318710327148
    4. 'pos' → logprob: -7.083318710327148
    5. '_vector' → logprob: -8.833318710327148
    6. '_offset' → logprob: -10.208318710327148
    7. '_' → logprob: -10.208318710327148
    8. ' in' → logprob: -10.833318710327148
    9. '_point' → logprob: -11.708318710327148
    10. ' position' → logprob: -12.458318710327148

Token 448: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931544542312622
    2. ' in' → logprob: -0.6931544542312622
    3. ',' → logprob: -12.443154335021973
    4. '	in' → logprob: -13.693154335021973
    5. ' ' → logprob: -14.943154335021973
    6. '       ' → logprob: -15.193154335021973
    7. '_in' → logprob: -15.193154335021973
    8. '   ' → logprob: -15.568154335021973
    9. 'n' → logprob: -15.818154335021973
    10. ' ' → logprob: -16.19315528869629

Token 449: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.00043460296001285315
    2. ' pattern' → logprob: -7.750434398651123
    3. '   ' → logprob: -12.625434875488281
    4. '       ' → logprob: -15.375434875488281
    5. '(pattern' → logprob: -15.875434875488281
    6. ' ' → logprob: -16.50043487548828
    7. '           ' → logprob: -16.62543487548828
    8. '
' → logprob: -17.25043487548828
    9. '{' → logprob: -17.37543487548828
    10. 'pat' → logprob: -17.87543487548828

Token 450: '.relative' (ID: 154007)
  Prédit: '.relative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.relative' → logprob: -1.2948405128554441e-05
    2. ' .' → logprob: -11.75001335144043
    3. '.' → logprob: -13.12501335144043
    4. 'relative' → logprob: -13.62501335144043
    5. '.related' → logprob: -14.00001335144043
    6. '   ' → logprob: -15.37501335144043
    7. '.reference' → logprob: -15.50001335144043
    8. '.rel' → logprob: -15.50001335144043
    9. '._' → logprob: -16.75001335144043
    10. '.positions' → logprob: -16.87501335144043

Token 451: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.1472419600977446e-06
    2. 'positions' → logprob: -13.750000953674316
    3. ' positions' → logprob: -19.125001907348633
    4. '_pos' → logprob: -19.500001907348633
    5. 'Positions' → logprob: -19.625001907348633
    6. '_' → logprob: -20.125001907348633
    7. '_position' → logprob: -20.750001907348633
    8. '_locations' → logprob: -21.625001907348633
    9. '.positions' → logprob: -22.125001907348633
    10. '```' → logprob: -22.750001907348633

Token 452: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5266953110694885
    2. ':' → logprob: -0.9016953110694885
    3. '           ' → logprob: -5.776695251464844
    4. '       ' → logprob: -7.901695251464844
    5. ':
' → logprob: -9.901695251464844
    6. '):
' → logprob: -10.651695251464844
    7. ':

' → logprob: -12.026695251464844
    8. '   ' → logprob: -13.151695251464844
    9. '():
' → logprob: -13.276695251464844
    10. '               ' → logprob: -13.651695251464844

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007336281123571098
    2. ' if' → logprob: -7.750733852386475
    3. '   ' → logprob: -9.125733375549316
    4. '       ' → logprob: -9.125733375549316
    5. 'if' → logprob: -9.625733375549316
    6. ',' → logprob: -12.500733375549316
    7. '          ' → logprob: -13.000733375549316
    8. '	   ' → logprob: -13.375733375549316
    9. '	       ' → logprob: -13.750733375549316
    10. '```' → logprob: -13.750733375549316

Token 454: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010507220402359962
    2. ' if' → logprob: -4.760507106781006
    3. '           ' → logprob: -6.885507106781006
    4. 'point' → logprob: -7.885507106781006
    5. '       ' → logprob: -8.135507583618164
    6. '
' → logprob: -9.135507583618164
    7. 'offset' → logprob: -9.635507583618164
    8. '   ' → logprob: -11.135507583618164
    9. 'star' → logprob: -13.010507583618164
    10. 'position' → logprob: -13.260507583618164

Token 455: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.08350437879562378
    2. 'd' → logprob: -3.7085044384002686
    3. 'ed' → logprob: -4.0835041999816895
    4. '_pos' → logprob: -4.2085041999816895
    5. '_star' → logprob: -4.5835041999816895
    6. ' =' → logprob: -4.7085041999816895
    7. '_position' → logprob: -5.9585041999816895
    8. '=' → logprob: -7.4585041999816895
    9. '   ' → logprob: -7.8335041999816895
    10. '       ' → logprob: -7.9585041999816895

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.686967849731445
    4. ')' → logprob: -17.811967849731445
    5. '.' → logprob: -18.436967849731445
    6. ':' → logprob: -19.186967849731445
    7. '=
' → logprob: -19.311967849731445
    8. ',' → logprob: -19.686967849731445
    9. '=

' → logprob: -19.686967849731445
    10. ' =
' → logprob: -19.811967849731445

Token 457: ' Point' (ID: 9971)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.07055916637182236
    2. 'Point' → logprob: -2.69555926322937
    3. ' top' → logprob: -7.570559024810791
    4. ' Point' → logprob: -9.69555950164795
    5. '   ' → logprob: -10.82055950164795
    6. 'relative' → logprob: -12.44555950164795
    7. 'Star' → logprob: -12.69555950164795
    8. 'pattern' → logprob: -12.69555950164795
    9. 'Pattern' → logprob: -12.82055950164795
    10. 'star' → logprob: -13.07055950164795

Token 458: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.10098454356193542
    2. 'top' → logprob: -2.350984573364258
    3. 'offset' → logprob: -8.225984573364258
    4. '(' → logprob: -8.475984573364258
    5. '(
' → logprob: -8.850984573364258
    6. '(offset' → logprob: -9.100984573364258
    7. '[top' → logprob: -11.225984573364258
    8. '	top' → logprob: -11.600984573364258
    9. 'relative' → logprob: -11.725984573364258
    10. '(relative' → logprob: -12.350984573364258

Token 459: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -0.0003166353271808475
    2. '_candidate' → logprob: -8.125316619873047
    3. 'star' → logprob: -11.125316619873047
    4. 'Star' → logprob: -13.125316619873047
    5. '_STAR' → logprob: -14.125316619873047
    6. '.star' → logprob: -14.500316619873047
    7. '   ' → logprob: -14.500316619873047
    8. 'candidate' → logprob: -14.750316619873047
    9. '-star' → logprob: -14.875316619873047
    10. '_point' → logprob: -15.500316619873047

Token 460: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.0025250071194022894
    2. 'candidate' → logprob: -6.0025248527526855
    3. 'Candidate' → logprob: -10.377525329589844
    4. '.x' → logprob: -11.752525329589844
    5. 'x' → logprob: -12.252525329589844
    6. ' candidate' → logprob: -13.502525329589844
    7. '_star' → logprob: -14.127525329589844
    8. '   ' → logprob: -14.377525329589844
    9. 'star' → logprob: -15.002525329589844
    10. 'dx' → logprob: -15.127525329589844

Token 461: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0009213464800268412
    2. 'x' → logprob: -7.125921249389648
    3. '.' → logprob: -9.375921249389648
    4. '+' → logprob: -11.125921249389648
    5. ' +' → logprob: -11.250921249389648
    6. ' .' → logprob: -12.875921249389648
    7. '+x' → logprob: -13.875921249389648
    8. '   ' → logprob: -15.625921249389648
    9. ' -' → logprob: -16.37592124938965
    10. ' ' → logprob: -16.50092124938965

Token 462: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932928562164307
    2. ' +' → logprob: -0.6932928562164307
    3. ',' → logprob: -9.068292617797852
    4. '+
' → logprob: -12.068292617797852
    5. '<|end|>' → logprob: -12.068292617797852
    6. '+,' → logprob: -12.318292617797852
    7. ' -' → logprob: -12.443292617797852
    8. ' +
' → logprob: -12.943292617797852
    9. '-' → logprob: -12.943292617797852
    10. ')' → logprob: -13.443292617797852

Token 463: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.0022173458710312843
    2. ' relative' → logprob: -6.1272172927856445
    3. 'offset' → logprob: -11.002217292785645
    4. '(relative' → logprob: -11.127217292785645
    5. '           ' → logprob: -15.252217292785645
    6. '.relative' → logprob: -16.12721824645996
    7. '
' → logprob: -16.37721824645996
    8. ' offset' → logprob: -16.50221824645996
    9. '   ' → logprob: -16.62721824645996
    10. ')' → logprob: -17.00221824645996

Token 464: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00220461655408144
    2. 'pos' → logprob: -6.127204418182373
    3. 'Pos' → logprob: -11.877204895019531
    4. 'positions' → logprob: -12.627204895019531
    5. 'offset' → logprob: -12.627204895019531
    6. '_positions' → logprob: -13.377204895019531
    7. 'position' → logprob: -13.752204895019531
    8. '	pos' → logprob: -14.127204895019531
    9. '_position' → logprob: -14.627204895019531
    10. '_offset' → logprob: -15.002204895019531

Token 465: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -4.5491004129871726e-05
    2. '.x' → logprob: -10.750045776367188
    3. '.' → logprob: -11.125045776367188
    4. 'dx' → logprob: -12.375045776367188
    5. ' .' → logprob: -12.500045776367188
    6. '.
' → logprob: -14.750045776367188
    7. '.d' → logprob: -15.375045776367188
    8. 'x' → logprob: -16.000045776367188
    9. '
' → logprob: -16.250045776367188
    10. '.cx' → logprob: -16.500045776367188

Token 466: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025619841180741787
    2. ' ,' → logprob: -6.252562046051025
    3. ',
' → logprob: -7.377562046051025
    4. '           ' → logprob: -12.877561569213867
    5. '   ' → logprob: -14.252561569213867
    6. ',

' → logprob: -14.377561569213867
    7. '               ' → logprob: -14.502561569213867
    8. ')' → logprob: -14.502561569213867
    9. '```' → logprob: -14.502561569213867
    10. ' ,
' → logprob: -14.752561569213867

Token 467: '                               ' (ID: 2419)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.00012403888104017824
    2. ' top' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.750123977661133
    4. '           ' → logprob: -16.625123977661133
    5. '               ' → logprob: -16.875123977661133
    6. '	top' → logprob: -17.125123977661133
    7. '              ' → logprob: -18.375123977661133
    8. '                   ' → logprob: -18.500123977661133
    9. '       ' → logprob: -18.500123977661133
    10. '    ' → logprob: -19.000123977661133

Token 468: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -6.2729995988775045e-06
    2. ' top' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3750057220459
    4. '	top' → logprob: -19.2500057220459
    5. '           ' → logprob: -19.3750057220459
    6. '  ' → logprob: -20.0000057220459
    7. '               ' → logprob: -20.5000057220459
    8. ' ' → logprob: -20.8750057220459
    9. 't' → logprob: -21.0000057220459
    10. '
' → logprob: -21.5000057220459

Token 469: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -7.755678961984813e-05
    2. '_candidate' → logprob: -10.125077247619629
    3. 'star' → logprob: -10.500077247619629
    4. 'Star' → logprob: -12.000077247619629
    5. '-star' → logprob: -13.250077247619629
    6. '_STAR' → logprob: -14.500077247619629
    7. '_top' → logprob: -15.625077247619629
    8. '
' → logprob: -15.875077247619629
    9. '_point' → logprob: -16.000078201293945
    10. '_st' → logprob: -16.125078201293945

Token 470: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -1.3425219549390022e-05
    2. '_star' → logprob: -11.50001335144043
    3. 'candidate' → logprob: -13.25001335144043
    4. 'Candidate' → logprob: -14.25001335144043
    5. '_pos' → logprob: -15.12501335144043
    6. 'pos' → logprob: -16.12501335144043
    7. 'star' → logprob: -16.37501335144043
    8. '_vector' → logprob: -16.75001335144043
    9. '.y' → logprob: -17.12501335144043
    10. '_point' → logprob: -17.37501335144043

Token 471: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03929239511489868
    2. '.dy' → logprob: -3.289292335510254
    3. '.' → logprob: -6.789292335510254
    4. ' .' → logprob: -9.164292335510254
    5. '.py' → logprob: -11.664292335510254
    6. 'y' → logprob: -12.414292335510254
    7. '+' → logprob: -13.039292335510254
    8. ' +' → logprob: -13.414292335510254
    9. '+.' → logprob: -13.664292335510254
    10. 'dy' → logprob: -15.164292335510254

Token 472: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01815052703022957
    2. '+' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.018150329589844
    4. '                               ' → logprob: -15.893150329589844
    5. ' +
' → logprob: -17.018150329589844
    6. '                                ' → logprob: -17.893150329589844
    7. ' ' → logprob: -18.393150329589844
    8. ' plus' → logprob: -18.518150329589844
    9. '+
' → logprob: -18.768150329589844
    10. '<|end|>' → logprob: -19.143150329589844

Token 473: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.02325456403195858
    2. ' relative' → logprob: -3.773254632949829
    3. '(relative' → logprob: -12.64825439453125
    4. '.relative' → logprob: -13.14825439453125
    5. 'rel' → logprob: -14.27325439453125
    6. '                           ' → logprob: -14.39825439453125
    7. '                               ' → logprob: -14.89825439453125
    8. '   ' → logprob: -15.02325439453125
    9. '                            ' → logprob: -15.02325439453125
    10. '
' → logprob: -15.64825439453125

Token 474: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00034142236108891666
    2. 'pos' → logprob: -8.000341415405273
    3. 'Pos' → logprob: -12.375341415405273
    4. '-pos' → logprob: -13.375341415405273
    5. '_position' → logprob: -16.250341415405273
    6. '_star' → logprob: -17.250341415405273
    7. '_candidate' → logprob: -17.500341415405273
    8. '.pos' → logprob: -17.750341415405273
    9. '-' → logprob: -17.750341415405273
    10. '_op' → logprob: -17.875341415405273

Token 475: '.dy' (ID: 147561)
  Prédit: '.dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dy' → logprob: -0.05358113348484039
    2. '.py' → logprob: -3.0535812377929688
    3. '_pos' → logprob: -6.053581237792969
    4. 'dy' → logprob: -6.678581237792969
    5. '.y' → logprob: -8.303581237792969
    6. '.pos' → logprob: -8.428581237792969
    7. '+' → logprob: -8.803581237792969
    8. ' dy' → logprob: -8.928581237792969
    9. ')' → logprob: -9.178581237792969
    10. 'y' → logprob: -9.303581237792969

Token 476: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3908790647983551
    2. ')
' → logprob: -1.6408790349960327
    3. '           ' → logprob: -2.6408791542053223
    4. '):
' → logprob: -2.8908791542053223
    5. '       ' → logprob: -6.515879154205322
    6. '):' → logprob: -7.015879154205322
    7. '                           ' → logprob: -8.890878677368164
    8. ')
' → logprob: -9.140878677368164
    9. '                               ' → logprob: -9.515878677368164
    10. '):
' → logprob: -10.015878677368164

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.1186566047836095e-05
    2. ' if' → logprob: -11.125031471252441
    3. '       ' → logprob: -11.750031471252441
    4. '   ' → logprob: -12.750031471252441
    5. '<|end|>' → logprob: -13.125031471252441
    6. '
' → logprob: -13.625031471252441
    7. '          ' → logprob: -13.750031471252441
    8. '               ' → logprob: -14.875031471252441
    9. '		' → logprob: -15.375031471252441
    10. '	       ' → logprob: -15.500031471252441

Token 478: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10311497747898102
    2. '           ' → logprob: -2.3531150817871094
    3. ' if' → logprob: -5.853115081787109
    4. '   ' → logprob: -10.85311508178711
    5. '       ' → logprob: -11.47811508178711
    6. '	if' → logprob: -13.60311508178711
    7. '          ' → logprob: -14.10311508178711
    8. '	       ' → logprob: -14.35311508178711
    9. 'If' → logprob: -15.10311508178711
    10. '  ' → logprob: -15.85311508178711

Token 479: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.08898908644914627
    2. ' check' → logprob: -2.463989019393921
    3. 'not' → logprob: -10.5889892578125
    4. ' not' → logprob: -11.3389892578125
    5. '           ' → logprob: -11.8389892578125
    6. '                                   ' → logprob: -13.2139892578125
    7. '               ' → logprob: -13.8389892578125
    8. '                               ' → logprob: -14.9639892578125
    9. 'Check' → logprob: -15.0889892578125
    10. '	check' → logprob: -15.0889892578125

Token 480: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.203409844194539e-05
    2. '_check' → logprob: -10.750041961669922
    3. '_' → logprob: -11.750041961669922
    4. 'check' → logprob: -11.875041961669922
    5. 'not' → logprob: -13.000041961669922
    6. 'point' → logprob: -14.125041961669922
    7. '_not' → logprob: -14.250041961669922
    8. 'Point' → logprob: -14.625041961669922
    9. '_POINT' → logprob: -15.375041961669922
    10. '   ' → logprob: -15.875041961669922

Token 481: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005234002135694027
    2. 'not' → logprob: -5.2552337646484375
    3. ')' → logprob: -16.380233764648438
    4. ' no' → logprob: -16.755233764648438
    5. '	not' → logprob: -17.755233764648438
    6. '
' → logprob: -19.505233764648438
    7. ' ' → logprob: -19.880233764648438
    8. 'no' → logprob: -20.505233764648438
    9. '```' → logprob: -20.880233764648438
    10. ' )' → logprob: -21.005233764648438

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003157634288072586
    2. 'in' → logprob: -6.003157615661621
    3. ' self' → logprob: -7.878157615661621
    4. 'self' → logprob: -8.128157615661621
    5. ' not' → logprob: -13.253157615661621
    6. '           ' → logprob: -13.503157615661621
    7. ' ' → logprob: -14.378157615661621
    8. '               ' → logprob: -14.503157615661621
    9. '<|end|>' → logprob: -14.628157615661621
    10. 'not' → logprob: -14.878157615661621

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011759399203583598
    2. ' self' → logprob: -6.751175880432129
    3. '           ' → logprob: -12.126175880432129
    4. '
' → logprob: -15.751175880432129
    5. '       ' → logprob: -16.626176834106445
    6. '	self' → logprob: -16.751176834106445
    7. '   ' → logprob: -17.001176834106445
    8. '(self' → logprob: -18.126176834106445
    9. '          ' → logprob: -18.251176834106445
    10. '               ' → logprob: -18.251176834106445

Token 484: '.star' (ID: 99405)
  Prédit: '.star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.star' → logprob: -0.0011883260449394584
    2. 'star' → logprob: -6.751188278198242
    3. ' star' → logprob: -11.626188278198242
    4. '.st' → logprob: -12.251188278198242
    5. ' .' → logprob: -13.376188278198242
    6. '_star' → logprob: -13.626188278198242
    7. '.' → logprob: -13.751188278198242
    8. '.s' → logprob: -14.876188278198242
    9. '-star' → logprob: -16.501188278198242
    10. '.
' → logprob: -16.751188278198242

Token 485: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -3.0590548703912646e-05
    2. '_map' → logprob: -10.500030517578125
    3. 'set' → logprob: -12.875030517578125
    4. '_' → logprob: -15.000030517578125
    5. '_sets' → logprob: -17.875030517578125
    6. 'Set' → logprob: -18.000030517578125
    7. 's' → logprob: -18.875030517578125
    8. ' set' → logprob: -19.500030517578125
    9. '_s' → logprob: -19.750030517578125
    10. '_SET' → logprob: -20.000030517578125

Token 486: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8370146155357361
    2. '               ' → logprob: -0.9620146155357361
    3. ':
' → logprob: -1.7120146751403809
    4. '           ' → logprob: -5.712014675140381
    5. '):
' → logprob: -7.837014675140381
    6. ':return' → logprob: -8.337014198303223
    7. '                       ' → logprob: -9.212014198303223
    8. '<|end|>' → logprob: -9.462014198303223
    9. '                   ' → logprob: -10.337014198303223
    10. '():
' → logprob: -10.462014198303223

Token 487: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.9266199160483666e-05
    2. 'return' → logprob: -11.750019073486328
    3. '           ' → logprob: -12.000019073486328
    4. ' return' → logprob: -12.500019073486328
    5. '                   ' → logprob: -14.125019073486328
    6. '              ' → logprob: -14.875019073486328
    7. '
' → logprob: -16.125019073486328
    8. '                       ' → logprob: -16.250019073486328
    9. '                
' → logprob: -16.250019073486328
    10. '       ' → logprob: -18.375019073486328

Token 488: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5658606886863708
    2. ' return' → logprob: -1.3158607482910156
    3. '               ' → logprob: -1.8158607482910156
    4. '                   ' → logprob: -6.940860748291016
    5. '           ' → logprob: -8.940860748291016
    6. '
' → logprob: -9.440860748291016
    7. '   ' → logprob: -12.315860748291016
    8. '	return' → logprob: -13.065860748291016
    9. '                       ' → logprob: -13.440860748291016
    10. ':return' → logprob: -15.065860748291016

Token 489: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -19.625158309936523
    4. '=False' → logprob: -22.125158309936523
    5. 'True' → logprob: -22.750158309936523
    6. '
' → logprob: -23.000158309936523
    7. 'false' → logprob: -23.750158309936523
    8. '_false' → logprob: -24.125158309936523
    9. 'FALSE' → logprob: -24.500158309936523
    10. '```' → logprob: -24.500158309936523

Token 490: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.3358446166384965e-05
    2. 'return' → logprob: -10.125053405761719
    3. '	' → logprob: -12.000053405761719
    4. '	return' → logprob: -12.875053405761719
    5. ' return' → logprob: -13.500053405761719
    6. '   ' → logprob: -13.875053405761719
    7. '<|end|>' → logprob: -14.375053405761719
    8. '	   ' → logprob: -14.750053405761719
    9. '      ' → logprob: -15.250053405761719
    10. '           ' → logprob: -15.375053405761719

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.3954463510308415e-05
    2. 'return' → logprob: -10.000054359436035
    3. '	' → logprob: -12.500054359436035
    4. ' return' → logprob: -13.375054359436035
    5. '   ' → logprob: -13.625054359436035
    6. '	return' → logprob: -14.000054359436035
    7. '      ' → logprob: -15.375054359436035
    8. '<|end|>' → logprob: -15.625054359436035
    9. '           ' → logprob: -15.750054359436035
    10. '	   ' → logprob: -15.875054359436035

Token 492: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029300376772880554
    2. 'return' (adapté à ' return') → logprob: -6.127930164337158
    3. '   ' → logprob: -7.377930164337158
    4. ' return' → logprob: -9.5029296875
    5. '	return' → logprob: -10.5029296875
    6. '	' → logprob: -11.5029296875
    7. '	   ' → logprob: -13.6279296875
    8. '           ' → logprob: -13.7529296875
    9. '      ' → logprob: -14.2529296875
    10. 'eturn' → logprob: -14.3779296875

Token 493: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. '(True' → logprob: -19.27975082397461
    4. '   ' → logprob: -19.65475082397461
    5. 'true' → logprob: -20.52975082397461
    6. '=True' → logprob: -21.15475082397461
    7. '       ' → logprob: -21.27975082397461
    8. 'False' → logprob: -22.15475082397461
    9. ' ' → logprob: -23.02975082397461
    10. '.True' → logprob: -23.02975082397461

Token 494: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.005055546760559
    2. '<|end|>' → logprob: -1.005055546760559
    3. '   ' → logprob: -1.380055546760559
    4. '<|end|>' → logprob: -4.7550554275512695
    5. '#' → logprob: -5.8800554275512695
    6. 'from' → logprob: -6.2550554275512695
    7. 'class' → logprob: -6.3800554275512695
    8. ' def' → logprob: -8.00505542755127
    9. '```' → logprob: -8.13005542755127
    10. '	def' → logprob: -8.38005542755127

Token 496: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005728095420636237
    2. '   ' → logprob: -7.500572681427002
    3. ' def' → logprob: -11.37557315826416
    4. 'from' → logprob: -12.12557315826416
    5. '	def' → logprob: -13.37557315826416
    6. 'class' → logprob: -14.62557315826416
    7. '#' → logprob: -14.75057315826416
    8. ' ' → logprob: -15.75057315826416
    9. '<|end|>' → logprob: -16.125572204589844
    10. '  ' → logprob: -16.375572204589844

Token 497: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5767802000045776
    2. ' find' → logprob: -0.8267802000045776
    3. 'count' → logprob: -7.451780319213867
    4. ' count' → logprob: -9.076780319213867
    5. 'match' → logprob: -10.701780319213867
    6. 'search' → logprob: -10.826780319213867
    7. 'matches' → logprob: -10.951780319213867
    8. 'get' → logprob: -11.576780319213867
    9. 'patterns' → logprob: -11.826780319213867
    10. 'detect' → logprob: -12.076780319213867

Token 498: '_pattern' (ID: 50002)
  Prédit: '_patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.03602069243788719
    2. '_pattern' → logprob: -4.536020755767822
    3. '_' → logprob: -4.661020755767822
    4. '_all' → logprob: -4.911020755767822
    5. 'patterns' → logprob: -5.661020755767822
    6. '_matches' → logprob: -6.286020755767822
    7. '(self' → logprob: -7.036020755767822
    8. 'all' → logprob: -8.036020278930664
    9. 'self' → logprob: -8.036020278930664
    10. '_positions' → logprob: -8.161020278930664

Token 499: '_offset' (ID: 15447)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003467259928584099
    2. '_at' → logprob: -6.503467082977295
    3. 's' → logprob: -6.753467082977295
    4. '(' → logprob: -7.378467082977295
    5. '_positions' → logprob: -9.753467559814453
    6. 'self' → logprob: -9.878467559814453
    7. '(
' → logprob: -10.628467559814453
    8. '   ' → logprob: -11.253467559814453
    9. ' (' → logprob: -12.128467559814453
    10. '_instances' → logprob: -12.628467559814453

Token 500: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16195186972618103
    2. 's' → logprob: -1.9119518995285034
    3. '(s' → logprob: -6.536952018737793
    4. '(' → logprob: -8.411952018737793
    5. 'self' → logprob: -10.161952018737793
    6. ' (' → logprob: -12.161952018737793
    7. '(
' → logprob: -12.411952018737793
    8. '   ' → logprob: -13.286952018737793
    9. '_s' → logprob: -13.286952018737793
    10. ' s' → logprob: -14.286952018737793

Token 501: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3150276243686676
    2. 's' → logprob: -1.3150275945663452
    3. 'self' → logprob: -7.315027713775635
    4. '(s' → logprob: -7.565027713775635
    5. ',' → logprob: -7.690027713775635
    6. '   ' → logprob: -10.315027236938477
    7. '       ' → logprob: -10.690027236938477
    8. '(' → logprob: -10.690027236938477
    9. ')' → logprob: -11.065027236938477
    10. ' (' → logprob: -11.815027236938477

Token 502: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.03371128812432289
    2. ' pattern' → logprob: -3.4087111949920654
    3. '   ' → logprob: -10.158711433410645
    4. 'self' → logprob: -10.908711433410645
    5. '       ' → logprob: -12.033711433410645
    6. 'pat' → logprob: -13.658711433410645
    7. ' self' → logprob: -15.033711433410645
    8. 'patterns' → logprob: -15.158711433410645
    9. '(pattern' → logprob: -15.533711433410645
    10. 'star' → logprob: -16.158710479736328

Token 503: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004638980142772198
    2. 'self' → logprob: -6.004639148712158
    3. '(self' → logprob: -7.254639148712158
    4. ')' → logprob: -7.504639148712158
    5. '       ' → logprob: -8.129638671875
    6. ' self' → logprob: -8.629638671875
    7. '   ' → logprob: -8.629638671875
    8. ':' → logprob: -8.754638671875
    9. ' ,' → logprob: -9.504638671875
    10. ' (' → logprob: -12.254638671875

Token 504: ' Star' (ID: 11307)
  Prédit: ' Star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Star' → logprob: -0.10047721117734909
    2. 'Star' → logprob: -2.3504772186279297
    3. '   ' → logprob: -8.85047721862793
    4. ' ' → logprob: -10.10047721862793
    5. ')' → logprob: -10.22547721862793
    6. ''' → logprob: -11.22547721862793
    7. '       ' → logprob: -11.97547721862793
    8. ' '' → logprob: -12.47547721862793
    9. '  ' → logprob: -12.60047721862793
    10. ' star' → logprob: -12.72547721862793

Token 505: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -1.2948405128554441e-05
    2. 'pattern' → logprob: -12.37501335144043
    3. '   ' → logprob: -12.75001335144043
    4. 'Point' → logprob: -12.75001335144043
    5. 'Map' → logprob: -13.62501335144043
    6. '       ' → logprob: -14.50001335144043
    7. ')' → logprob: -14.62501335144043
    8. ' Pattern' → logprob: -15.62501335144043
    9. '_pattern' → logprob: -15.75001335144043
    10. '.Pattern' → logprob: -16.00001335144043

Token 506: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010212593479081988
    2. ')' → logprob: -7.001021385192871
    3. 'self' → logprob: -9.626021385192871
    4. '   ' → logprob: -10.501021385192871
    5. '       ' → logprob: -11.251021385192871
    6. '(self' → logprob: -13.501021385192871
    7. ' ,' → logprob: -13.626021385192871
    8. ',self' → logprob: -15.501021385192871
    9. 'def' → logprob: -15.751021385192871
    10. ' self' → logprob: -15.876021385192871

Token 507: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7576267719268799
    2. ')' → logprob: -1.6326267719268799
    3. '       ' → logprob: -1.7576267719268799
    4. ',' → logprob: -3.00762677192688
    5. '->' → logprob: -3.25762677192688
    6. 'self' → logprob: -3.38262677192688
    7. '   ' → logprob: -3.50762677192688
    8. ' ->' → logprob: -4.632626533508301
    9. ' self' → logprob: -7.382626533508301
    10. 'def' → logprob: -8.1326265335083

Token 508: ' Vector' (ID: 8764)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.23529869318008423
    2. 'list' → logprob: -2.2352986335754395
    3. 'Vector' → logprob: -2.4852986335754395
    4. 'None' → logprob: -5.1102986335754395
    5. 'set' → logprob: -5.3602986335754395
    6. 'tuple' → logprob: -5.8602986335754395
    7. '   ' → logprob: -6.1102986335754395
    8. ' Point' → logprob: -6.4852986335754395
    9. ''' → logprob: -7.7352986335754395
    10. ' list' → logprob: -7.7352986335754395

Token 509: ' |' (ID: 1022)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026946404948830605
    2. '(' → logprob: -4.276946544647217
    3. '   ' → logprob: -4.901946544647217
    4. '       ' → logprob: -5.776946544647217
    5. 'self' → logprob: -7.151946544647217
    6. ' (' → logprob: -7.401946544647217
    7. '(
' → logprob: -7.651946544647217
    8. ' self' → logprob: -9.276946067810059
    9. '	self' → logprob: -10.151946067810059
    10. ' ' → logprob: -10.776946067810059

Token 510: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.546478935983032e-05
    2. ' None' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.875025749206543
    4. ' ' → logprob: -16.625024795532227
    5. 'type' → logprob: -16.875024795532227
    6. 'none' → logprob: -17.125024795532227
    7. '  ' → logprob: -17.875024795532227
    8. '_None' → logprob: -18.250024795532227
    9. '       ' → logprob: -18.625024795532227
    10. 'bool' → logprob: -18.750024795532227

Token 511: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0909334421157837
    2. ':' → logprob: -1.2159334421157837
    3. '       ' → logprob: -1.3409334421157837
    4. '(self' → logprob: -2.715933322906494
    5. ':
' → logprob: -3.590933322906494
    6. '<|end|>' → logprob: -5.340933322906494
    7. 'self' → logprob: -6.590933322906494
    8. '(' → logprob: -6.715933322906494
    9. '	self' → logprob: -6.965933322906494
    10. ',' → logprob: -7.340933322906494

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002140028402209282
    2. ' for' → logprob: -6.252140045166016
    3. '   ' → logprob: -9.252140045166016
    4. 'for' → logprob: -9.377140045166016
    5. '```' → logprob: -11.252140045166016
    6. '<|end|>' → logprob: -11.502140045166016
    7. '        
' → logprob: -13.252140045166016
    8. '#' → logprob: -14.002140045166016
    9. '
' → logprob: -14.127140045166016
    10. '           ' → logprob: -14.377140045166016

Token 513: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15341626107692719
    2. 'for' → logprob: -2.153416156768799
    3. ' for' → logprob: -3.653416156768799
    4. '   ' → logprob: -8.903416633605957
    5. '```' → logprob: -9.403416633605957
    6. '
' → logprob: -11.403416633605957
    7. '           ' → logprob: -12.528416633605957
    8. '	for' → logprob: -13.153416633605957
    9. '        
' → logprob: -13.528416633605957
    10. '``' → logprob: -15.153416633605957

Token 514: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.215330409351736e-05
    2. '       ' → logprob: -10.375041961669922
    3. 'offset' → logprob: -12.000041961669922
    4. ' for' → logprob: -13.250041961669922
    5. 'pattern' → logprob: -13.625041961669922
    6. 'possible' → logprob: -14.375041961669922
    7. 'For' → logprob: -14.625041961669922
    8. 'seen' → logprob: -16.000041961669922
    9. '#' → logprob: -16.125041961669922
    10. 'visited' → logprob: -16.250041961669922

Token 515: ' over' (ID: 1072)
  Prédit: ' over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.268431156873703
    2. ' through' → logprob: -1.5184311866760254
    3. '       ' → logprob: -4.268431186676025
    4. 'over' → logprob: -6.768431186676025
    5. '   ' → logprob: -7.518431186676025
    6. 'through' → logprob: -8.018430709838867
    7. ' for' → logprob: -9.018430709838867
    8. ' ' → logprob: -9.143430709838867
    9. ' self' → logprob: -9.893430709838867
    10. 'self' → logprob: -11.018430709838867

Token 516: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010532920714467764
    2. ' self' → logprob: -7.501053333282471
    3. 'each' → logprob: -8.251052856445312
    4. 'star' → logprob: -8.876052856445312
    5. 'all' → logprob: -9.501052856445312
    6. 'possible' → logprob: -11.251052856445312
    7. 'candidate' → logprob: -12.126052856445312
    8. ' each' → logprob: -13.751052856445312
    9. 'point' → logprob: -14.126052856445312
    10. ' all' → logprob: -14.251052856445312

Token 517: ' stars' (ID: 13701)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'star' → logprob: -0.35856375098228455
    2. 'stars' → logprob: -1.983563780784607
    3. 'candidate' → logprob: -2.4835636615753174
    4. 'top' → logprob: -3.1085636615753174
    5. 'self' → logprob: -3.9835636615753174
    6. 'possible' → logprob: -4.9835638999938965
    7. 'potential' → logprob: -5.9835638999938965
    8. ' star' → logprob: -6.3585638999938965
    9. 'points' → logprob: -6.3585638999938965
    10. 'c' → logprob: -6.6085638999938965

Token 518: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0462060272693634
    2. ' in' → logprob: -3.171205997467041
    3. ' for' → logprob: -5.921205997467041
    4. ',' → logprob: -7.921205997467041
    5. ' to' → logprob: -9.6712064743042
    6. 'for' → logprob: -10.4212064743042
    7. ' with' → logprob: -11.4212064743042
    8. 'in' → logprob: -11.5462064743042
    9. ' of' → logprob: -11.9212064743042
    10. ':' → logprob: -11.9212064743042

Token 519: ' star' (ID: 8253)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.839121826691553e-05
    2. ' self' → logprob: -9.750078201293945
    3. 'the' → logprob: -11.125078201293945
    4. '       ' → logprob: -12.750078201293945
    5. '   ' → logprob: -13.250078201293945
    6. '
' → logprob: -14.875078201293945
    7. 'pattern' → logprob: -15.750078201293945
    8. ' ' → logprob: -17.625078201293945
    9. ' the' → logprob: -17.875078201293945
    10. '  ' → logprob: -18.000078201293945

Token 520: ' map' (ID: 4014)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22436466813087463
    2. '_map' → logprob: -2.224364757537842
    3. '_set' → logprob: -2.974364757537842
    4. 's' → logprob: -4.099364757537842
    5. '       ' → logprob: -4.349364757537842
    6. 'set' → logprob: -5.349364757537842
    7. '   ' → logprob: -5.849364757537842
    8. 'map' → logprob: -6.349364757537842
    9. 'Map' → logprob: -7.349364757537842
    10. ' self' → logprob: -7.349364757537842

Token 521: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015614904463291168
    2. ' for' → logprob: -4.265614986419678
    3. 'for' → logprob: -6.765614986419678
    4. ',' → logprob: -8.64061450958252
    5. ' to' → logprob: -10.39061450958252
    6. ' in' → logprob: -10.89061450958252
    7. ':' → logprob: -11.01561450958252
    8. ' and' → logprob: -11.01561450958252
    9. '<|end|>' → logprob: -11.51561450958252
    10. '
' → logprob: -11.76561450958252

Token 522: ' attempt' (ID: 8704)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18605837225914001
    2. ' for' → logprob: -1.9360584020614624
    3. 'for' → logprob: -3.686058282852173
    4. ' and' → logprob: -8.436058044433594
    5. ' to' → logprob: -10.186058044433594
    6. '           ' → logprob: -10.561058044433594
    7. '#' → logprob: -11.061058044433594
    8. '   ' → logprob: -11.311058044433594
    9. '```' → logprob: -11.311058044433594
    10. ' as' → logprob: -11.436058044433594

Token 523: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.540583610534668
    2. 'to' → logprob: -0.915583610534668
    3. '       ' → logprob: -4.165583610534668
    4. '   ' → logprob: -7.665583610534668
    5. ' each' → logprob: -7.790583610534668
    6. 'each' → logprob: -8.165583610534668
    7. ' for' → logprob: -8.665583610534668
    8. 'for' → logprob: -9.540583610534668
    9. 'ing' → logprob: -9.915583610534668
    10. 'possible' → logprob: -10.290583610534668

Token 524: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.23283343017101288
    2. 'find' → logprob: -1.7328333854675293
    3. ' match' → logprob: -3.7328333854675293
    4. ' find' → logprob: -5.107833385467529
    5. 'align' → logprob: -7.982833385467529
    6. 'matches' → logprob: -8.607833862304688
    7. 'loc' → logprob: -8.982833862304688
    8. 'map' → logprob: -9.107833862304688
    9. 'place' → logprob: -10.482833862304688
    10. 'translate' → logprob: -10.607833862304688

Token 525: ' pattern' (ID: 8302)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5275211334228516
    2. ' each' → logprob: -1.1525211334228516
    3. 'pattern' → logprob: -2.6525211334228516
    4. '       ' → logprob: -4.527521133422852
    5. ' pattern' → logprob: -4.652521133422852
    6. '   ' → logprob: -6.777521133422852
    7. 'self' → logprob: -7.652521133422852
    8. 'them' → logprob: -7.902521133422852
    9. 'the' → logprob: -8.152521133422852
    10. ' them' → logprob: -8.652521133422852

Token 526: ' reference' (ID: 9682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003934137057512999
    2. ' for' → logprob: -6.253933906555176
    3. ' with' → logprob: -6.753933906555176
    4. 'for' → logprob: -8.253933906555176
    5. 'with' → logprob: -8.878933906555176
    6. ',' → logprob: -8.878933906555176
    7. ' to' → logprob: -9.378933906555176
    8. ' at' → logprob: -9.753933906555176
    9. ':' → logprob: -10.128933906555176
    10. ' as' → logprob: -10.378933906555176

Token 527: ' star' (ID: 8253)
  Prédit: '_star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -0.16703340411186218
    2. 'star' → logprob: -2.1670334339141846
    3. ' star' → logprob: -3.2920334339141846
    4. '   ' → logprob: -7.2920331954956055
    5. '_point' → logprob: -7.2920331954956055
    6. '       ' → logprob: -8.292033195495605
    7. 'point' → logprob: -8.417033195495605
    8. '_' → logprob: -9.542033195495605
    9. '```' → logprob: -9.542033195495605
    10. ' for' → logprob: -10.792033195495605

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07962444424629211
    2. ' in' → logprob: -3.5796244144439697
    3. ' as' → logprob: -4.079624652862549
    4. ' for' → logprob: -4.329624652862549
    5. 'in' → logprob: -5.579624652862549
    6. ' with' → logprob: -5.704624652862549
    7. ':' → logprob: -5.829624652862549
    8. ' to' → logprob: -6.079624652862549
    9. ' at' → logprob: -6.204624652862549
    10. ',' → logprob: -6.829624652862549

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001916860812343657
    2. ' for' → logprob: -6.376916885375977
    3. ',' → logprob: -9.251916885375977
    4. 'for' → logprob: -10.251916885375977
    5. ' in' → logprob: -10.626916885375977
    6. '   ' → logprob: -10.626916885375977
    7. ':' → logprob: -12.626916885375977
    8. ')' → logprob: -12.751916885375977
    9. '           ' → logprob: -12.876916885375977
    10. '(' → logprob: -12.876916885375977

Token 530: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03630709648132324
    2. ' for' → logprob: -3.9113070964813232
    3. 'for' (adapté à ' for') → logprob: -4.161307334899902
    4. '   ' → logprob: -10.286307334899902
    5. '```' → logprob: -10.911307334899902
    6. '	for' → logprob: -14.286307334899902
    7. ' ' → logprob: -14.911307334899902
    8. '           ' → logprob: -15.036307334899902
    9. 'For' → logprob: -16.411306381225586
    10. ',' → logprob: -16.411306381225586

Token 531: ' candidate' (ID: 17098)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'star' → logprob: -0.811440110206604
    2. 'top' → logprob: -1.186440110206604
    3. 'candidate' → logprob: -1.561440110206604
    4. ' star' → logprob: -4.3114399909973145
    5. ' candidate' → logprob: -4.4364399909973145
    6. 'self' → logprob: -4.5614399909973145
    7. ' top' → logprob: -5.8114399909973145
    8. 'target' → logprob: -7.4364399909973145
    9. 'point' → logprob: -7.9364399909973145
    10. 'base' → logprob: -8.936440467834473

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011461098678410053
    2. '_star' → logprob: -4.63646125793457
    3. 'in' → logprob: -6.76146125793457
    4. '_point' → logprob: -7.88646125793457
    5. 'star' → logprob: -9.01146125793457
    6. 'Star' → logprob: -10.63646125793457
    7. ' star' → logprob: -11.88646125793457
    8. ' ' → logprob: -12.01146125793457
    9. '_top' → logprob: -13.26146125793457
    10. '_in' → logprob: -13.51146125793457

Token 533: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4741026759147644
    2. ' self' → logprob: -0.9741026759147644
    3. '       ' → logprob: -10.849102973937988
    4. '(self' → logprob: -13.224102973937988
    5. '
' → logprob: -13.599102973937988
    6. '	self' → logprob: -13.599102973937988
    7. '[self' → logprob: -13.849102973937988
    8. '```' → logprob: -15.474102973937988
    9. '   ' → logprob: -15.849102973937988
    10. '           ' → logprob: -15.974102973937988

Token 534: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -3.690834273584187e-05
    2. '.star' → logprob: -10.50003719329834
    3. '.' → logprob: -12.37503719329834
    4. ' .' → logprob: -12.75003719329834
    5. 'stars' → logprob: -13.37503719329834
    6. '	st' → logprob: -15.62503719329834
    7. '.s' → logprob: -15.62503719329834
    8. '_st' → logprob: -16.500036239624023
    9. '.points' → logprob: -16.625036239624023
    10. '.St' → logprob: -16.875036239624023

Token 535: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0011911796173080802
    2. 'ar' → logprob: -6.751191139221191
    3. 's' → logprob: -11.376191139221191
    4. 'rs' → logprob: -13.126191139221191
    5. 'arts' → logprob: -13.751191139221191
    6. 'self' → logprob: -14.126191139221191
    7. '       ' → logprob: -14.376191139221191
    8. '_map' → logprob: -14.376191139221191
    9. 'r' → logprob: -14.501191139221191
    10. '   ' → logprob: -14.626191139221191

Token 536: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760955810546875
    2. ':
' → logprob: -0.8260955810546875
    3. '):
' → logprob: -9.826095581054688
    4. '       ' → logprob: -10.326095581054688
    5. ':
' → logprob: -10.326095581054688
    6. ':

' → logprob: -10.826095581054688
    7. '           ' → logprob: -12.701095581054688
    8. ' :
' → logprob: -12.951095581054688
    9. '<|end|>' → logprob: -12.951095581054688
    10. '():
' → logprob: -13.076095581054688

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011005965061485767
    2. '
' → logprob: -4.636005878448486
    3. '       ' → logprob: -6.761005878448486
    4. ',' → logprob: -11.011006355285645
    5. '```' → logprob: -11.011006355285645
    6. '        
' → logprob: -11.386006355285645
    7. '            
' → logprob: -11.511006355285645
    8. '               ' → logprob: -12.511006355285645
    9. 'Vector' → logprob: -12.636006355285645
    10. '          ' → logprob: -12.636006355285645

Token 538: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1539078801870346
    2. 'offset' → logprob: -2.4039077758789062
    3. 'if' (adapté à ' if') → logprob: -3.0289077758789062
    4. ' if' → logprob: -5.903907775878906
    5. '   ' → logprob: -7.403907775878906
    6. ' offset' → logprob: -7.903907775878906
    7. 'vector' → logprob: -9.028907775878906
    8. '       ' → logprob: -10.153907775878906
    9. '               ' → logprob: -11.403907775878906
    10. '```' → logprob: -12.028907775878906

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006737865507602692
    2. ' self' → logprob: -5.00673770904541
    3. '           ' → logprob: -11.00673770904541
    4. '(self' → logprob: -13.25673770904541
    5. 'not' → logprob: -13.38173770904541
    6. '   ' → logprob: -13.75673770904541
    7. '       ' → logprob: -14.13173770904541
    8. ' not' → logprob: -15.00673770904541
    9. '	self' → logprob: -15.88173770904541
    10. 'pattern' → logprob: -16.006738662719727

Token 540: '.contains' (ID: 13678)
  Prédit: '.contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.contains' → logprob: -7.100059156073257e-05
    2. '.cont' → logprob: -10.500070571899414
    3. '.' → logprob: -10.875070571899414
    4. ' .' → logprob: -11.375070571899414
    5. 'contains' → logprob: -11.375070571899414
    6. '.con' → logprob: -14.250070571899414
    7. '.contents' → logprob: -14.625070571899414
    8. '.Contains' → logprob: -15.875070571899414
    9. '.can' → logprob: -16.375070571899414
    10. '.has' → logprob: -16.750070571899414

Token 541: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -3.292907877039397e-06
    2. 'pattern' → logprob: -13.00000286102295
    3. '_pat' → logprob: -14.75000286102295
    4. '_p' → logprob: -15.62500286102295
    5. '_patterns' → logprob: -15.75000286102295
    6. '_' → logprob: -16.625003814697266
    7. ' pattern' → logprob: -16.750003814697266
    8. '```' → logprob: -17.125003814697266
    9. ' _' → logprob: -18.375003814697266
    10. '
' → logprob: -18.625003814697266

Token 542: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -4.320199877838604e-07
    2. '_pattern' → logprob: -14.75
    3. 'pattern' → logprob: -18.125
    4. '_' → logprob: -18.5
    5. 'at' → logprob: -19.25
    6. 'At' → logprob: -21.0
    7. '_
' → logprob: -21.5
    8. '	at' → logprob: -21.75
    9. ' pattern' → logprob: -21.875
    10. '_a' → logprob: -22.375

Token 543: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -8.172891830326989e-05
    2. 'pattern' → logprob: -9.500082015991211
    3. '(' → logprob: -12.000082015991211
    4. ' pattern' → logprob: -14.875082015991211
    5. ' (' → logprob: -16.37508201599121
    6. '(
' → logprob: -16.62508201599121
    7. '.pattern' → logprob: -19.12508201599121
    8. '```' → logprob: -19.37508201599121
    9. '(p' → logprob: -19.75008201599121
    10. '(predicate' → logprob: -19.87508201599121

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032950565218925476
    2. ' ,' → logprob: -8.500329971313477
    3. ',c' → logprob: -9.750329971313477
    4. 'candidate' → logprob: -10.375329971313477
    5. '(candidate' → logprob: -10.625329971313477
    6. ' candidate' → logprob: -11.500329971313477
    7. '   ' → logprob: -14.500329971313477
    8. '           ' → logprob: -14.625329971313477
    9. ',
' → logprob: -15.250329971313477
    10. '       ' → logprob: -15.875329971313477

Token 545: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.011053359135985374
    2. ' candidate' → logprob: -4.511053562164307
    3. '(candidate' → logprob: -12.136053085327148
    4. ' candidat' → logprob: -16.51105308532715
    5. '_candidate' → logprob: -17.88605308532715
    6. 'c' → logprob: -18.13605308532715
    7. 'andidate' → logprob: -18.26105308532715
    8. '
' → logprob: -19.38605308532715
    9. '   ' → logprob: -19.38605308532715
    10. ')' → logprob: -19.51105308532715

Token 546: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029798856005072594
    2. '):
' → logprob: -3.529798746109009
    3. '):
' → logprob: -10.77979850769043
    4. ' ):' → logprob: -11.15479850769043
    5. ':' → logprob: -11.77979850769043
    6. ')' → logprob: -12.27979850769043
    7. '):

' → logprob: -14.90479850769043
    8. ' ):
' → logprob: -15.02979850769043
    9. '       ' → logprob: -16.02979850769043
    10. '           ' → logprob: -16.65479850769043

Token 547: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003990896511822939
    2. '
' → logprob: -6.00399112701416
    3. '           ' → logprob: -6.62899112701416
    4. ' return' → logprob: -8.75399112701416
    5. 'return' → logprob: -11.50399112701416
    6. '                
' → logprob: -12.00399112701416
    7. '       ' → logprob: -12.00399112701416
    8. '            
' → logprob: -12.75399112701416
    9. '                   ' → logprob: -13.50399112701416
    10. '              ' → logprob: -13.62899112701416

Token 548: ' dx' (ID: 29472)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022096864879131317
    2. '               ' → logprob: -4.022096633911133
    3. '           ' → logprob: -6.397096633911133
    4. ' return' → logprob: -6.772096633911133
    5. '
' → logprob: -7.022096633911133
    6. 'offset' → logprob: -8.522096633911133
    7. '   ' → logprob: -11.022096633911133
    8. '       ' → logprob: -11.647096633911133
    9. '```' → logprob: -12.022096633911133
    10. 'Vector' → logprob: -13.522096633911133

Token 549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619877465069294
    2. ' =' → logprob: -2.8119876384735107
    3. '=
' → logprob: -11.31198787689209
    4. ',' → logprob: -12.18698787689209
    5. '=

' → logprob: -14.31198787689209
    6. ':' → logprob: -14.43698787689209
    7. ')' → logprob: -14.93698787689209
    8. '=int' → logprob: -14.93698787689209
    9. ' =
' → logprob: -16.186986923217773
    10. '=self' → logprob: -16.311986923217773

Token 550: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -4.584861744660884e-05
    2. ' candidate' → logprob: -10.000045776367188
    3. '(candidate' → logprob: -15.125045776367188
    4. 'c' → logprob: -16.125045776367188
    5. 'cand' → logprob: -17.250045776367188
    6. 'andidate' → logprob: -17.375045776367188
    7. ' candidat' → logprob: -19.250045776367188
    8. '_candidate' → logprob: -19.875045776367188
    9. ' candidato' → logprob: -20.500045776367188
    10. '   ' → logprob: -21.750045776367188

Token 551: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.000850605487357825
    2. '.' → logprob: -7.375850677490234
    3. 'x' → logprob: -8.500850677490234
    4. '.dx' → logprob: -11.000850677490234
    5. ' .' → logprob: -13.000850677490234
    6. ' -' → logprob: -14.250850677490234
    7. 'Vector' → logprob: -14.375850677490234
    8. '.vector' → logprob: -15.625850677490234
    9. '-' → logprob: -16.125850677490234
    10. 'dx' → logprob: -16.500850677490234

Token 552: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759404301643372
    2. ' -' → logprob: -0.8259404301643372
    3. '-
' → logprob: -13.950940132141113
    4. ' -
' → logprob: -17.32594108581543
    5. ' ' → logprob: -17.70094108581543
    6. '   ' → logprob: -17.70094108581543
    7. '−' → logprob: -17.95094108581543
    8. '()-' → logprob: -18.32594108581543
    9. '           ' → logprob: -18.57594108581543
    10. '```' → logprob: -18.57594108581543

Token 553: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.00020354038861114532
    2. ' pattern' → logprob: -8.500203132629395
    3. '(pattern' → logprob: -17.25020408630371
    4. '<|end|>' → logprob: -17.37520408630371
    5. 'patterns' → logprob: -18.87520408630371
    6. 'self' → logprob: -18.87520408630371
    7. 'pat' → logprob: -19.00020408630371
    8. '.pattern' → logprob: -20.12520408630371
    9. '_pattern' → logprob: -21.87520408630371
    10. '           ' → logprob: -21.87520408630371

Token 554: '.reference' (ID: 101461)
  Prédit: '.reference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reference' → logprob: -0.0007286362233571708
    2. 'reference' → logprob: -7.750728607177734
    3. '.' → logprob: -8.125728607177734
    4. '.x' → logprob: -14.125728607177734
    5. ' .' → logprob: -15.000728607177734
    6. '.
' → logprob: -15.750728607177734
    7. '.references' → logprob: -16.000728607177734
    8. '.vector' → logprob: -16.250728607177734
    9. '.Reference' → logprob: -16.250728607177734
    10. ' reference' → logprob: -16.500728607177734

Token 555: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -6.704273118884885e-07
    2. 'star' → logprob: -15.000000953674316
    3. '_' → logprob: -16.25
    4. '_STAR' → logprob: -16.25
    5. '```' → logprob: -17.25
    6. '_st' → logprob: -17.875
    7. '_s' → logprob: -18.125
    8. '*_' → logprob: -18.125
    9. ' star' → logprob: -18.375
    10. '   ' → logprob: -19.125

Token 556: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002584785979706794
    2. 'x' → logprob: -8.375258445739746
    3. '.' → logprob: -10.500258445739746
    4. ' .' → logprob: -15.000258445739746
    5. '.dx' → logprob: -17.875259399414062
    6. ' x' → logprob: -18.250259399414062
    7. '[' → logprob: -18.750259399414062
    8. '.
' → logprob: -19.625259399414062
    9. '```' → logprob: -19.625259399414062
    10. ' ' → logprob: -19.875259399414062

Token 557: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014631991274654865
    2. ',' → logprob: -5.014632225036621
    3. 'dy' → logprob: -5.889632225036621
    4. '           ' → logprob: -6.389632225036621
    5. '               ' → logprob: -6.639632225036621
    6. ' dy' → logprob: -7.514632225036621
    7. ',
' → logprob: -7.764632225036621
    8. '
' → logprob: -7.889632225036621
    9. '       ' → logprob: -8.639632225036621
    10. ',d' → logprob: -9.264632225036621

Token 558: '               ' (ID: 506)
  Prédit: ' dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.6855566501617432
    2. 'dy' → logprob: -0.8105566501617432
    3. ',' → logprob: -3.310556650161743
    4. '           ' → logprob: -4.685556411743164
    5. '               ' → logprob: -5.560556411743164
    6. '
' → logprob: -7.435556411743164
    7. '       ' → logprob: -7.810556411743164
    8. ',
' → logprob: -8.310556411743164
    9. '   ' → logprob: -9.310556411743164
    10. '.dy' → logprob: -9.435556411743164

Token 559: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -5.88418151892256e-05
    2. ' dy' → logprob: -9.750059127807617
    3. '
' → logprob: -15.125059127807617
    4. '       ' → logprob: -16.000059127807617
    5. '   ' → logprob: -17.125059127807617
    6. '               ' → logprob: -17.500059127807617
    7. '           ' → logprob: -18.500059127807617
    8. 'return' → logprob: -19.125059127807617
    9. '.dy' → logprob: -19.375059127807617
    10. 'Dy' → logprob: -19.625059127807617

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22542345523834229
    2. '=' → logprob: -1.6004234552383423
    3. '<|end|>' → logprob: -11.725423812866211
    4. '           ' → logprob: -14.600423812866211
    5. ' ' → logprob: -14.850423812866211
    6. ')' → logprob: -15.100423812866211
    7. ',' → logprob: -15.225423812866211
    8. '<|end|>' → logprob: -15.350423812866211
    9. '               ' → logprob: -15.975423812866211
    10. ' =)' → logprob: -16.22542381286621

Token 561: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.011049470864236355
    2. ' candidate' → logprob: -4.511049270629883
    3. '(candidate' → logprob: -13.511049270629883
    4. '_candidate' → logprob: -15.636049270629883
    5. '           ' → logprob: -16.511049270629883
    6. ' candidat' → logprob: -17.511049270629883
    7. ' candidato' → logprob: -18.011049270629883
    8. 'andidate' → logprob: -18.886049270629883
    9. '               ' → logprob: -19.011049270629883
    10. ' kandidaat' → logprob: -19.511049270629883

Token 562: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.087481789290905
    2. '-' → logprob: -2.587481737136841
    3. ' -' → logprob: -4.96248197555542
    4. 'y' → logprob: -6.58748197555542
    5. '.' → logprob: -8.962481498718262
    6. '-y' → logprob: -10.337481498718262
    7. '[' → logprob: -12.087481498718262
    8. '.py' → logprob: -12.587481498718262
    9. ' y' → logprob: -12.712481498718262
    10. '=' → logprob: -12.962481498718262

Token 563: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020699352025986
    2. '-' → logprob: -2.3502070903778076
    3. ' ' → logprob: -16.10020637512207
    4. '-d' → logprob: -16.60020637512207
    5. '-user' → logprob: -16.85020637512207
    6. '=' → logprob: -17.22520637512207
    7. ' -
' → logprob: -18.10020637512207
    8. '-c' → logprob: -18.10020637512207
    9. '   ' → logprob: -18.60020637512207
    10. '```' → logprob: -18.72520637512207

Token 564: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.011047935113310814
    2. ' pattern' → logprob: -4.511047840118408
    3. '(pattern' → logprob: -16.63604736328125
    4. 'pat' → logprob: -18.01104736328125
    5. '           ' → logprob: -19.13604736328125
    6. ' ' → logprob: -19.13604736328125
    7. '   ' → logprob: -19.38604736328125
    8. '       ' → logprob: -19.76104736328125
    9. '.pattern' → logprob: -20.13604736328125
    10. '               ' → logprob: -20.63604736328125

Token 565: '.reference' (ID: 101461)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03311176970601082
    2. 'y' → logprob: -4.408111572265625
    3. 'reference' → logprob: -4.658111572265625
    4. '.reference' → logprob: -5.033111572265625
    5. '_star' → logprob: -6.033111572265625
    6. 'Star' → logprob: -7.533111572265625
    7. '_reference' → logprob: -7.658111572265625
    8. '-star' → logprob: -8.908111572265625
    9. 'star' → logprob: -8.908111572265625
    10. '-' → logprob: -9.033111572265625

Token 566: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -6.098748053773306e-05
    2. '-star' → logprob: -11.12506103515625
    3. 'Star' → logprob: -11.25006103515625
    4. '.star' → logprob: -11.37506103515625
    5. 'star' → logprob: -11.37506103515625
    6. '_STAR' → logprob: -12.75006103515625
    7. ' star' → logprob: -13.12506103515625
    8. '   ' → logprob: -14.25006103515625
    9. '_st' → logprob: -14.37506103515625
    10. '-' → logprob: -14.50006103515625

Token 567: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.08910839259624481
    2. 'y' → logprob: -2.464108467102051
    3. ' y' → logprob: -9.71410846710205
    4. '-' → logprob: -10.08910846710205
    5. '   ' → logprob: -10.96410846710205
    6. '.' → logprob: -11.08910846710205
    7. ' ' → logprob: -11.46410846710205
    8. '-y' → logprob: -12.08910846710205
    9. ' -' → logprob: -12.58910846710205
    10. '  ' → logprob: -12.96410846710205

Token 568: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0069572580978274345
    2. '
' → logprob: -5.131957054138184
    3. '           ' → logprob: -7.381957054138184
    4. 'return' → logprob: -8.006957054138184
    5. ' return' → logprob: -10.506957054138184
    6. '       ' → logprob: -10.756957054138184
    7. '<|end|>' → logprob: -12.381957054138184
    8. '
' → logprob: -12.631957054138184
    9. '              ' → logprob: -12.881957054138184
    10. '                
' → logprob: -13.131957054138184

Token 569: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007081442163325846
    2. 'return' → logprob: -8.00070858001709
    3. '           ' → logprob: -8.62570858001709
    4. ' return' → logprob: -8.87570858001709
    5. '
' → logprob: -10.00070858001709
    6. '       ' → logprob: -12.37570858001709
    7. '```' → logprob: -13.25070858001709
    8. '              ' → logprob: -15.12570858001709
    9. '                   ' → logprob: -15.12570858001709
    10. '<|end|>' → logprob: -15.50070858001709

Token 570: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015318624675273895
    2. ' return' → logprob: -4.265318393707275
    3. '               ' → logprob: -6.765318393707275
    4. '           ' → logprob: -14.265318870544434
    5. '
' → logprob: -14.640318870544434
    6. '	return' → logprob: -15.890318870544434
    7. '   ' → logprob: -16.640317916870117
    8. '                   ' → logprob: -16.890317916870117
    9. '       ' → logprob: -17.515317916870117
    10. '```' → logprob: -18.265317916870117

Token 571: ' Vector' (ID: 8764)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.011047814972698689
    2. ' Vector' → logprob: -4.511047840118408
    3. '	Vector' → logprob: -19.26104736328125
    4. '(Vector' → logprob: -21.51104736328125
    5. '_Vector' → logprob: -21.76104736328125
    6. '<Vector' → logprob: -22.38604736328125
    7. 'Vectors' → logprob: -22.76104736328125
    8. '   ' → logprob: -22.76104736328125
    9. '.Vector' → logprob: -23.76104736328125
    10. ' vector' → logprob: -23.88604736328125

Token 572: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'dx' → logprob: -14.375001907348633
    4. '(
' → logprob: -18.875001907348633
    5. ' (' → logprob: -19.875001907348633
    6. ' dx' → logprob: -20.250001907348633
    7. '_dx' → logprob: -20.625001907348633
    8. 'Dx' → logprob: -21.375001907348633
    9. '.dx' → logprob: -22.125001907348633
    10. '(d' → logprob: -22.250001907348633

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ' ,' → logprob: -10.500049591064453
    3. ',d' → logprob: -10.750049591064453
    4. ',
' → logprob: -16.250049591064453
    5. ',y' → logprob: -17.000049591064453
    6. ' dy' → logprob: -18.000049591064453
    7. 'dy' → logprob: -18.750049591064453
    8. '<|end|>' → logprob: -20.250049591064453
    9. ')' → logprob: -20.375049591064453
    10. '‌,' → logprob: -20.625049591064453

Token 574: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0009115827269852161
    2. ' dy' → logprob: -7.000911712646484
    3. 'd' → logprob: -19.000911712646484
    4. '.dy' → logprob: -19.125911712646484
    5. '
' → logprob: -20.375911712646484
    6. '   ' → logprob: -20.750911712646484
    7. 'Dy' → logprob: -21.000911712646484
    8. ' ' → logprob: -21.125911712646484
    9. ' ' → logprob: -21.500911712646484
    10. 'dym' → logprob: -21.500911712646484

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03819101303815842
    2. ')
' → logprob: -3.288191080093384
    3. '       ' → logprob: -8.913190841674805
    4. ')
' → logprob: -11.788190841674805
    5. '           ' → logprob: -12.788190841674805
    6. '   ' → logprob: -13.538190841674805
    7. ' )' → logprob: -14.413190841674805
    8. '               ' → logprob: -14.413190841674805
    9. ')return' → logprob: -14.538190841674805
    10. ')

' → logprob: -14.663190841674805

Token 576: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9190391898155212
    2. '       ' → logprob: -1.294039249420166
    3. 'None' → logprob: -1.294039249420166
    4. '   ' → logprob: -3.169039249420166
    5. '
' → logprob: -5.169039249420166
    6. ' return' → logprob: -6.419039249420166
    7. ' None' → logprob: -6.919039249420166
    8. '<|end|>' → logprob: -7.044039249420166
    9. '	return' → logprob: -7.544039249420166
    10. '```' → logprob: -8.044038772583008

Token 578: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01416350994259119
    2. ' None' → logprob: -4.264163494110107
    3. '_None' → logprob: -19.889163970947266
    4. '(None' → logprob: -20.889163970947266
    5. ',None' → logprob: -22.014163970947266
    6. 'none' → logprob: -22.389163970947266
    7. '=None' → logprob: -22.389163970947266
    8. '
' → logprob: -23.889163970947266
    9. '_none' → logprob: -24.889163970947266
    10. '.None' → logprob: -24.889163970947266

Token 579: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -0.45891743898391724
    2. ' Star' → logprob: -1.5839173793792725
    3. 'Const' → logprob: -3.2089173793792725
    4. 'Galaxy' → logprob: -3.7089173793792725
    5. 'Pattern' → logprob: -4.083917617797852
    6. ' const' → logprob: -4.708917617797852
    7. 'Con' → logprob: -4.708917617797852
    8. 'Rot' → logprob: -4.708917617797852
    9. ' Con' → logprob: -4.708917617797852
    10. ' constellation' → logprob: -5.208917617797852

Token 582: 'Pattern' (ID: 16821)
  Prédit: 'Finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -1.2996097803115845
    2. 'Pattern' → logprob: -1.4246097803115845
    3. 'Scanner' → logprob: -2.049609661102295
    4. 'Tracker' → logprob: -2.424609661102295
    5. 'Field' → logprob: -2.924609661102295
    6. 'Cluster' → logprob: -3.174609661102295
    7. 'Matcher' → logprob: -3.299609661102295
    8. 'Locator' → logprob: -3.674609661102295
    9. 'Collector' → logprob: -3.924609661102295
    10. 'Searcher' → logprob: -4.049609661102295

Token 583: 'Detector' (ID: 40139)
  Prédit: 'Matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -0.8013967871665955
    2. 'Set' → logprob: -1.5513968467712402
    3. 'Finder' → logprob: -1.5513968467712402
    4. 'Searcher' → logprob: -2.9263968467712402
    5. 'Builder' → logprob: -3.5513968467712402
    6. ':
' → logprob: -4.92639684677124
    7. 'Scanner' → logprob: -5.05139684677124
    8. 'Detector' → logprob: -5.30139684677124
    9. ':' → logprob: -5.67639684677124
    10. 'Match' → logprob: -5.92639684677124

Token 584: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029784973710775375
    2. ':
' → logprob: -3.529784917831421
    3. ':def' → logprob: -11.40478515625
    4. ' :' → logprob: -12.02978515625
    5. '   ' → logprob: -12.27978515625
    6. ':

' → logprob: -12.65478515625
    7. '(' → logprob: -12.90478515625
    8. '<|end|>' → logprob: -13.02978515625
    9. '(object' → logprob: -14.15478515625
    10. ' :
' → logprob: -14.15478515625

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040779312257654965
    2. 'def' → logprob: -8.875408172607422
    3. ':
' → logprob: -9.250408172607422
    4. ':' → logprob: -9.250408172607422
    5. ' def' → logprob: -10.250408172607422
    6. '	def' → logprob: -11.500408172607422
    7. 'class' → logprob: -11.750408172607422
    8. 'Star' → logprob: -12.375408172607422
    9. ' Star' → logprob: -12.750408172607422
    10. '<|end|>' → logprob: -13.000408172607422

Token 586: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8115183711051941
    2. ' def' → logprob: -1.0615184307098389
    3. 'def' (adapté à ' def') → logprob: -1.5615184307098389
    4. 'class' → logprob: -10.061518669128418
    5. '	def' → logprob: -10.936518669128418
    6. '```' → logprob: -12.561518669128418
    7. ' __' → logprob: -13.561518669128418
    8. '__' → logprob: -13.811518669128418
    9. '    ' → logprob: -13.936518669128418
    10. ' ' → logprob: -14.311518669128418

Token 587: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03807075694203377
    2. ' def' → logprob: -3.2880706787109375
    3. 'def' → logprob: -11.038070678710938
    4. '__' → logprob: -11.663070678710938
    5. ' _' → logprob: -13.288070678710938
    6. ' init' → logprob: -13.913070678710938
    7. ' ' → logprob: -14.288070678710938
    8. ' ___' → logprob: -14.538070678710938
    9. ' ' → logprob: -15.413070678710938
    10. ' find' → logprob: -15.663070678710938

Token 588: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1398757123970427e-05
    2. 'slots' → logprob: -11.500011444091797
    3. 'def' → logprob: -13.625011444091797
    4. ' init' → logprob: -17.375011444091797
    5. '(init' → logprob: -17.500011444091797
    6. '_init' → logprob: -18.375011444091797
    7. '```' → logprob: -18.625011444091797
    8. 'call' → logprob: -19.125011444091797
    9. '   ' → logprob: -19.125011444091797
    10. 'slot' → logprob: -19.375011444091797

Token 589: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0010526961414143443
    2. '(self' → logprob: -7.2510528564453125
    3. '__' → logprob: -8.751052856445312
    4. '__(
' → logprob: -8.751052856445312
    5. 'self' → logprob: -11.751052856445312
    6. '(' → logprob: -11.751052856445312
    7. '_(' → logprob: -12.876052856445312
    8. '   ' → logprob: -13.251052856445312
    9. '__((' → logprob: -13.501052856445312
    10. '__(*' → logprob: -13.876052856445312

Token 590: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.215330409351736e-05
    2. '   ' → logprob: -11.000041961669922
    3. ' self' → logprob: -11.125041961669922
    4. '
' → logprob: -12.125041961669922
    5. '       ' → logprob: -12.625041961669922
    6. ')' → logprob: -14.375041961669922
    7. '0' → logprob: -14.500041961669922
    8. 'star' → logprob: -15.125041961669922
    9. ',' → logprob: -16.000041961669922
    10. '(self' → logprob: -16.250041961669922

Token 591: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010080150241265073
    2. 'self' → logprob: -9.500101089477539
    3. ' ,' → logprob: -11.375101089477539
    4. '   ' → logprob: -12.250101089477539
    5. '(self' → logprob: -12.875101089477539
    6. '       ' → logprob: -13.375101089477539
    7. ',
' → logprob: -13.500101089477539
    8. '<|end|>' → logprob: -13.875101089477539
    9. ',self' → logprob: -14.125101089477539
    10. ' (' → logprob: -14.375101089477539

Token 592: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001552665780764073
    2. '       ' → logprob: -9.000155448913574
    3. ' self' → logprob: -10.500155448913574
    4. '   ' → logprob: -12.750155448913574
    5. '
' → logprob: -14.375155448913574
    6. '(self' → logprob: -15.000155448913574
    7. 'star' → logprob: -15.875155448913574
    8. 's' → logprob: -16.375154495239258
    9. '```' → logprob: -16.500154495239258
    10. '	self' → logprob: -17.000154495239258

Token 593: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3935440480709076
    2. '       ' → logprob: -1.14354407787323
    3. ' self' → logprob: -5.0185441970825195
    4. '   ' → logprob: -11.14354419708252
    5. 'pass' → logprob: -11.89354419708252
    6. '	self' → logprob: -11.89354419708252
    7. 'class' → logprob: -13.01854419708252
    8. '(self' → logprob: -13.14354419708252
    9. ' pass' → logprob: -13.89354419708252
    10. '
' → logprob: -14.26854419708252

Token 594: '.results' (ID: 53203)
  Prédit: '.pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.014565843157470226
    2. '._' → logprob: -4.514565944671631
    3. '.st' → logprob: -7.014565944671631
    4. '.star' → logprob: -7.139565944671631
    5. 'patterns' → logprob: -7.514565944671631
    6. '.' → logprob: -7.889565944671631
    7. '.detect' → logprob: -9.014565467834473
    8. '.p' → logprob: -9.014565467834473
    9. ' .' → logprob: -9.764565467834473
    10. '.results' → logprob: -10.014565467834473

Token 595: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08119677752256393
    2. '=' → logprob: -2.5811967849731445
    3. ':' → logprob: -6.0811967849731445
    4. '=[]' → logprob: -11.081196784973145
    5. ' :' → logprob: -13.331196784973145
    6. ' ' → logprob: -14.456196784973145
    7. '   ' → logprob: -14.456196784973145
    8. '={}' → logprob: -15.581196784973145
    9. '  ' → logprob: -15.706196784973145
    10. '[:]' → logprob: -15.831196784973145

Token 596: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014167149551212788
    2. '{}' → logprob: -4.264167308807373
    3. '[]
' → logprob: -13.014166831970215
    4. 'set' → logprob: -14.264166831970215
    5. ' []' → logprob: -14.639166831970215
    6. '[]

' → logprob: -16.13916778564453
    7. '[]}' → logprob: -16.38916778564453
    8. 'dict' → logprob: -16.76416778564453
    9. '{' → logprob: -17.13916778564453
    10. '[' → logprob: -17.26416778564453

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037741931155323982
    2. '
' → logprob: -5.628774166107178
    3. '<|end|>' → logprob: -9.753774642944336
    4. '    
' → logprob: -9.878774642944336
    5. 'def' → logprob: -10.003774642944336
    6. ' def' → logprob: -11.753774642944336
    7. '```' → logprob: -12.253774642944336
    8. '<|end|>' → logprob: -12.628774642944336
    9. '  ' → logprob: -14.128774642944336
    10. '	def' → logprob: -14.753774642944336

Token 598: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006140899378806353
    2. '   ' → logprob: -5.25614070892334
    3. ' def' → logprob: -7.00614070892334
    4. '	def' → logprob: -15.00614070892334
    5. '```' → logprob: -17.381141662597656
    6. 'class' → logprob: -17.756141662597656
    7. '
' → logprob: -18.631141662597656
    8. ' ' → logprob: -19.006141662597656
    9. 'from' → logprob: -19.381141662597656
    10. '  ' → logprob: -19.631141662597656

Token 599: ' read' (ID: 1729)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.0517667718231678
    2. ' detect' → logprob: -3.301766872406006
    3. 'find' → logprob: -4.551766872406006
    4. 'search' → logprob: -6.426766872406006
    5. ' find' → logprob: -7.301766872406006
    6. 'add' → logprob: -7.426766872406006
    7. 'def' → logprob: -9.801766395568848
    8. ' search' → logprob: -10.051766395568848
    9. 'scan' → logprob: -10.551766395568848
    10. 'run' → logprob: -10.676766395568848

Token 600: '_pattern' (ID: 50002)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04962926357984543
    2. '(' → logprob: -3.7996292114257812
    3. 'self' → logprob: -3.7996292114257812
    4. '_star' → logprob: -6.174629211425781
    5. '_line' → logprob: -7.424629211425781
    6. '_pattern' → logprob: -8.924629211425781
    7. '_self' → logprob: -9.049629211425781
    8. '_input' → logprob: -9.174629211425781
    9. '_patterns' → logprob: -9.174629211425781
    10. '()' → logprob: -9.299629211425781

Token 601: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005743592046201229
    2. '(' → logprob: -7.500574588775635
    3. 'self' → logprob: -11.375574111938477
    4. 'from' → logprob: -12.625574111938477
    5. '(
' → logprob: -13.000574111938477
    6. '_from' → logprob: -13.000574111938477
    7. ' (' → logprob: -14.500574111938477
    8. 's' → logprob: -15.000574111938477
    9. '   ' → logprob: -15.125574111938477
    10. '_line' → logprob: -15.500574111938477

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001601539261173457
    2. 'self' → logprob: -9.500160217285156
    3. ' ,' → logprob: -10.000160217285156
    4. '):
' → logprob: -11.125160217285156
    5. '(self' → logprob: -12.375160217285156
    6. '):' → logprob: -12.375160217285156
    7. '   ' → logprob: -12.500160217285156
    8. '       ' → logprob: -12.875160217285156
    9. ')' → logprob: -13.250160217285156
    10. ',self' → logprob: -13.500160217285156

Token 603: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6558229327201843
    2. 'self' → logprob: -1.155822992324829
    3. 'stars' → logprob: -2.655822992324829
    4. 'pattern' → logprob: -3.280822992324829
    5. ' lines' → logprob: -3.655822992324829
    6. ' self' → logprob: -4.65582275390625
    7. 'n' → logprob: -5.40582275390625
    8. 'star' → logprob: -5.40582275390625
    9. 'num' → logprob: -5.53082275390625
    10. ')' → logprob: -5.53082275390625

Token 604: '_iter' (ID: 27043)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5145900249481201
    2. '_line' → logprob: -2.38959002494812
    3. '_lines' → logprob: -2.38959002494812
    4. '())' → logprob: -2.88959002494812
    5. '():' → logprob: -3.01459002494812
    6. '):' → logprob: -3.13959002494812
    7. ')' → logprob: -3.13959002494812
    8. '_stream' → logprob: -4.389590263366699
    9. '()):
' → logprob: -5.264590263366699
    10. '().' → logprob: -5.889590263366699

Token 605: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5525346994400024
    2. '):' → logprob: -0.9275346994400024
    3. '(self' → logprob: -4.552534580230713
    4. ')' → logprob: -4.927534580230713
    5. 'self' → logprob: -5.427534580230713
    6. ':' → logprob: -5.677534580230713
    7. 'able' → logprob: -5.927534580230713
    8. 'ator' → logprob: -8.427535057067871
    9. 'elf' → logprob: -9.177535057067871
    10. '):
' → logprob: -9.677535057067871

Token 606: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1928330361843109
    2. '(self' → logprob: -2.3178329467773438
    3. ':
' → logprob: -3.0678329467773438
    4. '       ' → logprob: -3.8178329467773438
    5. '   ' → logprob: -5.692832946777344
    6. 'self' → logprob: -6.817832946777344
    7. ',' → logprob: -7.067832946777344
    8. '->' → logprob: -7.067832946777344
    9. ' ->' → logprob: -7.317832946777344
    10. '):
' → logprob: -7.942832946777344

Token 607: ' Star' (ID: 11307)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14440643787384033
    2. 'int' → logprob: -2.644406318664551
    3. 'tuple' → logprob: -3.269406318664551
    4. 'Star' → logprob: -3.769406318664551
    5. 'None' → logprob: -7.019406318664551
    6. 'set' → logprob: -7.394406318664551
    7. 'Point' → logprob: -8.14440631866455
    8. ' list' → logprob: -8.76940631866455
    9. '[list' → logprob: -9.01940631866455
    10. '(list' → logprob: -9.64440631866455

Token 608: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -4.60414821645827e-06
    2. '   ' → logprob: -13.000004768371582
    3. 'Point' → logprob: -14.625004768371582
    4. '       ' → logprob: -15.000004768371582
    5. '[' → logprob: -15.000004768371582
    6. '_pattern' → logprob: -15.125004768371582
    7. ' Pattern' → logprob: -15.250004768371582
    8. 'pattern' → logprob: -15.375004768371582
    9. '.Pattern' → logprob: -15.500004768371582
    10. '_PATTERN' → logprob: -16.500003814697266

Token 609: ' |' (ID: 1022)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25884678959846497
    2. ':' → logprob: -2.6338467597961426
    3. '       ' → logprob: -3.1338467597961426
    4. ':
' → logprob: -3.7588467597961426
    5. '   ' → logprob: -4.133846759796143
    6. '<|end|>' → logprob: -4.258846759796143
    7. '(' → logprob: -4.383846759796143
    8. 'self' → logprob: -4.758846759796143
    9. '(
' → logprob: -4.883846759796143
    10. ',' → logprob: -5.633846759796143

Token 610: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.700132997939363e-05
    2. ' None' → logprob: -11.000017166137695
    3. 'list' → logprob: -15.625017166137695
    4. 'Vector' → logprob: -17.500017166137695
    5. '   ' → logprob: -18.125017166137695
    6. '_None' → logprob: -18.625017166137695
    7. '(None' → logprob: -18.750017166137695
    8. 'none' → logprob: -18.750017166137695
    9. 'bool' → logprob: -19.000017166137695
    10. 'type' → logprob: -19.000017166137695

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2178441435098648
    2. ':
' → logprob: -1.7178441286087036
    3. '       ' → logprob: -4.342844009399414
    4. '   ' → logprob: -7.092844009399414
    5. '():
' → logprob: -7.217844009399414
    6. '(self' → logprob: -7.717844009399414
    7. '):
' → logprob: -7.967844009399414
    8. '<|end|>' → logprob: -8.217844009399414
    9. '():' → logprob: -9.217844009399414
    10. ',' → logprob: -9.467844009399414

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007569838315248489
    2. '```' → logprob: -5.257569789886475
    3. 'try' → logprob: -6.507569789886475
    4. ' try' → logprob: -7.257569789886475
    5. 'tokens' → logprob: -10.382570266723633
    6. ' line' → logprob: -10.757570266723633
    7. '   ' → logprob: -11.007570266723633
    8. '``' → logprob: -11.257570266723633
    9. ',' → logprob: -11.757570266723633
    10. '	try' → logprob: -12.007570266723633

Token 613: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.5511156916618347
    2. 'line' → logprob: -1.1761157512664795
    3. 'n' → logprob: -2.5511157512664795
    4. '       ' → logprob: -3.6761157512664795
    5. 'size' → logprob: -5.4261155128479
    6. ' try' → logprob: -6.1761155128479
    7. ' line' → logprob: -6.9261155128479
    8. ' n' → logprob: -6.9261155128479
    9. 'length' → logprob: -7.0511155128479
    10. 'while' → logprob: -7.1761155128479

Token 614: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2259363830089569
    2. ':
' → logprob: -1.6009364128112793
    3. '           ' → logprob: -8.350935935974121
    4. '       ' → logprob: -8.725935935974121
    5. '):
' → logprob: -10.350935935974121
    6. '{' → logprob: -10.850935935974121
    7. ':
' → logprob: -11.475935935974121
    8. '<|end|>' → logprob: -11.600935935974121
    9. 'input' → logprob: -11.975935935974121
    10. '	       ' → logprob: -12.350935935974121

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027301300317049026
    2. ' line' → logprob: -4.90230131149292
    3. 'line' → logprob: -5.02730131149292
    4. 'count' → logprob: -5.27730131149292
    5. 'n' → logprob: -5.65230131149292
    6. '   ' → logprob: -6.77730131149292
    7. '       ' → logprob: -7.02730131149292
    8. ' n' → logprob: -7.15230131149292
    9. 'row' → logprob: -8.277300834655762
    10. ' count' → logprob: -8.277300834655762

Token 616: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40361034870147705
    2. 'line' → logprob: -1.403610348701477
    3. 'count' → logprob: -3.4036102294921875
    4. '           ' → logprob: -3.6536102294921875
    5. 'size' → logprob: -4.1536102294921875
    6. 'num' → logprob: -5.1536102294921875
    7. ' n' → logprob: -6.1536102294921875
    8. 'lines' → logprob: -6.2786102294921875
    9. 'length' → logprob: -6.7786102294921875
    10. ' line' → logprob: -8.653610229492188

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1830211579799652
    2. '=' → logprob: -1.8080211877822876
    3. '=int' → logprob: -5.808021068572998
    4. '=line' → logprob: -9.558021545410156
    5. '   ' → logprob: -9.808021545410156
    6. '_line' → logprob: -10.183021545410156
    7. ',' → logprob: -11.183021545410156
    8. 'e' → logprob: -11.433021545410156
    9. '_lines' → logprob: -11.558021545410156
    10. 's' → logprob: -11.558021545410156

Token 618: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00011927806917810813
    2. ' int' → logprob: -9.25011920928955
    3. 'next' → logprob: -10.75011920928955
    4. '   ' → logprob: -13.37511920928955
    5. ' next' → logprob: -17.250120162963867
    6. '[int' → logprob: -18.125120162963867
    7. '       ' → logprob: -18.750120162963867
    8. '  ' → logprob: -18.750120162963867
    9. ' ' → logprob: -18.875120162963867
    10. '(int' → logprob: -19.375120162963867

Token 619: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.632542913896032e-05
    2. 'next' → logprob: -10.000046730041504
    3. '(' → logprob: -14.625046730041504
    4. '(input' → logprob: -15.250046730041504
    5. ' next' → logprob: -16.750045776367188
    6. '[next' → logprob: -18.875045776367188
    7. '
' → logprob: -18.875045776367188
    8. '(
' → logprob: -19.000045776367188
    9. '(await' → logprob: -19.250045776367188
    10. '	next' → logprob: -19.500045776367188

Token 620: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20165462791919708
    2. 'input' → logprob: -1.7016546726226807
    3. ' input' → logprob: -8.451654434204102
    4. '(' → logprob: -11.076654434204102
    5. ')' → logprob: -12.076654434204102
    6. '=input' → logprob: -13.201654434204102
    7. ' (' → logprob: -13.451654434204102
    8. '(
' → logprob: -13.701654434204102
    9. '<input' → logprob: -14.201654434204102
    10. ',input' → logprob: -14.451654434204102

Token 621: '_iter' (ID: 27043)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0028582511004060507
    2. '(' → logprob: -6.3778581619262695
    3. 'input' → logprob: -7.3778581619262695
    4. '(
' → logprob: -8.25285816192627
    5. ')' → logprob: -9.25285816192627
    6. '_token' → logprob: -9.62785816192627
    7. ' (' → logprob: -11.00285816192627
    8. 'token' → logprob: -11.12785816192627
    9. '=input' → logprob: -11.12785816192627
    10. '(_' → logprob: -11.37785816192627

Token 622: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.44229117035865784
    2. ')' → logprob: -1.6922911405563354
    3. '))' → logprob: -1.9422911405563354
    4. '())' → logprob: -3.567291259765625
    5. '()' → logprob: -7.317291259765625
    6. '(' → logprob: -7.942291259765625
    7. ').' → logprob: -8.567291259765625
    8. '()).' → logprob: -8.817291259765625
    9. '()))
' → logprob: -8.942291259765625
    10. ' ' → logprob: -9.692291259765625

Token 623: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8803967237472534
    2. '<|end|>' → logprob: -1.7553967237472534
    3. '       ' → logprob: -1.8803967237472534
    4. ')' → logprob: -2.130396842956543
    5. '            
' → logprob: -2.755396842956543
    6. '\n' → logprob: -4.505396842956543
    7. '
' → logprob: -4.630396842956543
    8. '               ' → logprob: -5.380396842956543
    9. '<|end|>' → logprob: -5.380396842956543
    10. '.' → logprob: -5.505396842956543

Token 624: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8454053401947021
    2. 'except' (adapté à ' except') → logprob: -1.4704053401947021
    3. '<|end|>' → logprob: -1.8454053401947021
    4. '           ' → logprob: -1.9704053401947021
    5. ' except' → logprob: -4.220405578613281
    6. '.' → logprob: -4.970405578613281
    7. '<|end|>' → logprob: -5.095405578613281
    8. '#' → logprob: -5.095405578613281
    9. '	except' → logprob: -6.345405578613281
    10. '        ' → logprob: -6.595405578613281

Token 625: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.0024219141341745853
    2. '(' → logprob: -6.502421855926514
    3. ' Stop' → logprob: -7.002421855926514
    4. 'Value' → logprob: -12.252422332763672
    5. ' (' → logprob: -13.502422332763672
    6. '(Value' → logprob: -13.627422332763672
    7. '_Stop' → logprob: -14.252422332763672
    8. '(Exception' → logprob: -14.502422332763672
    9. '(stop' → logprob: -14.877422332763672
    10. '_stop' → logprob: -15.002422332763672

Token 626: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -6.704273118884885e-07
    2. 'Iterator' → logprob: -14.500000953674316
    3. 'iteration' → logprob: -17.0
    4. 'Async' → logprob: -17.125
    5. ' iteration' → logprob: -17.5
    6. 'Iter' → logprob: -18.25
    7. '_iteration' → logprob: -19.875
    8. 'Error' → logprob: -21.375
    9. 'Token' → logprob: -22.0
    10. 'Traversal' → logprob: -22.125

Token 627: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03450256213545799
    2. ':
' → logprob: -3.4095025062561035
    3. ':return' → logprob: -7.6595025062561035
    4. '           ' → logprob: -8.159502983093262
    5. ' or' → logprob: -10.409502983093262
    6. '   ' → logprob: -10.409502983093262
    7. '       ' → logprob: -11.409502983093262
    8. ' :' → logprob: -12.784502983093262
    9. ' as' → logprob: -12.909502983093262
    10. '):' → logprob: -13.159502983093262

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.955703818472102e-05
    2. '       ' → logprob: -10.375059127807617
    3. 'return' → logprob: -11.250059127807617
    4. '   ' → logprob: -11.750059127807617
    5. '               ' → logprob: -12.875059127807617
    6. ' return' → logprob: -13.250059127807617
    7. '		' → logprob: -13.875059127807617
    8. '	       ' → logprob: -14.125059127807617
    9. '          ' → logprob: -15.500059127807617
    10. ':return' → logprob: -15.500059127807617

Token 629: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005665206350386143
    2. '           ' → logprob: -5.255665302276611
    3. ' return' → logprob: -7.755665302276611
    4. '	return' → logprob: -13.630664825439453
    5. '   ' → logprob: -14.130664825439453
    6. '       ' → logprob: -15.005664825439453
    7. ':return' → logprob: -15.130664825439453
    8. '
' → logprob: -15.380664825439453
    9. '{return' → logprob: -15.505664825439453
    10. '               ' → logprob: -16.755664825439453

Token 630: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '
' → logprob: -19.750123977661133
    4. '_None' → logprob: -21.250123977661133
    5. ',None' → logprob: -21.375123977661133
    6. 'none' → logprob: -21.375123977661133
    7. '=None' → logprob: -22.000123977661133
    8. '(None' → logprob: -22.000123977661133
    9. '   ' → logprob: -22.875123977661133
    10. '_none' → logprob: -24.125123977661133

Token 631: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04641931131482124
    2. '   ' → logprob: -4.796419143676758
    3. '	' → logprob: -4.921419143676758
    4. '        
' → logprob: -5.046419143676758
    5. '
' → logprob: -5.171419143676758
    6. '    
' → logprob: -5.796419143676758
    7. '<|end|>' → logprob: -5.921419143676758
    8. 'newline' → logprob: -6.421419143676758
    9. '' → logprob: -6.671419143676758
    10. '  
' → logprob: -6.671419143676758

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036834771162830293
    2. 'if' → logprob: -9.250368118286133
    3. '        
' → logprob: -9.625368118286133
    4. ' if' → logprob: -10.250368118286133
    5. '
' → logprob: -10.500368118286133
    6. '   ' → logprob: -10.500368118286133
    7. '	' → logprob: -10.750368118286133
    8. 'star' → logprob: -10.875368118286133
    9. '           ' → logprob: -11.000368118286133
    10. 'stars' → logprob: -11.125368118286133

Token 633: ' if' (ID: 538)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' → logprob: -0.8142576813697815
    2. 'if' (adapté à ' if') → logprob: -1.0642576217651367
    3. '       ' → logprob: -1.5642576217651367
    4. ' if' → logprob: -6.314257621765137
    5. 'points' → logprob: -7.189257621765137
    6. ' stars' → logprob: -8.564257621765137
    7. '	if' → logprob: -11.064257621765137
    8. 'star' → logprob: -11.314257621765137
    9. '   ' → logprob: -12.064257621765137
    10. '        
' → logprob: -12.439257621765137

Token 634: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04858771339058876
    2. ' m' → logprob: -3.0485877990722656
    3. ' not' → logprob: -16.173587799072266
    4. 'not' → logprob: -16.298587799072266
    5. '	m' → logprob: -16.673587799072266
    6. '   ' → logprob: -16.923587799072266
    7. ' ' → logprob: -17.298587799072266
    8. ' ' → logprob: -18.173587799072266
    9. '(m' → logprob: -18.798587799072266
    10. '    ' → logprob: -19.048587799072266

Token 635: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10358560085296631
    2. '==' → logprob: -2.353585720062256
    3. ' <=' → logprob: -5.853585720062256
    4. '<=' → logprob: -7.603585720062256
    5. ' <' → logprob: -12.478585243225098
    6. '   ' → logprob: -14.728585243225098
    7. '<' → logprob: -15.228585243225098
    8. '=' → logprob: -15.353585243225098
    9. '===' → logprob: -16.103586196899414
    10. ' ' → logprob: -16.228586196899414

Token 636: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.000015258789062
    4. '    ' → logprob: -19.000015258789062
    5. '  ' → logprob: -19.500015258789062
    6. '-' → logprob: -19.750015258789062
    7. '1' → logprob: -19.750015258789062
    8. '```' → logprob: -20.875015258789062
    9. '       ' → logprob: -21.000015258789062
    10. '00' → logprob: -21.500015258789062

Token 637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -15.87501049041748
    4. '   ' → logprob: -18.375009536743164
    5. ' -' → logprob: -19.000009536743164
    6. '  ' → logprob: -19.625009536743164
    7. '    ' → logprob: -19.875009536743164
    8. '1' → logprob: -20.625009536743164
    9. '۰' → logprob: -20.625009536743164
    10. '00' → logprob: -21.250009536743164

Token 638: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4748283922672272
    2. ':
' → logprob: -0.9748283624649048
    3. ':return' → logprob: -7.224828243255615
    4. '<|end|>' → logprob: -11.099828720092773
    5. ' or' → logprob: -12.974828720092773
    6. ':
' → logprob: -13.599828720092773
    7. ':

' → logprob: -14.224828720092773
    8. ',' → logprob: -14.724828720092773
    9. 'return' → logprob: -14.724828720092773
    10. '):
' → logprob: -14.724828720092773

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012517772847786546
    2. '       ' → logprob: -6.751251697540283
    3. ' return' → logprob: -11.126252174377441
    4. '   ' → logprob: -11.251252174377441
    5. 'return' → logprob: -11.376252174377441
    6. ':' → logprob: -11.876252174377441
    7. '		' → logprob: -12.001252174377441
    8. '          ' → logprob: -12.001252174377441
    9. '               ' → logprob: -12.501252174377441
    10. ',' → logprob: -12.501252174377441

Token 640: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012649978743866086
    2. '           ' → logprob: -7.251265048980713
    3. ' return' → logprob: -7.501265048980713
    4. 'None' → logprob: -13.126264572143555
    5. '	return' → logprob: -15.876264572143555
    6. '   ' → logprob: -16.251264572143555
    7. '
' → logprob: -16.501264572143555
    8. '       ' → logprob: -17.126264572143555
    9. '{return' → logprob: -17.376264572143555
    10. ':return' → logprob: -17.751264572143555

Token 641: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009114635176956654
    2. ' None' → logprob: -7.000911235809326
    3. '_None' → logprob: -18.375911712646484
    4. 'none' → logprob: -19.375911712646484
    5. '=None' → logprob: -20.625911712646484
    6. 'null' → logprob: -20.875911712646484
    7. ',None' → logprob: -21.125911712646484
    8. '(None' → logprob: -21.125911712646484
    9. ' ' → logprob: -21.250911712646484
    10. '  ' → logprob: -22.125911712646484

Token 642: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011418843641877174
    2. '	' → logprob: -8.251141548156738
    3. '        
' → logprob: -8.626141548156738
    4. '<|end|>' → logprob: -8.626141548156738
    5. '
' → logprob: -8.876141548156738
    6. '   ' → logprob: -9.501141548156738
    7. 'stars' → logprob: -9.876141548156738
    8. ' stars' → logprob: -10.501141548156738
    9. ',' → logprob: -10.751141548156738
    10. 'star' → logprob: -11.126141548156738

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003572269342839718
    2. 'stars' → logprob: -6.003572463989258
    3. '   ' → logprob: -7.378572463989258
    4. 'points' → logprob: -8.628572463989258
    5. ' stars' → logprob: -9.378572463989258
    6. '        
' → logprob: -9.503572463989258
    7. '
' → logprob: -9.628572463989258
    8. 'star' → logprob: -11.253572463989258
    9. '           ' → logprob: -11.503572463989258
    10. '```' → logprob: -11.878572463989258

Token 644: ' stars' (ID: 13701)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16110475361347198
    2. 'stars' (adapté à ' stars') → logprob: -1.9111047983169556
    3. ' stars' → logprob: -7.286104679107666
    4. 'points' → logprob: -9.161105155944824
    5. '   ' → logprob: -9.911105155944824
    6. '```' → logprob: -10.911105155944824
    7. 'star' → logprob: -12.036105155944824
    8. '        
' → logprob: -12.286105155944824
    9. '           ' → logprob: -12.536105155944824
    10. '	' → logprob: -13.286105155944824

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. ':' → logprob: -15.15475082397461
    4. '=[]' → logprob: -15.40475082397461
    5. '.=' → logprob: -18.27975082397461
    6. '=[]
' → logprob: -19.02975082397461
    7. '   ' → logprob: -19.65475082397461
    8. ' ' → logprob: -19.77975082397461
    9. ':=' → logprob: -20.02975082397461
    10. '.' → logprob: -20.15475082397461

Token 646: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019719254225492477
    2. ' [' → logprob: -4.769719123840332
    3. '[]' → logprob: -5.019719123840332
    4. '[]
' → logprob: -5.519719123840332
    5. '[next' → logprob: -9.644719123840332
    6. '[str' → logprob: -9.894719123840332
    7. '[new' → logprob: -10.144719123840332
    8. '[self' → logprob: -10.269719123840332
    9. '[m' → logprob: -10.519719123840332
    10. '[start' → logprob: -10.644719123840332

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020711561664938927
    2. ' for' → logprob: -6.377071380615234
    3. 'for' → logprob: -8.377071380615234
    4. '<|end|>' → logprob: -10.002071380615234
    5. '	' → logprob: -10.127071380615234
    6. '   ' → logprob: -10.377071380615234
    7. '	for' → logprob: -11.252071380615234
    8. '	   ' → logprob: -12.377071380615234
    9. '
' → logprob: -14.127071380615234
    10. '           ' → logprob: -14.252071380615234

Token 648: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6076160073280334
    2. 'for' (adapté à ' for') → logprob: -0.8576160073280334
    3. ' for' → logprob: -3.4826159477233887
    4. '	for' → logprob: -7.982615947723389
    5. '   ' → logprob: -9.232616424560547
    6. '	   ' → logprob: -11.857616424560547
    7. '	' → logprob: -12.357616424560547
    8. '
' → logprob: -14.107616424560547
    9. ' ' → logprob: -14.482616424560547
    10. '```' → logprob: -14.982616424560547

Token 649: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.277553620748222e-05
    2. '_i' → logprob: -10.000062942504883
    3. '_in' → logprob: -12.000062942504883
    4. ' _' → logprob: -12.250062942504883
    5. '_index' → logprob: -13.750062942504883
    6. '_m' → logprob: -14.750062942504883
    7. '_j' → logprob: -15.000062942504883
    8. '_user' → logprob: -15.500062942504883
    9. '_is' → logprob: -15.750062942504883
    10. '_line' → logprob: -15.875062942504883

Token 650: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3306015716807451e-05
    2. 'in' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.37501335144043
    4. 'm' → logprob: -18.87501335144043
    5. '  ' → logprob: -19.12501335144043
    6. '	in' → logprob: -19.12501335144043
    7. 'input' → logprob: -19.37501335144043
    8. 'i' → logprob: -19.37501335144043
    9. 'range' → logprob: -20.00001335144043
    10. 'import' → logprob: -20.00001335144043

Token 651: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.3954463510308415e-05
    2. ' range' → logprob: -9.875054359436035
    3. 'input' → logprob: -13.125054359436035
    4. 'in' → logprob: -16.12505340576172
    5. '	range' → logprob: -16.25005340576172
    6. '(range' → logprob: -17.50005340576172
    7. 'rang' → logprob: -17.50005340576172
    8. 'r' → logprob: -17.62505340576172
    9. '   ' → logprob: -17.62505340576172
    10. '
' → logprob: -18.00005340576172

Token 652: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.320199877838604e-07
    2. 'm' → logprob: -15.25
    3. '(' → logprob: -16.625
    4. ' (' → logprob: -19.0
    5. ' m' → logprob: -20.125
    6. '	m' → logprob: -21.25
    7. '   ' → logprob: -22.625
    8. '(
' → logprob: -23.25
    9. '(M' → logprob: -23.625
    10. '[m' → logprob: -24.625

Token 653: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6340268850326538
    2. '):
' → logprob: -0.7590268850326538
    3. ':' → logprob: -7.509027004241943
    4. '):
' → logprob: -8.134026527404785
    5. ')' → logprob: -8.259026527404785
    6. ',' → logprob: -8.384026527404785
    7. ':
' → logprob: -10.134026527404785
    8. '       ' → logprob: -11.134026527404785
    9. ' ):' → logprob: -11.384026527404785
    10. ' ):
' → logprob: -11.384026527404785

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.47757811343763e-05
    2. '
' → logprob: -11.375044822692871
    3. '```' → logprob: -12.125044822692871
    4. '<|end|>' → logprob: -12.125044822692871
    5. '   ' → logprob: -12.875044822692871
    6. ',' → logprob: -12.875044822692871
    7. '            
' → logprob: -13.250044822692871
    8. 'x' → logprob: -13.375044822692871
    9. '               ' → logprob: -13.500044822692871
    10. '	       ' → logprob: -13.750044822692871

Token 655: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.04014410451054573
    2. ' x' → logprob: -3.540144205093384
    3. '           ' → logprob: -4.915143966674805
    4. 'line' → logprob: -5.915143966674805
    5. ' line' → logprob: -8.290143966674805
    6. 'coords' → logprob: -11.540143966674805
    7. 's' → logprob: -11.790143966674805
    8. 'xy' → logprob: -11.915143966674805
    9. '   ' → logprob: -11.915143966674805
    10. 'parts' → logprob: -12.290143966674805

Token 656: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022162729874253273
    2. '=' → logprob: -6.752216339111328
    3. ',y' → logprob: -7.502216339111328
    4. ' ,' → logprob: -8.002216339111328
    5. ' =' → logprob: -9.127216339111328
    6. ',x' → logprob: -11.002216339111328
    7. '<|end|>' → logprob: -12.002216339111328
    8. ',int' → logprob: -12.252216339111328
    9. ',s' → logprob: -12.752216339111328
    10. ',b' → logprob: -13.127216339111328

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4881940484046936
    2. '=' → logprob: -1.1131939888000488
    3. ' =' → logprob: -2.863193988800049
    4. ',x' → logprob: -7.863193988800049
    5. ' ,' → logprob: -8.613194465637207
    6. 'x' → logprob: -10.863194465637207
    7. '           ' → logprob: -10.988194465637207
    8. ')=' → logprob: -11.363194465637207
    9. '=line' → logprob: -11.988194465637207
    10. ' ' → logprob: -12.238194465637207

Token 658: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007613494526594877
    2. ' y' → logprob: -4.882613658905029
    3. ' ' → logprob: -12.757613182067871
    4. '<|end|>' → logprob: -13.632613182067871
    5. '=' → logprob: -14.007613182067871
    6. '	y' → logprob: -14.632613182067871
    7. ',y' → logprob: -14.882613182067871
    8. '_y' → logprob: -14.882613182067871
    9. '‘y' → logprob: -15.132613182067871
    10. ''y' → logprob: -15.257613182067871

Token 659: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.19908098876476288
    2. '=' → logprob: -2.0740809440612793
    3. ' =' → logprob: -3.5740809440612793
    4. '_' → logprob: -3.8240809440612793
    5. 'str' → logprob: -6.324080944061279
    6. '<|end|>' → logprob: -6.574080944061279
    7. '_token' → logprob: -7.699080944061279
    8. '_=' → logprob: -7.824080944061279
    9. ',' → logprob: -8.699081420898438
    10. 'token' → logprob: -8.824081420898438

Token 660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004620472434908152
    2. ' =' → logprob: -5.379620552062988
    3. ',' → logprob: -15.629620552062988
    4. ')=' → logprob: -17.379619598388672
    5. '=line' → logprob: -17.379619598388672
    6. '=

' → logprob: -17.879619598388672
    7. ')' → logprob: -18.129619598388672
    8. '=input' → logprob: -18.504619598388672
    9. ' ' → logprob: -18.754619598388672
    10. '＝' → logprob: -18.879619598388672

Token 661: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.005253918468952179
    2. ' next' → logprob: -5.255253791809082
    3. '(next' → logprob: -10.880253791809082
    4. '[next' → logprob: -13.755253791809082
    5. 'map' → logprob: -16.3802547454834
    6. ',next' → logprob: -16.6302547454834
    7. '   ' → logprob: -17.5052547454834
    8. '	next' → logprob: -17.5052547454834
    9. '_next' → logprob: -17.7552547454834
    10. '    ' → logprob: -18.1302547454834

Token 662: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04864538833498955
    2. 'input' → logprob: -3.048645496368408
    3. ' input' → logprob: -10.54864501953125
    4. '=input' → logprob: -10.92364501953125
    5. ',input' → logprob: -11.79864501953125
    6. '[input' → logprob: -12.79864501953125
    7. '<input' → logprob: -12.92364501953125
    8. '(' → logprob: -15.04864501953125
    9. ' (' → logprob: -15.79864501953125
    10. 's' → logprob: -15.79864501953125

Token 663: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -4.842555426876061e-06
    2. 'iter' → logprob: -12.875004768371582
    3. '(input' → logprob: -13.125004768371582
    4. '(iter' → logprob: -16.1250057220459
    5. 'Iter' → logprob: -16.5000057220459
    6. '_iters' → logprob: -17.3750057220459
    7. '	iter' → logprob: -17.7500057220459
    8. '_it' → logprob: -18.1250057220459
    9. 'input' → logprob: -18.7500057220459
    10. '_str' → logprob: -18.7500057220459

Token 664: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00012523093027994037
    2. ' ).' → logprob: -9.62512493133545
    3. '()).' → logprob: -10.12512493133545
    4. '().' → logprob: -11.25012493133545
    5. ')' → logprob: -12.50012493133545
    6. '   ' → logprob: -14.25012493133545
    7. '           ' → logprob: -14.62512493133545
    8. '       ' → logprob: -14.87512493133545
    9. '()' → logprob: -15.25012493133545
    10. '').' → logprob: -15.87512493133545

Token 665: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003177952254191041
    2. 'strip' → logprob: -5.753178119659424
    3. ' split' → logprob: -15.503177642822266
    4. '.split' → logprob: -20.253177642822266
    5. 'rstrip' → logprob: -20.628177642822266
    6. 'spl' → logprob: -21.003177642822266
    7. ' strip' → logprob: -21.878177642822266
    8. '_split' → logprob: -22.378177642822266
    9. '(split' → logprob: -22.753177642822266
    10. '.strip' → logprob: -23.003177642822266

Token 666: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -10.875032424926758
    3. '('' → logprob: -11.750032424926758
    4. '()
' → logprob: -12.875032424926758
    5. '()>' → logprob: -14.625032424926758
    6. '()='' → logprob: -14.625032424926758
    7. '())' → logprob: -15.000032424926758
    8. '()=>' → logprob: -15.250032424926758
    9. '();' → logprob: -15.625032424926758
    10. '()]' → logprob: -15.750032424926758

Token 667: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004730822052806616
    2. ',' → logprob: -6.504730701446533
    3. '       ' → logprob: -6.754730701446533
    4. '<|end|>' → logprob: -7.254730701446533
    5. '		' → logprob: -8.004731178283691
    6. '	       ' → logprob: -8.254731178283691
    7. '               ' → logprob: -9.004731178283691
    8. '            
' → logprob: -9.254731178283691
    9. '          ' → logprob: -9.504731178283691
    10. 'x' → logprob: -9.504731178283691

Token 668: ' stars' (ID: 13701)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12132889032363892
    2. ' x' → logprob: -2.621328830718994
    3. '           ' → logprob: -3.246328830718994
    4. '       ' → logprob: -6.246328830718994
    5. '   ' → logprob: -7.996328830718994
    6. ' stars' → logprob: -8.121329307556152
    7. 'stars' (adapté à ' stars') → logprob: -10.121329307556152
    8. '	x' → logprob: -11.621329307556152
    9. ' ' → logprob: -11.871329307556152
    10. '  ' → logprob: -13.496329307556152

Token 669: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026503115077503026
    2. '.' → logprob: -8.250265121459961
    3. 'append' → logprob: -13.375265121459961
    4. ' .' → logprob: -14.000265121459961
    5. '.app' → logprob: -14.375265121459961
    6. '.ap' → logprob: -14.875265121459961
    7. '=' → logprob: -15.625265121459961
    8. '.extend' → logprob: -15.875265121459961
    9. '.Append' → logprob: -17.37526512145996
    10. '.=' → logprob: -17.75026512145996

Token 670: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -4.961759259458631e-06
    2. 'Point' → logprob: -12.250004768371582
    3. ' Point' → logprob: -15.750004768371582
    4. '	Point' → logprob: -18.1250057220459
    5. '(' → logprob: -20.2500057220459
    6. '<Point' → logprob: -22.2500057220459
    7. '(
' → logprob: -22.6250057220459
    8. '   ' → logprob: -22.6250057220459
    9. '.Point' → logprob: -22.8750057220459
    10. '_Point' → logprob: -23.8750057220459

Token 671: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003365350130479783
    2. 'int' → logprob: -8.000336647033691
    3. '(' → logprob: -14.125336647033691
    4. '   ' → logprob: -16.375335693359375
    5. '[int' → logprob: -16.375335693359375
    6. ' int' → logprob: -16.500335693359375
    7. ' (' → logprob: -17.125335693359375
    8. '=int' → logprob: -17.750335693359375
    9. '<int' → logprob: -18.375335693359375
    10. '	int' → logprob: -18.625335693359375

Token 672: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004989201202988625
    2. '(' → logprob: -5.504989147186279
    3. 'x' → logprob: -7.004989147186279
    4. '(
' → logprob: -13.254989624023438
    5. ' (' → logprob: -14.254989624023438
    6. ')x' → logprob: -15.254989624023438
    7. ' x' → logprob: -15.754989624023438
    8. ')' → logprob: -16.254989624023438
    9. '(int' → logprob: -17.754989624023438
    10. '(
' → logprob: -17.754989624023438

Token 673: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.09696558862924576
    2. '(x' → logprob: -2.9719655513763428
    3. 'x' → logprob: -3.2219655513763428
    4. 'str' → logprob: -6.971965789794922
    5. '_x' → logprob: -9.096965789794922
    6. ' x' → logprob: -9.971965789794922
    7. '   ' → logprob: -10.346965789794922
    8. '(' → logprob: -10.596965789794922
    9. ')' → logprob: -10.846965789794922
    10. 's' → logprob: -10.971965789794922

Token 674: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16038435697555542
    2. '),' → logprob: -1.9103844165802002
    3. ',int' → logprob: -8.910384178161621
    4. ' ,' → logprob: -11.785384178161621
    5. ',),' → logprob: -12.535384178161621
    6. 'int' → logprob: -12.910384178161621
    7. '>,' → logprob: -13.160384178161621
    8. '   ' → logprob: -13.410384178161621
    9. '[int' → logprob: -13.535384178161621
    10. '),(' → logprob: -13.910384178161621

Token 675: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. ' int' → logprob: -10.250035285949707
    3. '(int' → logprob: -16.250036239624023
    4. '[int' → logprob: -18.875036239624023
    5. '           ' → logprob: -19.375036239624023
    6. '	int' → logprob: -19.625036239624023
    7. '=int' → logprob: -19.750036239624023
    8. '   ' → logprob: -19.750036239624023
    9. '<int' → logprob: -20.000036239624023
    10. 'y' → logprob: -20.875036239624023

Token 676: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.10026480257511139
    2. 'y' → logprob: -2.35026478767395
    3. '(' → logprob: -10.350264549255371
    4. ' y' → logprob: -10.725264549255371
    5. '(int' → logprob: -13.600264549255371
    6. ')' → logprob: -14.100264549255371
    7. ' (' → logprob: -14.225264549255371
    8. ')y' → logprob: -15.225264549255371
    9. '	y' → logprob: -15.350264549255371
    10. '   ' → logprob: -15.725264549255371

Token 677: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.157039049663581e-05
    2. 'str' → logprob: -10.500051498413086
    3. 'y' → logprob: -11.250051498413086
    4. '))' → logprob: -11.875051498413086
    5. ')))' → logprob: -13.375051498413086
    6. 's' → logprob: -14.375051498413086
    7. 'Str' → logprob: -15.000051498413086
    8. ')' → logprob: -15.250051498413086
    9. '(y' → logprob: -15.250051498413086
    10. 'f' → logprob: -15.250051498413086

Token 678: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0005648265941999853
    2. ')))
' → logprob: -8.125564575195312
    3. '))' → logprob: -8.250564575195312
    4. ')' → logprob: -12.750564575195312
    5. '))))' → logprob: -13.875564575195312
    6. '')))' → logprob: -14.000564575195312
    7. '),' → logprob: -14.125564575195312
    8. ')))

' → logprob: -14.375564575195312
    9. ')));' → logprob: -14.375564575195312
    10. ' ' → logprob: -14.875564575195312

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.480199954239652e-05
    2. 'return' → logprob: -10.375064849853516
    3. '<|end|>' → logprob: -11.250064849853516
    4. ' return' → logprob: -11.375064849853516
    5. '   ' → logprob: -12.500064849853516
    6. '```' → logprob: -13.625064849853516
    7. '           ' → logprob: -13.750064849853516
    8. '	' → logprob: -13.875064849853516
    9. '      ' → logprob: -14.250064849853516
    10. '
' → logprob: -14.625064849853516

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023686813190579414
    2. '       ' → logprob: -3.7736868858337402
    3. 'pattern' → logprob: -7.89868688583374
    4. ' return' → logprob: -9.773686408996582
    5. 'self' → logprob: -11.648686408996582
    6. '   ' → logprob: -13.648686408996582
    7. '```' → logprob: -13.773686408996582
    8. '
' → logprob: -14.023686408996582
    9. '	return' → logprob: -14.648686408996582
    10. 'star' → logprob: -15.398686408996582

Token 681: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -0.0485873706638813
    2. ' Star' → logprob: -3.0485873222351074
    3. '   ' → logprob: -17.423587799072266
    4. 'Stars' → logprob: -19.298587799072266
    5. 'star' → logprob: -19.423587799072266
    6. '       ' → logprob: -19.423587799072266
    7. '_star' → logprob: -19.798587799072266
    8. ' ' → logprob: -20.173587799072266
    9. '  ' → logprob: -20.548587799072266
    10. 'St' → logprob: -20.923587799072266

Token 682: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -9.088346359931165e-07
    2. 'P' → logprob: -14.750000953674316
    3. 'Pat' → logprob: -15.500000953674316
    4. 'Point' → logprob: -15.750000953674316
    5. 'pattern' → logprob: -16.75
    6. 'Pa' → logprob: -17.875
    7. ' Pattern' → logprob: -19.875
    8. 'Patterns' → logprob: -20.0
    9. 'Part' → logprob: -20.375
    10. '[' → logprob: -20.375

Token 683: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0086322957649827
    2. 'stars' → logprob: -4.758632183074951
    3. 'st' → logprob: -12.25863265991211
    4. '(points' → logprob: -12.25863265991211
    5. 'Stars' → logprob: -13.50863265991211
    6. ' stars' → logprob: -13.75863265991211
    7. 'def' → logprob: -13.75863265991211
    8. '(' → logprob: -13.75863265991211
    9. '(s' → logprob: -14.25863265991211
    10. 's' → logprob: -14.63363265991211

Token 684: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -1.5332478142227046e-05
    2. 'ar' → logprob: -11.875015258789062
    3. 'stars' → logprob: -12.375015258789062
    4. '[' → logprob: -14.375015258789062
    5. 'arts' → logprob: -14.375015258789062
    6. 'rs' → logprob: -14.750015258789062
    7. '(st' → logprob: -15.000015258789062
    8. '#' → logprob: -15.000015258789062
    9. '(' → logprob: -15.000015258789062
    10. '*' → logprob: -15.875015258789062

Token 685: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021784115233458579
    2. '<|end|>' → logprob: -8.50021743774414
    3. '   ' → logprob: -11.75021743774414
    4. ')
' → logprob: -12.75021743774414
    5. '<|end|>' → logprob: -13.37521743774414
    6. '       ' → logprob: -14.62521743774414
    7. '}' → logprob: -15.37521743774414
    8. ' )' → logprob: -15.37521743774414
    9. ')return' → logprob: -15.87521743774414
    10. '```' → logprob: -16.25021743774414

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.498953253030777
    2. 'def' → logprob: -0.9989532232284546
    3. '<|end|>' → logprob: -4.248953342437744
    4. '```' → logprob: -4.873953342437744
    5. ' def' → logprob: -6.373953342437744
    6. '	def' → logprob: -7.873953342437744
    7. '
' → logprob: -8.498952865600586
    8. 'class' → logprob: -8.998952865600586
    9. ' ' → logprob: -9.998952865600586
    10. '<|end|>' → logprob: -10.373952865600586

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015129582025110722
    2. '   ' → logprob: -6.5015130043029785
    3. ' def' → logprob: -11.50151252746582
    4. '	def' → logprob: -14.87651252746582
    5. '```' → logprob: -15.62651252746582
    6. '
' → logprob: -17.37651252746582
    7. '<|end|>' → logprob: -18.00151252746582
    8. '  ' → logprob: -18.00151252746582
    9. 'class' → logprob: -18.37651252746582
    10. '    
' → logprob: -18.37651252746582

Token 688: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.48189234733581543
    2. 'detect' → logprob: -1.1068923473358154
    3. 'find' → logprob: -3.3568923473358154
    4. 'search' → logprob: -4.9818925857543945
    5. 'def' → logprob: -5.3568925857543945
    6. 'process' → logprob: -5.8568925857543945
    7. 'run' → logprob: -6.6068925857543945
    8. 'scan' → logprob: -7.9818925857543945
    9. ' read' → logprob: -8.606892585754395
    10. 'check' → logprob: -8.731892585754395

Token 689: '_star' (ID: 78943)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.13884484767913818
    2. '_input' → logprob: -2.8888449668884277
    3. '_star' → logprob: -3.2638449668884277
    4. '_pattern' → logprob: -4.763844966888428
    5. '_points' → logprob: -5.513844966888428
    6. '_ob' → logprob: -5.763844966888428
    7. '_patterns' → logprob: -5.888844966888428
    8. '_st' → logprob: -5.888844966888428
    9. '_scan' → logprob: -6.138844966888428
    10. '_search' → logprob: -6.263844966888428

Token 690: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.031896427273750305
    2. 's' → logprob: -3.7818963527679443
    3. 'map' → logprob: -4.781896591186523
    4. 'field' → logprob: -9.531896591186523
    5. 'Map' → logprob: -10.031896591186523
    6. '_positions' → logprob: -10.156896591186523
    7. '_field' → logprob: -10.156896591186523
    8. '_points' → logprob: -11.281896591186523
    9. 'positions' → logprob: -11.906896591186523
    10. ' map' → logprob: -12.406896591186523

Token 691: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.50001335144043
    3. 'self' → logprob: -13.50001335144043
    4. '   ' → logprob: -13.62501335144043
    5. '(
' → logprob: -16.25001335144043
    6. ' (' → logprob: -16.25001335144043
    7. 'def' → logprob: -16.50001335144043
    8. '       ' → logprob: -18.00001335144043
    9. '=self' → logprob: -18.75001335144043
    10. '[self' → logprob: -19.00001335144043

Token 692: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.034592388459714e-06
    2. 'self' → logprob: -12.625005722045898
    3. '(' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '       ' → logprob: -14.875005722045898
    6. ' (' → logprob: -15.125005722045898
    7. 'def' → logprob: -16.8750057220459
    8. ',' → logprob: -17.1250057220459
    9. '(
' → logprob: -17.1250057220459
    10. ')' → logprob: -17.8750057220459

Token 693: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04361996054649353
    2. ' input' → logprob: -3.1686198711395264
    3. 'self' → logprob: -7.4186201095581055
    4. ' self' → logprob: -11.043620109558105
    5. '   ' → logprob: -13.043620109558105
    6. '       ' → logprob: -13.293620109558105
    7. ' ' → logprob: -16.16861915588379
    8. '	input' → logprob: -16.16861915588379
    9. 'Input' → logprob: -16.41861915588379
    10. 'output' → logprob: -16.79361915588379

Token 694: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -3.1782583391759545e-05
    2. 'iter' → logprob: -10.750031471252441
    3. '_iterator' → logprob: -11.625031471252441
    4. '(iter' → logprob: -15.000031471252441
    5. ')' → logprob: -15.500031471252441
    6. 'iterator' → logprob: -15.750031471252441
    7. 'Iter' → logprob: -15.750031471252441
    8. '	iter' → logprob: -15.875031471252441
    9. '_iters' → logprob: -16.125032424926758
    10. '_itr' → logprob: -16.500032424926758

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2734481394290924
    2. ',' → logprob: -1.52344810962677
    3. '(self' → logprob: -4.5234479904174805
    4. 'self' → logprob: -4.8984479904174805
    5. '       ' → logprob: -6.3984479904174805
    6. '   ' → logprob: -6.7734479904174805
    7. ' self' → logprob: -9.64844799041748
    8. '):
' → logprob: -9.89844799041748
    9. '):' → logprob: -11.77344799041748
    10. ',self' → logprob: -11.77344799041748

Token 696: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005558401811867952
    2. '       ' → logprob: -5.630558490753174
    3. 'self' → logprob: -6.505558490753174
    4. ')' → logprob: -8.630558013916016
    5. '   ' → logprob: -8.755558013916016
    6. 'def' → logprob: -10.005558013916016
    7. ' (' → logprob: -11.130558013916016
    8. ' self' → logprob: -11.255558013916016
    9. '(' → logprob: -11.380558013916016
    10. '
' → logprob: -11.755558013916016

Token 697: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -0.020662758499383926
    2. 'list' → logprob: -3.895662784576416
    3. ' Star' → logprob: -9.645662307739258
    4. 'tuple' → logprob: -10.270662307739258
    5. 'None' → logprob: -11.645662307739258
    6. ' list' → logprob: -11.895662307739258
    7. '   ' → logprob: -13.270662307739258
    8. 'dict' → logprob: -14.270662307739258
    9. 'List' → logprob: -14.395662307739258
    10. ' ' → logprob: -14.520662307739258

Token 698: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -0.0076118288561701775
    2. 'Pattern' → logprob: -4.8826117515563965
    3. 'map' → logprob: -13.007612228393555
    4. 'pattern' → logprob: -13.882612228393555
    5. '[' → logprob: -14.382612228393555
    6. '_map' → logprob: -14.382612228393555
    7. 'List' → logprob: -14.882612228393555
    8. '[]' → logprob: -15.132612228393555
    9. '   ' → logprob: -15.882612228393555
    10. 'MAP' → logprob: -16.257612228393555

Token 699: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3951064944267273
    2. '       ' → logprob: -1.145106554031372
    3. '(' → logprob: -5.270106315612793
    4. 'self' → logprob: -6.520106315612793
    5. '   ' → logprob: -6.645106315612793
    6. '(
' → logprob: -9.770106315612793
    7. ' (' → logprob: -9.770106315612793
    8. ':' → logprob: -9.895106315612793
    9. ':
' → logprob: -10.395106315612793
    10. 'def' → logprob: -11.020106315612793

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006996880983933806
    2. 'n' → logprob: -8.000699996948242
    3. 'm' → logprob: -8.625699996948242
    4. '   ' → logprob: -9.500699996948242
    5. '```' → logprob: -9.625699996948242
    6. 'def' → logprob: -11.000699996948242
    7. 'self' → logprob: -11.500699996948242
    8. '           ' → logprob: -12.000699996948242
    9. '	' → logprob: -13.250699996948242
    10. '#' → logprob: -13.625699996948242

Token 701: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02204171195626259
    2. 'try' → logprob: -4.0220417976379395
    3. '       ' → logprob: -5.8970417976379395
    4. 'm' → logprob: -7.3970417976379395
    5. 'k' → logprob: -7.8970417976379395
    6. '   ' → logprob: -9.772041320800781
    7. ' n' → logprob: -10.147041320800781
    8. 'num' → logprob: -11.022041320800781
    9. ' try' → logprob: -11.772041320800781
    10. 'count' → logprob: -11.772041320800781

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193771719932556
    2. '=' → logprob: -1.501937747001648
    3. '   ' → logprob: -12.001937866210938
    4. '=int' → logprob: -13.001937866210938
    5. ' ' → logprob: -16.001937866210938
    6. '    ' → logprob: -16.626937866210938
    7. '       ' → logprob: -16.876937866210938
    8. '	' → logprob: -17.376937866210938
    9. '  ' → logprob: -17.501937866210938
    10. ' ' → logprob: -19.376937866210938

Token 703: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.688212614681106e-05
    2. ' int' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. '  ' → logprob: -20.625017166137695
    5. '       ' → logprob: -20.625017166137695
    6. ' ' → logprob: -21.000017166137695
    7. '    ' → logprob: -21.250017166137695
    8. '[int' → logprob: -21.875017166137695
    9. '	int' → logprob: -22.750017166137695
    10. '
' → logprob: -22.750017166137695

Token 704: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00033546582562848926
    2. 'next' → logprob: -8.000335693359375
    3. ' next' → logprob: -17.625335693359375
    4. '[next' → logprob: -18.250335693359375
    5. '.next' → logprob: -20.250335693359375
    6. '	next' → logprob: -20.625335693359375
    7. 'Next' → logprob: -21.250335693359375
    8. '(' → logprob: -21.375335693359375
    9. '_next' → logprob: -21.875335693359375
    10. ',next' → logprob: -22.375335693359375

Token 705: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016098834748845547
    2. 'input' → logprob: -8.750161170959473
    3. '(' → logprob: -13.875161170959473
    4. ',input' → logprob: -14.000161170959473
    5. '=input' → logprob: -15.125161170959473
    6. '[input' → logprob: -15.500161170959473
    7. ' input' → logprob: -15.625161170959473
    8. '<input' → logprob: -17.000160217285156
    9. '
' → logprob: -17.125160217285156
    10. '(output' → logprob: -17.500160217285156

Token 706: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -2.1888679839321412e-05
    2. 'iter' → logprob: -10.750021934509277
    3. '(iter' → logprob: -15.500021934509277
    4. 'Iter' → logprob: -16.37502098083496
    5. '_it' → logprob: -17.62502098083496
    6. ' iter' → logprob: -17.87502098083496
    7. '	iter' → logprob: -18.25002098083496
    8. '_iters' → logprob: -19.00002098083496
    9. '(input' → logprob: -19.25002098083496
    10. '_inter' → logprob: -19.62502098083496

Token 707: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2616659700870514
    2. '())' → logprob: -2.2616660594940186
    3. '())
' → logprob: -2.5116660594940186
    4. ')
' → logprob: -3.1366660594940186
    5. '))' → logprob: -6.7616658210754395
    6. '))
' → logprob: -8.886666297912598
    7. '()' → logprob: -9.636666297912598
    8. '())
' → logprob: -10.011666297912598
    9. ')
' → logprob: -10.261666297912598
    10. ' ())' → logprob: -11.511666297912598

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01663481444120407
    2. 'stars' → logprob: -4.141634941101074
    3. ' stars' → logprob: -7.766634941101074
    4. '   ' → logprob: -9.141634941101074
    5. '	' → logprob: -10.141634941101074
    6. '<|end|>' → logprob: -11.516634941101074
    7. '	st' → logprob: -12.266634941101074
    8. '	   ' → logprob: -12.391634941101074
    9. 'if' → logprob: -13.016634941101074
    10. 'star' → logprob: -13.266634941101074

Token 709: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' (adapté à ' stars') → logprob: -0.004085524007678032
    2. '       ' → logprob: -5.504085540771484
    3. ' stars' → logprob: -12.379085540771484
    4. 'points' → logprob: -14.254085540771484
    5. 'starts' → logprob: -14.379085540771484
    6. 'star' → logprob: -14.504085540771484
    7. '   ' → logprob: -14.754085540771484
    8. '        
' → logprob: -15.379085540771484
    9. '	' → logprob: -16.254085540771484
    10. 's' → logprob: -16.254085540771484

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858953505754471
    2. ' =' → logprob: -3.0485894680023193
    3. '=[]' → logprob: -13.298589706420898
    4. '=[]
' → logprob: -14.923589706420898
    5. '   ' → logprob: -17.2985897064209
    6. '.' → logprob: -17.4235897064209
    7. '=
' → logprob: -17.5485897064209
    8. '.clear' → logprob: -17.7985897064209
    9. ':' → logprob: -17.7985897064209
    10. '.=' → logprob: -18.2985897064209

Token 711: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.6695392727851868
    2. '[' → logprob: -0.9195392727851868
    3. '[]' → logprob: -2.419539213180542
    4. '[
' → logprob: -8.169539451599121
    5. ' [' → logprob: -10.044539451599121
    6. ' []' → logprob: -11.419539451599121
    7. ' []
' → logprob: -11.669539451599121
    8. '[]

' → logprob: -11.919539451599121
    9. '[List' → logprob: -12.044539451599121
    10. '[next' → logprob: -12.544539451599121

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00390967633575201
    2. 'for' → logprob: -6.128909587860107
    3. ' for' → logprob: -6.378909587860107
    4. '   ' → logprob: -11.128910064697266
    5. '	for' → logprob: -12.253910064697266
    6. '	' → logprob: -12.503910064697266
    7. '<|end|>' → logprob: -13.378910064697266
    8. '	   ' → logprob: -13.878910064697266
    9. '           ' → logprob: -15.253910064697266
    10. ' ' → logprob: -16.128910064697266

Token 713: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003637097543105483
    2. '       ' → logprob: -8.50036334991455
    3. ' for' → logprob: -8.75036334991455
    4. '	for' → logprob: -13.37536334991455
    5. '   ' → logprob: -15.37536334991455
    6. '
' → logprob: -17.875364303588867
    7. '	' → logprob: -18.875364303588867
    8. '           ' → logprob: -20.250364303588867
    9. '	   ' → logprob: -20.750364303588867
    10. '```' → logprob: -21.125364303588867

Token 714: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.500000953674316
    3. '_in' → logprob: -15.625000953674316
    4. '_i' → logprob: -17.25
    5. '_range' → logprob: -17.375
    6. '_=' → logprob: -18.0
    7. '_
' → logprob: -18.125
    8. '_

' → logprob: -18.75
    9. '_n' → logprob: -19.25
    10. '_
' → logprob: -19.25

Token 715: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019007037917617708
    2. ' in' → logprob: -8.625189781188965
    3. ' _' → logprob: -12.500189781188965
    4. 'in' → logprob: -12.750189781188965
    5. '_range' → logprob: -13.250189781188965
    6. '_
' → logprob: -13.875189781188965
    7. 'range' → logprob: -15.125189781188965
    8. ' range' → logprob: -15.125189781188965
    9. '_in' → logprob: -15.250189781188965
    10. '   ' → logprob: -16.62519073486328

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007743386086076498
    2. ' range' → logprob: -5.0077433586120605
    3. '_' → logprob: -7.0077433586120605
    4. '_range' → logprob: -9.007743835449219
    5. '(range' → logprob: -15.757743835449219
    6. '	range' → logprob: -16.50774383544922
    7. ' _' → logprob: -18.75774383544922
    8. ' in' → logprob: -19.00774383544922
    9. '_n' → logprob: -19.25774383544922
    10. ' ' → logprob: -19.38274383544922

Token 717: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.52919222577475e-05
    2. 'n' → logprob: -9.500075340270996
    3. ' (' → logprob: -15.625075340270996
    4. '(' → logprob: -15.875075340270996
    5. ' n' → logprob: -16.50007438659668
    6. '   ' → logprob: -19.00007438659668
    7. '	n' → logprob: -19.75007438659668
    8. '       ' → logprob: -20.12507438659668
    9. '_n' → logprob: -20.75007438659668
    10. 's' → logprob: -20.87507438659668

Token 718: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15112802386283875
    2. '           ' → logprob: -2.276128053665161
    3. '       ' → logprob: -3.776128053665161
    4. '):' → logprob: -5.276127815246582
    5. ':
' → logprob: -5.276127815246582
    6. ':' → logprob: -6.526127815246582
    7. '   ' → logprob: -6.526127815246582
    8. ',' → logprob: -7.401127815246582
    9. '):
' → logprob: -8.026127815246582
    10. ')' → logprob: -9.026127815246582

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018255416303873062
    2. ' x' → logprob: -4.518255233764648
    3. 'x' → logprob: -5.018255233764648
    4. '   ' → logprob: -7.643255233764648
    5. '       ' → logprob: -10.393255233764648
    6. '	       ' → logprob: -11.393255233764648
    7. '	   ' → logprob: -11.643255233764648
    8. '		' → logprob: -12.018255233764648
    9. '		   ' → logprob: -12.518255233764648
    10. '	x' → logprob: -12.643255233764648

Token 720: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0009142052149400115
    2. ' x' → logprob: -7.000914096832275
    3. '           ' → logprob: -13.500914573669434
    4. 'line' → logprob: -14.125914573669434
    5. '   ' → logprob: -15.500914573669434
    6. '	x' → logprob: -15.875914573669434
    7. ' line' → logprob: -16.000913619995117
    8. '       ' → logprob: -17.125913619995117
    9. ' ' → logprob: -17.125913619995117
    10. '(x' → logprob: -17.750913619995117

Token 721: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.692145012086257e-05
    2. 'str' → logprob: -10.500046730041504
    3. ',' → logprob: -11.625046730041504
    4. '_s' → logprob: -12.250046730041504
    5. '_,' → logprob: -12.500046730041504
    6. 's' → logprob: -14.125046730041504
    7. '_' → logprob: -14.250046730041504
    8. 'Str' → logprob: -16.37504768371582
    9. '_string' → logprob: -16.62504768371582
    10. '<|end|>' → logprob: -16.62504768371582

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ',y' → logprob: -12.250006675720215
    3. ' ,' → logprob: -13.500006675720215
    4. '<|end|>' → logprob: -16.8750057220459
    5. '‌,' → logprob: -17.1250057220459
    6. ',
' → logprob: -17.1250057220459
    7. ',x' → logprob: -17.8750057220459
    8. 'y' → logprob: -18.2500057220459
    9. ',user' → logprob: -19.1250057220459
    10. 'x' → logprob: -19.6250057220459

Token 723: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04881025105714798
    2. 'y' → logprob: -3.0488102436065674
    3. ',' → logprob: -8.423810005187988
    4. ',y' → logprob: -13.048810005187988
    5. ' ' → logprob: -14.673810005187988
    6. ' ,' → logprob: -15.298810005187988
    7. ' ' → logprob: -16.423810958862305
    8. '`' → logprob: -16.798810958862305
    9. 'n' → logprob: -16.923810958862305
    10. '    ' → logprob: -17.173810958862305

Token 724: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38809826970100403
    2. '_str' → logprob: -1.1380982398986816
    3. 'str' → logprob: -6.763098239898682
    4. '_,' → logprob: -9.76309871673584
    5. ' ,' → logprob: -12.13809871673584
    6. 's' → logprob: -13.26309871673584
    7. ',str' → logprob: -13.63809871673584
    8. 'Str' → logprob: -13.88809871673584
    9. ',_' → logprob: -14.01309871673584
    10. '_s' → logprob: -14.51309871673584

Token 725: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ',y' → logprob: -14.750000953674316
    3. ' ,' → logprob: -15.500000953674316
    4. '=' → logprob: -18.125
    5. '‌,' → logprob: -18.375
    6. '_,' → logprob: -18.75
    7. ',x' → logprob: -19.375
    8. 's' → logprob: -19.5
    9. '،' → logprob: -19.75
    10. ',next' → logprob: -19.875

Token 726: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01815064437687397
    2. ' next' → logprob: -4.018150806427002
    3. '(next' → logprob: -14.393150329589844
    4. '[next' → logprob: -16.393150329589844
    5. ',next' → logprob: -16.893150329589844
    6. '_next' → logprob: -17.518150329589844
    7. '	next' → logprob: -17.893150329589844
    8. '.next' → logprob: -18.018150329589844
    9. 'x' → logprob: -19.768150329589844
    10. 'Next' → logprob: -20.143150329589844

Token 727: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.644463479053229e-05
    2. 'input' → logprob: -10.000046730041504
    3. '[input' → logprob: -14.875046730041504
    4. '=input' → logprob: -15.000046730041504
    5. '<input' → logprob: -15.875046730041504
    6. ',input' → logprob: -16.000045776367188
    7. '(' → logprob: -16.625045776367188
    8. ' input' → logprob: -17.875045776367188
    9. '(
' → logprob: -18.375045776367188
    10. ' (' → logprob: -18.500045776367188

Token 728: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.04161686822772026
    2. 'input' → logprob: -3.541616916656494
    3. 'iter' → logprob: -4.666616916656494
    4. '(input' → logprob: -6.041616916656494
    5. ')' → logprob: -12.166616439819336
    6. ' input' → logprob: -13.291616439819336
    7. 'Iter' → logprob: -13.416616439819336
    8. '(iter' → logprob: -13.791616439819336
    9. '_str' → logprob: -14.416616439819336
    10. '<input' → logprob: -14.416616439819336

Token 729: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.21131077408790588
    2. '().' → logprob: -1.7113107442855835
    3. '.split' → logprob: -5.336310863494873
    4. ')' → logprob: -6.586310863494873
    5. '()' → logprob: -6.961310863494873
    6. '           ' → logprob: -7.211310863494873
    7. '   ' → logprob: -7.961310863494873
    8. '.' → logprob: -7.961310863494873
    9. '       ' → logprob: -8.336310386657715
    10. '()).' → logprob: -8.586310386657715

Token 730: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0564331205387134e-05
    2. 'strip' → logprob: -11.50001049041748
    3. ' split' → logprob: -14.75001049041748
    4. '.split' → logprob: -18.000011444091797
    5. '(split' → logprob: -22.000011444091797
    6. '_split' → logprob: -22.750011444091797
    7. 'rstrip' → logprob: -22.875011444091797
    8. '   ' → logprob: -23.375011444091797
    9. ' strip' → logprob: -24.375011444091797
    10. '
' → logprob: -24.875011444091797

Token 731: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29882684350013733
    2. '()
' → logprob: -1.673826813697815
    3. '()' → logprob: -2.6738269329071045
    4. ',' → logprob: -7.173826694488525
    5. '<|end|>' → logprob: -8.173827171325684
    6. '
' → logprob: -8.673827171325684
    7. '(),' → logprob: -8.923827171325684
    8. '       ' → logprob: -9.048827171325684
    9. '		' → logprob: -9.298827171325684
    10. '          ' → logprob: -10.548827171325684

Token 732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.6537622034084052e-05
    2. '       ' → logprob: -11.25002670288086
    3. '               ' → logprob: -12.50002670288086
    4. '   ' → logprob: -12.87502670288086
    5. '		' → logprob: -13.37502670288086
    6. ' stars' → logprob: -13.37502670288086
    7. 'stars' → logprob: -13.62502670288086
    8. '	       ' → logprob: -14.25002670288086
    9. '<|end|>' → logprob: -14.25002670288086
    10. ',' → logprob: -14.50002670288086

Token 733: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' (adapté à ' stars') → logprob: -0.0021470505744218826
    2. ' stars' → logprob: -6.252147197723389
    3. '           ' → logprob: -8.62714672088623
    4. '       ' → logprob: -10.37714672088623
    5. '   ' → logprob: -12.87714672088623
    6. 'points' → logprob: -13.12714672088623
    7. 'star' → logprob: -14.25214672088623
    8. '               ' → logprob: -14.37714672088623
    9. 'x' → logprob: -14.75214672088623
    10. '         ' → logprob: -15.37714672088623

Token 734: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002670575922820717
    2. '.' → logprob: -8.250267028808594
    3. ' .' → logprob: -12.625267028808594
    4. 'append' → logprob: -13.250267028808594
    5. '.app' → logprob: -15.375267028808594
    6. '           ' → logprob: -15.625267028808594
    7. '.Append' → logprob: -16.625267028808594
    8. ').' → logprob: -17.000267028808594
    9. '.
' → logprob: -17.125267028808594
    10. '.ap' → logprob: -17.375267028808594

Token 735: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.5759651064872742
    2. 'Point' → logprob: -0.8259651064872742
    3. ' Point' → logprob: -10.57596492767334
    4. '	Point' → logprob: -16.075965881347656
    5. '.Point' → logprob: -17.325965881347656
    6. '_Point' → logprob: -19.575965881347656
    7. '<Point' → logprob: -19.950965881347656
    8. '_point' → logprob: -20.075965881347656
    9. 'point' → logprob: -21.200965881347656
    10. '   ' → logprob: -21.950965881347656

Token 736: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014164102263748646
    2. 'int' → logprob: -4.264163970947266
    3. ' int' → logprob: -15.264163970947266
    4. '[int' → logprob: -15.889163970947266
    5. '=int' → logprob: -16.264163970947266
    6. '           ' → logprob: -16.764163970947266
    7. '   ' → logprob: -17.264163970947266
    8. '<int' → logprob: -17.639163970947266
    9. '(
' → logprob: -18.014163970947266
    10. '(' → logprob: -18.014163970947266

Token 737: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0052377874962985516
    2. 'x' → logprob: -5.255237579345703
    3. '(' → logprob: -12.630237579345703
    4. ' x' → logprob: -14.130237579345703
    5. ' (' → logprob: -17.005237579345703
    6. '(
' → logprob: -17.880237579345703
    7. ')x' → logprob: -18.755237579345703
    8. '```' → logprob: -19.005237579345703
    9. '
' → logprob: -19.380237579345703
    10. '`' → logprob: -19.380237579345703

Token 738: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.36574100604048e-06
    2. 'str' → logprob: -12.875004768371582
    3. 'x' → logprob: -13.625004768371582
    4. '(x' → logprob: -14.875004768371582
    5. '_x' → logprob: -16.125003814697266
    6. '```' → logprob: -16.750003814697266
    7. '_' → logprob: -18.000003814697266
    8. 'Str' → logprob: -18.375003814697266
    9. '_s' → logprob: -18.500003814697266
    10. '[' → logprob: -19.625003814697266

Token 739: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.723352049040841e-06
    2. ',' → logprob: -13.500004768371582
    3. ' ),' → logprob: -13.625004768371582
    4. '           ' → logprob: -14.500004768371582
    5. ')' → logprob: -14.875004768371582
    6. '),
' → logprob: -15.000004768371582
    7. '   ' → logprob: -15.250004768371582
    8. '       ' → logprob: -16.000003814697266
    9. '[' → logprob: -16.250003814697266
    10. 'int' → logprob: -16.500003814697266

Token 740: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.52919222577475e-05
    2. ' int' → logprob: -9.500075340270996
    3. '           ' → logprob: -15.500075340270996
    4. 'y' → logprob: -16.87507438659668
    5. '(int' → logprob: -17.50007438659668
    6. '   ' → logprob: -17.62507438659668
    7. '[int' → logprob: -18.37507438659668
    8. '          ' → logprob: -18.62507438659668
    9. '<int' → logprob: -19.37507438659668
    10. '               ' → logprob: -19.37507438659668

Token 741: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008645294234156609
    2. ' y' → logprob: -4.758645057678223
    3. 'x' → logprob: -11.133645057678223
    4. '(y' → logprob: -11.633645057678223
    5. '
' → logprob: -13.383645057678223
    6. '   ' → logprob: -13.883645057678223
    7. '           ' → logprob: -14.008645057678223
    8. ',' → logprob: -14.133645057678223
    9. ' ' → logprob: -14.883645057678223
    10. ')' → logprob: -15.008645057678223

Token 742: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.619311974034645e-05
    2. 'str' → logprob: -10.250036239624023
    3. '),' → logprob: -14.875036239624023
    4. ')' → logprob: -15.875036239624023
    5. '))' → logprob: -15.875036239624023
    6. 'Str' → logprob: -16.625036239624023
    7. ')),' → logprob: -17.625036239624023
    8. ')))' → logprob: -17.750036239624023
    9. '	str' → logprob: -17.875036239624023
    10. '
' → logprob: -18.125036239624023

Token 743: ')))
' (ID: 12562)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.25210049748420715
    2. ')))' → logprob: -1.5021004676818848
    3. ')))
' → logprob: -9.002100944519043
    4. ')' → logprob: -10.627100944519043
    5. '),
' → logprob: -12.127100944519043
    6. '))' → logprob: -12.377100944519043
    7. '           ' → logprob: -12.377100944519043
    8. ' ' → logprob: -13.127100944519043
    9. ' ),' → logprob: -13.127100944519043
    10. '       ' → logprob: -13.502100944519043

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07093023508787155
    2. 'return' → logprob: -2.695930242538452
    3. ' return' → logprob: -7.195930004119873
    4. '	' → logprob: -8.570930480957031
    5. '	return' → logprob: -10.570930480957031
    6. '<|end|>' → logprob: -11.945930480957031
    7. '
' → logprob: -12.070930480957031
    8. ')' → logprob: -12.320930480957031
    9. ')return' → logprob: -12.445930480957031
    10. ')
' → logprob: -13.320930480957031

Token 745: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10066714882850647
    2. '       ' → logprob: -2.3506672382354736
    3. ' return' → logprob: -7.7256669998168945
    4. '   ' → logprob: -11.600666999816895
    5. '	return' → logprob: -11.975666999816895
    6. '
' → logprob: -12.725666999816895
    7. '	' → logprob: -15.350666999816895
    8. '           ' → logprob: -16.10066795349121
    9. 'eturn' → logprob: -16.35066795349121
    10. ')return' → logprob: -17.22566795349121

Token 746: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -2.7610454708337784e-05
    2. ' Star' → logprob: -10.500027656555176
    3. 'Stars' → logprob: -20.00002670288086
    4. 'star' → logprob: -22.25002670288086
    5. '_star' → logprob: -22.87502670288086
    6. 'St' → logprob: -23.50002670288086
    7. 'STAR' → logprob: -24.00002670288086
    8. '-Star' → logprob: -24.87502670288086
    9. '   ' → logprob: -25.25002670288086
    10. 'Sta' → logprob: -27.00002670288086

Token 747: 'Map' (ID: 2307)
  Prédit: 'Map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Map' → logprob: -4.320199877838604e-07
    2. 'Star' → logprob: -14.875
    3. 'Pattern' → logprob: -17.25
    4. 'map' → logprob: -18.125
    5. 'Point' → logprob: -18.75
    6. '	Map' → logprob: -18.75
    7. '_map' → logprob: -18.875
    8. '_Map' → logprob: -18.875
    9. 'Maps' → logprob: -19.625
    10. ' Map' → logprob: -20.75

Token 748: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00020473242329899222
    2. 'stars' → logprob: -8.500205039978027
    3. '(points' → logprob: -14.000205039978027
    4. '```' → logprob: -16.62520408630371
    5. '(lines' → logprob: -16.75020408630371
    6. 'Stars' → logprob: -16.75020408630371
    7. ' (' → logprob: -16.87520408630371
    8. '(n' → logprob: -17.62520408630371
    9. '(
' → logprob: -17.75020408630371
    10. ' stars' → logprob: -17.75020408630371

Token 749: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -4.60414821645827e-06
    2. 'ar' → logprob: -12.375004768371582
    3. 'stars' → logprob: -15.625004768371582
    4. 'arts' → logprob: -17.500003814697266
    5. 's' → logprob: -17.875003814697266
    6. '(st' → logprob: -18.125003814697266
    7. '[' → logprob: -18.125003814697266
    8. '   ' → logprob: -19.250003814697266
    9. 'arst' → logprob: -19.250003814697266
    10. 'rs' → logprob: -19.500003814697266

Token 750: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012821101699955761
    2. '<|end|>' → logprob: -9.000127792358398
    3. '<|end|>' → logprob: -13.375127792358398
    4. ')
' → logprob: -13.500127792358398
    5. '   ' → logprob: -14.625127792358398
    6. ')return' → logprob: -15.250127792358398
    7. '}' → logprob: -15.500127792358398
    8. ')}' → logprob: -15.750127792358398
    9. ' )' → logprob: -16.1251277923584
    10. '       ' → logprob: -16.5001277923584

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.474475622177124
    2. 'def' → logprob: -0.974475622177124
    3. ' def' → logprob: -8.599475860595703
    4. '```' → logprob: -8.849475860595703
    5. '
' → logprob: -10.224475860595703
    6. '<|end|>' → logprob: -10.849475860595703
    7. '	def' → logprob: -11.724475860595703
    8. '  ' → logprob: -12.974475860595703
    9. ' ' → logprob: -13.224475860595703
    10. '<|end|>' → logprob: -14.224475860595703

Token 752: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1994775377388578e-05
    2. '   ' → logprob: -11.500012397766113
    3. ' def' → logprob: -13.250012397766113
    4. '	def' → logprob: -19.500011444091797
    5. '```' → logprob: -21.625011444091797
    6. 'from' → logprob: -22.625011444091797
    7. 'async' → logprob: -23.000011444091797
    8. '@' → logprob: -23.750011444091797
    9. 'import' → logprob: -23.875011444091797
    10. '
' → logprob: -24.000011444091797

Token 753: ' process' (ID: 2273)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.16833613812923431
    2. ' detect' → logprob: -2.1683361530303955
    3. 'process' → logprob: -3.6683361530303955
    4. ' process' → logprob: -4.543335914611816
    5. 'run' → logprob: -6.043335914611816
    6. 'read' → logprob: -7.043335914611816
    7. ' run' → logprob: -7.418335914611816
    8. 'find' → logprob: -8.668335914611816
    9. ' find' → logprob: -9.043335914611816
    10. 'search' → logprob: -9.418335914611816

Token 754: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28462687134742737
    2. '(self' → logprob: -1.409626841545105
    3. 'self' → logprob: -6.2846269607543945
    4. '_' → logprob: -7.7846269607543945
    5. '(
' → logprob: -7.7846269607543945
    6. '_(' → logprob: -8.534626960754395
    7. '   ' → logprob: -8.659626960754395
    8. 'pattern' → logprob: -8.909626960754395
    9. ' (' → logprob: -9.659626960754395
    10. '()' → logprob: -10.034626960754395

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022801498416811228
    2. 'self' → logprob: -6.877280235290527
    3. ',input' → logprob: -7.252280235290527
    4. ' ,' → logprob: -9.002280235290527
    5. '):
' → logprob: -9.377280235290527
    6. 'input' → logprob: -9.502280235290527
    7. '   ' → logprob: -9.627280235290527
    8. '):' → logprob: -9.877280235290527
    9. '(self' → logprob: -10.002280235290527
    10. '_,' → logprob: -10.752280235290527

Token 756: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03881627693772316
    2. 'self' → logprob: -3.413816213607788
    3. ' input' → logprob: -5.288816452026367
    4. ' self' → logprob: -9.163816452026367
    5. '   ' → logprob: -13.038816452026367
    6. ')' → logprob: -14.413816452026367
    7. 'lines' → logprob: -14.538816452026367
    8. 'Input' → logprob: -14.788816452026367
    9. '
' → logprob: -15.413816452026367
    10. '```' → logprob: -15.413816452026367

Token 757: '_lines' (ID: 42980)
  Prédit: '_iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.00018041854491457343
    2. '_' → logprob: -10.1251802444458
    3. '_iterator' → logprob: -10.5001802444458
    4. '):
' → logprob: -10.7501802444458
    5. 'iter' → logprob: -11.1251802444458
    6. '):' → logprob: -11.2501802444458
    7. '(self' → logprob: -11.2501802444458
    8. '   ' → logprob: -11.6251802444458
    9. '```' → logprob: -12.1251802444458
    10. 'self' → logprob: -12.2501802444458

Token 758: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7485600113868713
    2. 'self' → logprob: -1.1235599517822266
    3. '):
' → logprob: -2.3735599517822266
    4. '(self' → logprob: -2.8735599517822266
    5. '):' → logprob: -3.6235599517822266
    6. ',' → logprob: -3.9985599517822266
    7. ')' → logprob: -5.498559951782227
    8. '   ' → logprob: -5.998559951782227
    9. ' self' → logprob: -8.373559951782227
    10. '           ' → logprob: -9.748559951782227

Token 759: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20314978063106537
    2. ')' → logprob: -2.3281497955322266
    3. 'iter' → logprob: -2.9531497955322266
    4. 'list' → logprob: -3.5781497955322266
    5. ' self' → logprob: -5.953149795532227
    6. '):
' → logprob: -5.953149795532227
    7. ' iter' → logprob: -8.078149795532227
    8. 'iterator' → logprob: -8.578149795532227
    9. ' list' → logprob: -8.828149795532227
    10. ' iterable' → logprob: -9.328149795532227

Token 760: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.438573680294212e-06
    2. '[int' → logprob: -12.875005722045898
    3. ')' → logprob: -13.500005722045898
    4. '):
' → logprob: -13.625005722045898
    5. '[' → logprob: -15.500005722045898
    6. '[
' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.3750057220459
    8. 'str' → logprob: -19.0000057220459
    9. ':' → logprob: -19.3750057220459
    10. '):' → logprob: -19.3750057220459

Token 761: ']):
' (ID: 51989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023482821881771088
    2. '])' → logprob: -4.148482799530029
    3. '):
' → logprob: -5.023482799530029
    4. '   ' → logprob: -7.773482799530029
    5. '):' → logprob: -9.023483276367188
    6. ']):
' → logprob: -9.023483276367188
    7. '       ' → logprob: -9.148483276367188
    8. ' )' → logprob: -10.398483276367188
    9. '）' → logprob: -11.648483276367188
    10. '`)' → logprob: -12.148483276367188

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007544984575361013
    2. '   ' → logprob: -5.632544994354248
    3. 'input' → logprob: -5.632544994354248
    4. '	input' → logprob: -8.75754451751709
    5. '```' → logprob: -9.88254451751709
    6. ' input' → logprob: -10.25754451751709
    7. '        
' → logprob: -10.50754451751709
    8. '	   ' → logprob: -10.50754451751709
    9. '    ' → logprob: -11.63254451751709
    10. '	' → logprob: -11.75754451751709

Token 763: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.017434772104024887
    2. '       ' → logprob: -4.267434597015381
    3. ' input' → logprob: -5.767434597015381
    4. '   ' → logprob: -9.142435073852539
    5. '
' → logprob: -11.642435073852539
    6. '        
' → logprob: -12.392435073852539
    7. 'output' → logprob: -12.767435073852539
    8. 'def' → logprob: -12.767435073852539
    9. 'it' → logprob: -12.892435073852539
    10. 'line' → logprob: -13.017435073852539

Token 764: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.00018196819291915745
    2. '_iterator' → logprob: -9.250182151794434
    3. '_lines' → logprob: -9.500182151794434
    4. '_iters' → logprob: -12.625182151794434
    5. '_' → logprob: -13.000182151794434
    6. '_it' → logprob: -13.250182151794434
    7. '_itr' → logprob: -13.500182151794434
    8. '_idx' → logprob: -13.500182151794434
    9. 'iter' → logprob: -15.500182151794434
    10. 'Iter' → logprob: -16.000181198120117

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=
' → logprob: -15.389163970947266
    4. '=

' → logprob: -18.389163970947266
    5. '=line' → logprob: -18.514163970947266
    6. '   ' → logprob: -18.639163970947266
    7. '=}' → logprob: -19.389163970947266
    8. '_=' → logprob: -19.389163970947266
    9. '=input' → logprob: -19.514163970947266
    10. ' ' → logprob: -19.639163970947266

Token 766: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.00031746976310387254
    2. ' iter' → logprob: -8.750317573547363
    3. '(iter' → logprob: -8.750317573547363
    4. '   ' → logprob: -14.625317573547363
    5. '	iter' → logprob: -17.375316619873047
    6. '
' → logprob: -17.500316619873047
    7. ' ' → logprob: -18.625316619873047
    8. '       ' → logprob: -19.375316619873047
    9. '  ' → logprob: -19.500316619873047
    10. '           ' → logprob: -19.625316619873047

Token 767: '(line' (ID: 18178)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.596781946020201e-05
    2. 'input' → logprob: -10.000045776367188
    3. '(' → logprob: -14.625045776367188
    4. ',input' → logprob: -16.875045776367188
    5. '=input' → logprob: -18.250045776367188
    6. '(
' → logprob: -18.250045776367188
    7. '<input' → logprob: -18.875045776367188
    8. ' input' → logprob: -19.000045776367188
    9. '[input' → logprob: -19.250045776367188
    10. ' (' → logprob: -19.875045776367188

Token 768: '.strip' (ID: 40613)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009966674260795116
    2. ' for' → logprob: -5.134966850280762
    3. ')' → logprob: -6.259966850280762
    4. 'for' → logprob: -6.509966850280762
    5. ' in' → logprob: -8.634966850280762
    6. '(input' → logprob: -9.509966850280762
    7. ' s' → logprob: -9.759966850280762
    8. 'in' → logprob: -10.009966850280762
    9. 'input' → logprob: -10.009966850280762
    10. ' ' → logprob: -10.259966850280762

Token 769: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005045894533395767
    2. '())' → logprob: -5.6300458908081055
    3. ')' → logprob: -6.6300458908081055
    4. 'for' → logprob: -9.630045890808105
    5. '()
' → logprob: -10.380045890808105
    6. ' ()' → logprob: -11.505045890808105
    7. ' for' → logprob: -11.505045890808105
    8. '   ' → logprob: -13.505045890808105
    9. '(' → logprob: -13.755045890808105
    10. '())
' → logprob: -13.880045890808105

Token 770: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8375604152679443
    2. 'for' → logprob: -0.9625604152679443
    3. '()' → logprob: -1.7125604152679443
    4. ')' → logprob: -5.462560653686523
    5. ' ' → logprob: -7.962560653686523
    6. '   ' → logprob: -8.837560653686523
    7. ' ()' → logprob: -9.337560653686523
    8. ',' → logprob: -10.962560653686523
    9. '	for' → logprob: -10.962560653686523
    10. '
' → logprob: -11.087560653686523

Token 771: ' line' (ID: 2543)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6948834657669067
    2. 'line' → logprob: -1.1948834657669067
    3. ' line' → logprob: -2.194883346557617
    4. ' input' → logprob: -2.444883346557617
    5. '	line' → logprob: -11.819883346557617
    6. 'in' → logprob: -12.944883346557617
    7. '#line' → logprob: -13.069883346557617
    8. ' ' → logprob: -13.319883346557617
    9. '[line' → logprob: -13.819883346557617
    10. ' in' → logprob: -14.069883346557617

Token 772: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20145796239376068
    2. 'in' → logprob: -1.7014579772949219
    3. 'line' → logprob: -10.076457977294922
    4. ' line' → logprob: -13.326457977294922
    5. ' ' → logprob: -14.826457977294922
    6. 'input' → logprob: -15.326457977294922
    7. '	in' → logprob: -16.826457977294922
    8. 'import' → logprob: -16.951457977294922
    9. 'inp' → logprob: -17.201457977294922
    10. '<|end|>' → logprob: -17.451457977294922

Token 773: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. '   ' → logprob: -19.000911712646484
    4. '
' → logprob: -19.125911712646484
    5. '<input' → logprob: -19.750911712646484
    6. '(input' → logprob: -19.875911712646484
    7. ' ' → logprob: -20.250911712646484
    8. 'line' → logprob: -20.250911712646484
    9. '	input' → logprob: -20.500911712646484
    10. 'output' → logprob: -21.000911712646484

Token 774: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.836499985889532e-05
    2. 'lines' → logprob: -9.7500581741333
    3. 'Lines' → logprob: -17.750059127807617
    4. '_LINES' → logprob: -18.375059127807617
    5. '_iter' → logprob: -19.250059127807617
    6. '```' → logprob: -19.250059127807617
    7. '
' → logprob: -19.500059127807617
    8. '_strings' → logprob: -19.625059127807617
    9. ' lines' → logprob: -19.750059127807617
    10. '	lines' → logprob: -19.875059127807617

Token 775: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45130690932273865
    2. ')
' → logprob: -1.326306939125061
    3. '       ' → logprob: -2.3263068199157715
    4. '   ' → logprob: -10.45130729675293
    5. ')
' → logprob: -10.95130729675293
    6. ')

' → logprob: -12.07630729675293
    7. '):
' → logprob: -12.32630729675293
    8. '<|end|>' → logprob: -12.45130729675293
    9. '())
' → logprob: -12.45130729675293
    10. '
' → logprob: -12.70130729675293

Token 776: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006716079078614712
    2. ' line' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.881715774536133
    4. '   ' → logprob: -15.506715774536133
    5. 'len' → logprob: -16.131715774536133
    6. '
' → logprob: -17.256715774536133
    7. '	line' → logprob: -18.131715774536133
    8. '(line' → logprob: -18.381715774536133
    9. '  ' → logprob: -18.631715774536133
    10. '    ' → logprob: -20.006715774536133

Token 777: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013913962990045547
    2. '<|end|>' → logprob: -4.638914108276367
    3. '.strip' → logprob: -6.388914108276367
    4. '):' → logprob: -7.263914108276367
    5. ')>' → logprob: -7.388914108276367
    6. ')!=' → logprob: -8.013914108276367
    7. '<|end|>' → logprob: -8.388914108276367
    8. ' not' → logprob: -9.513914108276367
    9. '())' → logprob: -9.763914108276367
    10. 'not' → logprob: -10.013914108276367

Token 778: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037699127569794655
    2. '())' → logprob: -5.628769874572754
    3. ')
' → logprob: -10.003769874572754
    4. ' )' → logprob: -10.378769874572754
    5. '()' → logprob: -10.378769874572754
    6. '):' → logprob: -10.503769874572754
    7. '!=' → logprob: -10.878769874572754
    8. ' !=' → logprob: -12.253769874572754
    9. ' and' → logprob: -13.253769874572754
    10. '   ' → logprob: -13.503769874572754

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05749760568141937
    2. 'while' → logprob: -2.932497501373291
    3. ' while' → logprob: -6.182497501373291
    4. '   ' → logprob: -7.807497501373291
    5. '        
' → logprob: -9.80749797821045
    6. '```' → logprob: -10.18249797821045
    7. '	while' → logprob: -10.80749797821045
    8. '
' → logprob: -11.55749797821045
    9. 'next' → logprob: -12.55749797821045
    10. '           ' → logprob: -12.93249797821045

Token 780: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006744974292814732
    2. '       ' → logprob: -5.006744861602783
    3. ' while' → logprob: -10.506745338439941
    4. 'pattern' → logprob: -13.131745338439941
    5. '```' → logprob: -15.631745338439941
    6. '   ' → logprob: -16.756744384765625
    7. 'result' → logprob: -17.256744384765625
    8. '	while' → logprob: -17.256744384765625
    9. 'self' → logprob: -18.631744384765625
    10. 'While' → logprob: -18.631744384765625

Token 781: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0036899782717227936
    2. ' True' → logprob: -6.003689765930176
    3. '(True' → logprob: -6.753689765930176
    4. '   ' → logprob: -10.003689765930176
    5. 'pattern' → logprob: -13.753689765930176
    6. '       ' → logprob: -15.128689765930176
    7. 'true' → logprob: -15.253689765930176
    8. '
' → logprob: -16.253690719604492
    9. '(' → logprob: -16.878690719604492
    10. ' ' → logprob: -18.128690719604492

Token 782: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01820753514766693
    2. ':
' → logprob: -4.643207550048828
    3. '           ' → logprob: -4.893207550048828
    4. '       ' → logprob: -7.768207550048828
    5. '<|end|>' → logprob: -8.643207550048828
    6. '<|end|>' → logprob: -8.643207550048828
    7. ',' → logprob: -10.268207550048828
    8. '   ' → logprob: -11.518207550048828
    9. ' :' → logprob: -11.643207550048828
    10. ':

' → logprob: -11.893207550048828

Token 783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7796615362167358
    2. 'pattern' → logprob: -1.0296615362167358
    3. '       ' → logprob: -1.7796615362167358
    4. '   ' → logprob: -4.779661655426025
    5. ' pattern' → logprob: -5.154661655426025
    6. 'pat' → logprob: -6.904661655426025
    7. '	   ' → logprob: -8.904661178588867
    8. '```' → logprob: -9.654661178588867
    9. '    ' → logprob: -10.029661178588867
    10. '     ' → logprob: -10.529661178588867

Token 784: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' (adapté à ' pattern') → logprob: -0.00039468807517550886
    2. ' pattern' → logprob: -8.500394821166992
    3. '           ' → logprob: -8.625394821166992
    4. 'pat' → logprob: -11.375394821166992
    5. 'star' → logprob: -16.500394821166992
    6. 'patterns' → logprob: -17.250394821166992
    7. '   ' → logprob: -17.500394821166992
    8. '               ' → logprob: -17.625394821166992
    9. '```' → logprob: -17.750394821166992
    10. '(pattern' → logprob: -17.875394821166992

Token 785: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324908785521984
    2. '=' → logprob: -3.7732491493225098
    3. ' ' → logprob: -13.898248672485352
    4. ':' → logprob: -14.148248672485352
    5. '_pattern' → logprob: -14.148248672485352
    6. 'pattern' → logprob: -14.398248672485352
    7. ' :=' → logprob: -14.773248672485352
    8. ' =
' → logprob: -16.27324867248535
    9. '_' → logprob: -16.39824867248535
    10. ':=' → logprob: -17.14824867248535

Token 786: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015943869948387146
    2. ' self' → logprob: -8.75015926361084
    3. '           ' → logprob: -13.87515926361084
    4. '               ' → logprob: -19.125160217285156
    5. '       ' → logprob: -19.625160217285156
    6. '(self' → logprob: -20.000160217285156
    7. '   ' → logprob: -20.625160217285156
    8. '	self' → logprob: -21.625160217285156
    9. '          ' → logprob: -21.875160217285156
    10. '                   ' → logprob: -22.000160217285156

Token 787: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0009122979827225208
    2. 'read' → logprob: -7.000912189483643
    3. '.' → logprob: -14.1259126663208
    4. ' .' → logprob: -16.500911712646484
    5. ' read' → logprob: -17.375911712646484
    6. '.readline' → logprob: -18.375911712646484
    7. '	read' → logprob: -20.125911712646484
    8. '(read' → logprob: -21.500911712646484
    9. '_read' → logprob: -21.625911712646484
    10. '.Read' → logprob: -21.625911712646484

Token 788: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.002481246367096901
    2. 'pattern' → logprob: -6.002481460571289
    3. '_' → logprob: -13.377481460571289
    4. 'Pattern' → logprob: -13.627481460571289
    5. '(pattern' → logprob: -14.127481460571289
    6. ' pattern' → logprob: -14.627481460571289
    7. '_patterns' → logprob: -14.627481460571289
    8. '_p' → logprob: -15.002481460571289
    9. '_pat' → logprob: -15.252481460571289
    10. '(_' → logprob: -16.25248146057129

Token 789: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00021998681768309325
    2. '(' → logprob: -8.50022029876709
    3. '(next' → logprob: -11.62522029876709
    4. '(
' → logprob: -13.00022029876709
    5. ' (' → logprob: -13.50022029876709
    6. '()' → logprob: -13.62522029876709
    7. '(token' → logprob: -14.37522029876709
    8. 'input' → logprob: -14.75022029876709
    9. '(output' → logprob: -15.37522029876709
    10. '<|end|>' → logprob: -15.37522029876709

Token 790: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -4.320199877838604e-07
    2. 'iter' → logprob: -15.0
    3. 'Iter' → logprob: -19.0
    4. '	iter' → logprob: -19.875
    5. '_iters' → logprob: -19.875
    6. '_itr' → logprob: -20.625
    7. '(iter' → logprob: -20.75
    8. '_it' → logprob: -20.875
    9. ' iter' → logprob: -21.125
    10. '_iterator' → logprob: -22.0

Token 791: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10022274404764175
    2. ')' → logprob: -2.3502228260040283
    3. ')
' → logprob: -11.72522258758545
    4. '           ' → logprob: -12.97522258758545
    5. '):
' → logprob: -12.97522258758545
    6. '       ' → logprob: -13.22522258758545
    7. ' )
' → logprob: -14.72522258758545
    8. ')

' → logprob: -15.22522258758545
    9. '())
' → logprob: -15.60022258758545
    10. ')`
' → logprob: -15.60022258758545

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006702631362713873
    2. '       ' → logprob: -7.500670433044434
    3. '<|end|>' → logprob: -10.125670433044434
    4. '   ' → logprob: -10.250670433044434
    5. ' if' → logprob: -10.875670433044434
    6. 'if' → logprob: -11.625670433044434
    7. '```' → logprob: -12.125670433044434
    8. '               ' → logprob: -13.125670433044434
    9. '<|end|>' → logprob: -13.500670433044434
    10. ' ' → logprob: -14.000670433044434

Token 793: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06436001509428024
    2. '           ' → logprob: -2.8143599033355713
    3. ' if' → logprob: -6.06436014175415
    4. '       ' → logprob: -10.189359664916992
    5. '   ' → logprob: -10.564359664916992
    6. '	if' → logprob: -13.689359664916992
    7. '		' → logprob: -15.189359664916992
    8. '               ' → logprob: -15.939359664916992
    9. '	   ' → logprob: -16.064359664916992
    10. '          ' → logprob: -16.939359664916992

Token 794: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.4740801155567169
    2. 'pattern' → logprob: -0.9740800857543945
    3. ' not' → logprob: -12.849080085754395
    4. 'not' → logprob: -15.099080085754395
    5. '   ' → logprob: -16.34908103942871
    6. ' ' → logprob: -16.59908103942871
    7. 'pat' → logprob: -16.72408103942871
    8. '(pattern' → logprob: -16.84908103942871
    9. ' patterns' → logprob: -19.22408103942871
    10. '    ' → logprob: -19.34908103942871

Token 795: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31326186656951904
    2. 'is' → logprob: -1.313261866569519
    3. '	is' → logprob: -16.188261032104492
    4. ' ' → logprob: -16.938261032104492
    5. '<|end|>' → logprob: -17.563261032104492
    6. 'in' → logprob: -17.688261032104492
    7. ')' → logprob: -17.938261032104492
    8. ' ' → logprob: -18.063261032104492
    9. '==' → logprob: -18.313261032104492
    10. ')is' → logprob: -18.313261032104492

Token 796: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078997299075127
    2. ' None' → logprob: -5.5040788650512695
    3. '_None' → logprob: -14.50407886505127
    4. '=None' → logprob: -16.504079818725586
    5. '(None' → logprob: -18.129079818725586
    6. '   ' → logprob: -18.129079818725586
    7. '           ' → logprob: -18.379079818725586
    8. '_none' → logprob: -18.754079818725586
    9. ',None' → logprob: -19.254079818725586
    10. 'none' → logprob: -20.879079818725586

Token 797: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.936762809753418
    2. ':
' → logprob: -1.436762809753418
    3. ':' → logprob: -1.686762809753418
    4. '           ' → logprob: -1.686762809753418
    5. '                   ' → logprob: -10.061762809753418
    6. ' or' → logprob: -10.186762809753418
    7. '       ' → logprob: -10.561762809753418
    8. '                       ' → logprob: -10.936762809753418
    9. ',' → logprob: -11.186762809753418
    10. '):
' → logprob: -11.936762809753418

Token 798: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5760895609855652
    2. '               ' → logprob: -0.8260895609855652
    3. '       ' → logprob: -9.826089859008789
    4. '                   ' → logprob: -10.826089859008789
    5. '   ' → logprob: -11.076089859008789
    6. '	           ' → logprob: -11.076089859008789
    7. '		' → logprob: -11.201089859008789
    8. '	       ' → logprob: -12.076089859008789
    9. '                       ' → logprob: -12.076089859008789
    10. '			' → logprob: -12.576089859008789

Token 799: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6706600785255432
    2. '               ' → logprob: -1.4206600189208984
    3. 'break' (adapté à ' break') → logprob: -1.4206600189208984
    4. '                   ' → logprob: -5.795660018920898
    5. ' break' → logprob: -6.670660018920898
    6. '	break' → logprob: -7.045660018920898
    7. 'return' → logprob: -9.170660018920898
    8. '   ' → logprob: -9.420660018920898
    9. '	           ' → logprob: -9.670660018920898
    10. '		' → logprob: -10.420660018920898

Token 800: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025761611759662628
    2. '
' → logprob: -3.775761604309082
    3. '            
' → logprob: -6.525761604309082
    4. '<|end|>' → logprob: -7.400761604309082
    5. '        
' → logprob: -9.150761604309082
    6. '       ' → logprob: -9.275761604309082
    7. '    
' → logprob: -9.900761604309082
    8. '<|end|>' → logprob: -10.025761604309082
    9. '          ' → logprob: -10.400761604309082
    10. '  
' → logprob: -10.775761604309082

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011550070717930794
    2. '       ' → logprob: -4.511549949645996
    3. 'star' → logprob: -8.136549949645996
    4. '   ' → logprob: -9.886549949645996
    5. '<|end|>' → logprob: -10.386549949645996
    6. '```' → logprob: -10.636549949645996
    7. '
' → logprob: -10.761549949645996
    8. '            
' → logprob: -10.886549949645996
    9. '        
' → logprob: -11.136549949645996
    10. ' star' → logprob: -11.261549949645996

Token 802: ' star' (ID: 8253)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'star' (adapté à ' star') → logprob: -0.00040290577453561127
    2. 'st' → logprob: -8.375402450561523
    3. 'map' → logprob: -10.250402450561523
    4. ' star' → logprob: -10.500402450561523
    5. 'stars' → logprob: -10.750402450561523
    6. '           ' → logprob: -11.000402450561523
    7. '       ' → logprob: -11.125402450561523
    8. 's' → logprob: -11.250402450561523
    9. '   ' → logprob: -11.375402450561523
    10. '
' → logprob: -12.375402450561523

Token 803: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0024855269584804773
    2. 'map' → logprob: -6.002485752105713
    3. 's' → logprob: -12.127485275268555
    4. 'Map' → logprob: -12.377485275268555
    5. ' map' → logprob: -16.252485275268555
    6. '_' → logprob: -17.627485275268555
    7. '_maps' → logprob: -18.002485275268555
    8. '   ' → logprob: -18.127485275268555
    9. '_mapping' → logprob: -19.252485275268555
    10. '_Map' → logprob: -19.502485275268555

Token 804: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251930296421051
    2. '=' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.751930236816406
    4. ' ' → logprob: -14.751930236816406
    5. ':' → logprob: -15.751930236816406
    6. 's' → logprob: -16.876930236816406
    7. 'self' → logprob: -17.001930236816406
    8. '=self' → logprob: -17.001930236816406
    9. '  ' → logprob: -17.251930236816406
    10. ')' → logprob: -17.626930236816406

Token 805: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.500075340270996
    3. '           ' → logprob: -15.875075340270996
    4. '       ' → logprob: -17.75007438659668
    5. '(self' → logprob: -17.75007438659668
    6. '[self' → logprob: -18.62507438659668
    7. 'Self' → logprob: -19.25007438659668
    8. 's' → logprob: -19.25007438659668
    9. '=self' → logprob: -19.50007438659668
    10. '	self' → logprob: -19.75007438659668

Token 806: '.read' (ID: 7211)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.002479581395164132
    2. '.read' → logprob: -6.002479553222656
    3. ' read' → logprob: -12.502479553222656
    4. '_read' → logprob: -17.252479553222656
    5. '.' → logprob: -17.377479553222656
    6. '	read' → logprob: -17.377479553222656
    7. '   ' → logprob: -17.502479553222656
    8. '
' → logprob: -18.002479553222656
    9. ' ' → logprob: -19.002479553222656
    10. 'Read' → logprob: -19.502479553222656

Token 807: '_star' (ID: 78943)
  Prédit: '_star'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_star' → logprob: -4.008129963040119e-06
    2. 'star' → logprob: -13.000003814697266
    3. '_pattern' → logprob: -13.750003814697266
    4. '_map' → logprob: -14.750003814697266
    5. '```' → logprob: -15.875003814697266
    6. 'pattern' → logprob: -16.250003814697266
    7. '
' → logprob: -17.625003814697266
    8. '_STAR' → logprob: -17.625003814697266
    9. 'Star' → logprob: -17.750003814697266
    10. '_st' → logprob: -18.375003814697266

Token 808: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00012976066500414163
    2. 'map' → logprob: -9.125129699707031
    3. '_iter' → logprob: -11.250129699707031
    4. 'Map' → logprob: -12.250129699707031
    5. 'iter' → logprob: -14.000129699707031
    6. 's' → logprob: -14.625129699707031
    7. '_maps' → logprob: -14.875129699707031
    8. ' map' → logprob: -15.625129699707031
    9. '_iterator' → logprob: -15.875129699707031
    10. '_' → logprob: -16.25012969970703

Token 809: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.723973582556937e-05
    2. '           ' → logprob: -11.875017166137695
    3. 'input' → logprob: -11.875017166137695
    4. '(' → logprob: -13.250017166137695
    5. '       ' → logprob: -14.500017166137695
    6. ',input' → logprob: -15.250017166137695
    7. ' (' → logprob: -15.500017166137695
    8. '[input' → logprob: -15.625017166137695
    9. '=input' → logprob: -16.000017166137695
    10. '   ' → logprob: -16.750017166137695

Token 810: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.10029950737953186
    2. 'iter' → logprob: -2.350299596786499
    3. 'er' → logprob: -9.850299835205078
    4. 'Iter' → logprob: -10.350299835205078
    5. ' iter' → logprob: -12.475299835205078
    6. '	iter' → logprob: -13.600299835205078
    7. 'it' → logprob: -14.225299835205078
    8. 'itor' → logprob: -14.350299835205078
    9. 'ter' → logprob: -14.475299835205078
    10. '   ' → logprob: -15.225299835205078

Token 811: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06622868031263351
    2. '           ' → logprob: -3.4412286281585693
    3. ')
' → logprob: -3.4412286281585693
    4. ')
' → logprob: -11.066228866577148
    5. '       ' → logprob: -11.441228866577148
    6. ')

' → logprob: -14.066228866577148
    7. '               ' → logprob: -14.191228866577148
    8. '()' → logprob: -14.691228866577148
    9. '          ' → logprob: -14.691228866577148
    10. '   ' → logprob: -14.941228866577148

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005870371125638485
    2. 'offset' → logprob: -5.630870342254639
    3. '       ' → logprob: -6.630870342254639
    4. 'result' → logprob: -7.130870342254639
    5. 'position' → logprob: -10.255870819091797
    6. '   ' → logprob: -10.880870819091797
    7. 'found' → logprob: -11.255870819091797
    8. ' offset' → logprob: -11.380870819091797
    9. '```' → logprob: -11.505870819091797
    10. 'vector' → logprob: -11.505870819091797

Token 813: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' (adapté à ' offset') → logprob: -0.002146335318684578
    2. '           ' → logprob: -6.627146244049072
    3. ' offset' → logprob: -7.627146244049072
    4. 'result' → logprob: -8.25214672088623
    5. 'vector' → logprob: -10.12714672088623
    6. 'found' → logprob: -11.37714672088623
    7. 'pattern' → logprob: -11.37714672088623
    8. '            
' → logprob: -13.00214672088623
    9. 'match' → logprob: -13.37714672088623
    10. 'off' → logprob: -14.00214672088623

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06199580803513527
    2. '=' → logprob: -2.8119957447052
    3. '_vector' → logprob: -10.686995506286621
    4. '_' → logprob: -13.186995506286621
    5. ' ' → logprob: -14.186995506286621
    6. '	' → logprob: -14.186995506286621
    7. 's' → logprob: -14.561995506286621
    8. '   ' → logprob: -14.936995506286621
    9. 'Vector' → logprob: -15.061995506286621
    10. '_=' → logprob: -15.811995506286621

Token 815: ' star' (ID: 8253)
  Prédit: 'star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'star' → logprob: -0.002812124788761139
    2. ' star' → logprob: -5.877811908721924
    3. '           ' → logprob: -12.002812385559082
    4. 'self' → logprob: -14.127812385559082
    5. 'stars' → logprob: -16.752811431884766
    6. '   ' → logprob: -17.002811431884766
    7. '星' → logprob: -17.002811431884766
    8. 'Star' → logprob: -17.002811431884766
    9. '       ' → logprob: -17.377811431884766
    10. '_star' → logprob: -17.377811431884766

Token 816: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0006669254507869482
    2. '_pattern' → logprob: -7.500667095184326
    3. 'Map' → logprob: -10.000666618347168
    4. '=' → logprob: -10.625666618347168
    5. '_offset' → logprob: -11.250666618347168
    6. 'pattern' → logprob: -11.375666618347168
    7. 'map' → logprob: -11.750666618347168
    8. 'offset' → logprob: -12.250666618347168
    9. '_vector' → logprob: -12.875666618347168
    10. '_' → logprob: -13.250666618347168

Token 817: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00031055594445206225
    2. '.' → logprob: -8.125310897827148
    3. '.findall' → logprob: -11.875310897827148
    4. 'find' → logprob: -12.125310897827148
    5. ' .' → logprob: -13.250310897827148
    6. '.
' → logprob: -16.25031089782715
    7. '=find' → logprob: -16.25031089782715
    8. '   ' → logprob: -16.50031089782715
    9. '	find' → logprob: -17.50031089782715
    10. '_find' → logprob: -17.62531089782715

Token 818: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -1.5213274309644476e-05
    2. 'pattern' → logprob: -11.125015258789062
    3. '_vector' → logprob: -15.875015258789062
    4. '
' → logprob: -16.375015258789062
    5. '```' → logprob: -16.500015258789062
    6. '_' → logprob: -17.500015258789062
    7. '_p' → logprob: -17.625015258789062
    8. ' pattern' → logprob: -18.375015258789062
    9. '_patterns' → logprob: -18.375015258789062
    10. '`' → logprob: -18.625015258789062

Token 819: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -9.014684110297821e-06
    2. 'offset' → logprob: -11.625008583068848
    3. 'Offset' → logprob: -17.250009536743164
    4. 'ffset' → logprob: -18.125009536743164
    5. ' offset' → logprob: -19.625009536743164
    6. '_pattern' → logprob: -19.625009536743164
    7. '_OFFSET' → logprob: -19.875009536743164
    8. '_
' → logprob: -20.125009536743164
    9. '
' → logprob: -20.750009536743164
    10. '__' → logprob: -20.875009536743164

Token 820: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -3.128163257315464e-07
    2. 'pattern' → logprob: -15.625
    3. ' (' → logprob: -16.125
    4. '(' → logprob: -16.875
    5. '(offset' → logprob: -17.625
    6. '(
' → logprob: -19.125
    7. '```' → logprob: -20.375
    8. '(part' → logprob: -20.625
    9. '(parameter' → logprob: -20.75
    10. '(p' → logprob: -21.125

Token 821: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20149704813957214
    2. ')' → logprob: -1.7014970779418945
    3. '           ' → logprob: -9.826497077941895
    4. ')
' → logprob: -10.826497077941895
    5. ' )
' → logprob: -13.076497077941895
    6. '())
' → logprob: -13.076497077941895
    7. '(' → logprob: -13.826497077941895
    8. ')

' → logprob: -13.826497077941895
    9. 'if' → logprob: -14.201497077941895
    10. '       ' → logprob: -14.201497077941895

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13179346919059753
    2. '       ' → logprob: -2.13179349899292
    3. 'if' → logprob: -5.38179349899292
    4. ' if' → logprob: -8.506793022155762
    5. 'self' → logprob: -10.631793022155762
    6. '   ' → logprob: -10.756793022155762
    7. '
' → logprob: -12.756793022155762
    8. '               ' → logprob: -13.381793022155762
    9. '		' → logprob: -14.256793022155762
    10. '```' → logprob: -14.506793022155762

Token 823: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06207411736249924
    2. 'self' (adapté à ' self') → logprob: -3.3120741844177246
    3. ' if' → logprob: -4.062074184417725
    4. '           ' → logprob: -5.062074184417725
    5. ' self' → logprob: -8.812073707580566
    6. '       ' → logprob: -9.937073707580566
    7. '   ' → logprob: -13.687073707580566
    8. '```' → logprob: -13.812073707580566
    9. 'print' → logprob: -14.937073707580566
    10. '	if' → logprob: -15.812073707580566

Token 824: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -1.1160349458805285e-05
    2. 'results' → logprob: -12.250011444091797
    3. ' .' → logprob: -12.625011444091797
    4. '.' → logprob: -13.125011444091797
    5. '
' → logprob: -14.625011444091797
    6. '	results' → logprob: -16.500011444091797
    7. '```' → logprob: -16.500011444091797
    8. '.responses' → logprob: -16.625011444091797
    9. '`.' → logprob: -16.750011444091797
    10. '.append' → logprob: -16.750011444091797

Token 825: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006720347795635462
    2. '.' → logprob: -5.006720542907715
    3. '.extend' → logprob: -12.381720542907715
    4. '.app' → logprob: -15.006720542907715
    5. 'append' → logprob: -16.1317195892334
    6. '.Append' → logprob: -16.2567195892334
    7. '.push' → logprob: -16.6317195892334
    8. '.add' → logprob: -16.6317195892334
    9. '.ap' → logprob: -16.8817195892334
    10. '.setdefault' → logprob: -17.0067195892334

Token 826: '(offset' (ID: 56065)
  Prédit: '(offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.0005867527215741575
    2. 'offset' → logprob: -7.625586986541748
    3. '(str' → logprob: -9.50058650970459
    4. '(' → logprob: -11.00058650970459
    5. '((' → logprob: -12.62558650970459
    6. '('' → logprob: -13.50058650970459
    7. '(""' → logprob: -13.87558650970459
    8. '(
' → logprob: -14.50058650970459
    9. ' offset' → logprob: -15.37558650970459
    10. '(None' → logprob: -15.50058650970459

Token 827: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009506448986940086
    2. ')
' → logprob: -7.500950813293457
    3. '           ' → logprob: -8.500950813293457
    4. '       ' → logprob: -9.250950813293457
    5. ' or' → logprob: -10.125950813293457
    6. '               ' → logprob: -10.625950813293457
    7. ' if' → logprob: -11.125950813293457
    8. ' )' → logprob: -11.875950813293457
    9. '   ' → logprob: -12.250950813293457
    10. '<|end|>' → logprob: -13.125950813293457

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14728233218193054
    2. 'def' → logprob: -2.022282361984253
    3. '<|end|>' → logprob: -5.772282123565674
    4. '
' → logprob: -7.147282123565674
    5. '```' → logprob: -8.147282600402832
    6. ' def' → logprob: -8.397282600402832
    7. 'from' → logprob: -9.272282600402832
    8. '	def' → logprob: -10.397282600402832
    9. '<|end|>' → logprob: -11.147282600402832
    10. ' ' → logprob: -12.022282600402832

Token 829: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000984339159913361
    2. '   ' → logprob: -7.625984191894531
    3. ' def' → logprob: -8.500984191894531
    4. '<|end|>' → logprob: -8.625984191894531
    5. 'from' → logprob: -9.500984191894531
    6. '```' → logprob: -11.000984191894531
    7. '#' → logprob: -11.625984191894531
    8. '
' → logprob: -12.250984191894531
    9. '	def' → logprob: -12.500984191894531
    10. 'if' → logprob: -12.875984191894531

Token 830: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17694689333438873
    2. 'get' → logprob: -1.9269468784332275
    3. 'format' → logprob: -4.676947116851807
    4. 'output' → logprob: -5.426947116851807
    5. ' print' → logprob: -6.426947116851807
    6. ' get' → logprob: -7.676947116851807
    7. '__' → logprob: -7.926947116851807
    8. ' output' → logprob: -8.801946640014648
    9. '_output' → logprob: -9.676946640014648
    10. ' format' → logprob: -9.801946640014648

Token 831: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0370858758687973
    2. '(' → logprob: -4.162086009979248
    3. '_results' → logprob: -4.162086009979248
    4. '_offsets' → logprob: -5.787086009979248
    5. '_' → logprob: -6.662086009979248
    6. '_(' → logprob: -7.537086009979248
    7. '_offset' → logprob: -8.66208553314209
    8. 'self' → logprob: -8.78708553314209
    9. '_result' → logprob: -10.78708553314209
    10. '(
' → logprob: -11.28708553314209

Token 832: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00025657136575318873
    2. '(' → logprob: -8.625256538391113
    3. '   ' → logprob: -9.750256538391113
    4. 'self' → logprob: -11.625256538391113
    5. '(
' → logprob: -12.375256538391113
    6. ' (' → logprob: -12.625256538391113
    7. '       ' → logprob: -13.750256538391113
    8. ' self' → logprob: -14.875256538391113
    9. ' ' → logprob: -15.125256538391113
    10. 'def' → logprob: -15.875256538391113

Token 833: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06086467206478119
    2. '   ' → logprob: -3.6858646869659424
    3. '       ' → logprob: -4.560864448547363
    4. '):
' → logprob: -4.685864448547363
    5. '):' → logprob: -4.685864448547363
    6. 'self' → logprob: -5.810864448547363
    7. ')' → logprob: -6.435864448547363
    8. '(self' → logprob: -7.935864448547363
    9. '           ' → logprob: -10.435864448547363
    10. ' ' → logprob: -10.810864448547363

Token 834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005756704485975206
    2. '   ' → logprob: -7.875575542449951
    3. ' for' → logprob: -8.62557601928711
    4. 'for' → logprob: -11.62557601928711
    5. '	   ' → logprob: -12.12557601928711
    6. '	for' → logprob: -14.50057601928711
    7. '```' → logprob: -15.12557601928711
    8. '	' → logprob: -15.62557601928711
    9. '(' → logprob: -15.87557601928711
    10. ' ' → logprob: -16.00057601928711

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019476758316159248
    2. ' for' → logprob: -6.25194787979126
    3. '       ' → logprob: -11.001947402954102
    4. '   ' → logprob: -13.001947402954102
    5. '	for' → logprob: -16.0019474029541
    6. 'def' → logprob: -17.1269474029541
    7. 'if' → logprob: -18.3769474029541
    8. '
' → logprob: -19.6269474029541
    9. '```' → logprob: -19.6269474029541
    10. 'from' → logprob: -20.6269474029541

Token 836: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0017538340762257576
    2. ' offset' → logprob: -6.501753807067871
    3. 'result' → logprob: -8.626753807067871
    4. 'res' → logprob: -9.626753807067871
    5. '   ' → logprob: -12.376753807067871
    6. '       ' → logprob: -13.501753807067871
    7. ' result' → logprob: -15.501753807067871
    8. '	offset' → logprob: -15.501753807067871
    9. ' res' → logprob: -16.251754760742188
    10. 'off' → logprob: -16.501754760742188

Token 837: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009119403548538685
    2. 'in' → logprob: -7.000911712646484
    3. ' ' → logprob: -14.875911712646484
    4. '   ' → logprob: -15.750911712646484
    5. '  ' → logprob: -16.875911712646484
    6. ',' → logprob: -17.375911712646484
    7. '	in' → logprob: -17.625911712646484
    8. ' ' → logprob: -18.000911712646484
    9. 'if' → logprob: -19.125911712646484
    10. '    ' → logprob: -19.500911712646484

Token 838: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016778295685071498
    2. ' self' → logprob: -8.750167846679688
    3. '
' → logprob: -11.875167846679688
    4. '(self' → logprob: -13.000167846679688
    5. '   ' → logprob: -16.375167846679688
    6. '       ' → logprob: -18.750167846679688
    7. '	self' → logprob: -19.375167846679688
    8. '[self' → logprob: -19.500167846679688
    9. ' ' → logprob: -19.750167846679688
    10. '
' → logprob: -19.875167846679688

Token 839: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.00010127831774298102
    2. 'results' → logprob: -9.250101089477539
    3. '.' → logprob: -12.500101089477539
    4. ' .' → logprob: -14.750101089477539
    5. '
' → logprob: -15.125101089477539
    6. '.
' → logprob: -15.250101089477539
    7. '	results' → logprob: -15.375101089477539
    8. ' results' → logprob: -15.625101089477539
    9. '(results' → logprob: -18.00010108947754
    10. '.result' → logprob: -18.12510108947754

Token 840: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34228622913360596
    2. ':' → logprob: -1.342286229133606
    3. '           ' → logprob: -3.9672861099243164
    4. '():
' → logprob: -5.217286109924316
    5. '       ' → logprob: -5.842286109924316
    6. '):
' → logprob: -7.592286109924316
    7. ',' → logprob: -8.092286109924316
    8. '<|end|>' → logprob: -8.967286109924316
    9. '<|end|>' → logprob: -9.342286109924316
    10. '	       ' → logprob: -9.717286109924316

Token 841: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6404104828834534
    2. '           ' → logprob: -0.8904104828834534
    3. ' if' → logprob: -2.8904104232788086
    4. '   ' → logprob: -5.640410423278809
    5. 'if' → logprob: -5.765410423278809
    6. ' print' → logprob: -9.890410423278809
    7. '	   ' → logprob: -10.390410423278809
    8. '```' → logprob: -10.390410423278809
    9. '	       ' → logprob: -10.515410423278809
    10. 'print' → logprob: -10.640410423278809

Token 842: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038427695631980896
    2. ' if' → logprob: -3.2884275913238525
    3. '           ' → logprob: -8.038427352905273
    4. '       ' → logprob: -9.913427352905273
    5. '   ' → logprob: -11.413427352905273
    6. 'print' → logprob: -13.038427352905273
    7. '	if' → logprob: -15.038427352905273
    8. '               ' → logprob: -15.538427352905273
    9. ' print' → logprob: -16.538427352905273
    10. ' ' → logprob: -18.163427352905273

Token 843: ' offset' (ID: 8985)
  Prédit: ' offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.20141392946243286
    2. 'offset' → logprob: -1.701413869857788
    3. '	offset' → logprob: -14.826414108276367
    4. '(offset' → logprob: -15.826414108276367
    5. '   ' → logprob: -16.576414108276367
    6. '[offset' → logprob: -17.826414108276367
    7. '.offset' → logprob: -17.951414108276367
    8. '    ' → logprob: -17.951414108276367
    9. '       ' → logprob: -17.951414108276367
    10. 'ffset' → logprob: -18.076414108276367

Token 844: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0017038638470694423
    2. 'is' → logprob: -6.37670373916626
    3. '	is' → logprob: -13.876704216003418
    4. '<|end|>' → logprob: -15.626704216003418
    5. '==' → logprob: -15.751704216003418
    6. '.is' → logprob: -16.0017032623291
    7. ':' → logprob: -16.2517032623291
    8. ':
' → logprob: -16.5017032623291
    9. ' ==' → logprob: -16.5017032623291
    10. '    ' → logprob: -18.3767032623291

Token 845: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.025279583409428596
    2. ' None' → logprob: -3.7752795219421387
    3. 'not' → logprob: -6.775279521942139
    4. ' not' → logprob: -7.025279521942139
    5. '   ' → logprob: -13.900279998779297
    6. '(None' → logprob: -15.525279998779297
    7. '           ' → logprob: -16.650279998779297
    8. '=None' → logprob: -17.150279998779297
    9. '_None' → logprob: -17.400279998779297
    10. '       ' → logprob: -17.650279998779297

Token 846: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.842555426876061e-06
    2. ' None' → logprob: -12.250004768371582
    3. '       ' → logprob: -18.2500057220459
    4. '(None' → logprob: -18.5000057220459
    5. '   ' → logprob: -18.8750057220459
    6. 'offset' → logprob: -19.2500057220459
    7. '_None' → logprob: -19.3750057220459
    8. 'none' → logprob: -19.3750057220459
    9. '           ' → logprob: -19.6250057220459
    10. '=None' → logprob: -20.7500057220459

Token 847: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42690232396125793
    2. ':
' → logprob: -1.4269022941589355
    3. ':' → logprob: -2.9269022941589355
    4. '           ' → logprob: -3.0519022941589355
    5. ' and' → logprob: -5.3019022941589355
    6. 'and' → logprob: -7.0519022941589355
    7. ',' → logprob: -8.176902770996094
    8. 'print' → logprob: -8.926902770996094
    9. '():
' → logprob: -9.551902770996094
    10. '):
' → logprob: -9.801902770996094

Token 848: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038362301886081696
    2. '           ' → logprob: -3.2883622646331787
    3. ' print' → logprob: -8.413362503051758
    4. 'print' → logprob: -9.288362503051758
    5. '                   ' → logprob: -13.038362503051758
    6. '   ' → logprob: -13.288362503051758
    7. '       ' → logprob: -13.788362503051758
    8. '              ' → logprob: -14.538362503051758
    9. '	           ' → logprob: -14.788362503051758
    10. '```' → logprob: -15.413362503051758

Token 849: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0012080918531864882
    2. ' print' → logprob: -6.751208305358887
    3. '               ' → logprob: -10.501208305358887
    4. '           ' → logprob: -11.501208305358887
    5. '   ' → logprob: -15.501208305358887
    6. '                   ' → logprob: -17.25120735168457
    7. '	print' → logprob: -18.00120735168457
    8. '       ' → logprob: -19.37620735168457
    9. '```' → logprob: -20.37620735168457
    10. 'printf' → logprob: -21.00120735168457

Token 850: '(offset' (ID: 56065)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6199906468391418
    2. '(offset' → logprob: -1.369990587234497
    3. '(f' → logprob: -1.619990587234497
    4. 'f' → logprob: -4.619990825653076
    5. ' offset' → logprob: -8.994990348815918
    6. '(' → logprob: -10.369990348815918
    7. '0' → logprob: -10.744990348815918
    8. '[offset' → logprob: -12.494990348815918
    9. ' f' → logprob: -13.119990348815918
    10. '{' → logprob: -13.619990348815918

Token 851: '.dx' (ID: 111318)
  Prédit: '.dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dx' → logprob: -0.00020663968462031335
    2. '.f' → logprob: -9.75020694732666
    3. '.x' → logprob: -10.37520694732666
    4. ')' → logprob: -10.50020694732666
    5. ' .' → logprob: -10.62520694732666
    6. '(dx' → logprob: -10.62520694732666
    7. ',' → logprob: -11.00020694732666
    8. '.' → logprob: -11.50020694732666
    9. '.fx' → logprob: -13.37520694732666
    10. '.dy' → logprob: -13.62520694732666

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040791230276227
    2. ' ,' → logprob: -7.875407695770264
    3. ',end' → logprob: -10.875408172607422
    4. '               ' → logprob: -12.250408172607422
    5. ',
' → logprob: -13.375408172607422
    6. 'offset' → logprob: -13.750408172607422
    7. ' offset' → logprob: -14.500408172607422
    8. '   ' → logprob: -15.625408172607422
    9. '[offset' → logprob: -15.625408172607422
    10. '                ' → logprob: -16.250408172607422

Token 853: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0001584850688232109
    2. ' offset' → logprob: -8.750158309936523
    3. '(offset' → logprob: -18.500158309936523
    4. '               ' → logprob: -19.375158309936523
    5. '	offset' → logprob: -19.750158309936523
    6. '[offset' → logprob: -20.375158309936523
    7. '.offset' → logprob: -21.500158309936523
    8. '
' → logprob: -21.625158309936523
    9. '   ' → logprob: -21.750158309936523
    10. '           ' → logprob: -22.500158309936523

Token 854: '.dy' (ID: 147561)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.3793790936470032
    2. '.offset' → logprob: -1.6293790340423584
    3. 'dy' → logprob: -2.8793790340423584
    4. '.dy' → logprob: -3.3793790340423584
    5. ',' → logprob: -3.6293790340423584
    6. ' offset' → logprob: -6.2543792724609375
    7. ' ,' → logprob: -8.004379272460938
    8. ')' → logprob: -8.754379272460938
    9. ' dy' → logprob: -8.879379272460938
    10. '.' → logprob: -9.254379272460938

Token 855: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.40272584557533264
    2. '           ' → logprob: -1.1527258157730103
    3. ')' → logprob: -4.152725696563721
    4. 'else' → logprob: -12.527726173400879
    5. ' )
' → logprob: -13.777726173400879
    6. ')
' → logprob: -14.277726173400879
    7. '               ' → logprob: -14.277726173400879
    8. '       ' → logprob: -14.652726173400879
    9. '   ' → logprob: -15.027726173400879
    10. '')
' → logprob: -15.152726173400879

Token 856: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 857: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0004320996522437781
    2. 'main' → logprob: -7.750432014465332
    3. ' run' → logprob: -14.625432014465332
    4. '_main' → logprob: -14.625432014465332
    5. ' solve' → logprob: -15.875432014465332
    6. ' process' → logprob: -16.37543296813965
    7. ' def' → logprob: -17.00043296813965
    8. '	main' → logprob: -17.00043296813965
    9. ' parse' → logprob: -17.12543296813965
    10. ' test' → logprob: -17.25043296813965

Token 858: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.2994620242971e-06
    2. '():
' → logprob: -12.250008583068848
    3. ' ():' → logprob: -12.875008583068848
    4. '()' → logprob: -14.000008583068848
    5. '():
' → logprob: -17.75000762939453
    6. '(' → logprob: -20.12500762939453
    7. '():

' → logprob: -20.12500762939453
    8. '()>' → logprob: -20.25000762939453
    9. '().' → logprob: -20.62500762939453
    10. '(":' → logprob: -20.75000762939453

Token 859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2639351785182953
    2. 'import' → logprob: -1.5139352083206177
    3. ' import' → logprob: -4.638935089111328
    4. 'det' → logprob: -6.513935089111328
    5. 'input' → logprob: -7.638935089111328
    6. '	import' → logprob: -8.763935089111328
    7. ' detector' → logprob: -9.638935089111328
    8. ' input' → logprob: -9.888935089111328
    9. '   ' → logprob: -11.138935089111328
    10. '_detector' → logprob: -11.763935089111328

Token 860: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.14780668914318085
    2. 'det' → logprob: -2.1478066444396973
    3. 'input' → logprob: -4.647806644439697
    4. '   ' → logprob: -5.022806644439697
    5. ' import' → logprob: -5.522806644439697
    6. ' detector' → logprob: -8.022807121276855
    7. ' input' → logprob: -9.522807121276855
    8. 'dp' → logprob: -10.397807121276855
    9. 'pattern' → logprob: -10.772807121276855
    10. 'from' → logprob: -11.147807121276855

Token 861: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.676292231422849e-05
    2. ' sys' → logprob: -11.000017166137695
    3. '=sys' → logprob: -18.875017166137695
    4. '	sys' → logprob: -20.000017166137695
    5. '(sys' → logprob: -21.375017166137695
    6. 'io' → logprob: -22.375017166137695
    7. '.sys' → logprob: -22.625017166137695
    8. 'stdin' → logprob: -23.625017166137695
    9. '_sys' → logprob: -23.625017166137695
    10. '
' → logprob: -23.750017166137695

Token 862: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21011590957641602
    2. 'input' → logprob: -1.710115909576416
    3. ' input' → logprob: -5.085115909576416
    4. 'def' → logprob: -6.960115909576416
    5. '    
' → logprob: -7.460115909576416
    6. '
' → logprob: -8.210115432739258
    7. '	input' → logprob: -8.335115432739258
    8. '<|end|>' → logprob: -8.710115432739258
    9. '```' → logprob: -8.710115432739258
    10. '   ' → logprob: -11.085115432739258

Token 863: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4039326012134552
    2. 'input' → logprob: -1.1539325714111328
    3. ' input' → logprob: -4.153932571411133
    4. '
' → logprob: -7.778932571411133
    5. '    
' → logprob: -8.028932571411133
    6. '	input' → logprob: -8.528932571411133
    7. '```' → logprob: -9.903932571411133
    8. '   ' → logprob: -10.028932571411133
    9. ' lines' → logprob: -10.153932571411133
    10. 'for' → logprob: -10.653932571411133

Token 864: ' detector' (ID: 51124)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2301977574825287
    2. '   ' → logprob: -1.980197787284851
    3. 'det' → logprob: -2.7301976680755615
    4. ' input' → logprob: -6.105197906494141
    5. 'def' → logprob: -9.23019790649414
    6. ' detector' → logprob: -10.48019790649414
    7. 'lines' → logprob: -11.60519790649414
    8. 'data' → logprob: -12.85519790649414
    9. ' ' → logprob: -13.73019790649414
    10. ' lines' → logprob: -14.10519790649414

Token 865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05498090386390686
    2. '=' → logprob: -2.929980993270874
    3. '.' → logprob: -9.554981231689453
    4. '   ' → logprob: -10.804981231689453
    5. ' ' → logprob: -12.929981231689453
    6. '  ' → logprob: -13.804981231689453
    7. '.process' → logprob: -13.929981231689453
    8. '.py' → logprob: -13.929981231689453
    9. '	' → logprob: -14.429981231689453
    10. '.=' → logprob: -14.804981231689453

Token 866: ' Star' (ID: 11307)
  Prédit: 'Star'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Star' → logprob: -0.06196768581867218
    2. ' Star' → logprob: -2.811967611312866
    3. '_star' → logprob: -16.936967849731445
    4. '   ' → logprob: -20.311967849731445
    5. 'Stars' → logprob: -20.686967849731445
    6. 'STAR' → logprob: -20.686967849731445
    7. 'star' → logprob: -20.936967849731445
    8. '
' → logprob: -20.936967849731445
    9. ' ' → logprob: -21.186967849731445
    10. '```' → logprob: -21.436967849731445

Token 867: 'Pattern' (ID: 16821)
  Prédit: 'Pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -6.704273118884885e-07
    2. 'Detector' → logprob: -14.625000953674316
    3. 'pattern' → logprob: -15.750000953674316
    4. ' Pattern' → logprob: -17.875
    5. '   ' → logprob: -18.125
    6. 'Pat' → logprob: -18.875
    7. '_pattern' → logprob: -19.625
    8. '_PATTERN' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. 'Detection' → logprob: -20.375

Token 868: 'Detector' (ID: 40139)
  Prédit: 'Detector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Detector' → logprob: -1.759734732331708e-05
    2. 'det' → logprob: -11.125017166137695
    3. '()' → logprob: -13.875017166137695
    4. '_detector' → logprob: -14.250017166137695
    5. 'Detect' → logprob: -14.375017166137695
    6. 'detect' → logprob: -15.875017166137695
    7. 'Det' → logprob: -16.375017166137695
    8. ' detector' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.625017166137695
    10. '()
' → logprob: -17.000017166137695

Token 869: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03924781456589699
    2. 'det' → logprob: -3.539247751235962
    3. '
' → logprob: -4.914247989654541
    4. 'for' → logprob: -6.289247989654541
    5. '    
' → logprob: -9.289247512817383
    6. ' for' → logprob: -9.414247512817383
    7. 'input' → logprob: -10.289247512817383
    8. ' detector' → logprob: -11.539247512817383
    9. '
' → logprob: -11.789247512817383
    10. '```' → logprob: -11.914247512817383

Token 870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036313117016106844
    2. 'det' → logprob: -5.628631114959717
    3. ' detector' → logprob: -11.253631591796875
    4. '
' → logprob: -12.003631591796875
    5. '```' → logprob: -12.003631591796875
    6. 'for' → logprob: -13.253631591796875
    7. '  ' → logprob: -13.378631591796875
    8. ' ' → logprob: -14.253631591796875
    9. '_detector' → logprob: -14.753631591796875
    10. '    
' → logprob: -15.003631591796875

Token 871: ' detector' (ID: 51124)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.008704394102096558
    2. '   ' → logprob: -4.75870418548584
    3. 'input' → logprob: -9.38370418548584
    4. ' detector' → logprob: -12.88370418548584
    5. 'lines' → logprob: -13.38370418548584
    6. '```' → logprob: -14.25870418548584
    7. '_detector' → logprob: -15.50870418548584
    8. '  ' → logprob: -15.75870418548584
    9. 'data' → logprob: -15.88370418548584
    10. '
' → logprob: -16.008705139160156

Token 872: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -12.75000286102295
    3. 'process' → logprob: -17.250003814697266
    4. ' .' → logprob: -17.875003814697266
    5. '.run' → logprob: -20.250003814697266
    6. '.perform' → logprob: -20.750003814697266
    7. '.Process' → logprob: -20.750003814697266
    8. '	process' → logprob: -22.000003814697266
    9. '.pro' → logprob: -22.250003814697266
    10. '.mainloop' → logprob: -22.375003814697266

Token 873: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004087305162101984
    2. 'sys' → logprob: -5.504087448120117
    3. '   ' → logprob: -12.129087448120117
    4. ' sys' → logprob: -13.379087448120117
    5. '(' → logprob: -14.504087448120117
    6. '	sys' → logprob: -14.629087448120117
    7. '(list' → logprob: -14.879087448120117
    8. '(iter' → logprob: -15.004087448120117
    9. 'list' → logprob: -16.379087448120117
    10. '([' → logprob: -16.754087448120117

Token 874: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011922525009140372
    2. '.argv' → logprob: -6.751192092895508
    3. '.' → logprob: -11.001192092895508
    4. '.stdout' → logprob: -12.501192092895508
    5. ' .' → logprob: -14.751192092895508
    6. '.std' → logprob: -14.876192092895508
    7. '.__' → logprob: -15.001192092895508
    8. '._' → logprob: -15.626192092895508
    9. 'stdin' → logprob: -15.876192092895508
    10. '   ' → logprob: -16.751192092895508

Token 875: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017290872347075492
    2. '.readline' → logprob: -9.25017261505127
    3. '))' → logprob: -10.50017261505127
    4. ' )' → logprob: -10.75017261505127
    5. '.readlines' → logprob: -11.25017261505127
    6. ')
' → logprob: -11.62517261505127
    7. '())' → logprob: -12.25017261505127
    8. ')))' → logprob: -15.62517261505127
    9. ')

' → logprob: -16.375173568725586
    10. '   ' → logprob: -16.500173568725586

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007617275230586529
    2. 'det' → logprob: -4.882617473602295
    3. '
' → logprob: -12.257616996765137
    4. ' detector' → logprob: -13.507616996765137
    5. '```' → logprob: -13.507616996765137
    6. '    
' → logprob: -13.882616996765137
    7. '   ' → logprob: -14.132616996765137
    8. '(det' → logprob: -14.257616996765137
    9. '_detector' → logprob: -14.632616996765137
    10. 'for' → logprob: -15.882616996765137

Token 877: ' detector' (ID: 51124)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -8.304016228066757e-05
    2. '   ' → logprob: -9.500082969665527
    3. ' detector' → logprob: -11.750082969665527
    4. 'for' → logprob: -16.125083923339844
    5. 'detect' → logprob: -16.500083923339844
    6. '_detector' → logprob: -16.750083923339844
    7. '```' → logprob: -17.500083923339844
    8. '
' → logprob: -18.000083923339844
    9. '(det' → logprob: -18.625083923339844
    10. 'def' → logprob: -18.875083923339844

Token 878: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.6060808522743173e-05
    2. '.' → logprob: -10.875025749206543
    3. 'output' → logprob: -12.000025749206543
    4. '.out' → logprob: -15.750025749206543
    5. '.results' → logprob: -15.750025749206543
    6. '.
' → logprob: -16.00002670288086
    7. '.outputs' → logprob: -16.12502670288086
    8. ' .' → logprob: -16.25002670288086
    9. '.input' → logprob: -17.12502670288086
    10. '
' → logprob: -17.50002670288086

Token 879: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -7.791440293658525e-05
    2. 'results' → logprob: -9.500078201293945
    3. '()' → logprob: -13.250078201293945
    4. 'Results' → logprob: -13.875078201293945
    5. '_' → logprob: -16.125078201293945
    6. '()
' → logprob: -16.375078201293945
    7. '_result' → logprob: -17.250078201293945
    8. '```' → logprob: -17.250078201293945
    9. ' results' → logprob: -17.750078201293945
    10. '_RESULTS' → logprob: -18.625078201293945

Token 880: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5592225193977356
    2. '()' → logprob: -1.8092224597930908
    3. 'if' → logprob: -1.8092224597930908
    4. '<|end|>' → logprob: -2.434222459793091
    5. '()
' → logprob: -4.80922269821167
    6. '(
' → logprob: -6.55922269821167
    7. '   ' → logprob: -6.80922269821167
    8. '```' → logprob: -6.93422269821167
    9. ' if' → logprob: -8.434222221374512
    10. 'main' → logprob: -8.559222221374512

Token 881: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0059690880589187145
    2. '
' → logprob: -5.255969047546387
    3. 'main' → logprob: -7.380969047546387
    4. ' if' → logprob: -10.255969047546387
    5. '<|end|>' → logprob: -10.380969047546387
    6. '```' → logprob: -11.130969047546387
    7. '   ' → logprob: -11.505969047546387
    8. '#' → logprob: -11.755969047546387
    9. '\n' → logprob: -12.005969047546387
    10. '(main' → logprob: -14.005969047546387

Token 882: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4749891459941864
    2. '__' → logprob: -0.9749891757965088
    3. 'name' → logprob: -7.72498893737793
    4. '_name' → logprob: -7.84998893737793
    5. ' name' → logprob: -10.34998893737793
    6. ' ' → logprob: -10.97498893737793
    7. 'Name' → logprob: -11.72498893737793
    8. '```' → logprob: -11.97498893737793
    9. 'True' → logprob: -12.34998893737793
    10. '___' → logprob: -12.97498893737793

Token 883: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05935615673661232
    2. '==' → logprob: -3.309356212615967
    3. ' ==' → logprob: -3.934356212615967
    4. '.__' → logprob: -7.809356212615967
    5. '__.__' → logprob: -7.934356212615967
    6. '__.' → logprob: -8.434355735778809
    7. ' __' → logprob: -8.934355735778809
    8. '[' → logprob: -9.059355735778809
    9. '=="' → logprob: -9.934355735778809
    10. '__[' → logprob: -9.934355735778809

Token 884: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.200166469876422e-06
    2. '==' → logprob: -12.500004768371582
    3. '__.__' → logprob: -13.625004768371582
    4. '____' → logprob: -17.0000057220459
    5. '__('' → logprob: -17.0000057220459
    6. '__
' → logprob: -17.1250057220459
    7. ' ==' → logprob: -17.1250057220459
    8. '__.' → logprob: -17.1250057220459
    9. '___' → logprob: -17.7500057220459
    10. '=="' → logprob: -18.0000057220459

Token 885: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4881066083908081
    2. '==' → logprob: -0.9881066083908081
    3. ' ==' → logprob: -4.363106727600098
    4. '=='' → logprob: -7.238106727600098
    5. '=="' → logprob: -7.738106727600098
    6. '__.__' → logprob: -11.363106727600098
    7. '==
' → logprob: -11.863106727600098
    8. '===' → logprob: -12.113106727600098
    9. '=' → logprob: -12.488106727600098
    10. '.__' → logprob: -13.363106727600098

Token 886: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.048595547676086426
    2. '"' → logprob: -3.048595428466797
    3. '__' → logprob: -12.173595428466797
    4. ' '__' → logprob: -13.423595428466797
    5. ' "__' → logprob: -14.548595428466797
    6. ''"' → logprob: -14.923595428466797
    7. ''name' → logprob: -15.548595428466797
    8. ''user' → logprob: -15.798595428466797
    9. ''post' → logprob: -16.548595428466797
    10. ''default' → logprob: -16.673595428466797

Token 887: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0280383548888494e-06
    2. 'name' → logprob: -14.750000953674316
    3. '__' → logprob: -14.875000953674316
    4. 'm' → logprob: -15.500000953674316
    5. ' main' → logprob: -18.000001907348633
    6. 'built' → logprob: -18.500001907348633
    7. '_main' → logprob: -18.750001907348633
    8. 'ma' → logprob: -19.625001907348633
    9. 'mail' → logprob: -20.375001907348633
    10. 'guard' → logprob: -20.375001907348633

Token 888: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06197664886713028
    2. '__' → logprob: -2.811976671218872
    3. '__":
' → logprob: -12.061976432800293
    4. '_' → logprob: -12.811976432800293
    5. '__:' → logprob: -15.186976432800293
    6. '__
' → logprob: -16.68697738647461
    7. '':
' → logprob: -16.81197738647461
    8. ''' → logprob: -16.81197738647461
    9. '__.' → logprob: -16.81197738647461
    10. '___' → logprob: -17.18697738647461

Token 889: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23951545357704163
    2. 'main' → logprob: -1.7395154237747192
    3. '__' → logprob: -3.614515542984009
    4. '   ' → logprob: -5.11451530456543
    5. '"' → logprob: -6.23951530456543
    6. '__':
' → logprob: -7.23951530456543
    7. '_main' → logprob: -7.86451530456543
    8. ' main' → logprob: -7.86451530456543
    9. ' '__' → logprob: -8.11451530456543
    10. '('__' → logprob: -8.48951530456543

Token 890: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. 'import' → logprob: -14.750000953674316
    3. ' main' → logprob: -15.250000953674316
    4. '	main' → logprob: -17.0
    5. '   ' → logprob: -18.375
    6. '(main' → logprob: -22.25
    7. '.main' → logprob: -23.125
    8. '_main' → logprob: -23.5
    9. '  ' → logprob: -23.75
    10. '
' → logprob: -24.125

Token 891: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7452544569969177
    2. '<|end|>' → logprob: -1.2452545166015625
    3. '(' → logprob: -2.2452545166015625
    4. ')' → logprob: -3.1202545166015625
    5. '<|end|>' → logprob: -3.9952545166015625
    6. ':' → logprob: -3.9952545166015625
    7. '[' → logprob: -4.3702545166015625
    8. '
' → logprob: -5.2452545166015625
    9. '.' → logprob: -5.2452545166015625
    10. ' ' → logprob: -5.7452545166015625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 889
Tokens correctement prédits (1ère position, stricte): 410
Tokens correctement prédits (1ère position, avec adaptation): 463
Tokens correctement prédits (top 10): 788
Précision stricte (1ère position): 46.12%
Précision adaptée (1ère position): 52.08%
Précision (top 10): 88.64%
================================================================================
