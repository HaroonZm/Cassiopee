================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = input()
    if n == '0':
        break
    n = int(n)
    items_price = {}
    for _ in range(n):
        line = input().split()
        name = line[0]
        price = int(line[1])
        items_price[name] = price
    m = int(input())
    recipes = {}
    for _ in range(m):
        line = input().split()
        out_item = line[0]
        k = int(line[1])
        in_items = line[2:]
        recipes[out_item] = in_items

    target = input()

    # メモ化による再帰的な最小費用計算
    memo = {}
    def cost(item):
        if item in memo:
            return memo[item]
        # 買う場合の値段
        res = items_price[item]
        # 作る場合の値段
        if item in recipes:
            total = 0
            for in_item in recipes[item]:
                total += cost(in_item)
            if total < res:
                res = total
        memo[item] = res
        return res

    print(cost(target))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.198738232254982
    2. '    ' → logprob: -2.5737383365631104
    3. ' ' → logprob: -3.1987383365631104
    4. '```' → logprob: -3.1987383365631104
    5. '       ' → logprob: -5.198738098144531
    6. '    
' → logprob: -5.698738098144531
    7. ' pass' → logprob: -5.948738098144531
    8. '  ' → logprob: -6.448738098144531
    9. 'pass' → logprob: -6.448738098144531
    10. ' ```' → logprob: -6.948738098144531

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9394372701644897
    2. 'u' → logprob: -1.0644372701644897
    3. '=' → logprob: -2.4394373893737793
    4. 'o' → logprob: -2.9394373893737793
    5. '   ' → logprob: -3.3144373893737793
    6. 'e' → logprob: -3.9394373893737793
    7. '_' → logprob: -4.439437389373779
    8. '+' → logprob: -4.689437389373779
    9. ' =' → logprob: -4.939437389373779
    10. '>' → logprob: -5.314437389373779

Token 6: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002151569351553917
    2. '('' → logprob: -6.6271514892578125
    3. '("("' → logprob: -8.002151489257812
    4. ''' → logprob: -8.502151489257812
    5. '()' → logprob: -8.627151489257812
    6. '```' → logprob: -10.127151489257812
    7. '"' → logprob: -11.002151489257812
    8. '("")' → logprob: -11.752151489257812
    9. '`' → logprob: -12.252151489257812
    10. '(
' → logprob: -12.252151489257812

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7217387557029724
    2. ' ' → logprob: -1.8467388153076172
    3. ' ==' → logprob: -2.346738815307617
    4. '\n' → logprob: -2.596738815307617
    5. '   ' → logprob: -3.221738815307617
    6. '==' → logprob: -3.721738815307617
    7. '  
' → logprob: -4.096738815307617
    8. '    ' → logprob: -4.221738815307617
    9. 'if' → logprob: -4.346738815307617
    10. '```' → logprob: -4.721738815307617

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4845927655696869
    2. ' ' → logprob: -2.4845926761627197
    3. ' ==' → logprob: -2.6095926761627197
    4. '   ' → logprob: -3.2345926761627197
    5. 'if' (adapté à ' if') → logprob: -3.2345926761627197
    6. '\n' → logprob: -3.4845926761627197
    7. '.' → logprob: -3.6095926761627197
    8. '==' → logprob: -3.8595926761627197
    9. '    ' → logprob: -4.359592914581299
    10. ')' → logprob: -4.859592914581299

Token 10: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1133025735616684
    2. ' n' → logprob: -2.73830246925354
    3. ' ' → logprob: -3.23830246925354
    4. 'not' → logprob: -6.113302707672119
    5. 'n' → logprob: -7.113302707672119
    6. '  ' → logprob: -8.738302230834961
    7. ' ' → logprob: -11.863302230834961
    8. ' n't' → logprob: -12.613302230834961
    9. '	not' → logprob: -13.863302230834961
    10. ' len' → logprob: -13.863302230834961

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024106424301862717
    2. '==' → logprob: -4.524106502532959
    3. ' !=' → logprob: -5.274106502532959
    4. '.' → logprob: -5.649106502532959
    5. ' ' → logprob: -6.399106502532959
    6. ' .' → logprob: -6.774106502532959
    7. '.strip' → logprob: -8.2741060256958
    8. ')' → logprob: -8.6491060256958
    9. ' =' → logprob: -8.7741060256958
    10. '  ' → logprob: -8.8991060256958

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05038289353251457
    2. ''' → logprob: -3.0503828525543213
    3. '""' → logprob: -6.5503830909729
    4. '''' → logprob: -8.800382614135742
    5. ' ' → logprob: -8.925382614135742
    6. ' "' → logprob: -10.550382614135742
    7. '"\' → logprob: -10.675382614135742
    8. ' '' → logprob: -11.800382614135742
    9. ''\' → logprob: -13.175382614135742
    10. '   ' → logprob: -13.425382614135742

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08419357240200043
    2. ''\' → logprob: -3.584193468093872
    3. '0' → logprob: -3.834193468093872
    4. '\n' → logprob: -3.959193468093872
    5. '':' → logprob: -4.959193706512451
    6. 'q' → logprob: -6.084193706512451
    7. '"' → logprob: -7.459193706512451
    8. ''q' → logprob: -7.459193706512451
    9. 'exit' → logprob: -7.709193706512451
    10. '''' → logprob: -7.959193706512451

Token 14: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.13374827802181244
    2. ''' → logprob: -2.1337482929229736
    3. '\n' → logprob: -5.1337480545043945
    4. '':
' → logprob: -7.8837480545043945
    5. ':' → logprob: -8.008748054504395
    6. '':
' → logprob: -9.633748054504395
    7. ' ':' → logprob: -10.008748054504395
    8. ' '' → logprob: -11.383748054504395
    9. '":' → logprob: -11.508748054504395
    10. ''):' → logprob: -11.758748054504395

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005283799953758717
    2. ' break' → logprob: -5.755283832550049
    3. '   ' → logprob: -6.255283832550049
    4. '	break' → logprob: -9.50528335571289
    5. '    ' → logprob: -11.13028335571289
    6. '\n' → logprob: -11.13028335571289
    7. ' ' → logprob: -11.25528335571289
    8. ' ' → logprob: -11.38028335571289
    9. '      ' → logprob: -11.38028335571289
    10. 'break' → logprob: -11.88028335571289

Token 16: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.317687064409256
    2. '       ' → logprob: -1.3176870346069336
    3. '\n' → logprob: -5.817687034606934
    4. 'break' (adapté à ' break') → logprob: -7.067687034606934
    5. '   ' → logprob: -8.317687034606934
    6. '	break' → logprob: -8.442687034606934
    7. ' \' → logprob: -10.317687034606934
    8. '           ' → logprob: -11.067687034606934
    9. '```' → logprob: -11.067687034606934
    10. ' ' → logprob: -11.317687034606934

Token 17: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5743416547775269
    2. ':' → logprob: -1.9493416547775269
    3. '   ' → logprob: -1.9493416547775269
    4. '
' → logprob: -1.9493416547775269
    5. '<|end|>' → logprob: -2.0743417739868164
    6. ' ' → logprob: -2.6993417739868164
    7. '    
' → logprob: -3.0743417739868164
    8. '  
' → logprob: -3.5743417739868164
    9. 'n' → logprob: -3.8243417739868164
    10. ' 
' → logprob: -3.9493417739868164

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031165389344096184
    2. '    
' → logprob: -3.781165361404419
    3. '
' → logprob: -6.406165599822998
    4. '  
' → logprob: -6.531165599822998
    5. 'n' → logprob: -7.031165599822998
    6. '   
' → logprob: -7.156165599822998
    7. '\n' → logprob: -7.281165599822998
    8. '<|end|>' → logprob: -7.406165599822998
    9. '```' → logprob: -7.781165599822998
    10. '  ' → logprob: -7.781165599822998

Token 19: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.782690703868866
    2. '\n' → logprob: -1.7826907634735107
    3. '   ' → logprob: -1.7826907634735107
    4. '\' → logprob: -3.0326907634735107
    5. ' 
' → logprob: -3.9076907634735107
    6. '    ' → logprob: -3.9076907634735107
    7. 'n' (adapté à ' n') → logprob: -3.9076907634735107
    8. ':' → logprob: -4.032690525054932
    9. ',' → logprob: -4.407690525054932
    10. '    
' → logprob: -4.532690525054932

Token 20: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7052673101425171
    2. '.' → logprob: -1.080267310142517
    3. ' ' → logprob: -3.3302674293518066
    4. ')' → logprob: -3.4552674293518066
    5. '=' → logprob: -3.4552674293518066
    6. '[' → logprob: -3.8302674293518066
    7. '\n' → logprob: -4.580267429351807
    8. '<|end|>' → logprob: -4.705267429351807
    9. '\' → logprob: -5.330267429351807
    10. '(' → logprob: -5.830267429351807

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07300595939159393
    2. 'int' → logprob: -2.9480059146881104
    3. ' n' → logprob: -4.1980061531066895
    4. ' list' → logprob: -6.6980061531066895
    5. 'n' → logprob: -6.8230061531066895
    6. ' ' → logprob: -8.448005676269531
    7. 'list' → logprob: -9.448005676269531
    8. '"' → logprob: -10.073005676269531
    9. '   ' → logprob: -10.198005676269531
    10. ' input' → logprob: -10.448005676269531

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931745409965515
    2. '(n' → logprob: -0.6931745409965515
    3. ' (' → logprob: -11.443174362182617
    4. '()' → logprob: -11.943174362182617
    5. '(
' → logprob: -12.943174362182617
    6. '(

' → logprob: -13.693174362182617
    7. ' ' → logprob: -13.818174362182617
    8. '(int' → logprob: -14.318174362182617
    9. '(input' → logprob: -14.443174362182617
    10. '(nn' → logprob: -14.693174362182617

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046951865078881383
    2. ' )' → logprob: -7.87546968460083
    3. '+' → logprob: -10.125469207763672
    4. '*' → logprob: -11.000469207763672
    5. '**' → logprob: -11.625469207763672
    6. '))' → logprob: -11.875469207763672
    7. '`)' → logprob: -12.375469207763672
    8. '   ' → logprob: -13.125469207763672
    9. ')
' → logprob: -13.125469207763672
    10. ' +' → logprob: -13.625469207763672

Token 24: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' items' (ID: 4732)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27452749013900757
    2. ' ' → logprob: -2.0245275497436523
    3. ' if' → logprob: -3.5245275497436523
    4. 'n' → logprob: -4.274527549743652
    5. '    ' → logprob: -4.399527549743652
    6. 's' → logprob: -4.899527549743652
    7. 'result' → logprob: -5.649527549743652
    8. 'if' → logprob: -5.649527549743652
    9. ' 
' → logprob: -5.649527549743652
    10. 'sum' → logprob: -5.649527549743652

Token 26: '_price' (ID: 18814)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06547227501869202
    2. '[' → logprob: -3.940472364425659
    3. '.' → logprob: -4.19047212600708
    4. '=' → logprob: -4.19047212600708
    5. '_count' → logprob: -5.19047212600708
    6. '_' → logprob: -6.44047212600708
    7. '.append' → logprob: -6.69047212600708
    8. '[:]' → logprob: -6.94047212600708
    9. '_counts' → logprob: -7.81547212600708
    10. '.sort' → logprob: -7.81547212600708

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7140993475914001
    2. 's' → logprob: -0.8390993475914001
    3. '[' → logprob: -3.214099407196045
    4. '=' → logprob: -3.339099407196045
    5. '[s' → logprob: -7.589099407196045
    6. ' ' → logprob: -8.214098930358887
    7. '.append' → logprob: -8.339098930358887
    8. '[:]' → logprob: -8.339098930358887
    9. ' +=' → logprob: -8.589098930358887
    10. '[]' → logprob: -8.714098930358887

Token 28: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2573709785938263
    2. '[]' → logprob: -1.632370948791504
    3. ' [' → logprob: -3.882370948791504
    4. '[' → logprob: -4.882370948791504
    5. ' list' → logprob: -6.382370948791504
    6. 'list' → logprob: -7.132370948791504
    7. ' {}' → logprob: -8.132370948791504
    8. '{}' → logprob: -8.132370948791504
    9. '[int' → logprob: -9.882370948791504
    10. '[]}' → logprob: -10.882370948791504

Token 29: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.449387550354004
    2. ' ' → logprob: -1.574387550354004
    3. ' 
' → logprob: -1.699387550354004
    4. '   ' → logprob: -1.699387550354004
    5. ' for' → logprob: -2.574387550354004
    6. 'n' → logprob: -3.324387550354004
    7. '    
' → logprob: -4.074387550354004
    8. '<|end|>' → logprob: -4.199387550354004
    9. '
' → logprob: -4.574387550354004
    10. '[' → logprob: -4.949387550354004

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36998069286346436
    2. ' for' → logprob: -1.2449806928634644
    3. ' ' → logprob: -4.244980812072754
    4. ' 
' → logprob: -6.244980812072754
    5. 'items' → logprob: -6.744980812072754
    6. '   ' → logprob: -6.994980812072754
    7. ' while' → logprob: -7.494980812072754
    8. 'n' → logprob: -7.619980812072754
    9. 'while' → logprob: -7.619980812072754
    10. ' items' → logprob: -8.119980812072754

Token 31: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7474570274353027
    2. ' ' → logprob: -0.9974570274353027
    3. ' _' → logprob: -1.8724570274353027
    4. '_' → logprob: -5.872457027435303
    5. ' range' → logprob: -7.997457027435303
    6. ' item' → logprob: -8.122457504272461
    7. '  ' → logprob: -8.997457504272461
    8. ' items' → logprob: -8.997457504272461
    9. 'i' → logprob: -9.247457504272461
    10. ' ‌' → logprob: -10.747457504272461

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009494528640061617
    2. 'in' → logprob: -7.125949382781982
    3. ' ' → logprob: -8.87594985961914
    4. 'range' → logprob: -13.75094985961914
    5. ' _' → logprob: -14.00094985961914
    6. '_' → logprob: -14.25094985961914
    7. ' i' → logprob: -14.37594985961914
    8. '	in' → logprob: -14.62594985961914
    9. '  ' → logprob: -15.00094985961914
    10. ' range' → logprob: -15.50094985961914

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25194892287254333
    2. 'range' → logprob: -1.5019489526748657
    3. '	range' → logprob: -11.501949310302734
    4. ' ' → logprob: -12.751949310302734
    5. 'rang' → logprob: -13.251949310302734
    6. '(range' → logprob: -13.626949310302734
    7. 'ran' → logprob: -13.751949310302734
    8. '_range' → logprob: -14.001949310302734
    9. ' xrange' → logprob: -15.001949310302734
    10. ' ran' → logprob: -15.001949310302734

Token 34: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06879274547100067
    2. '(n' → logprob: -3.1937928199768066
    3. ' (' → logprob: -4.068792819976807
    4. 'n' → logprob: -5.318792819976807
    5. '(' → logprob: -5.693792819976807
    6. ' ' → logprob: -9.818792343139648
    7. '	n' → logprob: -11.443792343139648
    8. ' ,' → logprob: -11.943792343139648
    9. '(int' → logprob: -12.193792343139648
    10. '   ' → logprob: -12.443792343139648

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010792528046295047
    2. ')' → logprob: -7.751079082489014
    3. ' ):' → logprob: -8.001079559326172
    4. '):
' → logprob: -8.501079559326172
    5. ':' → logprob: -9.626079559326172
    6. '   ' → logprob: -10.626079559326172
    7. '+' → logprob: -12.376079559326172
    8. ',' → logprob: -12.751079559326172
    9. '):
' → logprob: -12.751079559326172
    10. ' )' → logprob: -13.501079559326172

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7930236458778381
    2. '   ' → logprob: -0.9180236458778381
    3. '    ' → logprob: -2.4180235862731934
    4. ' ' → logprob: -3.0430235862731934
    5. '<|end|>' → logprob: -4.668023586273193
    6. '  ' → logprob: -8.043024063110352
    7. ',' → logprob: -8.043024063110352
    8. '<|end|>' → logprob: -8.543024063110352
    9. '     ' → logprob: -8.793024063110352
    10. ')' → logprob: -8.793024063110352

Token 37: ' line' (ID: 2543)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.061759933829307556
    2. ' name' → logprob: -3.4367599487304688
    3. 'item' → logprob: -4.311759948730469
    4. ' product' → logprob: -5.311759948730469
    5. ' line' → logprob: -5.686759948730469
    6. ' items' → logprob: -6.061759948730469
    7. ' price' → logprob: -6.811759948730469
    8. ' s' → logprob: -7.186759948730469
    9. 'name' → logprob: -7.186759948730469
    10. ' ' → logprob: -8.061759948730469

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013572560856118798
    2. '=' → logprob: -6.626357078552246
    3. '   ' → logprob: -11.876357078552246
    4. '=line' → logprob: -12.001357078552246
    5. ' ' → logprob: -12.251357078552246
    6. '_items' → logprob: -12.376357078552246
    7. 's' → logprob: -12.876357078552246
    8. ',' → logprob: -13.251357078552246
    9. '_' → logprob: -13.376357078552246
    10. '_input' → logprob: -14.126357078552246

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026334203779697418
    2. 'input' → logprob: -3.651334285736084
    3. ' ' → logprob: -10.401333808898926
    4. '	input' → logprob: -13.651333808898926
    5. '=input' → logprob: -14.151333808898926
    6. '   ' → logprob: -15.151333808898926
    7. ' ' → logprob: -15.276333808898926
    8. ' list' → logprob: -16.026334762573242
    9. ' int' → logprob: -16.338834762573242
    10. '(input' → logprob: -16.401334762573242

Token 40: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003131784324068576
    2. '().' → logprob: -8.125312805175781
    3. '(' → logprob: -11.875312805175781
    4. '())' → logprob: -12.750312805175781
    5. '()
' → logprob: -13.125312805175781
    6. '()`' → logprob: -13.875312805175781
    7. '('' → logprob: -14.000312805175781
    8. ' ()' → logprob: -14.250312805175781
    9. '()>' → logprob: -14.750312805175781
    10. '()

' → logprob: -14.875312805175781

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.049364011734724045
    2. 'strip' → logprob: -3.0493640899658203
    3. 'rstrip' → logprob: -7.17436408996582
    4. ' split' → logprob: -12.17436408996582
    5. 'rs' → logprob: -12.42436408996582
    6. 'spl' → logprob: -14.54936408996582
    7. 'replace' → logprob: -15.17436408996582
    8. ' strip' → logprob: -15.42436408996582
    9. 's' → logprob: -16.79936408996582
    10. '(split' → logprob: -16.92436408996582

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009070792235434055
    2. '('' → logprob: -4.759070873260498
    3. '(' → logprob: -7.759070873260498
    4. '())' → logprob: -11.13407039642334
    5. '()]' → logprob: -12.63407039642334
    6. '("' → logprob: -12.75907039642334
    7. ' ()' → logprob: -13.00907039642334
    8. '()
' → logprob: -13.50907039642334
    9. '(None' → logprob: -14.50907039642334
    10. '("("' → logprob: -14.50907039642334

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6290773153305054
    2. '       ' → logprob: -1.6290773153305054
    3. '<|end|>' → logprob: -1.8790773153305054
    4. 'items' → logprob: -3.129077434539795
    5. ' items' → logprob: -4.004077434539795
    6. ' ' → logprob: -4.379077434539795
    7. '[' → logprob: -4.379077434539795
    8. '```' → logprob: -5.629077434539795
    9. 'price' → logprob: -5.754077434539795
    10. 'item' → logprob: -6.004077434539795

Token 44: ' name' (ID: 1308)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.7096254229545593
    2. 'item' → logprob: -1.209625482559204
    3. ' items' → logprob: -2.209625482559204
    4. 'name' (adapté à ' name') → logprob: -2.709625482559204
    5. ' item' → logprob: -3.834625482559204
    6. 'price' → logprob: -5.584625244140625
    7. ' name' → logprob: -5.834625244140625
    8. 'product' → logprob: -6.334625244140625
    9. ' ' → logprob: -7.209625244140625
    10. ' product' → logprob: -7.709625244140625

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10899009555578232
    2. ',' → logprob: -2.48399019241333
    3. '=' → logprob: -3.98399019241333
    4. '[' → logprob: -7.85899019241333
    5. ' ,' → logprob: -8.483989715576172
    6. ' ' → logprob: -8.733989715576172
    7. ')' → logprob: -8.858989715576172
    8. '<|end|>' → logprob: -9.608989715576172
    9. '_' → logprob: -9.983989715576172
    10. '_name' → logprob: -10.233989715576172

Token 46: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.47409260272979736
    2. 'line' → logprob: -0.9740926027297974
    3. '(line' → logprob: -11.974092483520508
    4. '[line' → logprob: -12.724092483520508
    5. '	line' → logprob: -13.099092483520508
    6. ' ' → logprob: -13.224092483520508
    7. '=line' → logprob: -13.849092483520508
    8. '#line' → logprob: -14.599092483520508
    9. ''' → logprob: -15.099092483520508
    10. '    ' → logprob: -15.849092483520508

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019588442519307137
    2. '0' → logprob: -6.251958847045898
    3. '[-' → logprob: -11.126958847045898
    4. ' [' → logprob: -11.876958847045898
    5. ' ' → logprob: -13.001958847045898
    6. '1' → logprob: -13.376958847045898
    7. '[:' → logprob: -13.876958847045898
    8. '[:-' → logprob: -14.001958847045898
    9. '```' → logprob: -14.126958847045898
    10. 's' → logprob: -15.751958847045898

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012011249782517552
    2. ' ' → logprob: -9.500120162963867
    3. '1' → logprob: -10.125120162963867
    4. '-' → logprob: -12.500120162963867
    5. '2' → logprob: -14.562620162963867
    6. ']' → logprob: -15.687620162963867
    7. '   ' → logprob: -15.937620162963867
    8. ' -' → logprob: -16.187620162963867
    9. '```' → logprob: -16.500120162963867
    10. '3' → logprob: -16.562620162963867

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004168489249423146
    2. ' ]' → logprob: -7.8754167556762695
    3. '<|end|>' → logprob: -10.87541675567627
    4. ']
' → logprob: -11.12541675567627
    5. ')' → logprob: -14.12541675567627
    6. '<|end|>' → logprob: -14.87541675567627
    7. '],' → logprob: -15.25041675567627
    8. ']int' → logprob: -15.25041675567627
    9. '']' → logprob: -15.25041675567627
    10. ' ' → logprob: -15.50041675567627

Token 50: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27007725834846497
    2. '<|end|>' → logprob: -2.5200772285461426
    3. 'price' → logprob: -2.7700772285461426
    4. ' price' → logprob: -3.3950772285461426
    5. ' items' → logprob: -3.7700772285461426
    6. 'items' → logprob: -4.895077228546143
    7. ',' → logprob: -5.645077228546143
    8. ' ,' → logprob: -5.770077228546143
    9. '	price' → logprob: -5.770077228546143
    10. ' prices' → logprob: -6.145077228546143

Token 51: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' (adapté à ' price') → logprob: -0.056404393166303635
    2. ' price' → logprob: -2.9314043521881104
    3. 'int' → logprob: -7.8064045906066895
    4. 'items' → logprob: -8.056404113769531
    5. 'float' → logprob: -8.681404113769531
    6. 'prices' → logprob: -9.181404113769531
    7. 'cost' → logprob: -9.431404113769531
    8. 'value' → logprob: -9.556404113769531
    9. 'p' → logprob: -9.681404113769531
    10. 'quantity' → logprob: -9.931404113769531

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427973061800003
    2. '=' → logprob: -2.0177972316741943
    3. ' ' → logprob: -9.517797470092773
    4. '=int' → logprob: -11.142797470092773
    5. ',' → logprob: -11.767797470092773
    6. '<|end|>' → logprob: -11.767797470092773
    7. ')' → logprob: -12.392797470092773
    8. 's' → logprob: -12.642797470092773
    9. '<|end|>' → logprob: -12.767797470092773
    10. '_' → logprob: -13.392797470092773

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5313376188278198
    2. 'int' → logprob: -0.9063376188278198
    3. ' float' → logprob: -5.156337738037109
    4. 'float' → logprob: -6.031337738037109
    5. ' ' → logprob: -11.53133773803711
    6. '=int' → logprob: -13.78133773803711
    7. '[int' → logprob: -13.90633773803711
    8. '(int' → logprob: -14.15633773803711
    9. '	int' → logprob: -14.15633773803711
    10. '<int' → logprob: -14.53133773803711

Token 54: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.20142288506031036
    2. '(' → logprob: -1.701422929763794
    3. ' line' → logprob: -12.576422691345215
    4. ')' → logprob: -12.951422691345215
    5. ' (' → logprob: -13.701422691345215
    6. '(
' → logprob: -14.326422691345215
    7. 'line' → logprob: -14.326422691345215
    8. '(

' → logprob: -14.951422691345215
    9. '=line' → logprob: -14.951422691345215
    10. '#line' → logprob: -15.326422691345215

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002593130338937044
    2. ']' → logprob: -8.625259399414062
    3. '])' → logprob: -10.625259399414062
    4. '[-' → logprob: -10.750259399414062
    5. ')' → logprob: -11.125259399414062
    6. '1' → logprob: -12.000259399414062
    7. ' [' → logprob: -12.250259399414062
    8. '][' → logprob: -12.625259399414062
    9. '[line' → logprob: -12.875259399414062
    10. '   ' → logprob: -14.375259399414062

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00042768914136104286
    2. '2' → logprob: -8.75042724609375
    3. ' ' → logprob: -9.00042724609375
    4. '-' → logprob: -9.62542724609375
    5. '])' → logprob: -10.37542724609375
    6. '0' → logprob: -11.12542724609375
    7. ']' → logprob: -11.25042724609375
    8. '3' → logprob: -12.37542724609375
    9. '   ' → logprob: -12.93792724609375
    10. ')' → logprob: -13.00042724609375

Token 57: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06302304565906525
    2. '])' → logprob: -2.813023090362549
    3. ']' → logprob: -7.063023090362549
    4. ' )' → logprob: -9.81302261352539
    5. ')])' → logprob: -10.06302261352539
    6. '）' → logprob: -10.68802261352539
    7. ' ])' → logprob: -10.93802261352539
    8. ''])' → logprob: -11.06302261352539
    9. ')
' → logprob: -11.06302261352539
    10. ')]' → logprob: -11.93802261352539

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22182081639766693
    2. '       ' → logprob: -2.346820831298828
    3. '<|end|>' → logprob: -3.346820831298828
    4. '    
' → logprob: -4.096820831298828
    5. 'items' → logprob: -4.346820831298828
    6. '	items' → logprob: -4.596820831298828
    7. '
' → logprob: -5.096820831298828
    8. ')' → logprob: -5.096820831298828
    9. ' items' → logprob: -5.471820831298828
    10. ' ' → logprob: -5.596820831298828

Token 59: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.10552632063627243
    2. ' items' → logprob: -2.3555262088775635
    3. '   ' → logprob: -5.605526447296143
    4. '	items' → logprob: -6.730526447296143
    5. '    
' → logprob: -9.230525970458984
    6. '.items' → logprob: -9.730525970458984
    7. ' ' → logprob: -9.730525970458984
    8. ' 
' → logprob: -10.230525970458984
    9. '_items' → logprob: -10.480525970458984
    10. '    ' → logprob: -10.480525970458984

Token 60: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00010366239439463243
    2. '_' → logprob: -9.375103950500488
    3. '_prices' → logprob: -11.250103950500488
    4. '[' → logprob: -13.000103950500488
    5. '_name' → logprob: -14.125103950500488
    6. '_p' → logprob: -14.500103950500488
    7. '_cost' → logprob: -15.250103950500488
    8. '[_' → logprob: -15.375103950500488
    9. '```' → logprob: -15.625103950500488
    10. '_PRICE' → logprob: -16.000102996826172

Token 61: '[name' (ID: 23001)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12698322534561157
    2. '[name' → logprob: -2.126983165740967
    3. '[...]' → logprob: -10.751983642578125
    4. '[line' → logprob: -12.001983642578125
    5. ']' → logprob: -12.001983642578125
    6. '\[' → logprob: -12.126983642578125
    7. '[n' → logprob: -12.376983642578125
    8. '[item' → logprob: -12.751983642578125
    9. '=' → logprob: -13.376983642578125
    10. '```' → logprob: -14.001983642578125

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005629993975162506
    2. ']=' → logprob: -5.755630016326904
    3. '=' → logprob: -6.505630016326904
    4. ' ]' → logprob: -7.630630016326904
    5. ' =' → logprob: -7.755630016326904
    6. ')' → logprob: -10.255629539489746
    7. '])' → logprob: -13.880629539489746
    8. ')]' → logprob: -13.880629539489746
    9. ')=' → logprob: -14.255629539489746
    10. '[' → logprob: -14.255629539489746

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327399611473083
    2. ' =' → logprob: -1.3132740259170532
    3. ' +=' → logprob: -12.188274383544922
    4. '+=' → logprob: -12.688274383544922
    5. ' ' → logprob: -14.188274383544922
    6. ']' → logprob: -14.313274383544922
    7. ' =)' → logprob: -14.813274383544922
    8. '=

' → logprob: -14.938274383544922
    9. ')' → logprob: -15.063274383544922
    10. '＝' → logprob: -15.313274383544922

Token 64: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.018150178715586662
    2. 'price' → logprob: -4.018150329589844
    3. '	price' → logprob: -16.018150329589844
    4. '(price' → logprob: -16.393150329589844
    5. ' ' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.768150329589844
    7. '_price' → logprob: -19.518150329589844
    8. ' pric' → logprob: -19.768150329589844
    9. 'Price' → logprob: -19.893150329589844
    10. '.price' → logprob: -20.268150329589844

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48805350065231323
    2. '   ' → logprob: -1.238053560256958
    3. '<|end|>' → logprob: -2.488053560256958
    4. '    
' → logprob: -4.613053321838379
    5. ' ' → logprob: -7.488053321838379
    6. '<|end|>' → logprob: -7.613053321838379
    7. ' 
' → logprob: -7.738053321838379
    8. '  
' → logprob: -7.988053321838379
    9. '  ' → logprob: -8.238053321838379
    10. '\n' → logprob: -8.613053321838379

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11760056763887405
    2. '
' → logprob: -2.367600679397583
    3. '<|end|>' → logprob: -4.742600440979004
    4. '    
' → logprob: -5.117600440979004
    5. '  
' → logprob: -7.742600440979004
    6. ' 
' → logprob: -7.992600440979004
    7. ' ' → logprob: -8.117600440979004
    8. '\n' → logprob: -8.367600440979004
    9. '  ' → logprob: -8.617600440979004
    10. 'for' → logprob: -8.867600440979004

Token 67: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31653279066085815
    2. 'total' → logprob: -1.941532850265503
    3. 'discount' → logprob: -3.691532850265503
    4. 'sum' → logprob: -4.191532611846924
    5. '    
' → logprob: -4.316532611846924
    6. 'm' (adapté à ' m') → logprob: -4.816532611846924
    7. 'q' → logprob: -4.941532611846924
    8. 's' → logprob: -5.066532611846924
    9. 'count' → logprob: -5.441532611846924
    10. 'budget' → logprob: -5.441532611846924

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005267315078526735
    2. '=' → logprob: -5.255267143249512
    3. ' ' → logprob: -10.630267143249512
    4. '<|end|>' → logprob: -12.755267143249512
    5. '  ' → logprob: -14.130267143249512
    6. ' >' → logprob: -14.505267143249512
    7. '=int' → logprob: -14.505267143249512
    8. '    ' → logprob: -14.755267143249512
    9. '   ' → logprob: -14.755267143249512
    10. '>' → logprob: -14.755267143249512

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.35493916273117065
    2. 'int' → logprob: -1.2299392223358154
    3. ' input' → logprob: -5.354938983917236
    4. 'input' → logprob: -6.354938983917236
    5. '=int' → logprob: -12.354939460754395
    6. '[int' → logprob: -13.229939460754395
    7. '<int' → logprob: -13.479939460754395
    8. '   ' → logprob: -13.854939460754395
    9. ' ' → logprob: -14.104939460754395
    10. '(int' → logprob: -15.604939460754395

Token 70: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023252932354807854
    2. '(' → logprob: -3.7732529640197754
    3. 'input' → logprob: -12.773252487182617
    4. '(
' → logprob: -12.898252487182617
    5. '()' → logprob: -14.148252487182617
    6. ' (' → logprob: -14.273252487182617
    7. '(in' → logprob: -14.898252487182617
    8. '=input' → logprob: -15.898252487182617
    9. ' input' → logprob: -16.273252487182617
    10. '(

' → logprob: -16.773252487182617

Token 71: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31969672441482544
    2. '())' → logprob: -1.3196966648101807
    3. ')' → logprob: -5.06969690322876
    4. '()
' → logprob: -9.069696426391602
    5. '(' → logprob: -12.444696426391602
    6. '())
' → logprob: -12.694696426391602
    7. ' ())' → logprob: -13.069696426391602
    8. '();)' → logprob: -13.444696426391602
    9. '()

' → logprob: -13.819696426391602
    10. ' )' → logprob: -14.069696426391602

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03175704926252365
    2. 'items' → logprob: -5.03175687789917
    3. '    
' → logprob: -5.03175687789917
    4. '<|end|>' → logprob: -5.15675687789917
    5. 'total' → logprob: -5.53175687789917
    6. 'for' → logprob: -6.03175687789917
    7. '    ' → logprob: -6.78175687789917
    8. ' items' → logprob: -7.15675687789917
    9. '  ' → logprob: -7.28175687789917
    10. ' for' → logprob: -7.65675687789917

Token 73: ' recipes' (ID: 22649)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9078506231307983
    2. 'items' → logprob: -1.5328506231307983
    3. 'for' → logprob: -2.407850742340088
    4. 'user' → logprob: -3.282850742340088
    5. 'p' → logprob: -3.532850742340088
    6. 'result' → logprob: -3.657850742340088
    7. 'b' → logprob: -3.657850742340088
    8. 'results' → logprob: -4.157850742340088
    9. 'cost' → logprob: -4.407850742340088
    10. 'cons' → logprob: -4.907850742340088

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0171112809330225
    2. '=' → logprob: -4.642111301422119
    3. '_' → logprob: -5.017111301422119
    4. '_price' → logprob: -8.017110824584961
    5. '_prices' → logprob: -8.767110824584961
    6. '_items' → logprob: -9.642110824584961
    7. '_cost' → logprob: -10.017110824584961
    8. 's' → logprob: -10.517110824584961
    9. ' ' → logprob: -11.642110824584961
    10. '_count' → logprob: -12.142110824584961

Token 75: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.40712228417396545
    2. ' []' → logprob: -1.907122254371643
    3. ' {}' → logprob: -2.1571223735809326
    4. '[]' → logprob: -2.6571223735809326
    5. '[' → logprob: -10.157122611999512
    6. ' ' → logprob: -10.532122611999512
    7. '   ' → logprob: -11.157122611999512
    8. '{' → logprob: -11.282122611999512
    9. ' {' → logprob: -12.032122611999512
    10. '={}' → logprob: -12.282122611999512

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005789305083453655
    2. ' for' → logprob: -6.005789279937744
    3. 'for' → logprob: -6.505789279937744
    4. '<|end|>' → logprob: -6.505789279937744
    5. '	for' → logprob: -8.380789756774902
    6. '
' → logprob: -10.380789756774902
    7. '<|end|>' → logprob: -10.880789756774902
    8. '    
' → logprob: -11.130789756774902
    9. '    ' → logprob: -11.880789756774902
    10. ' ' → logprob: -12.005789756774902

Token 77: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008041187189519405
    2. ' for' → logprob: -5.1330413818359375
    3. '	for' → logprob: -6.8830413818359375
    4. '<|end|>' → logprob: -7.0080413818359375
    5. '   ' → logprob: -8.758041381835938
    6. ' ' → logprob: -12.258041381835938
    7. '<|end|>' → logprob: -12.633041381835938
    8. '    
' → logprob: -12.633041381835938
    9. '```' → logprob: -13.008041381835938
    10. ' 
' → logprob: -13.133041381835938

Token 78: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20148633420467377
    2. '_' → logprob: -1.701486349105835
    3. ' i' → logprob: -9.951486587524414
    4. ' ' → logprob: -10.951486587524414
    5. '_i' → logprob: -12.326486587524414
    6. 'i' → logprob: -12.951486587524414
    7. ' ' → logprob: -14.951486587524414
    8. '_range' → logprob: -15.701486587524414
    9. ' in' → logprob: -16.076486587524414
    10. '_m' → logprob: -16.451486587524414

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7263165712356567
    2. ' range' → logprob: -1.4763165712356567
    3. '_' → logprob: -2.351316452026367
    4. ' _' → logprob: -2.476316452026367
    5. 'range' → logprob: -2.601316452026367
    6. ' ' → logprob: -4.101316452026367
    7. 'in' → logprob: -4.101316452026367
    8. '_range' → logprob: -8.101316452026367
    9. 'm' → logprob: -8.351316452026367
    10. ' m' → logprob: -8.476316452026367

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741198420524597
    2. ' range' → logprob: -0.9741198420524597
    3. ' ' → logprob: -11.224120140075684
    4. '	range' → logprob: -11.474120140075684
    5. '(range' → logprob: -12.349120140075684
    6. 'ran' → logprob: -13.099120140075684
    7. 'm' → logprob: -13.474120140075684
    8. 'ange' → logprob: -13.474120140075684
    9. 'rang' → logprob: -13.474120140075684
    10. 'r' → logprob: -13.849120140075684

Token 81: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1307980716228485
    2. ' (' → logprob: -2.880798101425171
    3. ' m' → logprob: -3.130798101425171
    4. '(' → logprob: -3.880798101425171
    5. 'm' → logprob: -6.130797863006592
    6. ' ' → logprob: -11.75579833984375
    7. '	m' → logprob: -12.88079833984375
    8. ')' → logprob: -13.25579833984375
    9. '   ' → logprob: -13.25579833984375
    10. '<|end|>' → logprob: -14.00579833984375

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011855345219373703
    2. ':' → logprob: -4.636855125427246
    3. '):
' → logprob: -6.261855125427246
    4. '   ' → logprob: -9.761855125427246
    5. ' ):' → logprob: -10.011855125427246
    6. '():' → logprob: -10.136855125427246
    7. ')' → logprob: -10.261855125427246
    8. ':
' → logprob: -12.761855125427246
    9. ' :' → logprob: -13.011855125427246
    10. '):
' → logprob: -13.136855125427246

Token 83: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3994278013706207
    2. '       ' → logprob: -1.1494277715682983
    3. ' line' → logprob: -5.024427890777588
    4. 'line' → logprob: -5.274427890777588
    5. '    ' → logprob: -8.64942741394043
    6. '	line' → logprob: -8.64942741394043
    7. ' ' → logprob: -9.14942741394043
    8. '<|end|>' → logprob: -9.27442741394043
    9. '```' → logprob: -9.64942741394043
    10. '    
' → logprob: -10.39942741394043

Token 84: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.23095808923244476
    2. 'line' (adapté à ' line') → logprob: -1.605958104133606
    3. ' recipe' → logprob: -5.980957984924316
    4. '   ' → logprob: -6.480957984924316
    5. 'recipe' → logprob: -6.980957984924316
    6. ' parts' → logprob: -8.730957984924316
    7. 'name' → logprob: -8.980957984924316
    8. '	line' → logprob: -9.105957984924316
    9. ' name' → logprob: -10.230957984924316
    10. 'parts' → logprob: -10.980957984924316

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758805856108665
    2. '=' → logprob: -4.634758949279785
    3. '=line' → logprob: -13.634758949279785
    4. 's' → logprob: -14.759758949279785
    5. '   ' → logprob: -15.009758949279785
    6. 'line' → logprob: -15.134758949279785
    7. ' ' → logprob: -15.259758949279785
    8. ')' → logprob: -16.25975799560547
    9. '_' → logprob: -16.75975799560547
    10. '[' → logprob: -17.00975799560547

Token 86: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38691654801368713
    2. 'input' → logprob: -1.1369165182113647
    3. ' ' → logprob: -11.136916160583496
    4. '<|end|>' → logprob: -11.261916160583496
    5. '	input' → logprob: -13.011916160583496
    6. '<input' → logprob: -13.136916160583496
    7. '   ' → logprob: -13.261916160583496
    8. '(input' → logprob: -13.261916160583496
    9. '[input' → logprob: -13.386916160583496
    10. 'list' → logprob: -13.761916160583496

Token 87: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001170460251159966
    2. '()' → logprob: -6.751170635223389
    3. '(' → logprob: -16.126171112060547
    4. '()
' → logprob: -16.626171112060547
    5. ' ().' → logprob: -17.001171112060547
    6. '()

' → logprob: -17.501171112060547
    7. '.' → logprob: -17.751171112060547
    8. '.split' → logprob: -19.376171112060547
    9. '().'' → logprob: -19.501171112060547
    10. '()).' → logprob: -19.501171112060547

Token 88: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.526570384972729e-05
    2. 'strip' → logprob: -10.000055313110352
    3. 'rstrip' → logprob: -11.625055313110352
    4. ' split' → logprob: -14.625055313110352
    5. 'spl' → logprob: -15.000055313110352
    6. 'replace' → logprob: -16.87505531311035
    7. '(split' → logprob: -17.50005531311035
    8. 's' → logprob: -17.87505531311035
    9. 'rs' → logprob: -18.00005531311035
    10. 'sp' → logprob: -18.87505531311035

Token 89: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003317705122753978
    2. '(' → logprob: -9.25033187866211
    3. '()
' → logprob: -9.25033187866211
    4. '()[' → logprob: -9.25033187866211
    5. '   ' → logprob: -11.50033187866211
    6. ' ()' → logprob: -11.75033187866211
    7. '<|end|>' → logprob: -12.00033187866211
    8. '[' → logprob: -12.87533187866211
    9. '()]' → logprob: -12.87533187866211
    10. '()

' → logprob: -13.12533187866211

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9067378044128418
    2. '       ' → logprob: -0.9067378044128418
    3. ' name' → logprob: -2.281737804412842
    4. 'name' → logprob: -2.531737804412842
    5. ' recipe' → logprob: -5.531737804412842
    6. '    ' → logprob: -6.156737804412842
    7. '<|end|>' → logprob: -6.281737804412842
    8. '```' → logprob: -7.406737804412842
    9. ' ' → logprob: -7.781737804412842
    10. '        ' → logprob: -7.906737804412842

Token 91: ' out' (ID: 842)
  Prédit: 'recipe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'recipe' → logprob: -0.4621679484844208
    2. 'name' → logprob: -1.3371679782867432
    3. 'dish' → logprob: -3.212167978286743
    4. 'r' → logprob: -3.462167978286743
    5. 'rec' → logprob: -3.837167978286743
    6. 'item' → logprob: -5.212167739868164
    7. 'product' → logprob: -5.712167739868164
    8. '   ' → logprob: -6.712167739868164
    9. 'reci' → logprob: -6.837167739868164
    10. 'food' → logprob: -7.837167739868164

Token 92: '_item' (ID: 12070)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.21861465275287628
    2. '_name' → logprob: -1.8436146974563599
    3. 'come' → logprob: -4.21861457824707
    4. '_item' → logprob: -4.84361457824707
    5. '_' → logprob: -5.21861457824707
    6. 'name' → logprob: -5.71861457824707
    7. '_put' → logprob: -6.59361457824707
    8. '=' → logprob: -6.71861457824707
    9. '_product' → logprob: -7.21861457824707
    10. 'puts' → logprob: -7.46861457824707

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19148574769496918
    2. '=' → logprob: -1.8164857625961304
    3. '_name' → logprob: -4.81648588180542
    4. '_' → logprob: -6.44148588180542
    5. 's' → logprob: -7.19148588180542
    6. ' ' → logprob: -7.81648588180542
    7. '<|end|>' → logprob: -8.066485404968262
    8. 'name' → logprob: -8.441485404968262
    9. ',' → logprob: -8.566485404968262
    10. ')' → logprob: -10.191485404968262

Token 94: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06198034808039665
    2. ' line' → logprob: -2.8119802474975586
    3. '[line' → logprob: -12.061980247497559
    4. '(line' → logprob: -12.811980247497559
    5. ' ' → logprob: -13.186980247497559
    6. '	line' → logprob: -13.436980247497559
    7. '#line' → logprob: -14.811980247497559
    8. '<|end|>' → logprob: -15.436980247497559
    9. '=line' → logprob: -15.811980247497559
    10. '[' → logprob: -17.186981201171875

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013083349040243775
    2. '0' → logprob: -9.125130653381348
    3. '1' → logprob: -11.125130653381348
    4. '(' → logprob: -13.000130653381348
    5. '```' → logprob: -13.750130653381348
    6. '   ' → logprob: -14.125130653381348
    7. ' [' → logprob: -14.250130653381348
    8. '2' → logprob: -14.375130653381348
    9. ' ' → logprob: -14.875130653381348
    10. '[
' → logprob: -15.125130653381348

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016325322212651372
    2. '1' → logprob: -9.125163078308105
    3. ' ' → logprob: -10.000163078308105
    4. '[' → logprob: -12.125163078308105
    5. '2' → logprob: -13.625163078308105
    6. '-' → logprob: -14.187663078308105
    7. '   ' → logprob: -14.750163078308105
    8. ']' → logprob: -15.187663078308105
    9. '3' → logprob: -16.187664031982422
    10. '```' → logprob: -16.250164031982422

Token 97: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09691116958856583
    2. ']' → logprob: -3.0969111919403076
    3. ',' → logprob: -3.7219111919403076
    4. '<|end|>' → logprob: -4.2219109535217285
    5. ':' → logprob: -5.8469109535217285
    6. '   ' → logprob: -6.3469109535217285
    7. '       ' → logprob: -6.7219109535217285
    8. ' ' → logprob: -7.9719109535217285
    9. '])' → logprob: -8.096911430358887
    10. ' )' → logprob: -8.221911430358887

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11896548420190811
    2. ' =' → logprob: -2.7439653873443604
    3. 'num' → logprob: -4.3689656257629395
    4. '=' → logprob: -5.1189656257629395
    5. ' k' → logprob: -5.1189656257629395
    6. '   ' → logprob: -5.1189656257629395
    7. 'n' → logprob: -5.2439656257629395
    8. 'k' → logprob: -5.9939656257629395
    9. ' num' → logprob: -6.1189656257629395
    10. ':' → logprob: -6.9939656257629395

Token 99: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.08774539828300476
    2. ' k' → logprob: -3.337745428085327
    3. 'in' → logprob: -3.962745428085327
    4. 'num' → logprob: -4.462745189666748
    5. 'count' → logprob: -5.712745189666748
    6. 'cnt' → logprob: -5.962745189666748
    7. 'ingredients' → logprob: -6.212745189666748
    8. 'ing' → logprob: -6.462745189666748
    9. '   ' → logprob: -6.712745189666748
    10. ' in' → logprob: -6.837745189666748

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495687201619148
    2. '=' → logprob: -2.9299569129943848
    3. '=int' → logprob: -9.804956436157227
    4. '   ' → logprob: -11.429956436157227
    5. '  ' → logprob: -12.679956436157227
    6. ' ' → logprob: -12.679956436157227
    7. '    ' → logprob: -14.054956436157227
    8. '	' → logprob: -14.429956436157227
    9. 'int' → logprob: -16.179956436157227
    10. 'k' → logprob: -16.179956436157227

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12696610391139984
    2. 'int' → logprob: -2.1269659996032715
    3. ' ' → logprob: -10.37696647644043
    4. '=int' → logprob: -13.25196647644043
    5. '[int' → logprob: -13.37696647644043
    6. '(int' → logprob: -13.37696647644043
    7. '	int' → logprob: -13.87696647644043
    8. '<int' → logprob: -14.75196647644043
    9. ']int' → logprob: -15.25196647644043
    10. '    ' → logprob: -16.37696647644043

Token 102: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005236479919403791
    2. '(' → logprob: -5.255236625671387
    3. ' line' → logprob: -14.505236625671387
    4. ')' → logprob: -14.880236625671387
    5. 'line' → logprob: -14.880236625671387
    6. '[line' → logprob: -15.005236625671387
    7. '=line' → logprob: -15.005236625671387
    8. ' (' → logprob: -15.130236625671387
    9. '(
' → logprob: -15.380236625671387
    10. '('' → logprob: -16.00523567199707

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.24310302757658e-05
    2. '(' → logprob: -10.125072479248047
    3. '1' → logprob: -11.375072479248047
    4. ')' → logprob: -11.375072479248047
    5. ']' → logprob: -12.250072479248047
    6. ' [' → logprob: -13.500072479248047
    7. '][' → logprob: -13.625072479248047
    8. ')[' → logprob: -14.500072479248047
    9. '[line' → logprob: -15.000072479248047
    10. '   ' → logprob: -15.375072479248047

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.955703818472102e-05
    2. ' ' → logprob: -10.125059127807617
    3. '2' → logprob: -11.625059127807617
    4. '[' → logprob: -11.750059127807617
    5. '   ' → logprob: -14.312559127807617
    6. '3' → logprob: -14.687559127807617
    7. ']' → logprob: -15.062559127807617
    8. '])' → logprob: -15.125059127807617
    9. '```' → logprob: -15.750059127807617
    10. '  ' → logprob: -15.937559127807617

Token 105: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06060386076569557
    2. '])' → logprob: -3.0606038570404053
    3. ')
' → logprob: -4.560604095458984
    4. ']' → logprob: -7.060604095458984
    5. '])
' → logprob: -7.810604095458984
    6. ' )' → logprob: -8.810604095458984
    7. ' )
' → logprob: -11.435604095458984
    8. ' ' → logprob: -11.685604095458984
    9. ' ])' → logprob: -11.810604095458984
    10. ')]' → logprob: -11.935604095458984

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027023550122976303
    2. '   ' → logprob: -4.2770233154296875
    3. 'ingredients' → logprob: -5.4020233154296875
    4. 'items' → logprob: -6.0270233154296875
    5. ' items' → logprob: -6.6520233154296875
    6. 'recipe' → logprob: -6.7770233154296875
    7. ' recipe' → logprob: -6.9020233154296875
    8. ' ingredients' → logprob: -7.2770233154296875
    9. 'recipes' → logprob: -7.7770233154296875
    10. ' recipes' → logprob: -8.277023315429688

Token 107: ' in' (ID: 306)
  Prédit: ' components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' components' → logprob: -1.3859689235687256
    2. ' recipes' → logprob: -1.3859689235687256
    3. ' ingredients' → logprob: -1.7609689235687256
    4. ' recipe' → logprob: -2.3859689235687256
    5. 'ingredients' → logprob: -2.6359689235687256
    6. 'components' → logprob: -3.2609689235687256
    7. 'recipes' → logprob: -3.6359689235687256
    8. ' items' → logprob: -3.8859689235687256
    9. '       ' → logprob: -4.135969161987305
    10. 'recipe' → logprob: -4.885969161987305

Token 108: '_items' (ID: 27417)
  Prédit: 'gred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gred' → logprob: -0.49432268738746643
    2. 'puts' → logprob: -0.994322657585144
    3. '_items' → logprob: -4.494322776794434
    4. 'put' → logprob: -5.494322776794434
    5. 'red' → logprob: -5.744322776794434
    6. 'g' → logprob: -7.744322776794434
    7. 'dex' → logprob: -8.494322776794434
    8. 'items' → logprob: -8.994322776794434
    9. 's' → logprob: -9.244322776794434
    10. 'reds' → logprob: -9.369322776794434

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150640606880188
    2. '=' → logprob: -1.7015063762664795
    3. '={}' → logprob: -10.326506614685059
    4. 's' → logprob: -10.826506614685059
    5. '   ' → logprob: -11.201506614685059
    6. '=[]' → logprob: -11.576506614685059
    7. ' ' → logprob: -12.201506614685059
    8. '_items' → logprob: -12.701506614685059
    9. '=line' → logprob: -13.576506614685059
    10. '=[]
' → logprob: -13.701506614685059

Token 110: ' line' (ID: 2543)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1600782722234726
    2. ' {}' → logprob: -2.410078287124634
    3. ' []' → logprob: -3.660078287124634
    4. '[]' → logprob: -3.785078287124634
    5. 'line' → logprob: -5.160078048706055
    6. ' line' → logprob: -5.785078048706055
    7. '[line' → logprob: -7.160078048706055
    8. ' ' → logprob: -10.785078048706055
    9. '{}
' → logprob: -11.535078048706055
    10. '   ' → logprob: -11.535078048706055

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007791632786393166
    2. '2' → logprob: -4.882791519165039
    3. ' ' → logprob: -9.507791519165039
    4. ' [' → logprob: -9.882791519165039
    5. '[
' → logprob: -11.257791519165039
    6. '3' → logprob: -11.757791519165039
    7. 'from' → logprob: -12.132791519165039
    8. '(' → logprob: -12.382791519165039
    9. '   ' → logprob: -12.507791519165039
    10. '```' → logprob: -12.507791519165039

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027934910729527473
    2. ']' → logprob: -4.652935028076172
    3. ':]' → logprob: -5.527935028076172
    4. '(' → logprob: -5.652935028076172
    5. '])' → logprob: -5.902935028076172
    6. ':' → logprob: -6.152935028076172
    7. '[' → logprob: -6.277935028076172
    8. '3' → logprob: -6.902935028076172
    9. '1' → logprob: -7.152935028076172
    10. ')' → logprob: -7.277935028076172

Token 113: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.29277101159095764
    2. ':' → logprob: -1.4177709817886353
    3. '*' → logprob: -4.917770862579346
    4. '*k' → logprob: -6.167770862579346
    5. ':k' → logprob: -7.667770862579346
    6. ' :' → logprob: -7.792770862579346
    7. ' *' → logprob: -8.167771339416504
    8. ']' → logprob: -8.167771339416504
    9. ' :]' → logprob: -8.167771339416504
    10. '*:' → logprob: -8.917771339416504

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07038940489292145
    2. '   ' → logprob: -2.69538950920105
    3. '<|end|>' → logprob: -8.695389747619629
    4. '        
' → logprob: -9.445389747619629
    5. '	' → logprob: -10.695389747619629
    6. '     ' → logprob: -10.695389747619629
    7. '
' → logprob: -10.695389747619629
    8. ')' → logprob: -10.695389747619629
    9. '    
' → logprob: -11.070389747619629
    10. '           ' → logprob: -11.195389747619629

Token 115: ' recipes' (ID: 22649)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12073563039302826
    2. '       ' → logprob: -2.2457356452941895
    3. 'recipes' (adapté à ' recipes') → logprob: -4.9957356452941895
    4. ' recipes' → logprob: -7.3707356452941895
    5. 'if' → logprob: -8.870735168457031
    6. ' if' → logprob: -9.370735168457031
    7. 'items' → logprob: -9.745735168457031
    8. '           ' → logprob: -10.245735168457031
    9. '<|end|>' → logprob: -11.120735168457031
    10. '    ' → logprob: -11.120735168457031

Token 116: '[out' (ID: 121783)
  Prédit: '[out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[out' → logprob: -0.002306911861523986
    2. '[' → logprob: -6.127306938171387
    3. '[in' → logprob: -9.377306938171387
    4. '.setdefault' → logprob: -10.627306938171387
    5. ' [' → logprob: -12.877306938171387
    6. '\[' → logprob: -13.252306938171387
    7. '[o' → logprob: -14.002306938171387
    8. '[to' → logprob: -14.002306938171387
    9. '[end' → logprob: -14.252306938171387
    10. '
' → logprob: -14.502306938171387

Token 117: '_item' (ID: 12070)
  Prédit: '_items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.5238621830940247
    2. '_item' → logprob: -0.8988621830940247
    3. ')_' → logprob: -8.6488618850708
    4. '_' → logprob: -8.7738618850708
    5. ' _' → logprob: -8.7738618850708
    6. ']_' → logprob: -9.2738618850708
    7. ')' → logprob: -10.2738618850708
    8. ''_' → logprob: -11.2738618850708
    9. '[' → logprob: -11.5238618850708
    10. '}_' → logprob: -11.6488618850708

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0051644970662891865
    2. ' =' → logprob: -5.880164623260498
    3. ']=' → logprob: -6.755164623260498
    4. '=' → logprob: -7.005164623260498
    5. '[' → logprob: -9.13016414642334
    6. ' ]' → logprob: -9.50516414642334
    7. ')' → logprob: -10.00516414642334
    8. ']={' → logprob: -10.13016414642334
    9. ' ' → logprob: -12.63016414642334
    10. '][' → logprob: -13.38016414642334

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34846556186676025
    2. ' =' → logprob: -1.2234655618667603
    3. '[' → logprob: -11.973465919494629
    4. ' ' → logprob: -12.348465919494629
    5. '.setdefault' → logprob: -13.098465919494629
    6. '.append' → logprob: -13.223465919494629
    7. '=[]' → logprob: -13.598465919494629
    8. '=

' → logprob: -14.098465919494629
    9. '=[' → logprob: -14.223465919494629
    10. ']' → logprob: -14.723465919494629

Token 120: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10418014973402023
    2. '(in' → logprob: -2.854180097579956
    3. '[(' → logprob: -3.729180097579956
    4. ' in' → logprob: -4.979180335998535
    5. ' (' → logprob: -5.604180335998535
    6. '[in' → logprob: -5.604180335998535
    7. '{}' → logprob: -6.979180335998535
    8. '{' → logprob: -7.229180335998535
    9. ' [(' → logprob: -7.479180335998535
    10. '[]' → logprob: -8.229180335998535

Token 121: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.03253544121980667
    2. 'tems' → logprob: -3.6575355529785156
    3. 'items' → logprob: -5.282535552978516
    4. 'ems' → logprob: -7.907535552978516
    5. 'em' → logprob: -8.282535552978516
    6. 'tem' → logprob: -8.782535552978516
    7. 't' → logprob: -9.407535552978516
    8. 'it' → logprob: -9.657535552978516
    9. '{' → logprob: -9.782535552978516
    10. 'in' → logprob: -10.157535552978516

Token 122: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005014701746404171
    2. 'cost' → logprob: -6.255014896392822
    3. 'total' → logprob: -6.755014896392822
    4. '    
' → logprob: -7.630014896392822
    5. '```' → logprob: -8.005014419555664
    6. '
' → logprob: -8.505014419555664
    7. 'for' → logprob: -8.880014419555664
    8. '#' → logprob: -9.255014419555664
    9. 'def' → logprob: -9.755014419555664
    10. '       ' → logprob: -9.880014419555664

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16458860039710999
    2. 'cost' → logprob: -2.164588689804077
    3. 'total' → logprob: -4.539588451385498
    4. '    
' → logprob: -5.164588451385498
    5. 'result' → logprob: -5.789588451385498
    6. 'def' → logprob: -5.914588451385498
    7. 'prices' → logprob: -6.039588451385498
    8. ' cost' → logprob: -6.164588451385498
    9. '#' → logprob: -6.664588451385498
    10. '
' → logprob: -6.664588451385498

Token 124: ' target' (ID: 3783)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.27492204308509827
    2. 'def' → logprob: -1.8999220132827759
    3. 'total' → logprob: -3.2749221324920654
    4. 'dp' → logprob: -4.774921894073486
    5. 'needed' → logprob: -5.024921894073486
    6. 'result' → logprob: -5.524921894073486
    7. 'results' → logprob: -5.649921894073486
    8. ' cost' → logprob: -5.774921894073486
    9. 'prices' → logprob: -5.774921894073486
    10. 'needs' → logprob: -5.899921894073486

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15755343437194824
    2. '_price' → logprob: -2.9075534343719482
    3. '_' → logprob: -3.0325534343719482
    4. '=' → logprob: -3.6575534343719482
    5. '_item' → logprob: -4.157553672790527
    6. '_items' → logprob: -7.157553672790527
    7. '_cost' → logprob: -7.782553672790527
    8. '_name' → logprob: -9.157553672790527
    9. '_product' → logprob: -10.407553672790527
    10. '_prices' → logprob: -10.407553672790527

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740908145904541
    2. ' input' → logprob: -0.9740908145904541
    3. 'list' → logprob: -11.974090576171875
    4. ' list' → logprob: -12.599090576171875
    5. '   ' → logprob: -13.724090576171875
    6. ' ' → logprob: -14.099090576171875
    7. 'items' → logprob: -14.849090576171875
    8. 'in' → logprob: -14.974090576171875
    9. '	input' → logprob: -15.099090576171875
    10. '(input' → logprob: -15.599090576171875

Token 127: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001657565007917583
    2. '(' → logprob: -8.875165939331055
    3. '().' → logprob: -10.875165939331055
    4. ' ()' → logprob: -12.750165939331055
    5. '()`' → logprob: -14.250165939331055
    6. '('' → logprob: -14.625165939331055
    7. '())' → logprob: -14.750165939331055
    8. '()
' → logprob: -14.750165939331055
    9. '()

' → logprob: -15.000165939331055
    10. '()>' → logprob: -15.250165939331055

Token 128: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1898132860660553
    2. '   ' → logprob: -1.939813256263733
    3. 'cost' → logprob: -4.189813137054443
    4. 'if' → logprob: -5.314813137054443
    5. ' if' → logprob: -6.439813137054443
    6. 'total' → logprob: -6.564813137054443
    7. '
' → logprob: -6.689813137054443
    8. '    
' → logprob: -6.814813137054443
    9. 'price' → logprob: -6.939813137054443
    10. 'prices' → logprob: -7.189813137054443

Token 129: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0869390144944191
    2. 'cost' → logprob: -2.5869390964508057
    3. 'if' → logprob: -5.211938858032227
    4. 'dp' → logprob: -6.711938858032227
    5. 'from' → logprob: -7.586938858032227
    6. 'stack' → logprob: -8.586938858032227
    7. 'prices' → logprob: -9.086938858032227
    8. '#' (adapté à ' #') → logprob: -9.086938858032227
    9. 'total' → logprob: -9.586938858032227
    10. 'result' → logprob: -9.711938858032227

Token 130: ' メ' (ID: 60677)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05252750217914581
    2. 'cost' → logprob: -3.67752742767334
    3. 'from' → logprob: -4.05252742767334
    4. '#' → logprob: -5.55252742767334
    5. 'import' → logprob: -6.67752742767334
    6. 'total' → logprob: -7.30252742767334
    7. ' def' → logprob: -7.42752742767334
    8. 'dp' → logprob: -7.67752742767334
    9. 'if' → logprob: -8.17752742767334
    10. 'visited' → logprob: -8.42752742767334

Token 131: 'モ' (ID: 37938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.310687392950058
    2. 'モ' → logprob: -1.8106874227523804
    3. '#' → logprob: -3.310687303543091
    4. 'total' → logprob: -3.560687303543091
    5. 'cost' → logprob: -3.935687303543091
    6. 'mon' → logprob: -5.43568754196167
    7. 'count' → logprob: -5.93568754196167
    8. 'price' → logprob: -6.06068754196167
    9. '```' → logprob: -6.06068754196167
    10. '   ' → logprob: -6.18568754196167

Token 132: '化' (ID: 11415)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3937588036060333
    2. '化' → logprob: -2.143758773803711
    3. '_cache' → logprob: -2.268758773803711
    4. ' =' → logprob: -3.643758773803711
    5. '=' → logprob: -4.393758773803711
    6. ':' → logprob: -4.518758773803711
    7. 'ization' → logprob: -4.893758773803711
    8. '_dict' → logprob: -4.893758773803711
    9. '}' → logprob: -5.768758773803711
    10. '={}' → logprob: -5.893758773803711

Token 133: 'によ' (ID: 158777)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5045440196990967
    2. 'def' → logprob: -1.7545440196990967
    3. 'dp' → logprob: -2.3795440196990967
    4. 'cache' → logprob: -3.1295440196990967
    5. '_cost' → logprob: -4.129544258117676
    6. 'prices' → logprob: -4.129544258117676
    7. 'memo' → logprob: -4.254544258117676
    8. '_' → logprob: -4.504544258117676
    9. 'd' → logprob: -5.754544258117676
    10. '   ' → logprob: -5.754544258117676

Token 134: 'る' (ID: 6996)
  Prédit: '存'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '存' → logprob: -0.3767854571342468
    2. 'ン' → logprob: -2.8767855167388916
    3. 'ん' → logprob: -3.1267855167388916
    4. 'る' → logprob: -3.2517855167388916
    5. 'ント' → logprob: -3.5017855167388916
    6. '完' → logprob: -4.1267852783203125
    7. '続' → logprob: -4.2517852783203125
    8. 'て' → logprob: -4.5017852783203125
    9. '端' → logprob: -4.6267852783203125
    10. 'ンド' → logprob: -4.7517852783203125

Token 135: '再' (ID: 29020)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001925182994455099
    2. ' def' → logprob: -6.876924991607666
    3. 'dp' → logprob: -8.001925468444824
    4. 'import' → logprob: -8.501925468444824
    5. 'dfs' → logprob: -8.751925468444824
    6. 'cost' → logprob: -8.751925468444824
    7. '再' → logprob: -11.876925468444824
    8. 'from' → logprob: -12.001925468444824
    9. ' cost' → logprob: -12.126925468444824
    10. 'd' → logprob: -12.626925468444824

Token 136: '帰' (ID: 166949)
  Prédit: '帰'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '帰' → logprob: -4.7994282795116305e-05
    2. '起' → logprob: -10.37504768371582
    3. '   ' → logprob: -12.62504768371582
    4. '試' → logprob: -12.75004768371582
    5. '#' → logprob: -13.62504768371582
    6. '```' → logprob: -13.87504768371582
    7. '利用' → logprob: -14.00004768371582
    8. 'ursion' → logprob: -14.12504768371582
    9. 'c' → logprob: -14.37504768371582
    10. '課' → logprob: -14.50004768371582

Token 137: '的' (ID: 1616)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007968575693666935
    2. '   ' → logprob: -4.882968425750732
    3. 'import' → logprob: -8.75796890258789
    4. '    
' → logprob: -9.38296890258789
    5. ' def' → logprob: -9.50796890258789
    6. '
' → logprob: -10.63296890258789
    7. 'from' → logprob: -12.00796890258789
    8. 'de' → logprob: -12.50796890258789
    9. 'indent' → logprob: -12.75796890258789
    10. '	def' → logprob: -13.25796890258789

Token 138: 'な' (ID: 5784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022232824936509132
    2. '計' → logprob: -4.272233009338379
    3. ' def' → logprob: -6.522233009338379
    4. '#' → logprob: -6.647233009338379
    5. '解' → logprob: -7.022233009338379
    6. 'な' → logprob: -7.022233009338379
    7. '価格' → logprob: -7.022233009338379
    8. 'dfs' → logprob: -7.522233009338379
    9. '探索' → logprob: -7.522233009338379
    10. '関' → logprob: -8.272233009338379

Token 139: '最' (ID: 5889)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005206955596804619
    2. 'cost' → logprob: -5.755207061767578
    3. '計' → logprob: -6.505207061767578
    4. ' def' → logprob: -8.755207061767578
    5. '価格' → logprob: -9.130207061767578
    6. '解' → logprob: -9.255207061767578
    7. 'コ' → logprob: -10.255207061767578
    8. 'calc' → logprob: -10.380207061767578
    9. 'price' → logprob: -10.880207061767578
    10. '定' → logprob: -11.630207061767578

Token 140: '小' (ID: 5820)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5381094813346863
    2. '定' → logprob: -2.163109540939331
    3. '帰' → logprob: -2.163109540939331
    4. '解' → logprob: -3.038109540939331
    5. '続' → logprob: -3.663109540939331
    6. '計' → logprob: -3.913109540939331
    7. '期' → logprob: -4.288109302520752
    8. '義' → logprob: -4.538109302520752
    9. '復' → logprob: -4.663109302520752
    10. '発' → logprob: -5.038109302520752

Token 141: '費' (ID: 33778)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2899543344974518
    2. 'コ' → logprob: -1.4149543046951294
    3. 'def' → logprob: -6.03995418548584
    4. '価格' → logprob: -6.03995418548584
    5. '費' → logprob: -6.41495418548584
    6. ' cost' → logprob: -6.66495418548584
    7. 'price' → logprob: -7.53995418548584
    8. '_cost' → logprob: -8.53995418548584
    9. '購入' → logprob: -9.41495418548584
    10. 'import' → logprob: -10.16495418548584

Token 142: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -2.47495681833243e-05
    2. '```' → logprob: -12.125024795532227
    3. '数' → logprob: -12.625024795532227
    4. '용' → logprob: -13.250024795532227
    5. '{
' → logprob: -13.375024795532227
    6. '   ' → logprob: -13.750024795532227
    7. 'cost' → logprob: -13.875024795532227
    8. '費' → logprob: -13.875024795532227
    9. '#' → logprob: -14.125024795532227
    10. '-' → logprob: -14.375024795532227

Token 143: '計' (ID: 37662)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05301545187830925
    2. '   ' → logprob: -3.0530154705047607
    3. '
' → logprob: -6.178015232086182
    4. 'cost' → logprob: -6.803015232086182
    5. 'import' → logprob: -7.178015232086182
    6. '    
' → logprob: -8.55301570892334
    7. ' def' → logprob: -9.30301570892334
    8. 'from' → logprob: -9.92801570892334
    9. '    ' → logprob: -10.80301570892334
    10. '_cost' → logprob: -10.92801570892334

Token 144: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -9.05499910004437e-05
    2. '```' → logprob: -9.500090599060059
    3. '算法' → logprob: -12.125090599060059
    4. 's' → logprob: -12.875090599060059
    5. 'algorithm' → logprob: -13.625090599060059
    6. '   ' → logprob: -13.750090599060059
    7. 'def' → logprob: -14.750090599060059
    8. '``' → logprob: -14.750090599060059
    9. 'Algorithm' → logprob: -15.000090599060059
    10. '#' → logprob: -15.000090599060059

Token 145: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020871879532933235
    2. '   ' → logprob: -3.895871877670288
    3. '
' → logprob: -8.895872116088867
    4. 'import' → logprob: -9.520872116088867
    5. '    
' → logprob: -9.770872116088867
    6. ' def' → logprob: -10.145872116088867
    7. 'from' → logprob: -11.145872116088867
    8. '	def' → logprob: -13.145872116088867
    9. 'de' → logprob: -13.520872116088867
    10. 'cost' → logprob: -14.020872116088867

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022284235805273056
    2. ' memo' → logprob: -4.897284030914307
    3. 'memo' → logprob: -5.022284030914307
    4. 'def' → logprob: -6.147284030914307
    5. 'import' → logprob: -6.397284030914307
    6. '    
' → logprob: -6.647284030914307
    7. 'cost' → logprob: -7.022284030914307
    8. 'dp' → logprob: -7.272284030914307
    9. 'mem' → logprob: -7.522284030914307
    10. '
' → logprob: -9.022284507751465

Token 147: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.6336361765861511
    2. 'def' → logprob: -2.008636236190796
    3. 'cost' → logprob: -2.008636236190796
    4. 'dp' → logprob: -2.508636236190796
    5. ' memo' → logprob: -2.633636236190796
    6. 'cache' → logprob: -4.383635997772217
    7. 'from' → logprob: -4.383635997772217
    8. 'import' → logprob: -4.508635997772217
    9. ' dp' → logprob: -5.008635997772217
    10. ' cost' → logprob: -6.508635997772217

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410470247268677
    2. '=' → logprob: -0.9741047024726868
    3. '＝' → logprob: -11.099104881286621
    4. '={}' → logprob: -12.474104881286621
    5. 'def' → logprob: -13.224104881286621
    6. '={' → logprob: -13.724104881286621
    7. '[' → logprob: -13.974104881286621
    8. ':' → logprob: -13.974104881286621
    9. '_' → logprob: -14.099104881286621
    10. '.setdefault' → logprob: -14.474104881286621

Token 149: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.128163257315464e-07
    2. ' {}' → logprob: -15.5
    3. '{})' → logprob: -17.75
    4. 'dict' → logprob: -18.25
    5. '{' → logprob: -18.875
    6. '{}
' → logprob: -19.0
    7. '{},' → logprob: -19.25
    8. '={}' → logprob: -20.0
    9. '{}

' → logprob: -20.125
    10. '   ' → logprob: -21.625

Token 150: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12704233825206757
    2. '   ' → logprob: -2.127042293548584
    3. ' def' → logprob: -9.377042770385742
    4. '    
' → logprob: -11.377042770385742
    5. '
' → logprob: -11.502042770385742
    6. ')' → logprob: -12.252042770385742
    7. 'while' → logprob: -13.877042770385742
    8. '	def' → logprob: -14.252042770385742
    9. '    ' → logprob: -15.127042770385742
    10. '<|end|>' → logprob: -15.252042770385742

Token 151: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004822697374038398
    2. '   ' → logprob: -7.750482082366943
    3. ' def' → logprob: -10.375482559204102
    4. '
' → logprob: -10.875482559204102
    5. '    
' → logprob: -14.625482559204102
    6. 'de' → logprob: -15.000482559204102
    7. 'for' → logprob: -15.750482559204102
    8. '```' → logprob: -16.0004825592041
    9. ')' → logprob: -16.1254825592041
    10. '	def' → logprob: -16.2504825592041

Token 152: ' cost' (ID: 3097)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -1.3437590599060059
    2. ' calc' → logprob: -1.4687590599060059
    3. ' dfs' → logprob: -1.9687590599060059
    4. 'dfs' → logprob: -2.218759059906006
    5. 'cost' → logprob: -2.593759059906006
    6. ' get' → logprob: -2.718759059906006
    7. 'min' → logprob: -3.218759059906006
    8. 'get' → logprob: -3.593759059906006
    9. ' min' → logprob: -3.718759059906006
    10. ' cost' → logprob: -4.218759059906006

Token 153: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.06540460884571075
    2. '(' → logprob: -2.8154046535491943
    3. ' (' → logprob: -6.315404415130615
    4. '(name' → logprob: -6.565404415130615
    5. '(target' → logprob: -8.940404891967773
    6. '(x' → logprob: -10.940404891967773
    7. '(
' → logprob: -11.190404891967773
    8. '(key' → logprob: -11.690404891967773
    9. '(node' → logprob: -11.690404891967773
    10. '(Item' → logprob: -12.440404891967773

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009511216776445508
    2. '):
' → logprob: -7.625951290130615
    3. ')' → logprob: -7.750951290130615
    4. '(item' → logprob: -11.125950813293457
    5. ' ):' → logprob: -11.625950813293457
    6. ',' → logprob: -13.000950813293457
    7. '):

' → logprob: -13.750950813293457
    8. ':' → logprob: -13.875950813293457
    9. 'item' → logprob: -14.000950813293457
    10. '):
' → logprob: -14.125950813293457

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6242592334747314
    2. '(' → logprob: -1.1242592334747314
    3. '   ' → logprob: -2.3742592334747314
    4. ':' → logprob: -3.3742592334747314
    5. '    ' → logprob: -5.749258995056152
    6. '<|end|>' → logprob: -5.749258995056152
    7. ' (' → logprob: -6.749258995056152
    8. ' if' → logprob: -6.749258995056152
    9. '():' → logprob: -7.124258995056152
    10. ')' → logprob: -7.249258995056152

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1346561759710312
    2. ' if' → logprob: -2.1346561908721924
    3. '   ' → logprob: -4.884655952453613
    4. '    ' → logprob: -9.384655952453613
    5. '       ' → logprob: -10.509655952453613
    6. '	if' → logprob: -11.384655952453613
    7. ' ' → logprob: -11.634655952453613
    8. '  ' → logprob: -12.884655952453613
    9. '    
' → logprob: -14.134655952453613
    10. 'If' → logprob: -15.009655952453613

Token 157: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.04858850687742233
    2. ' item' → logprob: -3.048588514328003
    3. '	item' → logprob: -14.298588752746582
    4. ')item' → logprob: -15.048588752746582
    5. '(item' → logprob: -16.048587799072266
    6. '=item' → logprob: -16.923587799072266
    7. '[item' → logprob: -17.298587799072266
    8. ':item' → logprob: -17.423587799072266
    9. ' in' → logprob: -17.673587799072266
    10. ' ' → logprob: -18.173587799072266

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14010615646839142
    2. 'in' → logprob: -2.140106201171875
    3. ' not' → logprob: -4.390106201171875
    4. 'not' → logprob: -7.390106201171875
    5. ' ' → logprob: -10.140106201171875
    6. ')' → logprob: -11.140106201171875
    7. '==' → logprob: -12.140106201171875
    8. ' ==' → logprob: -12.640106201171875
    9. '[' → logprob: -13.140106201171875
    10. ' )' → logprob: -13.265106201171875

Token 159: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.5246202349662781
    2. 'memo' → logprob: -0.8996202349662781
    3. ' items' → logprob: -7.149620056152344
    4. 'items' → logprob: -7.274620056152344
    5. ' ' → logprob: -12.399620056152344
    6. 'm' → logprob: -13.024620056152344
    7. '.memo' → logprob: -13.399620056152344
    8. '   ' → logprob: -13.399620056152344
    9. 'mem' → logprob: -13.524620056152344
    10. ' meme' → logprob: -13.649620056152344

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018096525454893708
    2. ':
' → logprob: -6.376809597015381
    3. ':return' → logprob: -9.251810073852539
    4. '):' → logprob: -11.626810073852539
    5. ' :' → logprob: -14.251810073852539
    6. '   ' → logprob: -14.251810073852539
    7. '):
' → logprob: -15.001810073852539
    8. '       ' → logprob: -15.251810073852539
    9. ')' → logprob: -15.501810073852539
    10. ':
' → logprob: -16.00181007385254

Token 161: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10495784133672714
    2. ':' → logprob: -2.3549578189849854
    3. ':
' → logprob: -6.3549580574035645
    4. ':return' → logprob: -6.4799580574035645
    5. '           ' → logprob: -7.1049580574035645
    6. ' return' → logprob: -7.8549580574035645
    7. 'return' → logprob: -8.979957580566406
    8. '   ' → logprob: -10.104957580566406
    9. ')' → logprob: -10.854957580566406
    10. '<|end|>' → logprob: -11.104957580566406

Token 162: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08300333470106125
    2. 'return' (adapté à ' return') → logprob: -2.708003282546997
    3. '           ' → logprob: -4.458003520965576
    4. '       ' → logprob: -6.833003520965576
    5. ':return' → logprob: -8.708003044128418
    6. ' 
' → logprob: -10.083003044128418
    7. '               ' → logprob: -10.583003044128418
    8. '
' → logprob: -10.958003044128418
    9. ')' → logprob: -11.208003044128418
    10. '   ' → logprob: -11.458003044128418

Token 163: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.47407791018486023
    2. 'memo' → logprob: -0.9740779399871826
    3. 'm' → logprob: -14.349078178405762
    4. ' meme' → logprob: -15.724078178405762
    5. '.memo' → logprob: -16.849077224731445
    6. ' memoir' → logprob: -16.849077224731445
    7. 'mem' → logprob: -17.099077224731445
    8. ' ' → logprob: -17.474077224731445
    9. '   ' → logprob: -17.724077224731445
    10. 'mime' → logprob: -18.724077224731445

Token 164: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -0.0006502442411147058
    2. 'item' → logprob: -8.000650405883789
    3. '(item' → logprob: -8.750650405883789
    4. '       ' → logprob: -10.000650405883789
    5. '   ' → logprob: -10.250650405883789
    6. ',item' → logprob: -11.000650405883789
    7. '=item' → logprob: -11.750650405883789
    8. '[' → logprob: -11.875650405883789
    9. ')item' → logprob: -11.875650405883789
    10. 'getitem' → logprob: -11.875650405883789

Token 165: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018125949427485466
    2. ')
' → logprob: -4.643126010894775
    3. ']' → logprob: -4.893126010894775
    4. '       ' → logprob: -7.893126010894775
    5. ']
' → logprob: -8.768125534057617
    6. ' )' → logprob: -8.768125534057617
    7. '])' → logprob: -9.518125534057617
    8. '）' → logprob: -10.518125534057617
    9. '   ' → logprob: -10.643125534057617
    10. '
' → logprob: -12.393125534057617

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006918899714946747
    2. '<|end|>' → logprob: -5.131918907165527
    3. '
' → logprob: -7.256918907165527
    4. '        
' → logprob: -8.506918907165527
    5. '<|end|>' → logprob: -11.006918907165527
    6. ' if' → logprob: -11.006918907165527
    7. '   ' → logprob: -11.631918907165527
    8. ')' → logprob: -11.631918907165527
    9. ',' → logprob: -11.756918907165527
    10. '        ' → logprob: -12.006918907165527

Token 167: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.256317138671875
    2. ' if' → logprob: -1.881317138671875
    3. '       ' → logprob: -2.631317138671875
    4. '   ' → logprob: -6.381317138671875
    5. '<|end|>' → logprob: -10.756317138671875
    6. '	if' → logprob: -12.006317138671875
    7. '
' → logprob: -13.256317138671875
    8. '<|end|>' → logprob: -13.631317138671875
    9. '        
' → logprob: -13.881317138671875
    10. '#' (adapté à ' #') → logprob: -14.006317138671875

Token 168: ' �' (ID: 86991)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008409536094404757
    2. ' if' → logprob: -7.12584114074707
    3. '       ' → logprob: -10.62584114074707
    4. '   ' → logprob: -11.37584114074707
    5. '	if' → logprob: -15.25084114074707
    6. 'If' → logprob: -15.75084114074707
    7. '
' → logprob: -15.87584114074707
    8. 'cost' → logprob: -15.87584114074707
    9. '#' → logprob: -16.75084114074707
    10. 'もし' → logprob: -16.87584114074707

Token 169: '�' (ID: 115)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0746290385723114
    2. 'item' → logprob: -3.074629068374634
    3. ' if' → logprob: -3.824629068374634
    4. ' item' → logprob: -7.199628829956055
    5. 'f' → logprob: -7.324628829956055
    6. 'items' → logprob: -7.324628829956055
    7. ' ' → logprob: -7.949628829956055
    8. '=item' → logprob: -7.949628829956055
    9. '[item' → logprob: -8.199628829956055
    10. '   ' → logprob: -8.824628829956055

Token 170: 'う' (ID: 8574)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06386259198188782
    2. ' if' → logprob: -3.1888625621795654
    3. 'item' → logprob: -4.0638628005981445
    4. ' item' → logprob: -6.6888628005981445
    5. 'items' → logprob: -7.3138628005981445
    6. 'f' → logprob: -7.5638628005981445
    7. '   ' → logprob: -7.8138628005981445
    8. ' ' → logprob: -8.938862800598145
    9. ' items' → logprob: -9.313862800598145
    10. ')' → logprob: -9.563862800598145

Token 171: '場合' (ID: 72486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10019771754741669
    2. '   ' → logprob: -3.1001977920532227
    3. ' if' → logprob: -3.3501977920532227
    4. '       ' → logprob: -5.225197792053223
    5. ')' → logprob: -6.725197792053223
    6. '0' → logprob: -6.850197792053223
    7. ' ' → logprob: -7.225197792053223
    8. 'f' → logprob: -7.350197792053223
    9. '#' → logprob: -7.475197792053223
    10. 'items' → logprob: -7.475197792053223

Token 172: 'の' (ID: 3385)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5532031059265137
    2. 'if' → logprob: -0.9282031059265137
    3. '   ' → logprob: -3.5532031059265137
    4. '       ' → logprob: -7.928203105926514
    5. ' ' → logprob: -8.553203582763672
    6. ')' → logprob: -9.553203582763672
    7. 's' → logprob: -9.928203582763672
    8. ',' → logprob: -10.053203582763672
    9. '  ' → logprob: -10.053203582763672
    10. '    ' → logprob: -10.303203582763672

Token 173: '値' (ID: 69555)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015748677775263786
    2. ' if' → logprob: -4.390748500823975
    3. 'cost' → logprob: -6.390748500823975
    4. 'コ' → logprob: -7.640748500823975
    5. 'elif' → logprob: -8.140748977661133
    6. '場合' → logprob: -8.515748977661133
    7. ' cost' → logprob: -9.015748977661133
    8. '   ' → logprob: -9.390748977661133
    9. '0' → logprob: -9.515748977661133
    10. ' ' → logprob: -10.390748977661133

Token 174: '段' (ID: 27561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7902439832687378
    2. '   ' → logprob: -1.1652439832687378
    3. 'if' → logprob: -1.6652439832687378
    4. '       ' → logprob: -3.2902441024780273
    5. ' ' → logprob: -5.540244102478027
    6. '  ' → logprob: -7.165244102478027
    7. '    ' → logprob: -7.290244102478027
    8. 'は' → logprob: -7.790244102478027
    9. 'が' → logprob: -8.165244102478027
    10. '　' → logprob: -8.165244102478027

Token 175: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4900803864002228
    2. 'if' → logprob: -0.9900803565979004
    3. '   ' → logprob: -4.8650803565979
    4. '       ' → logprob: -4.8650803565979
    5. ' ' → logprob: -9.490080833435059
    6. '	if' → logprob: -9.865080833435059
    7. 'items' → logprob: -10.365080833435059
    8. '    ' → logprob: -10.365080833435059
    9. 's' → logprob: -10.490080833435059
    10. ')' → logprob: -10.615080833435059

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43963634967803955
    2. ' if' → logprob: -1.1896363496780396
    3. '   ' → logprob: -3.43963623046875
    4. 'if' → logprob: -4.18963623046875
    5. '<|end|>' → logprob: -6.18963623046875
    6. ' ' → logprob: -7.56463623046875
    7. 's' → logprob: -8.06463623046875
    8. '<|end|>' → logprob: -8.56463623046875
    9. ',' → logprob: -9.06463623046875
    10. '  ' → logprob: -9.31463623046875

Token 177: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45328301191329956
    2. 'if' → logprob: -1.0782830715179443
    3. '   ' → logprob: -4.453282833099365
    4. 'items' → logprob: -5.078282833099365
    5. ' items' → logprob: -5.078282833099365
    6. ' price' → logprob: -10.328283309936523
    7. ' cost' → logprob: -10.703283309936523
    8. 'item' → logprob: -10.828283309936523
    9. 'price' → logprob: -10.953283309936523
    10. 'cost' → logprob: -11.328283309936523

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741121828556061
    2. ' =' → logprob: -0.9741121530532837
    3. '＝' → logprob: -11.224112510681152
    4. '=item' → logprob: -11.849112510681152
    5. ' ' → logprob: -12.224112510681152
    6. '   ' → logprob: -12.474112510681152
    7. 'if' → logprob: -13.349112510681152
    8. 'items' → logprob: -14.224112510681152
    9. '  ' → logprob: -14.349112510681152
    10. '=

' → logprob: -14.599112510681152

Token 179: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.07102750986814499
    2. ' items' → logprob: -2.6960275173187256
    3. 'float' → logprob: -7.0710272789001465
    4. ' float' → logprob: -8.821027755737305
    5. '10' → logprob: -11.196027755737305
    6. '0' → logprob: -11.321027755737305
    7. '   ' → logprob: -11.321027755737305
    8. ' ' → logprob: -11.321027755737305
    9. '	items' → logprob: -11.321027755737305
    10. '100' → logprob: -11.696027755737305

Token 180: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -3.128163257315464e-07
    2. '_cost' → logprob: -15.625
    3. '_' → logprob: -16.25
    4. ' _' → logprob: -17.375
    5. 'price' → logprob: -17.625
    6. '_prices' → logprob: -17.75
    7. '_PRICE' → logprob: -19.125
    8. '._' → logprob: -19.875
    9. '_code' → logprob: -20.25
    10. '[_' → logprob: -20.375

Token 181: '[item' (ID: 62534)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0019305398454889655
    2. '[item' → logprob: -6.2519307136535645
    3. '.' → logprob: -13.501930236816406
    4. ' .' → logprob: -14.376930236816406
    5. '.setdefault' → logprob: -17.876930236816406
    6. 'get' → logprob: -18.501930236816406
    7. '[get' → logprob: -18.501930236816406
    8. '[' → logprob: -21.126930236816406
    9. '.item' → logprob: -21.251930236816406
    10. 'getitem' → logprob: -21.251930236816406

Token 182: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004099416080862284
    2. ']
' → logprob: -5.879099369049072
    3. ' ]' → logprob: -7.504099369049072
    4. ')' → logprob: -7.754099369049072
    5. ' if' → logprob: -9.25409984588623
    6. '<|end|>' → logprob: -9.25409984588623
    7. '       ' → logprob: -9.75409984588623
    8. 'if' → logprob: -11.50409984588623
    9. '   ' → logprob: -11.75409984588623
    10. '
' → logprob: -11.75409984588623

Token 183: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45531392097473145
    2. '       ' → logprob: -1.4553139209747314
    3. '<|end|>' → logprob: -2.2053139209747314
    4. ' if' → logprob: -4.080313682556152
    5. '   ' → logprob: -5.830313682556152
    6. '<|end|>' → logprob: -7.080313682556152
    7. '    
' → logprob: -7.830313682556152
    8. ' 
' → logprob: -8.080313682556152
    9. '        
' → logprob: -8.455313682556152
    10. ' ' → logprob: -9.330313682556152

Token 184: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7690965533256531
    2. ' if' → logprob: -1.0190966129302979
    3. '
' → logprob: -2.894096612930298
    4. 'if' → logprob: -3.019096612930298
    5. '    
' → logprob: -3.644096612930298
    6. ' for' → logprob: -3.644096612930298
    7. 'for' → logprob: -5.144096374511719
    8. '       ' → logprob: -5.394096374511719
    9. ' 
' → logprob: -6.019096374511719
    10. 'try' → logprob: -6.894096374511719

Token 185: ' 作' (ID: 150642)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1397249400615692
    2. ' if' → logprob: -2.5147249698638916
    3. 'for' → logprob: -3.1397249698638916
    4. ' for' → logprob: -5.2647247314453125
    5. '   ' → logprob: -7.2647247314453125
    6. '       ' → logprob: -8.889724731445312
    7. 'try' → logprob: -9.139724731445312
    8. 'elif' → logprob: -10.014724731445312
    9. 'import' → logprob: -11.389724731445312
    10. '
' → logprob: -12.139724731445312

Token 186: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.11340209096670151
    2. 'れる' → logprob: -2.4884021282196045
    3. 'れ' → logprob: -4.363401889801025
    4. 'り' → logprob: -4.738401889801025
    5. 'ろ' → logprob: -6.488401889801025
    6. '成' → logprob: -7.738401889801025
    7. '   ' → logprob: -8.363402366638184
    8. '#' → logprob: -8.988402366638184
    9. 'れば' → logprob: -8.988402366638184
    10. 'cost' → logprob: -9.988402366638184

Token 187: '場合' (ID: 72486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5708778500556946
    2. '場合' → logprob: -1.0708777904510498
    3. 'cost' → logprob: -3.94587779045105
    4. 'コ' → logprob: -4.070878028869629
    5. 'ため' → logprob: -4.195878028869629
    6. ' if' → logprob: -4.320878028869629
    7. 'る' → logprob: -4.570878028869629
    8. '方' → logprob: -6.070878028869629
    9. ' ' → logprob: -6.195878028869629
    10. 'こと' → logprob: -6.195878028869629

Token 188: 'の' (ID: 3385)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11701051145792007
    2. ' if' → logprob: -2.9920105934143066
    3. ' for' → logprob: -3.4920105934143066
    4. '   ' → logprob: -3.9920105934143066
    5. '
' → logprob: -5.617010593414307
    6. '<|end|>' → logprob: -5.867010593414307
    7. '<|end|>' → logprob: -6.617010593414307
    8. ' in' → logprob: -6.867010593414307
    9. 'for' → logprob: -7.492010593414307
    10. ':' → logprob: -7.867010593414307

Token 189: '値' (ID: 69555)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.19500267505645752
    2. ' cost' → logprob: -2.820002555847168
    3. 'for' → logprob: -3.195002555847168
    4. 'min' → logprob: -3.570002555847168
    5. ' min' → logprob: -4.570002555847168
    6. 'コ' → logprob: -4.695002555847168
    7. '   ' → logprob: -5.195002555847168
    8. ' costs' → logprob: -5.445002555847168
    9. 'sum' → logprob: -5.445002555847168
    10. 'try' → logprob: -5.820002555847168

Token 190: '段' (ID: 27561)
  Prédit: '段'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '段' → logprob: -0.012550621293485165
    2. '   ' → logprob: -4.5125508308410645
    3. '       ' → logprob: -6.8875508308410645
    4. '           ' → logprob: -8.887550354003906
    5. 'cost' → logprob: -9.012550354003906
    6. 'for' → logprob: -9.887550354003906
    7. '     ' → logprob: -10.887550354003906
    8. '  ' → logprob: -11.012550354003906
    9. ' ' → logprob: -11.137550354003906
    10. '      ' → logprob: -11.262550354003906

Token 191: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1906588077545166
    2. '   ' → logprob: -2.1906588077545166
    3. ' =' → logprob: -2.1906588077545166
    4. ' if' → logprob: -2.1906588077545166
    5. ' for' → logprob: -2.3156588077545166
    6. '+' → logprob: -2.5656588077545166
    7. '<|end|>' → logprob: -3.1906588077545166
    8. 'for' → logprob: -3.4406588077545166
    9. ' +' → logprob: -3.4406588077545166
    10. '=' → logprob: -4.0656585693359375

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04589421674609184
    2. ' if' → logprob: -3.795894145965576
    3. '   ' → logprob: -4.920894145965576
    4. ' for' → logprob: -5.420894145965576
    5. ' +' → logprob: -5.920894145965576
    6. '+' → logprob: -6.420894145965576
    7. '
' → logprob: -6.420894145965576
    8. ' =' → logprob: -6.795894145965576
    9. 'if' → logprob: -6.920894145965576
    10. 'for' → logprob: -7.170894145965576

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3859618604183197
    2. 'for' → logprob: -1.885961890220642
    3. ' if' → logprob: -2.1359617710113525
    4. ' for' → logprob: -4.010962009429932
    5. 'min' → logprob: -4.385962009429932
    6. '   ' → logprob: -5.010962009429932
    7. 'float' → logprob: -5.510962009429932
    8. ' min' → logprob: -6.010962009429932
    9. 'res' → logprob: -6.385962009429932
    10. ' float' → logprob: -7.010962009429932

Token 194: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.011089913547039032
    2. 'item' → logprob: -4.51108980178833
    3. '	item' → logprob: -11.136090278625488
    4. ' target' → logprob: -11.511090278625488
    5. ' recipes' → logprob: -12.136090278625488
    6. ' ' → logprob: -12.386090278625488
    7. ' out' → logprob: -13.011090278625488
    8. 'recipes' → logprob: -13.261090278625488
    9. ' items' → logprob: -13.386090278625488
    10. 'target' → logprob: -14.511090278625488

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031913816928863525
    2. 'in' → logprob: -5.7531914710998535
    3. ' not' → logprob: -11.503190994262695
    4. ' ' → logprob: -13.003190994262695
    5. '	in' → logprob: -14.753190994262695
    6. '   ' → logprob: -15.253190994262695
    7. 'not' → logprob: -15.253190994262695
    8. ' i' → logprob: -16.565690994262695
    9. ' ' → logprob: -17.065690994262695
    10. '
' → logprob: -17.315690994262695

Token 196: ' recipes' (ID: 22649)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' → logprob: -0.11283423006534576
    2. ' recipes' → logprob: -2.2378342151641846
    3. ' ' → logprob: -11.862833976745605
    4. '   ' → logprob: -12.862833976745605
    5. 'recipe' → logprob: -13.862833976745605
    6. ' recetas' → logprob: -15.237833976745605
    7. 'rec' → logprob: -15.362833976745605
    8. '  ' → logprob: -15.487833976745605
    9. ' recipe' → logprob: -15.987833976745605
    10. ' recettes' → logprob: -16.112834930419922

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038047123700380325
    2. ':
' → logprob: -3.2880470752716064
    3. '):' → logprob: -12.663046836853027
    4. '):
' → logprob: -14.038046836853027
    5. ' :' → logprob: -14.038046836853027
    6. ':

' → logprob: -15.413046836853027
    7. ' and' → logprob: -15.538046836853027
    8. ':
' → logprob: -15.913046836853027
    9. ' :
' → logprob: -16.038047790527344
    10. '：' → logprob: -16.663047790527344

Token 198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2823137044906616
    2. ':' → logprob: -2.282313823699951
    3. ':
' → logprob: -2.282313823699951
    4. '           ' → logprob: -3.282313823699951
    5. '):
' → logprob: -6.782313823699951
    6. '   ' → logprob: -7.157313823699951
    7. ' for' → logprob: -7.282313823699951
    8. ' and' → logprob: -7.907313823699951
    9. '
' → logprob: -8.532313346862793
    10. '<|end|>' → logprob: -8.782313346862793

Token 199: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.044852614402771
    2. 'res' → logprob: -1.544852614402771
    3. '       ' → logprob: -1.919852614402771
    4. ' res' → logprob: -2.4198527336120605
    5. 'cost' → logprob: -3.4198527336120605
    6. 'min' → logprob: -3.6698527336120605
    7. 'sum' → logprob: -3.6698527336120605
    8. 'tmp' → logprob: -3.9198527336120605
    9. 'total' (adapté à ' total') → logprob: -4.1698527336120605
    10. ' min' → logprob: -4.2948527336120605

Token 200: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2113242894411087
    2. ' =' → logprob: -1.7113243341445923
    3. '_price' → logprob: -5.336324214935303
    4. '=' → logprob: -5.586324214935303
    5. '_' → logprob: -6.711324214935303
    6. 'cost' → logprob: -10.461324691772461
    7. '_c' → logprob: -11.461324691772461
    8. ' ' → logprob: -11.461324691772461
    9. '_COST' → logprob: -11.836324691772461
    10. ' _' → logprob: -12.086324691772461

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017070822650566697
    2. ' ' → logprob: -6.376707077026367
    3. 'sum' → logprob: -12.376707077026367
    4. ' sum' → logprob: -14.376707077026367
    5. '   ' → logprob: -16.876707077026367
    6. '  ' → logprob: -17.501707077026367
    7. ' ' → logprob: -18.939207077026367
    8. '０' → logprob: -19.001707077026367
    9. '۰' → logprob: -19.189207077026367
    10. '=' → logprob: -20.314207077026367

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3795937522663735e-05
    2. 'sum' → logprob: -11.00002384185791
    3. ' ' → logprob: -11.87502384185791
    4. ' sum' → logprob: -16.375022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '
' → logprob: -19.500022888183594
    7. '  ' → logprob: -19.625022888183594
    8. '０' → logprob: -20.125022888183594
    9. '```' → logprob: -20.250022888183594
    10. '۰' → logprob: -20.625022888183594

Token 203: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18457895517349243
    2. '           ' → logprob: -1.9345788955688477
    3. 'for' → logprob: -4.309578895568848
    4. ' for' → logprob: -5.434578895568848
    5. '       ' → logprob: -5.809578895568848
    6. '<|end|>' → logprob: -6.684578895568848
    7. '               ' → logprob: -7.309578895568848
    8. '   ' → logprob: -7.809578895568848
    9. '            ' → logprob: -9.434578895568848
    10. '          ' → logprob: -9.434578895568848

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7806774377822876
    2. '
' → logprob: -1.2806774377822876
    3. ' for' → logprob: -1.9056774377822876
    4. 'for' → logprob: -2.280677318572998
    5. '       ' → logprob: -4.905677318572998
    6. '   ' → logprob: -5.905677318572998
    7. '               ' → logprob: -7.280677318572998
    8. '            
' → logprob: -7.655677318572998
    9. '    
' → logprob: -7.780677318572998
    10. ' 
' → logprob: -8.155677795410156

Token 205: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7608481645584106
    2. ' for' → logprob: -0.8858481645584106
    3. '           ' → logprob: -2.135848045349121
    4. '       ' → logprob: -6.260848045349121
    5. '   ' → logprob: -8.260848045349121
    6. '	for' → logprob: -10.260848045349121
    7. ' ' → logprob: -12.260848045349121
    8. '	       ' → logprob: -12.510848045349121
    9. '	   ' → logprob: -12.885848045349121
    10. '               ' → logprob: -13.010848045349121

Token 206: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9472309947013855
    2. 'sub' → logprob: -0.9472309947013855
    3. 'comp' → logprob: -2.1972310543060303
    4. 'ing' → logprob: -2.6972310543060303
    5. 'x' → logprob: -4.322230815887451
    6. 'i' → logprob: -4.822230815887451
    7. 'ingredient' → logprob: -4.947230815887451
    8. 'component' → logprob: -5.322230815887451
    9. 'ingred' → logprob: -5.447230815887451
    10. 'child' → logprob: -6.447230815887451

Token 207: '_item' (ID: 12070)
  Prédit: '_item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_item' → logprob: -0.006825128570199013
    2. '_items' → logprob: -5.506824970245361
    3. '_' → logprob: -6.006824970245361
    4. ' _' → logprob: -8.25682544708252
    5. 'item' → logprob: -11.13182544708252
    6. ' in' → logprob: -12.63182544708252
    7. '_i' → logprob: -13.38182544708252
    8. ' item' → logprob: -14.13182544708252
    9. '_ITEM' → logprob: -15.38182544708252
    10. '_Item' → logprob: -15.75682544708252

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020615579560399055
    2. 'in' → logprob: -3.895615577697754
    3. ' ' → logprob: -9.770615577697754
    4. '	in' → logprob: -11.770615577697754
    5. '   ' → logprob: -13.020615577697754
    6. '    ' → logprob: -13.145615577697754
    7. 's' → logprob: -14.145615577697754
    8. '  ' → logprob: -14.145615577697754
    9. '　' → logprob: -14.520615577697754
    10. ')' → logprob: -14.520615577697754

Token 209: ' recipes' (ID: 22649)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' → logprob: -0.14270293712615967
    2. ' recipes' → logprob: -2.017703056335449
    3. '   ' → logprob: -11.01770305633545
    4. ' ' → logprob: -12.01770305633545
    5. '    ' → logprob: -14.01770305633545
    6. '       ' → logprob: -14.01770305633545
    7. ' recetas' → logprob: -14.51770305633545
    8. '(rec' → logprob: -14.76770305633545
    9. '           ' → logprob: -14.89270305633545
    10. '  ' → logprob: -15.01770305633545

Token 210: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.625001907348633
    3. 'item' → logprob: -14.625001907348633
    4. '[out' → logprob: -15.125001907348633
    5. '=item' → logprob: -16.375001907348633
    6. '```' → logprob: -16.875001907348633
    7. ')item' → logprob: -17.125001907348633
    8. ',item' → logprob: -17.125001907348633
    9. '[it' → logprob: -17.250001907348633
    10. ' [' → logprob: -17.375001907348633

Token 211: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6166717410087585
    2. '):
' → logprob: -1.3666718006134033
    3. ':' → logprob: -2.2416718006134033
    4. ']:
' → logprob: -2.4916718006134033
    5. '):' → logprob: -4.991671562194824
    6. ']:' → logprob: -5.366671562194824
    7. '       ' → logprob: -6.366671562194824
    8. '           ' → logprob: -6.491671562194824
    9. '               ' → logprob: -7.741671562194824
    10. ']' → logprob: -7.866671562194824

Token 212: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008361928048543632
    2. '
' → logprob: -7.625836372375488
    3. '           ' → logprob: -8.750836372375488
    4. '                
' → logprob: -10.125836372375488
    5. ' 
' → logprob: -10.375836372375488
    6. 'total' → logprob: -10.500836372375488
    7. ' total' → logprob: -10.500836372375488
    8. '<|end|>' → logprob: -11.750836372375488
    9. ',' → logprob: -12.250836372375488
    10. '	           ' → logprob: -12.250836372375488

Token 213: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2843959331512451
    2. 'total' (adapté à ' total') → logprob: -1.4093959331512451
    3. '               ' → logprob: -5.909396171569824
    4. '                   ' → logprob: -8.409396171569824
    5. '           ' → logprob: -9.159396171569824
    6. '
' → logprob: -9.159396171569824
    7. '	total' → logprob: -10.034396171569824
    8. ' 
' → logprob: -11.784396171569824
    9. '   ' → logprob: -11.784396171569824
    10. ' ' → logprob: -11.909396171569824

Token 214: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31330859661102295
    2. '+=' → logprob: -1.313308596611023
    3. '=' → logprob: -10.688308715820312
    4. '+' → logprob: -11.313308715820312
    5. '   ' → logprob: -12.063308715820312
    6. ' =' → logprob: -12.563308715820312
    7. ']+=' → logprob: -14.313308715820312
    8. ' +' → logprob: -14.938308715820312
    9. '+=(' → logprob: -15.063308715820312
    10. 'import' → logprob: -15.313308715820312

Token 215: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4740782678127289
    2. ' cost' → logprob: -0.9740782976150513
    3. '(cost' → logprob: -14.099078178405762
    4. ' ' → logprob: -16.224079132080078
    5. '   ' → logprob: -16.349079132080078
    6. '_cost' → logprob: -16.849079132080078
    7. '    ' → logprob: -16.974079132080078
    8. 'Cost' → logprob: -17.099079132080078
    9. '.cost' → logprob: -17.099079132080078
    10. ' kost' → logprob: -17.099079132080078

Token 216: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.014166207052767277
    2. '(' → logprob: -4.264166355133057
    3. ' (' → logprob: -13.389165878295898
    4. '(
' → logprob: -14.264165878295898
    5. '(i' → logprob: -15.639165878295898
    6. '('' → logprob: -16.5141658782959
    7. '(

' → logprob: -16.5141658782959
    8. '(In' → logprob: -17.0141658782959
    9. '((' → logprob: -17.5141658782959
    10. '(out' → logprob: -17.6391658782959

Token 217: '_item' (ID: 12070)
  Prédit: '_item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_item' → logprob: -0.0002943479048553854
    2. 'item' → logprob: -9.00029468536377
    3. '_' → logprob: -9.50029468536377
    4. 'in' → logprob: -9.87529468536377
    5. 'em' → logprob: -10.25029468536377
    6. ' _' → logprob: -13.12529468536377
    7. 'tem' → logprob: -13.25029468536377
    8. '_items' → logprob: -13.37529468536377
    9. ' in' → logprob: -13.75029468536377
    10. '_in' → logprob: -14.50029468536377

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014169269241392612
    2. ')
' → logprob: -4.264169216156006
    3. ' )' → logprob: -12.389169692993164
    4. ' )
' → logprob: -14.764169692993164
    5. ')

' → logprob: -14.764169692993164
    6. '())' → logprob: -15.514169692993164
    7. ')
' → logprob: -15.514169692993164
    8. '()' → logprob: -16.014169692993164
    9. '   ' → logprob: -16.014169692993164
    10. '       ' → logprob: -16.514169692993164

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.028536492725834e-05
    2. '
' → logprob: -10.000070571899414
    3. '       ' → logprob: -11.625070571899414
    4. '               ' → logprob: -11.750070571899414
    5. '            
' → logprob: -12.625070571899414
    6. '          ' → logprob: -13.500070571899414
    7. ',' → logprob: -14.125070571899414
    8. '   ' → logprob: -15.125070571899414
    9. ' if' → logprob: -15.250070571899414
    10. '        
' → logprob: -15.250070571899414

Token 220: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5040649175643921
    2. 'if' (adapté à ' if') → logprob: -1.754064917564392
    3. ' res' → logprob: -2.1290650367736816
    4. ' if' → logprob: -2.3790650367736816
    5. '       ' → logprob: -4.754065036773682
    6. '           ' → logprob: -6.129065036773682
    7. '   ' → logprob: -7.879065036773682
    8. '
' → logprob: -9.629064559936523
    9. '               ' → logprob: -11.379064559936523
    10. '	res' → logprob: -11.504064559936523

Token 221: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0032921400852501392
    2. 'total' → logprob: -5.753292083740234
    3. ' res' → logprob: -9.253292083740234
    4. ' ' → logprob: -12.003292083740234
    5. '	total' → logprob: -12.503292083740234
    6. 'res' → logprob: -13.128292083740234
    7. ' to' → logprob: -13.128292083740234
    8. ' tota' → logprob: -14.128292083740234
    9. '(total' → logprob: -14.378292083740234
    10. ' item' → logprob: -14.753292083740234

Token 222: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07889683544635773
    2. '<' → logprob: -2.5788967609405518
    3. ' ' → logprob: -11.953896522521973
    4. ' ' → logprob: -15.203896522521973
    5. '[' → logprob: -15.703896522521973
    6. ')' → logprob: -17.57889747619629
    7. '<m' → logprob: -18.07889747619629
    8. '<|end|>' → logprob: -18.07889747619629
    9. ' <
' → logprob: -18.07889747619629
    10. '```' → logprob: -18.07889747619629

Token 223: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.023246178403496742
    2. 'res' → logprob: -3.7732462882995605
    3. '	res' → logprob: -15.273245811462402
    4. '(res' → logprob: -15.898245811462402
    5. '=' → logprob: -16.39824676513672
    6. '=res' → logprob: -16.64824676513672
    7. 'Res' → logprob: -17.14824676513672
    8. ' ' → logprob: -17.52324676513672
    9. ' ' → logprob: -17.64824676513672
    10. '$res' → logprob: -17.77324676513672

Token 224: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1271550953388214
    2. ':' → logprob: -2.127155065536499
    3. '       ' → logprob: -9.502155303955078
    4. ' :
' → logprob: -9.502155303955078
    5. '           ' → logprob: -10.502155303955078
    6. '):
' → logprob: -11.127155303955078
    7. '               ' → logprob: -11.377155303955078
    8. ':
' → logprob: -11.627155303955078
    9. ':

' → logprob: -12.002155303955078
    10. ' :' → logprob: -12.127155303955078

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022243782877922058
    2. '           ' → logprob: -3.8972437381744385
    3. '       ' → logprob: -7.272243976593018
    4. ':
' → logprob: -8.02224349975586
    5. 'res' → logprob: -8.39724349975586
    6. ' res' → logprob: -9.14724349975586
    7. '
' → logprob: -9.39724349975586
    8. ' :
' → logprob: -9.89724349975586
    9. '):
' → logprob: -9.89724349975586
    10. '                
' → logprob: -10.52224349975586

Token 226: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.13157100975513458
    2. '               ' → logprob: -2.381571054458618
    3. 'res' (adapté à ' res') → logprob: -3.506571054458618
    4. '       ' → logprob: -8.381570816040039
    5. ' ' → logprob: -8.506570816040039
    6. '           ' → logprob: -8.881570816040039
    7. '                   ' → logprob: -9.006570816040039
    8. '                ' → logprob: -9.631570816040039
    9. '
' → logprob: -9.881570816040039
    10. '   ' → logprob: -10.881570816040039

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005233882926404476
    2. '=' → logprob: -5.2552337646484375
    3. '＝' → logprob: -17.880233764648438
    4. ' ' → logprob: -18.255233764648438
    5. ' ' → logprob: -20.630233764648438
    6. ' =
' → logprob: -20.630233764648438
    7. '=

' → logprob: -21.505233764648438
    8. '   ' → logprob: -21.630233764648438
    9. ' =)' → logprob: -21.755233764648438
    10. '=res' → logprob: -22.255233764648438

Token 228: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3868716359138489
    2. ' total' → logprob: -1.136871576309204
    3. '	total' → logprob: -15.511871337890625
    4. ' ' → logprob: -15.886871337890625
    5. 'tot' → logprob: -16.636871337890625
    6. '(total' → logprob: -16.761871337890625
    7. ' ' → logprob: -17.511871337890625
    8. ' tota' → logprob: -17.886871337890625
    9. ' tot' → logprob: -18.011871337890625
    10. ',total' → logprob: -18.511871337890625

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001341792638413608
    2. '
' → logprob: -6.626341819763184
    3. '   ' → logprob: -11.751341819763184
    4. '           ' → logprob: -12.876341819763184
    5. '        
' → logprob: -13.001341819763184
    6. '    
' → logprob: -13.626341819763184
    7. '      ' → logprob: -15.001341819763184
    8. '<|end|>' → logprob: -15.126341819763184
    9. ')' → logprob: -15.251341819763184
    10. '	' → logprob: -15.626341819763184

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004683118779212236
    2. '
' → logprob: -5.379683017730713
    3. '        
' → logprob: -10.629683494567871
    4. '           ' → logprob: -11.504683494567871
    5. '   ' → logprob: -11.629683494567871
    6. ')' → logprob: -12.254683494567871
    7. '    
' → logprob: -12.879683494567871
    8. ' memo' → logprob: -13.254683494567871
    9. '            
' → logprob: -13.379683494567871
    10. '
' → logprob: -13.379683494567871

Token 231: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4037521481513977
    2. '   ' → logprob: -1.153752088546753
    3. ' memo' → logprob: -4.153752326965332
    4. 'memo' (adapté à ' memo') → logprob: -6.903752326965332
    5. '
' → logprob: -11.403752326965332
    6. '	m' → logprob: -12.903752326965332
    7. ' ' → logprob: -13.153752326965332
    8. '           ' → logprob: -13.153752326965332
    9. '	' → logprob: -13.153752326965332
    10. '	   ' → logprob: -13.278752326965332

Token 232: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.000017166137695
    3. '[in' → logprob: -16.750017166137695
    4. '[obj' → logprob: -16.750017166137695
    5. '[it' → logprob: -16.875017166137695
    6. '[event' → logprob: -17.000017166137695
    7. '[key' → logprob: -17.500017166137695
    8. '[input' → logprob: -17.500017166137695
    9. '```' → logprob: -17.625017166137695
    10. ' [' → logprob: -17.625017166137695

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6047699318733066e-05
    2. ']=' → logprob: -11.125016212463379
    3. ' ]' → logprob: -13.875016212463379
    4. ']
' → logprob: -16.625015258789062
    5. '[item' → logprob: -16.625015258789062
    6. ')' → logprob: -17.125015258789062
    7. '   ' → logprob: -17.750015258789062
    8. '']' → logprob: -18.500015258789062
    9. '=' → logprob: -19.000015258789062
    10. '}' → logprob: -19.125015258789062

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006718690041452646
    2. ' =' → logprob: -5.006718635559082
    3. '=item' → logprob: -13.631718635559082
    4. ']' → logprob: -13.631718635559082
    5. '[' → logprob: -14.756718635559082
    6. '[item' → logprob: -15.006718635559082
    7. '＝' → logprob: -16.1317195892334
    8. ']=' → logprob: -16.5067195892334
    9. '   ' → logprob: -17.6317195892334
    10. ')' → logprob: -17.8817195892334

Token 235: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007099286303855479
    2. ' res' → logprob: -7.2507100105285645
    3. '	res' → logprob: -21.125709533691406
    4. 're' → logprob: -21.375709533691406
    5. '(res' → logprob: -21.625709533691406
    6. '$res' → logprob: -22.375709533691406
    7. 'r' → logprob: -23.375709533691406
    8. 'resi' → logprob: -24.000709533691406
    9. '_res' → logprob: -24.125709533691406
    10. 'resc' → logprob: -25.125709533691406

Token 236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006819340633228421
    2. '   ' → logprob: -7.3756818771362305
    3. ' return' → logprob: -10.37568187713623
    4. '	' → logprob: -11.87568187713623
    5. 'return' → logprob: -12.00068187713623
    6. '	return' → logprob: -12.50068187713623
    7. '
' → logprob: -13.00068187713623
    8. '           ' → logprob: -13.25068187713623
    9. '    
' → logprob: -13.87568187713623
    10. '<|end|>' → logprob: -14.50068187713623

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026548474561423063
    2. '   ' → logprob: -6.127655029296875
    3. ' return' → logprob: -8.002655029296875
    4. 'return' → logprob: -9.252655029296875
    5. '	return' → logprob: -10.752655029296875
    6. '	' → logprob: -11.252655029296875
    7. '           ' → logprob: -13.502655029296875
    8. '
' → logprob: -13.877655029296875
    9. '	   ' → logprob: -14.002655029296875
    10. '    
' → logprob: -15.127655029296875

Token 238: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1005058288574219
    2. ' return' → logprob: -1.1005058288574219
    3. 'return' (adapté à ' return') → logprob: -1.3505058288574219
    4. '   ' → logprob: -2.600505828857422
    5. '	return' → logprob: -6.725505828857422
    6. ' ' → logprob: -11.100505828857422
    7. '	' → logprob: -11.600505828857422
    8. ':return' → logprob: -12.100505828857422
    9. '  ' → logprob: -12.225505828857422
    10. '           ' → logprob: -12.725505828857422

Token 239: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004078401252627373
    2. ' res' → logprob: -5.504078388214111
    3. '	res' → logprob: -17.754077911376953
    4. ' ' → logprob: -19.629077911376953
    5. '(res' → logprob: -20.004077911376953
    6. '   ' → logprob: -20.504077911376953
    7. 're' → logprob: -20.504077911376953
    8. 'r' → logprob: -20.629077911376953
    9. '$res' → logprob: -21.129077911376953
    10. '_res' → logprob: -21.504077911376953

Token 240: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015294904820621014
    2. '<|end|>' → logprob: -5.015295028686523
    3. '
' → logprob: -5.515295028686523
    4. '    
' → logprob: -5.765295028686523
    5. 'print' → logprob: -6.890295028686523
    6. '<|end|>' → logprob: -9.515295028686523
    7. ')' → logprob: -10.015295028686523
    8. '\n' → logprob: -10.515295028686523
    9. '```' → logprob: -10.515295028686523
    10. 'cost' → logprob: -10.765295028686523

Token 241: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0393102765083313
    2. '   ' → logprob: -3.2893102169036865
    3. ' print' → logprob: -6.789310455322266
    4. 'result' → logprob: -9.664310455322266
    5. '
' → logprob: -10.164310455322266
    6. '    
' → logprob: -11.039310455322266
    7. '	print' → logprob: -11.414310455322266
    8. 'price' → logprob: -11.914310455322266
    9. 'cost' → logprob: -13.664310455322266
    10. 'total' → logprob: -14.039310455322266

Token 242: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010366239439463243
    2. '   ' → logprob: -9.750103950500488
    3. ' print' → logprob: -10.125103950500488
    4. 'result' → logprob: -12.500103950500488
    5. 'while' → logprob: -14.750103950500488
    6. 'answer' → logprob: -15.000103950500488
    7. 'pr' → logprob: -15.625103950500488
    8. 'price' → logprob: -16.000102996826172
    9. 'try' → logprob: -16.000102996826172
    10. 'cost' → logprob: -16.375102996826172

Token 243: '(cost' (ID: 133554)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3871309161186218
    2. '(cost' → logprob: -1.1371309757232666
    3. '()' → logprob: -9.012130737304688
    4. '(target' → logprob: -9.887130737304688
    5. '('' → logprob: -10.012130737304688
    6. '(c' → logprob: -10.637130737304688
    7. ' (' → logprob: -12.012130737304688
    8. '(
' → logprob: -12.137130737304688
    9. '("' → logprob: -13.262130737304688
    10. '(f' → logprob: -13.637130737304688

Token 244: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. 'target' → logprob: -14.500431060791016
    4. '(Target' → logprob: -16.375431060791016
    5. ')' → logprob: -17.250431060791016
    6. '(
' → logprob: -18.000431060791016
    7. '[target' → logprob: -18.250431060791016
    8. ' (' → logprob: -18.375431060791016
    9. ',target' → logprob: -18.375431060791016
    10. ' target' → logprob: -18.500431060791016

Token 245: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06200330704450607
    2. ')' → logprob: -2.8120033740997314
    3. '()))' → logprob: -11.062003135681152
    4. '())' → logprob: -11.187003135681152
    5. '))
' → logprob: -13.062003135681152
    6. ' ))' → logprob: -13.312003135681152
    7. ')
' → logprob: -14.312003135681152
    8. ')))' → logprob: -14.312003135681152
    9. '()' → logprob: -14.812003135681152
    10. ' )' → logprob: -14.937003135681152


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 243
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 117
Tokens correctement prédits (top 10): 203
Précision stricte (1ère position): 43.62%
Précision adaptée (1ère position): 48.15%
Précision (top 10): 83.54%
================================================================================
