================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    s = line.strip()
    result = ''
    i = 0
    while i < len(s):
        if s[i] == '@':
            count = int(s[i+1])
            char = s[i+2]
            result += char * count
            i += 3
        else:
            result += s[i]
            i += 1
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. '' → logprob: -2.542949914932251
    5. 'import' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005637573776766658
    2. '  ' → logprob: -7.750563621520996
    3. ' i' → logprob: -9.000563621520996
    4. '_' → logprob: -13.750563621520996
    5. ' space' → logprob: -13.875563621520996
    6. ' ```' → logprob: -14.000563621520996
    7. ' ‌' → logprob: -14.125563621520996
    8. ' )' → logprob: -14.250563621520996
    9. ' ' → logprob: -14.500563621520996
    10. ' ﻿' → logprob: -14.750563621520996

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10139565914869308
    2. 'in' → logprob: -2.601395606994629
    3. '[' → logprob: -4.101395606994629
    4. ':' → logprob: -6.226395606994629
    5. ' ' → logprob: -6.851395606994629
    6. '.' → logprob: -7.851395606994629
    7. '[:]' → logprob: -7.976395606994629
    8. '[]' → logprob: -8.476395606994629
    9. '  ' → logprob: -8.601395606994629
    10. '(' → logprob: -8.726395606994629

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.029940472915768623
    2. 'sys' → logprob: -3.529940366744995
    3. ' ' → logprob: -9.654940605163574
    4. '=sys' → logprob: -9.779940605163574
    5. '	sys' → logprob: -11.029940605163574
    6. ' iter' → logprob: -11.404940605163574
    7. '(sys' → logprob: -11.654940605163574
    8. ' file' → logprob: -11.904940605163574
    9. ' open' → logprob: -12.279940605163574
    10. '```' → logprob: -12.279940605163574

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11120092123746872
    2. '.readline' → logprob: -2.3612008094787598
    3. '.stdin' → logprob: -4.98620080947876
    4. ' .' → logprob: -6.48620080947876
    5. ':' → logprob: -7.23620080947876
    6. '.stdout' → logprob: -7.48620080947876
    7. '.readlines' → logprob: -7.48620080947876
    8. '.argv' → logprob: -8.361201286315918
    9. '```' → logprob: -8.986201286315918
    10. '.:' → logprob: -9.236201286315918

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001029471677611582
    2. ' :' → logprob: -10.125102996826172
    3. ':
' → logprob: -10.625102996826172
    4. ':**' → logprob: -11.375102996826172
    5. '[:]' → logprob: -11.625102996826172
    6. '):' → logprob: -12.750102996826172
    7. '>:' → logprob: -12.875102996826172
    8. '':' → logprob: -12.875102996826172
    9. '':'' → logprob: -13.250102996826172
    10. '():' → logprob: -14.000102996826172

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018542143516242504
    2. '    
' → logprob: -8.875185012817383
    3. ' print' → logprob: -10.875185012817383
    4. '```' → logprob: -11.750185012817383
    5. 'print' → logprob: -12.375185012817383
    6. '   ' → logprob: -12.500185012817383
    7. '    ' → logprob: -12.875185012817383
    8. ' if' → logprob: -13.625185012817383
    9. '`' → logprob: -13.750185012817383
    10. ' ' → logprob: -14.250185012817383

Token 10: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1665678769350052
    2. '   ' → logprob: -2.041567802429199
    3. ' print' → logprob: -3.916567802429199
    4. '    ' → logprob: -6.916567802429199
    5. 'pass' → logprob: -6.916567802429199
    6. ' line' → logprob: -7.041567802429199
    7. 'line' → logprob: -7.791567802429199
    8. ' pass' → logprob: -8.5415678024292
    9. ' if' → logprob: -9.9165678024292
    10. 'strip' → logprob: -10.0415678024292

Token 11: ' =' (ID: 314)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.005630709230899811
    2. 'tr' → logprob: -5.3806304931640625
    3. '.' → logprob: -7.6306304931640625
    4. '.strip' → logprob: -9.005630493164062
    5. 't' → logprob: -9.130630493164062
    6. '.rstrip' → logprob: -9.505630493164062
    7. '.trip' → logprob: -9.505630493164062
    8. ' trip' → logprob: -10.130630493164062
    9. 'p' → logprob: -10.755630493164062
    10. '   ' → logprob: -11.255630493164062

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.023256193846464157
    2. 'line' → logprob: -3.773256301879883
    3. '	line' → logprob: -12.398256301879883
    4. '=line' → logprob: -13.023256301879883
    5. ' s' → logprob: -13.648256301879883
    6. ' ' → logprob: -14.148256301879883
    7. '(line' → logprob: -14.273256301879883
    8. '   ' → logprob: -14.523256301879883
    9. '#line' → logprob: -15.273256301879883
    10. '[line' → logprob: -15.773256301879883

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0379425585269928
    2. '.rstrip' → logprob: -3.53794264793396
    3. '.' → logprob: -5.037942409515381
    4. '.split' → logprob: -6.412942409515381
    5. 'rstrip' → logprob: -11.662942886352539
    6. '.readline' → logprob: -12.162942886352539
    7. 'strip' → logprob: -12.287942886352539
    8. '.lower' → logprob: -12.537942886352539
    9. '.startswith' → logprob: -13.037942886352539
    10. '.replace' → logprob: -13.287942886352539

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07923091948032379
    2. '(' → logprob: -2.579231023788452
    3. '()`' → logprob: -10.204231262207031
    4. '`()' → logprob: -10.329231262207031
    5. '(
' → logprob: -10.454231262207031
    6. '"' → logprob: -10.454231262207031
    7. ' ()' → logprob: -10.704231262207031
    8. '().' → logprob: -10.704231262207031
    9. '('' → logprob: -10.829231262207031
    10. '`' → logprob: -11.329231262207031

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9398491978645325
    2. ' if' → logprob: -1.3148491382598877
    3. '<|end|>' → logprob: -1.6898491382598877
    4. 'if' → logprob: -2.1898491382598877
    5. ':' → logprob: -4.439849376678467
    6. ' ' → logprob: -4.939849376678467
    7. '<|end|>' → logprob: -5.564849376678467
    8. '.split' → logprob: -5.689849376678467
    9. '    ' → logprob: -6.064849376678467
    10. '[' → logprob: -6.064849376678467

Token 16: ' result' (ID: 1534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07541444897651672
    2. '   ' → logprob: -3.5754144191741943
    3. 'i' → logprob: -3.8254144191741943
    4. 'print' → logprob: -3.9504144191741943
    5. ' if' → logprob: -6.075414657592773
    6. 'p' → logprob: -7.575414657592773
    7. '#' → logprob: -8.950414657592773
    8. 'for' → logprob: -9.700414657592773
    9. '[' → logprob: -9.950414657592773
    10. ')' → logprob: -9.950414657592773

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11337313801050186
    2. '=' → logprob: -2.363373041152954
    3. ' +=' → logprob: -4.738373279571533
    4. '.append' → logprob: -6.863373279571533
    5. '.' → logprob: -7.113373279571533
    6. '+=' → logprob: -7.488373279571533
    7. '[:]' → logprob: -7.988373279571533
    8. '[' → logprob: -8.363372802734375
    9. ' ' → logprob: -8.488372802734375
    10. 's' → logprob: -8.613372802734375

Token 18: ' ''
' (ID: 25366)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.14835871756076813
    2. 's' → logprob: -2.0233588218688965
    3. ' int' → logprob: -6.5233588218688965
    4. 'int' → logprob: -7.0233588218688965
    5. ' len' → logprob: -7.0233588218688965
    6. 'len' → logprob: -7.6483588218688965
    7. ' ' → logprob: -7.7733588218688965
    8. ' sum' → logprob: -8.148358345031738
    9. 'sum' → logprob: -8.398358345031738
    10. ' []' → logprob: -8.648358345031738

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06563752144575119
    2. ' ' → logprob: -3.3156375885009766
    3. ' for' → logprob: -4.315637588500977
    4. 'for' → logprob: -5.065637588500977
    5. '    ' → logprob: -5.315637588500977
    6. ' if' → logprob: -7.690637588500977
    7. '  ' → logprob: -7.815637588500977
    8. '    
' → logprob: -8.190637588500977
    9. '<|end|>' → logprob: -8.190637588500977
    10. 'if' → logprob: -8.565637588500977

Token 20: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7462812066078186
    2. '   ' → logprob: -1.7462811470031738
    3. 'i' (adapté à ' i') → logprob: -1.8712811470031738
    4. 'f' → logprob: -1.9962811470031738
    5. ' ' → logprob: -3.621281147003174
    6. ' for' → logprob: -4.121281147003174
    7. 'if' → logprob: -4.496281147003174
    8. ':' → logprob: -7.246281147003174
    9. '    ' → logprob: -7.496281147003174
    10. '.' → logprob: -7.496281147003174

Token 21: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25650036334991455
    2. 'n' → logprob: -1.8815003633499146
    3. '=' → logprob: -3.506500244140625
    4. 's' → logprob: -4.381500244140625
    5. ' ' → logprob: -4.756500244140625
    6. ' =' → logprob: -4.881500244140625
    7. 'nd' → logprob: -5.131500244140625
    8. '+' → logprob: -5.381500244140625
    9. ' +=' → logprob: -6.131500244140625
    10. 'nt' → logprob: -7.381500244140625

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016045158728957176
    2. ' ' → logprob: -4.141045093536377
    3. '1' → logprob: -11.516045570373535
    4. '   ' → logprob: -15.016045570373535
    5. '2' → logprob: -15.891045570373535
    6. '  ' → logprob: -16.39104461669922
    7. '=' → logprob: -17.26604461669922
    8. '+' → logprob: -17.39104461669922
    9. ' len' → logprob: -17.51604461669922
    10. 'len' → logprob: -17.82854461669922

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0259150157216936e-05
    2. ' ' → logprob: -10.00005054473877
    3. '1' → logprob: -12.37505054473877
    4. 'len' → logprob: -15.25005054473877
    5. '```' → logprob: -16.625049591064453
    6. '2' → logprob: -16.812549591064453
    7. '   ' → logprob: -17.062549591064453
    8. 's' → logprob: -17.437549591064453
    9. '=' → logprob: -17.875049591064453
    10. '[' → logprob: -18.062549591064453

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.791117787361145
    2. '<|end|>' → logprob: -1.166117787361145
    3. ' ' → logprob: -1.916117787361145
    4. ':' → logprob: -3.1661176681518555
    5. 'while' → logprob: -4.4161176681518555
    6. '  ' → logprob: -4.7911176681518555
    7. '<|end|>' → logprob: -5.0411176681518555
    8. '    ' → logprob: -5.1661176681518555
    9. ' while' → logprob: -5.5411176681518555
    10. ')' → logprob: -6.0411176681518555

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14155089855194092
    2. ' ' → logprob: -2.5165510177612305
    3. '<|end|>' → logprob: -3.8915510177612305
    4. '  ' → logprob: -4.2665510177612305
    5. '    ' → logprob: -4.5165510177612305
    6. ' while' → logprob: -6.3915510177612305
    7. 'while' → logprob: -6.6415510177612305
    8. ':' → logprob: -7.5165510177612305
    9. '    
' → logprob: -7.5165510177612305
    10. '<|end|>' → logprob: -8.14155101776123

Token 26: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1405133157968521
    2. ' while' → logprob: -3.1405134201049805
    3. '<|end|>' → logprob: -3.5155134201049805
    4. ' ' → logprob: -3.7655134201049805
    5. '   ' → logprob: -3.7655134201049805
    6. '    ' → logprob: -5.3905134201049805
    7. '  ' → logprob: -6.0155134201049805
    8. ':' → logprob: -6.3905134201049805
    9. ''' → logprob: -7.5155134201049805
    10. '```' → logprob: -7.6405134201049805

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1269425004720688
    2. 'i' → logprob: -2.1269423961639404
    3. ' ' → logprob: -11.25194263458252
    4. 's' → logprob: -15.00194263458252
    5. ' s' → logprob: -15.50194263458252
    6. '<|end|>' → logprob: -15.50194263458252
    7. '  ' → logprob: -15.62694263458252
    8. '(i' → logprob: -15.62694263458252
    9. '	i' → logprob: -16.251941680908203
    10. '   ' → logprob: -16.751941680908203

Token 28: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5767362117767334
    2. '<' → logprob: -0.8267362117767334
    3. ' ' → logprob: -7.3267364501953125
    4. '<len' → logprob: -9.326736450195312
    5. ' <=' → logprob: -11.201736450195312
    6. '<=' → logprob: -11.451736450195312
    7. '<size' → logprob: -11.826736450195312
    8. '<n' → logprob: -12.326736450195312
    9. '<int' → logprob: -13.076736450195312
    10. '<num' → logprob: -13.201736450195312

Token 29: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5759401917457581
    2. ' len' → logprob: -0.8259401917457581
    3. '(len' → logprob: -14.450940132141113
    4. ' ' → logprob: -16.20094108581543
    5. '=len' → logprob: -16.20094108581543
    6. '   ' → logprob: -16.70094108581543
    7. '<len' → logprob: -17.07594108581543
    8. '	len' → logprob: -18.07594108581543
    9. '[len' → logprob: -18.32594108581543
    10. ',len' → logprob: -18.82594108581543

Token 30: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.436450636712834e-05
    2. '(' → logprob: -9.750094413757324
    3. 's' → logprob: -10.250094413757324
    4. '(result' → logprob: -15.250094413757324
    5. ')' → logprob: -16.500093460083008
    6. '(line' → logprob: -16.500093460083008
    7. '(
' → logprob: -16.750093460083008
    8. ' s' → logprob: -17.000093460083008
    9. ' (' → logprob: -17.250093460083008
    10. '(i' → logprob: -18.125093460083008

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08564188331365585
    2. ')' → logprob: -2.585641860961914
    3. ' and' → logprob: -5.210641860961914
    4. 'and' → logprob: -7.335641860961914
    5. '):
' → logprob: -7.585641860961914
    6. ' ):' → logprob: -9.460641860961914
    7. ':' → logprob: -11.210641860961914
    8. ' )' → logprob: -12.085641860961914
    9. ' ' → logprob: -12.460641860961914
    10. '-' → logprob: -12.960641860961914

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02754022926092148
    2. ' if' → logprob: -4.02754020690918
    3. 'if' → logprob: -5.02754020690918
    4. '   ' → logprob: -6.65254020690918
    5. '    ' → logprob: -7.40254020690918
    6. ''' → logprob: -8.02754020690918
    7. ' ' → logprob: -9.40254020690918
    8. ' '' → logprob: -9.65254020690918
    9. 's' → logprob: -10.15254020690918
    10. ':' → logprob: -10.27754020690918

Token 33: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9658816456794739
    2. ' if' → logprob: -1.215881586074829
    3. 'c' → logprob: -1.465881586074829
    4. '       ' → logprob: -2.840881586074829
    5. ' c' → logprob: -4.590881824493408
    6. 'char' → logprob: -4.715881824493408
    7. '   ' → logprob: -4.965881824493408
    8. 'ch' → logprob: -5.590881824493408
    9. ' char' → logprob: -6.840881824493408
    10. ' ' → logprob: -6.965881824493408

Token 34: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03185359016060829
    2. 's' → logprob: -3.531853675842285
    3. ' ' → logprob: -6.406853675842285
    4. ' not' → logprob: -8.531853675842285
    5. ' i' → logprob: -8.906853675842285
    6. ' (' → logprob: -10.156853675842285
    7. 'i' → logprob: -10.656853675842285
    8. ' '' → logprob: -11.031853675842285
    9. '<|end|>' → logprob: -11.406853675842285
    10. '  ' → logprob: -11.906853675842285

Token 35: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -11.500011444091797
    3. '[I' → logprob: -15.750011444091797
    4. '[int' → logprob: -16.000011444091797
    5. '.startswith' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.375011444091797
    7. ' [' → logprob: -16.375011444091797
    8. '[a' → logprob: -16.625011444091797
    9. 'i' → logprob: -16.750011444091797
    10. '[++' → logprob: -16.875011444091797

Token 36: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4951067268848419
    2. ' ==' → logprob: -0.9951066970825195
    3. ' in' → logprob: -5.6201066970825195
    4. '.' → logprob: -5.8701066970825195
    5. '[' → logprob: -5.9951066970825195
    6. '.is' → logprob: -6.1201066970825195
    7. '=' → logprob: -6.2451066970825195
    8. ' ' → logprob: -6.2451066970825195
    9. 'is' → logprob: -6.2451066970825195
    10. ']' → logprob: -6.8701066970825195

Token 37: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6687778234481812
    2. '==' → logprob: -0.7937778234481812
    3. ' in' → logprob: -4.543777942657471
    4. '.is' → logprob: -4.668777942657471
    5. '.' → logprob: -5.168777942657471
    6. 'is' → logprob: -5.793777942657471
    7. ' ' → logprob: -6.293777942657471
    8. '=' → logprob: -7.043777942657471
    9. 'isdigit' → logprob: -7.168777942657471
    10. '=='' → logprob: -7.293777942657471

Token 38: ' '@' (ID: 6565)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07616521418094635
    2. ''"' → logprob: -3.201165199279785
    3. ''s' → logprob: -4.576165199279785
    4. ''a' → logprob: -5.201165199279785
    5. 's' → logprob: -5.701165199279785
    6. ''A' → logprob: -5.951165199279785
    7. ''S' → logprob: -6.451165199279785
    8. '"' → logprob: -6.826165199279785
    9. ''i' → logprob: -6.951165199279785
    10. ''#' → logprob: -7.201165199279785

Token 39: '':
' (ID: 7669)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.5249800086021423
    2. ''' → logprob: -1.399980068206787
    3. '':' → logprob: -2.524980068206787
    4. ' ':' → logprob: -3.649980068206787
    5. '{' → logprob: -3.899980068206787
    6. '*' → logprob: -5.774980068206787
    7. ':' → logprob: -6.024980068206787
    8. ' '' → logprob: -6.024980068206787
    9. '#' → logprob: -6.149980068206787
    10. 'a' → logprob: -6.149980068206787

Token 40: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8665379285812378
    2. '           ' → logprob: -1.8665379285812378
    3. '       ' → logprob: -1.8665379285812378
    4. ''' → logprob: -3.2415380477905273
    5. ':' → logprob: -3.2415380477905273
    6. 'result' → logprob: -3.2415380477905273
    7. '#' → logprob: -3.4915380477905273
    8. ' i' → logprob: -3.8665380477905273
    9. ''s' → logprob: -4.366538047790527
    10. '   ' → logprob: -4.366538047790527

Token 41: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09990003705024719
    2. 'result' → logprob: -3.474900007247925
    3. ' i' → logprob: -3.849900007247925
    4. 'if' → logprob: -4.224900245666504
    5. '           ' → logprob: -4.599900245666504
    6. ' if' → logprob: -5.349900245666504
    7. '       ' → logprob: -5.474900245666504
    8. '#' → logprob: -5.849900245666504
    9. '   ' → logprob: -6.849900245666504
    10. ' result' → logprob: -7.099900245666504

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.450875848531723
    2. '=' → logprob: -1.0758758783340454
    3. ' +=' → logprob: -4.575875759124756
    4. '<|end|>' → logprob: -5.950875759124756
    5. '+=' → logprob: -6.075875759124756
    6. '+' → logprob: -6.075875759124756
    7. 'i' → logprob: -6.825875759124756
    8. ' ' → logprob: -6.950875759124756
    9. '<|end|>' → logprob: -7.075875759124756
    10. 's' → logprob: -7.825875759124756

Token 43: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06817302852869034
    2. ' ' → logprob: -3.1931729316711426
    3. '0' → logprob: -3.8181729316711426
    4. 'i' → logprob: -6.443172931671143
    5. 's' → logprob: -7.568172931671143
    6. ' i' → logprob: -7.818172931671143
    7. '2' → logprob: -9.0681734085083
    8. ' s' → logprob: -9.5681734085083
    9. 'len' → logprob: -9.6931734085083
    10. '3' → logprob: -9.8181734085083

Token 44: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.08325311541557312
    2. '(' → logprob: -2.5832531452178955
    3. 's' → logprob: -5.833252906799316
    4. '('' → logprob: -7.208252906799316
    5. '(i' → logprob: -8.083252906799316
    6. ' (' → logprob: -8.583252906799316
    7. ' ' → logprob: -9.458252906799316
    8. '(
' → logprob: -10.083252906799316
    9. ')' → logprob: -11.833252906799316
    10. '((' → logprob: -11.958252906799316

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7468056082725525
    2. '(i' → logprob: -1.1218056678771973
    3. '(s' → logprob: -1.9968056678771973
    4. ')' → logprob: -4.496805667877197
    5. '('' → logprob: -4.621805667877197
    6. '')' → logprob: -4.746805667877197
    7. '(' → logprob: -4.871805667877197
    8. '[s' → logprob: -4.996805667877197
    9. 's' → logprob: -5.371805667877197
    10. ''' → logprob: -5.996805667877197

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0041991365142166615
    2. ' +' → logprob: -5.504199028015137
    3. '-' → logprob: -9.754199028015137
    4. '1' → logprob: -10.129199028015137
    5. '])' → logprob: -11.754199028015137
    6. ']' → logprob: -12.379199028015137
    7. ']+' → logprob: -13.004199028015137
    8. '2' → logprob: -14.004199028015137
    9. ' ' → logprob: -14.004199028015137
    10. ':' → logprob: -14.504199028015137

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005831766175106168
    2. '2' → logprob: -8.00058364868164
    3. ' ' → logprob: -8.50058364868164
    4. '3' → logprob: -11.12558364868164
    5. '+' → logprob: -12.00058364868164
    6. '```' → logprob: -12.43808364868164
    7. ']' → logprob: -12.62558364868164
    8. '   ' → logprob: -12.87558364868164
    9. '4' → logprob: -13.00058364868164
    10. '  ' → logprob: -13.18808364868164

Token 48: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004427270498126745
    2. ']' → logprob: -5.629427433013916
    3. ':' → logprob: -7.504427433013916
    4. ')' → logprob: -9.004426956176758
    5. ' ])' → logprob: -10.129426956176758
    6. ''])' → logprob: -11.004426956176758
    7. '])
' → logprob: -11.004426956176758
    8. '])-' → logprob: -11.129426956176758
    9. '])+' → logprob: -11.129426956176758
    10. ')])' → logprob: -11.754426956176758

Token 49: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010303948074579239
    2. ')' → logprob: -5.760303974151611
    3. ' *' → logprob: -6.010303974151611
    4. '*' → logprob: -6.635303974151611
    5. '
' → logprob: -7.135303974151611
    6. '            ' → logprob: -7.635303974151611
    7. ')
' → logprob: -7.635303974151611
    8. '               ' → logprob: -7.885303974151611
    9. '+' → logprob: -8.385303497314453
    10. '       ' → logprob: -8.510303497314453

Token 50: ' char' (ID: 1826)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0493820905685425
    2. 'i' → logprob: -1.4243820905685425
    3. '           ' → logprob: -1.6743820905685425
    4. '            ' → logprob: -2.424382209777832
    5. ' ' → logprob: -3.174382209777832
    6. '*' → logprob: -3.924382209777832
    7. ')' → logprob: -4.174382209777832
    8. '    ' → logprob: -4.674382209777832
    9. '+' → logprob: -4.674382209777832
    10. ' *' → logprob: -4.799382209777832

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22637081146240234
    2. '=' → logprob: -1.6013708114624023
    3. 's' → logprob: -7.101370811462402
    4. '=s' → logprob: -8.976370811462402
    5. ' ' → logprob: -12.976370811462402
    6. '_index' → logprob: -14.226370811462402
    7. '```' → logprob: -14.226370811462402
    8. '(s' → logprob: -14.976370811462402
    9. '_' → logprob: -15.101370811462402
    10. ')' → logprob: -15.226370811462402

Token 52: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2812545597553253
    2. 's' → logprob: -1.406254529953003
    3. ' ' → logprob: -9.406254768371582
    4. ''s' → logprob: -12.156254768371582
    5. ' ' → logprob: -12.406254768371582
    6. ' '' → logprob: -12.656254768371582
    7. ''' → logprob: -12.656254768371582
    8. '	s' → logprob: -13.406254768371582
    9. '  ' → logprob: -14.156254768371582
    10. '_s' → logprob: -14.156254768371582

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5252596464706585e-05
    2. '[' → logprob: -10.250044822692871
    3. 'i' → logprob: -12.125044822692871
    4. '```' → logprob: -14.125044822692871
    5. '[
' → logprob: -14.500044822692871
    6. '`' → logprob: -14.750044822692871
    7. '@' → logprob: -14.750044822692871
    8. '[@' → logprob: -15.500044822692871
    9. '[I' → logprob: -15.625044822692871
    10. '@[' → logprob: -15.625044822692871

Token 54: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003135360311716795
    2. '-' → logprob: -8.125313758850098
    3. ' +' → logprob: -11.125313758850098
    4. '[' → logprob: -13.875313758850098
    5. '+
' → logprob: -14.500313758850098
    6. '+i' → logprob: -14.875313758850098
    7. ']+' → logprob: -15.000313758850098
    8. ']' → logprob: -15.750313758850098
    9. '2' → logprob: -16.00031280517578
    10. '```' → logprob: -16.37531280517578

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003598952607717365
    2. ' ' → logprob: -8.125359535217285
    3. '1' → logprob: -10.125359535217285
    4. '3' → logprob: -11.375359535217285
    5. '   ' → logprob: -12.812859535217285
    6. '+' → logprob: -13.250359535217285
    7. '```' → logprob: -13.437859535217285
    8. '0' → logprob: -14.000359535217285
    9. '

' → logprob: -14.812859535217285
    10. '``' → logprob: -14.875359535217285

Token 56: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26196524500846863
    2. ']
' → logprob: -1.511965274810791
    3. ']
' → logprob: -6.011965274810791
    4. '           ' → logprob: -6.136965274810791
    5. '       ' → logprob: -6.261965274810791
    6. ')' → logprob: -7.011965274810791
    7. '']' → logprob: -7.136965274810791
    8. ')
' → logprob: -7.511965274810791
    9. '])' → logprob: -7.886965274810791
    10. ']*' → logprob: -8.761964797973633

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004453497473150492
    2. '       ' → logprob: -6.004453659057617
    3. 'result' → logprob: -7.004453659057617
    4. '               ' → logprob: -7.754453659057617
    5. 'i' → logprob: -8.254453659057617
    6. ' i' → logprob: -9.879453659057617
    7. '   ' → logprob: -10.004453659057617
    8. '```' → logprob: -10.254453659057617
    9. '
' → logprob: -10.379453659057617
    10. '                   ' → logprob: -10.379453659057617

Token 58: ' result' (ID: 1534)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1447041779756546
    2. 'i' → logprob: -2.8947041034698486
    3. 'result' (adapté à ' result') → logprob: -2.8947041034698486
    4. '       ' → logprob: -4.644704341888428
    5. ' i' → logprob: -5.269704341888428
    6. '   ' → logprob: -5.644704341888428
    7. 'for' → logprob: -6.144704341888428
    8. ' result' → logprob: -6.394704341888428
    9. ' for' → logprob: -6.519704341888428
    10. '               ' → logprob: -9.01970386505127

Token 59: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02651636302471161
    2. '+=' → logprob: -3.6515164375305176
    3. '+' → logprob: -8.77651596069336
    4. '+='' → logprob: -11.27651596069336
    5. '+=(' → logprob: -11.40151596069336
    6. '   ' → logprob: -11.65151596069336
    7. ' ' → logprob: -11.65151596069336
    8. '.extend' → logprob: -11.77651596069336
    9. ' +' → logprob: -11.90151596069336
    10. '	' → logprob: -13.27651596069336

Token 60: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.2014273703098297
    2. ' char' → logprob: -1.7014273405075073
    3. '   ' → logprob: -11.951427459716797
    4. ' ' → logprob: -12.451427459716797
    5. '	char' → logprob: -13.451427459716797
    6. '(char' → logprob: -13.701427459716797
    7. ',char' → logprob: -15.701427459716797
    8. '  ' → logprob: -15.951427459716797
    9. '<char' → logprob: -16.201427459716797
    10. 'c' → logprob: -16.201427459716797

Token 61: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28254368901252747
    2. '*' → logprob: -1.407543659210205
    3. '*i' → logprob: -7.032543659210205
    4. 'count' → logprob: -7.907543659210205
    5. '*j' → logprob: -10.782544136047363
    6. ' ' → logprob: -10.782544136047363
    7. '*num' → logprob: -10.782544136047363
    8. '           ' → logprob: -10.907544136047363
    9. '[count' → logprob: -11.282544136047363
    10. '```' → logprob: -11.657544136047363

Token 62: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '(count' → logprob: -16.75007438659668
    4. 'int' → logprob: -19.50007438659668
    5. '	count' → logprob: -20.12507438659668
    6. 'c' → logprob: -20.62507438659668
    7. '   ' → logprob: -20.75007438659668
    8. '[count' → logprob: -20.75007438659668
    9. ' ' → logprob: -20.87507438659668
    10. '$count' → logprob: -20.87507438659668

Token 63: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022735198959708214
    2. '
' → logprob: -4.522735118865967
    3. 'i' → logprob: -4.647735118865967
    4. '       ' → logprob: -6.522735118865967
    5. '   ' → logprob: -8.772735595703125
    6. ' i' → logprob: -8.772735595703125
    7. '               ' → logprob: -9.397735595703125
    8. '        
' → logprob: -10.272735595703125
    9. '            
' → logprob: -10.272735595703125
    10. '    
' → logprob: -10.522735595703125

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038200297858566046
    2. 'i' → logprob: -6.128819942474365
    3. '
' → logprob: -7.253819942474365
    4. '       ' → logprob: -7.378819942474365
    5. ' i' → logprob: -9.128820419311523
    6. '   ' → logprob: -9.503820419311523
    7. '               ' → logprob: -10.003820419311523
    8. '```' → logprob: -10.003820419311523
    9. '                   ' → logprob: -12.253820419311523
    10. '            
' → logprob: -12.503820419311523

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.020009316504001617
    2. ' i' → logprob: -4.520009517669678
    3. '           ' → logprob: -4.770009517669678
    4. '   ' → logprob: -7.895009517669678
    5. '       ' → logprob: -9.89500904083252
    6. '               ' → logprob: -12.02000904083252
    7. '
' → logprob: -12.77000904083252
    8. '	i' → logprob: -13.02000904083252
    9. '```' → logprob: -13.14500904083252
    10. '  ' → logprob: -13.64500904083252

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003940429072827101
    2. ' +=' → logprob: -5.628940582275391
    3. '+' → logprob: -8.00394058227539
    4. '=' → logprob: -12.12894058227539
    5. '   ' → logprob: -15.25394058227539
    6. ' ' → logprob: -15.75394058227539
    7. '```' → logprob: -16.25394058227539
    8. ']+=' → logprob: -16.75394058227539
    9. '  ' → logprob: -16.87894058227539
    10. '3' → logprob: -17.25394058227539

Token 67: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '4' → logprob: -15.62500286102295
    4. '   ' → logprob: -17.000001907348633
    5. '  ' → logprob: -18.125001907348633
    6. '۳' → logprob: -19.250001907348633
    7. '৩' → logprob: -19.375001907348633
    8. '           ' → logprob: -19.437501907348633
    9. '```' → logprob: -19.687501907348633
    10. '３' → logprob: -19.687501907348633

Token 68: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. '4' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '  ' → logprob: -17.750001907348633
    6. '৩' → logprob: -18.875001907348633
    7. '۳' → logprob: -18.875001907348633
    8. '३' → logprob: -19.250001907348633
    9. '３' → logprob: -19.375001907348633
    10. '```' → logprob: -19.625001907348633

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025156119372695684
    2. 'else' → logprob: -6.37751579284668
    3. ' else' → logprob: -7.25251579284668
    4. '   ' → logprob: -9.25251579284668
    5. '```' → logprob: -12.50251579284668
    6. '<|end|>' → logprob: -13.37751579284668
    7. '      ' → logprob: -13.62751579284668
    8. '	else' → logprob: -14.12751579284668
    9. 'elif' → logprob: -14.87751579284668
    10. '           ' → logprob: -15.12751579284668

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003155625017825514
    2. 'else' → logprob: -8.87531566619873
    3. '   ' → logprob: -9.50031566619873
    4. ' else' → logprob: -9.87531566619873
    5. '```' → logprob: -10.25031566619873
    6. '<|end|>' → logprob: -11.37531566619873
    7. '      ' → logprob: -14.50031566619873
    8. 'elif' → logprob: -14.75031566619873
    9. '           ' → logprob: -14.87531566619873
    10. '	' → logprob: -15.62531566619873

Token 71: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6977375745773315
    2. 'else' (adapté à ' else') → logprob: -0.9477375745773315
    3. ' else' → logprob: -2.447737693786621
    4. '   ' → logprob: -3.572737693786621
    5. '	else' → logprob: -9.447737693786621
    6. '```' → logprob: -11.447737693786621
    7. 'elif' → logprob: -11.572737693786621
    8. ' ' → logprob: -13.947737693786621
    9. '<|end|>' → logprob: -14.197737693786621
    10. '  ' → logprob: -14.197737693786621

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009961948730051517
    2. ':
' → logprob: -5.13496208190918
    3. '       ' → logprob: -6.13496208190918
    4. '           ' → logprob: -6.63496208190918
    5. 'result' → logprob: -8.25996208190918
    6. '   ' → logprob: -9.13496208190918
    7. ' :' → logprob: -10.00996208190918
    8. ' result' → logprob: -10.38496208190918
    9. '<|end|>' → logprob: -10.88496208190918
    10. '```' → logprob: -11.25996208190918

Token 73: '           ' (ID: 352)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.017468279227614403
    2. ' result' → logprob: -4.642468452453613
    3. '       ' → logprob: -5.517468452453613
    4. '           ' → logprob: -5.892468452453613
    5. '   ' → logprob: -7.267468452453613
    6. ' ' → logprob: -8.767468452453613
    7. '```' → logprob: -10.642468452453613
    8. '	result' → logprob: -11.267468452453613
    9. '  ' → logprob: -12.267468452453613
    10. ',result' → logprob: -12.892468452453613

Token 74: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -6.754368223482743e-05
    2. ' result' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.500067710876465
    4. ' ' → logprob: -14.625067710876465
    5. '           ' → logprob: -15.500067710876465
    6. '	result' → logprob: -16.12506675720215
    7. '       ' → logprob: -16.62506675720215
    8. '  ' → logprob: -17.00006675720215
    9. '```' → logprob: -17.75006675720215
    10. '$result' → logprob: -19.12506675720215

Token 75: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17057298123836517
    2. ' +=' → logprob: -2.1705729961395264
    3. '+' → logprob: -3.1705729961395264
    4. '+='' → logprob: -7.295572757720947
    5. '+="' → logprob: -10.045573234558105
    6. ' +' → logprob: -12.920573234558105
    7. ']+=' → logprob: -13.795573234558105
    8. '+=(' → logprob: -13.920573234558105
    9. '.append' → logprob: -15.670573234558105
    10. '[' → logprob: -17.29557228088379

Token 76: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692926824092865
    2. ' s' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.00192928314209
    4. '   ' → logprob: -16.251928329467773
    5. '(s' → logprob: -16.251928329467773
    6. '	s' → logprob: -16.376928329467773
    7. ''s' → logprob: -17.126928329467773
    8. ' ' → logprob: -17.876928329467773
    9. '_s' → logprob: -18.001928329467773
    10. 'line' → logprob: -18.501928329467773

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.676292231422849e-05
    2. '[' → logprob: -11.000017166137695
    3. 'i' → logprob: -17.000017166137695
    4. '```' → logprob: -17.500017166137695
    5. '[I' → logprob: -18.875017166137695
    6. '`' → logprob: -19.500017166137695
    7. ' [' → logprob: -20.125017166137695
    8. '[
' → logprob: -21.125017166137695
    9. '   ' → logprob: -21.125017166137695
    10. '[`' → logprob: -21.750017166137695

Token 78: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38857558369636536
    2. ')
' → logprob: -1.388575553894043
    3. ']' → logprob: -2.763575553894043
    4. ']
' → logprob: -4.888575553894043
    5. '<|end|>' → logprob: -7.388575553894043
    6. 'i' → logprob: -8.888575553894043
    7. '<|end|>' → logprob: -8.888575553894043
    8. '}' → logprob: -9.013575553894043
    9. '')' → logprob: -9.013575553894043
    10. '```' → logprob: -9.388575553894043

Token 79: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10962092876434326
    2. '       ' → logprob: -2.484621047973633
    3. 'i' → logprob: -4.234621047973633
    4. '    
' → logprob: -6.109621047973633
    5. '           ' → logprob: -6.484621047973633
    6. ' i' → logprob: -7.234621047973633
    7. '        
' → logprob: -7.734621047973633
    8. '```' → logprob: -7.859621047973633
    9. '
' → logprob: -8.734621047973633
    10. '    ' → logprob: -9.109621047973633

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0017862061504274607
    2. ' i' → logprob: -6.376786231994629
    3. '   ' → logprob: -9.876786231994629
    4. '1' → logprob: -10.376786231994629
    5. '           ' → logprob: -14.376786231994629
    6. '	i' → logprob: -15.126786231994629
    7. '```' → logprob: -15.126786231994629
    8. '       ' → logprob: -15.501786231994629
    9. '_i' → logprob: -16.376785278320312
    10. ' ' → logprob: -16.876785278320312

Token 81: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20691423118114471
    2. '+' → logprob: -1.7069141864776611
    3. ' +=' → logprob: -5.20691442489624
    4. '++' → logprob: -12.331913948059082
    5. '=' → logprob: -13.456913948059082
    6. '+="' → logprob: -14.831913948059082
    7. '+='' → logprob: -15.081913948059082
    8. '1' → logprob: -15.206913948059082
    9. '+++' → logprob: -15.206913948059082
    10. ' +' → logprob: -17.0819149017334

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -19.500001907348633
    5. '۱' → logprob: -20.625001907348633
    6. '  ' → logprob: -21.125001907348633
    7. '１' → logprob: -21.125001907348633
    8. '﻿' → logprob: -21.312501907348633
    9. '+' → logprob: -21.937501907348633
    10. '<|end|>' → logprob: -22.312501907348633

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.75
    4. '۱' → logprob: -19.75
    5. '１' → logprob: -20.9375
    6. '१' → logprob: -21.125
    7. '   ' → logprob: -21.1875
    8. '﻿' → logprob: -21.3125
    9. '0' → logprob: -21.4375
    10. '<|end|>' → logprob: -21.5

Token 84: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08633297681808472
    2. '
' → logprob: -3.2113330364227295
    3. '\n' → logprob: -3.7113330364227295
    4. '<|end|>' → logprob: -4.58633279800415
    5. '```' → logprob: -6.08633279800415
    6. '   ' → logprob: -6.21133279800415
    7. 'return' → logprob: -7.08633279800415
    8. '    
' → logprob: -7.46133279800415
    9. '#' → logprob: -7.46133279800415
    10. ' print' → logprob: -8.086333274841309

Token 85: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016157961217686534
    2. '<|end|>' → logprob: -8.001615524291992
    3. ' print' → logprob: -8.251615524291992
    4. '#' → logprob: -8.251615524291992
    5. '```' → logprob: -8.501615524291992
    6. '
' → logprob: -8.626615524291992
    7. '\n' → logprob: -9.001615524291992
    8. 'return' → logprob: -9.251615524291992
    9. '   ' → logprob: -9.626615524291992
    10. '#print' → logprob: -10.501615524291992

Token 86: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9385402993066236e-05
    2. ' print' → logprob: -11.625019073486328
    3. '```' → logprob: -12.250019073486328
    4. '<|end|>' → logprob: -12.625019073486328
    5. 'for' → logprob: -13.875019073486328
    6. '#print' → logprob: -14.750019073486328
    7. '   ' → logprob: -15.000019073486328
    8. '#' → logprob: -15.750019073486328
    9. ')' → logprob: -16.125019073486328
    10. '(print' → logprob: -16.250019073486328

Token 87: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019522057846188545
    2. '(result' → logprob: -4.019522190093994
    3. '('' → logprob: -6.769522190093994
    4. '()' → logprob: -8.644521713256836
    5. '(`' → logprob: -10.269521713256836
    6. '("("' → logprob: -12.019521713256836
    7. '(
' → logprob: -13.394521713256836
    8. 'result' → logprob: -13.894521713256836
    9. '(parent' → logprob: -14.769521713256836
    10. '(res' → logprob: -15.019521713256836

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -17.375
    4. ')`' → logprob: -17.5
    5. '))' → logprob: -18.875
    6. '')' → logprob: -18.875
    7. '`)' → logprob: -18.875
    8. '()' → logprob: -19.25
    9. '(' → logprob: -19.25
    10. '")' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 43.02%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 83.72%
================================================================================
