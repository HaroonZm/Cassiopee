================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SugorokuBoard:
    def __init__(self, cells):
        self.cells = cells
        self.size = len(cells)

    def move(self, position, steps):
        next_pos = position + steps
        if next_pos >= self.size:
            # Reached or passed goal
            return self.size
        # Follow the cell's instruction once
        instruction = self.cells[next_pos]
        moved_pos = next_pos + instruction
        if moved_pos < 0:
            moved_pos = 0  # safeguard but as per problem won't happen
        return moved_pos


class Dice:
    def __init__(self, throws):
        self.throws = throws
        self.index = 0

    def next_throw(self):
        if self.index >= len(self.throws):
            raise IndexError("No more dice throws available")
        val = self.throws[self.index]
        self.index += 1
        return val


class SugorokuGame:
    def __init__(self, board: SugorokuBoard, dice: Dice):
        self.board = board
        self.dice = dice
        self.position = 0  # 0-based index for first cell

    def play_until_goal(self):
        rolls_count = 0
        while self.position < self.board.size - 1:
            roll = self.dice.next_throw()
            rolls_count += 1
            self.position = self.board.move(self.position, roll)
        return rolls_count


class SugorokuFactory:
    @staticmethod
    def create_game(n, m, cells, dice_throws):
        # cells come 0-based but problem is 1-based; just use 0-based internally
        # Validate first cell instruction is zero as per problem statement
        if cells[0] != 0:
            raise ValueError("Start cell instruction must be 0")
        # Validate dice_throws length and first dice throw == 0 as per input format
        if dice_throws[0] != 0:
            raise ValueError("First dice throw must be 0")
        board = SugorokuBoard(cells)
        dice = Dice(dice_throws)
        return SugorokuGame(board, dice)


class SugorokuInputParser:
    def __init__(self):
        self.datasets = []

    def parse_all(self):
        import sys
        lines = sys.stdin.read().strip().split('\n')
        idx = 0
        while idx < len(lines):
            if lines[idx].strip() == '':
                idx += 1
                continue
            n, m = map(int, lines[idx].split())
            idx += 1
            if n == 0 and m == 0:
                break
            cells = []
            for _ in range(n):
                cells.append(int(lines[idx]))
                idx += 1
            dice_throws = []
            for _ in range(m):
                dice_throws.append(int(lines[idx]))
                idx += 1
            self.datasets.append((n, m, cells, dice_throws))


class SugorokuSolver:
    def __init__(self):
        self.parser = SugorokuInputParser()

    def solve(self):
        self.parser.parse_all()
        results = []
        for n, m, cells, dice_throws in self.parser.datasets:
            game = SugorokuFactory.create_game(n, m, cells, dice_throws)
            rolls = game.play_until_goal()
            results.append(str(rolls))
        print('\n'.join(results))


if __name__ == "__main__":
    solver = SugorokuSolver()
    solver.solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sug' (ID: 111433)
  → Token d'amorce (pas de prédiction)

Token 2: 'or' (ID: 267)
  → Token d'amorce (pas de prédiction)

Token 3: 'oku' (ID: 13454)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20115317404270172
    2. '(' → logprob: -2.45115327835083
    3. '{' → logprob: -2.57615327835083
    4. ' :' → logprob: -4.82615327835083
    5. ' {' → logprob: -5.45115327835083
    6. '```' → logprob: -6.20115327835083
    7. 's' → logprob: -6.32615327835083
    8. ' ' → logprob: -6.45115327835083
    9. '.' → logprob: -7.20115327835083
    10. '[' → logprob: -7.82615327835083

Token 4: 'Board' (ID: 14558)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.0934216976165771
    2. ':' → logprob: -1.5934216976165771
    3. ' {' → logprob: -1.5934216976165771
    4. ' ' → logprob: -1.8434216976165771
    5. '(' → logprob: -2.468421697616577
    6. '.' → logprob: -4.968421936035156
    7. '```' → logprob: -5.468421936035156
    8. ' :' → logprob: -6.593421936035156
    9. '  
' → logprob: -7.593421936035156
    10. ' (' → logprob: -7.968421936035156

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1748395562171936
    2. '{' → logprob: -2.049839496612549
    3. '.' → logprob: -4.174839496612549
    4. '(' → logprob: -4.424839496612549
    5. ' {' → logprob: -5.549839496612549
    6. '```' → logprob: -8.799839973449707
    7. '[' → logprob: -9.299839973449707
    8. ' :' → logprob: -10.049839973449707
    9. ' ' → logprob: -10.549839973449707
    10. '(:' → logprob: -11.299839973449707

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07057060301303864
    2. '(' → logprob: -2.945570707321167
    3. '.' → logprob: -4.945570468902588
    4. '   ' → logprob: -5.195570468902588
    5. '```' → logprob: -6.195570468902588
    6. ':
' → logprob: -8.070570945739746
    7. '[' → logprob: -8.195570945739746
    8. '(
' → logprob: -9.320570945739746
    9. '():' → logprob: -10.320570945739746
    10. ' :' → logprob: -10.945570945739746

Token 7: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7281575798988342
    2. ' ' → logprob: -1.3531575202941895
    3. '```' → logprob: -2.7281575202941895
    4. '<|end|>' → logprob: -2.9781575202941895
    5. '    ' → logprob: -3.1031575202941895
    6. '\' → logprob: -3.6031575202941895
    7. '\n' → logprob: -4.1031575202941895
    8. '    
' → logprob: -4.8531575202941895
    9. '(' → logprob: -5.1031575202941895
    10. ' 
' → logprob: -5.1031575202941895

Token 8: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19183965027332306
    2. '__' → logprob: -2.1918396949768066
    3. ' __' → logprob: -2.8168396949768066
    4. ' ' → logprob: -6.566839694976807
    5. '_' → logprob: -7.816839694976807
    6. '  ' → logprob: -8.191839218139648
    7. '<|end|>' → logprob: -8.941839218139648
    8. ')' → logprob: -9.066839218139648
    9. ' add' → logprob: -10.066839218139648
    10. ' init' → logprob: -10.129339218139648

Token 9: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.263011578586884e-05
    2. ' init' → logprob: -10.625042915344238
    3. '_init' → logprob: -11.375042915344238
    4. 'ini' → logprob: -12.500042915344238
    5. 'i' → logprob: -13.750042915344238
    6. '_' → logprob: -14.250042915344238
    7. 'in' → logprob: -14.625042915344238
    8. '_i' → logprob: -15.125042915344238
    9. 'int' → logprob: -15.250042915344238
    10. '__' → logprob: -15.875042915344238

Token 10: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07128940522670746
    2. '__' → logprob: -2.696289300918579
    3. '__(
' → logprob: -7.071289539337158
    4. '(' → logprob: -8.1962890625
    5. '__((' → logprob: -9.3212890625
    6. '(self' → logprob: -10.1962890625
    7. '__('' → logprob: -10.4462890625
    8. '_' → logprob: -10.5712890625
    9. '__(*' → logprob: -10.9462890625
    10. '_(' → logprob: -11.6962890625

Token 11: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003626439021900296
    2. ' self' → logprob: -5.628626346588135
    3. ')' → logprob: -10.878626823425293
    4. '(self' → logprob: -13.003626823425293
    5. ' ' → logprob: -13.628626823425293
    6. 's' → logprob: -13.753626823425293
    7. '_self' → logprob: -14.128626823425293
    8. ' )' → logprob: -15.128626823425293
    9. '    ' → logprob: -15.128626823425293
    10. '   ' → logprob: -15.378626823425293

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021304098889231682
    2. '):' → logprob: -4.521304130554199
    3. 'self' → logprob: -4.771304130554199
    4. ')' → logprob: -7.646304130554199
    5. ' ,' → logprob: -8.3963041305542
    6. '<|end|>' → logprob: -8.3963041305542
    7. 's' → logprob: -9.0213041305542
    8. '(self' → logprob: -9.1463041305542
    9. '_self' → logprob: -9.3963041305542
    10. ',self' → logprob: -9.3963041305542

Token 13: ' cells' (ID: 11242)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20728161931037903
    2. 'self' → logprob: -1.7072815895080566
    3. ' board' → logprob: -6.207281589508057
    4. ')' → logprob: -6.332281589508057
    5. ' player' → logprob: -7.082281589508057
    6. ' )' → logprob: -7.457281589508057
    7. 'player' → logprob: -8.707282066345215
    8. 'board' → logprob: -9.457282066345215
    9. ' players' → logprob: -9.957282066345215
    10. ' positions' → logprob: -10.082282066345215

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026580586563795805
    2. ':' → logprob: -6.502657890319824
    3. '):
' → logprob: -7.377657890319824
    4. '=' → logprob: -8.127657890319824
    5. ',' → logprob: -9.627657890319824
    6. '   ' → logprob: -9.752657890319824
    7. ')' → logprob: -10.127657890319824
    8. ' ):' → logprob: -10.377657890319824
    9. '[' → logprob: -11.877657890319824
    10. ' ' → logprob: -12.127657890319824

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17740310728549957
    2. ':' → logprob: -2.052403211593628
    3. '<|end|>' → logprob: -4.052402973175049
    4. '   ' → logprob: -5.427402973175049
    5. '\' → logprob: -5.927402973175049
    6. '    ' → logprob: -6.177402973175049
    7. '(' → logprob: -6.802402973175049
    8. '        ' → logprob: -6.927402973175049
    9. '_' → logprob: -7.427402973175049
    10. '.' → logprob: -7.677402973175049

Token 16: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7940183877944946
    2. 'self' (adapté à ' self') → logprob: -0.9190183877944946
    3. '       ' → logprob: -2.419018268585205
    4. '<|end|>' → logprob: -3.544018268585205
    5. ' ' → logprob: -4.419018268585205
    6. '        ' → logprob: -5.044018268585205
    7. ' ' → logprob: -5.794018268585205
    8. '\' → logprob: -6.169018268585205
    9. '```' → logprob: -6.419018268585205
    10. '   ' → logprob: -6.669018268585205

Token 17: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.5767672061920166
    2. '.' → logprob: -0.8267672061920166
    3. ' .' → logprob: -7.3267669677734375
    4. '.s' → logprob: -9.951766967773438
    5. '.board' → logprob: -11.201766967773438
    6. '.c' → logprob: -11.451766967773438
    7. '._' → logprob: -11.826766967773438
    8. '.cell' → logprob: -11.826766967773438
    9. '.Cells' → logprob: -12.326766967773438
    10. '.next' → logprob: -12.326766967773438

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11322519183158875
    2. '=' → logprob: -2.238225221633911
    3. '.' → logprob: -8.613224983215332
    4. '<|end|>' → logprob: -9.738224983215332
    5. '[' → logprob: -9.988224983215332
    6. ' ' → logprob: -10.613224983215332
    7. '   ' → logprob: -10.988224983215332
    8. ')' → logprob: -11.488224983215332
    9. '=[]' → logprob: -11.488224983215332
    10. '[:]' → logprob: -11.613224983215332

Token 19: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.12693022191524506
    2. 'cells' → logprob: -2.1269302368164062
    3. '.cells' → logprob: -13.876930236816406
    4. '[]' → logprob: -14.876930236816406
    5. '_cells' → logprob: -15.251930236816406
    6. 'cel' → logprob: -16.251930236816406
    7. ' [' → logprob: -16.251930236816406
    8. '   ' → logprob: -16.251930236816406
    9. ' []' → logprob: -16.376930236816406
    10. ' ' → logprob: -16.626930236816406

Token 20: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19907893240451813
    2. '[' → logprob: -2.4490790367126465
    3. '   ' → logprob: -3.1990790367126465
    4. '\' → logprob: -4.0740790367126465
    5. '<|end|>' → logprob: -4.5740790367126465
    6. '```' → logprob: -5.0740790367126465
    7. '\n' → logprob: -5.1990790367126465
    8. '
' → logprob: -5.6990790367126465
    9. '[
' → logprob: -5.9490790367126465
    10. '.
' → logprob: -6.3240790367126465

Token 21: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33562472462654114
    2. '<|end|>' → logprob: -2.3356246948242188
    3. '
' → logprob: -2.7106246948242188
    4. '   ' → logprob: -2.8356246948242188
    5. '[' → logprob: -3.7106246948242188
    6. ':' → logprob: -4.835624694824219
    7. '```' → logprob: -5.460624694824219
    8. '\n' → logprob: -5.460624694824219
    9. '\' → logprob: -5.710624694824219
    10. ',' → logprob: -5.710624694824219

Token 22: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7425306439399719
    2. '   ' → logprob: -2.117530584335327
    3. '\n' → logprob: -2.242530584335327
    4. '<|end|>' → logprob: -2.367530584335327
    5. '\' → logprob: -2.742530584335327
    6. '.' → logprob: -2.867530584335327
    7. '    
' → logprob: -3.617530584335327
    8. '```' → logprob: -4.742530822753906
    9. ' ' → logprob: -4.867530822753906
    10. 'def' → logprob: -4.992530822753906

Token 23: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002136697992682457
    2. '.cells' → logprob: -6.377136707305908
    3. ' .' → logprob: -9.12713623046875
    4. '.points' → logprob: -9.62713623046875
    5. '.next' → logprob: -10.12713623046875
    6. '[' → logprob: -10.75213623046875
    7. '.values' → logprob: -10.87713623046875
    8. '.steps' → logprob: -11.25213623046875
    9. '.s' → logprob: -11.37713623046875
    10. '.tokens' → logprob: -11.37713623046875

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06231754273176193
    2. '=' → logprob: -2.8123176097869873
    3. '<|end|>' → logprob: -8.312317848205566
    4. ' ' → logprob: -10.312317848205566
    5. ')' → logprob: -10.937317848205566
    6. '_' → logprob: -10.937317848205566
    7. '<|end|>' → logprob: -11.562317848205566
    8. '.' → logprob: -12.312317848205566
    9. '   ' → logprob: -12.437317848205566
    10. '=len' → logprob: -12.812317848205566

Token 25: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0004317420825827867
    2. 'len' → logprob: -7.750431537628174
    3. '=len' → logprob: -14.250432014465332
    4. '(len' → logprob: -15.375432014465332
    5. ' ' → logprob: -16.500431060791016
    6. '[len' → logprob: -16.875431060791016
    7. ' ' → logprob: -17.000431060791016
    8. '	len' → logprob: -17.125431060791016
    9. ',len' → logprob: -18.125431060791016
    10. '<len' → logprob: -19.250431060791016

Token 26: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.07904114574193954
    2. '(' → logprob: -2.8290412425994873
    3. '(self' → logprob: -4.079041004180908
    4. '(s' → logprob: -12.579041481018066
    5. '(cell' → logprob: -14.579041481018066
    6. 'cells' → logprob: -15.454041481018066
    7. '(
' → logprob: -15.704041481018066
    8. 'self' → logprob: -16.07904052734375
    9. '(

' → logprob: -16.07904052734375
    10. '(this' → logprob: -16.20404052734375

Token 27: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -9.507972572464496e-05
    2. 'ell' → logprob: -10.25009536743164
    3. 'els' → logprob: -10.75009536743164
    4. 'cells' → logprob: -11.62509536743164
    5. '(self' → logprob: -11.87509536743164
    6. '```' → logprob: -11.87509536743164
    7. ')' → logprob: -12.50009536743164
    8. ' ' → logprob: -13.37509536743164
    9. 'el' → logprob: -13.50009536743164
    10. 'self' → logprob: -13.62509536743164

Token 28: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -14.12500286102295
    3. '   ' → logprob: -14.37500286102295
    4. ')
' → logprob: -14.37500286102295
    5. ' )' → logprob: -14.37500286102295
    6. '```' → logprob: -16.250003814697266
    7. '`)' → logprob: -16.500003814697266
    8. '       ' → logprob: -16.500003814697266
    9. ')))' → logprob: -16.500003814697266
    10. '）' → logprob: -16.625003814697266

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6093697547912598
    2. '
' → logprob: -1.8593697547912598
    3. '<|end|>' → logprob: -2.3593697547912598
    4. 'def' → logprob: -2.7343697547912598
    5. '.' → logprob: -2.9843697547912598
    6. '    
' → logprob: -4.23436975479126
    7. '\' → logprob: -4.23436975479126
    8. ' def' → logprob: -4.23436975479126
    9. ',' → logprob: -4.85936975479126
    10. '```' → logprob: -4.98436975479126

Token 30: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08156106621026993
    2. '    
' → logprob: -3.2065610885620117
    3. 'def' (adapté à ' def') → logprob: -4.206561088562012
    4. ' def' → logprob: -5.331561088562012
    5. '```' → logprob: -5.331561088562012
    6. '\n' → logprob: -5.581561088562012
    7. '\' → logprob: -6.081561088562012
    8. ' ' → logprob: -6.331561088562012
    9. '
' → logprob: -7.081561088562012
    10. '    ' → logprob: -7.206561088562012

Token 31: ' move' (ID: 5275)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.08743579685688019
    2. ' ' → logprob: -2.962435722351074
    3. ' space' → logprob: -4.837435722351074
    4. 'get' → logprob: -5.087435722351074
    5. '_' → logprob: -5.587435722351074
    6. ' reset' → logprob: -5.712435722351074
    7. ' move' → logprob: -5.712435722351074
    8. ' is' → logprob: -6.212435722351074
    9. ' __' → logprob: -7.587435722351074
    10. ' add' → logprob: -7.837435722351074

Token 32: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29475101828575134
    2. '_' → logprob: -1.6697510480880737
    3. '(self' → logprob: -2.794750928878784
    4. '_space' → logprob: -6.419751167297363
    5. '_token' → logprob: -7.419751167297363
    6. '_self' → logprob: -7.419751167297363
    7. ' (' → logprob: -7.669751167297363
    8. '_s' → logprob: -8.044751167297363
    9. '_cell' → logprob: -8.294751167297363
    10. '_to' → logprob: -8.544751167297363

Token 33: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24134157598018646
    2. ',' → logprob: -1.8663415908813477
    3. '_' → logprob: -3.8663415908813477
    4. 'self' → logprob: -3.9913415908813477
    5. ' )' → logprob: -4.491341590881348
    6. ' ,' → logprob: -6.116341590881348
    7. '_token' → logprob: -6.366341590881348
    8. '_player' → logprob: -6.866341590881348
    9. ' ' → logprob: -6.991341590881348
    10. '(self' → logprob: -7.616341590881348

Token 34: ' position' (ID: 4010)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6904918551445007
    2. ' steps' → logprob: -1.5654919147491455
    3. 'self' → logprob: -2.3154919147491455
    4. ' position' → logprob: -2.4404919147491455
    5. ' current' → logprob: -3.6904919147491455
    6. 'position' → logprob: -3.9404919147491455
    7. 'steps' → logprob: -3.9404919147491455
    8. ' player' → logprob: -4.315491676330566
    9. ' pos' → logprob: -5.190491676330566
    10. ' step' → logprob: -5.315491676330566

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03836080804467201
    2. '):' → logprob: -3.288360834121704
    3. ' ,' → logprob: -8.413360595703125
    4. ')' → logprob: -9.413360595703125
    5. ' ):' → logprob: -12.163360595703125
    6. ':' → logprob: -12.913360595703125
    7. '):
' → logprob: -13.038360595703125
    8. '+' → logprob: -14.288360595703125
    9. ',
' → logprob: -14.288360595703125
    10. '=' → logprob: -14.538360595703125

Token 36: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.07993671298027039
    2. 'steps' → logprob: -2.5799367427825928
    3. ' step' → logprob: -7.454936504364014
    4. ' roll' → logprob: -8.954936981201172
    5. ' dice' → logprob: -9.079936981201172
    6. 'step' → logprob: -9.204936981201172
    7. ' ' → logprob: -10.454936981201172
    8. ' spaces' → logprob: -10.954936981201172
    9. 'roll' → logprob: -11.079936981201172
    10. 'dice' → logprob: -11.704936981201172

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003632504027336836
    2. ')' → logprob: -5.628632545471191
    3. '):
' → logprob: -11.253632545471191
    4. ':' → logprob: -11.378632545471191
    5. ' ):' → logprob: -12.378632545471191
    6. '   ' → logprob: -13.378632545471191
    7. ',' → logprob: -14.253632545471191
    8. '=' → logprob: -14.378632545471191
    9. ')：' → logprob: -15.878632545471191
    10. ' ' → logprob: -16.253631591796875

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05474257469177246
    2. ':' → logprob: -4.054742813110352
    3. '        ' → logprob: -4.429742813110352
    4. '<|end|>' → logprob: -4.804742813110352
    5. ')' → logprob: -5.804742813110352
    6. '#' → logprob: -6.179742813110352
    7. ' 
' → logprob: -6.304742813110352
    8. ' ' → logprob: -6.554742813110352
    9. ',' → logprob: -6.804742813110352
    10. '        
' → logprob: -7.304742813110352

Token 39: ' next' (ID: 2613)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5957505702972412
    2. '       ' → logprob: -1.4707505702972412
    3. 'n' → logprob: -2.720750570297241
    4. ' return' → logprob: -3.345750570297241
    5. ' n' → logprob: -3.845750570297241
    6. '        ' → logprob: -3.970750570297241
    7. ' next' → logprob: -4.09575080871582
    8. 'new' → logprob: -4.22075080871582
    9. 'return' → logprob: -4.97075080871582
    10. ' position' → logprob: -4.97075080871582

Token 40: '_pos' (ID: 14692)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.026656365022063255
    2. '_' → logprob: -4.026656150817871
    3. '_pos' → logprob: -4.776656150817871
    4. '_index' → logprob: -10.151656150817871
    5. '_step' → logprob: -13.026656150817871
    6. 'Position' → logprob: -13.651656150817871
    7. '_positions' → logprob: -14.026656150817871
    8. '_space' → logprob: -14.151656150817871
    9. '_cell' → logprob: -14.901656150817871
    10. ' _' → logprob: -14.901656150817871

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761308073997498
    2. ' =' → logprob: -0.8261308073997498
    3. 'ition' → logprob: -8.826130867004395
    4. '   ' → logprob: -10.826130867004395
    5. ' ' → logprob: -11.326130867004395
    6. ')' → logprob: -12.701130867004395
    7. 's' → logprob: -13.076130867004395
    8. '_' → logprob: -13.201130867004395
    9. '=

' → logprob: -14.076130867004395
    10. '```' → logprob: -14.201130867004395

Token 42: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.048798102885484695
    2. ' min' → logprob: -3.423798084259033
    3. 'position' → logprob: -4.298798084259033
    4. 'min' → logprob: -6.798798084259033
    5. ' (' → logprob: -8.298798561096191
    6. ' max' → logprob: -10.048798561096191
    7. '(position' → logprob: -10.423798561096191
    8. '(min' → logprob: -11.673798561096191
    9. 'max' → logprob: -12.673798561096191
    10. '(' → logprob: -13.298798561096191

Token 43: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038044244050979614
    2. '+' → logprob: -3.2880442142486572
    3. '<|end|>' → logprob: -14.038043975830078
    4. ' +
' → logprob: -14.163043975830078
    5. ' ' → logprob: -14.788043975830078
    6. ' plus' → logprob: -14.913043975830078
    7. ' +=' → logprob: -16.163043975830078
    8. '[' → logprob: -16.413043975830078
    9. '<|end|>' → logprob: -16.663043975830078
    10. ' ' → logprob: -16.663043975830078

Token 44: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.42870983481407166
    2. ' steps' → logprob: -1.053709864616394
    3. 'step' → logprob: -12.803709983825684
    4. ' ' → logprob: -13.178709983825684
    5. '   ' → logprob: -13.553709983825684
    6. '1' → logprob: -14.053709983825684
    7. 's' → logprob: -14.553709983825684
    8. '_steps' → logprob: -14.678709983825684
    9. ' ' → logprob: -15.428709983825684
    10. 'self' → logprob: -15.553709983825684

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5874735116958618
    2. 'if' (adapté à ' if') → logprob: -0.8374735116958618
    3. '       ' → logprob: -4.837473392486572
    4. '
' → logprob: -6.087473392486572
    5. ')' → logprob: -7.712473392486572
    6. '           ' → logprob: -9.21247386932373
    7. '\n' → logprob: -9.33747386932373
    8. ' ' → logprob: -9.46247386932373
    9. '#' → logprob: -9.83747386932373
    10. 'return' → logprob: -9.83747386932373

Token 48: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.01066575851291418
    2. ' ' → logprob: -5.1356658935546875
    3. 'next' → logprob: -5.3856658935546875
    4. ' >=' → logprob: -9.635665893554688
    5. '_next' → logprob: -11.260665893554688
    6. '(next' → logprob: -11.385665893554688
    7. '	next' → logprob: -11.635665893554688
    8. '_' → logprob: -11.885665893554688
    9. ' >' → logprob: -12.135665893554688
    10. ' ' → logprob: -12.135665893554688

Token 49: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.611323624383658e-05
    2. '_' → logprob: -9.875065803527832
    3. 'pos' → logprob: -11.500065803527832
    4. '>' → logprob: -13.625065803527832
    5. '```' → logprob: -14.500065803527832
    6. ' _' → logprob: -14.875065803527832
    7. '_next' → logprob: -15.125065803527832
    8. ' ' → logprob: -15.750065803527832
    9. '_position' → logprob: -15.750065803527832
    10. 'Pos' → logprob: -15.750065803527832

Token 50: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.006670608650892973
    2. '>=' → logprob: -6.0066704750061035
    3. ' >' → logprob: -6.2566704750061035
    4. ' <' → logprob: -6.3816704750061035
    5. '<|end|>' → logprob: -7.7566704750061035
    6. '>' → logprob: -9.381670951843262
    7. ' ' → logprob: -10.631670951843262
    8. '<' → logprob: -11.006670951843262
    9. '<|end|>' → logprob: -11.631670951843262
    10. ')' → logprob: -12.756670951843262

Token 51: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16022992134094238
    2. 'self' → logprob: -1.9102299213409424
    3. '<|end|>' → logprob: -13.285229682922363
    4. ' ' → logprob: -13.785229682922363
    5. '	self' → logprob: -13.910229682922363
    6. '       ' → logprob: -14.035229682922363
    7. ' ' → logprob: -14.785229682922363
    8. '(self' → logprob: -15.785229682922363
    9. ' len' → logprob: -16.03523063659668
    10. '0' → logprob: -16.16023063659668

Token 52: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00013285996101330966
    2. '.' → logprob: -9.00013256072998
    3. 'size' → logprob: -11.75013256072998
    4. ' .' → logprob: -14.62513256072998
    5. '.s' → logprob: -14.87513256072998
    6. '.cells' → logprob: -15.12513256072998
    7. '	size' → logprob: -16.375133514404297
    8. ' size' → logprob: -16.375133514404297
    9. ').' → logprob: -17.000133514404297
    10. '<size' → logprob: -17.000133514404297

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001239752396941185
    2. ':
' → logprob: -7.501239776611328
    3. ' :' → logprob: -7.626239776611328
    4. ':return' → logprob: -8.751239776611328
    5. '):' → logprob: -10.376239776611328
    6. '       ' → logprob: -13.126239776611328
    7. '.' → logprob: -13.876239776611328
    8. ' or' → logprob: -13.876239776611328
    9. ' :
' → logprob: -14.001239776611328
    10. '-' → logprob: -14.126239776611328

Token 54: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11937964707612991
    2. '           ' → logprob: -2.494379758834839
    3. ':
' → logprob: -4.24437952041626
    4. '       ' → logprob: -5.36937952041626
    5. ' :' → logprob: -5.49437952041626
    6. ':return' → logprob: -5.74437952041626
    7. '-' → logprob: -7.36937952041626
    8. '.' → logprob: -7.74437952041626
    9. ' return' → logprob: -7.86937952041626
    10. 'return' → logprob: -7.86937952041626

Token 55: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6157562136650085
    2. ' return' → logprob: -1.6157562732696533
    3. 'next' → logprob: -1.8657562732696533
    4. 'return' → logprob: -2.3657562732696533
    5. '           ' → logprob: -4.490756034851074
    6. '.next' → logprob: -8.490756034851074
    7. '	next' → logprob: -8.740756034851074
    8. '[next' → logprob: -8.740756034851074
    9. '(next' → logprob: -9.115756034851074
    10. '_next' → logprob: -9.365756034851074

Token 56: ' Re' (ID: 907)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.286785751581192
    2. ' next' → logprob: -2.161785840988159
    3. 'return' → logprob: -2.161785840988159
    4. 'next' → logprob: -4.03678560256958
    5. '        ' → logprob: -7.53678560256958
    6. '           ' → logprob: -7.66178560256958
    7. '       ' → logprob: -9.286786079406738
    8. ' raise' → logprob: -9.536786079406738
    9. ' ' → logprob: -10.286786079406738
    10. 'raise' → logprob: -10.411786079406738

Token 57: 'ached' (ID: 5908)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.00019257364328950644
    2. 'ach' → logprob: -9.625192642211914
    3. 'urn' → logprob: -10.375192642211914
    4. 'set' → logprob: -11.125192642211914
    5. '#' → logprob: -11.375192642211914
    6. 'return' → logprob: -11.875192642211914
    7. 'main' → logprob: -12.000192642211914
    8. 'eturn' → logprob: -12.125192642211914
    9. '       ' → logprob: -12.125192642211914
    10. '   ' → logprob: -12.625192642211914

Token 58: ' or' (ID: 503)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08458558470010757
    2. 'the' → logprob: -2.584585666656494
    3. 'end' → logprob: -6.084585666656494
    4. 'return' → logprob: -6.834585666656494
    5. ' end' → logprob: -6.834585666656494
    6. ' return' → logprob: -7.084585666656494
    7. ' or' → logprob: -8.959585189819336
    8. ' last' → logprob: -9.959585189819336
    9. '           ' → logprob: -10.209585189819336
    10. 'eturn' → logprob: -10.459585189819336

Token 59: ' passed' (ID: 10292)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2048197090625763
    2. 'passed' → logprob: -1.954819679260254
    3. 'b' → logprob: -3.704819679260254
    4. ' exceeded' → logprob: -4.454819679260254
    5. ' surpassed' → logprob: -5.954819679260254
    6. 'sur' → logprob: -6.079819679260254
    7. ' passed' → logprob: -6.829819679260254
    8. 'past' → logprob: -7.704819679260254
    9. 'went' → logprob: -8.829819679260254
    10. 'exact' → logprob: -9.204819679260254

Token 60: ' goal' (ID: 8583)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16054043173789978
    2. 'the' → logprob: -1.9105404615402222
    3. ' beyond' → logprob: -9.410540580749512
    4. 'end' → logprob: -9.785540580749512
    5. ' end' → logprob: -10.160540580749512
    6. ' last' → logprob: -10.285540580749512
    7. ' final' → logprob: -10.285540580749512
    8. ' ' → logprob: -10.660540580749512
    9. 'final' → logprob: -11.035540580749512
    10. '```' → logprob: -11.660540580749512

Token 61: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7510693073272705
    2. ' return' → logprob: -0.8760693073272705
    3. '           ' → logprob: -3.0010693073272705
    4. '       ' → logprob: -3.2510693073272705
    5. ',' → logprob: -4.501069068908691
    6. ':' → logprob: -5.126069068908691
    7. ':return' → logprob: -5.876069068908691
    8. '.' → logprob: -7.751069068908691
    9. '               ' → logprob: -7.751069068908691
    10. ':
' → logprob: -7.876069068908691

Token 62: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37120774388313293
    2. ' return' → logprob: -1.7462077140808105
    3. '           ' → logprob: -2.4962077140808105
    4. '       ' → logprob: -3.2462077140808105
    5. ',' → logprob: -4.9962077140808105
    6. ':' → logprob: -5.6212077140808105
    7. ':return' → logprob: -6.7462077140808105
    8. ':
' → logprob: -7.6212077140808105
    9. 'position' → logprob: -7.8712077140808105
    10. '.' → logprob: -8.246208190917969

Token 63: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7025415897369385
    2. ' return' → logprob: -0.8275415897369385
    3. 'next' → logprob: -3.3275415897369385
    4. ' next' → logprob: -3.5775415897369385
    5. '           ' → logprob: -5.702541351318359
    6. '       ' → logprob: -8.32754135131836
    7. '        ' → logprob: -10.70254135131836
    8. '
' → logprob: -10.95254135131836
    9. 'position' → logprob: -11.20254135131836
    10. '```' → logprob: -11.45254135131836

Token 64: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03865160048007965
    2. ' self' → logprob: -3.288651704788208
    3. 'None' → logprob: -8.038651466369629
    4. ' None' → logprob: -9.163651466369629
    5. '0' → logprob: -9.288651466369629
    6. ' ' → logprob: -10.538651466369629
    7. ' ' → logprob: -11.038651466369629
    8. '<|end|>' → logprob: -11.538651466369629
    9. '	self' → logprob: -11.913651466369629
    10. 'True' → logprob: -12.038651466369629

Token 65: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.185224711894989
    2. '.cells' → logprob: -1.8102247714996338
    3. '.' → logprob: -5.810224533081055
    4. 'size' → logprob: -6.310224533081055
    5. 'cells' → logprob: -8.685224533081055
    6. ' .' → logprob: -9.560224533081055
    7. '.s' → logprob: -9.685224533081055
    8. ',' → logprob: -9.935224533081055
    9. '.position' → logprob: -10.060224533081055
    10. '<|end|>' → logprob: -10.810224533081055

Token 66: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05490417778491974
    2. '-' → logprob: -2.9299042224884033
    3. ' ' → logprob: -11.554903984069824
    4. '       ' → logprob: -12.429903984069824
    5. '1' → logprob: -13.304903984069824
    6. ')' → logprob: -13.304903984069824
    7. '<|end|>' → logprob: -13.554903984069824
    8. '0' → logprob: -13.929903984069824
    9. '   ' → logprob: -14.179903984069824
    10. ' ' → logprob: -15.179903984069824

Token 67: '       ' (ID: 309)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16138964891433716
    2. '-' → logprob: -1.9113895893096924
    3. 'else' → logprob: -8.161389350891113
    4. ' else' → logprob: -8.411389350891113
    5. '<|end|>' → logprob: -8.911389350891113
    6. '       ' → logprob: -9.161389350891113
    7. '1' → logprob: -9.661389350891113
    8. ')' → logprob: -9.786389350891113
    9. 'next' → logprob: -10.036389350891113
    10. ',' → logprob: -10.036389350891113

Token 68: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3485333919525146
    2. ' next' → logprob: -2.0985333919525146
    3. ' -' → logprob: -2.2235333919525146
    4. ',' → logprob: -2.7235333919525146
    5. '
' → logprob: -2.7235333919525146
    6. 'else' → logprob: -2.7235333919525146
    7. '[next' → logprob: -2.7235333919525146
    8. ' else' → logprob: -2.8485333919525146
    9. '       ' → logprob: -3.0985333919525146
    10. '-' → logprob: -3.0985333919525146

Token 69: ' Follow' (ID: 17547)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0572823286056519
    2. 'next' → logprob: -1.0572823286056519
    3. 'return' → logprob: -1.6822823286056519
    4. ' return' → logprob: -2.1822824478149414
    5. ' else' → logprob: -5.932282447814941
    6. 'else' → logprob: -6.682282447814941
    7. '       ' → logprob: -6.932282447814941
    8. ' elif' → logprob: -8.057282447814941
    9. 'elif' → logprob: -8.557282447814941
    10. ' cells' → logprob: -8.932282447814941

Token 70: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25660449266433716
    2. ' self' → logprob: -2.1316044330596924
    3. '       ' → logprob: -2.3816044330596924
    4. ' if' → logprob: -5.7566046714782715
    5. '   ' → logprob: -6.0066046714782715
    6. '           ' → logprob: -7.0066046714782715
    7. ',' → logprob: -7.2566046714782715
    8. 'if' → logprob: -7.3816046714782715
    9. 'cells' → logprob: -7.3816046714782715
    10. 'next' → logprob: -7.5066046714782715

Token 71: ' cell' (ID: 4206)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.0841156244277954
    2. 'cells' → logprob: -1.3341156244277954
    3. 'self' → logprob: -2.084115505218506
    4. ' chain' → logprob: -2.959115505218506
    5. ' self' → logprob: -2.959115505218506
    6. ' next' → logprob: -3.209115505218506
    7. '   ' → logprob: -3.584115505218506
    8. 'chain' → logprob: -4.084115505218506
    9. 'next' → logprob: -4.334115505218506
    10. ' cell' → logprob: -4.834115505218506

Token 72: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3967220783233643
    2. '[next' → logprob: -1.5217220783233643
    3. ' value' → logprob: -2.2717220783233643
    4. 's' → logprob: -2.3967220783233643
    5. '[' → logprob: -2.6467220783233643
    6. ' effect' → logprob: -2.7717220783233643
    7. ' effects' → logprob: -2.7717220783233643
    8. ''s' → logprob: -3.5217220783233643
    9. '   ' → logprob: -4.271721839904785
    10. ' chain' → logprob: -4.396721839904785

Token 73: ' instruction' (ID: 21179)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6139338612556458
    2. ' effect' → logprob: -1.613933801651001
    3. 'value' → logprob: -2.488933801651001
    4. ' instruction' → logprob: -2.613933801651001
    5. 'instruction' → logprob: -3.863933801651001
    6. ' jump' → logprob: -3.988933801651001
    7. ' instructions' → logprob: -4.23893404006958
    8. ' offset' → logprob: -4.73893404006958
    9. 'effect' → logprob: -5.11393404006958
    10. 'instructions' → logprob: -5.23893404006958

Token 74: ' once' (ID: 4730)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.18541407585144043
    2. '[' → logprob: -2.8104140758514404
    3. ',' → logprob: -3.6854140758514404
    4. '[self' → logprob: -4.0604143142700195
    5. 's' → logprob: -4.1854143142700195
    6. '       ' → logprob: -4.8104143142700195
    7. ' next' → logprob: -4.9354143142700195
    8. '
' → logprob: -5.1854143142700195
    9. 'next' → logprob: -5.3104143142700195
    10. '[
' → logprob: -5.6854143142700195

Token 75: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0195385217666626
    2. '       ' → logprob: -1.7695385217666626
    3. ' next' → logprob: -1.7695385217666626
    4. '[next' → logprob: -1.8945385217666626
    5. 'next' → logprob: -3.269538402557373
    6. '<|end|>' → logprob: -3.394538402557373
    7. '[' → logprob: -4.519538402557373
    8. '(next' → logprob: -4.644538402557373
    9. '.next' → logprob: -5.144538402557373
    10. ' cells' → logprob: -5.269538402557373

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18849492073059082
    2. ',' → logprob: -3.313494920730591
    3. '[next' → logprob: -3.438494920730591
    4. '
' → logprob: -3.563494920730591
    5. 'next' → logprob: -3.563494920730591
    6. ' next' → logprob: -3.813494920730591
    7. '        
' → logprob: -5.188494682312012
    8. ' if' → logprob: -5.563494682312012
    9. '<|end|>' → logprob: -5.563494682312012
    10. '(next' → logprob: -6.313494682312012

Token 77: ' instruction' (ID: 21179)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6889631748199463
    2. '       ' → logprob: -1.4389631748199463
    3. 'next' → logprob: -1.4389631748199463
    4. ' return' → logprob: -5.063962936401367
    5. 'instruction' (adapté à ' instruction') → logprob: -5.438962936401367
    6. 'return' → logprob: -5.563962936401367
    7. ' instruction' → logprob: -6.063962936401367
    8. ' cells' → logprob: -7.063962936401367
    9. 'cells' → logprob: -7.063962936401367
    10. 'steps' → logprob: -7.313962936401367

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024982523173093796
    2. '=' → logprob: -6.127498149871826
    3. 's' → logprob: -8.127498626708984
    4. ',' → logprob: -11.377498626708984
    5. '   ' → logprob: -13.502498626708984
    6. ' ' → logprob: -13.627498626708984
    7. '[' → logprob: -14.627498626708984
    8. ']' → logprob: -14.752498626708984
    9. '_' → logprob: -14.877498626708984
    10. ')' → logprob: -15.377498626708984

Token 79: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17980019748210907
    2. 'self' → logprob: -1.8048001527786255
    3. '<|end|>' → logprob: -10.679800033569336
    4. '	self' → logprob: -11.429800033569336
    5. 's' → logprob: -12.679800033569336
    6. ' ' → logprob: -12.929800033569336
    7. '<|end|>' → logprob: -12.929800033569336
    8. ' ' → logprob: -13.179800033569336
    9. '(self' → logprob: -13.429800033569336
    10. '[self' → logprob: -13.554800033569336

Token 80: '.cells' (ID: 108305)
  Prédit: '.cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.008621551096439362
    2. '.' → logprob: -4.758621692657471
    3. ' .' → logprob: -13.008621215820312
    4. '.tokens' → logprob: -13.883621215820312
    5. 'cells' → logprob: -14.008621215820312
    6. '.
' → logprob: -14.508621215820312
    7. '.Cells' → logprob: -15.133621215820312
    8. '[' → logprob: -15.383621215820312
    9. ').' → logprob: -15.383621215820312
    10. '`.' → logprob: -15.508621215820312

Token 81: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -7.159660890465602e-05
    2. '[' → logprob: -9.75007152557373
    3. '[position' → logprob: -11.37507152557373
    4. '```' → logprob: -15.12507152557373
    5. 'next' → logprob: -15.37507152557373
    6. '[token' → logprob: -15.62507152557373
    7. ' [' → logprob: -15.75007152557373
    8. '[current' → logprob: -15.87507152557373
    9. '[now' → logprob: -15.87507152557373
    10. '[
' → logprob: -15.87507152557373

Token 82: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.625007629394531
    3. 'pos' → logprob: -13.125007629394531
    4. 'Pos' → logprob: -14.375007629394531
    5. '_token' → logprob: -14.625007629394531
    6. '[pos' → logprob: -15.250007629394531
    7. '_p' → logprob: -15.500007629394531
    8. '[' → logprob: -15.500007629394531
    9. 'token' → logprob: -16.62500762939453
    10. '+' → logprob: -16.87500762939453

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16235795617103577
    2. ')' → logprob: -1.9123579263687134
    3. '])' → logprob: -6.912357807159424
    4. ')]' → logprob: -7.662357807159424
    5. ']()' → logprob: -8.662358283996582
    6. ']
' → logprob: -8.912358283996582
    7. '[' → logprob: -9.037358283996582
    8. '       ' → logprob: -10.162358283996582
    9. '<|end|>' → logprob: -10.162358283996582
    10. ')
' → logprob: -10.412358283996582

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3537677228450775
    2. '[' → logprob: -2.1037676334381104
    3. ' if' → logprob: -3.1037676334381104
    4. '+' → logprob: -3.3537676334381104
    5. '        
' → logprob: -4.1037678718566895
    6. '<|end|>' → logprob: -4.4787678718566895
    7. '
' → logprob: -4.7287678718566895
    8. '        ' → logprob: -5.3537678718566895
    9. '   ' → logprob: -5.4787678718566895
    10. '.next' → logprob: -5.6037678718566895

Token 85: ' moved' (ID: 12183)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4679361581802368
    2. '<|end|>' → logprob: -1.8429361581802368
    3. ' if' → logprob: -1.9679361581802368
    4. '       ' → logprob: -2.0929360389709473
    5. ' ' → logprob: -2.2179360389709473
    6. ')' → logprob: -2.9679360389709473
    7. '[' → logprob: -3.3429360389709473
    8. ' 
' → logprob: -3.4679360389709473
    9. '<|end|>' → logprob: -3.7179360389709473
    10. ' +' → logprob: -3.8429360389709473

Token 86: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6239466071128845
    2. '_pos' → logprob: -1.3739466667175293
    3. '=' → logprob: -1.8739466667175293
    4. '_' → logprob: -3.6239466667175293
    5. '_position' → logprob: -3.8739466667175293
    6. ' +=' → logprob: -6.123946666717529
    7. '_token' → logprob: -6.498946666717529
    8. ' ' → logprob: -6.623946666717529
    9. '_by' → logprob: -6.623946666717529
    10. ' +' → logprob: -7.248946666717529

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013294065138325095
    2. '=' → logprob: -6.62632942199707
    3. ' +=' → logprob: -13.12632942199707
    4. ' +' → logprob: -14.62632942199707
    5. ' ' → logprob: -14.75132942199707
    6. ',' → logprob: -15.62632942199707
    7. ' =
' → logprob: -15.75132942199707
    8. '+' → logprob: -15.87632942199707
    9. ' ' → logprob: -16.62632942199707
    10. '<|end|>' → logprob: -16.75132942199707

Token 88: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.38741543889045715
    2. 'next' → logprob: -1.1374154090881348
    3. 'instruction' → logprob: -8.387415885925293
    4. ' instruction' → logprob: -8.637415885925293
    5. '(next' → logprob: -10.387415885925293
    6. ' position' → logprob: -10.762415885925293
    7. 'position' → logprob: -11.137415885925293
    8. '[next' → logprob: -11.137415885925293
    9. ' (' → logprob: -11.762415885925293
    10. ' max' → logprob: -12.012415885925293

Token 89: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.500011444091797
    3. '_po' → logprob: -14.750011444091797
    4. 'pos' → logprob: -14.875011444091797
    5. '_p' → logprob: -15.375011444091797
    6. ' _' → logprob: -15.875011444091797
    7. 'Pos' → logprob: -15.875011444091797
    8. '+' → logprob: -16.250011444091797
    9. '_token' → logprob: -16.625011444091797
    10. '__' → logprob: -17.000011444091797

Token 90: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08896978199481964
    2. '+' → logprob: -2.4639697074890137
    3. ' +
' → logprob: -11.338970184326172
    4. '<|end|>' → logprob: -11.588970184326172
    5. ' +=' → logprob: -13.088970184326172
    6. ' if' → logprob: -13.838970184326172
    7. ' ' → logprob: -13.838970184326172
    8. '+
' → logprob: -13.963970184326172
    9. ' +

' → logprob: -14.463970184326172
    10. '<|end|>' → logprob: -14.588970184326172

Token 91: ' instruction' (ID: 21179)
  Prédit: 'instruction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'instruction' → logprob: -0.2015085518360138
    2. ' instruction' → logprob: -1.7015085220336914
    3. 'int' → logprob: -9.451508522033691
    4. ' ' → logprob: -11.826508522033691
    5. ' int' → logprob: -12.826508522033691
    6. '1' → logprob: -13.826508522033691
    7. 'instr' → logprob: -13.951508522033691
    8. '   ' → logprob: -14.076508522033691
    9. ' (' → logprob: -14.076508522033691
    10. 'in' → logprob: -14.451508522033691

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004153668414801359
    2. '<|end|>' → logprob: -5.879153728485107
    3. ' if' → logprob: -7.629153728485107
    4. 'return' → logprob: -8.25415325164795
    5. '
' → logprob: -8.50415325164795
    6. '       ' → logprob: -9.12915325164795
    7. ' 
' → logprob: -9.75415325164795
    8. ' return' → logprob: -10.00415325164795
    9. '	return' → logprob: -10.25415325164795
    10. ' ' → logprob: -10.50415325164795

Token 93: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07151805609464645
    2. '       ' → logprob: -2.9465179443359375
    3. '\n' → logprob: -4.9465179443359375
    4. 'return' → logprob: -5.5715179443359375
    5. '<|end|>' → logprob: -6.0715179443359375
    6. ' return' → logprob: -7.3215179443359375
    7. ' 
' → logprob: -7.5715179443359375
    8. '' → logprob: -7.8215179443359375
    9. '	return' → logprob: -8.071517944335938
    10. '
' → logprob: -8.071517944335938

Token 94: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048366937786340714
    2. '\n' → logprob: -3.4233670234680176
    3. ' if' → logprob: -5.173367023468018
    4. '
' → logprob: -5.798367023468018
    5. '' → logprob: -6.173367023468018
    6. ' 
' → logprob: -6.548367023468018
    7. ' ' → logprob: -7.298367023468018
    8. '<|end|>' → logprob: -7.798367023468018
    9. ')' → logprob: -8.04836654663086
    10. 'return' → logprob: -8.17336654663086

Token 95: ' moved' (ID: 12183)
  Prédit: ' moved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moved' → logprob: -0.00145475915633142
    2. ' ' → logprob: -6.751454830169678
    3. '0' → logprob: -8.75145435333252
    4. 'm' → logprob: -9.12645435333252
    5. ' not' → logprob: -12.00145435333252
    6. ' moves' → logprob: -13.00145435333252
    7. 'Moved' → logprob: -13.25145435333252
    8. '1' → logprob: -14.00145435333252
    9. ' moving' → logprob: -14.00145435333252
    10. 'moves' → logprob: -14.12645435333252

Token 96: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009213464800268412
    2. 'ed' → logprob: -7.000921249389648
    3. '_' → logprob: -12.000921249389648
    4. 'Pos' → logprob: -13.250921249389648
    5. 'o' → logprob: -14.875921249389648
    6. 'pos' → logprob: -15.000921249389648
    7. 'ested' → logprob: -15.375921249389648
    8. '_p' → logprob: -15.625921249389648
    9. '_positions' → logprob: -16.00092124938965
    10. 'os' → logprob: -16.12592124938965

Token 97: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00247411266900599
    2. ' >=' → logprob: -6.502474308013916
    3. '<|end|>' → logprob: -7.377474308013916
    4. '<' → logprob: -8.627473831176758
    5. ' ' → logprob: -9.002473831176758
    6. ' >' → logprob: -10.377473831176758
    7. '<|end|>' → logprob: -12.502473831176758
    8. ' <=' → logprob: -12.502473831176758
    9. ')' → logprob: -13.252473831176758
    10. ' <",' → logprob: -13.752473831176758

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805262967944145
    2. ' ' → logprob: -3.288052558898926
    3. '=' → logprob: -11.788052558898926
    4. '1' → logprob: -13.663052558898926
    5. '   ' → logprob: -14.538052558898926
    6. 'self' → logprob: -14.788052558898926
    7. '    ' → logprob: -14.913052558898926
    8. '<|end|>' → logprob: -15.038052558898926
    9. '```' → logprob: -16.163053512573242
    10. ' ' → logprob: -16.163053512573242

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000377049611415714
    2. ' ' → logprob: -8.00037670135498
    3. '=' → logprob: -10.75037670135498
    4. 'self' → logprob: -11.37537670135498
    5. '1' → logprob: -12.00037670135498
    6. '   ' → logprob: -13.87537670135498
    7. '    ' → logprob: -14.75037670135498
    8. '       ' → logprob: -15.12537670135498
    9. '  ' → logprob: -15.81287670135498
    10. ' self' → logprob: -16.312877655029297

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13797053694725037
    2. ':
' → logprob: -2.762970447540283
    3. '<|end|>' → logprob: -3.012970447540283
    4. ' or' → logprob: -5.137970447540283
    5. '       ' → logprob: -5.762970447540283
    6. '<|end|>' → logprob: -6.262970447540283
    7. ':return' → logprob: -6.637970447540283
    8. ')' → logprob: -6.887970447540283
    9. ',' → logprob: -7.387970447540283
    10. '
' → logprob: -7.387970447540283

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44518518447875977
    2. '<|end|>' → logprob: -1.5701851844787598
    3. '0' → logprob: -2.5701851844787598
    4. '       ' → logprob: -2.9451851844787598
    5. '<|end|>' → logprob: -4.94518518447876
    6. ' or' → logprob: -5.44518518447876
    7. ' ' → logprob: -5.82018518447876
    8. ')' → logprob: -5.94518518447876
    9. ',' → logprob: -6.57018518447876
    10. ':' → logprob: -7.19518518447876

Token 102: ' moved' (ID: 12183)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013635066337883472
    2. '           ' → logprob: -4.388635158538818
    3. ' ' → logprob: -7.138635158538818
    4. '       ' → logprob: -8.38863468170166
    5. 'return' → logprob: -9.38863468170166
    6. ' return' → logprob: -11.76363468170166
    7. '   ' → logprob: -12.13863468170166
    8. '	       ' → logprob: -12.38863468170166
    9. '               ' → logprob: -14.13863468170166
    10. '```' → logprob: -15.38863468170166

Token 103: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.081584716506768e-05
    2. 'Pos' → logprob: -11.500020980834961
    3. '_' → logprob: -11.875020980834961
    4. 'pos' → logprob: -13.250020980834961
    5. '```' → logprob: -14.375020980834961
    6. '_p' → logprob: -15.375020980834961
    7. '_Pos' → logprob: -15.375020980834961
    8. '_POS' → logprob: -15.375020980834961
    9. ' Pos' → logprob: -15.625020980834961
    10. ' _' → logprob: -15.875020980834961

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015186312608420849
    2. '=' → logprob: -4.390186309814453
    3. ' ' → logprob: -6.015186309814453
    4. '<|end|>' → logprob: -8.890186309814453
    5. '0' → logprob: -9.390186309814453
    6. ')' → logprob: -12.515186309814453
    7. '<|end|>' → logprob: -13.015186309814453
    8. ' =
' → logprob: -13.265186309814453
    9. ',' → logprob: -14.515186309814453
    10. ' +=' → logprob: -14.515186309814453

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '<|end|>' → logprob: -16.002185821533203
    4. '   ' → logprob: -17.377185821533203
    5. '۰' → logprob: -18.252185821533203
    6. '０' → logprob: -18.377185821533203
    7. ' ' → logprob: -18.502185821533203
    8. '```' → logprob: -18.877185821533203
    9. '  ' → logprob: -19.439685821533203
    10. '`' → logprob: -19.439685821533203

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -18.000001907348633
    4. '０' → logprob: -18.375001907348633
    5. '۰' → logprob: -18.375001907348633
    6. '০' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.125001907348633
    8. '०' → logprob: -20.500001907348633
    9. '```' → logprob: -20.625001907348633
    10. '`' → logprob: -21.062501907348633

Token 107: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020301116164773703
    2. 'elif' → logprob: -6.877029895782471
    3. '
' → logprob: -8.127030372619629
    4. 'return' → logprob: -8.252030372619629
    5. ' elif' → logprob: -8.377030372619629
    6. ' return' → logprob: -9.502030372619629
    7. '<|end|>' → logprob: -9.752030372619629
    8. '           ' → logprob: -11.002030372619629
    9. '```' → logprob: -11.002030372619629
    10. '   ' → logprob: -11.627030372619629

Token 108: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29222574830055237
    2. '
' → logprob: -1.41722571849823
    3. 'elif' → logprob: -5.0422258377075195
    4. 'return' → logprob: -5.9172258377075195
    5. '<|end|>' → logprob: -7.0422258377075195
    6. ' elif' → logprob: -8.41722583770752
    7. ' return' → logprob: -8.66722583770752
    8. '   ' → logprob: -8.91722583770752
    9. '
' → logprob: -9.16722583770752
    10. '<|end|>' → logprob: -9.41722583770752

Token 109: ' safeguard' (ID: 85204)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45400941371917725
    2. 'return' → logprob: -1.3290094137191772
    3. ' return' → logprob: -2.454009532928467
    4. 'Return' → logprob: -4.454009532928467
    5. '#' → logprob: -7.704009532928467
    6. '```' → logprob: -7.704009532928467
    7. 'elif' → logprob: -7.954009532928467
    8. ' else' → logprob: -8.579009056091309
    9. ' Return' → logprob: -8.579009056091309
    10. 'Clamp' → logprob: -9.079009056091309

Token 110: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003607317106798291
    2. 'return' → logprob: -6.253607273101807
    3. '<|end|>' → logprob: -7.003607273101807
    4. ' return' → logprob: -7.878607273101807
    5. '<|end|>' → logprob: -8.753607749938965
    6. '
' → logprob: -9.128607749938965
    7. ' or' → logprob: -10.378607749938965
    8. ',' → logprob: -10.628607749938965
    9. 'elif' → logprob: -11.253607749938965
    10. ' elif' → logprob: -12.003607749938965

Token 111: ' as' (ID: 472)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8564785122871399
    2. ' usually' → logprob: -1.9814784526824951
    3. ' should' → logprob: -2.356478452682495
    4. 'should' → logprob: -2.981478452682495
    5. ' probably' → logprob: -3.481478452682495
    6. ' unlikely' → logprob: -3.481478452682495
    7. 'not' → logprob: -3.481478452682495
    8. ' shouldn't' → logprob: -3.606478452682495
    9. 'usually' → logprob: -3.856478452682495
    10. ' return' → logprob: -4.106478691101074

Token 112: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.8319778442382812
    2. ' per' → logprob: -0.8319778442382812
    3. 's' → logprob: -2.7069778442382812
    4. 'a' → logprob: -4.206977844238281
    5. 'the' → logprob: -4.206977844238281
    6. 'is' → logprob: -4.456977844238281
    7. ' the' → logprob: -6.206977844238281
    8. 'written' → logprob: -6.206977844238281
    9. '#' → logprob: -6.456977844238281
    10. 'specified' → logprob: -6.581977844238281

Token 113: ' problem' (ID: 4792)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.23114429414272308
    2. 'spec' → logprob: -2.8561441898345947
    3. 'problem' → logprob: -2.8561441898345947
    4. ' game' → logprob: -3.7311441898345947
    5. 'the' → logprob: -4.356144428253174
    6. 'current' → logprob: -4.606144428253174
    7. 'rules' → logprob: -4.731144428253174
    8. 'context' → logprob: -5.356144428253174
    9. 'logic' → logprob: -5.481144428253174
    10. 'code' → logprob: -5.731144428253174

Token 114: ' won't' (ID: 14219)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6647016406059265
    2. 'description' → logprob: -2.5397017002105713
    3. ' constraints' → logprob: -2.6647017002105713
    4. ''s' → logprob: -2.6647017002105713
    5. ' description' → logprob: -2.6647017002105713
    6. ' statement' → logprob: -2.7897017002105713
    7. 'statement' → logprob: -3.4147017002105713
    8. 'constraints' → logprob: -4.164701461791992
    9. '       ' → logprob: -4.664701461791992
    10. 'return' → logprob: -4.914701461791992

Token 115: ' happen' (ID: 5659)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.9337308406829834
    2. 'occur' → logprob: -1.0587308406829834
    3. 'h' → logprob: -2.1837308406829834
    4. 'go' → logprob: -2.3087308406829834
    5. ' happen' → logprob: -3.4337308406829834
    6. ' go' → logprob: -5.9337310791015625
    7. 'under' → logprob: -5.9337310791015625
    8. ' be' → logprob: -5.9337310791015625
    9. 'need' → logprob: -6.5587310791015625
    10. 'move' → logprob: -6.8087310791015625

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016832745168358088
    2. '<|end|>' → logprob: -7.251683235168457
    3. '
' → logprob: -8.251683235168457
    4. '<|end|>' → logprob: -8.626683235168457
    5. ' return' → logprob: -9.001683235168457
    6. ' elif' → logprob: -9.126683235168457
    7. ' or' → logprob: -9.876683235168457
    8. 'elif' → logprob: -9.876683235168457
    9. 'return' → logprob: -10.126683235168457
    10. ' else' → logprob: -10.376683235168457

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000990891712717712
    2. 'elif' → logprob: -8.125990867614746
    3. 'return' → logprob: -8.250990867614746
    4. ' elif' → logprob: -8.375990867614746
    5. ' return' → logprob: -9.000990867614746
    6. '           ' → logprob: -10.750990867614746
    7. '   ' → logprob: -11.125990867614746
    8. '<|end|>' → logprob: -11.375990867614746
    9. ' else' → logprob: -11.750990867614746
    10. '```' → logprob: -11.875990867614746

Token 118: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03442851081490517
    2. ' elif' → logprob: -4.284428596496582
    3. 'elif' → logprob: -4.534428596496582
    4. 'return' (adapté à ' return') → logprob: -5.409428596496582
    5. ' return' → logprob: -5.534428596496582
    6. '   ' → logprob: -8.534428596496582
    7. ' else' → logprob: -8.784428596496582
    8. 'else' → logprob: -9.159428596496582
    9. ' or' → logprob: -9.284428596496582
    10. '           ' → logprob: -9.534428596496582

Token 119: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759425163269043
    2. ' moved' → logprob: -0.8259425163269043
    3. ' m' → logprob: -13.575942993164062
    4. '	m' → logprob: -14.450942993164062
    5. '   ' → logprob: -14.825942993164062
    6. 'move' → logprob: -15.575942993164062
    7. 'mov' → logprob: -15.575942993164062
    8. ' ' → logprob: -15.950942993164062
    9. 'moves' → logprob: -16.200942993164062
    10. 'Moved' → logprob: -16.450942993164062

Token 120: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002181987656513229
    2. 'pos' → logprob: -8.625218391418457
    3. 'ed' → logprob: -10.375218391418457
    4. 'o' → logprob: -13.125218391418457
    5. '_' → logprob: -13.375218391418457
    6. '_p' → logprob: -13.500218391418457
    7. 'os' → logprob: -13.875218391418457
    8. '_po' → logprob: -14.125218391418457
    9. 'Pos' → logprob: -15.500218391418457
    10. 'd' → logprob: -16.37521743774414

Token 121: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' Dice' (ID: 100924)
  Prédit: ' Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sug' → logprob: -0.0032575693912804127
    2. ' Player' → logprob: -6.128257751464844
    3. 'Sug' → logprob: -7.003257751464844
    4. ' ' → logprob: -9.628257751464844
    5. ' Sugar' → logprob: -10.003257751464844
    6. ' Game' → logprob: -10.753257751464844
    7. ' Dice' → logprob: -11.003257751464844
    8. ' Suggest' → logprob: -12.878257751464844
    9. ' sug' → logprob: -13.253257751464844
    10. 'Player' → logprob: -13.378257751464844

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004085083492100239
    2. '():' → logprob: -8.125408172607422
    3. ':
' → logprob: -9.500408172607422
    4. '(object' → logprob: -11.375408172607422
    5. '(' → logprob: -11.750408172607422
    6. '):' → logprob: -12.375408172607422
    7. '：' → logprob: -12.750408172607422
    8. '>:' → logprob: -12.750408172607422
    9. ' :' → logprob: -13.250408172607422
    10. '<|end|>' → logprob: -13.750408172607422

Token 125: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02757083810865879
    2. ':
' → logprob: -4.152570724487305
    3. '   ' → logprob: -4.527570724487305
    4. 'def' → logprob: -7.902570724487305
    5. '():' → logprob: -9.277570724487305
    6. ':def' → logprob: -9.402570724487305
    7. ' def' → logprob: -10.527570724487305
    8. '(object' → logprob: -10.902570724487305
    9. '(' → logprob: -10.902570724487305
    10. '  ' → logprob: -11.527570724487305

Token 126: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.521804928779602
    2. '   ' → logprob: -1.646804928779602
    3. 'import' → logprob: -2.1468048095703125
    4. 'def' (adapté à ' def') → logprob: -2.3968048095703125
    5. ' import' → logprob: -5.1468048095703125
    6. 'from' → logprob: -9.021804809570312
    7. ' ' → logprob: -10.521804809570312
    8. 'class' → logprob: -10.521804809570312
    9. '```' → logprob: -11.771804809570312
    10. ' from' → logprob: -12.021804809570312

Token 127: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0026446215342730284
    2. '__' → logprob: -6.0026445388793945
    3. '_init' → logprob: -9.502644538879395
    4. 'init' → logprob: -10.127644538879395
    5. ' ' → logprob: -10.502644538879395
    6. ' init' → logprob: -11.002644538879395
    7. ' def' → logprob: -12.377644538879395
    8. 'int' → logprob: -13.502644538879395
    9. 'def' → logprob: -14.002644538879395
    10. ' randint' → logprob: -14.127644538879395

Token 128: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.7014437364414334e-05
    2. 'int' → logprob: -11.00002670288086
    3. 'it' → logprob: -11.62502670288086
    4. 'iter' → logprob: -13.62502670288086
    5. 'ini' → logprob: -17.25002670288086
    6. ' init' → logprob: -17.87502670288086
    7. 'nit' → logprob: -18.00002670288086
    8. 'next' → logprob: -18.12502670288086
    9. '
' → logprob: -18.25002670288086
    10. '```' → logprob: -18.37502670288086

Token 129: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00392214534804225
    2. '(self' → logprob: -6.003921985626221
    3. '__' → logprob: -7.128921985626221
    4. '(' → logprob: -7.878921985626221
    5. ' (' → logprob: -8.628922462463379
    6. '__(
' → logprob: -10.003922462463379
    7. '_(' → logprob: -10.878922462463379
    8. '__((' → logprob: -11.128922462463379
    9. 'self' → logprob: -13.003922462463379
    10. '_' → logprob: -13.503922462463379

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004940920043736696
    2. ' self' → logprob: -5.504940986633301
    3. ')' → logprob: -7.129940986633301
    4. ' ' → logprob: -11.2549409866333
    5. ',' → logprob: -11.3799409866333
    6. '   ' → logprob: -12.1299409866333
    7. '(self' → logprob: -12.1299409866333
    8. '	self' → logprob: -12.1299409866333
    9. '<|end|>' → logprob: -12.6299409866333
    10. ' )' → logprob: -12.7549409866333

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053969744592905045
    2. '):' → logprob: -3.6789698600769043
    3. '):
' → logprob: -4.553969860076904
    4. ' ,' → logprob: -4.678969860076904
    5. ' ):' → logprob: -5.553969860076904
    6. 'self' → logprob: -6.053969860076904
    7. ' self' → logprob: -8.053969383239746
    8. ' ):
' → logprob: -8.053969383239746
    9. '   ' → logprob: -8.303969383239746
    10. ',self' → logprob: -8.678969383239746

Token 132: ' throws' (ID: 5114)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.4057667851448059
    2. 'values' → logprob: -1.6557667255401611
    3. 'self' → logprob: -2.780766725540161
    4. 's' → logprob: -4.03076696395874
    5. 'numbers' → logprob: -4.40576696395874
    6. 'start' → logprob: -4.53076696395874
    7. ')' → logprob: -4.65576696395874
    8. 'roll' → logprob: -4.65576696395874
    9. ' faces' → logprob: -5.53076696395874
    10. '):
' → logprob: -5.53076696395874

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04845075309276581
    2. ',' → logprob: -3.4234507083892822
    3. '=[]' → logprob: -5.298450946807861
    4. '):
' → logprob: -5.423450946807861
    5. '=' → logprob: -6.298450946807861
    6. ')' → logprob: -6.548450946807861
    7. ':' → logprob: -7.298450946807861
    8. '_count' → logprob: -8.048450469970703
    9. '=None' → logprob: -8.423450469970703
    10. ' ):' → logprob: -8.923450469970703

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001666015712544322
    2. ':' → logprob: -7.126666069030762
    3. '<|end|>' → logprob: -8.001666069030762
    4. ',' → logprob: -8.376666069030762
    5. '):
' → logprob: -8.876666069030762
    6. ':
' → logprob: -10.001666069030762
    7. '
' → logprob: -10.376666069030762
    8. '[' → logprob: -10.751666069030762
    9. '[]' → logprob: -11.626666069030762
    10. '        
' → logprob: -11.751666069030762

Token 135: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00027849749312736094
    2. '       ' → logprob: -8.50027847290039
    3. ' self' → logprob: -9.50027847290039
    4. '	self' → logprob: -16.25027847290039
    5. '   ' → logprob: -16.50027847290039
    6. '(self' → logprob: -18.12527847290039
    7. '[self' → logprob: -19.75027847290039
    8. 's' → logprob: -19.87527847290039
    9. ' ' → logprob: -20.12527847290039
    10. ',self' → logprob: -21.12527847290039

Token 136: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006902566645294428
    2. '=' → logprob: -5.631902694702148
    3. ' =' → logprob: -6.631902694702148
    4. '.raises' → logprob: -7.131902694702148
    5. 'throws' → logprob: -7.506902694702148
    6. '.throw' → logprob: -8.631902694702148
    7. ' .' → logprob: -8.756902694702148
    8. '	throws' → logprob: -9.256902694702148
    9. '.dumps' → logprob: -9.881902694702148
    10. '.th' → logprob: -10.131902694702148

Token 137: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -4.723352049040841e-06
    2. 'throw' → logprob: -12.500004768371582
    3. 'values' → logprob: -14.375004768371582
    4. 'index' → logprob: -16.125003814697266
    5. ' throws' → logprob: -16.125003814697266
    6. 'Throws' → logprob: -16.250003814697266
    7. 'roll' → logprob: -16.875003814697266
    8. 'queue' → logprob: -17.750003814697266
    9. 'puts' → logprob: -18.250003814697266
    10. 'value' → logprob: -18.625003814697266

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740772247314453
    2. '=' → logprob: -0.9740772247314453
    3. ' ' → logprob: -16.224077224731445
    4. '＝' → logprob: -17.224077224731445
    5. '<|end|>' → logprob: -17.224077224731445
    6. '=[]' → logprob: -17.474077224731445
    7. '   ' → logprob: -17.599077224731445
    8. ' ' → logprob: -18.099077224731445
    9. '=

' → logprob: -18.224077224731445
    10. ' =
' → logprob: -18.724077224731445

Token 139: ' throws' (ID: 5114)
  Prédit: 'throws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.04861745610833168
    2. ' throws' → logprob: -3.048617362976074
    3. 'throw' → logprob: -11.173617362976074
    4. '[' → logprob: -11.798617362976074
    5. ' ' → logprob: -13.048617362976074
    6. '   ' → logprob: -14.173617362976074
    7. '[]' → logprob: -14.173617362976074
    8. '	throws' → logprob: -14.173617362976074
    9. ' ' → logprob: -14.298617362976074
    10. 'puts' → logprob: -14.298617362976074

Token 140: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018377259839326143
    2. '
' → logprob: -6.501837730407715
    3. '<|end|>' → logprob: -8.376837730407715
    4. '   ' → logprob: -10.126837730407715
    5. 'self' → logprob: -10.251837730407715
    6. 'def' → logprob: -11.751837730407715
    7. '<|end|>' → logprob: -12.126837730407715
    8. ' self' → logprob: -12.626837730407715
    9. '	' → logprob: -12.751837730407715
    10. '[' → logprob: -13.001837730407715

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23768003284931183
    2. '
' → logprob: -1.7376800775527954
    3. '<|end|>' → logprob: -3.487679958343506
    4. '   ' → logprob: -5.487679958343506
    5. '<|end|>' → logprob: -8.612680435180664
    6. '        ' → logprob: -8.737680435180664
    7. ' ' → logprob: -9.362680435180664
    8. '	' → logprob: -9.612680435180664
    9. 'def' → logprob: -9.612680435180664
    10. 'self' → logprob: -9.862680435180664

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00020866614067927003
    2. '       ' → logprob: -8.500208854675293
    3. '0' → logprob: -12.500208854675293
    4. ' self' → logprob: -13.875208854675293
    5. '   ' → logprob: -14.625208854675293
    6. '	self' → logprob: -17.000207901000977
    7. 'len' → logprob: -19.125207901000977
    8. 'def' → logprob: -19.375207901000977
    9. '[self' → logprob: -19.500207901000977
    10. '(self' → logprob: -19.875207901000977

Token 143: '.index' (ID: 9736)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.01998022012412548
    2. '_idx' → logprob: -4.144980430603027
    3. '_pos' → logprob: -5.769980430603027
    4. '_pointer' → logprob: -7.769980430603027
    5. '_position' → logprob: -9.144980430603027
    6. '._' → logprob: -9.644980430603027
    7. 'index' → logprob: -9.894980430603027
    8. '_ptr' → logprob: -10.519980430603027
    9. '_current' → logprob: -10.644980430603027
    10. '_len' → logprob: -10.894980430603027

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028355419635772705
    2. '=' → logprob: -5.877835750579834
    3. '<|end|>' → logprob: -11.002835273742676
    4. ' ' → logprob: -11.252835273742676
    5. '<|end|>' → logprob: -14.877835273742676
    6. '  ' → logprob: -15.002835273742676
    7. '0' → logprob: -15.127835273742676
    8. ' =)' → logprob: -17.502836227416992
    9. ' =
' → logprob: -17.752836227416992
    10. 's' → logprob: -18.127836227416992

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '۰' → logprob: -18.005233764648438
    4. '<|end|>' → logprob: -18.755233764648438
    5. '   ' → logprob: -19.130233764648438
    6. '  ' → logprob: -19.130233764648438
    7. '０' → logprob: -19.255233764648438
    8. '```' → logprob: -20.317733764648438
    9. '1' → logprob: -20.442733764648438
    10. ' ' → logprob: -20.505233764648438

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -17.500003814697266
    4. '０' → logprob: -19.375003814697266
    5. '০' → logprob: -20.250003814697266
    6. '000' → logprob: -20.375003814697266
    7. '```' → logprob: -20.625003814697266
    8. '०' → logprob: -21.000003814697266
    9. '   ' → logprob: -21.000003814697266
    10. '00' → logprob: -21.062503814697266

Token 147: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4551357626914978
    2. '<|end|>' → logprob: -1.0801358222961426
    3. '   ' → logprob: -4.455135822296143
    4. ' def' → logprob: -5.080135822296143
    5. '<|end|>' → logprob: -5.580135822296143
    6. 'def' → logprob: -6.080135822296143
    7. '    
' → logprob: -7.080135822296143
    8. ' 
' → logprob: -7.205135822296143
    9. '	def' → logprob: -8.330135345458984
    10. '  
' → logprob: -8.955135345458984

Token 148: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4412477910518646
    2. ' def' → logprob: -2.1912477016448975
    3. '<|end|>' → logprob: -2.1912477016448975
    4. '   ' → logprob: -2.3162477016448975
    5. 'def' → logprob: -3.6912477016448975
    6. ' 
' → logprob: -5.816247940063477
    7. '    
' → logprob: -5.816247940063477
    8. '<|end|>' → logprob: -6.441247940063477
    9. '	def' → logprob: -6.566247940063477
    10. ' ' → logprob: -8.441247940063477

Token 149: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20225924253463745
    2. ' def' → logprob: -1.7022593021392822
    3. '   ' → logprob: -7.077259063720703
    4. '	def' → logprob: -13.952259063720703
    5. '```' → logprob: -15.327259063720703
    6. '
' → logprob: -15.577259063720703
    7. ' ' → logprob: -16.202259063720703
    8. '    
' → logprob: -16.452259063720703
    9. ':def' → logprob: -17.827259063720703
    10. 'Def' → logprob: -17.827259063720703

Token 150: ' next' (ID: 2613)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.6877497434616089
    2. 'throw' → logprob: -1.4377497434616089
    3. ' roll' → logprob: -2.0627498626708984
    4. ' throw' → logprob: -2.0627498626708984
    5. 'next' → logprob: -5.437749862670898
    6. ' next' → logprob: -6.812749862670898
    7. 'get' → logprob: -9.937749862670898
    8. 'throws' → logprob: -10.562749862670898
    9. 'def' → logprob: -11.187749862670898
    10. 'has' → logprob: -11.312749862670898

Token 151: '_throw' (ID: 182836)
  Prédit: '_throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_throw' → logprob: -0.16398289799690247
    2. '()' → logprob: -2.66398286819458
    3. '(self' → logprob: -3.28898286819458
    4. '_step' → logprob: -3.78898286819458
    5. '(' → logprob: -4.91398286819458
    6. '_move' → logprob: -5.28898286819458
    7. '_' → logprob: -5.28898286819458
    8. '_value' → logprob: -6.28898286819458
    9. '_roll' → logprob: -7.28898286819458
    10. '_number' → logprob: -7.53898286819458

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038512468338012695
    2. '(' → logprob: -3.2885124683380127
    3. '()' → logprob: -7.788512229919434
    4. '():' → logprob: -9.913512229919434
    5. '(
' → logprob: -13.163512229919434
    6. ' (' → logprob: -13.413512229919434
    7. 'self' → logprob: -13.788512229919434
    8. '(s' → logprob: -13.913512229919434
    9. '(Self' → logprob: -15.038512229919434
    10. '():
' → logprob: -15.413512229919434

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005127601907588542
    2. '):
' → logprob: -8.250513076782227
    3. ' ):' → logprob: -8.750513076782227
    4. ')' → logprob: -10.000513076782227
    5. '():' → logprob: -10.375513076782227
    6. 'self' → logprob: -12.000513076782227
    7. '(self' → logprob: -12.125513076782227
    8. '   ' → logprob: -12.875513076782227
    9. '):
' → logprob: -14.375513076782227
    10. ' ' → logprob: -14.625513076782227

Token 154: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024648455902934074
    2. '       ' → logprob: -3.774648427963257
    3. '()
' → logprob: -7.524648666381836
    4. ' if' → logprob: -7.524648666381836
    5. ' ()' → logprob: -9.149648666381836
    6. '   ' → logprob: -9.649648666381836
    7. '    ' → logprob: -10.774648666381836
    8. 'if' → logprob: -10.774648666381836
    9. '(' → logprob: -11.024648666381836
    10. ' return' → logprob: -11.024648666381836

Token 155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13911396265029907
    2. '       ' → logprob: -2.5141139030456543
    3. ' throw' → logprob: -3.6391139030456543
    4. ' result' → logprob: -4.889113903045654
    5. ' return' → logprob: -5.014113903045654
    6. ' t' → logprob: -5.264113903045654
    7. ' value' → logprob: -6.389113903045654
    8. 'if' (adapté à ' if') → logprob: -7.764113903045654
    9. '   ' → logprob: -8.389114379882812
    10. ' throws' → logprob: -8.639114379882812

Token 156: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10021723806858063
    2. 'self' → logprob: -2.350217342376709
    3. ' ' → logprob: -11.60021686553955
    4. '	self' → logprob: -14.10021686553955
    5. '   ' → logprob: -14.72521686553955
    6. '_self' → logprob: -16.225217819213867
    7. ' ' → logprob: -16.975217819213867
    8. '
' → logprob: -17.225217819213867
    9. '  ' → logprob: -17.975217819213867
    10. 'elf' → logprob: -18.475217819213867

Token 157: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.003018472343683243
    2. 'index' → logprob: -5.878018379211426
    3. '.' → logprob: -9.128018379211426
    4. ' index' → logprob: -9.503018379211426
    5. ' .' → logprob: -11.003018379211426
    6. '	index' → logprob: -12.253018379211426
    7. '_index' → logprob: -12.253018379211426
    8. '@index' → logprob: -13.253018379211426
    9. '#index' → logprob: -14.128018379211426
    10. ' ' → logprob: -14.503018379211426

Token 158: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4296983778476715
    2. ' <' → logprob: -1.0546983480453491
    3. ' ' → logprob: -7.429698467254639
    4. '>=' → logprob: -8.30469799041748
    5. '<' → logprob: -8.80469799041748
    6. ' ==' → logprob: -13.42969799041748
    7. '<len' → logprob: -13.67969799041748
    8. ' ' → logprob: -14.17969799041748
    9. '<|end|>' → logprob: -14.17969799041748
    10. '[' → logprob: -14.42969799041748

Token 159: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25192928314208984
    2. ' len' → logprob: -1.5019292831420898
    3. '	len' → logprob: -16.751930236816406
    4. '(len' → logprob: -18.001930236816406
    5. '   ' → logprob: -18.626930236816406
    6. '=len' → logprob: -18.876930236816406
    7. 'self' → logprob: -19.501930236816406
    8. '<len' → logprob: -20.251930236816406
    9. ',len' → logprob: -20.751930236816406
    10. '[len' → logprob: -21.126930236816406

Token 160: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. 'self' → logprob: -18.250017166137695
    4. ' self' → logprob: -20.625017166137695
    5. '(this' → logprob: -20.750017166137695
    6. ' (' → logprob: -21.375017166137695
    7. '(
' → logprob: -21.875017166137695
    8. '=self' → logprob: -22.375017166137695
    9. ':self' → logprob: -23.000017166137695
    10. '	self' → logprob: -23.250017166137695

Token 161: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.629921436891891e-05
    2. ' .' → logprob: -11.50002670288086
    3. '.raises' → logprob: -11.62502670288086
    4. '.dumps' → logprob: -12.37502670288086
    5. ').' → logprob: -13.50002670288086
    6. '.th' → logprob: -14.87502670288086
    7. '.throw' → logprob: -15.00002670288086
    8. '	throws' → logprob: -15.25002670288086
    9. 'throws' → logprob: -15.62502670288086
    10. '.Throws' → logprob: -16.12502670288086

Token 162: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -4.723352049040841e-06
    2. ' throws' → logprob: -12.625004768371582
    3. 'throw' → logprob: -13.625004768371582
    4. 'puts' → logprob: -16.500003814697266
    5. 'Throws' → logprob: -17.125003814697266
    6. '	throws' → logprob: -17.625003814697266
    7. 'th' → logprob: -17.875003814697266
    8. '```' → logprob: -18.250003814697266
    9. 'raises' → logprob: -18.250003814697266
    10. 't' → logprob: -18.750003814697266

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18044523894786835
    2. '):
' → logprob: -1.8054451942443848
    3. ')' → logprob: -7.805445194244385
    4. '):
' → logprob: -8.930445671081543
    5. ' ):' → logprob: -9.055445671081543
    6. '       ' → logprob: -10.805445671081543
    7. ' ):
' → logprob: -11.055445671081543
    8. ':' → logprob: -13.055445671081543
    9. '   ' → logprob: -13.805445671081543
    10. '):

' → logprob: -13.930445671081543

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010858222842216492
    2. '       ' → logprob: -5.760858058929443
    3. '
' → logprob: -5.885858058929443
    4. ' return' → logprob: -6.385858058929443
    5. ' 
' → logprob: -6.885858058929443
    6. '            ' → logprob: -7.635858058929443
    7. 'return' → logprob: -7.885858058929443
    8. '               ' → logprob: -8.885858535766602
    9. '   ' → logprob: -9.010858535766602
    10. ' ' → logprob: -9.135858535766602

Token 165: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41198164224624634
    2. 'return' → logprob: -1.1619815826416016
    3. '           ' → logprob: -3.7869815826416016
    4. ' raise' → logprob: -6.661981582641602
    5. 'raise' (adapté à ' raise') → logprob: -7.286981582641602
    6. ' None' → logprob: -10.286981582641602
    7. '   ' → logprob: -10.411981582641602
    8. 'None' → logprob: -10.661981582641602
    9. '               ' → logprob: -10.661981582641602
    10. '	return' → logprob: -10.911981582641602

Token 166: ' Index' (ID: 14580)
  Prédit: ' Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.7135106921195984
    2. ' Stop' → logprob: -0.7135106921195984
    3. 'Stop' → logprob: -4.588510513305664
    4. 'Index' → logprob: -4.713510513305664
    5. ' Exception' → logprob: -6.963510513305664
    6. ' Value' → logprob: -10.088510513305664
    7. 'Exception' → logprob: -11.463510513305664
    8. ' EOF' → logprob: -11.838510513305664
    9. 'EOF' → logprob: -12.213510513305664
    10. ' Runtime' → logprob: -13.338510513305664

Token 167: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -18.625
    3. 'Erro' → logprob: -19.5
    4. 'Er' → logprob: -21.125
    5. '	Error' → logprob: -21.75
    6. 'error' → logprob: -22.25
    7. 'Out' → logprob: -22.25
    8. ' Error' → logprob: -22.375
    9. '
' → logprob: -22.5
    10. 'ERROR' → logprob: -22.625

Token 168: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06781718879938126
    2. '('' → logprob: -3.317817211151123
    3. '()' → logprob: -3.567817211151123
    4. '()
' → logprob: -7.442817211151123
    5. '(' → logprob: -7.692817211151123
    6. '(
' → logprob: -10.317816734313965
    7. '       ' → logprob: -11.442816734313965
    8. '
' → logprob: -12.067816734313965
    9. '"' → logprob: -12.317816734313965
    10. '("")' → logprob: -12.567816734313965

Token 169: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0007156503852456808
    2. ' No' → logprob: -8.125715255737305
    3. 'Dice' → logprob: -8.625715255737305
    4. 'Throw' → logprob: -9.500715255737305
    5. 'Out' → logprob: -10.000715255737305
    6. 'no' → logprob: -10.625715255737305
    7. 'Throws' → logprob: -11.000715255737305
    8. '"No' → logprob: -11.000715255737305
    9. ' no' → logprob: -11.125715255737305
    10. 'throw' → logprob: -11.625715255737305

Token 170: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.000616293225903064
    2. 'More' → logprob: -8.250616073608398
    3. 'more' → logprob: -8.875616073608398
    4. '_more' → logprob: -9.625616073608398
    5. ' throws' → logprob: -9.875616073608398
    6. ' ' → logprob: -10.500616073608398
    7. '   ' → logprob: -10.625616073608398
    8. ' next' → logprob: -10.875616073608398
    9. '

' → logprob: -12.750616073608398
    10. ' mehr' → logprob: -13.000616073608398

Token 171: ' dice' (ID: 22078)
  Prédit: ' throws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' throws' → logprob: -0.08287506550550461
    2. ' dice' → logprob: -2.5828750133514404
    3. 'throws' → logprob: -6.4578752517700195
    4. ' ' → logprob: -6.5828752517700195
    5. '   ' → logprob: -8.33287525177002
    6. ' dices' → logprob: -8.58287525177002
    7. ' throw' → logprob: -8.70787525177002
    8. 'dice' → logprob: -9.08287525177002
    9. ' Dice' → logprob: -9.20787525177002
    10. ' moves' → logprob: -10.08287525177002

Token 172: ' throws' (ID: 5114)
  Prédit: ' throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' throws' → logprob: -0.012672807089984417
    2. 'throws' → logprob: -4.3876729011535645
    3. ' ' → logprob: -9.637672424316406
    4. '   ' → logprob: -10.387672424316406
    5. '_' → logprob: -10.637672424316406
    6. ' rolls' → logprob: -11.512672424316406
    7. '_throw' → logprob: -11.637672424316406
    8. ' Throws' → logprob: -11.762672424316406
    9. ' throw' → logprob: -12.637672424316406
    10. 'Throws' → logprob: -12.887672424316406

Token 173: ' available' (ID: 2839)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2027239352464676
    2. '")
' → logprob: -1.7027239799499512
    3. ' available' → logprob: -7.202723979949951
    4. '.")' → logprob: -8.452723503112793
    5. '.")
' → logprob: -8.577723503112793
    6. '")
' → logprob: -9.202723503112793
    7. ' to' → logprob: -10.327723503112793
    8. 'available' → logprob: -11.202723503112793
    9. ')")' → logprob: -12.577723503112793
    10. ')' → logprob: -12.702723503112793

Token 174: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16080527007579803
    2. '")' → logprob: -1.9108052253723145
    3. '")
' → logprob: -8.285805702209473
    4. ')")
' → logprob: -8.660805702209473
    5. '.")
' → logprob: -9.410805702209473
    6. ')' → logprob: -10.535805702209473
    7. ')")' → logprob: -11.035805702209473
    8. ''")
' → logprob: -11.535805702209473
    9. '.")' → logprob: -12.285805702209473
    10. ')
' → logprob: -12.535805702209473

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030909648165106773
    2. '
' → logprob: -3.780909538269043
    3. 'return' → logprob: -6.030909538269043
    4. '        
' → logprob: -6.030909538269043
    5. '   ' → logprob: -6.905909538269043
    6. '    
' → logprob: -7.155909538269043
    7. ' return' → logprob: -7.530909538269043
    8. 'self' → logprob: -8.780909538269043
    9. '  
' → logprob: -9.280909538269043
    10. '   
' → logprob: -9.780909538269043

Token 176: ' val' (ID: 1459)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6553567051887512
    2. ' value' → logprob: -1.4053566455841064
    3. '       ' → logprob: -2.2803566455841064
    4. 'result' → logprob: -2.7803566455841064
    5. ' throw' → logprob: -3.0303566455841064
    6. 'value' → logprob: -4.7803568840026855
    7. ' val' → logprob: -4.9053568840026855
    8. 'throw' → logprob: -6.2803568840026855
    9. ' t' → logprob: -6.9053568840026855
    10. ' v' → logprob: -7.0303568840026855

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773519277572632
    2. '=' → logprob: -0.8273519277572632
    3. ' ' → logprob: -7.327352046966553
    4. 'ue' → logprob: -7.452352046966553
    5. '   ' → logprob: -9.577351570129395
    6. 'u' → logprob: -10.077351570129395
    7. '  ' → logprob: -11.077351570129395
    8. '	' → logprob: -11.702351570129395
    9. '     ' → logprob: -11.702351570129395
    10. '       ' → logprob: -11.952351570129395

Token 178: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31326231360435486
    2. 'self' → logprob: -1.3132623434066772
    3. '	self' → logprob: -14.563261985778809
    4. '(self' → logprob: -17.063262939453125
    5. '[self' → logprob: -17.188262939453125
    6. '       ' → logprob: -17.438262939453125
    7. '_self' → logprob: -17.813262939453125
    8. ' ' → logprob: -17.938262939453125
    9. '$self' → logprob: -17.938262939453125
    10. ' ' → logprob: -18.063262939453125

Token 179: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7610454708337784e-05
    2. 'throws' → logprob: -11.000027656555176
    3. ' throws' → logprob: -12.750027656555176
    4. ' .' → logprob: -12.750027656555176
    5. '.throw' → logprob: -13.375027656555176
    6. '.th' → logprob: -13.750027656555176
    7. '.dumps' → logprob: -14.375027656555176
    8. '	throws' → logprob: -14.500027656555176
    9. '.raises' → logprob: -14.625027656555176
    10. '.Throws' → logprob: -16.37502670288086

Token 180: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -1.4259644558478612e-05
    2. ' throws' → logprob: -11.875014305114746
    3. 'puts' → logprob: -12.750014305114746
    4. 'throw' → logprob: -12.875014305114746
    5. 'th' → logprob: -15.125014305114746
    6. 'returns' → logprob: -15.375014305114746
    7. 'Throws' → logprob: -15.625014305114746
    8. 'self' → logprob: -15.875014305114746
    9. 'tries' → logprob: -16.00001335144043
    10. 'next' → logprob: -16.25001335144043

Token 181: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.250004768371582
    3. 'self' → logprob: -14.875004768371582
    4. '   ' → logprob: -18.7500057220459
    5. ' self' → logprob: -19.3750057220459
    6. '[this' → logprob: -19.7500057220459
    7. ' [' → logprob: -20.5000057220459
    8. '	self' → logprob: -21.1250057220459
    9. '(self' → logprob: -21.6250057220459
    10. '[
' → logprob: -22.1250057220459

Token 182: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00018625585653353482
    2. 'index' → logprob: -8.7501859664917
    3. '.' → logprob: -10.5001859664917
    4. ' index' → logprob: -16.375186920166016
    5. ' .' → logprob: -16.750186920166016
    6. '	index' → logprob: -16.750186920166016
    7. '[index' → logprob: -17.500186920166016
    8. '_index' → logprob: -18.250186920166016
    9. '.ind' → logprob: -18.250186920166016
    10. '#index' → logprob: -18.250186920166016

Token 183: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3007935881614685
    2. ']
' → logprob: -1.4257936477661133
    3. ')' → logprob: -4.425793647766113
    4. ')
' → logprob: -5.175793647766113
    5. '       ' → logprob: -6.675793647766113
    6. ']
' → logprob: -7.925793647766113
    7. '<|end|>' → logprob: -9.550793647766113
    8. ']

' → logprob: -9.925793647766113
    9. '<|end|>' → logprob: -10.425793647766113
    10. ')
' → logprob: -11.300793647766113

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07353106886148453
    2. 'self' → logprob: -3.198531150817871
    3. '
' → logprob: -3.573531150817871
    4. ' self' → logprob: -7.448531150817871
    5. '\' → logprob: -7.698531150817871
    6. '<|end|>' → logprob: -7.948531150817871
    7. '\n' → logprob: -8.573531150817871
    8. '        
' → logprob: -8.948531150817871
    9. '[self' → logprob: -10.198531150817871
    10. '<|end|>' → logprob: -10.198531150817871

Token 185: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7035355567932129
    2. 'self' (adapté à ' self') → logprob: -0.7035355567932129
    3. '       ' → logprob: -4.578535556793213
    4. '	self' → logprob: -9.828535079956055
    5. '
' → logprob: -11.828535079956055
    6. '[self' → logprob: -14.078535079956055
    7. '(self' → logprob: -14.828535079956055
    8. '_self' → logprob: -14.953535079956055
    9. '        
' → logprob: -15.078535079956055
    10. ' 
' → logprob: -15.203535079956055

Token 186: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00012678056373260915
    2. '.' → logprob: -9.000126838684082
    3. 'index' → logprob: -12.750126838684082
    4. ' .' → logprob: -15.875126838684082
    5. '.ind' → logprob: -16.250125885009766
    6. ':index' → logprob: -17.000125885009766
    7. '@index' → logprob: -17.000125885009766
    8. '	index' → logprob: -17.125125885009766
    9. '.indices' → logprob: -17.750125885009766
    10. '=index' → logprob: -17.750125885009766

Token 187: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04861518368124962
    2. '+=' → logprob: -3.0486152172088623
    3. '+' → logprob: -10.548615455627441
    4. ' +' → logprob: -14.798615455627441
    5. '<|end|>' → logprob: -14.798615455627441
    6. ']+=' → logprob: -15.298615455627441
    7. '+='' → logprob: -15.798615455627441
    8. '+="' → logprob: -15.923615455627441
    9. '++' → logprob: -16.173614501953125
    10. '=' → logprob: -16.298614501953125

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -20.875709533691406
    4. '１' → logprob: -21.125709533691406
    5. ' ' → logprob: -22.750709533691406
    6. '۱' → logprob: -23.125709533691406
    7. '   ' → logprob: -23.125709533691406
    8. '0' → logprob: -23.500709533691406
    9. '`' → logprob: -24.313209533691406
    10. '
' → logprob: -24.813209533691406

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '１' → logprob: -21.0
    4. '```' → logprob: -22.375
    5. '۱' → logprob: -22.5
    6. '१' → logprob: -24.1875
    7. '0' → logprob: -24.375
    8. '১' → logprob: -24.375
    9. '   ' → logprob: -24.4375
    10. '
' → logprob: -24.8125

Token 190: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6590823531150818
    2. '       ' → logprob: -1.0340824127197266
    3. ' return' → logprob: -2.2840824127197266
    4. '
' → logprob: -3.9090824127197266
    5. '   ' → logprob: -6.159082412719727
    6. ' 
' → logprob: -6.784082412719727
    7. '	return' → logprob: -7.409082412719727
    8. '        
' → logprob: -7.659082412719727
    9. '    
' → logprob: -8.534082412719727
    10. '<|end|>' → logprob: -8.534082412719727

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7038859128952026
    2. 'return' → logprob: -0.8288859128952026
    3. ' return' → logprob: -2.828886032104492
    4. '
' → logprob: -4.828886032104492
    5. '   ' → logprob: -6.703886032104492
    6. '	return' → logprob: -8.203886032104492
    7. '        
' → logprob: -9.953886032104492
    8. ' 
' → logprob: -10.203886032104492
    9. '<|end|>' → logprob: -10.328886032104492
    10. ':return' → logprob: -10.578886032104492

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023266442120075226
    2. ' return' → logprob: -3.773266553878784
    3. '       ' → logprob: -10.773266792297363
    4. '   ' → logprob: -16.898265838623047
    5. '	return' → logprob: -18.398265838623047
    6. '
' → logprob: -19.023265838623047
    7. 'eturn' → logprob: -20.523265838623047
    8. '           ' → logprob: -20.898265838623047
    9. ' ' → logprob: -21.023265838623047
    10. '{return' → logprob: -21.148265838623047

Token 193: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740770161151886
    2. 'val' → logprob: -0.9740769863128662
    3. '	val' → logprob: -17.849077224731445
    4. '(val' → logprob: -19.099077224731445
    5. '_val' → logprob: -19.349077224731445
    6. 'Val' → logprob: -19.974077224731445
    7. 'v' → logprob: -20.099077224731445
    8. '[val' → logprob: -20.099077224731445
    9. '.val' → logprob: -21.474077224731445
    10. ' ' → logprob: -21.724077224731445

Token 194: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016172435134649277
    2. 'def' → logprob: -4.141172409057617
    3. 'from' → logprob: -9.016172409057617
    4. 'import' → logprob: -11.141172409057617
    5. ' class' → logprob: -13.516172409057617
    6. '
' → logprob: -15.266172409057617
    7. '```' → logprob: -15.391172409057617
    8. 'for' → logprob: -16.391172409057617
    9. '#' → logprob: -16.516172409057617
    10. '    
' → logprob: -17.141172409057617

Token 196: ' Sug' (ID: 111433)
  Prédit: ' Sug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sug' → logprob: -0.059823911637067795
    2. 'Sug' → logprob: -2.934823989868164
    3. ' Player' → logprob: -5.934823989868164
    4. ' Game' → logprob: -6.559823989868164
    5. 'Player' → logprob: -7.559823989868164
    6. 'Game' → logprob: -8.059823989868164
    7. ' Sugar' → logprob: -11.684823989868164
    8. ' sug' → logprob: -12.184823989868164
    9. ' Suggest' → logprob: -12.809823989868164
    10. ' ' → logprob: -13.434823989868164

Token 197: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0445127372804563e-05
    2. 'oru' → logprob: -11.50001049041748
    3. '```' → logprob: -15.62501049041748
    4. 'ор' → logprob: -16.375009536743164
    5. 'OR' → logprob: -16.750009536743164
    6. 'ar' → logprob: -16.875009536743164
    7. 'Or' → logprob: -17.750009536743164
    8. ' or' → logprob: -17.875009536743164
    9. '``' → logprob: -18.250009536743164
    10. '>' → logprob: -18.250009536743164

Token 198: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -7.20734242349863e-05
    2. 'Oku' → logprob: -10.750072479248047
    3. ' oku' → logprob: -11.125072479248047
    4. 'o' → logprob: -11.625072479248047
    5. 'ok' → logprob: -11.625072479248047
    6. 'оку' → logprob: -12.125072479248047
    7. '```' → logprob: -12.250072479248047
    8. '   ' → logprob: -14.375072479248047
    9. '`' → logprob: -14.500072479248047
    10. 'okuv' → logprob: -14.750072479248047

Token 199: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0014334438601508737
    2. ':' → logprob: -6.626433372497559
    3. 'Player' → logprob: -9.376433372497559
    4. 'Simulator' → logprob: -11.751433372497559
    5. 'Solver' → logprob: -12.001433372497559
    6. ':
' → logprob: -12.751433372497559
    7. 'Runner' → logprob: -12.876433372497559
    8. ' game' → logprob: -14.251433372497559
    9. ' Game' → logprob: -14.501433372497559
    10. 'Gameplay' → logprob: -15.251433372497559

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003022153687197715
    2. ':
' → logprob: -8.1253023147583
    3. '():' → logprob: -13.0003023147583
    4. ' :' → logprob: -13.7503023147583
    5. ':def' → logprob: -14.2503023147583
    6. '(' → logprob: -14.3753023147583
    7. '(object' → logprob: -15.1253023147583
    8. ':

' → logprob: -15.1253023147583
    9. '):' → logprob: -15.1253023147583
    10. '>:' → logprob: -15.5003023147583

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.44574936106801e-05
    2. ' def' → logprob: -10.00007438659668
    3. 'def' → logprob: -10.50007438659668
    4. '   ' → logprob: -14.75007438659668
    5. '    
' → logprob: -15.25007438659668
    6. '	def' → logprob: -15.25007438659668
    7. '
' → logprob: -15.25007438659668
    8. '```' → logprob: -15.37507438659668
    9. ':' → logprob: -17.00007438659668
    10. '(' → logprob: -17.37507438659668

Token 202: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06430468708276749
    2. ' def' → logprob: -2.8143045902252197
    3. '   ' → logprob: -6.064304828643799
    4. 'class' → logprob: -12.43930435180664
    5. ' ' → logprob: -12.81430435180664
    6. '    ' → logprob: -14.06430435180664
    7. '```' → logprob: -14.18930435180664
    8. '	def' → logprob: -14.31430435180664
    9. '__' → logprob: -14.81430435180664
    10. '  ' → logprob: -14.81430435180664

Token 203: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0005160979344509542
    2. '_init' → logprob: -8.250515937805176
    3. '__' → logprob: -8.375515937805176
    4. 'init' → logprob: -10.875515937805176
    5. ' init' → logprob: -12.625515937805176
    6. ' ' → logprob: -13.250515937805176
    7. '  ' → logprob: -16.125516891479492
    8. '_initialize' → logprob: -16.250516891479492
    9. ' def' → logprob: -16.625516891479492
    10. 'def' → logprob: -16.750516891479492

Token 204: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.615255839889869e-05
    2. 'def' → logprob: -9.750096321105957
    3. '__' → logprob: -11.500096321105957
    4. '_init' → logprob: -11.750096321105957
    5. '```' → logprob: -12.125096321105957
    6. '   ' → logprob: -12.250096321105957
    7. ' init' → logprob: -12.500096321105957
    8. 'it' → logprob: -12.875096321105957
    9. 'int' → logprob: -14.125096321105957
    10. '`' → logprob: -14.625096321105957

Token 205: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001202850602567196
    2. '(self' → logprob: -7.2512030601501465
    3. '__' → logprob: -7.8762030601501465
    4. '__(
' → logprob: -9.626202583312988
    5. ' (' → logprob: -10.126202583312988
    6. '(' → logprob: -12.751202583312988
    7. '__((' → logprob: -13.001202583312988
    8. '<>(' → logprob: -14.751202583312988
    9. '   ' → logprob: -15.001202583312988
    10. '_(' → logprob: -15.126202583312988

Token 206: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.811348480870947e-05
    2. ' self' → logprob: -10.00004768371582
    3. '
' → logprob: -13.12504768371582
    4. ',' → logprob: -15.25004768371582
    5. '       ' → logprob: -15.50004768371582
    6. '(self' → logprob: -16.25004768371582
    7. '   ' → logprob: -16.75004768371582
    8. 's' → logprob: -17.50004768371582
    9. ',self' → logprob: -18.00004768371582
    10. 'cells' → logprob: -18.00004768371582

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003167545364703983
    2. 'self' → logprob: -8.625316619873047
    3. ' ,' → logprob: -9.000316619873047
    4. ',self' → logprob: -11.500316619873047
    5. ',
' → logprob: -13.375316619873047
    6. '(self' → logprob: -14.500316619873047
    7. ',s' → logprob: -14.625316619873047
    8. '       ' → logprob: -15.250316619873047
    9. ' self' → logprob: -15.500316619873047
    10. ',c' → logprob: -15.625316619873047

Token 208: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.012488231062889099
    2. 'cells' → logprob: -4.63748836517334
    3. ' board' → logprob: -6.01248836517334
    4. 'self' → logprob: -8.88748836517334
    5. ' cells' → logprob: -9.38748836517334
    6. 's' → logprob: -11.13748836517334
    7. 'size' → logprob: -11.63748836517334
    8. 'boards' → logprob: -11.88748836517334
    9. 'cell' → logprob: -12.01248836517334
    10. 'dice' → logprob: -12.13748836517334

Token 209: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',c' → logprob: -12.875003814697266
    3. ' ,' → logprob: -14.500003814697266
    4. '       ' → logprob: -16.125003814697266
    5. ',
' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.125003814697266
    7. ',

' → logprob: -17.375003814697266
    8. '.cells' → logprob: -17.625003814697266
    9. 'cells' → logprob: -17.750003814697266
    10. ',self' → logprob: -17.875003814697266

Token 210: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.02324594371020794
    2. ' Sug' → logprob: -3.7732460498809814
    3. 'S' → logprob: -15.273245811462402
    4. 'Sugar' → logprob: -15.648245811462402
    5. ' sug' → logprob: -18.02324676513672
    6. '   ' → logprob: -19.27324676513672
    7. ')' → logprob: -19.77324676513672
    8. '       ' → logprob: -20.64824676513672
    9. 'Suggest' → logprob: -21.27324676513672
    10. ',S' → logprob: -21.39824676513672

Token 211: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -6.933173426659778e-05
    2. 'oru' → logprob: -9.875069618225098
    3. '```' → logprob: -11.875069618225098
    4. ' or' → logprob: -12.875069618225098
    5. 'o' → logprob: -13.375069618225098
    6. '_' → logprob: -13.625069618225098
    7. 'oro' → logprob: -13.625069618225098
    8. '   ' → logprob: -14.750069618225098
    9. ' ' → logprob: -14.750069618225098
    10. 'ор' → logprob: -14.875069618225098

Token 212: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -9.162282367469743e-05
    2. 'ok' → logprob: -10.750091552734375
    3. 'ku' → logprob: -11.625091552734375
    4. 'Oku' → logprob: -11.750091552734375
    5. '```' → logprob: -11.875091552734375
    6. 'roku' → logprob: -11.875091552734375
    7. 'o' → logprob: -11.875091552734375
    8. 'оку' → logprob: -12.000091552734375
    9. ' oku' → logprob: -12.625091552734375
    10. 'olu' → logprob: -12.875091552734375

Token 213: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -1.6240566083070007e-06
    2. ' Board' → logprob: -14.250001907348633
    3. 'Boa' → logprob: -14.750001907348633
    4. 'board' → logprob: -16.000001907348633
    5. '(Board' → logprob: -16.250001907348633
    6. ')' → logprob: -17.000001907348633
    7. '.Board' → logprob: -17.000001907348633
    8. ',' → logprob: -17.250001907348633
    9. 'Boards' → logprob: -17.500001907348633
    10. '_board' → logprob: -17.625001907348633

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1472419600977446e-06
    2. ' ,' → logprob: -13.875000953674316
    3. '):' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '‌,' → logprob: -18.000001907348633
    6. ',
' → logprob: -18.500001907348633
    7. '‍,' → logprob: -19.625001907348633
    8. '،' → logprob: -19.750001907348633
    9. '       ' → logprob: -19.750001907348633
    10. ',class' → logprob: -19.875001907348633

Token 215: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.14386151731014252
    2. ' dice' → logprob: -2.0188615322113037
    3. '   ' → logprob: -7.018861293792725
    4. 'd' → logprob: -9.393861770629883
    5. ' dices' → logprob: -9.768861770629883
    6. '    ' → logprob: -10.518861770629883
    7. ' ' → logprob: -10.643861770629883
    8. 'player' → logprob: -11.268861770629883
    9. 'Dice' → logprob: -11.518861770629883
    10. '       ' → logprob: -11.643861770629883

Token 216: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11393760144710541
    2. '):' → logprob: -2.8639376163482666
    3. '):
' → logprob: -2.9889376163482666
    4. ' :' → logprob: -8.613937377929688
    5. ' ):' → logprob: -10.363937377929688
    6. '   ' → logprob: -10.863937377929688
    7. ',' → logprob: -11.113937377929688
    8. ' ):
' → logprob: -11.238937377929688
    9. '):
' → logprob: -11.363937377929688
    10. ':D' → logprob: -11.863937377929688

Token 217: ' Dice' (ID: 100924)
  Prédit: 'Dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dice' → logprob: -0.3868713080883026
    2. ' Dice' → logprob: -1.136871337890625
    3. ' dice' → logprob: -15.761871337890625
    4. ')' → logprob: -16.386871337890625
    5. 'dice' → logprob: -18.386871337890625
    6. '	D' → logprob: -18.761871337890625
    7. '_D' → logprob: -19.136871337890625
    8. ' ' → logprob: -19.386871337890625
    9. '   ' → logprob: -19.636871337890625
    10. ' ' → logprob: -19.636871337890625

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008674022741615772
    2. '):
' → logprob: -4.758674144744873
    3. ')' → logprob: -10.758673667907715
    4. ',' → logprob: -10.758673667907715
    5. '):
' → logprob: -11.883673667907715
    6. '   ' → logprob: -12.383673667907715
    7. ' ):' → logprob: -12.633673667907715
    8. '       ' → logprob: -13.633673667907715
    9. '):

' → logprob: -14.758673667907715
    10. ':' → logprob: -14.883673667907715

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022998936474323273
    2. 'self' → logprob: -6.127299785614014
    3. ' self' → logprob: -9.752300262451172
    4. ',' → logprob: -10.752300262451172
    5. '   ' → logprob: -10.752300262451172
    6. 'def' → logprob: -12.252300262451172
    7. ')' → logprob: -12.752300262451172
    8. '```' → logprob: -13.377300262451172
    9. '
' → logprob: -13.502300262451172
    10. '):
' → logprob: -14.377300262451172

Token 220: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03404363989830017
    2. ' self' → logprob: -3.784043550491333
    3. '       ' → logprob: -4.534043788909912
    4. '   ' → logprob: -13.409043312072754
    5. '	self' → logprob: -14.409043312072754
    6. ' ' → logprob: -14.534043312072754
    7. ' ' → logprob: -16.15904426574707
    8. '(self' → logprob: -17.40904426574707
    9. '﻿' → logprob: -17.53404426574707
    10. '      ' → logprob: -17.53404426574707

Token 221: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.03840704262256622
    2. '.' → logprob: -3.28840708732605
    3. ' .' → logprob: -8.788407325744629
    4. '.current' → logprob: -9.288407325744629
    5. '.game' → logprob: -10.788407325744629
    6. '.player' → logprob: -11.038407325744629
    7. '.Board' → logprob: -11.038407325744629
    8. 'board' → logprob: -11.413407325744629
    9. '.position' → logprob: -11.788407325744629
    10. '.players' → logprob: -11.913407325744629

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743531346321106
    2. ' =' → logprob: -0.9743531346321106
    3. '.' → logprob: -8.599352836608887
    4. '   ' → logprob: -9.599352836608887
    5. ',' → logprob: -11.474352836608887
    6. '    ' → logprob: -12.099352836608887
    7. '       ' → logprob: -13.099352836608887
    8. '.=' → logprob: -13.099352836608887
    9. ' ' → logprob: -13.974352836608887
    10. '.board' → logprob: -14.224352836608887

Token 223: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4740796685218811
    2. ' board' → logprob: -0.9740796685218811
    3. '	board' → logprob: -13.224080085754395
    4. '(board' → logprob: -14.599080085754395
    5. '.board' → logprob: -15.974080085754395
    6. '       ' → logprob: -16.724079132080078
    7. '   ' → logprob: -16.849079132080078
    8. ' ' → logprob: -16.974079132080078
    9. '_board' → logprob: -17.099079132080078
    10. 'b' → logprob: -17.224079132080078

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006741895340383053
    2. '
' → logprob: -7.750674247741699
    3. 'self' → logprob: -8.5006742477417
    4. '   ' → logprob: -10.3756742477417
    5. ' self' → logprob: -12.5006742477417
    6. '<|end|>' → logprob: -13.8756742477417
    7. 'def' → logprob: -14.1256742477417
    8. '        
' → logprob: -14.3756742477417
    9. '      ' → logprob: -14.5006742477417
    10. ',' → logprob: -14.5006742477417

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011198482476174831
    2. 'self' → logprob: -4.5111985206604
    3. ' self' → logprob: -9.011198043823242
    4. '   ' → logprob: -10.761198043823242
    5. '	self' → logprob: -12.636198043823242
    6. 'def' → logprob: -13.386198043823242
    7. '
' → logprob: -13.636198043823242
    8. '	' → logprob: -14.511198043823242
    9. '      ' → logprob: -15.136198043823242
    10. ' ' → logprob: -15.761198043823242

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000668713531922549
    2. ' self' → logprob: -7.500668525695801
    3. '       ' → logprob: -9.1256685256958
    4. 'position' → logprob: -12.7506685256958
    5. '   ' → logprob: -12.8756685256958
    6. '	self' → logprob: -15.0006685256958
    7. '           ' → logprob: -15.6256685256958
    8. '
' → logprob: -15.8756685256958
    9. ' ' → logprob: -15.8756685256958
    10. 'current' → logprob: -16.250669479370117

Token 227: '.d' (ID: 1380)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.7283029556274414
    2. 'position' → logprob: -1.2283029556274414
    3. '.positions' → logprob: -2.8533029556274414
    4. 'positions' → logprob: -3.1033029556274414
    5. '.player' → logprob: -3.6033029556274414
    6. ' position' → logprob: -3.7283029556274414
    7. '.' → logprob: -4.728302955627441
    8. 'pos' → logprob: -4.728302955627441
    9. '.current' → logprob: -4.853302955627441
    10. '_position' → logprob: -4.978302955627441

Token 228: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -4.7755875129951164e-05
    2. 'i' → logprob: -10.50004768371582
    3. 'ic' → logprob: -11.00004768371582
    4. 'ices' → logprob: -13.62504768371582
    5. '   ' → logprob: -14.00004768371582
    6. 'ef' → logprob: -14.75004768371582
    7. 'dice' → logprob: -14.87504768371582
    8. ' ice' → logprob: -15.75004768371582
    9. '_i' → logprob: -16.25004768371582
    10. '_' → logprob: -16.37504768371582

Token 229: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3585036993026733
    2. '=' → logprob: -1.3585036993026733
    3. '.next' → logprob: -1.4835036993026733
    4. ' =' → logprob: -2.483503818511963
    5. '.throw' → logprob: -2.733503818511963
    6. '_index' → logprob: -3.233503818511963
    7. '<|end|>' → logprob: -3.358503818511963
    8. '.index' → logprob: -4.608503818511963
    9. 'index' → logprob: -5.858503818511963
    10. '.roll' → logprob: -6.108503818511963

Token 230: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.07889793813228607
    2. ' dice' → logprob: -2.5788979530334473
    3. 'd' → logprob: -12.328897476196289
    4. 'Dice' → logprob: -13.078897476196289
    5. ' ' → logprob: -13.828897476196289
    6. 'dic' → logprob: -15.578897476196289
    7. ' dices' → logprob: -16.07889747619629
    8. '	d' → logprob: -16.45389747619629
    9. '   ' → logprob: -17.07889747619629
    10. ' Dice' → logprob: -17.07889747619629

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36320415139198303
    2. '
' → logprob: -1.2382041215896606
    3. '       ' → logprob: -4.738204002380371
    4. '    
' → logprob: -6.238204002380371
    5. 'def' → logprob: -6.363204002380371
    6. '<|end|>' → logprob: -6.613204002380371
    7. ' def' → logprob: -8.363204002380371
    8. '        
' → logprob: -9.113204002380371
    9. '	def' → logprob: -9.113204002380371
    10. '  
' → logprob: -9.238204002380371

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42900973558425903
    2. '   ' → logprob: -1.0540096759796143
    3. '    
' → logprob: -9.054009437561035
    4. 'def' → logprob: -9.429009437561035
    5. '
' → logprob: -10.304009437561035
    6. '        
' → logprob: -10.554009437561035
    7. 'self' → logprob: -11.429009437561035
    8. '    ' → logprob: -11.679009437561035
    9. '	self' → logprob: -11.929009437561035
    10. '	def' → logprob: -12.054009437561035

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002881191670894623
    2. '       ' → logprob: -6.127881050109863
    3. ' self' → logprob: -7.377881050109863
    4. '   ' → logprob: -10.252881050109863
    5. 'position' → logprob: -10.752881050109863
    6. 'def' → logprob: -11.502881050109863
    7. '	self' → logprob: -13.752881050109863
    8. '
' → logprob: -14.127881050109863
    9. '        
' → logprob: -14.627881050109863
    10. '           ' → logprob: -14.752881050109863

Token 234: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0304438266903162
    2. '.current' → logprob: -4.0304436683654785
    3. 'position' → logprob: -4.6554436683654785
    4. '.pos' → logprob: -6.6554436683654785
    5. '_position' → logprob: -8.030444145202637
    6. 'current' → logprob: -8.655444145202637
    7. '.positions' → logprob: -8.655444145202637
    8. '._' → logprob: -8.905444145202637
    9. '.player' → logprob: -9.155444145202637
    10. '.' → logprob: -9.530444145202637

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752103611826897
    2. '=' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.654751777648926
    4. '<|end|>' → logprob: -15.279751777648926
    5. '0' → logprob: -15.404751777648926
    6. '=None' → logprob: -17.529752731323242
    7. ',' → logprob: -17.904752731323242
    8. '   ' → logprob: -18.529752731323242
    9. ' =
' → logprob: -18.654752731323242
    10. '1' → logprob: -18.654752731323242

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '-' → logprob: -15.875261306762695
    4. ' -' → logprob: -17.000261306762695
    5. '۰' → logprob: -17.812761306762695
    6. '０' → logprob: -18.125261306762695
    7. '1' → logprob: -18.187761306762695
    8. '```' → logprob: -18.687761306762695
    9. '=' → logprob: -18.750261306762695
    10. '   ' → logprob: -19.250261306762695

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -15.250003814697266
    4. '-' → logprob: -16.125003814697266
    5. '０' → logprob: -17.875003814697266
    6. ' -' → logprob: -18.625003814697266
    7. '۰' → logprob: -18.937503814697266
    8. '=' → logprob: -19.125003814697266
    9. '   ' → logprob: -19.187503814697266
    10. '[' → logprob: -19.375003814697266

Token 238: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1263054758310318
    2. '<|end|>' → logprob: -2.37630558013916
    3. '   ' → logprob: -4.50130558013916
    4. '

' → logprob: -4.50130558013916
    5. '<|end|>' → logprob: -6.37630558013916
    6. '    
' → logprob: -6.75130558013916
    7. '	def' → logprob: -8.87630558013916
    8. 'def' → logprob: -9.00130558013916
    9. ' 
' → logprob: -9.37630558013916
    10. '  
' → logprob: -9.62630558013916

Token 239: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5619075894355774
    2. '

' → logprob: -1.5619075298309326
    3. '   ' → logprob: -1.5619075298309326
    4. 'def' → logprob: -4.811907768249512
    5. '    
' → logprob: -6.936907768249512
    6. '<|end|>' → logprob: -7.561907768249512
    7. '       ' → logprob: -7.686907768249512
    8. '
' → logprob: -9.686907768249512
    9. ' def' → logprob: -10.311907768249512
    10. '    

' → logprob: -10.436907768249512

Token 240: ' ' (ID: 220)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1762322038412094
    2. 'current' → logprob: -2.551232099533081
    3. 'Current' → logprob: -3.801232099533081
    4. ' #' → logprob: -4.42623233795166
    5. ' starting' → logprob: -4.67623233795166
    6. ' Current' → logprob: -5.17623233795166
    7. '0' → logprob: -5.30123233795166
    8. ' ' → logprob: -5.30123233795166
    9. 'Starting' → logprob: -5.30123233795166
    10. '#' → logprob: -5.42623233795166

Token 241: '0' (ID: 15)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0916343927383423
    2. '#' → logprob: -1.3416343927383423
    3. ' current' → logprob: -1.7166343927383423
    4. '0' → logprob: -2.8416342735290527
    5. 'self' → logprob: -3.4666342735290527
    6. 'start' → logprob: -3.5916342735290527
    7. 'starting' → logprob: -3.7166342735290527
    8. ' #' → logprob: -3.8416342735290527
    9. ' starting' → logprob: -4.216634273529053
    10. ' start' → logprob: -4.591634273529053

Token 242: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.28107133507728577
    2. '<|end|>' → logprob: -2.031071424484253
    3. ' #' → logprob: -3.156071424484253
    4. 'based' → logprob: -3.531071424484253
    5. ' based' → logprob: -4.031071186065674
    6. ' ' → logprob: -4.656071186065674
    7. '#' → logprob: -5.531071186065674
    8. ' (' → logprob: -6.281071186065674
    9. '<|end|>' → logprob: -6.406071186065674
    10. ')' → logprob: -6.531071186065674

Token 243: ' index' (ID: 3472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.362681120634079
    2. '   ' → logprob: -1.2376811504364014
    3. 'def' → logprob: -4.487680912017822
    4. '    
' → logprob: -6.487680912017822
    5. ' def' → logprob: -7.612680912017822
    6. '
' → logprob: -8.23768138885498
    7. '

' → logprob: -8.86268138885498
    8. ' ' → logprob: -9.11268138885498
    9. '  
' → logprob: -9.61268138885498
    10. '```' → logprob: -9.73768138885498

Token 244: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02147318795323372
    2. '   ' → logprob: -3.8964731693267822
    3. '    
' → logprob: -8.021472930908203
    4. '<|end|>' → logprob: -8.396472930908203
    5. 'def' → logprob: -9.396472930908203
    6. ' def' → logprob: -9.521472930908203
    7. '```' → logprob: -9.771472930908203
    8. '

' → logprob: -9.771472930908203
    9. '
' → logprob: -10.521472930908203
    10. '<|end|>' → logprob: -10.646472930908203

Token 245: ' first' (ID: 1577)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2724643349647522
    2. 'position' → logprob: -1.5224642753601074
    3. 'player' → logprob: -4.397464275360107
    4. 'the' → logprob: -5.647464275360107
    5. 'start' → logprob: -6.647464275360107
    6. ' current' → logprob: -6.647464275360107
    7. 'board' → logprob: -6.897464275360107
    8. 'starting' → logprob: -8.147464752197266
    9. ' position' → logprob: -8.647464752197266
    10. 'self' → logprob: -8.897464752197266

Token 246: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.27488309144973755
    2. ' cell' → logprob: -1.8998830318450928
    3. 'position' → logprob: -2.7748830318450928
    4. ' position' → logprob: -4.024883270263672
    5. '_cell' → logprob: -4.774883270263672
    6. 'space' → logprob: -7.149883270263672
    7. '_position' → logprob: -7.649883270263672
    8. 'square' → logprob: -8.274883270263672
    9. ' space' → logprob: -8.649883270263672
    10. '_' → logprob: -9.024883270263672

Token 247: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2866101562976837
    2. '   ' → logprob: -1.4116101264953613
    3. '<|end|>' → logprob: -6.411610126495361
    4. '```' → logprob: -6.536610126495361
    5. '    
' → logprob: -6.911610126495361
    6. 'def' → logprob: -7.411610126495361
    7. ' def' → logprob: -8.28661060333252
    8. '<|end|>' → logprob: -8.91161060333252
    9. '

' → logprob: -9.28661060333252
    10. '	def' → logprob: -10.16161060333252

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16875240206718445
    2. '
' → logprob: -1.9187524318695068
    3. 'def' → logprob: -4.918752193450928
    4. '    
' → logprob: -7.293752193450928
    5. ' def' → logprob: -7.793752193450928
    6. '```' → logprob: -10.168752670288086
    7. '	def' → logprob: -11.418752670288086
    8. '

' → logprob: -11.793752670288086
    9. '  
' → logprob: -11.918752670288086
    10. '        
' → logprob: -12.043752670288086

Token 249: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.35706390615087e-05
    2. '   ' → logprob: -11.000033378601074
    3. ' def' → logprob: -11.000033378601074
    4. '
' → logprob: -16.37503433227539
    5. '	def' → logprob: -18.12503433227539
    6. '```' → logprob: -19.12503433227539
    7. '    
' → logprob: -19.62503433227539
    8. ' ' → logprob: -20.00003433227539
    9. '  ' → logprob: -20.75003433227539
    10. '

' → logprob: -21.75003433227539

Token 250: ' play' (ID: 2107)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.06220698356628418
    2. ' play' → logprob: -2.937206983566284
    3. 'roll' → logprob: -5.312207221984863
    4. ' roll' → logprob: -7.062207221984863
    5. 'move' → logprob: -7.437207221984863
    6. 'can' → logprob: -8.562207221984863
    7. 'is' → logprob: -8.562207221984863
    8. 'run' → logprob: -9.187207221984863
    9. 'step' → logprob: -9.312207221984863
    10. ' move' → logprob: -9.562207221984863

Token 251: '_until' (ID: 115218)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020652047533076257
    2. '(' → logprob: -8.62520694732666
    3. '_next' → logprob: -11.87520694732666
    4. 'self' → logprob: -12.00020694732666
    5. '_step' → logprob: -12.12520694732666
    6. '():' → logprob: -13.37520694732666
    7. '   ' → logprob: -13.50020694732666
    8. '_line' → logprob: -13.50020694732666
    9. ' (' → logprob: -14.12520694732666
    10. '_' → logprob: -14.37520694732666

Token 252: '_goal' (ID: 101684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1009498834609985
    2. 'goal' → logprob: -1.2259498834609985
    3. '_goal' → logprob: -1.2259498834609985
    4. '(' → logprob: -2.725949764251709
    5. '(goal' → logprob: -6.225949764251709
    6. '(_' → logprob: -6.350949764251709
    7. '(self' → logprob: -6.350949764251709
    8. 'end' → logprob: -6.350949764251709
    9. 'def' → logprob: -6.725949764251709
    10. 'self' → logprob: -7.225949764251709

Token 253: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028107017278671265
    2. '(' → logprob: -5.877810478210449
    3. ' (' → logprob: -13.25281047821045
    4. 'self' → logprob: -13.37781047821045
    5. '       ' → logprob: -14.12781047821045
    6. '   ' → logprob: -14.25281047821045
    7. '_(' → logprob: -14.37781047821045
    8. '():' → logprob: -15.87781047821045
    9. '(s' → logprob: -16.627811431884766
    10. 'def' → logprob: -16.627811431884766

Token 254: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007397795561701059
    2. 'self' → logprob: -5.507397651672363
    3. '):' → logprob: -6.132397651672363
    4. '):
' → logprob: -7.257397651672363
    5. '       ' → logprob: -8.632397651672363
    6. '   ' → logprob: -8.757397651672363
    7. '(' → logprob: -10.257397651672363
    8. 'def' → logprob: -10.757397651672363
    9. ')' → logprob: -11.007397651672363
    10. ':' → logprob: -12.007397651672363

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006066487403586507
    2. ' while' → logprob: -7.625606536865234
    3. '        
' → logprob: -10.125606536865234
    4. '
' → logprob: -10.250606536865234
    5. '```' → logprob: -10.875606536865234
    6. 'while' → logprob: -11.250606536865234
    7. '\n' → logprob: -12.750606536865234
    8. '    
' → logprob: -13.125606536865234
    9. '   ' → logprob: -13.875606536865234
    10. '\' → logprob: -13.875606536865234

Token 256: ' rolls' (ID: 46838)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01048669870942831
    2. '       ' → logprob: -5.260486602783203
    3. ' while' → logprob: -5.260486602783203
    4. '
' → logprob: -10.885486602783203
    5. 'try' → logprob: -10.885486602783203
    6. 'import' → logprob: -12.260486602783203
    7. '```' → logprob: -12.635486602783203
    8. '   ' → logprob: -14.885486602783203
    9. '	while' → logprob: -15.635486602783203
    10. 'from' → logprob: -16.010486602783203

Token 257: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.136351078748703
    2. '=' → logprob: -2.1363511085510254
    3. '_count' → logprob: -5.386351108551025
    4. '_remaining' → logprob: -7.011351108551025
    5. '_used' → logprob: -7.011351108551025
    6. '_' → logprob: -7.261351108551025
    7. '_taken' → logprob: -7.636351108551025
    8. '_left' → logprob: -7.761351108551025
    9. '_needed' → logprob: -7.761351108551025
    10. '   ' → logprob: -8.136350631713867

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804412856698036
    2. '=' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.288043975830078
    4. '   ' → logprob: -14.538043975830078
    5. ' +=' → logprob: -15.538043975830078
    6. '    ' → logprob: -15.663043975830078
    7. '       ' → logprob: -16.538043975830078
    8. '  ' → logprob: -17.163043975830078
    9. ',' → logprob: -17.788043975830078
    10. '        ' → logprob: -17.913043975830078

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.380233764648438
    4. '1' → logprob: -17.130233764648438
    5. ' ' → logprob: -18.630233764648438
    6. '000' → logprob: -19.817733764648438
    7. '```' → logprob: -19.880233764648438
    8. '=' → logprob: -20.192733764648438
    9. 's' → logprob: -20.192733764648438
    10. '۰' → logprob: -20.255233764648438

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.812566757202148
    4. '   ' → logprob: -15.875066757202148
    5. '=' → logprob: -17.81256675720215
    6. '  ' → logprob: -17.87506675720215
    7. 'len' → logprob: -17.93756675720215
    8. 's' → logprob: -18.06256675720215
    9. 'self' → logprob: -18.31256675720215
    10. '```' → logprob: -18.31256675720215

Token 261: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.430004358291626
    2. '       ' → logprob: -1.055004358291626
    3. ' while' → logprob: -7.180004119873047
    4. 'while' → logprob: -8.055004119873047
    5. '        
' → logprob: -9.430004119873047
    6. '
' → logprob: -9.930004119873047
    7. ' 
' → logprob: -10.805004119873047
    8. '   ' → logprob: -11.305004119873047
    9. '  
' → logprob: -11.305004119873047
    10. '<|end|>' → logprob: -11.430004119873047

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18357959389686584
    2. '
' → logprob: -1.8085795640945435
    3. ' while' → logprob: -5.933579444885254
    4. 'while' → logprob: -6.933579444885254
    5. '        
' → logprob: -9.308579444885254
    6. '   ' → logprob: -10.683579444885254
    7. '	while' → logprob: -10.808579444885254
    8. '
' → logprob: -11.058579444885254
    9. '```' → logprob: -11.183579444885254
    10. ' 
' → logprob: -12.058579444885254

Token 263: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.004991931840777397
    2. '       ' → logprob: -6.0049920082092285
    3. ' while' → logprob: -6.0049920082092285
    4. 'try' → logprob: -10.00499153137207
    5. '	while' → logprob: -14.12999153137207
    6. '
' → logprob: -14.75499153137207
    7. 'import' → logprob: -16.12999153137207
    8. '   ' → logprob: -16.12999153137207
    9. '```' → logprob: -16.37999153137207
    10. 'While' → logprob: -18.00499153137207

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06214682012796402
    2. ' self' → logprob: -2.8121469020843506
    3. '       ' → logprob: -9.68714714050293
    4. 'True' → logprob: -9.68714714050293
    5. ' True' → logprob: -10.06214714050293
    6. '(self' → logprob: -12.31214714050293
    7. 'not' → logprob: -12.43714714050293
    8. ' not' → logprob: -12.68714714050293
    9. '	self' → logprob: -15.31214714050293
    10. '   ' → logprob: -15.81214714050293

Token 265: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00041613372741267085
    2. ' .' → logprob: -8.125415802001953
    3. '.' → logprob: -9.250415802001953
    4. 'position' → logprob: -10.750415802001953
    5. '.positions' → logprob: -13.750415802001953
    6. ' position' → logprob: -14.250415802001953
    7. '   ' → logprob: -15.750415802001953
    8. '.pos' → logprob: -15.750415802001953
    9. ' ' → logprob: -16.000415802001953
    10. '	position' → logprob: -16.500415802001953

Token 266: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47703561186790466
    2. '<' → logprob: -0.977035641670227
    3. ' !=' → logprob: -5.9770355224609375
    4. '!=' → logprob: -7.8520355224609375
    5. '<len' → logprob: -11.727035522460938
    6. ' ' → logprob: -11.852035522460938
    7. '<n' → logprob: -12.602035522460938
    8. '<size' → logprob: -12.727035522460938
    9. '<class' → logprob: -13.352035522460938
    10. '<int' → logprob: -14.227035522460938

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602456420660019
    2. ' self' → logprob: -1.910245656967163
    3. '       ' → logprob: -11.910245895385742
    4. '=self' → logprob: -12.285245895385742
    5. '(self' → logprob: -12.785245895385742
    6. '[self' → logprob: -13.785245895385742
    7. '<|end|>' → logprob: -13.910245895385742
    8. ' ' → logprob: -14.285245895385742
    9. '0' → logprob: -14.535245895385742
    10. 'len' → logprob: -14.660245895385742

Token 268: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.022523561492562294
    2. '.size' → logprob: -3.8975236415863037
    3. 'board' → logprob: -6.397523403167725
    4. '.' → logprob: -8.647523880004883
    5. 'size' → logprob: -9.772523880004883
    6. ' .' → logprob: -9.897523880004883
    7. ' board' → logprob: -10.897523880004883
    8. '	board' → logprob: -12.897523880004883
    9. '.goal' → logprob: -13.147523880004883
    10. '.s' → logprob: -13.272523880004883

Token 269: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.00034261439577676356
    2. '.' → logprob: -8.00034236907959
    3. ' .' → logprob: -12.50034236907959
    4. 'size' → logprob: -12.75034236907959
    5. '.s' → logprob: -15.75034236907959
    6. ').' → logprob: -16.375343322753906
    7. '   ' → logprob: -16.500343322753906
    8. '.position' → logprob: -17.000343322753906
    9. '.length' → logprob: -17.125343322753906
    10. '	size' → logprob: -17.500343322753906

Token 270: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03689609840512276
    2. ':
' → logprob: -3.536895990371704
    3. ' and' → logprob: -5.661896228790283
    4. ' -' → logprob: -6.286896228790283
    5. '-' → logprob: -6.786896228790283
    6. '       ' → logprob: -8.411895751953125
    7. '           ' → logprob: -8.536895751953125
    8. 'and' → logprob: -9.536895751953125
    9. ' :' → logprob: -9.536895751953125
    10. ':
' → logprob: -10.786895751953125

Token 271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011728443205356598
    2. ' ' → logprob: -6.75117301940918
    3. '   ' → logprob: -13.00117301940918
    4. '```' → logprob: -16.12617301940918
    5. '       ' → logprob: -16.87617301940918
    6. '  ' → logprob: -16.87617301940918
    7. '0' → logprob: -17.37617301940918
    8. '
' → logprob: -17.50117301940918
    9. '    ' → logprob: -17.75117301940918
    10. '<|end|>' → logprob: -18.06367301940918

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. '2' → logprob: -16.625036239624023
    5. '```' → logprob: -16.875036239624023
    6. '<|end|>' → logprob: -17.000036239624023
    7. '  ' → logprob: -18.000036239624023
    8. '       ' → logprob: -18.000036239624023
    9. '
' → logprob: -18.312536239624023
    10. '    ' → logprob: -18.437536239624023

Token 273: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6349763870239258
    2. ':' → logprob: -0.7599763870239258
    3. '           ' → logprob: -6.759976387023926
    4. '       ' → logprob: -7.009976387023926
    5. ' and' → logprob: -8.884976387023926
    6. '):
' → logprob: -9.634976387023926
    7. ',' → logprob: -10.134976387023926
    8. ':
' → logprob: -10.759976387023926
    9. ':

' → logprob: -11.634976387023926
    10. ' :
' → logprob: -12.134976387023926

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004102385137230158
    2. '
' → logprob: -6.1291022300720215
    3. '            
' → logprob: -6.6291022300720215
    4. '```' → logprob: -8.50410270690918
    5. '    
' → logprob: -8.75410270690918
    6. '  
' → logprob: -9.87910270690918
    7. ' 
' → logprob: -10.12910270690918
    8. '        
' → logprob: -10.37910270690918
    9. '   
' → logprob: -10.62910270690918
    10. '           
' → logprob: -11.37910270690918

Token 275: ' roll' (ID: 8465)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.523568868637085
    2. '           ' → logprob: -1.648568868637085
    3. 'steps' → logprob: -2.023568868637085
    4. 'roll' (adapté à ' roll') → logprob: -3.648568868637085
    5. 'throw' → logprob: -4.023569107055664
    6. 'step' → logprob: -4.148569107055664
    7. ' try' → logprob: -4.273569107055664
    8. ' roll' → logprob: -5.523569107055664
    9. ' steps' → logprob: -5.773569107055664
    10. 'throws' → logprob: -7.273569107055664

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002187256934121251
    2. '=' → logprob: -6.127187252044678
    3. '_value' → logprob: -14.127187728881836
    4. '_val' → logprob: -14.377187728881836
    5. ' ' → logprob: -14.502187728881836
    6. '   ' → logprob: -16.377187728881836
    7. ' ' → logprob: -16.627187728881836
    8. 'value' → logprob: -16.752187728881836
    9. ',' → logprob: -16.877187728881836
    10. 'val' → logprob: -17.502187728881836

Token 277: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.061967797577381134
    2. 'self' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. '	self' → logprob: -17.686967849731445
    5. '(self' → logprob: -18.686967849731445
    6. '=self' → logprob: -19.436967849731445
    7. '           ' → logprob: -19.436967849731445
    8. '_self' → logprob: -19.436967849731445
    9. '[self' → logprob: -19.686967849731445
    10. ' ' → logprob: -19.686967849731445

Token 278: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0001612267515156418
    2. '.' → logprob: -8.750161170959473
    3. 'dice' → logprob: -13.250161170959473
    4. '.next' → logprob: -14.750161170959473
    5. ' .' → logprob: -15.000161170959473
    6. 'd' → logprob: -16.37516212463379
    7. 'Dice' → logprob: -16.87516212463379
    8. ' dice' → logprob: -17.37516212463379
    9. '.s' → logprob: -18.12516212463379
    10. '	d' → logprob: -18.12516212463379

Token 279: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -9.729906196298543e-06
    2. 'ices' → logprob: -12.875009536743164
    3. 'ie' → logprob: -13.250009536743164
    4. 'dice' → logprob: -13.375009536743164
    5. 'i' → logprob: -14.250009536743164
    6. '
' → logprob: -14.625009536743164
    7. 'iece' → logprob: -14.875009536743164
    8. 'ic' → logprob: -15.250009536743164
    9. '`' → logprob: -15.625009536743164
    10. 'Ice' → logprob: -15.875009536743164

Token 280: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.843177233240567e-05
    2. '.' → logprob: -11.000018119812012
    3. ' .' → logprob: -13.500018119812012
    4. 'next' → logprob: -15.625018119812012
    5. '	next' → logprob: -19.000019073486328
    6. ' next' → logprob: -19.125019073486328
    7. '​.' → logprob: -19.625019073486328
    8. '\.' → logprob: -19.750019073486328
    9. '[next' → logprob: -19.875019073486328
    10. '_next' → logprob: -19.875019073486328

Token 281: '_throw' (ID: 182836)
  Prédit: '_throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_throw' → logprob: -7.93448489275761e-05
    2. '_' → logprob: -9.500079154968262
    3. '_raise' → logprob: -12.750079154968262
    4. '_return' → logprob: -14.750079154968262
    5. ' _' → logprob: -15.000079154968262
    6. '()' → logprob: -15.375079154968262
    7. '_roll' → logprob: -15.500079154968262
    8. 'throw' → logprob: -16.125080108642578
    9. '__' → logprob: -16.375080108642578
    10. '_try' → logprob: -16.500080108642578

Token 282: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7492480278015137
    2. '           ' → logprob: -0.7492480278015137
    3. '<|end|>' → logprob: -3.6242480278015137
    4. '            
' → logprob: -3.8742480278015137
    5. '  
' → logprob: -6.499248027801514
    6. '<|end|>' → logprob: -6.749248027801514
    7. ')' → logprob: -7.249248027801514
    8. 'self' → logprob: -7.249248027801514
    9. '               ' → logprob: -8.124248504638672
    10. '       ' → logprob: -8.124248504638672

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005506118293851614
    2. '
' → logprob: -5.5055060386657715
    3. '            
' → logprob: -6.8805060386657715
    4. '    
' → logprob: -9.38050651550293
    5. '<|end|>' → logprob: -9.38050651550293
    6. '  
' → logprob: -9.50550651550293
    7. ' 
' → logprob: -9.88050651550293
    8. '        
' → logprob: -10.50550651550293
    9. '       ' → logprob: -11.50550651550293
    10. '<|end|>' → logprob: -11.63050651550293

Token 284: ' rolls' (ID: 46838)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6620157361030579
    2. ' self' → logprob: -0.7870157361030579
    3. '           ' → logprob: -3.662015676498413
    4. ' new' → logprob: -6.287015914916992
    5. 'new' → logprob: -7.287015914916992
    6. ' rolls' → logprob: -8.037015914916992
    7. ' next' → logprob: -8.412015914916992
    8. 'next' → logprob: -9.537015914916992
    9. 'position' → logprob: -10.162015914916992
    10. 'pos' → logprob: -11.037015914916992

Token 285: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.347765181795694e-05
    2. '_' → logprob: -10.250053405761719
    3. 'count' → logprob: -11.750053405761719
    4. '=' → logprob: -12.875053405761719
    5. 'Count' → logprob: -13.000053405761719
    6. ' =' → logprob: -13.375053405761719
    7. ' _' → logprob: -13.750053405761719
    8. '_c' → logprob: -13.750053405761719
    9. '   ' → logprob: -15.250053405761719
    10. '_co' → logprob: -15.625053405761719

Token 286: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01814994215965271
    2. '+=' → logprob: -4.0181498527526855
    3. ']+=' → logprob: -16.893150329589844
    4. '+' → logprob: -17.393150329589844
    5. '   ' → logprob: -17.393150329589844
    6. '=' → logprob: -18.643150329589844
    7. '+=(' → logprob: -19.393150329589844
    8. ' +' → logprob: -19.643150329589844
    9. ' =' → logprob: -19.893150329589844
    10. '```' → logprob: -19.893150329589844

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026300301775336266
    2. ' ' → logprob: -3.6513001918792725
    3. '           ' → logprob: -18.15130043029785
    4. ' ' → logprob: -18.27630043029785
    5. '   ' → logprob: -18.65130043029785
    6. '```' → logprob: -19.58880043029785
    7. '۱' → logprob: -20.33880043029785
    8. '    ' → logprob: -20.33880043029785
    9. '0' → logprob: -20.46380043029785
    10. '
' → logprob: -20.65130043029785

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.875003814697266
    4. '```' → logprob: -20.750003814697266
    5. '１' → logprob: -21.000003814697266
    6. '۱' → logprob: -22.250003814697266
    7. '
' → logprob: -22.500003814697266
    8. '           ' → logprob: -23.125003814697266
    9. '       ' → logprob: -23.375003814697266
    10. 'int' → logprob: -23.500003814697266

Token 289: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.313575804233551
    2. '
' → logprob: -1.3135757446289062
    3. '            
' → logprob: -8.688575744628906
    4. '  
' → logprob: -10.563575744628906
    5. ' 
' → logprob: -10.688575744628906
    6. ' self' → logprob: -10.813575744628906
    7. 'self' → logprob: -10.813575744628906
    8. '
' → logprob: -11.313575744628906
    9. '       ' → logprob: -11.313575744628906
    10. '    
' → logprob: -11.438575744628906

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3135308623313904
    2. '
' → logprob: -1.3135309219360352
    3. '            
' → logprob: -8.813530921936035
    4. ' 
' → logprob: -10.688530921936035
    5. '  
' → logprob: -10.938530921936035
    6. '       ' → logprob: -10.938530921936035
    7. '
' → logprob: -11.188530921936035
    8. '    
' → logprob: -11.563530921936035
    9. 'self' → logprob: -11.813530921936035
    10. ',' → logprob: -12.063530921936035

Token 291: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.26448389887809753
    2. '           ' → logprob: -2.13948392868042
    3. ' self' → logprob: -2.26448392868042
    4. 'new' → logprob: -5.01448392868042
    5. ' new' → logprob: -6.26448392868042
    6. 'next' → logprob: -6.88948392868042
    7. '
' → logprob: -7.51448392868042
    8. ' next' → logprob: -7.88948392868042
    9. '```' → logprob: -9.139483451843262
    10. 'pos' → logprob: -9.389483451843262

Token 292: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00044473158777691424
    2. 'position' → logprob: -7.7504448890686035
    3. '.' → logprob: -11.250444412231445
    4. ' .' → logprob: -14.875444412231445
    5. ' position' → logprob: -15.125444412231445
    6. '	position' → logprob: -15.625444412231445
    7. '[position' → logprob: -16.625444412231445
    8. '_position' → logprob: -17.500444412231445
    9. '.move' → logprob: -17.750444412231445
    10. '
' → logprob: -18.250444412231445

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. ' +=' → logprob: -15.975207328796387
    4. '=self' → logprob: -16.72520637512207
    5. '+=' → logprob: -17.22520637512207
    6. ' ' → logprob: -17.35020637512207
    7. ' =
' → logprob: -17.97520637512207
    8. '＝' → logprob: -18.22520637512207
    9. ')' → logprob: -18.47520637512207
    10. '=
' → logprob: -18.60020637512207

Token 294: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740777611732483
    2. 'self' → logprob: -0.9740777611732483
    3. '(self' → logprob: -15.099078178405762
    4. ' ' → logprob: -15.974078178405762
    5. '[self' → logprob: -16.349077224731445
    6. '=self' → logprob: -16.474077224731445
    7. '	self' → logprob: -17.099077224731445
    8. '           ' → logprob: -17.349077224731445
    9. ' ' → logprob: -17.599077224731445
    10. '```' → logprob: -17.849077224731445

Token 295: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -8.566264295950532e-05
    2. '.' → logprob: -9.875085830688477
    3. 'board' → logprob: -11.125085830688477
    4. ' .' → logprob: -11.750085830688477
    5. '.position' → logprob: -12.000085830688477
    6. '.move' → logprob: -12.375085830688477
    7. ' board' → logprob: -14.250085830688477
    8. '	board' → logprob: -15.750085830688477
    9. 'position' → logprob: -16.375085830688477
    10. '.Board' → logprob: -17.250085830688477

Token 296: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0007143391412682831
    2. '.' → logprob: -7.250714302062988
    3. 'move' → logprob: -12.625714302062988
    4. ' .' → logprob: -14.250714302062988
    5. '.
' → logprob: -16.250715255737305
    6. ' move' → logprob: -16.500715255737305
    7. '   ' → logprob: -17.250715255737305
    8. '.Move' → logprob: -18.125715255737305
    9. '.mov' → logprob: -18.250715255737305
    10. '	move' → logprob: -18.500715255737305

Token 297: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -16.500015258789062
    4. ' (' → logprob: -16.500015258789062
    5. 'self' → logprob: -16.875015258789062
    6. '((' → logprob: -18.500015258789062
    7. '[self' → logprob: -19.000015258789062
    8. ',self' → logprob: -19.375015258789062
    9. '(this' → logprob: -19.875015258789062
    10. '```' → logprob: -20.875015258789062

Token 298: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0004387750814203173
    2. 'position' → logprob: -7.750438690185547
    3. '.' → logprob: -11.750438690185547
    4. ' .' → logprob: -17.250438690185547
    5. ',' → logprob: -17.375438690185547
    6. '	position' → logprob: -17.500438690185547
    7. '[position' → logprob: -17.500438690185547
    8. ' position' → logprob: -17.625438690185547
    9. '(position' → logprob: -18.000438690185547
    10. 'osition' → logprob: -18.625438690185547

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -12.75000286102295
    3. '           ' → logprob: -17.250003814697266
    4. ',
' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.875003814697266
    6. '       ' → logprob: -20.000003814697266
    7. '```' → logprob: -20.250003814697266
    8. '，' → logprob: -20.625003814697266
    9. '`,' → logprob: -21.000003814697266
    10. 'roll' → logprob: -21.250003814697266

Token 300: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.313262403011322
    2. 'roll' → logprob: -1.3132624626159668
    3. ' ' → logprob: -14.563261985778809
    4. ')' → logprob: -17.063262939453125
    5. 'rol' → logprob: -17.063262939453125
    6. '    ' → logprob: -17.313262939453125
    7. ' ' → logprob: -18.063262939453125
    8. '_roll' → logprob: -18.063262939453125
    9. '
' → logprob: -18.313262939453125
    10. ' rol' → logprob: -18.438262939453125

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007144584087654948
    2. ')
' → logprob: -7.250714302062988
    3. '           ' → logprob: -13.000714302062988
    4. '       ' → logprob: -14.375714302062988
    5. ')

' → logprob: -14.625714302062988
    6. ' )' → logprob: -14.750714302062988
    7. ')
' → logprob: -15.000714302062988
    8. ')return' → logprob: -15.125714302062988
    9. '))' → logprob: -16.500715255737305
    10. '())' → logprob: -17.250715255737305

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03503391146659851
    2. '
' → logprob: -3.660033941268921
    3. 'return' → logprob: -4.785033702850342
    4. '           ' → logprob: -8.5350341796875
    5. ' return' → logprob: -9.4100341796875
    6. '        
' → logprob: -10.4100341796875
    7. '   ' → logprob: -11.6600341796875
    8. '
' → logprob: -12.1600341796875
    9. '```' → logprob: -12.4100341796875
    10. '\
' → logprob: -12.9100341796875

Token 303: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12819506227970123
    2. 'return' (adapté à ' return') → logprob: -2.12819504737854
    3. ' return' → logprob: -6.878195285797119
    4. '   ' → logprob: -8.378194808959961
    5. '           ' → logprob: -12.628194808959961
    6. '	return' → logprob: -13.378194808959961
    7. '```' → logprob: -14.503194808959961
    8. '      ' → logprob: -15.503194808959961
    9. ' ' → logprob: -15.503194808959961
    10. '     ' → logprob: -15.753194808959961

Token 304: ' rolls' (ID: 46838)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.008616345934569836
    2. ' rolls' → logprob: -4.7586164474487305
    3. ' roll' → logprob: -13.63361644744873
    4. 'rolled' → logprob: -15.88361644744873
    5. 'self' → logprob: -16.508615493774414
    6. 'rol' → logprob: -16.758615493774414
    7. '(' → logprob: -17.008615493774414
    8. 'rolling' → logprob: -17.008615493774414
    9. '_roll' → logprob: -17.008615493774414
    10. 'rollers' → logprob: -17.508615493774414

Token 305: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.253090865968261e-06
    2. 's' → logprob: -12.250009536743164
    3. '_counts' → logprob: -12.500009536743164
    4. '_' → logprob: -15.375009536743164
    5. 'count' → logprob: -15.750009536743164
    6. ' _' → logprob: -16.000009536743164
    7. '_co' → logprob: -16.375009536743164
    8. 'Count' → logprob: -17.125009536743164
    9. '_c' → logprob: -17.250009536743164
    10. '_cnt' → logprob: -17.375009536743164

Token 306: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38929539918899536
    2. 'def' → logprob: -1.1392953395843506
    3. 'import' → logprob: -6.76429557800293
    4. '<|end|>' → logprob: -7.51429557800293
    5. '```' → logprob: -8.63929557800293
    6. 'if' → logprob: -9.26429557800293
    7. 'class' → logprob: -9.26429557800293
    8. '
' → logprob: -9.63929557800293
    9. 'from' → logprob: -9.88929557800293
    10. ' ' → logprob: -10.38929557800293

Token 308: ' Sug' (ID: 111433)
  Prédit: ' Sug'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sug' → logprob: -0.26298320293426514
    2. ' Player' → logprob: -2.2629833221435547
    3. ' Test' → logprob: -2.7629833221435547
    4. 'Sug' → logprob: -3.6379833221435547
    5. ' Solution' → logprob: -4.762983322143555
    6. ' Dice' → logprob: -4.762983322143555
    7. ' Main' → logprob: -6.012983322143555
    8. 'Test' → logprob: -6.262983322143555
    9. 'Player' → logprob: -6.262983322143555
    10. ' Solver' → logprob: -6.262983322143555

Token 309: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0006452414090745151
    2. 'oru' → logprob: -7.375645160675049
    3. '```' → logprob: -12.250645637512207
    4. 'roku' → logprob: -12.500645637512207
    5. ' or' → logprob: -12.875645637512207
    6. 'ar' → logprob: -13.250645637512207
    7. 'ork' → logprob: -13.500645637512207
    8. 'oku' → logprob: -14.125645637512207
    9. 'oro' → logprob: -14.625645637512207
    10. 'orol' → logprob: -14.750645637512207

Token 310: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -2.951771421066951e-05
    2. 'ok' → logprob: -10.750029563903809
    3. 'Oku' → logprob: -13.250029563903809
    4. 'оку' → logprob: -13.500029563903809
    5. ' oku' → logprob: -13.500029563903809
    6. 'o' → logprob: -14.000029563903809
    7. 'ku' → logprob: -14.750029563903809
    8. 'okus' → logprob: -15.000029563903809
    9. 'okuv' → logprob: -15.125029563903809
    10. '```' → logprob: -15.250029563903809

Token 311: 'Factory' (ID: 4870)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.7221176028251648
    2. 'Player' → logprob: -1.0971176624298096
    3. 'Solver' → logprob: -2.0971176624298096
    4. 'Board' → logprob: -4.0971174240112305
    5. 'Simulator' → logprob: -4.0971174240112305
    6. 'AI' → logprob: -4.3471174240112305
    7. 'Agent' → logprob: -6.4721174240112305
    8. 'Runner' → logprob: -6.5971174240112305
    9. 'Bot' → logprob: -6.7221174240112305
    10. ':' → logprob: -6.8471174240112305

Token 312: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019561098888516426
    2. ':
' → logprob: -6.251955986022949
    3. ' :' → logprob: -10.87695598602295
    4. '():' → logprob: -13.25195598602295
    5. '(object' → logprob: -13.50195598602295
    6. '：' → logprob: -14.00195598602295
    7. ':

' → logprob: -14.12695598602295
    8. '<|end|>' → logprob: -14.12695598602295
    9. '():
' → logprob: -14.87695598602295
    10. '(' → logprob: -14.87695598602295

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023651646450161934
    2. ' def' → logprob: -3.773651599884033
    3. 'def' → logprob: -8.023652076721191
    4. ':' → logprob: -10.398652076721191
    5. ':
' → logprob: -11.898652076721191
    6. '	def' → logprob: -11.898652076721191
    7. '<|end|>' → logprob: -12.148652076721191
    8. ',' → logprob: -12.398652076721191
    9. '```' → logprob: -12.648652076721191
    10. 'class' → logprob: -12.648652076721191

Token 314: ' @' (ID: 759)
  Prédit: ' @'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' @' → logprob: -0.21786214411258698
    2. '@' (adapté à ' @') → logprob: -2.467862129211426
    3. ' def' → logprob: -2.467862129211426
    4. 'def' → logprob: -4.217862129211426
    5. '   ' → logprob: -4.467862129211426
    6. 'staticmethod' → logprob: -11.092862129211426
    7. ' static' → logprob: -11.467862129211426
    8. ' ' → logprob: -12.967862129211426
    9. 'static' → logprob: -14.217862129211426
    10. '    ' → logprob: -15.217862129211426

Token 315: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0024768433067947626
    2. 'classmethod' → logprob: -6.002476692199707
    3. 'static' → logprob: -13.877476692199707
    4. 'dat' → logprob: -16.127477645874023
    5. 'property' → logprob: -17.127477645874023
    6. ' static' → logprob: -19.127477645874023
    7. 'st' → logprob: -21.127477645874023
    8. 'sta' → logprob: -22.627477645874023
    9. 'stat' → logprob: -22.877477645874023
    10. 'abstract' → logprob: -23.002477645874023

Token 316: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10451211035251617
    2. ' def' → logprob: -2.7295122146606445
    3. '
' → logprob: -3.4795122146606445
    4. '   ' → logprob: -5.8545122146606445
    5. '(' → logprob: -9.479512214660645
    6. '    
' → logprob: -9.604512214660645
    7. ' ' → logprob: -10.104512214660645
    8. '  
' → logprob: -10.229512214660645
    9. '(def' → logprob: -10.479512214660645
    10. '	def' → logprob: -11.229512214660645

Token 317: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010344536043703556
    2. ' def' → logprob: -4.760344505310059
    3. '   ' → logprob: -6.510344505310059
    4. '
' → logprob: -8.510344505310059
    5. ' ' → logprob: -10.885344505310059
    6. '	def' → logprob: -11.135344505310059
    7. '    
' → logprob: -12.760344505310059
    8. '  ' → logprob: -13.885344505310059
    9. '  
' → logprob: -14.385344505310059
    10. '(def' → logprob: -14.385344505310059

Token 318: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005774584715254605
    2. ' def' → logprob: -7.750577449798584
    3. 'create' → logprob: -9.125577926635742
    4. 'from' → logprob: -10.250577926635742
    5. 'define' → logprob: -13.500577926635742
    6. '   ' → logprob: -14.750577926635742
    7. ' create' → logprob: -15.375577926635742
    8. 'build' → logprob: -15.625577926635742
    9. '
' → logprob: -16.250577926635742
    10. 'generate' → logprob: -16.625577926635742

Token 319: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.1733376383781433
    2. 'create' → logprob: -2.173337697982788
    3. ' from' → logprob: -3.673337697982788
    4. 'from' → logprob: -4.298337459564209
    5. ' build' → logprob: -6.048337459564209
    6. ' make' → logprob: -6.548337459564209
    7. ' read' → logprob: -7.673337459564209
    8. 'build' → logprob: -7.798337459564209
    9. 'make' → logprob: -7.923337459564209
    10. ' parse' → logprob: -8.298337936401367

Token 320: '_game' (ID: 41386)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.24581336975097656
    2. '(' → logprob: -2.2458133697509766
    3. '_board' → logprob: -2.8708133697509766
    4. '(game' → logprob: -3.6208133697509766
    5. '_s' → logprob: -4.745813369750977
    6. '(s' → logprob: -5.120813369750977
    7. '_game' → logprob: -5.245813369750977
    8. '(S' → logprob: -5.495813369750977
    9. '(Board' → logprob: -6.995813369750977
    10. '_from' → logprob: -6.995813369750977

Token 321: '(n' (ID: 2406)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.15226635336875916
    2. '(board' → logprob: -2.152266263961792
    3. '(' → logprob: -4.652266502380371
    4. '(size' → logprob: -5.152266502380371
    5. '():' → logprob: -5.277266502380371
    6. '(cell' → logprob: -7.152266502380371
    7. '(s' → logprob: -7.527266502380371
    8. '(num' → logprob: -7.527266502380371
    9. '(rows' → logprob: -8.152266502380371
    10. '(lines' → logprob: -8.152266502380371

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015979631280060858
    2. ' ,' → logprob: -8.875160217285156
    3. ':' → logprob: -11.750160217285156
    4. ':int' → logprob: -12.125160217285156
    5. '):' → logprob: -13.125160217285156
    6. ',int' → logprob: -14.125160217285156
    7. 'int' → logprob: -14.250160217285156
    8. '   ' → logprob: -14.500160217285156
    9. '       ' → logprob: -14.625160217285156
    10. ',
' → logprob: -14.750160217285156

Token 323: ' m' (ID: 284)
  Prédit: 'throws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.3440910577774048
    2. 'dice' → logprob: -2.2190909385681152
    3. ' throws' → logprob: -2.3440909385681152
    4. ' dice' → logprob: -3.7190909385681152
    5. 'cells' → logprob: -4.344090938568115
    6. 'm' → logprob: -4.469090938568115
    7. 'd' → logprob: -5.094090938568115
    8. ' m' → logprob: -5.219090938568115
    9. 'k' → logprob: -5.344090938568115
    10. ' cells' → logprob: -5.719090938568115

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. '):' → logprob: -9.625078201293945
    3. ' ,' → logprob: -11.750078201293945
    4. '   ' → logprob: -13.750078201293945
    5. '       ' → logprob: -15.000078201293945
    6. ',
' → logprob: -15.375078201293945
    7. ')' → logprob: -15.375078201293945
    8. ':' → logprob: -15.500078201293945
    9. ',n' → logprob: -15.500078201293945
    10. '):
' → logprob: -15.500078201293945

Token 325: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.0784913301467896
    2. 'throws' → logprob: -1.7034913301467896
    3. ' cells' → logprob: -2.2034912109375
    4. 'dice' → logprob: -2.3284912109375
    5. ' throws' → logprob: -2.7034912109375
    6. 'cell' → logprob: -2.8284912109375
    7. ' dice' → logprob: -3.0784912109375
    8. ' cell' → logprob: -3.2034912109375
    9. 'board' → logprob: -3.7034912109375
    10. ' board' → logprob: -4.7034912109375

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024477019906044006
    2. '):' → logprob: -8.375245094299316
    3. ' ,' → logprob: -11.500245094299316
    4. '_,' → logprob: -14.375245094299316
    5. '   ' → logprob: -14.500245094299316
    6. '):
' → logprob: -15.125245094299316
    7. ':' → logprob: -15.375245094299316
    8. ')' → logprob: -15.375245094299316
    9. ',n' → logprob: -15.375245094299316
    10. ',m' → logprob: -15.500245094299316

Token 327: ' dice' (ID: 22078)
  Prédit: 'throws'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.19167256355285645
    2. ' throws' → logprob: -2.4416725635528564
    3. 'dice' → logprob: -2.5666725635528564
    4. ' dice' → logprob: -4.816672325134277
    5. 'roll' → logprob: -7.066672325134277
    6. 'throw' → logprob: -7.316672325134277
    7. 'd' → logprob: -8.441672325134277
    8. ' rolls' → logprob: -8.566672325134277
    9. 'th' → logprob: -8.941672325134277
    10. ' dices' → logprob: -9.191672325134277

Token 328: '_' (ID: 62)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.060207512229681015
    2. '_' → logprob: -3.3102076053619385
    3. '):
' → logprob: -3.9352076053619385
    4. ',' → logprob: -6.435207366943359
    5. 'throws' → logprob: -8.18520736694336
    6. ')' → logprob: -8.56020736694336
    7. '):
' → logprob: -8.93520736694336
    8. '_values' → logprob: -9.68520736694336
    9. '   ' → logprob: -10.43520736694336
    10. ' ):' → logprob: -10.68520736694336

Token 329: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.0008228530059568584
    2. 'roll' → logprob: -7.875823020935059
    3. '_' → logprob: -8.625823020935059
    4. 'values' → logprob: -9.375823020935059
    5. '_roll' → logprob: -9.500823020935059
    6. 'throw' → logprob: -10.375823020935059
    7. ' throws' → logprob: -10.625823020935059
    8. '_throw' → logprob: -10.625823020935059
    9. ')' → logprob: -11.750823020935059
    10. '_values' → logprob: -12.000823020935059

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013559521175920963
    2. '):
' → logprob: -6.62635612487793
    3. ' ):' → logprob: -11.37635612487793
    4. ')' → logprob: -11.62635612487793
    5. '):
' → logprob: -12.00135612487793
    6. ',' → logprob: -13.00135612487793
    7. '   ' → logprob: -14.75135612487793
    8. ':' → logprob: -15.37635612487793
    9. ' ' → logprob: -16.00135612487793
    10. ')：' → logprob: -16.37635612487793

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7385051846504211
    2. ':' → logprob: -0.9885051846504211
    3. '():' → logprob: -2.7385051250457764
    4. '():
' → logprob: -3.4885051250457764
    5. ':
' → logprob: -3.6135051250457764
    6. '):' → logprob: -4.2385053634643555
    7. '):
' → logprob: -4.7385053634643555
    8. '   ' → logprob: -5.9885053634643555
    9. ',' → logprob: -7.7385053634643555
    10. '(' → logprob: -7.8635053634643555

Token 332: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.3163352608680725
    2. ' board' → logprob: -1.3163352012634277
    3. '       ' → logprob: -5.816335201263428
    4. 'return' → logprob: -10.691335678100586
    5. '   ' → logprob: -11.316335678100586
    6. ' ' → logprob: -11.816335678100586
    7. ' return' → logprob: -11.816335678100586
    8. '	board' → logprob: -11.941335678100586
    9. '```' → logprob: -12.066335678100586
    10. '        ' → logprob: -12.066335678100586

Token 333: ' cells' (ID: 11242)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.006003925576806068
    2. ' board' → logprob: -5.1310038566589355
    3. '       ' → logprob: -10.256004333496094
    4. 'cells' → logprob: -10.756004333496094
    5. ' cells' → logprob: -12.756004333496094
    6. '        ' → logprob: -12.756004333496094
    7. '   ' → logprob: -13.131004333496094
    8. '    ' → logprob: -13.631004333496094
    9. '#' → logprob: -13.631004333496094
    10. 'return' → logprob: -13.756004333496094

Token 334: ' come' (ID: 3063)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07017150521278381
    2. ' =' → logprob: -2.695171594619751
    3. '=[' → logprob: -8.820171356201172
    4. '=list' → logprob: -11.070171356201172
    5. '_tokens' → logprob: -11.195171356201172
    6. '_list' → logprob: -11.320171356201172
    7. '=c' → logprob: -11.945171356201172
    8. '[' → logprob: -12.195171356201172
    9. '_with' → logprob: -12.320171356201172
    10. '   ' → logprob: -12.695171356201172

Token 335: ' ' (ID: 220)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6950961947441101
    2. ' as' → logprob: -1.4450962543487549
    3. 'as' → logprob: -2.070096254348755
    4. '        ' → logprob: -2.945096254348755
    5. ' from' → logprob: -3.695096254348755
    6. '       ' → logprob: -3.820096254348755
    7. '=' → logprob: -4.320096015930176
    8. ' in' → logprob: -5.320096015930176
    9. 'in' → logprob: -5.445096015930176
    10. '   ' → logprob: -5.570096015930176

Token 336: '0' (ID: 15)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.1720409393310547
    2. ' as' → logprob: -1.9220409393310547
    3. 'from' → logprob: -5.172040939331055
    4. 'in' → logprob: -5.797040939331055
    5. '=' → logprob: -7.172040939331055
    6. '[:' → logprob: -7.922040939331055
    7. 'with' → logprob: -8.422040939331055
    8. '[' → logprob: -8.422040939331055
    9. '[:-' → logprob: -8.422040939331055
    10. '   ' → logprob: -8.547040939331055

Token 337: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08720988780260086
    2. '-index' → logprob: -3.212209939956665
    3. 'based' → logprob: -3.212209939956665
    4. '-' → logprob: -7.212209701538086
    5. ' based' → logprob: -7.587209701538086
    6. ',' → logprob: -7.587209701538086
    7. 'indexed' → logprob: -7.837209701538086
    8. '...' → logprob: -8.837209701538086
    9. '[' → logprob: -9.212209701538086
    10. ':' → logprob: -9.337209701538086

Token 338: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030265524983406067
    2. '
' → logprob: -6.878026485443115
    3. ' return' → logprob: -6.878026485443115
    4. 'return' → logprob: -7.503026485443115
    5. ',' → logprob: -9.128026962280273
    6. '        ' → logprob: -9.253026962280273
    7. '        
' → logprob: -9.378026962280273
    8. ':' → logprob: -11.003026962280273
    9. '      ' → logprob: -11.253026962280273
    10. '   ' → logprob: -11.503026962280273

Token 339: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1327505111694336
    2. ' are' → logprob: -1.3827505111694336
    3. '       ' → logprob: -2.3827505111694336
    4. 'the' → logprob: -2.8827505111694336
    5. ' should' → logprob: -3.1327505111694336
    6. ' cells' → logprob: -3.3827505111694336
    7. 'm' → logprob: -3.6327505111694336
    8. ' m' → logprob: -3.8827505111694336
    9. ' in' → logprob: -3.8827505111694336
    10. ' may' → logprob: -4.382750511169434

Token 340: ' is' (ID: 382)
  Prédit: ' specifies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' specifies' → logprob: -1.935147762298584
    2. ')' → logprob: -2.310147762298584
    3. ' requires' → logprob: -2.310147762298584
    4. ' expects' → logprob: -2.685147762298584
    5. ' uses' → logprob: -2.685147762298584
    6. ':' → logprob: -2.810147762298584
    7. ' may' → logprob: -3.185147762298584
    8. '_requires' → logprob: -3.435147762298584
    9. ' states' → logprob: -3.560147762298584
    10. '.' → logprob: -3.685147762298584

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05657869204878807
    2. ' ' → logprob: -3.9315786361694336
    3. '0' → logprob: -4.806578636169434
    4. '       ' → logprob: -4.931578636169434
    5. '   ' → logprob: -5.181578636169434
    6. 'likely' → logprob: -5.431578636169434
    7. 'probably' → logprob: -6.681578636169434
    8. 'assuming' → logprob: -6.681578636169434
    9. 'index' → logprob: -6.806578636169434
    10. ' likely' → logprob: -7.181578636169434

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020499147474765778
    2. ' ' → logprob: -4.270499229431152
    3. '   ' → logprob: -6.270499229431152
    4. '0' → logprob: -7.020499229431152
    5. 'cells' → logprob: -7.145499229431152
    6. 'based' → logprob: -7.270499229431152
    7. 'given' → logprob: -7.770499229431152
    8. 'indexed' → logprob: -7.770499229431152
    9. '       ' → logprob: -8.270499229431152
    10. 'likely' → logprob: -9.145499229431152

Token 343: '-based' (ID: 8235)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1584770679473877
    2. ',' → logprob: -1.5334770679473877
    3. '<|end|>' → logprob: -2.0334770679473877
    4. ':' → logprob: -2.6584770679473877
    5. ')' → logprob: -2.6584770679473877
    6. '   ' → logprob: -3.0334770679473877
    7. ' ,' → logprob: -3.9084770679473877
    8. '-' → logprob: -3.9084770679473877
    9. '        ' → logprob: -4.033476829528809
    10. '[' → logprob: -4.408476829528809

Token 344: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22657868266105652
    2. '
' → logprob: -2.601578712463379
    3. '        
' → logprob: -2.976578712463379
    4. ',' → logprob: -3.351578712463379
    5. '        ' → logprob: -4.601578712463379
    6. '<|end|>' → logprob: -4.726578712463379
    7. '    
' → logprob: -5.476578712463379
    8. ' 
' → logprob: -5.476578712463379
    9. 'cells' → logprob: -6.101578712463379
    10. '  
' → logprob: -6.226578712463379

Token 345: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44770893454551697
    2. ' cells' → logprob: -1.3227089643478394
    3. 'cells' → logprob: -3.07270884513855
    4. ' return' → logprob: -3.69770884513855
    5. '#' → logprob: -4.947709083557129
    6. 'return' → logprob: -5.072709083557129
    7. ' adjusted' → logprob: -5.197709083557129
    8. '        ' → logprob: -6.697709083557129
    9. 'adjust' → logprob: -7.072709083557129
    10. ' #' → logprob: -7.197709083557129

Token 346: ' use' (ID: 1199)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5373518466949463
    2. 'cells' → logprob: -1.2873518466949463
    3. '       ' → logprob: -2.9123518466949463
    4. ' cells' → logprob: -3.2873518466949463
    5. ' return' → logprob: -3.6623518466949463
    6. '[' → logprob: -4.162351608276367
    7. 'pass' → logprob: -7.037351608276367
    8. '           ' → logprob: -7.412351608276367
    9. 'subtract' → logprob: -7.537351608276367
    10. ' [' → logprob: -7.537351608276367

Token 347: ' ' (ID: 220)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.16074468195438385
    2. ' cells' → logprob: -1.9107446670532227
    3. 'them' → logprob: -8.285744667053223
    4. ' them' → logprob: -8.910744667053223
    5. '[' → logprob: -9.535744667053223
    6. ' [' → logprob: -11.285744667053223
    7. 'the' → logprob: -11.535744667053223
    8. ' as' → logprob: -12.035744667053223
    9. '   ' → logprob: -12.160744667053223
    10. ' the' → logprob: -12.160744667053223

Token 348: '0' (ID: 15)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0003309361054562032
    2. ' cells' → logprob: -8.375330924987793
    3. 'them' → logprob: -9.250330924987793
    4. '[' → logprob: -13.750330924987793
    5. 'the' → logprob: -14.000330924987793
    6. ' them' → logprob: -14.125330924987793
    7. 'as' → logprob: -14.750330924987793
    8. '0' → logprob: -15.750330924987793
    9. 'list' → logprob: -15.875330924987793
    10. '       ' → logprob: -16.12533187866211

Token 349: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.16198067367076874
    2. 'based' → logprob: -1.9119806289672852
    3. '       ' → logprob: -6.786980628967285
    4. '           ' → logprob: -8.536980628967285
    5. 'cells' → logprob: -8.786980628967285
    6. '-base' → logprob: -9.661980628967285
    7. '_based' → logprob: -10.161980628967285
    8. ' -' → logprob: -10.286980628967285
    9. 'return' → logprob: -10.536980628967285
    10. '-index' → logprob: -10.661980628967285

Token 350: ' internally' (ID: 65530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010952114826068282
    2. 'return' → logprob: -6.876095294952393
    3. ' return' → logprob: -10.501094818115234
    4. 'cells' → logprob: -10.501094818115234
    5. 'board' → logprob: -12.876094818115234
    6. ' cells' → logprob: -13.626094818115234
    7. '   ' → logprob: -13.751094818115234
    8. '           ' → logprob: -14.376094818115234
    9. ',' → logprob: -14.501094818115234
    10. '      ' → logprob: -15.001094818115234

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008871606551110744
    2. 'cells' → logprob: -7.375887393951416
    3. 'return' → logprob: -8.875886917114258
    4. '
' → logprob: -9.875886917114258
    5. '        
' → logprob: -10.625886917114258
    6. ' cells' → logprob: -10.875886917114258
    7. ',' → logprob: -11.625886917114258
    8. '           ' → logprob: -12.750886917114258
    9. '```' → logprob: -12.875886917114258
    10. ' return' → logprob: -13.000886917114258

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046737297088839114
    2. 'return' → logprob: -7.875467300415039
    3. ' return' → logprob: -9.875467300415039
    4. 'cells' → logprob: -11.250467300415039
    5. '   ' → logprob: -12.250467300415039
    6. ',' → logprob: -12.375467300415039
    7. '
' → logprob: -12.500467300415039
    8. ' cells' → logprob: -13.000467300415039
    9. '        
' → logprob: -13.250467300415039
    10. '           ' → logprob: -13.625467300415039

Token 353: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -8.029847231227905e-05
    2. ' board' → logprob: -10.125080108642578
    3. 'return' → logprob: -10.625080108642578
    4. 'cells' → logprob: -11.750080108642578
    5. '       ' → logprob: -11.875080108642578
    6. '   ' → logprob: -14.375080108642578
    7. 'cell' → logprob: -16.250080108642578
    8. '```' → logprob: -16.375080108642578
    9. '	board' → logprob: -16.625080108642578
    10. 'boards' → logprob: -17.250080108642578

Token 354: ' Validate' (ID: 41366)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0017729965038597584
    2. ' board' → logprob: -7.001772880554199
    3. 'return' → logprob: -7.876772880554199
    4. '       ' → logprob: -8.3767728805542
    5. 'cells' → logprob: -8.6267728805542
    6. '   ' → logprob: -10.2517728805542
    7. 'dice' → logprob: -11.0017728805542
    8. 'cell' → logprob: -12.7517728805542
    9. ' return' → logprob: -12.7517728805542
    10. ' ' → logprob: -13.1267728805542

Token 355: ' first' (ID: 1577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26495933532714844
    2. 'if' → logprob: -1.6399593353271484
    3. 'n' → logprob: -4.139959335327148
    4. ' n' → logprob: -4.514959335327148
    5. 'len' → logprob: -4.889959335327148
    6. ' cells' → logprob: -6.514959335327148
    7. ' len' → logprob: -6.889959335327148
    8. '       ' → logprob: -7.639959335327148
    9. 'cells' → logprob: -8.264959335327148
    10. '   ' → logprob: -8.264959335327148

Token 356: ' cell' (ID: 4206)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4950411319732666
    2. 'if' → logprob: -0.9950411319732666
    3. ' and' → logprob: -4.6200408935546875
    4. '       ' → logprob: -5.7450408935546875
    5. 'and' → logprob: -6.2450408935546875
    6. '<|end|>' → logprob: -6.4950408935546875
    7. 'cells' → logprob: -6.8700408935546875
    8. 'cell' → logprob: -7.3700408935546875
    9. ' or' → logprob: -7.8700408935546875
    10. ' cells' → logprob: -7.9950408935546875

Token 357: ' instruction' (ID: 21179)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.745588481426239
    2. '       ' → logprob: -0.870588481426239
    3. ' if' → logprob: -2.245588541030884
    4. 'assert' → logprob: -7.745588302612305
    5. ',' → logprob: -7.870588302612305
    6. ' and' → logprob: -9.745588302612305
    7. ' =' → logprob: -10.745588302612305
    8. ':' → logprob: -10.995588302612305
    9. '=' → logprob: -11.245588302612305
    10. 'and' → logprob: -11.370588302612305

Token 358: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19588685035705566
    2. '       ' → logprob: -1.8208868503570557
    3. ' if' → logprob: -4.320886611938477
    4. 'assert' → logprob: -5.945886611938477
    5. ' =' → logprob: -10.570886611938477
    6. '=' → logprob: -10.695886611938477
    7. ',' → logprob: -10.945886611938477
    8. '	if' → logprob: -11.945886611938477
    9. 'def' → logprob: -12.070886611938477
    10. 'for' → logprob: -12.445886611938477

Token 359: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061987072229385376
    2. ' ' → logprob: -2.8119871616363525
    3. ' zero' → logprob: -12.061986923217773
    4. '==' → logprob: -12.561986923217773
    5. '   ' → logprob: -13.311986923217773
    6. 'not' → logprob: -13.561986923217773
    7. ' not' → logprob: -13.811986923217773
    8. 'zero' → logprob: -13.936986923217773
    9. '-' → logprob: -14.061986923217773
    10. '=' → logprob: -14.311986923217773

Token 360: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03709437698125839
    2. ' if' → logprob: -4.287094593048096
    3. 'if' → logprob: -4.412094593048096
    4. '
' → logprob: -5.037094593048096
    5. '<|end|>' → logprob: -6.037094593048096
    6. ',' → logprob: -7.037094593048096
    7. '        
' → logprob: -8.287094116210938
    8. 'assert' → logprob: -8.662094116210938
    9. '<|end|>' → logprob: -9.662094116210938
    10. '.' → logprob: -9.787094116210938

Token 361: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.5104011297225952
    2. ' cells' → logprob: -2.1354012489318848
    3. 'per' → logprob: -2.3854012489318848
    4. ' expected' → logprob: -3.3854012489318848
    5. ' given' → logprob: -3.5104012489318848
    6. 'expected' → logprob: -3.5104012489318848
    7. 'cells' → logprob: -3.6354012489318848
    8. ' it' → logprob: -4.635401248931885
    9. ' well' → logprob: -4.635401248931885
    10. 'assert' → logprob: -5.010401248931885

Token 362: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.12906211614608765
    2. ' problem' → logprob: -2.1290621757507324
    3. 'the' → logprob: -7.004062175750732
    4. ' the' → logprob: -7.879062175750732
    5. ' specification' → logprob: -7.879062175750732
    6. 'spec' → logprob: -8.754061698913574
    7. ' constraints' → logprob: -10.004061698913574
    8. 'constraints' → logprob: -10.129061698913574
    9. 'description' → logprob: -10.504061698913574
    10. 'game' → logprob: -10.629061698913574

Token 363: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004000161308795214
    2. ' if' → logprob: -6.129000186920166
    3. 'if' → logprob: -6.379000186920166
    4. '
' → logprob: -10.128999710083008
    5. ',' → logprob: -10.503999710083008
    6. 'assert' → logprob: -10.628999710083008
    7. '<|end|>' → logprob: -11.253999710083008
    8. '        
' → logprob: -12.503999710083008
    9. '   ' → logprob: -13.878999710083008
    10. '      ' → logprob: -13.878999710083008

Token 364: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015352080576121807
    2. ' if' → logprob: -4.640352249145508
    3. 'if' → logprob: -5.765352249145508
    4. '<|end|>' → logprob: -6.765352249145508
    5. '
' → logprob: -7.515352249145508
    6. ',' → logprob: -7.640352249145508
    7. '        
' → logprob: -9.140352249145508
    8. 'assert' → logprob: -9.765352249145508
    9. '<|end|>' → logprob: -10.640352249145508
    10. ':' → logprob: -11.265352249145508

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015624175779521465
    2. 'if' → logprob: -4.390624046325684
    3. ' if' → logprob: -5.890624046325684
    4. 'assert' → logprob: -8.015624046325684
    5. '	' → logprob: -12.640624046325684
    6. ',' → logprob: -13.140624046325684
    7. '	if' → logprob: -13.265624046325684
    8. '   ' → logprob: -13.515624046325684
    9. '<|end|>' → logprob: -13.765624046325684
    10. ' assert' → logprob: -14.140624046325684

Token 366: ' if' (ID: 538)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.5809774994850159
    2. 'if' (adapté à ' if') → logprob: -1.080977439880371
    3. '       ' → logprob: -2.330977439880371
    4. ' if' → logprob: -5.580977439880371
    5. ' assert' → logprob: -7.830977439880371
    6. '.assert' → logprob: -11.830977439880371
    7. '	assert' → logprob: -12.330977439880371
    8. 'return' → logprob: -13.580977439880371
    9. '_assert' → logprob: -13.580977439880371
    10. '#' → logprob: -13.830977439880371

Token 367: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.062256161123514175
    2. 'cells' → logprob: -2.812256097793579
    3. ' len' → logprob: -8.937255859375
    4. 'len' → logprob: -9.437255859375
    5. ' not' → logprob: -9.687255859375
    6. 'not' → logprob: -12.062255859375
    7. ' ' → logprob: -13.062255859375
    8. '.cells' → logprob: -13.187255859375
    9. ' ' → logprob: -13.562255859375
    10. 'n' → logprob: -14.312255859375

Token 368: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.750001907348633
    3. '0' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.375001907348633
    5. ' and' → logprob: -16.000001907348633
    6. '[
' → logprob: -16.500001907348633
    7. 'and' → logprob: -16.750001907348633
    8. ' ' → logprob: -16.875001907348633
    9. '```' → logprob: -16.875001907348633
    10. '       ' → logprob: -18.000001907348633

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. '   ' → logprob: -17.625
    5. '#' → logprob: -19.25
    6. '...' → logprob: -19.3125
    7. '۰' → logprob: -19.375
    8. '00' → logprob: -19.375
    9. '<|end|>' → logprob: -19.4375
    10. '```' → logprob: -19.8125

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004078401252627373
    2. ']!=' → logprob: -5.629078388214111
    3. ' ]' → logprob: -7.879078388214111
    4. '!=' → logprob: -10.12907886505127
    5. ' !=' → logprob: -10.12907886505127
    6. '[' → logprob: -11.12907886505127
    7. ')!=' → logprob: -13.87907886505127
    8. ']==' → logprob: -13.87907886505127
    9. '']' → logprob: -14.00407886505127
    10. '()]' → logprob: -14.50407886505127

Token 371: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02985832467675209
    2. ' !=' → logprob: -3.529858350753784
    3. ')!=' → logprob: -9.904858589172363
    4. '()!=' → logprob: -10.404858589172363
    5. ']!=' → logprob: -11.029858589172363
    6. '!==' → logprob: -12.154858589172363
    7. '!' → logprob: -13.779858589172363
    8. ')' → logprob: -14.029858589172363
    9. '==' → logprob: -14.154858589172363
    10. '!="' → logprob: -14.404858589172363

Token 372: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -18.514163970947266
    4. '   ' → logprob: -18.764163970947266
    5. '<|end|>' → logprob: -19.514163970947266
    6. '=' → logprob: -20.014163970947266
    7. '  ' → logprob: -20.264163970947266
    8. '۰' → logprob: -20.889163970947266
    9. ')' → logprob: -21.264163970947266
    10. '```' → logprob: -21.389163970947266

Token 373: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -20.750009536743164
    4. '۰' → logprob: -21.250009536743164
    5. '=' → logprob: -21.750009536743164
    6. '```' → logprob: -22.375009536743164
    7. ')' → logprob: -22.875009536743164
    8. '  ' → logprob: -23.000009536743164
    9. '[' → logprob: -23.125009536743164
    10. ' ' → logprob: -23.375009536743164

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04326556622982025
    2. ':
' → logprob: -3.1682655811309814
    3. ':return' → logprob: -8.668265342712402
    4. '       ' → logprob: -10.418265342712402
    5. '):
' → logprob: -11.043265342712402
    6. '):' → logprob: -11.293265342712402
    7. ' or' → logprob: -11.543265342712402
    8. '           ' → logprob: -11.668265342712402
    9. ' and' → logprob: -12.043265342712402
    10. ')' → logprob: -12.418265342712402

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13445590436458588
    2. ':' → logprob: -2.634455919265747
    3. ':
' → logprob: -3.009455919265747
    4. '       ' → logprob: -6.134455680847168
    5. ':return' → logprob: -7.259455680847168
    6. ',' → logprob: -7.759455680847168
    7. ' raise' → logprob: -7.884455680847168
    8. 'raise' → logprob: -8.384455680847168
    9. '               ' → logprob: -8.634455680847168
    10. '
' → logprob: -8.759455680847168

Token 376: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.31165817379951477
    2. 'raise' (adapté à ' raise') → logprob: -1.4366581439971924
    3. '           ' → logprob: -4.5616583824157715
    4. ' return' → logprob: -4.5616583824157715
    5. 'return' → logprob: -4.8116583824157715
    6. ' cells' → logprob: -7.4366583824157715
    7. 'cells' → logprob: -7.9366583824157715
    8. '            ' → logprob: -10.186657905578613
    9. '               ' → logprob: -10.936657905578613
    10. '	raise' → logprob: -11.686657905578613

Token 377: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.2519499361515045
    2. ' Value' → logprob: -1.5019499063491821
    3. 'Assertion' → logprob: -11.62695026397705
    4. ' Assertion' → logprob: -11.87695026397705
    5. '_value' → logprob: -13.50195026397705
    6. '	Value' → logprob: -14.12695026397705
    7. 'Runtime' → logprob: -14.12695026397705
    8. '_Value' → logprob: -14.25195026397705
    9. '(Value' → logprob: -14.50195026397705
    10. ' Runtime' → logprob: -14.87695026397705

Token 378: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.001972053898498416
    2. 'rror' → logprob: -6.251972198486328
    3. 'ror' → logprob: -10.126972198486328
    4. 'r' → logprob: -13.501972198486328
    5. 'Value' → logprob: -13.501972198486328
    6. 'n' → logprob: -14.251972198486328
    7. 'SError' → logprob: -16.626972198486328
    8. 'Warning' → logprob: -17.876972198486328
    9. 'error' → logprob: -18.501972198486328
    10. 'R' → logprob: -18.751972198486328

Token 379: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011880877427756786
    2. '(' → logprob: -6.751188278198242
    3. '('' → logprob: -11.001188278198242
    4. '(
' → logprob: -13.751188278198242
    5. '("'' → logprob: -16.501188278198242
    6. '"' → logprob: -18.126188278198242
    7. '(

' → logprob: -18.501188278198242
    8. ' ("' → logprob: -18.626188278198242
    9. '("")' → logprob: -19.126188278198242
    10. '(f' → logprob: -19.251188278198242

Token 380: 'Start' (ID: 4459)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.5411057472229004
    2. 'The' → logprob: -0.9161057472229004
    3. 'Invalid' → logprob: -4.1661057472229
    4. 'Starting' → logprob: -6.7911057472229
    5. 'Initial' → logprob: -7.0411057472229
    6. ' First' → logprob: -9.666105270385742
    7. 'cells' → logprob: -9.666105270385742
    8. 'Start' → logprob: -9.791105270385742
    9. ' The' → logprob: -10.166105270385742
    10. '"' → logprob: -10.416105270385742

Token 381: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.0518774650990963
    2. ' position' → logprob: -3.301877498626709
    3. ' instruction' → logprob: -4.426877498626709
    4. 'cell' → logprob: -6.676877498626709
    5. ' cells' → logprob: -8.67687702178955
    6. 'instruction' → logprob: -8.67687702178955
    7. 'position' → logprob: -9.17687702178955
    8. 'ing' → logprob: -10.80187702178955
    9. '[' → logprob: -10.80187702178955
    10. '   ' → logprob: -11.67687702178955

Token 382: ' instruction' (ID: 21179)
  Prédit: ' instruction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instruction' → logprob: -0.29816925525665283
    2. 'instruction' → logprob: -1.6731692552566528
    3. ' must' → logprob: -2.7981691360473633
    4. 'must' → logprob: -5.673169136047363
    5. ' should' → logprob: -6.048169136047363
    6. ''s' → logprob: -6.673169136047363
    7. ' cell' → logprob: -7.673169136047363
    8. '[' → logprob: -8.048169136047363
    9. ' instructions' → logprob: -8.173169136047363
    10. 'instructions' → logprob: -8.798169136047363

Token 383: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0023253406397998333
    2. ' should' → logprob: -6.502325534820557
    3. 'must' → logprob: -7.502325534820557
    4. ' cannot' → logprob: -8.252325057983398
    5. ' is' → logprob: -13.127325057983398
    6. 'should' → logprob: -13.252325057983398
    7. ' ' → logprob: -13.252325057983398
    8. ' at' → logprob: -13.752325057983398
    9. 'cannot' → logprob: -14.127325057983398
    10. ' for' → logprob: -14.377325057983398

Token 384: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0010354298865422606
    2. 'be' → logprob: -6.876035213470459
    3. '<|end|>' → logprob: -14.251035690307617
    4. '_be' → logprob: -14.626035690307617
    5. ' always' → logprob: -14.876035690307617
    6. ' remain' → logprob: -15.251035690307617
    7. '	be' → logprob: -15.251035690307617
    8. '0' → logprob: -15.376035690307617
    9. ' not' → logprob: -15.626035690307617
    10. ' equal' → logprob: -16.251035690307617

Token 385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027206414961256087
    2. ' ' → logprob: -8.250271797180176
    3. ' zero' → logprob: -11.750271797180176
    4. 'zero' → logprob: -12.750271797180176
    5. '=' → logprob: -19.250272750854492
    6. '```' → logprob: -20.250272750854492
    7. '<|end|>' → logprob: -20.500272750854492
    8. ')' → logprob: -20.500272750854492
    9. 'exact' → logprob: -20.750272750854492
    10. ' صفر' → logprob: -20.875272750854492

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'zero' → logprob: -18.875
    4. '=' → logprob: -19.375
    5. ' zero' → logprob: -21.125
    6. '۰' → logprob: -21.25
    7. ')' → logprob: -21.375
    8. '```' → logprob: -21.75
    9. '<|end|>' → logprob: -21.75
    10. '==' → logprob: -22.0

Token 387: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.048771873116493225
    2. '")
' → logprob: -3.048771858215332
    3. '.")' → logprob: -9.423771858215332
    4. '")
' → logprob: -9.548771858215332
    5. '.")
' → logprob: -10.548771858215332
    6. ')' → logprob: -13.298771858215332
    7. ')")' → logprob: -13.548771858215332
    8. '       ' → logprob: -13.673771858215332
    9. '")

' → logprob: -13.923771858215332
    10. ')")
' → logprob: -14.923771858215332

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019710339256562293
    2. '<|end|>' → logprob: -9.250197410583496
    3. '
' → logprob: -10.375197410583496
    4. '        
' → logprob: -10.500197410583496
    5. ',' → logprob: -11.375197410583496
    6. '```' → logprob: -11.750197410583496
    7. 'return' → logprob: -11.875197410583496
    8. '           ' → logprob: -12.000197410583496
    9. ' return' → logprob: -13.625197410583496
    10. '   ' → logprob: -13.750197410583496

Token 389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37066832184791565
    2. 'board' → logprob: -1.3706682920455933
    3. 'dice' → logprob: -3.620668411254883
    4. ' board' → logprob: -3.745668411254883
    5. 'return' → logprob: -5.620668411254883
    6. ' dice' → logprob: -7.245668411254883
    7. ' return' → logprob: -7.995668411254883
    8. '   ' → logprob: -8.620668411254883
    9. '```' → logprob: -8.995668411254883
    10. '
' → logprob: -8.995668411254883

Token 390: ' Validate' (ID: 41366)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.26107707619667053
    2. 'dice' → logprob: -2.2610771656036377
    3. 'if' → logprob: -2.5110771656036377
    4. '       ' → logprob: -3.3860771656036377
    5. 'return' → logprob: -5.386076927185059
    6. 'for' → logprob: -6.386076927185059
    7. ' board' → logprob: -6.511076927185059
    8. ' if' → logprob: -7.011076927185059
    9. ' dice' → logprob: -7.636076927185059
    10. '#' → logprob: -7.636076927185059

Token 391: ' dice' (ID: 22078)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.311221182346344
    2. ' len' → logprob: -1.4362211227416992
    3. 'm' → logprob: -4.311221122741699
    4. ' all' → logprob: -5.061221122741699
    5. ' m' → logprob: -5.561221122741699
    6. 'all' → logprob: -5.686221122741699
    7. 'cells' → logprob: -7.561221122741699
    8. ' cells' → logprob: -7.686221122741699
    9. ' length' → logprob: -8.4362211227417
    10. 'n' → logprob: -8.4362211227417

Token 392: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0279933400452137
    2. 'throws' → logprob: -3.6529934406280518
    3. 'values' → logprob: -7.902993202209473
    4. ' =' → logprob: -8.027993202209473
    5. '_throw' → logprob: -8.027993202209473
    6. '_values' → logprob: -8.152993202209473
    7. ' throws' → logprob: -8.777993202209473
    8. 's' → logprob: -9.902993202209473
    9. '=' → logprob: -10.652993202209473
    10. '   ' → logprob: -11.027993202209473

Token 393: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.02674620784819126
    2. '_' → logprob: -3.6517462730407715
    3. ' throws' → logprob: -8.276745796203613
    4. '_throw' → logprob: -8.901745796203613
    5. 'throw' → logprob: -10.901745796203613
    6. '   ' → logprob: -11.651745796203613
    7. ' ' → logprob: -12.401745796203613
    8. '
' → logprob: -12.526745796203613
    9. 'Throws' → logprob: -12.776745796203613
    10. '	throws' → logprob: -12.901745796203613

Token 394: ' length' (ID: 5517)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0119125843048096
    2. 'for' → logprob: -1.3869125843048096
    3. '       ' → logprob: -1.5119125843048096
    4. 'if' → logprob: -2.3869125843048096
    5. ' if' → logprob: -3.6369125843048096
    6. ' for' → logprob: -4.2619123458862305
    7. '=' → logprob: -4.3869123458862305
    8. 'all' → logprob: -4.8869123458862305
    9. ',' → logprob: -5.7619123458862305
    10. 'sum' → logprob: -6.6369123458862305

Token 395: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05951172113418579
    2. 'if' → logprob: -3.059511661529541
    3. ' if' → logprob: -4.559511661529541
    4. ',' → logprob: -9.4345121383667
    5. '==' → logprob: -9.5595121383667
    6. '!=' → logprob: -9.9345121383667
    7. '	' → logprob: -10.3095121383667
    8. ' !=' → logprob: -10.3095121383667
    9. '	if' → logprob: -10.4345121383667
    10. ' ==' → logprob: -10.8095121383667

Token 396: ' first' (ID: 1577)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0924057811498642
    2. 'm' → logprob: -3.5924057960510254
    3. 'all' → logprob: -3.8424057960510254
    4. 'raise' → logprob: -4.717405796051025
    5. ' values' → logprob: -4.842405796051025
    6. 'each' → logprob: -5.592405796051025
    7. 'content' → logprob: -5.967405796051025
    8. 'len' → logprob: -6.217405796051025
    9. 'range' → logprob: -6.342405796051025
    10. 'contents' → logprob: -6.342405796051025

Token 397: ' dice' (ID: 22078)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7064714431762695
    2. '_throw' → logprob: -1.8314714431762695
    3. '<|end|>' → logprob: -1.9564714431762695
    4. 'value' → logprob: -1.9564714431762695
    5. '<|end|>' → logprob: -4.0814714431762695
    6. '_' → logprob: -4.5814714431762695
    7. 'throw' → logprob: -5.2064714431762695
    8. 'element' → logprob: -5.7064714431762695
    9. ' ' → logprob: -5.7064714431762695
    10. ' element' → logprob: -5.8314714431762695

Token 398: ' throw' (ID: 4268)
  Prédit: '_throw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_throw' → logprob: -0.7321801781654358
    2. '_' → logprob: -1.232180118560791
    3. 'throw' → logprob: -2.357180118560791
    4. '       ' → logprob: -3.357180118560791
    5. 'value' → logprob: -3.607180118560791
    6. 'throws' → logprob: -4.107180118560791
    7. ' throw' → logprob: -4.357180118560791
    8. ' value' → logprob: -4.982180118560791
    9. ')' → logprob: -5.482180118560791
    10. ' if' → logprob: -5.482180118560791

Token 399: ' ==' (ID: 951)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15262959897518158
    2. 'if' → logprob: -2.4026296138763428
    3. ' if' → logprob: -3.1526296138763428
    4. ' and' → logprob: -6.402629375457764
    5. '==' → logprob: -6.652629375457764
    6. ',' → logprob: -7.277629375457764
    7. ' ==' → logprob: -7.402629375457764
    8. ':' → logprob: -7.527629375457764
    9. '           ' → logprob: -7.652629375457764
    10. '>=' → logprob: -7.777629375457764

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06198583543300629
    2. ' ' → logprob: -2.936985731124878
    3. 'dice' → logprob: -5.561985969543457
    4. 'm' → logprob: -6.061985969543457
    5. ' dice' → logprob: -7.686985969543457
    6. '0' → logprob: -9.061985969543457
    7. ' m' → logprob: -9.061985969543457
    8. 'cells' → logprob: -9.436985969543457
    9. '6' → logprob: -10.186985969543457
    10. ' cells' → logprob: -11.061985969543457

Token 401: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016099125146865845
    2. 'm' → logprob: -4.766098976135254
    3. '6' → logprob: -5.016098976135254
    4. '0' → logprob: -7.516098976135254
    5. '2' → logprob: -9.266098976135254
    6. ' ' → logprob: -9.391098976135254
    7. 's' → logprob: -10.766098976135254
    8. '3' → logprob: -10.766098976135254
    9. 'n' → logprob: -10.891098976135254
    10. '4' → logprob: -11.641098976135254

Token 402: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008120091515593231
    2. ' if' → logprob: -8.125811576843262
    3. ' and' → logprob: -8.500811576843262
    4. 'if' → logprob: -8.750811576843262
    5. ',' → logprob: -10.125811576843262
    6. ' or' → logprob: -10.250811576843262
    7. 'and' → logprob: -10.750811576843262
    8. '        
' → logprob: -11.250811576843262
    9. '
' → logprob: -11.500811576843262
    10. '<|end|>' → logprob: -11.750811576843262

Token 403: ' per' (ID: 777)
  Prédit: ' dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.8194751143455505
    2. ' not' → logprob: -1.4444751739501953
    3. ' cells' → logprob: -1.4444751739501953
    4. 'dice' → logprob: -2.8194751739501953
    5. 'not' → logprob: -4.194475173950195
    6. 'cells' → logprob: -4.569475173950195
    7. ' dices' → logprob: -7.319475173950195
    8. 'if' → logprob: -8.194475173950195
    9. ' ' → logprob: -8.819475173950195
    10. 'd' → logprob: -8.944475173950195

Token 404: ' input' (ID: 3422)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.1822247952222824
    2. 'problem' → logprob: -1.8072247505187988
    3. ' dice' → logprob: -7.432224750518799
    4. 'the' → logprob: -7.682224750518799
    5. 'dice' → logprob: -8.057225227355957
    6. ' the' → logprob: -8.432225227355957
    7. ' cells' → logprob: -8.432225227355957
    8. ' instructions' → logprob: -8.682225227355957
    9. 'm' → logprob: -9.182225227355957
    10. ' user' → logprob: -9.307225227355957

Token 405: ' format' (ID: 6011)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007247024914249778
    2. ' if' → logprob: -8.125724792480469
    3. 'if' → logprob: -8.750724792480469
    4. '
' → logprob: -9.125724792480469
    5. ' and' → logprob: -9.625724792480469
    6. '<|end|>' → logprob: -9.875724792480469
    7. 'and' → logprob: -11.125724792480469
    8. ',' → logprob: -11.625724792480469
    9. '           ' → logprob: -13.000724792480469
    10. '   ' → logprob: -13.000724792480469

Token 406: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023119196703191847
    2. '
' → logprob: -8.87523078918457
    3. '<|end|>' → logprob: -10.00023078918457
    4. 'if' → logprob: -11.00023078918457
    5. ' if' → logprob: -11.37523078918457
    6. '        
' → logprob: -11.87523078918457
    7. ',' → logprob: -12.25023078918457
    8. '   ' → logprob: -13.75023078918457
    9. '           ' → logprob: -14.12523078918457
    10. '      ' → logprob: -14.25023078918457

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.0629870858974755e-05
    2. 'if' → logprob: -10.25006103515625
    3. ' if' → logprob: -11.12506103515625
    4. '<|end|>' → logprob: -12.00006103515625
    5. '   ' → logprob: -13.12506103515625
    6. '
' → logprob: -14.37506103515625
    7. ',' → logprob: -15.00006103515625
    8. '        
' → logprob: -15.00006103515625
    9. '           ' → logprob: -15.37506103515625
    10. '```' → logprob: -15.75006103515625

Token 408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6941148638725281
    2. '       ' → logprob: -0.9441148638725281
    3. ' if' → logprob: -2.194114923477173
    4. '	if' → logprob: -13.569114685058594
    5. '   ' → logprob: -14.069114685058594
    6. 'assert' → logprob: -15.944114685058594
    7. '      ' → logprob: -16.069114685058594
    8. '           ' → logprob: -16.444114685058594
    9. '	' → logprob: -16.569114685058594
    10. ' ' → logprob: -17.569114685058594

Token 409: ' dice' (ID: 22078)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11629340052604675
    2. 'm' → logprob: -3.116293430328369
    3. 'not' → logprob: -3.241293430328369
    4. 'dice' → logprob: -3.991293430328369
    5. ' len' → logprob: -5.366293430328369
    6. ' not' → logprob: -6.241293430328369
    7. '(len' → logprob: -6.991293430328369
    8. '(m' → logprob: -9.116292953491211
    9. ' m' → logprob: -9.241292953491211
    10. ' dice' → logprob: -9.616292953491211

Token 410: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'throws' → logprob: -16.625
    3. '_throw' → logprob: -16.75
    4. '
' → logprob: -20.375
    5. ' throws' → logprob: -20.5
    6. '._' → logprob: -20.5
    7. '_returns' → logprob: -21.375
    8. ' _' → logprob: -21.5
    9. '_
' → logprob: -21.5
    10. '	throws' → logprob: -21.625

Token 411: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.750001907348633
    3. ' throws' → logprob: -14.250001907348633
    4. 'throw' → logprob: -17.000001907348633
    5. '_throw' → logprob: -18.625001907348633
    6. '	throws' → logprob: -18.750001907348633
    7. 'Throws' → logprob: -18.875001907348633
    8. 'puts' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.750001907348633
    10. 'returns' → logprob: -20.500001907348633

Token 412: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003154432924930006
    2. ' and' → logprob: -8.37531566619873
    3. '==' → logprob: -9.62531566619873
    4. 'and' → logprob: -11.12531566619873
    5. ' ==' → logprob: -12.87531566619873
    6. ' is' → logprob: -15.00031566619873
    7. ' [' → logprob: -15.12531566619873
    8. '0' → logprob: -15.25031566619873
    9. '   ' → logprob: -15.25031566619873
    10. '```' → logprob: -16.125314712524414

Token 413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.000018119812012
    3. '[' → logprob: -14.000018119812012
    4. '   ' → logprob: -14.500018119812012
    5. '
' → logprob: -17.437519073486328
    6. '1' → logprob: -17.750019073486328
    7. '  ' → logprob: -17.875019073486328
    8. '       ' → logprob: -17.937519073486328
    9. 'not' → logprob: -18.062519073486328
    10. '    ' → logprob: -18.125019073486328

Token 414: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.502260684967041
    2. ']' → logprob: -1.377260684967041
    3. '!=' → logprob: -2.252260684967041
    4. ']!=' → logprob: -3.377260684967041
    5. ' ]' → logprob: -6.252260684967041
    6. ')!=' → logprob: -7.127260684967041
    7. ')' → logprob: -7.877260684967041
    8. '()!=' → logprob: -9.877260208129883
    9. '[' → logprob: -10.502260208129883
    10. ' ' → logprob: -10.627260208129883

Token 415: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3868972957134247
    2. '!=' → logprob: -1.136897325515747
    3. ')!=' → logprob: -11.136897087097168
    4. '()!=' → logprob: -11.886897087097168
    5. ']!=' → logprob: -13.386897087097168
    6. '0' → logprob: -14.636897087097168
    7. '!="' → logprob: -14.761897087097168
    8. '==' → logprob: -14.761897087097168
    9. '!=-' → logprob: -14.886897087097168
    10. '!='' → logprob: -15.136897087097168

Token 416: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.000431060791016
    4. '1' → logprob: -18.125431060791016
    5. '=' → logprob: -19.375431060791016
    6. '  ' → logprob: -20.125431060791016
    7. ' ' → logprob: -20.562931060791016
    8. '۰' → logprob: -20.687931060791016
    9. '    ' → logprob: -20.875431060791016
    10. '	' → logprob: -20.937931060791016

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -17.875001907348633
    4. '=' → logprob: -18.375001907348633
    5. '1' → logprob: -18.562501907348633
    6. '<|end|>' → logprob: -18.562501907348633
    7. '০' → logprob: -19.250001907348633
    8. '-' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.687501907348633
    10. 's' → logprob: -19.812501907348633

Token 418: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6528602838516235
    2. ':' → logprob: -0.9028602838516235
    3. ' or' → logprob: -2.652860164642334
    4. ' and' → logprob: -6.152860164642334
    5. '       ' → logprob: -7.152860164642334
    6. '           ' → logprob: -8.527860641479492
    7. ':return' → logprob: -8.902860641479492
    8. 'and' → logprob: -9.527860641479492
    9. 'or' → logprob: -9.652860641479492
    10. '):
' → logprob: -9.777860641479492

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02124727889895439
    2. ':' → logprob: -4.396247386932373
    3. ':
' → logprob: -5.271247386932373
    4. '       ' → logprob: -6.146247386932373
    5. ' or' → logprob: -7.271247386932373
    6. ' and' → logprob: -8.021246910095215
    7. ' raise' → logprob: -9.271246910095215
    8. 'raise' → logprob: -9.521246910095215
    9. ',' → logprob: -9.646246910095215
    10. '          ' → logprob: -9.771246910095215

Token 420: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.08920478075742722
    2. 'raise' (adapté à ' raise') → logprob: -2.589204788208008
    3. '           ' → logprob: -4.589204788208008
    4. '               ' → logprob: -9.839204788208008
    5. '            ' → logprob: -10.589204788208008
    6. '	raise' → logprob: -11.714204788208008
    7. 'Raise' → logprob: -11.964204788208008
    8. ' return' → logprob: -13.339204788208008
    9. '       ' → logprob: -13.464204788208008
    10. '   ' → logprob: -13.589204788208008

Token 421: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.1080467781284824e-05
    2. ' Value' → logprob: -10.125041007995605
    3. 'Index' → logprob: -15.625041007995605
    4. 'Assertion' → logprob: -15.625041007995605
    5. '_value' → logprob: -16.500041961669922
    6. 'value' → logprob: -16.500041961669922
    7. 'Input' → logprob: -16.625041961669922
    8. ' ' → logprob: -16.750041961669922
    9. '	Value' → logprob: -17.000041961669922
    10. 'raise' → logprob: -17.250041961669922

Token 422: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.024368921294808388
    2. 'Value' → logprob: -3.77436900138855
    3. 'alue' → logprob: -7.274368762969971
    4. 'rror' → logprob: -7.774368762969971
    5. 'SError' → logprob: -12.649369239807129
    6. ' Value' → logprob: -13.899369239807129
    7. 'ALUE' → logprob: -14.274369239807129
    8. 'al' → logprob: -14.399369239807129
    9. 'Val' → logprob: -14.524369239807129
    10. 'LError' → logprob: -14.774369239807129

Token 423: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02983345277607441
    2. '(' → logprob: -3.5298335552215576
    3. '(
' → logprob: -9.404833793640137
    4. '"' → logprob: -15.279833793640137
    5. '('' → logprob: -16.02983283996582
    6. '(
' → logprob: -16.52983283996582
    7. '(

' → logprob: -17.40483283996582
    8. '           ' → logprob: -17.77983283996582
    9. '(",' → logprob: -17.90483283996582
    10. '("")' → logprob: -18.02983283996582

Token 424: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.043779946863651276
    2. '"' → logprob: -4.0437798500061035
    3. 'The' → logprob: -4.0437798500061035
    4. 'dice' → logprob: -5.9187798500061035
    5. 'Initial' → logprob: -6.0437798500061035
    6. 'Invalid' → logprob: -6.2937798500061035
    7. 'Dice' → logprob: -7.7937798500061035
    8. '"The' → logprob: -8.543780326843262
    9. '"d' → logprob: -9.293780326843262
    10. 'first' → logprob: -10.043780326843262

Token 425: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.029516490176320076
    2. 'dice' → logprob: -3.6545164585113525
    3. ' ' → logprob: -6.654516696929932
    4. ' throw' → logprob: -6.779516696929932
    5. '_d' → logprob: -7.904516696929932
    6. '_' → logprob: -8.529516220092773
    7. ' die' → logprob: -9.029516220092773
    8. ' ' → logprob: -11.029516220092773
    9. '_throw' → logprob: -11.154516220092773
    10. 'Dice' → logprob: -11.279516220092773

Token 426: ' throw' (ID: 4268)
  Prédit: ' throw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' throw' → logprob: -0.18099398910999298
    2. '_' → logprob: -2.0559940338134766
    3. '_throw' → logprob: -3.3059940338134766
    4. 'throw' → logprob: -7.430994033813477
    5. ' throws' → logprob: -8.180994033813477
    6. ' _' → logprob: -10.180994033813477
    7. ' ' → logprob: -11.930994033813477
    8. 'throws' → logprob: -12.180994033813477
    9. '	throw' → logprob: -12.680994033813477
    10. ' ' → logprob: -13.805994033813477

Token 427: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.00045557913836091757
    2. 'must' → logprob: -7.750455379486084
    3. ' should' → logprob: -10.625455856323242
    4. ' is' → logprob: -15.375455856323242
    5. ' cannot' → logprob: -16.000455856323242
    6. ' ' → logprob: -16.125455856323242
    7. ' value' → logprob: -16.750455856323242
    8. ' always' → logprob: -17.625455856323242
    9. 'should' → logprob: -17.750455856323242
    10. ')' → logprob: -17.875455856323242

Token 428: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.00046856500557623804
    2. ' ' → logprob: -7.875468730926514
    3. 'be' → logprob: -9.500468254089355
    4. '0' → logprob: -12.000468254089355
    5. ' equal' → logprob: -12.625468254089355
    6. ')' → logprob: -13.750468254089355
    7. ' have' → logprob: -14.000468254089355
    8. '<|end|>' → logprob: -14.125468254089355
    9. ' ==' → logprob: -14.250468254089355
    10. '==' → logprob: -15.500468254089355

Token 429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '=' → logprob: -18.626502990722656
    4. '   ' → logprob: -18.751502990722656
    5. ')' → logprob: -19.501502990722656
    6. '```' → logprob: -19.501502990722656
    7. '1' → logprob: -19.626502990722656
    8. '
' → logprob: -19.689002990722656
    9. '<|end|>' → logprob: -19.876502990722656
    10. 's' → logprob: -20.189002990722656

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -17.500003814697266
    4. '۰' → logprob: -17.625003814697266
    5. '=' → logprob: -17.750003814697266
    6. ')' → logprob: -18.000003814697266
    7. '０' → logprob: -19.062503814697266
    8. '০' → logprob: -19.062503814697266
    9. '[' → logprob: -19.125003814697266
    10. 's' → logprob: -19.125003814697266

Token 431: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3733188807964325
    2. '       ' → logprob: -1.7483189105987549
    3. ')' → logprob: -1.9983189105987549
    4. '")
' → logprob: -6.623318672180176
    5. '<|end|>' → logprob: -7.998318672180176
    6. ')
' → logprob: -8.873318672180176
    7. ' ")' → logprob: -10.248318672180176
    8. '   ' → logprob: -11.123318672180176
    9. ' )' → logprob: -11.123318672180176
    10. '')' → logprob: -11.498318672180176

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027079248800873756
    2. '<|end|>' → logprob: -3.7770793437957764
    3. '        
' → logprob: -6.027079105377197
    4. '
' → logprob: -7.402079105377197
    5. '```' → logprob: -8.152079582214355
    6. '<|end|>' → logprob: -8.902079582214355
    7. '    
' → logprob: -9.902079582214355
    8. '   ' → logprob: -9.902079582214355
    9. ',' → logprob: -10.027079582214355
    10. '\
' → logprob: -10.027079582214355

Token 433: ' board' (ID: 6796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21044552326202393
    2. 'if' → logprob: -1.710445523262024
    3. ' if' → logprob: -5.460445404052734
    4. 'return' → logprob: -5.710445404052734
    5. '
' → logprob: -7.085445404052734
    6. '#' → logprob: -8.210445404052734
    7. '   ' → logprob: -9.085445404052734
    8. 'for' → logprob: -9.210445404052734
    9. ' return' → logprob: -10.835445404052734
    10. 'cells' → logprob: -10.960445404052734

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. '   ' → logprob: -16.575939178466797
    4. '=
' → logprob: -18.325939178466797
    5. '=S' → logprob: -18.575939178466797
    6. '＝' → logprob: -18.700939178466797
    7. ',' → logprob: -18.700939178466797
    8. ')' → logprob: -18.950939178466797
    9. '=

' → logprob: -18.950939178466797
    10. '=}' → logprob: -19.075939178466797

Token 435: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.038043100386857986
    2. ' Sug' → logprob: -3.2880430221557617
    3. 'Sugar' → logprob: -13.663043022155762
    4. 'S' → logprob: -14.663043022155762
    5. ' Sugar' → logprob: -18.413043975830078
    6. 'Sud' → logprob: -18.913043975830078
    7. '	S' → logprob: -18.913043975830078
    8. 'Suc' → logprob: -19.038043975830078
    9. 'Su' → logprob: -19.163043975830078
    10. '   ' → logprob: -19.913043975830078

Token 436: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.292907877039397e-06
    2. 'oru' → logprob: -12.87500286102295
    3. ' or' → logprob: -14.75000286102295
    4. 'oro' → logprob: -17.000003814697266
    5. 'orol' → logprob: -17.125003814697266
    6. 'ор' → logprob: -17.625003814697266
    7. '```' → logprob: -17.750003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '
' → logprob: -18.375003814697266
    10. 'ar' → logprob: -18.875003814697266

Token 437: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -7.896309739408025e-07
    2. 'roku' → logprob: -15.250000953674316
    3. 'ok' → logprob: -15.500000953674316
    4. 'оку' → logprob: -16.375
    5. 'oki' → logprob: -16.375
    6. 'Oku' → logprob: -16.75
    7. 'o' → logprob: -17.625
    8. '
' → logprob: -18.375
    9. '

' → logprob: -18.5
    10. 'oru' → logprob: -18.75

Token 438: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: 0.0
    2. 'board' → logprob: -17.875
    3. 'Boa' → logprob: -19.125
    4. ' Board' → logprob: -19.875
    5. 'Boards' → logprob: -20.625
    6. '_board' → logprob: -20.75
    7. 'B' → logprob: -21.75
    8. 'BOARD' → logprob: -21.875
    9. 'Boat' → logprob: -22.25
    10. '.Board' → logprob: -22.25

Token 439: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.25000286102295
    3. 'cells' → logprob: -13.62500286102295
    4. '(n' → logprob: -15.62500286102295
    5. '(cell' → logprob: -18.125003814697266
    6. ' cells' → logprob: -18.375003814697266
    7. '(
' → logprob: -19.375003814697266
    8. '(list' → logprob: -19.625003814697266
    9. '(m' → logprob: -19.750003814697266
    10. '((' → logprob: -20.250003814697266

Token 440: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.012139685451984406
    2. 'cells' → logprob: -4.512139797210693
    3. '(c' → logprob: -7.637139797210693
    4. '   ' → logprob: -8.012139320373535
    5. ' ' → logprob: -10.012139320373535
    6. 'ell' → logprob: -10.012139320373535
    7. '[' → logprob: -10.137139320373535
    8. '(' → logprob: -10.387139320373535
    9. '[c' → logprob: -10.387139320373535
    10. 'els' → logprob: -10.762139320373535

Token 441: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028570592403411865
    2. ')
' → logprob: -5.877857208251953
    3. ',' → logprob: -10.127857208251953
    4. '       ' → logprob: -12.002857208251953
    5. '   ' → logprob: -12.627857208251953
    6. ')
' → logprob: -13.377857208251953
    7. ')

' → logprob: -14.752857208251953
    8. ' )' → logprob: -15.127857208251953
    9. '),' → logprob: -15.252857208251953
    10. ',)' → logprob: -15.502857208251953

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01816597953438759
    2. '
' → logprob: -4.3931660652160645
    3. '        
' → logprob: -6.1431660652160645
    4. 'dice' → logprob: -6.5181660652160645
    5. ' dice' → logprob: -7.5181660652160645
    6. '   ' → logprob: -8.143165588378906
    7. '    
' → logprob: -8.393165588378906
    8. ' 
' → logprob: -8.893165588378906
    9. '' → logprob: -9.518165588378906
    10. '<|end|>' → logprob: -9.643165588378906

Token 443: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' (adapté à ' dice') → logprob: -0.019463596865534782
    2. ' dice' → logprob: -4.019463539123535
    3. '       ' → logprob: -6.644463539123535
    4. 'Dice' → logprob: -12.144463539123535
    5. '   ' → logprob: -13.144463539123535
    6. 'd' → logprob: -14.144463539123535
    7. ' Dice' → logprob: -14.144463539123535
    8. '```' → logprob: -14.769463539123535
    9. '
' → logprob: -15.144463539123535
    10. '骰' → logprob: -15.144463539123535

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. '=D' → logprob: -17.386871337890625
    4. ')' → logprob: -17.636871337890625
    5. ' =
' → logprob: -17.761871337890625
    6. '=
' → logprob: -17.761871337890625
    7. ',' → logprob: -18.136871337890625
    8. 's' → logprob: -18.386871337890625
    9. ' ' → logprob: -18.636871337890625
    10. '   ' → logprob: -19.136871337890625

Token 445: ' Dice' (ID: 100924)
  Prédit: 'Dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dice' → logprob: -0.01814994215965271
    2. ' Dice' → logprob: -4.0181498527526855
    3. ' ' → logprob: -19.018150329589844
    4. 'D' → logprob: -20.768150329589844
    5. 'Dic' → logprob: -20.768150329589844
    6. '	D' → logprob: -21.018150329589844
    7. '  ' → logprob: -21.893150329589844
    8. 'dice' → logprob: -21.893150329589844
    9. '   ' → logprob: -22.268150329589844
    10. ' ' → logprob: -22.768150329589844

Token 446: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -10.62502670288086
    3. 'dice' → logprob: -13.12502670288086
    4. ' (' → logprob: -14.62502670288086
    5. 'd' → logprob: -16.50002670288086
    6. 'Dice' → logprob: -16.62502670288086
    7. '(
' → logprob: -17.25002670288086
    8. '((' → logprob: -17.62502670288086
    9. '(dic' → logprob: -18.00002670288086
    10. '[d' → logprob: -18.62502670288086

Token 447: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -3.292907877039397e-06
    2. 'ce' → logprob: -13.50000286102295
    3. 'dice' → logprob: -14.12500286102295
    4. '_' → logprob: -15.37500286102295
    5. 'ece' → logprob: -15.37500286102295
    6. 'ie' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.125003814697266
    8. 'e' → logprob: -16.625003814697266
    9. ' ice' → logprob: -16.625003814697266
    10. 'Ice' → logprob: -16.625003814697266

Token 448: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'throws' → logprob: -17.25
    3. '_throw' → logprob: -19.75
    4. ')' → logprob: -20.625
    5. 'Throws' → logprob: -21.625
    6. '_
' → logprob: -21.75
    7. ')_' → logprob: -22.125
    8. '[' → logprob: -22.75
    9. 's' → logprob: -22.75
    10. ' _' → logprob: -22.75

Token 449: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.003620147006586194
    2. '_' → logprob: -5.628620147705078
    3. 'Throws' → logprob: -11.378620147705078
    4. ' throws' → logprob: -12.753620147705078
    5. 'th' → logprob: -13.628620147705078
    6. 'throw' → logprob: -13.753620147705078
    7. '_th' → logprob: -14.003620147705078
    8. 'h' → logprob: -14.253620147705078
    9. '_throw' → logprob: -14.503620147705078
    10. ' Throws' → logprob: -15.628620147705078

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38687971234321594
    2. ')
' → logprob: -1.1368796825408936
    3. ')
' → logprob: -11.886879920959473
    4. '       ' → logprob: -14.011879920959473
    5. ')

' → logprob: -15.011879920959473
    6. '   ' → logprob: -15.136879920959473
    7. ' )
' → logprob: -15.636879920959473
    8. ' )' → logprob: -16.011878967285156
    9. ')return' → logprob: -17.511878967285156
    10. ')`
' → logprob: -17.636878967285156

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002047720830887556
    2. '
' → logprob: -6.877047538757324
    3. 'return' → logprob: -7.252047538757324
    4. '	' → logprob: -8.502047538757324
    5. ' return' → logprob: -9.627047538757324
    6. '	return' → logprob: -11.502047538757324
    7. '        
' → logprob: -11.752047538757324
    8. '   ' → logprob: -11.877047538757324
    9. '<|end|>' → logprob: -12.127047538757324
    10. '
' → logprob: -13.252047538757324

Token 452: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7445260286331177
    2. 'return' (adapté à ' return') → logprob: -0.7445260286331177
    3. ' return' → logprob: -2.994525909423828
    4. '
' → logprob: -11.369525909423828
    5. '   ' → logprob: -12.869525909423828
    6. 'game' → logprob: -12.869525909423828
    7. '	return' → logprob: -13.244525909423828
    8. '	' → logprob: -13.994525909423828
    9. '        
' → logprob: -15.244525909423828
    10. '      ' → logprob: -15.369525909423828

Token 453: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.0011705794604495168
    2. ' Sug' → logprob: -6.751170635223389
    3. 'Sugar' → logprob: -15.37617015838623
    4. 'S' → logprob: -15.75117015838623
    5. '	S' → logprob: -20.126171112060547
    6. 'Suc' → logprob: -20.251171112060547
    7. '   ' → logprob: -20.876171112060547
    8. 'Sag' → logprob: -21.501171112060547
    9. 'Sud' → logprob: -21.626171112060547
    10. 'Su' → logprob: -22.126171112060547

Token 454: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.368984107510187e-05
    2. 'oru' → logprob: -10.375033378601074
    3. ' or' → logprob: -13.750033378601074
    4. 'oro' → logprob: -14.625033378601074
    5. 'ar' → logprob: -15.125033378601074
    6. '[' → logprob: -16.00003433227539
    7. 'ор' → logprob: -16.12503433227539
    8. 'o' → logprob: -16.50003433227539
    9. '```' → logprob: -16.50003433227539
    10. 'orol' → logprob: -16.87503433227539

Token 455: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -5.676981345459353e-06
    2. 'oki' → logprob: -13.125005722045898
    3. 'Oku' → logprob: -13.125005722045898
    4. 'оку' → logprob: -14.250005722045898
    5. 'o' → logprob: -14.750005722045898
    6. 'ok' → logprob: -15.125005722045898
    7. ' oku' → logprob: -16.6250057220459
    8. 'roku' → logprob: -16.7500057220459
    9. '
' → logprob: -17.1250057220459
    10. '

' → logprob: -17.2500057220459

Token 456: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.9361264946837764e-07
    2. 'game' → logprob: -16.625
    3. '_game' → logprob: -19.5
    4. 'Board' → logprob: -19.75
    5. 'Games' → logprob: -20.125
    6. 'Gameplay' → logprob: -20.25
    7. ' game' → logprob: -20.875
    8. '<Game' → logprob: -21.125
    9. '_Game' → logprob: -21.75
    10. ' Game' → logprob: -22.25

Token 457: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. '(
' → logprob: -13.25001049041748
    4. '(Board' → logprob: -14.75001049041748
    5. ' (' → logprob: -16.125009536743164
    6. '   ' → logprob: -17.000009536743164
    7. 'board' → logprob: -17.375009536743164
    8. '(ball' → logprob: -18.625009536743164
    9. '       ' → logprob: -18.750009536743164
    10. '	board' → logprob: -19.125009536743164

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011200665176147595
    2. ',d' → logprob: -9.12511157989502
    3. ' ,' → logprob: -12.75011157989502
    4. ',
' → logprob: -16.000112533569336
    5. '   ' → logprob: -19.125112533569336
    6. 'dice' → logprob: -19.625112533569336
    7. 'd' → logprob: -19.750112533569336
    8. ',

' → logprob: -21.375112533569336
    9. ',
' → logprob: -21.625112533569336
    10. '       ' → logprob: -21.625112533569336

Token 459: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.011048289015889168
    2. ' dice' → logprob: -4.511048316955566
    3. 'd' → logprob: -15.261048316955566
    4. 'Dice' → logprob: -16.38604736328125
    5. 'dic' → logprob: -16.76104736328125
    6. '   ' → logprob: -16.76104736328125
    7. ' ' → logprob: -17.63604736328125
    8. '	d' → logprob: -18.51104736328125
    9. '    ' → logprob: -18.76104736328125
    10. '     ' → logprob: -18.88604736328125

Token 460: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ')

' → logprob: -18.625001907348633
    6. '())' → logprob: -19.250001907348633
    7. '<|end|>' → logprob: -19.250001907348633
    8. '       ' → logprob: -20.250001907348633
    9. ')return' → logprob: -20.250001907348633
    10. ')}' → logprob: -20.500001907348633

Token 461: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.278562068939209
    2. 'Main' → logprob: -2.153562068939209
    3. ' Sug' → logprob: -3.278562068939209
    4. 'Solution' → logprob: -3.528562068939209
    5. 'Test' → logprob: -4.028562068939209
    6. 'Player' → logprob: -4.028562068939209
    7. 'Input' → logprob: -4.403562068939209
    8. 'Solver' → logprob: -5.653562068939209
    9. 'Runner' → logprob: -6.278562068939209
    10. 'Game' → logprob: -6.778562068939209

Token 463: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -4.8590300139039755e-05
    2. 'ar' → logprob: -10.625048637390137
    3. 'oru' → logprob: -11.000048637390137
    4. ' or' → logprob: -13.125048637390137
    5. '```' → logprob: -13.750048637390137
    6. 'o' → logprob: -14.125048637390137
    7. '``' → logprob: -14.875048637390137
    8. '**' → logprob: -15.125048637390137
    9. '
' → logprob: -15.375048637390137
    10. '>' → logprob: -15.375048637390137

Token 464: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -1.0683535037969705e-05
    2. 'ok' → logprob: -12.62501049041748
    3. 'Oku' → logprob: -13.12501049041748
    4. 'o' → logprob: -13.50001049041748
    5. 'оку' → logprob: -13.87501049041748
    6. 'roku' → logprob: -14.50001049041748
    7. 'okuv' → logprob: -15.12501049041748
    8. '```' → logprob: -15.37501049041748
    9. ' oku' → logprob: -15.62501049041748
    10. '"' → logprob: -15.62501049041748

Token 465: 'Input' (ID: 3275)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.0385160446166992
    2. 'Player' → logprob: -2.163516044616699
    3. 'CLI' → logprob: -2.538516044616699
    4. 'Simulator' → logprob: -2.663516044616699
    5. 'Game' → logprob: -2.913516044616699
    6. 'Result' → logprob: -3.038516044616699
    7. 'Visualizer' → logprob: -3.538516044616699
    8. 'Input' → logprob: -3.663516044616699
    9. 'Test' → logprob: -3.788516044616699
    10. 'Printer' → logprob: -3.913516044616699

Token 466: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17282569408416748
    2. ':
' → logprob: -2.172825813293457
    3. 'Reader' → logprob: -3.797825813293457
    4. 'Parser' → logprob: -4.047825813293457
    5. 'Handler' → logprob: -5.547825813293457
    6. '():' → logprob: -8.172825813293457
    7. '(' → logprob: -8.297825813293457
    8. 'Processor' → logprob: -8.422825813293457
    9. 'Helper' → logprob: -9.672825813293457
    10. '_reader' → logprob: -9.672825813293457

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04860541597008705
    2. ':
' → logprob: -3.048605442047119
    3. ':

' → logprob: -11.923604965209961
    4. ':def' → logprob: -12.298604965209961
    5. '<|end|>' → logprob: -13.173604965209961
    6. '(object' → logprob: -13.423604965209961
    7. ':
' → logprob: -14.173604965209961
    8. '():
' → logprob: -14.423604965209961
    9. '(S' → logprob: -14.798604965209961
    10. '):
' → logprob: -14.923604965209961

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03880033642053604
    2. ' def' → logprob: -3.4138002395629883
    3. 'def' → logprob: -5.413800239562988
    4. 'class' → logprob: -7.663800239562988
    5. '```' → logprob: -9.163800239562988
    6. ' class' → logprob: -9.413800239562988
    7. 'import' → logprob: -11.538800239562988
    8. 'staticmethod' → logprob: -12.413800239562988
    9. '@' → logprob: -12.663800239562988
    10. '	def' → logprob: -12.913800239562988

Token 469: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1852680891752243
    2. 'def' (adapté à ' def') → logprob: -2.1852681636810303
    3. '@' → logprob: -3.4352681636810303
    4. ' @' → logprob: -4.185267925262451
    5. '   ' → logprob: -4.685267925262451
    6. '	def' → logprob: -12.93526840209961
    7. 'staticmethod' → logprob: -13.68526840209961
    8. 'import' → logprob: -13.93526840209961
    9. ' ' → logprob: -14.81026840209961
    10. 'class' → logprob: -14.81026840209961

Token 470: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.013004804961383343
    2. 'static' → logprob: -4.888004779815674
    3. '__' → logprob: -5.888004779815674
    4. ' static' → logprob: -6.513004779815674
    5. 'parse' → logprob: -7.888004779815674
    6. 'init' → logprob: -8.138005256652832
    7. ' __' → logprob: -8.263005256652832
    8. 'def' → logprob: -8.888005256652832
    9. 'classmethod' → logprob: -10.638005256652832
    10. ' def' → logprob: -11.388005256652832

Token 471: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'call' → logprob: -16.75
    3. 'int' → logprob: -17.125
    4. ' init' → logprob: -17.125
    5. 'ini' → logprob: -18.5
    6. '__' → logprob: -18.75
    7. '_init' → logprob: -18.875
    8. 'staticmethod' → logprob: -19.5
    9. 'def' → logprob: -19.625
    10. 'inite' → logprob: -19.75

Token 472: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033749574795365334
    2. '(' → logprob: -6.128375053405762
    3. 'self' → logprob: -7.503375053405762
    4. ' (' → logprob: -8.128375053405762
    5. '   ' → logprob: -8.628375053405762
    6. '__(' → logprob: -9.253375053405762
    7. '<|end|>' → logprob: -11.128375053405762
    8. ',' → logprob: -11.378375053405762
    9. '	self' → logprob: -11.878375053405762
    10. ' self' → logprob: -11.878375053405762

Token 473: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018732868193183094
    2. ')' → logprob: -9.625186920166016
    3. ' self' → logprob: -10.125186920166016
    4. '):
' → logprob: -10.250186920166016
    5. '
' → logprob: -10.500186920166016
    6. '   ' → logprob: -11.375186920166016
    7. '	self' → logprob: -12.750186920166016
    8. '       ' → logprob: -13.750186920166016
    9. ')
' → logprob: -13.875186920166016
    10. '(self' → logprob: -13.875186920166016

Token 474: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008520959876477718
    2. 'self' → logprob: -5.38352108001709
    3. '):
' → logprob: -5.88352108001709
    4. '):' → logprob: -7.13352108001709
    5. '   ' → logprob: -8.88352108001709
    6. ',self' → logprob: -9.38352108001709
    7. '(self' → logprob: -10.63352108001709
    8. ')' → logprob: -11.25852108001709
    9. '       ' → logprob: -11.25852108001709
    10. ',
' → logprob: -11.50852108001709

Token 475: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03293114900588989
    2. '       ' → logprob: -4.032931327819824
    3. '   ' → logprob: -4.407931327819824
    4. ' self' → logprob: -6.157931327819824
    5. '
' → logprob: -8.282931327819824
    6. '	self' → logprob: -9.282931327819824
    7. '(self' → logprob: -11.407931327819824
    8. 'def' → logprob: -11.907931327819824
    9. '```' → logprob: -12.532931327819824
    10. '    ' → logprob: -13.282931327819824

Token 476: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5500355362892151
    2. 'self' (adapté à ' self') → logprob: -0.9250355362892151
    3. '   ' → logprob: -4.55003547668457
    4. '       ' → logprob: -4.80003547668457
    5. 'def' → logprob: -5.55003547668457
    6. ' pass' → logprob: -5.80003547668457
    7. ' self' → logprob: -7.30003547668457
    8. '
' → logprob: -9.55003547668457
    9. 'import' → logprob: -9.80003547668457
    10. '	pass' → logprob: -10.55003547668457

Token 477: '.datasets' (ID: 136555)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.4944778084754944
    2. '.buffer' → logprob: -1.2444777488708496
    3. '.data' → logprob: -2.7444777488708496
    4. '.n' → logprob: -4.24447774887085
    5. '.input' → logprob: -5.11947774887085
    6. '.' → logprob: -5.36947774887085
    7. '.cells' → logprob: -5.61947774887085
    8. '.inputs' → logprob: -6.11947774887085
    9. '._' → logprob: -6.11947774887085
    10. 'buffer' → logprob: -6.74447774887085

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06206672638654709
    2. ' =' → logprob: -2.8120667934417725
    3. '=[]' → logprob: -9.312067031860352
    4. '   ' → logprob: -12.062067031860352
    5. ':' → logprob: -14.312067031860352
    6. '=[]
' → logprob: -14.312067031860352
    7. '<|end|>' → logprob: -14.437067031860352
    8. ' ' → logprob: -15.437067031860352
    9. '=None' → logprob: -15.687067031860352
    10. '={}' → logprob: -15.937067031860352

Token 479: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.4894986785948277e-05
    2. '[]
' → logprob: -10.250044822692871
    3. '[]

' → logprob: -11.750044822692871
    4. ' []' → logprob: -13.750044822692871
    5. '[' → logprob: -15.000044822692871
    6. 'list' → logprob: -16.250045776367188
    7. '[]}' → logprob: -17.125045776367188
    8. '{}' → logprob: -17.500045776367188
    9. '[],' → logprob: -18.250045776367188
    10. '[]"' → logprob: -18.250045776367188

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011415483430027962
    2. '
' → logprob: -4.511415481567383
    3. '    
' → logprob: -8.636415481567383
    4. 'def' → logprob: -9.011415481567383
    5. ' def' → logprob: -10.386415481567383
    6. '<|end|>' → logprob: -10.511415481567383
    7. '        
' → logprob: -12.511415481567383
    8. ' 
' → logprob: -13.011415481567383
    9. '<|end|>' → logprob: -13.261415481567383
    10. '

' → logprob: -14.386415481567383

Token 481: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009775093756616116
    2. ' def' → logprob: -4.759775161743164
    3. '   ' → logprob: -6.759775161743164
    4. '	def' → logprob: -15.634775161743164
    5. '
' → logprob: -16.009775161743164
    6. ' ' → logprob: -16.509775161743164
    7. 'import' → logprob: -17.634775161743164
    8. '  ' → logprob: -19.259775161743164
    9. '    
' → logprob: -20.759775161743164
    10. '    ' → logprob: -20.759775161743164

Token 482: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.008531357161700726
    2. 'read' → logprob: -5.00853157043457
    3. 'add' → logprob: -6.63353157043457
    4. 'load' → logprob: -8.25853157043457
    5. ' parse' → logprob: -8.38353157043457
    6. 'append' → logprob: -12.00853157043457
    7. 'process' → logprob: -13.38353157043457
    8. ' read' → logprob: -13.88353157043457
    9. 'feed' → logprob: -14.75853157043457
    10. ' add' → logprob: -14.88353157043457

Token 483: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024291672743856907
    2. '(' → logprob: -6.377429008483887
    3. '_line' → logprob: -7.377429008483887
    4. 'self' → logprob: -9.502429008483887
    5. '_input' → logprob: -11.377429008483887
    6. 'line' → logprob: -12.627429008483887
    7. ' (' → logprob: -12.752429008483887
    8. '(
' → logprob: -13.252429008483887
    9. '(line' → logprob: -13.502429008483887
    10. ' self' → logprob: -13.627429008483887

Token 484: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.780830830801278e-05
    2. '(' → logprob: -9.37508773803711
    3. 'self' → logprob: -13.62508773803711
    4. '(
' → logprob: -14.37508773803711
    5. ' (' → logprob: -15.12508773803711
    6. '(line' → logprob: -15.62508773803711
    7. '()' → logprob: -15.75008773803711
    8. '(input' → logprob: -15.75008773803711
    9. '_line' → logprob: -16.12508773803711
    10. '(s' → logprob: -16.25008773803711

Token 485: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007901760749518871
    2. 'self' → logprob: -5.632901668548584
    3. '):' → logprob: -5.882901668548584
    4. '):
' → logprob: -6.757901668548584
    5. ',self' → logprob: -8.882902145385742
    6. ',input' → logprob: -9.132902145385742
    7. '(self' → logprob: -10.132902145385742
    8. ',s' → logprob: -10.382902145385742
    9. ',line' → logprob: -12.257902145385742
    10. ' ,' → logprob: -12.507902145385742

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018208740220870823
    2. 'import' → logprob: -10.125182151794434
    3. ' self' → logprob: -10.625182151794434
    4. ' lines' → logprob: -10.875182151794434
    5. '   ' → logprob: -11.000182151794434
    6. 'self' → logprob: -11.125182151794434
    7. ' line' → logprob: -11.375182151794434
    8. ' for' → logprob: -11.500182151794434
    9. '```' → logprob: -11.500182151794434
    10. '
' → logprob: -11.500182151794434

Token 487: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.997941792011261
    2. 'import' (adapté à ' import') → logprob: -1.4979417324066162
    3. ' try' → logprob: -2.122941732406616
    4. ' while' → logprob: -2.122941732406616
    5. 'try' → logprob: -2.872941732406616
    6. ' n' → logprob: -2.872941732406616
    7. ' lines' → logprob: -3.747941732406616
    8. 'while' → logprob: -4.122941970825195
    9. 'n' → logprob: -5.122941970825195
    10. ' line' → logprob: -5.122941970825195

Token 488: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020354038861114532
    2. ' sys' → logprob: -8.500203132629395
    3. '=sys' → logprob: -17.87520408630371
    4. '	sys' → logprob: -18.87520408630371
    5. 'io' → logprob: -19.25020408630371
    6. '_sys' → logprob: -19.87520408630371
    7. '.sys' → logprob: -20.25020408630371
    8. '(sys' → logprob: -20.62520408630371
    9. 'stdin' → logprob: -21.00020408630371
    10. '
' → logprob: -22.25020408630371

Token 489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056337895803153515
    2. ' lines' → logprob: -5.63063383102417
    3. ' line' → logprob: -7.50563383102417
    4. 'for' → logprob: -8.255633354187012
    5. 'input' → logprob: -8.380633354187012
    6. ' for' → logprob: -8.630633354187012
    7. 'lines' → logprob: -8.755633354187012
    8. 'data' → logprob: -8.880633354187012
    9. 'line' → logprob: -9.005633354187012
    10. '        
' → logprob: -9.380633354187012

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02463763765990734
    2. '
' → logprob: -3.7746376991271973
    3. '        
' → logprob: -7.649637699127197
    4. ' lines' → logprob: -7.649637699127197
    5. 'input' → logprob: -8.899637222290039
    6. ' line' → logprob: -9.524637222290039
    7. 'line' → logprob: -9.774637222290039
    8. 'data' → logprob: -10.399637222290039
    9. 'n' → logprob: -10.649637222290039
    10. 'for' → logprob: -10.774637222290039

Token 491: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03940562903881073
    2. ' lines' → logprob: -3.789405584335327
    3. 'lines' (adapté à ' lines') → logprob: -5.414405822753906
    4. 'for' → logprob: -5.664405822753906
    5. 'data' → logprob: -6.289405822753906
    6. 'line' → logprob: -6.289405822753906
    7. ' for' → logprob: -6.414405822753906
    8. 'input' → logprob: -6.664405822753906
    9. ' line' → logprob: -7.164405822753906
    10. ' input' → logprob: -8.164405822753906

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869819641113281
    2. ' =' → logprob: -1.1369819641113281
    3. '()' → logprob: -9.511981964111328
    4. '=line' → logprob: -10.886981964111328
    5. '   ' → logprob: -12.636981964111328
    6. '       ' → logprob: -13.136981964111328
    7. '＝' → logprob: -13.511981964111328
    8. '	' → logprob: -13.511981964111328
    9. '=
' → logprob: -13.636981964111328
    10. '=[]' → logprob: -13.761981964111328

Token 493: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2519338130950928
    2. ' sys' → logprob: -1.5019338130950928
    3. '[' → logprob: -12.751934051513672
    4. ' [' → logprob: -14.251934051513672
    5. '[]' → logprob: -15.001934051513672
    6. '[]
' → logprob: -15.001934051513672
    7. 'list' → logprob: -15.251934051513672
    8. '(sys' → logprob: -15.501934051513672
    9. '	sys' → logprob: -16.251934051513672
    10. '=sys' → logprob: -16.876934051513672

Token 494: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001266613689949736
    2. '.' → logprob: -9.125126838684082
    3. '.stdout' → logprob: -11.250126838684082
    4. '.argv' → logprob: -13.000126838684082
    5. 'stdin' → logprob: -13.375126838684082
    6. '.std' → logprob: -14.375126838684082
    7. ' stdin' → logprob: -16.375125885009766
    8. '.readline' → logprob: -16.375125885009766
    9. '.stderr' → logprob: -16.750125885009766
    10. '._' → logprob: -17.000125885009766

Token 495: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.47515591979026794
    2. '.readline' → logprob: -0.9751559495925903
    3. 'read' → logprob: -7.600155830383301
    4. '.read' → logprob: -7.975155830383301
    5. '.' → logprob: -8.8501558303833
    6. 'lines' → logprob: -10.4751558303833
    7. '_lines' → logprob: -10.6001558303833
    8. '_read' → logprob: -11.3501558303833
    9. '=' → logprob: -12.1001558303833
    10. ' =' → logprob: -12.3501558303833

Token 496: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12693557143211365
    2. '()' → logprob: -2.1269354820251465
    3. '()
' → logprob: -12.876935958862305
    4. '(' → logprob: -13.251935958862305
    5. 'lines' → logprob: -13.501935958862305
    6. '()

' → logprob: -14.126935958862305
    7. '_lines' → logprob: -15.001935958862305
    8. '()`' → logprob: -15.376935958862305
    9. '()\' → logprob: -15.876935958862305
    10. ' ()' → logprob: -16.126935958862305

Token 497: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4471835792064667
    2. 'strip' → logprob: -1.447183609008789
    3. 'read' → logprob: -2.197183609008789
    4. 'decode' → logprob: -4.697183609008789
    5. 'lines' → logprob: -5.447183609008789
    6. 'rstrip' → logprob: -7.197183609008789
    7. '(split' → logprob: -11.197183609008789
    8. 'replace' → logprob: -11.822183609008789
    9. '_lines' → logprob: -12.322183609008789
    10. ' split' → logprob: -12.572183609008789

Token 498: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002479581395164132
    2. '()' → logprob: -6.002479553222656
    3. '()
' → logprob: -13.127479553222656
    4. '('\' → logprob: -14.127479553222656
    5. '()\' → logprob: -14.752479553222656
    6. 'split' → logprob: -15.002479553222656
    7. '(' → logprob: -15.002479553222656
    8. ' ().' → logprob: -16.377479553222656
    9. '()

' → logprob: -17.002479553222656
    10. '.split' → logprob: -17.627479553222656

Token 499: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '(split' → logprob: -18.25
    4. 'decode' → logprob: -19.625
    5. 'strip' → logprob: -20.25
    6. 'spl' → logprob: -20.625
    7. 'lines' → logprob: -20.875
    8. 'read' → logprob: -20.875
    9. 'rstrip' → logprob: -21.75
    10. 'replace' → logprob: -22.0

Token 500: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.2570437788963318
    2. 'lines' → logprob: -1.5070438385009766
    3. '()' → logprob: -5.757043838500977
    4. '("\' → logprob: -6.257043838500977
    5. '()
' → logprob: -11.632043838500977
    6. ''\' → logprob: -11.757043838500977
    7. '()\' → logprob: -11.882043838500977
    8. '"\' → logprob: -14.882043838500977
    9. '(' → logprob: -16.382043838500977
    10. 'line' → logprob: -16.632043838500977

Token 501: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. '\n' → logprob: -14.250000953674316
    3. '
' → logprob: -17.375
    4. 'newline' → logprob: -19.75
    5. 'ndef' → logprob: -21.75
    6. '\' → logprob: -21.75
    7. ' n' → logprob: -21.875
    8. '	n' → logprob: -22.375
    9. 'r' → logprob: -22.625
    10. '

' → logprob: -22.875

Token 502: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03951277956366539
    2. '')
' → logprob: -3.539512872695923
    3. ')' → logprob: -4.664512634277344
    4. ')
' → logprob: -8.664512634277344
    5. '       ' → logprob: -9.289512634277344
    6. '')
' → logprob: -10.914512634277344
    7. '")' → logprob: -12.664512634277344
    8. '\n' → logprob: -14.164512634277344
    9. ')')
' → logprob: -14.414512634277344
    10. '')

' → logprob: -14.539512634277344

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16165609657764435
    2. 'i' → logprob: -2.661656141281128
    3. ' i' → logprob: -3.286656141281128
    4. 'index' → logprob: -4.411655902862549
    5. 'idx' → logprob: -4.411655902862549
    6. ' idx' → logprob: -5.161655902862549
    7. ' for' → logprob: -5.286655902862549
    8. ' index' → logprob: -5.786655902862549
    9. '```' → logprob: -6.411655902862549
    10. 'for' → logprob: -6.911655902862549

Token 504: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21113841235637665
    2. 'idx' (adapté à ' idx') → logprob: -1.711138367652893
    3. 'index' → logprob: -4.7111382484436035
    4. 'pos' → logprob: -8.211138725280762
    5. 'line' → logprob: -8.961138725280762
    6. '       ' → logprob: -8.961138725280762
    7. 'for' → logprob: -9.711138725280762
    8. 'current' → logprob: -10.086138725280762
    9. ' idx' → logprob: -11.336138725280762
    10. 'ptr' → logprob: -11.461138725280762

Token 505: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759503841400146
    2. ' =' → logprob: -0.8259503841400146
    3. ' +=' → logprob: -12.200950622558594
    4. '+=' → logprob: -12.325950622558594
    5. ' ' → logprob: -14.325950622558594
    6. '0' → logprob: -15.575950622558594
    7. 's' → logprob: -16.325950622558594
    8. ')' → logprob: -16.325950622558594
    9. '   ' → logprob: -16.450950622558594
    10. '  ' → logprob: -16.450950622558594

Token 506: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -15.250075340270996
    4. '   ' → logprob: -16.50007438659668
    5. '۰' → logprob: -18.12507438659668
    6. '2' → logprob: -19.00007438659668
    7. '=' → logprob: -19.06257438659668
    8. '[' → logprob: -19.06257438659668
    9. '```' → logprob: -19.62507438659668
    10. '０' → logprob: -19.68757438659668

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. '1' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.00001335144043
    4. '2' → logprob: -17.25001335144043
    5. '   ' → logprob: -18.31251335144043
    6. '۰' → logprob: -19.81251335144043
    7. '```' → logprob: -20.18751335144043
    8. '=' → logprob: -20.50001335144043
    9. '[' → logprob: -20.56251335144043
    10. '０' → logprob: -20.56251335144043

Token 508: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11036881059408188
    2. 'while' → logprob: -2.6103687286376953
    3. ' while' → logprob: -3.4853687286376953
    4. 'n' → logprob: -9.110368728637695
    5. '	while' → logprob: -9.860368728637695
    6. ' n' → logprob: -10.110368728637695
    7. '
' → logprob: -10.235368728637695
    8. '   ' → logprob: -10.485368728637695
    9. '<|end|>' → logprob: -10.485368728637695
    10. ',' → logprob: -10.985368728637695

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3190826177597046
    2. 'while' → logprob: -1.6940826177597046
    3. ' while' → logprob: -2.444082736968994
    4. '   ' → logprob: -6.819082736968994
    5. 'n' → logprob: -7.194082736968994
    6. ' n' → logprob: -7.819082736968994
    7. '```' → logprob: -8.819082260131836
    8. '	while' → logprob: -8.944082260131836
    9. '<|end|>' → logprob: -10.194082260131836
    10. '
' → logprob: -10.819082260131836

Token 510: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05014346167445183
    2. ' while' → logprob: -3.0501434803009033
    3. '       ' → logprob: -6.550143241882324
    4. 'n' → logprob: -9.175143241882324
    5. ' n' → logprob: -11.050143241882324
    6. '	while' → logprob: -13.425143241882324
    7. 'datasets' → logprob: -13.425143241882324
    8. '```' → logprob: -14.050143241882324
    9. '
' → logprob: -14.300143241882324
    10. '   ' → logprob: -14.550143241882324

Token 511: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.034261252731084824
    2. ' idx' → logprob: -3.5342612266540527
    3. 'True' → logprob: -5.534261226654053
    4. ' True' → logprob: -7.534261226654053
    5. 'lines' → logprob: -12.534261703491211
    6. '   ' → logprob: -12.534261703491211
    7. '	idx' → logprob: -12.784261703491211
    8. '(idx' → logprob: -13.034261703491211
    9. '       ' → logprob: -13.534261703491211
    10. ' lines' → logprob: -14.284261703491211

Token 512: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5320895314216614
    2. '<' → logprob: -0.9070895314216614
    3. '<len' → logprob: -4.782089710235596
    4. '<n' → logprob: -7.907089710235596
    5. '<class' → logprob: -9.532089233398438
    6. '<size' → logprob: -10.282089233398438
    7. '<num' → logprob: -10.907089233398438
    8. '<int' → logprob: -11.532089233398438
    9. '<s' → logprob: -11.782089233398438
    10. ' ' → logprob: -12.157089233398438

Token 513: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '(len' → logprob: -19.000017166137695
    4. 'lines' → logprob: -19.625017166137695
    5. '
' → logprob: -21.375017166137695
    6. '=len' → logprob: -21.500017166137695
    7. ',len' → logprob: -21.875017166137695
    8. '[len' → logprob: -21.875017166137695
    9. 'length' → logprob: -22.000017166137695
    10. '	len' → logprob: -22.125017166137695

Token 514: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00021676832693628967
    2. 'lines' → logprob: -8.750216484069824
    3. ' lines' → logprob: -9.750216484069824
    4. '	lines' → logprob: -18.00021743774414
    5. '_lines' → logprob: -19.25021743774414
    6. '(' → logprob: -20.00021743774414
    7. '.lines' → logprob: -20.50021743774414
    8. '(line' → logprob: -20.87521743774414
    9. ' (' → logprob: -22.62521743774414
    10. 'Lines' → logprob: -22.62521743774414

Token 515: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1514817625284195
    2. ':
' → logprob: -2.276481866836548
    3. ' and' → logprob: -3.901481866836548
    4. '):
' → logprob: -4.651481628417969
    5. '):' → logprob: -5.026481628417969
    6. 'and' → logprob: -6.651481628417969
    7. '       ' → logprob: -9.026481628417969
    8. '   ' → logprob: -10.276481628417969
    9. '():
' → logprob: -10.526481628417969
    10. ')' → logprob: -10.651481628417969

Token 516: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5992832183837891
    2. '           ' → logprob: -0.9742832183837891
    3. 'line' → logprob: -3.349283218383789
    4. ' line' → logprob: -3.724283218383789
    5. '   ' → logprob: -4.849283218383789
    6. ' parts' → logprob: -6.474283218383789
    7. 'n' → logprob: -6.474283218383789
    8. ' n' → logprob: -6.849283218383789
    9. '```' → logprob: -7.099283218383789
    10. '	       ' → logprob: -8.599283218383789

Token 517: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3672873973846436
    2. ' parts' → logprob: -1.3672873973846436
    3. 'line' → logprob: -1.7422873973846436
    4. ' n' → logprob: -1.8672873973846436
    5. '           ' → logprob: -2.7422873973846436
    6. 'parts' → logprob: -2.9922873973846436
    7. ' line' → logprob: -3.3672873973846436
    8. 'nm' → logprob: -5.617287635803223
    9. '   ' → logprob: -6.492287635803223
    10. 'header' → logprob: -6.617287635803223

Token 518: ' lines' (ID: 8698)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47906404733657837
    2. 'lines' → logprob: -1.2290639877319336
    3. ' not' → logprob: -2.4790639877319336
    4. ' lines' → logprob: -5.479063987731934
    5. 'len' → logprob: -9.979063987731934
    6. '   ' → logprob: -11.104063987731934
    7. '(lines' → logprob: -12.104063987731934
    8. 'line' → logprob: -13.104063987731934
    9. '(not' → logprob: -13.854063987731934
    10. '       ' → logprob: -14.104063987731934

Token 519: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '```' → logprob: -15.875000953674316
    4. 'idx' → logprob: -16.75
    5. '[index' → logprob: -17.625
    6. '   ' → logprob: -18.125
    7. '[int' → logprob: -18.75
    8. '
' → logprob: -19.125
    9. '       ' → logprob: -19.125
    10. '[ix' → logprob: -19.5

Token 520: '].' (ID: 1651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7973886728286743
    2. '==' → logprob: -1.2973886728286743
    3. ']==' → logprob: -2.2973885536193848
    4. '].' → logprob: -2.4223885536193848
    5. '.strip' → logprob: -2.7973885536193848
    6. ']' → logprob: -4.547388553619385
    7. ')==' → logprob: -4.922388553619385
    8. ').' → logprob: -5.797388553619385
    9. ' .' → logprob: -6.422388553619385
    10. '.' → logprob: -6.547388553619385

Token 521: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.60414821645827e-06
    2. 'startswith' → logprob: -12.750004768371582
    3. '==' → logprob: -13.750004768371582
    4. 'isdigit' → logprob: -15.000004768371582
    5. '.strip' → logprob: -15.625004768371582
    6. ' strip' → logprob: -17.000003814697266
    7. 'split' → logprob: -17.125003814697266
    8. '```' → logprob: -19.250003814697266
    9. 'rstrip' → logprob: -19.250003814697266
    10. ' ==' → logprob: -19.375003814697266

Token 522: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16272202134132385
    2. '()==' → logprob: -1.9127219915390015
    3. '==' → logprob: -6.037722110748291
    4. ' ==' → logprob: -9.162721633911133
    5. '():' → logprob: -13.537721633911133
    6. ']==' → logprob: -14.412721633911133
    7. '()=="' → logprob: -15.162721633911133
    8. ')==' → logprob: -15.287721633911133
    9. ' ()' → logprob: -16.287721633911133
    10. '```' → logprob: -16.412721633911133

Token 523: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008076546713709831
    2. ' ==' → logprob: -5.2580766677856445
    3. '()==' → logprob: -5.8830766677856445
    4. '()' → logprob: -10.258076667785645
    5. ']==' → logprob: -12.133076667785645
    6. '===' → logprob: -12.258076667785645
    7. ')==' → logprob: -12.633076667785645
    8. '=' → logprob: -13.258076667785645
    9. '==
' → logprob: -13.883076667785645
    10. ':' → logprob: -14.883076667785645

Token 524: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8169190883636475
    2. '"":' → logprob: -1.0669190883636475
    3. '''' → logprob: -1.5669190883636475
    4. '""' → logprob: -5.566919326782227
    5. '"' → logprob: -6.441919326782227
    6. ' '':
' → logprob: -11.441919326782227
    7. '":' → logprob: -12.191919326782227
    8. ''#' → logprob: -12.441919326782227
    9. ''end' → logprob: -12.691919326782227
    10. ' "":
' → logprob: -12.941919326782227

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006608496769331396
    2. '           ' → logprob: -7.5006608963012695
    3. '<|end|>' → logprob: -10.12566089630127
    4. '                   ' → logprob: -10.87566089630127
    5. '                
' → logprob: -11.00066089630127
    6. '<|end|>' → logprob: -12.00066089630127
    7. '	           ' → logprob: -12.37566089630127
    8. '              ' → logprob: -12.75066089630127
    9. ':' → logprob: -13.00066089630127
    10. ',' → logprob: -13.00066089630127

Token 526: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.05142643675208092
    2. '               ' → logprob: -3.051426410675049
    3. '           ' → logprob: -6.676426410675049
    4. ' idx' → logprob: -7.176426410675049
    5. '                   ' → logprob: -7.551426410675049
    6. '
' → logprob: -8.426426887512207
    7. '   ' → logprob: -10.801426887512207
    8. '	idx' → logprob: -10.926426887512207
    9. '                
' → logprob: -12.051426887512207
    10. '```' → logprob: -12.176426887512207

Token 527: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00318163656629622
    2. ' +=' → logprob: -5.753181457519531
    3. ']+=' → logprob: -12.878181457519531
    4. '=' → logprob: -13.753181457519531
    5. '+' → logprob: -16.00318145751953
    6. '```' → logprob: -16.25318145751953
    7. '   ' → logprob: -17.00318145751953
    8. '+='' → logprob: -17.62818145751953
    9. '+="' → logprob: -18.00318145751953
    10. '           ' → logprob: -18.50318145751953

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.62502098083496
    4. '```' → logprob: -19.50002098083496
    5. '           ' → logprob: -19.75002098083496
    6. '
' → logprob: -20.75002098083496
    7. 'continue' → logprob: -21.12502098083496
    8. '１' → logprob: -21.12502098083496
    9. '       ' → logprob: -21.75002098083496
    10. '۱' → logprob: -22.00002098083496

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '１' → logprob: -20.875003814697266
    4. '   ' → logprob: -21.125003814697266
    5. '```' → logprob: -21.125003814697266
    6. '
' → logprob: -21.375003814697266
    7. 'continue' → logprob: -21.625003814697266
    8. '۱' → logprob: -22.000003814697266
    9. '+' → logprob: -23.187503814697266
    10. '१' → logprob: -23.250003814697266

Token 530: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015395533409900963
    2. '           ' → logprob: -9.125153541564941
    3. 'continue' → logprob: -10.375153541564941
    4. ' continue' → logprob: -11.750153541564941
    5. '                   ' → logprob: -12.625153541564941
    6. '```' → logprob: -14.625153541564941
    7. ',' → logprob: -15.000153541564941
    8. '              ' → logprob: -15.250153541564941
    9. '       ' → logprob: -15.250153541564941
    10. '	           ' → logprob: -15.625153541564941

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003978992172051221
    2. '           ' → logprob: -8.000397682189941
    3. 'continue' → logprob: -10.000397682189941
    4. ' continue' → logprob: -11.625397682189941
    5. '                   ' → logprob: -12.250397682189941
    6. '              ' → logprob: -14.625397682189941
    7. '
' → logprob: -14.750397682189941
    8. '       ' → logprob: -14.875397682189941
    9. '```' → logprob: -14.875397682189941
    10. ',' → logprob: -15.125397682189941

Token 532: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005450039636343718
    2. 'break' → logprob: -5.255450248718262
    3. ' continue' → logprob: -8.505450248718262
    4. '           ' → logprob: -11.505450248718262
    5. '               ' → logprob: -13.630450248718262
    6. '   ' → logprob: -14.130450248718262
    7. ' break' → logprob: -14.380450248718262
    8. '       ' → logprob: -14.630450248718262
    9. 'contin' → logprob: -14.880450248718262
    10. '	continue' → logprob: -15.630450248718262

Token 533: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027121533639729023
    2. '
' → logprob: -6.002712249755859
    3. 'n' → logprob: -9.25271224975586
    4. '            
' → logprob: -9.25271224975586
    5. '```' → logprob: -10.37771224975586
    6. '   ' → logprob: -13.25271224975586
    7. ',' → logprob: -13.62771224975586
    8. '       ' → logprob: -13.62771224975586
    9. '          ' → logprob: -13.62771224975586
    10. 'num' → logprob: -14.12771224975586

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008344047237187624
    2. 'n' → logprob: -7.8758344650268555
    3. ' n' → logprob: -8.875834465026855
    4. '       ' → logprob: -9.125834465026855
    5. '
' → logprob: -9.375834465026855
    6. '            
' → logprob: -10.250834465026855
    7. '```' → logprob: -10.375834465026855
    8. '   ' → logprob: -11.125834465026855
    9. ' line' → logprob: -11.500834465026855
    10. ' if' → logprob: -11.875834465026855

Token 535: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0029582080896943808
    2. 'parts' → logprob: -6.377958297729492
    3. ' n' → logprob: -7.127958297729492
    4. 'nm' → logprob: -8.252958297729492
    5. '           ' → logprob: -9.002958297729492
    6. ' parts' → logprob: -10.252958297729492
    7. 'N' → logprob: -12.002958297729492
    8. 'num' → logprob: -12.252958297729492
    9. 'tokens' → logprob: -12.252958297729492
    10. '(n' → logprob: -12.502958297729492

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01840265281498432
    2. ',m' → logprob: -4.018402576446533
    3. '=' → logprob: -9.143403053283691
    4. ' ,' → logprob: -9.268403053283691
    5. ' =' → logprob: -10.143403053283691
    6. 'm' → logprob: -12.268403053283691
    7. ',n' → logprob: -12.393403053283691
    8. ',M' → logprob: -14.393403053283691
    9. ',num' → logprob: -14.518403053283691
    10. ',line' → logprob: -14.643403053283691

Token 537: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00861456897109747
    2. ' m' → logprob: -4.758614540100098
    3. '=' → logprob: -17.383615493774414
    4. '    ' → logprob: -17.508615493774414
    5. ' =' → logprob: -18.383615493774414
    6. ' ' → logprob: -18.383615493774414
    7. '	m' → logprob: -18.883615493774414
    8. '*m' → logprob: -19.008615493774414
    9. '_m' → logprob: -19.133615493774414
    10. ',m' → logprob: -19.258615493774414

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18011057376861572
    2. ' =' → logprob: -1.8051105737686157
    3. ',' → logprob: -7.930110454559326
    4. ')' → logprob: -13.555110931396484
    5. '=int' → logprob: -13.930110931396484
    6. '=line' → logprob: -14.055110931396484
    7. '＝' → logprob: -14.430110931396484
    8. ')=' → logprob: -14.680110931396484
    9. '<|end|>' → logprob: -14.930110931396484
    10. '=

' → logprob: -15.930110931396484

Token 539: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25192990899086
    2. 'map' → logprob: -1.5019298791885376
    3. '(map' → logprob: -14.626930236816406
    4. 'list' → logprob: -15.751930236816406
    5. '	map' → logprob: -16.501930236816406
    6. ' list' → logprob: -16.751930236816406
    7. '[' → logprob: -16.876930236816406
    8. '           ' → logprob: -18.001930236816406
    9. 'tuple' → logprob: -18.001930236816406
    10. '   ' → logprob: -18.126930236816406

Token 540: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012305884156376123
    2. 'int' → logprob: -6.751230716705322
    3. '(' → logprob: -9.751230239868164
    4. '(lambda' → logprob: -13.751230239868164
    5. '(str' → logprob: -14.001230239868164
    6. ' int' → logprob: -15.501230239868164
    7. '(
' → logprob: -16.876230239868164
    8. '[int' → logprob: -17.001230239868164
    9. ' (' → logprob: -17.501230239868164
    10. '<int' → logprob: -18.376230239868164

Token 541: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.000789259618613869
    2. 'lines' → logprob: -7.250789165496826
    3. ')' → logprob: -9.625789642333984
    4. ' lines' → logprob: -11.875789642333984
    5. '(' → logprob: -12.625789642333984
    6. ',' → logprob: -12.875789642333984
    7. ' (' → logprob: -15.250789642333984
    8. '	lines' → logprob: -15.875789642333984
    9. ')(' → logprob: -16.375789642333984
    10. '
' → logprob: -17.000789642333984

Token 542: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.006732068490236998
    2. ' lines' → logprob: -5.006731986999512
    3. '(lines' → logprob: -11.006731986999512
    4. '	lines' → logprob: -16.631732940673828
    5. ')' → logprob: -17.881732940673828
    6. '.lines' → logprob: -18.381732940673828
    7. 'line' → logprob: -18.506732940673828
    8. '_lines' → logprob: -19.756732940673828
    9. '   ' → logprob: -20.131732940673828
    10. '-lines' → logprob: -20.381732940673828

Token 543: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.8889261304575484e-06
    2. ')[' → logprob: -13.125003814697266
    3. '[' → logprob: -14.125003814697266
    4. '(idx' → logprob: -14.375003814697266
    5. '()[' → logprob: -16.000003814697266
    6. ' lines' → logprob: -16.625003814697266
    7. 'idx' → logprob: -16.625003814697266
    8. '```' → logprob: -17.000003814697266
    9. ')' → logprob: -17.375003814697266
    10. '[
' → logprob: -17.500003814697266

Token 544: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.050405558198690414
    2. '().' → logprob: -3.050405502319336
    3. '[idx' → logprob: -7.175405502319336
    4. '.strip' → logprob: -7.800405502319336
    5. '.split' → logprob: -8.300405502319336
    6. '()].' → logprob: -8.550405502319336
    7. ']' → logprob: -9.550405502319336
    8. '   ' → logprob: -10.050405502319336
    9. '[' → logprob: -10.925405502319336
    10. ''].' → logprob: -11.175405502319336

Token 545: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12692883610725403
    2. 'strip' → logprob: -2.1269288063049316
    3. ' split' → logprob: -15.37692928314209
    4. '.strip' → logprob: -15.50192928314209
    5. '.split' → logprob: -15.75192928314209
    6. ' strip' → logprob: -15.75192928314209
    7. 'rstrip' → logprob: -17.251928329467773
    8. '(split' → logprob: -18.126928329467773
    9. '_split' → logprob: -20.001928329467773
    10. '(strip' → logprob: -20.251928329467773

Token 546: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0034334040246903896
    2. '()' → logprob: -6.0034332275390625
    3. '())
' → logprob: -7.3784332275390625
    4. ')' → logprob: -8.378433227539062
    5. '('' → logprob: -9.378433227539062
    6. '(' → logprob: -11.628433227539062
    7. '()
' → logprob: -12.753433227539062
    8. '(','' → logprob: -13.003433227539062
    9. '())

' → logprob: -13.628433227539062
    10. ' ())' → logprob: -13.753433227539062

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024537728168070316
    2. 'idx' → logprob: -6.377453804016113
    3. '```' → logprob: -7.877453804016113
    4. '<|end|>' → logprob: -9.627453804016113
    5. '               ' → logprob: -9.877453804016113
    6. '[idx' → logprob: -10.002453804016113
    7. '
' → logprob: -10.127453804016113
    8. '<|end|>' → logprob: -10.377453804016113
    9. '       ' → logprob: -10.502453804016113
    10. ' idx' → logprob: -11.002453804016113

Token 548: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2026883214712143
    2. '           ' → logprob: -1.7026883363723755
    3. '       ' → logprob: -7.577688217163086
    4. ' idx' → logprob: -7.827688217163086
    5. '	idx' → logprob: -8.327688217163086
    6. 'if' → logprob: -10.077688217163086
    7. '_idx' → logprob: -10.952688217163086
    8. '	       ' → logprob: -11.202688217163086
    9. '   ' → logprob: -11.452688217163086
    10. '[idx' → logprob: -12.077688217163086

Token 549: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16022492945194244
    2. ' +=' → logprob: -1.9102249145507812
    3. '+' → logprob: -14.410224914550781
    4. ']+=' → logprob: -15.785224914550781
    5. '=' → logprob: -16.41022491455078
    6. '```' → logprob: -18.03522491455078
    7. '   ' → logprob: -18.41022491455078
    8. ' +' → logprob: -19.53522491455078
    9. ' =' → logprob: -20.03522491455078
    10. '+="' → logprob: -20.41022491455078

Token 550: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '+' → logprob: -17.375024795532227
    4. 'm' → logprob: -17.500024795532227
    5. '   ' → logprob: -18.375024795532227
    6. '2' → logprob: -18.750024795532227
    7. 'n' → logprob: -19.187524795532227
    8. '0' → logprob: -19.250024795532227
    9. '```' → logprob: -19.250024795532227
    10. '１' → logprob: -19.625024795532227

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '0' → logprob: -20.75
    4. '１' → logprob: -21.0
    5. 'm' → logprob: -21.75
    6. '2' → logprob: -22.0
    7. '+' → logprob: -22.25
    8. '   ' → logprob: -22.375
    9. 'n' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 552: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05675778165459633
    2. 'cells' → logprob: -2.931757688522339
    3. '       ' → logprob: -7.181757926940918
    4. ' cells' → logprob: -7.306757926940918
    5. 'if' → logprob: -8.931757926940918
    6. '   ' → logprob: -9.181757926940918
    7. 'c' → logprob: -9.306757926940918
    8. 'n' → logprob: -10.931757926940918
    9. '_cells' → logprob: -11.056757926940918
    10. '```' → logprob: -11.431757926940918

Token 553: '           ' (ID: 352)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.3969423174858093
    2. '           ' → logprob: -1.146942377090454
    3. ' cells' → logprob: -4.896942138671875
    4. '       ' → logprob: -6.771942138671875
    5. 'c' → logprob: -7.396942138671875
    6. '   ' → logprob: -7.771942138671875
    7. 'if' → logprob: -8.771942138671875
    8. 'cell' → logprob: -10.146942138671875
    9. '_cells' → logprob: -10.271942138671875
    10. '	c' → logprob: -10.396942138671875

Token 554: ' if' (ID: 538)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -6.504040356958285e-05
    2. 'cell' → logprob: -10.625064849853516
    3. ' cells' → logprob: -10.750064849853516
    4. '           ' → logprob: -12.000064849853516
    5. 'if' (adapté à ' if') → logprob: -12.375064849853516
    6. 'for' → logprob: -12.750064849853516
    7. '   ' → logprob: -13.250064849853516
    8. 'instructions' → logprob: -13.500064849853516
    9. '       ' → logprob: -13.625064849853516
    10. '_cells' → logprob: -15.000064849853516

Token 555: ' n' (ID: 297)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3015059232711792
    2. 'n' → logprob: -1.5515059232711792
    3. 'm' → logprob: -3.1765060424804688
    4. 'len' → logprob: -5.551506042480469
    5. 'not' → logprob: -6.301506042480469
    6. ' idx' → logprob: -7.551506042480469
    7. 'lines' → logprob: -8.801506042480469
    8. ' n' → logprob: -9.301506042480469
    9. 'cells' → logprob: -10.051506042480469
    10. '   ' → logprob: -11.051506042480469

Token 556: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519587278366089
    2. '==' → logprob: -1.5019587278366089
    3. '<=' → logprob: -11.251958847045898
    4. ' <=' → logprob: -11.501958847045898
    5. '>' → logprob: -13.126958847045898
    6. ' >' → logprob: -13.251958847045898
    7. '===' → logprob: -14.251958847045898
    8. '=' → logprob: -14.751958847045898
    9. '==
' → logprob: -15.001958847045898
    10. ' <' → logprob: -15.251958847045898

Token 557: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038134094211272895
    2. ' ' → logprob: -7.8753814697265625
    3. 'm' → logprob: -14.375381469726562
    4. '-' → logprob: -14.750381469726562
    5. '```' → logprob: -16.625381469726562
    6. '
' → logprob: -17.187881469726562
    7. '０' → logprob: -17.250381469726562
    8. '۰' → logprob: -17.750381469726562
    9. '   ' → logprob: -18.000381469726562
    10. '  ' → logprob: -18.187881469726562

Token 558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.000019073486328
    3. '-' → logprob: -13.375019073486328
    4. 'm' → logprob: -16.875019073486328
    5. '```' → logprob: -17.375019073486328
    6. '０' → logprob: -17.562519073486328
    7. ' -' → logprob: -17.625019073486328
    8. '۰' → logprob: -17.687519073486328
    9. '00' → logprob: -18.375019073486328
    10. '
' → logprob: -18.437519073486328

Token 559: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.038042064756155014
    2. ' and' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.288042068481445
    4. '   ' → logprob: -15.538042068481445
    5. ':' → logprob: -16.663042068481445
    6. '           ' → logprob: -16.913042068481445
    7. '	and' → logprob: -18.413042068481445
    8. '    ' → logprob: -18.788042068481445
    9. '  ' → logprob: -18.913042068481445
    10. '0' → logprob: -19.288042068481445

Token 560: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009115827269852161
    2. ' m' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. '  ' → logprob: -19.250911712646484
    5. '	m' → logprob: -19.375911712646484
    6. ' ' → logprob: -20.000911712646484
    7. '    ' → logprob: -20.125911712646484
    8. '       ' → logprob: -21.000911712646484
    9. '           ' → logprob: -21.250911712646484
    10. '     ' → logprob: -21.625911712646484

Token 561: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5232492685317993
    2. '==' → logprob: -0.8982492685317993
    3. '0' → logprob: -10.023249626159668
    4. '<|end|>' → logprob: -10.273249626159668
    5. '<|end|>' → logprob: -11.148249626159668
    6. '=' → logprob: -11.273249626159668
    7. ' ' → logprob: -12.023249626159668
    8. ' =' → logprob: -12.148249626159668
    9. '===' → logprob: -12.898249626159668
    10. ')==' → logprob: -13.523249626159668

Token 562: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '<|end|>' → logprob: -17.375431060791016
    4. '<|end|>' → logprob: -18.500431060791016
    5. '  ' → logprob: -19.250431060791016
    6. '   ' → logprob: -19.375431060791016
    7. '۰' → logprob: -19.625431060791016
    8. '1' → logprob: -20.375431060791016
    9. '=' → logprob: -20.375431060791016
    10. '
' → logprob: -21.000431060791016

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -16.750059127807617
    4. '<|end|>' → logprob: -18.125059127807617
    5. '  ' → logprob: -19.125059127807617
    6. '۰' → logprob: -20.000059127807617
    7. '   ' → logprob: -20.250059127807617
    8. '
' → logprob: -20.937559127807617
    9. '=' → logprob: -21.250059127807617
    10. '1' → logprob: -21.437559127807617

Token 564: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6214687824249268
    2. ':' → logprob: -1.3714687824249268
    3. '               ' → logprob: -1.6214687824249268
    4. '           ' → logprob: -4.496468544006348
    5. ':return' → logprob: -8.496468544006348
    6. '                   ' → logprob: -10.246468544006348
    7. '       ' → logprob: -10.496468544006348
    8. '   ' → logprob: -10.996468544006348
    9. ' and' → logprob: -11.121468544006348
    10. ':
' → logprob: -11.871468544006348

Token 565: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003528622619342059
    2. '           ' → logprob: -8.00035285949707
    3. '                   ' → logprob: -11.62535285949707
    4. '   ' → logprob: -12.37535285949707
    5. '              ' → logprob: -13.62535285949707
    6. '       ' → logprob: -14.37535285949707
    7. '	           ' → logprob: -14.50035285949707
    8. ' break' → logprob: -14.62535285949707
    9. '<|end|>' → logprob: -15.00035285949707
    10. '             ' → logprob: -15.37535285949707

Token 566: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.34509098529815674
    2. '               ' → logprob: -1.8450909852981567
    3. '           ' → logprob: -2.095090866088867
    4. ' break' → logprob: -4.845090866088867
    5. 'return' → logprob: -5.970090866088867
    6. '	break' → logprob: -8.470090866088867
    7. '
' → logprob: -10.095090866088867
    8. '                   ' → logprob: -10.220090866088867
    9. '	           ' → logprob: -10.470090866088867
    10. '		' → logprob: -11.345090866088867

Token 567: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036691725836135447
    2. '       ' → logprob: -9.125367164611816
    3. 'cells' → logprob: -9.875367164611816
    4. '<|end|>' → logprob: -10.000367164611816
    5. 'n' → logprob: -10.125367164611816
    6. '```' → logprob: -10.875367164611816
    7. '            
' → logprob: -10.875367164611816
    8. '
' → logprob: -10.875367164611816
    9. ' cells' → logprob: -11.125367164611816
    10. '​' → logprob: -11.625367164611816

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05578969046473503
    2. 'cells' → logprob: -3.0557897090911865
    3. ' cells' → logprob: -5.555789470672607
    4. '```' → logprob: -6.180789470672607
    5. '       ' → logprob: -7.805789470672607
    6. '   ' → logprob: -8.055789947509766
    7. 'n' → logprob: -8.930789947509766
    8. 'lines' → logprob: -9.805789947509766
    9. '	c' → logprob: -9.930789947509766
    10. 'c' → logprob: -10.180789947509766

Token 569: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.0014397578779608011
    2. '           ' → logprob: -7.251439571380615
    3. ' cells' → logprob: -7.376439571380615
    4. '   ' → logprob: -9.501440048217773
    5. '       ' → logprob: -11.251440048217773
    6. 'cell' → logprob: -12.126440048217773
    7. 'c' → logprob: -12.376440048217773
    8. '_cells' → logprob: -13.251440048217773
    9. '.cells' → logprob: -13.376440048217773
    10. '	c' → logprob: -13.501440048217773

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. '           ' → logprob: -13.886872291564941
    4. ',' → logprob: -15.386872291564941
    5. '   ' → logprob: -15.761872291564941
    6. '=line' → logprob: -15.761872291564941
    7. '＝' → logprob: -16.511873245239258
    8. '       ' → logprob: -17.011873245239258
    9. '_line' → logprob: -17.636873245239258
    10. '=[]' → logprob: -17.761873245239258

Token 571: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12693126499652863
    2. ' list' → logprob: -2.1269311904907227
    3. '[list' → logprob: -12.876931190490723
    4. '[' → logprob: -14.876931190490723
    5. ' [' → logprob: -16.37693214416504
    6. '=list' → logprob: -17.62693214416504
    7. '	list' → logprob: -18.12693214416504
    8. '[]' → logprob: -18.25193214416504
    9. '           ' → logprob: -18.37693214416504
    10. '   ' → logprob: -18.37693214416504

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03387989103794098
    2. 'list' → logprob: -4.40887975692749
    3. 'for' → logprob: -4.53387975692749
    4. ' for' → logprob: -5.40887975692749
    5. 'map' → logprob: -6.03387975692749
    6. 'while' → logprob: -6.53387975692749
    7. ' list' → logprob: -6.90887975692749
    8. ' while' → logprob: -8.408880233764648
    9. '		' → logprob: -8.658880233764648
    10. ' map' → logprob: -8.658880233764648

Token 573: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03876582533121109
    2. 'while' → logprob: -3.2887659072875977
    3. ' for' → logprob: -7.663765907287598
    4. '           ' → logprob: -8.538765907287598
    5. ' while' → logprob: -10.538765907287598
    6. 'cells' → logprob: -10.663765907287598
    7. 'lines' → logprob: -12.913765907287598
    8. '	for' → logprob: -13.288765907287598
    9. 'num' → logprob: -13.913765907287598
    10. 'count' → logprob: -13.913765907287598

Token 574: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16093112528324127
    2. '_i' → logprob: -1.91093111038208
    3. 'i' → logprob: -8.160931587219238
    4. '_line' → logprob: -8.785931587219238
    5. '_cell' → logprob: -9.035931587219238
    6. '_cells' → logprob: -9.410931587219238
    7. ' _' → logprob: -10.785931587219238
    8. '_j' → logprob: -10.785931587219238
    9. '_in' → logprob: -11.410931587219238
    10. '_c' → logprob: -12.785931587219238

Token 575: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022683741990476847
    2. '_' → logprob: -6.502268314361572
    3. ' range' → logprob: -7.252268314361572
    4. '_range' → logprob: -9.87726879119873
    5. 'in' → logprob: -12.62726879119873
    6. ' in' → logprob: -14.12726879119873
    7. '   ' → logprob: -14.50226879119873
    8. '	range' → logprob: -14.87726879119873
    9. '_i' → logprob: -15.12726879119873
    10. 'i' → logprob: -15.50226879119873

Token 576: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4855663721391466e-05
    2. ' range' → logprob: -11.125015258789062
    3. '	range' → logprob: -17.750015258789062
    4. '_range' → logprob: -18.875015258789062
    5. '(range' → logprob: -19.000015258789062
    6. '   ' → logprob: -19.500015258789062
    7. '_' → logprob: -19.750015258789062
    8. 'ange' → logprob: -20.375015258789062
    9. '
' → logprob: -20.375015258789062
    10. 'in' → logprob: -20.875015258789062

Token 577: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20302388072013855
    2. 'n' → logprob: -1.703023910522461
    3. ' n' → logprob: -6.453023910522461
    4. '	n' → logprob: -11.328023910522461
    5. '(' → logprob: -11.703023910522461
    6. '_n' → logprob: -11.828023910522461
    7. ' (' → logprob: -12.453023910522461
    8. '   ' → logprob: -14.953023910522461
    9. ')n' → logprob: -15.078023910522461
    10. '
' → logprob: -15.453023910522461

Token 578: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048755522817373276
    2. '):' → logprob: -3.048755407333374
    3. '):
' → logprob: -9.798755645751953
    4. ':
' → logprob: -10.423755645751953
    5. ')' → logprob: -10.798755645751953
    6. ':' → logprob: -10.923755645751953
    7. '           ' → logprob: -11.048755645751953
    8. '               ' → logprob: -11.923755645751953
    9. '():
' → logprob: -12.173755645751953
    10. '<|end|>' → logprob: -12.298755645751953

Token 579: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008389154449105263
    2. '<|end|>' → logprob: -5.133388996124268
    3. '<|end|>' → logprob: -7.383388996124268
    4. ' cells' → logprob: -7.508388996124268
    5. '           ' → logprob: -7.758388996124268
    6. 'cells' → logprob: -8.133389472961426
    7. '	           ' → logprob: -9.008389472961426
    8. ',' → logprob: -9.008389472961426
    9. 'tokens' → logprob: -9.383389472961426
    10. '   ' → logprob: -10.133389472961426

Token 580: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.04590355232357979
    2. ' cells' → logprob: -3.170903444290161
    3. '               ' → logprob: -6.17090368270874
    4. 'cell' → logprob: -7.67090368270874
    5. '                   ' → logprob: -9.545903205871582
    6. '   ' → logprob: -9.670903205871582
    7. 'val' → logprob: -9.920903205871582
    8. 'value' → logprob: -10.045903205871582
    9. 'c' → logprob: -10.170903205871582
    10. 'instruction' → logprob: -11.795903205871582

Token 581: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.75002670288086
    3. 'append' → logprob: -12.25002670288086
    4. '.extend' → logprob: -14.62502670288086
    5. '.app' → logprob: -15.87502670288086
    6. ' .' → logprob: -15.87502670288086
    7. '+=' → logprob: -17.75002670288086
    8. '.ap' → logprob: -18.12502670288086
    9. '_append' → logprob: -18.37502670288086
    10. ' +=' → logprob: -18.75002670288086

Token 582: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016614416614174843
    2. '(int' → logprob: -4.2666144371032715
    3. '0' → logprob: -6.0166144371032715
    4. ' int' → logprob: -12.391613960266113
    5. '<int' → logprob: -12.891613960266113
    6. '(' → logprob: -13.641613960266113
    7. '=int' → logprob: -14.141613960266113
    8. '[int' → logprob: -14.266613960266113
    9. ':int' → logprob: -15.016613960266113
    10. '
' → logprob: -15.766613960266113

Token 583: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00016742534353397787
    2. 'lines' → logprob: -8.750167846679688
    3. ' lines' → logprob: -12.750167846679688
    4. ')' → logprob: -12.875167846679688
    5. '	lines' → logprob: -12.875167846679688
    6. '(' → logprob: -15.125167846679688
    7. ')(' → logprob: -15.250167846679688
    8. '(
' → logprob: -15.625167846679688
    9. '
' → logprob: -16.500167846679688
    10. '   ' → logprob: -16.750167846679688

Token 584: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.465036105713807e-06
    2. 'idx' → logprob: -11.875007629394531
    3. '[' → logprob: -15.250007629394531
    4. '(idx' → logprob: -16.25000762939453
    5. '   ' → logprob: -16.62500762939453
    6. '[ind' → logprob: -18.12500762939453
    7. '           ' → logprob: -18.25000762939453
    8. ' idx' → logprob: -18.50000762939453
    9. '                   ' → logprob: -18.75000762939453
    10. ' [' → logprob: -18.75000762939453

Token 585: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.12975454330444336
    2. '].' → logprob: -2.7547545433044434
    3. '[idx' → logprob: -3.0047545433044434
    4. '.strip' → logprob: -5.129754543304443
    5. ']' → logprob: -7.004754543304443
    6. ']))
' → logprob: -7.129754543304443
    7. '])' → logprob: -7.379754543304443
    8. '   ' → logprob: -9.629755020141602
    9. '[' → logprob: -10.254755020141602
    10. 'idx' → logprob: -10.379755020141602

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20151226222515106
    2. '           ' → logprob: -1.7015122175216675
    3. '                   ' → logprob: -10.326512336730957
    4. '       ' → logprob: -10.951512336730957
    5. 'idx' → logprob: -10.951512336730957
    6. '	           ' → logprob: -11.701512336730957
    7. '   ' → logprob: -12.326512336730957
    8. '<|end|>' → logprob: -12.701512336730957
    9. '	       ' → logprob: -12.826512336730957
    10. '		       ' → logprob: -13.201512336730957

Token 587: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.19913919270038605
    2. '           ' → logprob: -2.19913911819458
    3. '               ' → logprob: -2.94913911819458
    4. ' idx' → logprob: -4.07413911819458
    5. '	idx' → logprob: -8.949139595031738
    6. '       ' → logprob: -9.949139595031738
    7. '                   ' → logprob: -10.199139595031738
    8. '   ' → logprob: -10.824139595031738
    9. '_idx' → logprob: -11.199139595031738
    10. '[idx' → logprob: -11.949139595031738

Token 588: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002783783129416406
    2. ' +=' → logprob: -8.37527847290039
    3. '+' → logprob: -10.00027847290039
    4. ']+=' → logprob: -13.50027847290039
    5. '```' → logprob: -14.62527847290039
    6. '=' → logprob: -15.50027847290039
    7. '++' → logprob: -15.62527847290039
    8. 'idx' → logprob: -16.62527847290039
    9. '+='' → logprob: -17.75027847290039
    10. '+++' → logprob: -18.00027847290039

Token 589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '１' → logprob: -21.0000057220459
    4. '```' → logprob: -21.0000057220459
    5. '   ' → logprob: -21.1250057220459
    6. '
' → logprob: -22.1250057220459
    7. '۱' → logprob: -22.3750057220459
    8. ' ' → logprob: -23.1875057220459
    9. '+' → logprob: -23.3125057220459
    10. '0' → logprob: -23.4375057220459

Token 590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -18.875
    4. '１' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '   ' → logprob: -19.875
    7. '0' → logprob: -21.375
    8. '+' → logprob: -21.5
    9. '۱' → logprob: -21.6875
    10. '१' → logprob: -22.3125

Token 591: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014048899174667895
    2. 'm' → logprob: -9.000140190124512
    3. 'd' → logprob: -12.500140190124512
    4. '
' → logprob: -12.750140190124512
    5. '```' → logprob: -12.750140190124512
    6. '       ' → logprob: -13.500140190124512
    7. 'n' → logprob: -14.000140190124512
    8. '          ' → logprob: -14.000140190124512
    9. '		' → logprob: -14.250140190124512
    10. '            
' → logprob: -14.625140190124512

Token 592: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029923528200015426
    2. 'm' → logprob: -8.750299453735352
    3. '       ' → logprob: -9.625299453735352
    4. '
' → logprob: -10.375299453735352
    5. '```' → logprob: -11.125299453735352
    6. 'for' → logprob: -11.250299453735352
    7. 'd' → logprob: -12.500299453735352
    8. '          ' → logprob: -12.875299453735352
    9. ' for' → logprob: -13.500299453735352
    10. '		' → logprob: -13.750299453735352

Token 593: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' (adapté à ' dice') → logprob: -0.001689581316895783
    2. '       ' → logprob: -6.501689434051514
    3. '           ' → logprob: -8.626689910888672
    4. ' dice' → logprob: -12.876689910888672
    5. 'throws' → logprob: -13.376689910888672
    6. '   ' → logprob: -14.001689910888672
    7. '               ' → logprob: -14.376689910888672
    8. 'roll' → logprob: -14.751689910888672
    9. 'd' → logprob: -15.126689910888672
    10. 'dic' → logprob: -15.126689910888672

Token 594: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02985404059290886
    2. 'throws' → logprob: -3.5298540592193604
    3. '=' → logprob: -10.029853820800781
    4. ' =' → logprob: -10.279853820800781
    5. '_lines' → logprob: -11.529853820800781
    6. ' throws' → logprob: -12.904853820800781
    7. '_throw' → logprob: -13.029853820800781
    8. '=[]
' → logprob: -13.154853820800781
    9. '=[]' → logprob: -13.404853820800781
    10. '   ' → logprob: -13.404853820800781

Token 595: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.10022328048944473
    2. '_' → logprob: -2.3502233028411865
    3. '_throw' → logprob: -11.725223541259766
    4. ' throws' → logprob: -12.725223541259766
    5. 'throw' → logprob: -13.225223541259766
    6. 'lines' → logprob: -13.600223541259766
    7. '_lines' → logprob: -13.725223541259766
    8. 'Throws' → logprob: -14.600223541259766
    9. '	throws' → logprob: -15.850223541259766
    10. 'roll' → logprob: -15.975223541259766

Token 596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31346580386161804
    2. ' =' → logprob: -1.3134658336639404
    3. '=[]' → logprob: -8.81346607208252
    4. '.append' → logprob: -10.43846607208252
    5. '=[]
' → logprob: -10.93846607208252
    6. '.extend' → logprob: -12.93846607208252
    7. '   ' → logprob: -13.31346607208252
    8. '+=' → logprob: -13.68846607208252
    9. '[]' → logprob: -14.18846607208252
    10. '[:]' → logprob: -14.93846607208252

Token 597: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42921945452690125
    2. '[]
' → logprob: -1.6792194843292236
    3. '[list' → logprob: -1.9292194843292236
    4. '[]' → logprob: -4.1792192459106445
    5. '[' → logprob: -7.1792192459106445
    6. '[int' → logprob: -7.4292192459106445
    7. '[]

' → logprob: -8.179219245910645
    8. ' list' → logprob: -8.804219245910645
    9. '[
' → logprob: -10.429219245910645
    10. '[List' → logprob: -10.929219245910645

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01529854629188776
    2. 'for' → logprob: -4.265298366546631
    3. ' for' → logprob: -6.890298366546631
    4. '       ' → logprob: -9.515298843383789
    5. '<|end|>' → logprob: -11.015298843383789
    6. '<|end|>' → logprob: -11.765298843383789
    7. '   ' → logprob: -12.390298843383789
    8. '               ' → logprob: -12.390298843383789
    9. '	       ' → logprob: -13.015298843383789
    10. '
' → logprob: -13.765298843383789

Token 599: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0034374422393739223
    2. 'while' → logprob: -5.753437519073486
    3. ' for' → logprob: -9.503437042236328
    4. 'm' → logprob: -10.003437042236328
    5. 'count' → logprob: -10.253437042236328
    6. 'length' → logprob: -10.628437042236328
    7. 'num' → logprob: -10.753437042236328
    8. 'dice' → logprob: -10.753437042236328
    9. '           ' → logprob: -10.878437042236328
    10. 'line' → logprob: -12.503437042236328

Token 600: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8908587662735954e-05
    2. ' _' → logprob: -11.000019073486328
    3. '_i' → logprob: -13.250019073486328
    4. '_j' → logprob: -15.625019073486328
    5. '_
' → logprob: -15.750019073486328
    6. '__' → logprob: -17.750019073486328
    7. '_

' → logprob: -17.875019073486328
    8. '_in' → logprob: -17.875019073486328
    9. 'i' → logprob: -18.250019073486328
    10. '_throw' → logprob: -18.375019073486328

Token 601: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002516839886084199
    2. ' in' → logprob: -8.375251770019531
    3. 'in' → logprob: -11.375251770019531
    4. ' _' → logprob: -12.250251770019531
    5. '_range' → logprob: -13.500251770019531
    6. '_
' → logprob: -13.750251770019531
    7. '_in' → logprob: -14.375251770019531
    8. 'range' → logprob: -14.625251770019531
    9. 'i' → logprob: -15.000251770019531
    10. '...' → logprob: -15.250251770019531

Token 602: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4770697355270386
    2. 'range' → logprob: -1.2270697355270386
    3. ' range' → logprob: -2.477069854736328
    4. '_range' → logprob: -6.102069854736328
    5. ' in' → logprob: -11.352069854736328
    6. '(range' → logprob: -12.477069854736328
    7. 'in' → logprob: -13.102069854736328
    8. '	range' → logprob: -13.102069854736328
    9. '
' → logprob: -13.727069854736328
    10. '_in' → logprob: -14.602069854736328

Token 603: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007618221454322338
    2. '(m' → logprob: -4.882618427276611
    3. ' m' → logprob: -12.632617950439453
    4. ' (' → logprob: -12.632617950439453
    5. '           ' → logprob: -13.382617950439453
    6. '(' → logprob: -13.882617950439453
    7. '   ' → logprob: -13.882617950439453
    8. '       ' → logprob: -14.757617950439453
    9. '	m' → logprob: -14.757617950439453
    10. '               ' → logprob: -15.382617950439453

Token 604: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9354889392852783
    2. '               ' → logprob: -1.1854889392852783
    3. ':
' → logprob: -1.3104889392852783
    4. ':' → logprob: -4.060488700866699
    5. '           ' → logprob: -5.560488700866699
    6. '):' → logprob: -5.935488700866699
    7. '                   ' → logprob: -6.185488700866699
    8. '():
' → logprob: -6.810488700866699
    9. ':int' → logprob: -7.060488700866699
    10. '   ' → logprob: -7.185488700866699

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023411201313138008
    2. 'dice' → logprob: -3.898411273956299
    3. '           ' → logprob: -6.523411273956299
    4. '   ' → logprob: -7.148411273956299
    5. ' dice' → logprob: -8.02341079711914
    6. '       ' → logprob: -9.27341079711914
    7. '	           ' → logprob: -10.14841079711914
    8. 'd' → logprob: -10.64841079711914
    9. '<|end|>' → logprob: -10.64841079711914
    10. '                   ' → logprob: -11.14841079711914

Token 606: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' (adapté à ' dice') → logprob: -4.60414821645827e-06
    2. '               ' → logprob: -12.875004768371582
    3. '                   ' → logprob: -13.500004768371582
    4. ' dice' → logprob: -14.500004768371582
    5. 'd' → logprob: -17.250003814697266
    6. '           ' → logprob: -17.375003814697266
    7. 'deque' → logprob: -18.125003814697266
    8. '   ' → logprob: -19.125003814697266
    9. '
' → logprob: -19.375003814697266
    10. 'digits' → logprob: -19.875003814697266

Token 607: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.171581091824919e-05
    2. 'throws' → logprob: -9.62507152557373
    3. '.append' → logprob: -12.62507152557373
    4. '_throw' → logprob: -13.62507152557373
    5. 'value' → logprob: -15.75007152557373
    6. '=' → logprob: -15.87507152557373
    7. 'd' → logprob: -16.125072479248047
    8. '.' → logprob: -16.625072479248047
    9. ' throws' → logprob: -16.750072479248047
    10. 's' → logprob: -17.000072479248047

Token 608: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.000561373308300972
    2. '_' → logprob: -7.500561237335205
    3. 'append' → logprob: -12.625561714172363
    4. 'throw' → logprob: -13.000561714172363
    5. '_throw' → logprob: -14.625561714172363
    6. '.append' → logprob: -14.750561714172363
    7. 'puts' → logprob: -14.875561714172363
    8. 'Throws' → logprob: -14.875561714172363
    9. '_th' → logprob: -14.875561714172363
    10. ' throws' → logprob: -15.500561714172363

Token 609: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.1186566047836095e-05
    2. 'append' → logprob: -10.500031471252441
    3. '.' → logprob: -12.625031471252441
    4. '(int' → logprob: -16.125030517578125
    5. ' .' → logprob: -16.500030517578125
    6. '           ' → logprob: -16.625030517578125
    7. '=int' → logprob: -17.000030517578125
    8. 'int' → logprob: -17.750030517578125
    9. 'Append' → logprob: -18.500030517578125
    10. '[int' → logprob: -18.875030517578125

Token 610: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07889331132173538
    2. 'int' → logprob: -2.5788934230804443
    3. '[int' → logprob: -13.453893661499023
    4. ' int' → logprob: -13.578893661499023
    5. '=int' → logprob: -14.828893661499023
    6. '<int' → logprob: -14.953893661499023
    7. ':int' → logprob: -16.453893661499023
    8. '   ' → logprob: -17.078893661499023
    9. '	int' → logprob: -17.453893661499023
    10. ',int' → logprob: -19.203893661499023

Token 611: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -9.639096970204264e-05
    2. 'lines' → logprob: -9.250096321105957
    3. ' lines' → logprob: -15.750096321105957
    4. '	lines' → logprob: -18.125097274780273
    5. ')' → logprob: -21.500097274780273
    6. '(' → logprob: -21.500097274780273
    7. '.lines' → logprob: -21.625097274780273
    8. '```' → logprob: -21.750097274780273
    9. '(line' → logprob: -22.000097274780273
    10. '(
' → logprob: -22.125097274780273

Token 612: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.3731938600540161
    2. '[' → logprob: -1.3731938600540161
    3. '(lines' → logprob: -2.8731937408447266
    4. 'lines' → logprob: -6.498193740844727
    5. ' lines' → logprob: -9.998193740844727
    6. 'idx' → logprob: -10.248193740844727
    7. '	lines' → logprob: -10.498193740844727
    8. '```' → logprob: -11.373193740844727
    9. ')[' → logprob: -12.123193740844727
    10. ')' → logprob: -12.623193740844727

Token 613: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.27944010496139526
    2. '))
' → logprob: -1.65444016456604
    3. ')' → logprob: -3.02944016456604
    4. ')
' → logprob: -5.529439926147461
    5. '])' → logprob: -9.279439926147461
    6. '           ' → logprob: -9.779439926147461
    7. '       ' → logprob: -10.529439926147461
    8. '])
' → logprob: -10.529439926147461
    9. '))
' → logprob: -10.779439926147461
    10. '               ' → logprob: -10.779439926147461

Token 614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12765853106975555
    2. '           ' → logprob: -2.1276586055755615
    3. '       ' → logprob: -8.00265884399414
    4. 'idx' → logprob: -8.87765884399414
    5. '                   ' → logprob: -9.25265884399414
    6. '   ' → logprob: -10.00265884399414
    7. '<|end|>' → logprob: -10.50265884399414
    8. '              ' → logprob: -10.75265884399414
    9. '```' → logprob: -11.25265884399414
    10. '             ' → logprob: -11.62765884399414

Token 615: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -8.77627644513268e-06
    2. ' idx' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.625008583068848
    4. '               ' → logprob: -15.000008583068848
    5. '	idx' → logprob: -16.875009536743164
    6. '_idx' → logprob: -19.250009536743164
    7. '[idx' → logprob: -19.500009536743164
    8. '                   ' → logprob: -20.125009536743164
    9. '(idx' → logprob: -20.375009536743164
    10. '       ' → logprob: -20.375009536743164

Token 616: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002478273818269372
    2. ' +=' → logprob: -6.002478122711182
    3. '+' → logprob: -13.12747859954834
    4. ']+=' → logprob: -14.62747859954834
    5. '=' → logprob: -16.002477645874023
    6. '```' → logprob: -18.252477645874023
    7. '+='' → logprob: -18.877477645874023
    8. '++' → logprob: -19.252477645874023
    9. '           ' → logprob: -19.377477645874023
    10. '+="' → logprob: -20.002477645874023

Token 617: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.500003814697266
    4. '１' → logprob: -20.750003814697266
    5. '```' → logprob: -20.875003814697266
    6. '
' → logprob: -21.875003814697266
    7. '۱' → logprob: -22.625003814697266
    8. '           ' → logprob: -22.875003814697266
    9. '=' → logprob: -23.187503814697266
    10. '+' → logprob: -23.187503814697266

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -20.5
    4. '１' → logprob: -21.0
    5. '
' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. '۱' → logprob: -22.375
    8. '0' → logprob: -22.5
    9. '+' → logprob: -23.25
    10. '१' → logprob: -23.375

Token 619: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14429213106632233
    2. '       ' → logprob: -2.269292116165161
    3. '<|end|>' → logprob: -4.14429235458374
    4. '
' → logprob: -4.26929235458374
    5. 'self' → logprob: -7.64429235458374
    6. '            
' → logprob: -8.769291877746582
    7. '<|end|>' → logprob: -9.144291877746582
    8. ' self' → logprob: -9.269291877746582
    9. '        
' → logprob: -9.894291877746582
    10. 'return' → logprob: -10.019291877746582

Token 620: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3524453341960907
    2. '           ' → logprob: -1.227445363998413
    3. 'self' → logprob: -5.727445125579834
    4. '
' → logprob: -7.477445125579834
    5. '   ' → logprob: -9.477445602416992
    6. ' self' → logprob: -9.602445602416992
    7. '<|end|>' → logprob: -11.852445602416992
    8. '```' → logprob: -12.477445602416992
    9. 'return' → logprob: -12.852445602416992
    10. '               ' → logprob: -13.102445602416992

Token 621: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03824975714087486
    2. '           ' → logprob: -3.2882497310638428
    3. ' self' → logprob: -8.538249969482422
    4. '       ' → logprob: -11.413249969482422
    5. '
' → logprob: -14.538249969482422
    6. '   ' → logprob: -14.913249969482422
    7. '	self' → logprob: -16.038249969482422
    8. '```' → logprob: -16.788249969482422
    9. '(self' → logprob: -17.163249969482422
    10. 'game' → logprob: -17.163249969482422

Token 622: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.03804194927215576
    2. 'datasets' → logprob: -3.2880420684814453
    3. '.datas' → logprob: -15.288042068481445
    4. ' datasets' → logprob: -16.163042068481445
    5. '.data' → logprob: -16.913042068481445
    6. ' .' → logprob: -17.163042068481445
    7. 'atasets' → logprob: -17.163042068481445
    8. '.dataset' → logprob: -17.663042068481445
    9. '.' → logprob: -18.663042068481445
    10. '.devices' → logprob: -18.788042068481445

Token 623: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.87502670288086
    3. '.extend' → logprob: -12.75002670288086
    4. ' .' → logprob: -13.12502670288086
    5. '.setdefault' → logprob: -14.00002670288086
    6. '           ' → logprob: -14.62502670288086
    7. '.py' → logprob: -14.75002670288086
    8. '.app' → logprob: -15.25002670288086
    9. '.add' → logprob: -15.37502670288086
    10. '.Append' → logprob: -15.50002670288086

Token 624: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007207724265754223
    2. '(' → logprob: -7.250720977783203
    3. '(c' → logprob: -11.625720977783203
    4. ' (' → logprob: -14.250720977783203
    5. '(
' → logprob: -15.125720977783203
    6. '(tuple' → logprob: -15.125720977783203
    7. '(d' → logprob: -15.250720977783203
    8. ' ((' → logprob: -15.500720977783203
    9. '({'' → logprob: -16.125720977783203
    10. '({
' → logprob: -16.375720977783203

Token 625: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036386766005307436
    2. 'cells' → logprob: -5.628638744354248
    3. ' n' → logprob: -10.75363826751709
    4. '(n' → logprob: -11.50363826751709
    5. ' cells' → logprob: -12.12863826751709
    6. '
' → logprob: -14.00363826751709
    7. '   ' → logprob: -16.003639221191406
    8. '[n' → logprob: -16.003639221191406
    9. ')n' → logprob: -16.378639221191406
    10. '(' → logprob: -16.378639221191406

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005324954632669687
    2. ',m' → logprob: -5.255324840545654
    3. ' ,' → logprob: -9.380325317382812
    4. 'm' → logprob: -12.380325317382812
    5. ',
' → logprob: -13.130325317382812
    6. '[' → logprob: -15.505325317382812
    7. '<|end|>' → logprob: -16.630325317382812
    8. ',n' → logprob: -17.255325317382812
    9. '
' → logprob: -17.380325317382812
    10. '[m' → logprob: -17.505325317382812

Token 627: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014166918583214283
    2. ' m' → logprob: -4.264166831970215
    3. '           ' → logprob: -13.014166831970215
    4. '   ' → logprob: -15.014166831970215
    5. '    ' → logprob: -15.389166831970215
    6. '            ' → logprob: -15.764166831970215
    7. 'cells' → logprob: -15.889166831970215
    8. '	m' → logprob: -16.51416778564453
    9. ' ' → logprob: -16.88916778564453
    10. '          ' → logprob: -17.01416778564453

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011009939044015482
    2. ',c' → logprob: -9.625109672546387
    3. ' ,' → logprob: -10.125109672546387
    4. ',
' → logprob: -12.500109672546387
    5. '
' → logprob: -16.000110626220703
    6. '       ' → logprob: -17.875110626220703
    7. ',d' → logprob: -18.000110626220703
    8. '),' → logprob: -18.375110626220703
    9. '           ' → logprob: -18.625110626220703
    10. '   ' → logprob: -19.250110626220703

Token 629: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0007099286303855479
    2. ' cells' → logprob: -7.2507100105285645
    3. 'cell' → logprob: -17.625709533691406
    4. '.cells' → logprob: -17.875709533691406
    5. 'Cells' → logprob: -19.000709533691406
    6. '   ' → logprob: -19.125709533691406
    7. 'c' → logprob: -19.500709533691406
    8. '_cells' → logprob: -19.750709533691406
    9. '           ' → logprob: -20.000709533691406
    10. '               ' → logprob: -20.500709533691406

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003472633252386004
    2. ',d' → logprob: -8.000347137451172
    3. ' ,' → logprob: -11.875347137451172
    4. ',
' → logprob: -12.250347137451172
    5. ',

' → logprob: -17.500347137451172
    6. '   ' → logprob: -17.875347137451172
    7. '       ' → logprob: -18.500347137451172
    8. '[' → logprob: -18.625347137451172
    9. ',c' → logprob: -18.625347137451172
    10. '‌,' → logprob: -18.875347137451172

Token 631: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.006715728435665369
    2. ' dice' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.006715774536133
    4. '   ' → logprob: -16.631715774536133
    5. 'd' → logprob: -16.881715774536133
    6. 'Dice' → logprob: -17.256715774536133
    7. '     ' → logprob: -18.006715774536133
    8. '    ' → logprob: -18.006715774536133
    9. 'dic' → logprob: -18.381715774536133
    10. '           ' → logprob: -18.506715774536133

Token 632: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. 'throws' → logprob: -14.000000953674316
    3. '_throw' → logprob: -16.75
    4. ')' → logprob: -18.5
    5. ')_' → logprob: -19.25
    6. 'Throws' → logprob: -19.875
    7. '_
' → logprob: -19.875
    8. '_)' → logprob: -20.125
    9. ' _' → logprob: -20.125
    10. '```' → logprob: -20.75

Token 633: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -1.4378848391061183e-05
    2. '_' → logprob: -12.375014305114746
    3. 'throw' → logprob: -12.500014305114746
    4. ' throws' → logprob: -13.125014305114746
    5. 'Throws' → logprob: -13.250014305114746
    6. 'th' → logprob: -13.250014305114746
    7. '_throw' → logprob: -14.500014305114746
    8. ' Throws' → logprob: -16.625015258789062
    9. '_th' → logprob: -16.875015258789062
    10. 'thor' → logprob: -17.000015258789062

Token 634: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06698361784219742
    2. ')' → logprob: -2.816983699798584
    3. '))
' → logprob: -5.316983699798584
    4. ')
' → logprob: -9.441983222961426
    5. '       ' → logprob: -11.316983222961426
    6. '           ' → logprob: -13.066983222961426
    7. ')))' → logprob: -13.816983222961426
    8. '   ' → logprob: -15.066983222961426
    9. '))
' → logprob: -15.191983222961426
    10. ')}' → logprob: -15.691983222961426

Token 635: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44842207431793213
    2. 'def' → logprob: -1.0734220743179321
    3. '<|end|>' → logprob: -4.198421955108643
    4. 'from' → logprob: -5.573421955108643
    5. ' def' → logprob: -8.0734224319458
    6. '#' → logprob: -9.1984224319458
    7. '<|end|>' → logprob: -9.3234224319458
    8. 'if' → logprob: -9.8234224319458
    9. '```' → logprob: -10.1984224319458
    10. '
' → logprob: -10.5734224319458

Token 636: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.0011986821191385388
    2. ' Sug' → logprob: -6.876198768615723
    3. 'Main' → logprob: -9.126198768615723
    4. 'Program' → logprob: -10.626198768615723
    5. 'Solution' → logprob: -11.001198768615723
    6. 'Solver' → logprob: -12.251198768615723
    7. 'Runner' → logprob: -12.376198768615723
    8. 'Test' → logprob: -13.626198768615723
    9. 'main' → logprob: -13.751198768615723
    10. 'Sugar' → logprob: -13.751198768615723

Token 637: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -2.935296834039036e-06
    2. 'oru' → logprob: -12.87500286102295
    3. 'ar' → logprob: -16.250003814697266
    4. 'Or' → logprob: -16.875003814697266
    5. 'roku' → logprob: -16.875003814697266
    6. ' or' → logprob: -17.875003814697266
    7. 'ork' → logprob: -18.375003814697266
    8. 'ор' → logprob: -18.625003814697266
    9. '```' → logprob: -18.750003814697266
    10. 'oku' → logprob: -19.250003814697266

Token 638: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -7.896309739408025e-07
    2. 'Oku' → logprob: -15.000000953674316
    3. 'oki' → logprob: -16.0
    4. 'roku' → logprob: -16.25
    5. 'ok' → logprob: -16.375
    6. 'оку' → logprob: -17.5
    7. 'okus' → logprob: -18.0
    8. ' oku' → logprob: -18.125
    9. 'oru' → logprob: -18.375
    10. 'o' → logprob: -18.625

Token 639: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.27478012442588806
    2. 'Game' → logprob: -2.399780035018921
    3. 'Runner' → logprob: -2.399780035018921
    4. 'Simulator' → logprob: -4.0247802734375
    5. 'Printer' → logprob: -5.0247802734375
    6. 'App' → logprob: -5.1497802734375
    7. 'Main' → logprob: -5.1497802734375
    8. 'Solution' → logprob: -5.2747802734375
    9. 'Output' → logprob: -5.2747802734375
    10. 'Processor' → logprob: -5.2747802734375

Token 640: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14306330680847168
    2. ':
' → logprob: -2.0180633068084717
    3. '(S' → logprob: -8.01806354522705
    4. ':

' → logprob: -10.51806354522705
    5. '<|end|>' → logprob: -12.14306354522705
    6. '```' → logprob: -12.64306354522705
    7. '():
' → logprob: -12.64306354522705
    8. '):
' → logprob: -13.01806354522705
    9. '(' → logprob: -13.01806354522705
    10. ':
' → logprob: -13.14306354522705

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01490542758256197
    2. ' def' → logprob: -4.3899054527282715
    3. 'def' → logprob: -6.5149054527282715
    4. 'class' → logprob: -7.1399054527282715
    5. ' class' → logprob: -9.639904975891113
    6. '```' → logprob: -10.514904975891113
    7. '<|end|>' → logprob: -12.014904975891113
    8. '    ' → logprob: -12.764904975891113
    9. ' ' → logprob: -12.889904975891113
    10. '
' → logprob: -13.389904975891113

Token 642: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02359960973262787
    2. ' def' → logprob: -3.773599624633789
    3. '   ' → logprob: -8.523599624633789
    4. '@' → logprob: -8.773599624633789
    5. ' @' → logprob: -14.523599624633789
    6. 'class' → logprob: -17.14859962463379
    7. '	def' → logprob: -17.77359962463379
    8. 'from' → logprob: -18.77359962463379
    9. ' ' → logprob: -19.27359962463379
    10. 'staticmethod' → logprob: -19.77359962463379

Token 643: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2063353806734085
    2. 'def' → logprob: -2.3313353061676025
    3. ' __' → logprob: -2.8313353061676025
    4. 'staticmethod' → logprob: -3.5813353061676025
    5. '__' → logprob: -6.206335544586182
    6. 'classmethod' → logprob: -8.206335067749023
    7. 'init' → logprob: -9.206335067749023
    8. '   ' → logprob: -10.581335067749023
    9. '  ' → logprob: -10.831335067749023
    10. 'object' → logprob: -11.206335067749023

Token 644: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1517960956552997e-05
    2. 'def' → logprob: -11.500011444091797
    3. '(init' → logprob: -14.000011444091797
    4. '_init' → logprob: -15.375011444091797
    5. ' init' → logprob: -15.875011444091797
    6. '__' → logprob: -17.625011444091797
    7. 'new' → logprob: -17.875011444091797
    8. 'class' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.125011444091797
    10. 'name' → logprob: -18.875011444091797

Token 645: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11311947554349899
    2. '(self' → logprob: -2.23811936378479
    3. '   ' → logprob: -9.363119125366211
    4. '_(' → logprob: -9.488119125366211
    5. 'self' → logprob: -10.113119125366211
    6. '__(
' → logprob: -10.113119125366211
    7. '(' → logprob: -10.863119125366211
    8. '__' → logprob: -11.488119125366211
    9. '       ' → logprob: -11.738119125366211
    10. ' (' → logprob: -12.488119125366211

Token 646: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5213274309644476e-05
    2. '):
' → logprob: -12.000015258789062
    3. '       ' → logprob: -12.500015258789062
    4. ')' → logprob: -13.125015258789062
    5. '
' → logprob: -13.375015258789062
    6. '   ' → logprob: -14.000015258789062
    7. ' self' → logprob: -14.125015258789062
    8. 's' → logprob: -17.250015258789062
    9. '(self' → logprob: -17.500015258789062
    10. ',' → logprob: -17.625015258789062

Token 647: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003577618859708309
    2. '):
' → logprob: -6.628577709197998
    3. 'self' → logprob: -6.753577709197998
    4. '):' → logprob: -7.003577709197998
    5. '       ' → logprob: -9.87857723236084
    6. '(self' → logprob: -10.00357723236084
    7. '   ' → logprob: -10.37857723236084
    8. ',self' → logprob: -10.62857723236084
    9. ')' → logprob: -11.75357723236084
    10. ' ,' → logprob: -12.62857723236084

Token 648: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.171581091824919e-05
    2. '       ' → logprob: -9.75007152557373
    3. '   ' → logprob: -11.50007152557373
    4. ' self' → logprob: -13.25007152557373
    5. '(self' → logprob: -14.00007152557373
    6. '
' → logprob: -15.25007152557373
    7. '	self' → logprob: -15.62507152557373
    8. 'def' → logprob: -16.750072479248047
    9. 's' → logprob: -17.000072479248047
    10. ' ' → logprob: -17.000072479248047

Token 649: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22216661274433136
    2. 'self' (adapté à ' self') → logprob: -1.722166657447815
    3. 'def' → logprob: -4.472166538238525
    4. 'pass' → logprob: -4.972166538238525
    5. ' self' → logprob: -6.847166538238525
    6. '   ' → logprob: -7.222166538238525
    7. ' pass' → logprob: -8.597167015075684
    8. 'class' → logprob: -8.722167015075684
    9. '(self' → logprob: -11.097167015075684
    10. ' def' → logprob: -11.597167015075684

Token 650: '.parser' (ID: 50244)
  Prédit: '.results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.18922002613544464
    2. '.games' → logprob: -2.4392199516296387
    3. 'results' → logprob: -2.9392199516296387
    4. '.parser' → logprob: -4.064219951629639
    5. '.outputs' → logprob: -5.189219951629639
    6. '.input' → logprob: -6.564219951629639
    7. '.factory' → logprob: -6.564219951629639
    8. 'parser' → logprob: -6.564219951629639
    9. '.inputs' → logprob: -6.814219951629639
    10. 'games' → logprob: -7.064219951629639

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5254836082458496
    2. ' =' → logprob: -0.9004836082458496
    3. '.' → logprob: -6.40048360824585
    4. '<|end|>' → logprob: -8.150484085083008
    5. '.parse' → logprob: -8.525484085083008
    6. '=parse' → logprob: -10.150484085083008
    7. ')' → logprob: -10.400484085083008
    8. '=None' → logprob: -10.775484085083008
    9. '<|end|>' → logprob: -10.775484085083008
    10. '.=' → logprob: -11.025484085083008

Token 652: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -1.5048530030981055e-06
    2. ' Sug' → logprob: -13.500001907348633
    3. 'Sugar' → logprob: -16.750001907348633
    4. 'S' → logprob: -21.000001907348633
    5. 'Sud' → logprob: -22.250001907348633
    6. 'Suc' → logprob: -22.875001907348633
    7. 'Sul' → logprob: -23.875001907348633
    8. 'Sag' → logprob: -23.875001907348633
    9. '   ' → logprob: -24.000001907348633
    10. 'Suggest' → logprob: -24.250001907348633

Token 653: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.128163257315464e-07
    2. ' or' → logprob: -15.875
    3. 'oru' → logprob: -17.25
    4. 'ор' → logprob: -17.75
    5. '(or' → logprob: -17.75
    6. '
' → logprob: -18.75
    7. '```' → logprob: -19.0
    8. '<' → logprob: -19.375
    9. '[' → logprob: -19.5
    10. '#' → logprob: -19.5

Token 654: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0050559756346046925
    2. 'roku' → logprob: -5.880055904388428
    3. 'or' → logprob: -6.755055904388428
    4. 'oru' → logprob: -6.880055904388428
    5. 'ork' → logprob: -11.380056381225586
    6. 'ok' → logprob: -11.880056381225586
    7. '

' → logprob: -12.005056381225586
    8. '
' → logprob: -12.380056381225586
    9. '[' → logprob: -13.005056381225586
    10. '(' → logprob: -13.130056381225586

Token 655: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.981667537620524e-06
    2. 'Parser' → logprob: -13.750001907348633
    3. 'Board' → logprob: -14.375001907348633
    4. 'input' → logprob: -15.750001907348633
    5. '_input' → logprob: -16.750001907348633
    6. 'Solver' → logprob: -16.750001907348633
    7. '<Input' → logprob: -17.625001907348633
    8. 'INPUT' → logprob: -18.375001907348633
    9. '	Input' → logprob: -18.500001907348633
    10. ' Input' → logprob: -18.875001907348633

Token 656: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. '_parser' → logprob: -17.875
    3. 'parser' → logprob: -18.125
    4. '.Parser' → logprob: -19.375
    5. '-parser' → logprob: -19.875
    6. ' Parser' → logprob: -20.0
    7. '(Parser' → logprob: -20.0
    8. 'Processor' → logprob: -20.625
    9. 'Solver' → logprob: -20.75
    10. 'Parse' → logprob: -21.5

Token 657: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41142016649246216
    2. '
' → logprob: -1.7864201068878174
    3. '<|end|>' → logprob: -2.0364201068878174
    4. '<|end|>' → logprob: -4.0364203453063965
    5. 'def' → logprob: -4.2864203453063965
    6. '

' → logprob: -5.5364203453063965
    7. ' def' → logprob: -5.9114203453063965
    8. '	def' → logprob: -8.036419868469238
    9. '    
' → logprob: -8.161419868469238
    10. ' ' → logprob: -9.161419868469238

Token 658: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0029633231461048126
    2. '   ' → logprob: -6.002963542938232
    3. ' def' → logprob: -7.627963542938232
    4. '	def' → logprob: -14.377963066101074
    5. '```' → logprob: -16.00296401977539
    6. '
' → logprob: -16.12796401977539
    7. '<|end|>' → logprob: -17.00296401977539
    8. 'import' → logprob: -17.37796401977539
    9. 'from' → logprob: -17.50296401977539
    10. '<|end|>' → logprob: -18.37796401977539

Token 659: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.25
    3. '   ' → logprob: -17.75
    4. '	def' → logprob: -23.125
    5. '
' → logprob: -25.25
    6. 'async' → logprob: -25.25
    7. 'class' → logprob: -25.75
    8. 'de' → logprob: -25.875
    9. 'from' → logprob: -25.875
    10. 'import' → logprob: -26.125

Token 660: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.04872225597500801
    2. 'run' → logprob: -3.673722267150879
    3. ' solve' → logprob: -4.048722267150879
    4. 'parse' → logprob: -5.798722267150879
    5. ' run' → logprob: -6.548722267150879
    6. 'def' → logprob: -9.048722267150879
    7. ' parse' → logprob: -9.798722267150879
    8. 'main' → logprob: -10.923722267150879
    9. 'process' → logprob: -11.298722267150879
    10. '__' → logprob: -11.298722267150879

Token 661: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.75001335144043
    4. '       ' → logprob: -14.75001335144043
    5. 'self' → logprob: -14.87501335144043
    6. ' (' → logprob: -15.87501335144043
    7. 'def' → logprob: -17.37501335144043
    8. '(s' → logprob: -18.62501335144043
    9. '():
' → logprob: -19.00001335144043
    10. '():' → logprob: -19.00001335144043

Token 662: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8268391489982605
    2. '(self' → logprob: -1.3268392086029053
    3. '):
' → logprob: -1.9518392086029053
    4. 'self' → logprob: -2.0768392086029053
    5. '   ' → logprob: -4.076838970184326
    6. '       ' → logprob: -4.576838970184326
    7. ',' → logprob: -6.826838970184326
    8. ')' → logprob: -7.701838970184326
    9. ' self' → logprob: -8.201839447021484
    10. ' ' → logprob: -8.701839447021484

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003044802288059145
    2. '
' → logprob: -9.500304222106934
    3. 'self' → logprob: -9.625304222106934
    4. '```' → logprob: -9.750304222106934
    5. '   ' → logprob: -10.375304222106934
    6. '        
' → logprob: -11.125304222106934
    7. '()' → logprob: -11.500304222106934
    8. '(self' → logprob: -12.000304222106934
    9. 'import' → logprob: -12.125304222106934
    10. '#' → logprob: -12.125304222106934

Token 664: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01617489568889141
    2. '       ' → logprob: -4.266174793243408
    3. ' self' → logprob: -6.266174793243408
    4. 'for' → logprob: -9.766175270080566
    5. 'results' → logprob: -10.266175270080566
    6. '   ' → logprob: -11.391175270080566
    7. 'class' → logprob: -13.266175270080566
    8. 'import' → logprob: -13.516175270080566
    9. '
' → logprob: -14.391175270080566
    10. ' for' → logprob: -14.766175270080566

Token 665: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -3.4121114822482923e-06
    2. 'parser' → logprob: -12.875003814697266
    3. '.processor' → logprob: -14.875003814697266
    4. '	parser' → logprob: -15.750003814697266
    5. ' .' → logprob: -16.000003814697266
    6. '.' → logprob: -16.375003814697266
    7. '
' → logprob: -17.750003814697266
    8. '.serializer' → logprob: -17.875003814697266
    9. '.parsers' → logprob: -18.125003814697266
    10. '.parse' → logprob: -18.500003814697266

Token 666: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.37500286102295
    3. 'parse' → logprob: -14.12500286102295
    4. ' .' → logprob: -15.87500286102295
    5. '=parse' → logprob: -16.000001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '.parser' → logprob: -17.500001907348633
    8. '.load' → logprob: -17.750001907348633
    9. '.process' → logprob: -18.000001907348633
    10. '.perform' → logprob: -18.500001907348633

Token 667: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.128163257315464e-07
    2. 'all' → logprob: -15.5
    3. 'All' → logprob: -19.25
    4. '_ALL' → logprob: -22.5
    5. '	all' → logprob: -23.25
    6. '__' → logprob: -23.375
    7. '_' → logprob: -23.5
    8. '\' → logprob: -23.5
    9. '_and' → logprob: -23.75
    10. '_full' → logprob: -23.875

Token 668: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023727208375930786
    2. '()' → logprob: -4.6487274169921875
    3. 'for' → logprob: -4.7737274169921875
    4. '()
' → logprob: -5.5237274169921875
    5. '<|end|>' → logprob: -7.6487274169921875
    6. '
' → logprob: -7.7737274169921875
    7. ' for' → logprob: -7.8987274169921875
    8. '(' → logprob: -10.148727416992188
    9. '<|end|>' → logprob: -10.398727416992188
    10. '   ' → logprob: -10.648727416992188

Token 669: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.587087869644165
    2. '       ' → logprob: -0.837087869644165
    3. ' for' → logprob: -4.837087631225586
    4. 'results' → logprob: -5.962087631225586
    5. '   ' → logprob: -8.087087631225586
    6. 'outputs' → logprob: -9.212087631225586
    7. 'result' → logprob: -9.712087631225586
    8. '```' → logprob: -9.962087631225586
    9. 'output' → logprob: -10.087087631225586
    10. ' results' → logprob: -11.462087631225586

Token 670: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019329203059896827
    2. 'results' (adapté à ' results') → logprob: -6.2519330978393555
    3. '       ' → logprob: -13.251933097839355
    4. ' for' → logprob: -13.751933097839355
    5. 'outputs' → logprob: -13.751933097839355
    6. 'output' → logprob: -16.12693214416504
    7. 'result' → logprob: -16.25193214416504
    8. 'from' → logprob: -16.50193214416504
    9. 'answers' → logprob: -18.00193214416504
    10. 'import' → logprob: -18.12693214416504

Token 671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038048841059207916
    2. '=' → logprob: -3.28804874420166
    3. '=[]' → logprob: -12.16304874420166
    4. '   ' → logprob: -14.16304874420166
    5. '=[]
' → logprob: -14.28804874420166
    6. '[]' → logprob: -14.78804874420166
    7. ' ' → logprob: -15.41304874420166
    8. '.' → logprob: -16.663049697875977
    9. '.append' → logprob: -17.038049697875977
    10. ':' → logprob: -17.163049697875977

Token 672: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.31326553225517273
    2. '[]' → logprob: -1.3132655620574951
    3. '[]

' → logprob: -12.563265800476074
    4. ' []
' → logprob: -15.313265800476074
    5. '[' → logprob: -16.688264846801758
    6. ' []' → logprob: -17.063264846801758
    7. '[]"' → logprob: -18.563264846801758
    8. '[])
' → logprob: -18.688264846801758
    9. '[
' → logprob: -19.813264846801758
    10. '[])' → logprob: -21.563264846801758

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002434878144413233
    2. ' for' → logprob: -6.252434730529785
    3. 'for' → logprob: -7.627434730529785
    4. '<|end|>' → logprob: -12.002434730529785
    5. '   ' → logprob: -12.502434730529785
    6. '[' → logprob: -13.127434730529785
    7. '	' → logprob: -13.127434730529785
    8. '        
' → logprob: -13.877434730529785
    9. '	for' → logprob: -13.877434730529785
    10. ' ' → logprob: -14.502434730529785

Token 674: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012628522235900164
    2. ' for' → logprob: -7.251262664794922
    3. '       ' → logprob: -7.501262664794922
    4. '	for' → logprob: -15.251262664794922
    5. '   ' → logprob: -16.751262664794922
    6. '```' → logprob: -17.251262664794922
    7. '
' → logprob: -19.501262664794922
    8. '_for' → logprob: -20.126262664794922
    9. 'from' → logprob: -20.376262664794922
    10. '        
' → logprob: -21.001262664794922

Token 675: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14425858855247498
    2. ' n' → logprob: -3.019258499145508
    3. '(n' → logprob: -3.019258499145508
    4. ' (' → logprob: -4.394258499145508
    5. 'dataset' → logprob: -4.644258499145508
    6. 'self' → logprob: -5.019258499145508
    7. ' dataset' → logprob: -6.269258499145508
    8. '(self' → logprob: -6.394258499145508
    9. '   ' → logprob: -6.394258499145508
    10. '(_,' → logprob: -7.019258499145508

Token 676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004449347034096718
    2. 'in' → logprob: -5.754449367523193
    3. ',m' → logprob: -6.754449367523193
    4. ' in' → logprob: -9.254448890686035
    5. ',in' → logprob: -12.754448890686035
    6. ' ,' → logprob: -12.879448890686035
    7. 'm' → logprob: -13.504448890686035
    8. ',n' → logprob: -14.504448890686035
    9. ',
' → logprob: -14.629448890686035
    10. ',_' → logprob: -14.754448890686035

Token 677: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002475777640938759
    2. ' m' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.00247573852539
    4. '           ' → logprob: -17.87747573852539
    5. '       ' → logprob: -17.87747573852539
    6. '    ' → logprob: -18.25247573852539
    7. '        ' → logprob: -19.37747573852539
    8. ' ' → logprob: -19.62747573852539
    9. ',' → logprob: -20.25247573852539
    10. ',m' → logprob: -20.25247573852539

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.15310683415737e-05
    2. ',c' → logprob: -11.000021934509277
    3. ' ,' → logprob: -13.500021934509277
    4. ',n' → logprob: -13.750021934509277
    5. ',m' → logprob: -13.875021934509277
    6. ',d' → logprob: -14.375021934509277
    7. ',t' → logprob: -15.875021934509277
    8. '_,' → logprob: -16.25002098083496
    9. ',s' → logprob: -16.25002098083496
    10. ',w' → logprob: -16.62502098083496

Token 679: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.676292231422849e-05
    2. ' cells' → logprob: -11.000017166137695
    3. '.cells' → logprob: -20.125017166137695
    4. '   ' → logprob: -20.500017166137695
    5. 'c' → logprob: -21.500017166137695
    6. '_cells' → logprob: -22.375017166137695
    7. 'cell' → logprob: -22.625017166137695
    8. '       ' → logprob: -23.500017166137695
    9. 'cs' → logprob: -24.000017166137695
    10. '           ' → logprob: -24.375017166137695

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015979631280060858
    2. ',d' → logprob: -8.750160217285156
    3. ' ,' → logprob: -14.000160217285156
    4. 'd' → logprob: -15.375160217285156
    5. ',m' → logprob: -16.250160217285156
    6. '_,' → logprob: -16.500160217285156
    7. ',
' → logprob: -18.625160217285156
    8. 'dice' → logprob: -18.750160217285156
    9. '‌,' → logprob: -18.750160217285156
    10. '```' → logprob: -18.875160217285156

Token 681: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -1.1994775377388578e-05
    2. ' dice' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.625012397766113
    4. '       ' → logprob: -15.375012397766113
    5. '  ' → logprob: -16.750011444091797
    6. '    ' → logprob: -17.000011444091797
    7. ' ' → logprob: -17.000011444091797
    8. '     ' → logprob: -17.125011444091797
    9. 'dic' → logprob: -17.625011444091797
    10. '      ' → logprob: -17.625011444091797

Token 682: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.537868779967539e-06
    2. 'throws' → logprob: -12.250008583068848
    3. '       ' → logprob: -12.875008583068848
    4. '   ' → logprob: -14.875008583068848
    5. '           ' → logprob: -14.875008583068848
    6. ',' → logprob: -16.25000762939453
    7. '_throw' → logprob: -16.75000762939453
    8. '               ' → logprob: -17.25000762939453
    9. 's' → logprob: -17.37500762939453
    10. '```' → logprob: -17.50000762939453

Token 683: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -1.3306015716807451e-05
    2. '_' → logprob: -11.25001335144043
    3. ' throws' → logprob: -15.62501335144043
    4. 'throw' → logprob: -16.87501335144043
    5. 'Throws' → logprob: -17.87501335144043
    6. '_throw' → logprob: -17.87501335144043
    7. '
' → logprob: -18.00001335144043
    8. '	throws' → logprob: -18.00001335144043
    9. 'raises' → logprob: -18.12501335144043
    10. '```' → logprob: -18.12501335144043

Token 684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02324792370200157
    2. 'in' → logprob: -3.7732479572296143
    3. '       ' → logprob: -14.023247718811035
    4. ',' → logprob: -14.648247718811035
    5. '   ' → logprob: -15.148247718811035
    6. '	in' → logprob: -15.523247718811035
    7. '        ' → logprob: -15.648247718811035
    8. '_in' → logprob: -15.898247718811035
    9. 'import' → logprob: -16.52324867248535
    10. 'In' → logprob: -16.52324867248535

Token 685: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '[self' → logprob: -15.875075340270996
    4. '(self' → logprob: -17.62507438659668
    5. '       ' → logprob: -18.75007438659668
    6. '[' → logprob: -18.87507438659668
    7. '   ' → logprob: -19.00007438659668
    8. '
' → logprob: -19.37507438659668
    9. '           ' → logprob: -19.87507438659668
    10. ' ' → logprob: -21.12507438659668

Token 686: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.0699656680226326
    2. 'parser' → logprob: -2.6949656009674072
    3. '	parser' → logprob: -11.194965362548828
    4. 'datasets' → logprob: -11.944965362548828
    5. '(parser' → logprob: -12.569965362548828
    6. '
' → logprob: -12.944965362548828
    7. ' parser' → logprob: -14.069965362548828
    8. '.datasets' → logprob: -14.319965362548828
    9. '/parser' → logprob: -14.444965362548828
    10. 's' → logprob: -15.069965362548828

Token 687: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -2.2961512513575144e-05
    2. 'datasets' → logprob: -10.750022888183594
    3. '.dataset' → logprob: -13.750022888183594
    4. '.datas' → logprob: -15.875022888183594
    5. '.results' → logprob: -15.875022888183594
    6. ' .' → logprob: -16.750022888183594
    7. ' datasets' → logprob: -17.250022888183594
    8. '.' → logprob: -18.375022888183594
    9. '
' → logprob: -18.875022888183594
    10. '._' → logprob: -18.875022888183594

Token 688: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31447818875312805
    2. ':' → logprob: -1.3144781589508057
    3. '           ' → logprob: -7.939478397369385
    4. ',' → logprob: -8.064477920532227
    5. '       ' → logprob: -8.314477920532227
    6. '):
' → logprob: -8.564477920532227
    7. '():
' → logprob: -10.064477920532227
    8. ':

' → logprob: -10.939477920532227
    9. '<|end|>' → logprob: -11.189477920532227
    10. '<|end|>' → logprob: -11.689477920532227

Token 689: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10028624534606934
    2. '       ' → logprob: -2.3502862453460693
    3. '```' → logprob: -10.850286483764648
    4. 'game' → logprob: -11.100286483764648
    5. ' game' → logprob: -11.225286483764648
    6. '               ' → logprob: -12.475286483764648
    7. '        ' → logprob: -12.725286483764648
    8. ',' → logprob: -12.850286483764648
    9. '          ' → logprob: -12.850286483764648
    10. '   ' → logprob: -12.975286483764648

Token 690: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' (adapté à ' game') → logprob: -0.06777452677488327
    2. 'try' → logprob: -3.317774534225464
    3. '           ' → logprob: -3.817774534225464
    4. ' game' → logprob: -5.192774295806885
    5. '               ' → logprob: -6.817774295806885
    6. ' try' → logprob: -7.317774295806885
    7. '_game' → logprob: -14.192774772644043
    8. '   ' → logprob: -14.317774772644043
    9. '```' → logprob: -14.567774772644043
    10. '	game' → logprob: -14.692774772644043

Token 691: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. '＝' → logprob: -16.813261032104492
    4. '=
' → logprob: -18.438261032104492
    5. ' ' → logprob: -18.813261032104492
    6. '.' → logprob: -19.188261032104492
    7. ')' → logprob: -19.188261032104492
    8. '.=' → logprob: -19.438261032104492
    9. ':' → logprob: -19.813261032104492
    10. ' =
' → logprob: -20.063261032104492

Token 692: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -1.318681188422488e-05
    2. ' Sug' → logprob: -11.25001335144043
    3. 'Sugar' → logprob: -16.50001335144043
    4. 'Suc' → logprob: -22.12501335144043
    5. '           ' → logprob: -22.37501335144043
    6. 'S' → logprob: -22.50001335144043
    7. '   ' → logprob: -23.87501335144043
    8. 'Sud' → logprob: -24.50001335144043
    9. '       ' → logprob: -25.25001335144043
    10. '	S' → logprob: -26.00001335144043

Token 693: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.2664456789934775e-06
    2. 'oru' → logprob: -15.125000953674316
    3. 'Or' → logprob: -15.500000953674316
    4. 'ar' → logprob: -15.500000953674316
    5. 'ор' → logprob: -16.000001907348633
    6. 'Sor' → logprob: -16.500001907348633
    7. '[' → logprob: -16.875001907348633
    8. '(or' → logprob: -17.000001907348633
    9. 'S' → logprob: -17.125001907348633
    10. '>' → logprob: -17.375001907348633

Token 694: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.01195924449712038
    2. 'roku' → logprob: -4.761959075927734
    3. 'or' → logprob: -5.761959075927734
    4. 'oru' → logprob: -9.136959075927734
    5. '[' → logprob: -11.136959075927734
    6. 'ork' → logprob: -11.261959075927734
    7. 'ok' → logprob: -11.261959075927734
    8. '```' → logprob: -12.386959075927734
    9. '
' → logprob: -12.636959075927734
    10. 'оку' → logprob: -12.886959075927734

Token 695: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.007613844238221645
    2. 'Game' → logprob: -4.882613658905029
    3. 'game' → logprob: -12.882614135742188
    4. 'factory' → logprob: -12.882614135742188
    5. 'Fact' → logprob: -13.757614135742188
    6. 'Solver' → logprob: -14.507614135742188
    7. 'Factor' → logprob: -14.632614135742188
    8. 'Board' → logprob: -15.257614135742188
    9. '_factory' → logprob: -15.757614135742188
    10. 'FACT' → logprob: -16.757614135742188

Token 696: '.create' (ID: 3916)
  Prédit: '.create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.create' → logprob: -0.00034297199454158545
    2. '.' → logprob: -8.000343322753906
    3. '           ' → logprob: -12.375343322753906
    4. '().' → logprob: -13.875343322753906
    5. 'create' → logprob: -13.875343322753906
    6. ' .' → logprob: -14.500343322753906
    7. '               ' → logprob: -15.250343322753906
    8. '=create' → logprob: -15.625343322753906
    9. '#create' → logprob: -16.000343322753906
    10. '```' → logprob: -16.375343322753906

Token 697: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -1.9504606825648807e-05
    2. 'game' → logprob: -11.125019073486328
    3. 'Game' → logprob: -12.375019073486328
    4. '_Game' → logprob: -15.000019073486328
    5. '(game' → logprob: -15.375019073486328
    6. '_games' → logprob: -18.000019073486328
    7. '<Game' → logprob: -18.375019073486328
    8. '_GAME' → logprob: -18.375019073486328
    9. ' game' → logprob: -18.500019073486328
    10. '```' → logprob: -18.500019073486328

Token 698: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3856492842023727e-06
    2. '           ' → logprob: -14.875000953674316
    3. '(' → logprob: -15.250000953674316
    4. 'game' → logprob: -15.375000953674316
    5. '(
' → logprob: -15.500000953674316
    6. ' (' → logprob: -15.750000953674316
    7. '               ' → logprob: -16.625001907348633
    8. 'Game' → logprob: -17.375001907348633
    9. '(game' → logprob: -17.375001907348633
    10. 'n' → logprob: -17.500001907348633

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036461607087403536
    2. ',m' → logprob: -5.628646373748779
    3. ' ,' → logprob: -10.253645896911621
    4. 'm' → logprob: -12.253645896911621
    5. '           ' → logprob: -12.503645896911621
    6. '(m' → logprob: -14.253645896911621
    7. ',
' → logprob: -14.253645896911621
    8. '               ' → logprob: -15.253645896911621
    9. ',p' → logprob: -15.253645896911621
    10. ',M' → logprob: -16.003646850585938

Token 700: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078997299075127
    2. ' m' → logprob: -5.5040788650512695
    3. '           ' → logprob: -14.62907886505127
    4. '               ' → logprob: -18.004079818725586
    5. '            ' → logprob: -18.129079818725586
    6. '	m' → logprob: -18.504079818725586
    7. '   ' → logprob: -18.879079818725586
    8. '       ' → logprob: -19.379079818725586
    9. '          ' → logprob: -19.379079818725586
    10. ' ' → logprob: -19.379079818725586

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002007983857765794
    2. ',c' → logprob: -6.252007961273193
    3. ' ,' → logprob: -9.502008438110352
    4. '           ' → logprob: -12.627008438110352
    5. '               ' → logprob: -14.377008438110352
    6. 'cells' → logprob: -14.627008438110352
    7. '(c' → logprob: -15.877008438110352
    8. ' cells' → logprob: -16.12700843811035
    9. '```' → logprob: -17.50200843811035
    10. ',
' → logprob: -17.50200843811035

Token 702: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0007497096667066216
    2. ' cells' → logprob: -7.250749588012695
    3. 'dice' → logprob: -10.250749588012695
    4. '   ' → logprob: -13.500749588012695
    5. 'cell' → logprob: -13.875749588012695
    6. 'cel' → logprob: -14.125749588012695
    7. '.cells' → logprob: -15.000749588012695
    8. 'c' → logprob: -15.250749588012695
    9. '_cells' → logprob: -16.000749588012695
    10. ' ' → logprob: -16.125749588012695

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013385741040110588
    2. ',d' → logprob: -6.626338481903076
    3. '           ' → logprob: -11.626338958740234
    4. ' ,' → logprob: -12.626338958740234
    5. '               ' → logprob: -15.376338958740234
    6. ',
' → logprob: -16.501338958740234
    7. 'd' → logprob: -17.126338958740234
    8. 'dice' → logprob: -17.251338958740234
    9. '          ' → logprob: -17.751338958740234
    10. ')' → logprob: -18.001338958740234

Token 704: ' dice' (ID: 22078)
  Prédit: 'dice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dice' → logprob: -0.004622968845069408
    2. ' dice' → logprob: -5.379622936248779
    3. '   ' → logprob: -13.629623413085938
    4. ' ' → logprob: -15.254623413085938
    5. '     ' → logprob: -15.504623413085938
    6. '    ' → logprob: -15.504623413085938
    7. 'd' → logprob: -15.629623413085938
    8. 'dic' → logprob: -15.629623413085938
    9. 'Dice' → logprob: -16.254623413085938
    10. '       ' → logprob: -16.379623413085938

Token 705: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'throws' → logprob: -15.625
    3. '_throw' → logprob: -18.5
    4. ')' → logprob: -18.75
    5. 's' → logprob: -19.125
    6. '-' → logprob: -19.25
    7. 'Throws' → logprob: -19.75
    8. ')_' → logprob: -19.875
    9. ' throws' → logprob: -20.0
    10. '[' → logprob: -20.5

Token 706: 'throws' (ID: 12972)
  Prédit: 'throws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'throws' → logprob: -0.02983737923204899
    2. '_' → logprob: -3.5298373699188232
    3. 'h' → logprob: -10.404837608337402
    4. 'Throws' → logprob: -10.654837608337402
    5. '-' → logprob: -13.154837608337402
    6. '```' → logprob: -13.154837608337402
    7. 'raises' → logprob: -13.404837608337402
    8. 'th' → logprob: -13.529837608337402
    9. 'e' → logprob: -13.529837608337402
    10. 'rokes' → logprob: -13.654837608337402

Token 707: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4754604995250702
    2. ')
' → logprob: -0.9754605293273926
    3. '           ' → logprob: -6.600460529327393
    4. ')
' → logprob: -10.850460052490234
    5. ' )
' → logprob: -13.975460052490234
    6. '       ' → logprob: -14.350460052490234
    7. '          ' → logprob: -14.475460052490234
    8. ')

' → logprob: -14.600460052490234
    9. ').' → logprob: -14.850460052490234
    10. ' )' → logprob: -15.600460052490234

Token 708: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034380643046461046
    2. 'results' → logprob: -8.125344276428223
    3. 'result' → logprob: -11.000344276428223
    4. '       ' → logprob: -11.250344276428223
    5. 'roll' → logprob: -11.375344276428223
    6. ' results' → logprob: -12.625344276428223
    7. ' rolls' → logprob: -13.375344276428223
    8. '```' → logprob: -14.250344276428223
    9. ' roll' → logprob: -15.000344276428223
    10. ' result' → logprob: -15.750344276428223

Token 709: ' rolls' (ID: 46838)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.007891586050391197
    2. 'results' → logprob: -5.382891654968262
    3. ' rolls' → logprob: -5.882891654968262
    4. '           ' → logprob: -8.007891654968262
    5. 'result' → logprob: -9.257891654968262
    6. 'counts' → logprob: -10.882891654968262
    7. 'plays' → logprob: -11.757891654968262
    8. ' roll' → logprob: -12.007891654968262
    9. '_roll' → logprob: -12.382891654968262
    10. ' results' → logprob: -12.382891654968262

Token 710: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.04925473406910896
    2. '=' → logprob: -3.6742546558380127
    3. ' =' → logprob: -4.299254894256592
    4. '_' → logprob: -5.549254894256592
    5. '_used' → logprob: -5.799254894256592
    6. '_needed' → logprob: -6.549254894256592
    7. '_taken' → logprob: -8.424254417419434
    8. '_required' → logprob: -8.549254417419434
    9. '_counts' → logprob: -9.049254417419434
    10. 'count' → logprob: -9.549254417419434

Token 711: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.07889077812433243
    2. ' game' → logprob: -2.578890800476074
    3. '	game' → logprob: -14.578890800476074
    4. '           ' → logprob: -14.703890800476074
    5. '(game' → logprob: -16.203889846801758
    6. '_game' → logprob: -17.453889846801758
    7. 'games' → logprob: -18.953889846801758
    8. '.game' → logprob: -19.078889846801758
    9. '   ' → logprob: -19.328889846801758
    10. 'Game' → logprob: -20.328889846801758

Token 712: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -5.741137283621356e-05
    2. 'play' → logprob: -9.875057220458984
    3. '.' → logprob: -12.500057220458984
    4. '	play' → logprob: -14.750057220458984
    5. '.move' → logprob: -15.250057220458984
    6. ' play' → logprob: -15.250057220458984
    7. '       ' → logprob: -15.250057220458984
    8. '   ' → logprob: -15.375057220458984
    9. '.solve' → logprob: -15.500057220458984
    10. ' .' → logprob: -15.625057220458984

Token 713: '_until' (ID: 115218)
  Prédit: '_until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_until' → logprob: -5.5577775128767826e-06
    2. 'until' → logprob: -12.750005722045898
    3. '_once' → logprob: -13.375005722045898
    4. 'Until' → logprob: -14.750005722045898
    5. '_count' → logprob: -14.875005722045898
    6. '   ' → logprob: -16.6250057220459
    7. '```' → logprob: -17.3750057220459
    8. '_' → logprob: -17.6250057220459
    9. '       ' → logprob: -17.7500057220459
    10. 's' → logprob: -17.8750057220459

Token 714: '_goal' (ID: 101684)
  Prédit: '_goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goal' → logprob: -0.00026169343618676066
    2. 'goal' → logprob: -8.250261306762695
    3. '_go' → logprob: -15.750261306762695
    4. ' goal' → logprob: -16.125261306762695
    5. '(goal' → logprob: -16.375261306762695
    6. '
' → logprob: -17.875261306762695
    7. 'go' → logprob: -18.750261306762695
    8. 'Goal' → logprob: -18.875261306762695
    9. '_' → logprob: -19.125261306762695
    10. '   ' → logprob: -20.250261306762695

Token 715: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003519086167216301
    2. '
' → logprob: -8.250351905822754
    3. 'results' → logprob: -9.875351905822754
    4. '(results' → logprob: -10.875351905822754
    5. '()
' → logprob: -11.875351905822754
    6. ' results' → logprob: -13.000351905822754
    7. ',' → logprob: -13.375351905822754
    8. '.' → logprob: -13.375351905822754
    9. '.append' → logprob: -13.375351905822754
    10. '()' → logprob: -14.250351905822754

Token 716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024477019906044006
    2. '
' → logprob: -9.000245094299316
    3. '       ' → logprob: -9.375245094299316
    4. '```' → logprob: -10.875245094299316
    5. 'results' → logprob: -11.500245094299316
    6. '   ' → logprob: -13.250245094299316
    7. '               ' → logprob: -13.500245094299316
    8. '<|end|>' → logprob: -13.875245094299316
    9. '          ' → logprob: -14.125245094299316
    10. '            
' → logprob: -14.500245094299316

Token 717: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.009777337312698364
    2. ' results' → logprob: -4.759777545928955
    3. '           ' → logprob: -6.759777545928955
    4. '	results' → logprob: -13.384777069091797
    5. '
' → logprob: -14.009777069091797
    6. 'result' → logprob: -16.259777069091797
    7. '.results' → logprob: -16.384777069091797
    8. '       ' → logprob: -16.384777069091797
    9. '(results' → logprob: -16.884777069091797
    10. '   ' → logprob: -17.884777069091797

Token 718: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005535095697268844
    2. '.' → logprob: -7.500553607940674
    3. '.app' → logprob: -15.875553131103516
    4. '.extend' → logprob: -16.000553131103516
    5. ' =' → logprob: -16.625553131103516
    6. ' .' → logprob: -16.750553131103516
    7. '.ap' → logprob: -17.125553131103516
    8. '.add' → logprob: -17.500553131103516
    9. '.setdefault' → logprob: -17.500553131103516
    10. 'append' → logprob: -17.750553131103516

Token 719: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016778295685071498
    2. '(str' → logprob: -8.750167846679688
    3. 'roll' → logprob: -11.625167846679688
    4. 'str' → logprob: -15.375167846679688
    5. '(round' → logprob: -17.375167846679688
    6. '(
' → logprob: -17.875167846679688
    7. '((' → logprob: -18.375167846679688
    8. '(f' → logprob: -18.375167846679688
    9. ' (' → logprob: -19.375167846679688
    10. '(ro' → logprob: -20.000167846679688

Token 720: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. 'roll' → logprob: -13.250001907348633
    3. '(
' → logprob: -19.375001907348633
    4. '(round' → logprob: -19.500001907348633
    5. ' (' → logprob: -20.625001907348633
    6. ')' → logprob: -20.875001907348633
    7. '   ' → logprob: -21.750001907348633
    8. '((' → logprob: -21.875001907348633
    9. '```' → logprob: -22.000001907348633
    10. '{' → logprob: -22.125001907348633

Token 721: 'roll' (ID: 1484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02975071594119072
    2. 'roll' → logprob: -3.5297508239746094
    3. '_roll' → logprob: -15.77975082397461
    4. ' rolls' → logprob: -16.77975082397461
    5. '[' → logprob: -17.27975082397461
    6. '{' → logprob: -17.52975082397461
    7. '-roll' → logprob: -17.52975082397461
    8. '.roll' → logprob: -17.90475082397461
    9. '   ' → logprob: -18.27975082397461
    10. 'rollers' → logprob: -18.27975082397461

Token 722: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ' s' → logprob: -15.25
    3. ')s' → logprob: -18.0
    4. '
' → logprob: -18.125
    5. ')' → logprob: -18.75
    6. 'count' → logprob: -19.25
    7. '_count' → logprob: -19.375
    8. '[s' → logprob: -19.625
    9. '}s' → logprob: -19.625
    10. '_s' → logprob: -19.75

Token 723: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034702493576332927
    2. ')
' → logprob: -8.000347137451172
    3. '())' → logprob: -11.750347137451172
    4. '))' → logprob: -12.750347137451172
    5. '()' → logprob: -15.000347137451172
    6. '       ' → logprob: -15.625347137451172
    7. '           ' → logprob: -15.750347137451172
    8. ')`' → logprob: -16.875347137451172
    9. ')

' → logprob: -17.250347137451172
    10. '())
' → logprob: -17.250347137451172

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03357918933033943
    2. '
' → logprob: -3.533579111099243
    3. '\n' → logprob: -6.408579349517822
    4. 'return' → logprob: -6.658579349517822
    5. '        
' → logprob: -7.908579349517822
    6. '   ' → logprob: -9.033578872680664
    7. '    
' → logprob: -9.533578872680664
    8. '\
' → logprob: -9.533578872680664
    9. ' return' → logprob: -9.908578872680664
    10. 'print' → logprob: -10.408578872680664

Token 725: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39363348484039307
    2. 'print' (adapté à ' print') → logprob: -1.393633484840393
    3. '
' → logprob: -2.6436333656311035
    4. '       ' → logprob: -5.6436333656311035
    5. 'for' → logprob: -6.6436333656311035
    6. ' return' → logprob: -6.7686333656311035
    7. '        
' → logprob: -10.018633842468262
    8. ' print' → logprob: -10.268633842468262
    9. '   ' → logprob: -10.893633842468262
    10. ' for' → logprob: -11.018633842468262

Token 726: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.014184189029037952
    2. '("\' → logprob: -4.26418399810791
    3. ''\' → logprob: -11.38918399810791
    4. '(' → logprob: -11.63918399810791
    5. '"\' → logprob: -14.88918399810791
    6. '(
' → logprob: -15.63918399810791
    7. '\' → logprob: -16.514184951782227
    8. '('' → logprob: -17.639184951782227
    9. '   ' → logprob: -18.264184951782227
    10. '
' → logprob: -18.264184951782227

Token 727: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.4391956685576588e-05
    2. '\n' → logprob: -10.625024795532227
    3. '
' → logprob: -18.375024795532227
    4. ''\' → logprob: -18.500024795532227
    5. 'join' → logprob: -18.875024795532227
    6. ''.' → logprob: -19.750024795532227
    7. '12' → logprob: -20.625024795532227
    8. 'r' → logprob: -20.750024795532227
    9. '10' → logprob: -20.750024795532227
    10. '"\' → logprob: -21.000024795532227

Token 728: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.017670800909399986
    2. '.join' → logprob: -4.267670631408691
    3. '.' → logprob: -6.517670631408691
    4. 'join' → logprob: -6.767670631408691
    5. '".' → logprob: -7.392670631408691
    6. ').' → logprob: -8.767670631408691
    7. '''.' → logprob: -9.892670631408691
    8. ')' → logprob: -11.017670631408691
    9. 'print' → logprob: -12.017670631408691
    10. ''' → logprob: -12.392670631408691

Token 729: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -16.25
    3. 'jo' → logprob: -16.875
    4. 'j' → logprob: -17.0
    5. ''.' → logprob: -17.125
    6. 'print' → logprob: -18.5
    7. '.join' → logprob: -18.75
    8. ').' → logprob: -19.625
    9. '```' → logprob: -20.125
    10. '(join' → logprob: -21.125

Token 730: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -3.8889261304575484e-06
    2. 'results' → logprob: -12.500003814697266
    3. '(' → logprob: -16.750003814697266
    4. ' results' → logprob: -17.250003814697266
    5. '	results' → logprob: -18.125003814697266
    6. '(result' → logprob: -18.375003814697266
    7. ' (' → logprob: -19.250003814697266
    8. ')' → logprob: -20.250003814697266
    9. '(
' → logprob: -20.375003814697266
    10. '(res' → logprob: -20.875003814697266

Token 731: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25193271040916443
    2. ')' → logprob: -1.5019327402114868
    3. ')))' → logprob: -13.751933097839355
    4. '())' → logprob: -14.001933097839355
    5. '))
' → logprob: -14.251933097839355
    6. '})' → logprob: -14.876933097839355
    7. '()))' → logprob: -15.001933097839355
    8. ')
' → logprob: -15.876933097839355
    9. '()' → logprob: -16.37693214416504
    10. ')}' → logprob: -16.62693214416504

Token 732: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0802738870552275e-05
    2. ' if' → logprob: -11.75001049041748
    3. 'Sug' → logprob: -13.75001049041748
    4. '```' → logprob: -13.87501049041748
    5. '#' → logprob: -14.87501049041748
    6. 'def' → logprob: -15.12501049041748
    7. 'import' → logprob: -16.125011444091797
    8. 's' → logprob: -16.750011444091797
    9. '
' → logprob: -17.000011444091797
    10. ' Sug' → logprob: -17.500011444091797

Token 733: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16023387014865875
    2. ' __' → logprob: -1.9102338552474976
    3. 'name' → logprob: -11.660233497619629
    4. '_name' → logprob: -15.160233497619629
    5. ' ' → logprob: -15.535233497619629
    6. '___' → logprob: -15.660233497619629
    7. '/__' → logprob: -15.660233497619629
    8. 'Name' → logprob: -16.035234451293945
    9. '```' → logprob: -17.160234451293945
    10. '_' → logprob: -17.285234451293945

Token 734: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.046848930418491364
    2. ' __' → logprob: -3.546849012374878
    3. 'name' → logprob: -4.421848773956299
    4. 'if' → logprob: -5.546848773956299
    5. ' ==' → logprob: -7.796848773956299
    6. '==' → logprob: -8.671849250793457
    7. ' if' → logprob: -9.546849250793457
    8. '[' → logprob: -9.671849250793457
    9. '.__' → logprob: -9.796849250793457
    10. 'main' → logprob: -9.796849250793457

Token 735: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.935296834039036e-06
    2. '__.__' → logprob: -12.87500286102295
    3. '__.' → logprob: -15.62500286102295
    4. '==' → logprob: -15.75000286102295
    5. 'name' → logprob: -17.875003814697266
    6. '__('' → logprob: -17.875003814697266
    7. '__
' → logprob: -18.000003814697266
    8. '____' → logprob: -18.125003814697266
    9. '___' → logprob: -18.500003814697266
    10. ' ==' → logprob: -18.750003814697266

Token 736: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18288306891918182
    2. '==' → logprob: -1.8078830242156982
    3. ' ==' → logprob: -5.932883262634277
    4. '=="' → logprob: -8.057883262634277
    5. '=='' → logprob: -9.307883262634277
    6. '__.__' → logprob: -10.057883262634277
    7. '=' → logprob: -12.057883262634277
    8. '===' → logprob: -12.432883262634277
    9. '==
' → logprob: -12.432883262634277
    10. '__('' → logprob: -12.557883262634277

Token 737: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014181245118379593
    2. ''' → logprob: -4.264181137084961
    3. ' "__' → logprob: -11.014181137084961
    4. '__' → logprob: -14.389181137084961
    5. '"name' → logprob: -15.514181137084961
    6. ' '__' → logprob: -15.764181137084961
    7. '"user' → logprob: -16.01418113708496
    8. '("__' → logprob: -16.51418113708496
    9. '"class' → logprob: -16.88918113708496
    10. '('__' → logprob: -17.63918113708496

Token 738: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. 'name' → logprob: -14.625000953674316
    3. '__' → logprob: -15.750000953674316
    4. ' main' → logprob: -19.625
    5. 'ma' → logprob: -20.25
    6. 'built' → logprob: -20.25
    7. '_main' → logprob: -20.375
    8. 'file' → logprob: -21.875
    9. '(main' → logprob: -21.875
    10. 'm' → logprob: -22.25

Token 739: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007107955403625965
    2. '__' → logprob: -5.007107734680176
    3. '__':
' → logprob: -7.882107734680176
    4. '__:' → logprob: -11.132107734680176
    5. '__.' → logprob: -16.507108688354492
    6. '__
' → logprob: -16.507108688354492
    7. ':' → logprob: -16.882108688354492
    8. '():
' → logprob: -17.007108688354492
    9. '__
' → logprob: -17.132108688354492
    10. ':
' → logprob: -17.382108688354492

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001745775662129745
    2. ' solver' → logprob: -9.500174522399902
    3. 'solver' → logprob: -10.000174522399902
    4. 'import' → logprob: -10.125174522399902
    5. 'Sug' → logprob: -12.500174522399902
    6. '   ' → logprob: -13.000174522399902
    7. ' Sug' → logprob: -13.250174522399902
    8. 's' → logprob: -13.500174522399902
    9. 'Solver' → logprob: -14.000174522399902
    10. '```' → logprob: -14.250174522399902

Token 741: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.21555469930171967
    2. 'import' → logprob: -1.9655547142028809
    3. 'Sug' → logprob: -2.965554714202881
    4. 's' → logprob: -6.590554714202881
    5. 'def' → logprob: -7.840554714202881
    6. 'Solver' → logprob: -8.465554237365723
    7. 'game' → logprob: -9.715554237365723
    8. 'sol' → logprob: -9.840554237365723
    9. ' solver' → logprob: -10.715554237365723
    10. 'parser' → logprob: -10.715554237365723

Token 742: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03451615199446678
    2. '=' → logprob: -3.6595160961151123
    3. '.solve' → logprob: -4.909516334533691
    4. '().' → logprob: -7.659516334533691
    5. '.' → logprob: -8.659516334533691
    6. '   ' → logprob: -9.284516334533691
    7. '.s' → logprob: -10.784516334533691
    8. '()' → logprob: -10.909516334533691
    9. '=s' → logprob: -11.784516334533691
    10. 'solver' → logprob: -12.159516334533691

Token 743: ' Sug' (ID: 111433)
  Prédit: 'Sug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sug' → logprob: -0.20141343772411346
    2. ' Sug' → logprob: -1.7014133930206299
    3. 'Sugar' → logprob: -15.82641315460205
    4. 'Sud' → logprob: -18.576414108276367
    5. 'S' → logprob: -19.451414108276367
    6. '_S' → logprob: -19.701414108276367
    7. 'Suc' → logprob: -19.826414108276367
    8. ' Sugar' → logprob: -19.826414108276367
    9. ' sug' → logprob: -19.951414108276367
    10. '	S' → logprob: -20.076414108276367

Token 744: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -5.512236498361744e-07
    2. 'oru' → logprob: -14.875000953674316
    3. 'roku' → logprob: -16.5
    4. 'oro' → logprob: -17.5
    5. 'ор' → logprob: -17.75
    6. 'ro' → logprob: -17.875
    7. 'er' → logprob: -18.25
    8. '   ' → logprob: -18.75
    9. '```' → logprob: -18.75
    10. 'orol' → logprob: -19.625

Token 745: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -3.702754474943504e-05
    2. 'Oku' → logprob: -11.12503719329834
    3. 'ok' → logprob: -11.75003719329834
    4. 'оку' → logprob: -11.87503719329834
    5. 'roku' → logprob: -12.62503719329834
    6. 'o' → logprob: -13.37503719329834
    7. 'ku' → logprob: -13.62503719329834
    8. 'oki' → logprob: -14.75003719329834
    9. ' oku' → logprob: -15.62503719329834
    10. 'k' → logprob: -16.125036239624023

Token 746: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -3.2855416066013277e-05
    2. 'Game' → logprob: -10.375032424926758
    3. 'solver' → logprob: -13.625032424926758
    4. 'Solve' → logprob: -15.500032424926758
    5. '_solver' → logprob: -16.750032424926758
    6. ' Solver' → logprob: -17.500032424926758
    7. ' solver' → logprob: -17.625032424926758
    8. 'Sol' → logprob: -18.000032424926758
    9. 'Solution' → logprob: -18.000032424926758
    10. 'Resolver' → logprob: -20.125032424926758

Token 747: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08293464034795761
    2. '
' → logprob: -3.332934617996216
    3. 'solver' → logprob: -3.332934617996216
    4. '    
' → logprob: -5.082934856414795
    5. '.solve' → logprob: -7.457934856414795
    6. '_solver' → logprob: -7.582934856414795
    7. '  
' → logprob: -8.332934379577637
    8. ' solver' → logprob: -8.457934379577637
    9. '.s' → logprob: -8.832934379577637
    10. '	s' → logprob: -9.457934379577637

Token 748: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.16036111116409302
    2. '   ' → logprob: -1.9103610515594482
    3. ' solver' → logprob: -8.910361289978027
    4. '_solver' → logprob: -13.660361289978027
    5. 'sol' → logprob: -15.410361289978027
    6. '```' → logprob: -15.410361289978027
    7. '
' → logprob: -15.785361289978027
    8. '	s' → logprob: -16.91036033630371
    9. '  ' → logprob: -16.91036033630371
    10. '    
' → logprob: -17.16036033630371

Token 749: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: 0.0
    2. ' solver' → logprob: -18.25
    3. 'resolver' → logprob: -22.0
    4. 'scheduler' → logprob: -22.375
    5. 'solve' → logprob: -23.375
    6. '_solver' → logprob: -23.75
    7. '   ' → logprob: -24.5
    8. 's' → logprob: -24.75
    9. 'solution' → logprob: -25.0
    10. 'sol' → logprob: -25.75

Token 750: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.00000286102295
    3. '.play' → logprob: -16.750001907348633
    4. '.run' → logprob: -17.625001907348633
    5. 'solve' → logprob: -18.125001907348633
    6. ' .' → logprob: -19.375001907348633
    7. '.execute' → logprob: -19.750001907348633
    8. '.sol' → logprob: -20.125001907348633
    9. '.save' → logprob: -20.250001907348633
    10. '.resolve' → logprob: -20.875001907348633

Token 751: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043519894825294614
    2. '()
' → logprob: -7.7504353523254395
    3. '()\' → logprob: -13.500434875488281
    4. '<|end|>' → logprob: -13.875434875488281
    5. '(' → logprob: -14.500434875488281
    6. '()

' → logprob: -14.625434875488281
    7. ' ()' → logprob: -15.375434875488281
    8. '();' → logprob: -15.375434875488281
    9. '()<' → logprob: -15.500434875488281
    10. '()`' → logprob: -15.625434875488281


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 749
Tokens correctement prédits (1ère position, stricte): 365
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 648
Précision stricte (1ère position): 48.73%
Précision adaptée (1ère position): 53.94%
Précision (top 10): 86.52%
================================================================================
