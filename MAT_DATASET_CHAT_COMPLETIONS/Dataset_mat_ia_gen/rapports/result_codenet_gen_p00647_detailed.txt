================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def parse_time_to_minutes(time_str):
    """
    Convert a time string 'hh:mm' in 24-hour format to total minutes
    from midnight (0:00).
    """
    hh, mm = map(int, time_str.split(':'))
    return hh * 60 + mm

def is_in_range(minute, start, end):
    """
    Check if a time in minutes is within the range [start,end].
    This function supports ranges that can wrap over midnight.
    """
    if start <= end:
        return start <= minute <= end
    else:
        # For ranges passing midnight, e.g., 21:00 ~ 01:59
        return minute >= start or minute <= end

def truncate_ratio(ok, total):
    """
    Compute the integer percentage truncated (not rounded).
    """
    return (ok * 100) // total

def main():
    """
    Main logic to process input datasets and compute ok check ratios
    for lunch, dinner, and midnight times.
    """
    # Define time ranges in minutes from midnight (0:00)
    # Lunch: 11:00 ~ 14:59
    lunch_start = 11 * 60
    lunch_end = 14 * 60 + 59

    # Dinner: 18:00 ~ 20:59
    dinner_start = 18 * 60
    dinner_end = 20 * 60 + 59

    # Midnight: 21:00 ~ 01:59 (wraps over midnight)
    midnight_start = 21 * 60
    midnight_end = 1 * 60 + 59

    while True:
        n_line = input().strip()
        if n_line == '0':
            # End of all datasets
            break
        n = int(n_line)

        # Counters for each time range: (ok_checks, total_checks)
        lunch_ok = 0
        lunch_total = 0
        dinner_ok = 0
        dinner_total = 0
        midnight_ok = 0
        midnight_total = 0

        for _ in range(n):
            line = input().strip()
            time_str, mm_str = line.split()
            provide_time = parse_time_to_minutes(time_str)
            provided_mm = int(mm_str)

            # Categorize the check by print time
            if is_in_range(provide_time, lunch_start, lunch_end):
                # It's lunch
                lunch_total += 1
                if provided_mm <= 8:
                    lunch_ok += 1
            elif is_in_range(provide_time, dinner_start, dinner_end):
                # Dinner time
                dinner_total += 1
                if provided_mm <= 8:
                    dinner_ok += 1
            elif is_in_range(provide_time, midnight_start, midnight_end):
                # Midnight time
                midnight_total += 1
                if provided_mm <= 8:
                    midnight_ok += 1
            else:
                # Out of any range: ignore this check
                pass

        # Print results for lunch
        print("lunch", (truncate_ratio(lunch_ok, lunch_total)
                       if lunch_total > 0 else "no guest"))
        # Print results for dinner
        print("dinner", (truncate_ratio(dinner_ok, dinner_total)
                        if dinner_total > 0 else "no guest"))
        # Print results for midnight
        print("midnight", (truncate_ratio(midnight_ok, midnight_total)
                          if midnight_total > 0 else "no guest"))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' parse' (ID: 8420)
  → Token d'amorce (pas de prédiction)

Token 2: '_time' (ID: 6425)
  → Token d'amorce (pas de prédiction)

Token 3: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016119851497933269
    2. '(:' → logprob: -7.251612186431885
    3. '_' → logprob: -8.001611709594727
    4. '(_:' → logprob: -8.251611709594727
    5. '```' → logprob: -9.626611709594727
    6. '():' → logprob: -9.876611709594727
    7. '(_' → logprob: -10.126611709594727
    8. ' (' → logprob: -10.251611709594727
    9. ':' → logprob: -10.751611709594727
    10. '("("' → logprob: -11.251611709594727

Token 4: '_minutes' (ID: 174025)
  Prédit: '_seconds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seconds' → logprob: -0.001342254807241261
    2. 'seconds' → logprob: -7.501342296600342
    3. '_datetime' → logprob: -8.126341819763184
    4. '_timestamp' → logprob: -8.751341819763184
    5. '_minutes' → logprob: -9.501341819763184
    6. '_SECONDS' → logprob: -9.501341819763184
    7. '_' → logprob: -9.751341819763184
    8. 'datetime' → logprob: -10.251341819763184
    9. ' seconds' → logprob: -10.751341819763184
    10. '_string' → logprob: -11.251341819763184

Token 5: '(time' (ID: 19192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043400691356509924
    2. '(:' → logprob: -9.125433921813965
    3. '():' → logprob: -9.375433921813965
    4. ':' → logprob: -9.750433921813965
    5. '```' → logprob: -10.125433921813965
    6. '(_:' → logprob: -10.250433921813965
    7. '_' → logprob: -10.625433921813965
    8. '("("' → logprob: -10.875433921813965
    9. '('' → logprob: -11.125433921813965
    10. ' (' → logprob: -11.625433921813965

Token 6: '_str' (ID: 6182)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03657606616616249
    2. ')' → logprob: -3.53657603263855
    3. '_' → logprob: -5.161576271057129
    4. ':' → logprob: -7.661576271057129
    5. '):
' → logprob: -8.161576271057129
    6. 's' → logprob: -9.036576271057129
    7. '_:' → logprob: -10.661576271057129
    8. '=' → logprob: -10.786576271057129
    9. 'def' → logprob: -11.411576271057129
    10. ''):' → logprob: -11.536576271057129

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0046210684813559055
    2. ')' → logprob: -5.6296210289001465
    3. ':' → logprob: -7.0046210289001465
    4. '):
' → logprob: -9.254621505737305
    5. '**' → logprob: -12.629621505737305
    6. '():' → logprob: -13.379621505737305
    7. ''):' → logprob: -13.629621505737305
    8. '   ' → logprob: -13.879621505737305
    9. '=' → logprob: -14.004621505737305
    10. ' ):' → logprob: -14.129621505737305

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26213017106056213
    2. '   ' → logprob: -2.0121302604675293
    3. '(' → logprob: -3.1371302604675293
    4. '```' → logprob: -3.7621302604675293
    5. '():' → logprob: -4.887130260467529
    6. ''' → logprob: -4.887130260467529
    7. '"' → logprob: -5.137130260467529
    8. '(:' → logprob: -6.262130260467529
    9. '":' → logprob: -6.762130260467529
    10. '':' → logprob: -7.387130260467529

Token 9: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16600418090820312
    2. 'i' → logprob: -2.416004180908203
    3. '```' → logprob: -3.666004180908203
    4. 't' → logprob: -4.166004180908203
    5. ' ' → logprob: -4.541004180908203
    6. '    ' → logprob: -6.666004180908203
    7. ' i' → logprob: -6.666004180908203
    8. '`' → logprob: -6.791004180908203
    9. '"""' → logprob: -6.916004180908203
    10. 'r' → logprob: -6.916004180908203

Token 10: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.12184225022792816
    2. '"""
' → logprob: -2.4968421459198
    3. 'i' → logprob: -4.496842384338379
    4. '#' → logprob: -4.746842384338379
    5. ''''' → logprob: -6.121842384338379
    6. '""' → logprob: -6.496842384338379
    7. 't' → logprob: -6.621842384338379
    8. 'r' → logprob: -6.621842384338379
    9. '   ' → logprob: -6.621842384338379
    10. ' """
' → logprob: -6.871842384338379

Token 11: ' Convert' (ID: 15629)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3120366632938385
    2. 'Convert' (adapté à ' Convert') → logprob: -1.5620366334915161
    3. ' Converts' → logprob: -3.6870367527008057
    4. '"""
' → logprob: -4.312036514282227
    5. 'Con' → logprob: -4.812036514282227
    6. ''''' → logprob: -5.937036514282227
    7. '   ' → logprob: -6.062036514282227
    8. '""' → logprob: -6.437036514282227
    9. 'Calculate' → logprob: -7.187036514282227
    10. 'Parse' → logprob: -7.187036514282227

Token 12: ' a' (ID: 261)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.12373396009206772
    2. 'time' → logprob: -2.4987339973449707
    3. ' a' → logprob: -3.6237339973449707
    4. ' the' → logprob: -5.248733997344971
    5. ' to' → logprob: -7.123733997344971
    6. ' ' → logprob: -7.748733997344971
    7. '   ' → logprob: -8.373733520507812
    8. ' an' → logprob: -8.623733520507812
    9. ' datetime' → logprob: -9.623733520507812
    10. ' str' → logprob: -9.623733520507812

Token 13: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.12438861280679703
    2. ' datetime' → logprob: -3.6243886947631836
    3. 'time' → logprob: -3.7493886947631836
    4. ' timedelta' → logprob: -3.8743886947631836
    5. ' string' → logprob: -3.9993886947631836
    6. 'n' → logprob: -4.499388694763184
    7. ' ' → logprob: -4.749388694763184
    8. 'datetime' → logprob: -6.249388694763184
    9. ' n' → logprob: -6.499388694763184
    10. ' number' → logprob: -6.624388694763184

Token 14: ' string' (ID: 1621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10375916212797165
    2. ' to' → logprob: -3.1037590503692627
    3. '   ' → logprob: -3.9787590503692627
    4. ' _' → logprob: -4.228759288787842
    5. '_to' → logprob: -5.478759288787842
    6. ' ' → logprob: -5.853759288787842
    7. '_str' → logprob: -5.978759288787842
    8. ' (' → logprob: -6.478759288787842
    9. ' string' → logprob: -6.603759288787842
    10. ' in' → logprob: -6.728759288787842

Token 15: ' '' (ID: 461)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4623796045780182
    2. ' into' → logprob: -1.9623795747756958
    3. '   ' → logprob: -3.0873796939849854
    4. '"' → logprob: -3.3373796939849854
    5. ''' → logprob: -3.3373796939849854
    6. ' ' → logprob: -3.7123796939849854
    7. ' (' → logprob: -3.9623796939849854
    8. '```' → logprob: -3.9623796939849854
    9. '(' → logprob: -4.212379455566406
    10. 'to' → logprob: -4.962379455566406

Token 16: 'hh' (ID: 27224)
  Prédit: 'HH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -0.002652348019182682
    2. '%' → logprob: -7.127652168273926
    3. 'hh' → logprob: -7.127652168273926
    4. 'H' → logprob: -7.127652168273926
    5. 'MM' → logprob: -8.752652168273926
    6. '"%' → logprob: -10.502652168273926
    7. ''%' → logprob: -11.502652168273926
    8. '"' → logprob: -11.877652168273926
    9. ' HH' → logprob: -11.877652168273926
    10. 'mm' → logprob: -12.127652168273926

Token 17: ':mm' (ID: 39234)
  Prédit: ':mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':mm' → logprob: -0.00025311444187536836
    2. ':' → logprob: -8.375252723693848
    3. 'mm' → logprob: -11.750252723693848
    4. ':m' → logprob: -11.875252723693848
    5. '':'' → logprob: -13.000252723693848
    6. ':ss' → logprob: -13.625252723693848
    7. '_mm' → logprob: -13.875252723693848
    8. '-mm' → logprob: -14.250252723693848
    9. ' :' → logprob: -14.500252723693848
    10. '```' → logprob: -14.750252723693848

Token 18: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025596146006137133
    2. ':ss' → logprob: -6.002559661865234
    3. '')' → logprob: -10.377559661865234
    4. '"' → logprob: -10.502559661865234
    5. ')'' → logprob: -11.377559661865234
    6. '```' → logprob: -12.377559661865234
    7. ' to' → logprob: -13.377559661865234
    8. ')' → logprob: -13.502559661865234
    9. 'AM' → logprob: -13.752559661865234
    10. 'ss' → logprob: -13.752559661865234

Token 19: ' in' (ID: 306)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8728489875793457
    2. '   ' → logprob: -1.4978489875793457
    3. '```' → logprob: -2.3728489875793457
    4. '_' → logprob: -3.1228489875793457
    5. ')' → logprob: -3.2478489875793457
    6. ' ' → logprob: -3.6228489875793457
    7. '):' → logprob: -3.7478489875793457
    8. 'return' → logprob: -3.8728489875793457
    9. ' return' → logprob: -3.9978489875793457
    10. 'to' → logprob: -4.247848987579346

Token 20: ' ' (ID: 220)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2862468957901001
    2. ' to' → logprob: -2.1612467765808105
    3. ' minutes' → logprob: -2.2862467765808105
    4. 'minutes' → logprob: -4.1612467765808105
    5. ' total' → logprob: -5.9112467765808105
    6. ' return' → logprob: -5.9112467765808105
    7. 'total' → logprob: -6.2862467765808105
    8. 'time' → logprob: -6.5362467765808105
    9. ' hours' → logprob: -6.6612467765808105
    10. 'tokens' → logprob: -7.0362467765808105

Token 21: '24' (ID: 1494)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.02801176905632019
    2. 'hours' → logprob: -4.403011798858643
    3. 'to' → logprob: -5.028011798858643
    4. 'total' → logprob: -5.153011798858643
    5. ' minutes' → logprob: -6.403011798858643
    6. 'return' → logprob: -8.153011322021484
    7. 'def' → logprob: -8.653011322021484
    8. '```' → logprob: -8.903011322021484
    9. ' to' → logprob: -9.153011322021484
    10. '_minutes' → logprob: -9.278011322021484

Token 22: '-hour' (ID: 27767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00602561142295599
    2. '-' → logprob: -5.381025791168213
    3. ')' → logprob: -7.756025791168213
    4. ':' → logprob: -8.631025314331055
    5. '_hours' → logprob: -8.756025314331055
    6. '_format' → logprob: -9.006025314331055
    7. '_return' → logprob: -9.756025314331055
    8. ' ' → logprob: -10.006025314331055
    9. '_token' → logprob: -10.131025314331055
    10. '>' → logprob: -10.256025314331055

Token 23: ' format' (ID: 6011)
  Prédit: ' format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.11103632301092148
    2. ' ' → logprob: -3.6110363006591797
    3. '   ' → logprob: -3.6110363006591797
    4. 'format' → logprob: -3.8610363006591797
    5. ' to' → logprob: -4.48603630065918
    6. '_' → logprob: -4.61103630065918
    7. '_format' → logprob: -5.61103630065918
    8. ')' → logprob: -6.48603630065918
    9. ' return' → logprob: -6.61103630065918
    10. '  ' → logprob: -7.48603630065918

Token 24: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.704333484172821
    2. '   ' → logprob: -0.829333484172821
    3. ' ' → logprob: -3.329333543777466
    4. ')' → logprob: -4.204333305358887
    5. ' into' → logprob: -4.954333305358887
    6. ' )' → logprob: -5.579333305358887
    7. '```' → logprob: -6.454333305358887
    8. '    ' → logprob: -6.829333305358887
    9. ''' → logprob: -7.079333305358887
    10. '  ' → logprob: -7.079333305358887

Token 25: ' total' (ID: 3609)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5420946478843689
    2. ' minutes' → logprob: -1.4170947074890137
    3. ' a' → logprob: -2.9170947074890137
    4. 'int' → logprob: -3.1670947074890137
    5. ' the' → logprob: -3.7920947074890137
    6. ' ' → logprob: -4.042094707489014
    7. ' integer' → logprob: -4.417094707489014
    8. ' an' → logprob: -4.542094707489014
    9. ''' → logprob: -5.667094707489014
    10. ' return' → logprob: -6.042094707489014

Token 26: ' minutes' (ID: 5438)
  Prédit: '_minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_minutes' → logprob: -0.0428396575152874
    2. '_' → logprob: -3.792839765548706
    3. ' minutes' → logprob: -4.542839527130127
    4. '_seconds' → logprob: -5.792839527130127
    5. 'minutes' → logprob: -6.542839527130127
    6. ' _' → logprob: -6.667839527130127
    7. '_tokens' → logprob: -6.917839527130127
    8. '_hours' → logprob: -7.292839527130127
    9. '_time' → logprob: -7.542839527130127
    10. ' ' → logprob: -7.542839527130127

Token 27: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38603442907333374
    2. '   ' → logprob: -1.2610344886779785
    3. '):' → logprob: -4.1360344886779785
    4. '```' → logprob: -5.0110344886779785
    5. '.' → logprob: -5.5110344886779785
    6. ')' → logprob: -6.2610344886779785
    7. '(' → logprob: -6.3860344886779785
    8. ',' → logprob: -6.6360344886779785
    9. ' :' → logprob: -6.8860344886779785
    10. ' from' → logprob: -7.1360344886779785

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04038959741592407
    2. ':' → logprob: -3.9153895378112793
    3. '):' → logprob: -4.540389537811279
    4. ')' → logprob: -5.165389537811279
    5. ' from' → logprob: -6.915389537811279
    6. '```' → logprob: -7.290389537811279
    7. '"""' → logprob: -8.415390014648438
    8. ',' → logprob: -8.540390014648438
    9. '  ' → logprob: -8.790390014648438
    10. '.' → logprob: -8.915390014648438

Token 29: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004285195842385292
    2. ':' → logprob: -5.6292853355407715
    3. '```' → logprob: -8.254284858703613
    4. '\n' → logprob: -8.754284858703613
    5. '"""' → logprob: -9.629284858703613
    6. '       ' → logprob: -9.879284858703613
    7. ')' → logprob: -10.879284858703613
    8. '    ' → logprob: -11.004284858703613
    9. '  ' → logprob: -11.254284858703613
    10. '    
' → logprob: -11.254284858703613

Token 30: ' midnight' (ID: 54213)
  Prédit: ' midnight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' midnight' → logprob: -0.2697312533855438
    2. ' the' → logprob: -1.6447312831878662
    3. ' datetime' → logprob: -4.144731044769287
    4. 'mid' → logprob: -4.519731044769287
    5. ' mid' → logprob: -4.644731044769287
    6. '_mid' → logprob: -5.519731044769287
    7. ' a' → logprob: -7.394731044769287
    8. ' ' → logprob: -7.644731044769287
    9. 'the' → logprob: -7.894731044769287
    10. ' midday' → logprob: -8.019731521606445

Token 31: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32617104053497314
    2. ':' → logprob: -1.3261710405349731
    3. ':
' → logprob: -5.451170921325684
    4. ' :' → logprob: -5.951170921325684
    5. '):' → logprob: -6.326170921325684
    6. ':return' → logprob: -6.826170921325684
    7. '\n' → logprob: -6.951170921325684
    8. ',' → logprob: -8.451170921325684
    9. ')' → logprob: -8.576170921325684
    10. '.' → logprob: -8.576170921325684

Token 32: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03654825687408447
    2. '   ' → logprob: -4.661548137664795
    3. 'def' → logprob: -5.036548137664795
    4. ' )' → logprob: -5.536548137664795
    5. 'time' → logprob: -5.911548137664795
    6. 'return' → logprob: -6.161548137664795
    7. '0' → logprob: -6.286548137664795
    8. 'int' → logprob: -6.411548137664795
    9. '):
' → logprob: -6.911548137664795
    10. ').' → logprob: -6.911548137664795

Token 33: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010605364106595516
    2. ').' → logprob: -4.885605335235596
    3. ' to' → logprob: -6.385605335235596
    4. ':' → logprob: -7.635605335235596
    5. '):' → logprob: -8.010605812072754
    6. '0' → logprob: -9.260605812072754
    7. ' )' → logprob: -9.385605812072754
    8. '-' → logprob: -9.885605812072754
    9. ' ' → logprob: -10.385605812072754
    10. '),' → logprob: -10.510605812072754

Token 34: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.11592043191194534
    2. '0' → logprob: -2.2409205436706543
    3. ')' → logprob: -5.990920543670654
    4. ' ' → logprob: -7.615920543670654
    5. 'def' → logprob: -9.865920066833496
    6. ' )' → logprob: -10.615920066833496
    7. ' def' → logprob: -11.865920066833496
    8. ' to' → logprob: -12.240920066833496
    9. 'int' → logprob: -13.240920066833496
    10. 'return' → logprob: -13.990920066833496

Token 35: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07352232187986374
    2. '):' → logprob: -2.6985223293304443
    3. '):
' → logprob: -5.948522090911865
    4. '   ' → logprob: -7.823522090911865
    5. ').' → logprob: -8.573522567749023
    6. '):

' → logprob: -9.073522567749023
    7. ')
' → logprob: -9.073522567749023
    8. '):
' → logprob: -10.073522567749023
    9. '")' → logprob: -10.948522567749023
    10. 'def' → logprob: -11.073522567749023

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050139717757701874
    2. '"""' → logprob: -3.0501396656036377
    3. '```' → logprob: -7.550139904022217
    4. ')' → logprob: -8.550139427185059
    5. '"' → logprob: -8.800139427185059
    6. '"""
' → logprob: -8.800139427185059
    7. ' """' → logprob: -9.050139427185059
    8. '""' → logprob: -9.300139427185059
    9. '    ' → logprob: -9.550139427185059
    10. '\n' → logprob: -9.550139427185059

Token 37: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01085208635777235
    2. '"""' → logprob: -4.635851860046387
    3. ')' → logprob: -7.635851860046387
    4. '```' → logprob: -8.760851860046387
    5. ' """' → logprob: -9.260851860046387
    6. '    ' → logprob: -9.510851860046387
    7. '\n' → logprob: -10.135851860046387
    8. ' ' → logprob: -10.135851860046387
    9. '"' → logprob: -10.385851860046387
    10. '
' → logprob: -10.510851860046387

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.3596853831550106e-05
    2. '```' → logprob: -10.750053405761719
    3. 'indent' → logprob: -11.000053405761719
    4. 'tokens' → logprob: -12.125053405761719
    5. 'ind' → logprob: -12.750053405761719
    6. ' tokens' → logprob: -13.500053405761719
    7. '    ' → logprob: -13.625053405761719
    8. ' indentation' → logprob: -14.000053405761719
    9. 'n' → logprob: -14.500053405761719
    10. ' indent' → logprob: -14.500053405761719

Token 39: ' hh' (ID: 77572)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.47586122155189514
    2. 'hours' → logprob: -1.3508611917495728
    3. 'hour' → logprob: -2.9758613109588623
    4. ' hours' → logprob: -3.2258613109588623
    5. ' h' → logprob: -4.225861072540283
    6. '   ' → logprob: -4.975861072540283
    7. 'parts' → logprob: -5.975861072540283
    8. ' hour' → logprob: -6.850861072540283
    9. 'if' → logprob: -7.100861072540283
    10. 'hh' (adapté à ' hh') → logprob: -7.350861072540283

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9183588027954102
    2. ' =' → logprob: -1.0433588027954102
    3. '=' → logprob: -1.4183588027954102
    4. ' ' → logprob: -6.29335880279541
    5. ')' → logprob: -6.66835880279541
    6. '=int' → logprob: -6.66835880279541
    7. '_' → logprob: -6.91835880279541
    8. ' ,' → logprob: -8.16835880279541
    9. '  ' → logprob: -8.29335880279541
    10. '   ' → logprob: -8.41835880279541

Token 41: ' mm' (ID: 8957)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.11467205733060837
    2. ' mm' → logprob: -2.2396719455718994
    3. ':mm' → logprob: -6.3646721839904785
    4. '_mm' → logprob: -9.48967170715332
    5. 'time' → logprob: -11.36467170715332
    6. 'mma' → logprob: -11.73967170715332
    7. ' ' → logprob: -11.86467170715332
    8. 'mmm' → logprob: -11.86467170715332
    9. ' =' → logprob: -12.48967170715332
    10. 'mmi' → logprob: -12.86467170715332

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331467628479004
    2. '=' → logprob: -1.31331467628479
    3. '<|end|>' → logprob: -10.688314437866211
    4. ',' → logprob: -10.938314437866211
    5. ')' → logprob: -11.938314437866211
    6. ' ' → logprob: -14.063314437866211
    7. ' =)' → logprob: -14.188314437866211
    8. 's' → logprob: -14.688314437866211
    9. '<|end|>' → logprob: -14.688314437866211
    10. '=int' → logprob: -14.813314437866211

Token 43: ' map' (ID: 4014)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.04312684386968613
    2. 'time' → logprob: -3.1681268215179443
    3. ' map' → logprob: -9.043127059936523
    4. 'map' → logprob: -11.668127059936523
    5. '	time' → logprob: -14.793127059936523
    6. ' ' → logprob: -16.043127059936523
    7. '[' → logprob: -16.668127059936523
    8. ' [' → logprob: -16.793127059936523
    9. '=time' → logprob: -16.918127059936523
    10. '   ' → logprob: -16.918127059936523

Token 44: '(int' (ID: 2742)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.6341503262519836
    2. '(int' → logprob: -0.8841503262519836
    3. '(' → logprob: -3.009150266647339
    4. '(lambda' → logprob: -5.009150505065918
    5. 'str' → logprob: -8.009150505065918
    6. '(time' → logprob: -9.259150505065918
    7. '(
' → logprob: -9.884150505065918
    8. 'int' → logprob: -10.759150505065918
    9. ' str' → logprob: -11.884150505065918
    10. '[int' → logprob: -12.259150505065918

Token 45: ',' (ID: 11)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.02466648258268833
    2. '(' → logprob: -4.1496663093566895
    3. ')' → logprob: -4.7746663093566895
    4. 'time' → logprob: -9.899666786193848
    5. ',time' → logprob: -10.774666786193848
    6. ' (' → logprob: -10.774666786193848
    7. ',' → logprob: -11.274666786193848
    8. '<|end|>' → logprob: -11.399666786193848
    9. '(
' → logprob: -11.649666786193848
    10. '(token' → logprob: -12.649666786193848

Token 46: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.12693870067596436
    2. 'time' → logprob: -2.126938819885254
    3. ')' → logprob: -11.626938819885254
    4. '(time' → logprob: -13.501938819885254
    5. '	time' → logprob: -16.251937866210938
    6. ' )' → logprob: -16.876937866210938
    7. '=time' → logprob: -16.876937866210938
    8. '"time' → logprob: -17.001937866210938
    9. '<|end|>' → logprob: -18.001937866210938
    10. '_time' → logprob: -18.376937866210938

Token 47: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.8074162653647363e-05
    2. 'str' → logprob: -11.500018119812012
    3. '.strptime' → logprob: -12.125018119812012
    4. '_' → logprob: -14.000018119812012
    5. ')' → logprob: -14.250018119812012
    6. '_string' → logprob: -15.500018119812012
    7. 'Str' → logprob: -15.750018119812012
    8. '_STR' → logprob: -15.875018119812012
    9. '._' → logprob: -16.625017166137695
    10. '_to' → logprob: -16.875017166137695

Token 48: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.002496110275387764
    2. '.' → logprob: -6.002496242523193
    3. ' .' → logprob: -11.877495765686035
    4. '.strip' → logprob: -12.002495765686035
    5. '   ' → logprob: -12.627495765686035
    6. '.replace' → logprob: -13.252495765686035
    7. 'split' → logprob: -13.877495765686035
    8. '.partition' → logprob: -14.752495765686035
    9. '().' → logprob: -15.002495765686035
    10. ').' → logprob: -15.877495765686035

Token 49: '(':' (ID: 36524)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02247588522732258
    2. '(':' → logprob: -3.8974759578704834
    3. '("("' → logprob: -6.897475719451904
    4. '(' → logprob: -7.147475719451904
    5. '(":' → logprob: -10.272476196289062
    6. '('(' → logprob: -10.397476196289062
    7. '(',' → logprob: -11.272476196289062
    8. ')' → logprob: -11.397476196289062
    9. '("' → logprob: -11.397476196289062
    10. '('.')' → logprob: -11.522476196289062

Token 50: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.049153510481119156
    2. '))' → logprob: -3.0491535663604736
    3. ')' → logprob: -7.5491533279418945
    4. '"))' → logprob: -10.674153327941895
    5. ''))
' → logprob: -11.674153327941895
    6. '')' → logprob: -12.424153327941895
    7. ''' → logprob: -13.549153327941895
    8. '')))' → logprob: -13.674153327941895
    9. '))
' → logprob: -15.049153327941895
    10. ')))' → logprob: -15.549153327941895

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021723082289099693
    2. '
' → logprob: -4.89672327041626
    3. 'return' → logprob: -5.02172327041626
    4. '\n' → logprob: -5.89672327041626
    5. ' return' → logprob: -6.27172327041626
    6. '    
' → logprob: -6.39672327041626
    7. '```' → logprob: -8.146722793579102
    8. '\' → logprob: -8.396722793579102
    9. ' ' → logprob: -9.521722793579102
    10. '`' → logprob: -9.521722793579102

Token 52: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34329473972320557
    2. ' return' → logprob: -1.7182947397232056
    3. '   ' → logprob: -2.218294620513916
    4. '    
' → logprob: -7.843294620513916
    5. '    ' → logprob: -8.093295097351074
    6. ' 
' → logprob: -8.343295097351074
    7. '
' → logprob: -8.343295097351074
    8. '```' → logprob: -8.468295097351074
    9. 'minutes' → logprob: -8.718295097351074
    10. 'total' → logprob: -8.968295097351074

Token 53: ' hh' (ID: 77572)
  Prédit: ' hh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hh' → logprob: -0.0015029559144750237
    2. 'hh' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.001502990722656
    4. ' ' → logprob: -15.876502990722656
    5. 'hhh' → logprob: -16.001502990722656
    6. ' HH' → logprob: -17.126502990722656
    7. '.hh' → logprob: -17.501502990722656
    8. '   ' → logprob: -17.626502990722656
    9. 'HH' → logprob: -18.251502990722656
    10. 'h' → logprob: -18.376502990722656

Token 54: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47409680485725403
    2. '*' → logprob: -0.9740967750549316
    3. ' ' → logprob: -11.09909725189209
    4. '   ' → logprob: -13.22409725189209
    5. '`' → logprob: -14.34909725189209
    6. '  ' → logprob: -14.47409725189209
    7. ' ' → logprob: -14.97409725189209
    8. ')' → logprob: -15.09909725189209
    9. '**' → logprob: -15.22409725189209
    10. '<|end|>' → logprob: -15.59909725189209

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759401321411133
    2. '60' → logprob: -0.8259401321411133
    3. '6' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.075939178466797
    5. '  ' → logprob: -16.200939178466797
    6. '61' → logprob: -16.325939178466797
    7. '64' → logprob: -16.700939178466797
    8. ' sixty' → logprob: -17.450939178466797
    9. '30' → logprob: -18.075939178466797
    10. '59' → logprob: -18.325939178466797

Token 56: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '6' → logprob: -16.875
    4. 'minutes' → logprob: -22.5
    5. '```' → logprob: -22.5
    6. '600' → logprob: -22.75
    7. '   ' → logprob: -23.625
    8. '61' → logprob: -23.875
    9. '  ' → logprob: -24.125
    10. 'minute' → logprob: -25.0

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1603516787290573
    2. ' +' → logprob: -1.9103516340255737
    3. '<|end|>' → logprob: -9.535351753234863
    4. ' ' → logprob: -10.035351753234863
    5. ')' → logprob: -12.535351753234863
    6. ' +
' → logprob: -12.910351753234863
    7. '  ' → logprob: -13.410351753234863
    8. '<|end|>' → logprob: -14.035351753234863
    9. ' ' → logprob: -14.535351753234863
    10. '*' → logprob: -15.035351753234863

Token 58: ' mm' (ID: 8957)
  Prédit: ' mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -0.018150877207517624
    2. 'mm' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.64315128326416
    4. 'm' → logprob: -15.51815128326416
    5. '_mm' → logprob: -15.89315128326416
    6. ' ' → logprob: -16.018150329589844
    7. ' m' → logprob: -16.643150329589844
    8. ' мм' → logprob: -17.143150329589844
    9. '(mm' → logprob: -17.143150329589844
    10. ':mm' → logprob: -17.268150329589844

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.297245055437088
    2. '\n' → logprob: -2.4222450256347656
    3. '<|end|>' → logprob: -2.4222450256347656
    4. '\' → logprob: -3.4222450256347656
    5. '```' → logprob: -4.297245025634766
    6. '

' → logprob: -4.297245025634766
    7. 'newline' → logprob: -5.297245025634766
    8. '#' → logprob: -5.922245025634766
    9. '<|end|>' → logprob: -6.047245025634766
    10. '' → logprob: -6.047245025634766

Token 60: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.414724737405777
    2. '\n' → logprob: -1.7897247076034546
    3. '<|end|>' → logprob: -2.789724826812744
    4. '

' → logprob: -3.164724826812744
    5. '```' → logprob: -3.289724826812744
    6. '#' → logprob: -4.414724826812744
    7. '\' → logprob: -5.039724826812744
    8. 'def' → logprob: -5.539724826812744
    9. '<|end|>' → logprob: -6.164724826812744
    10. ' ' → logprob: -6.539724826812744

Token 61: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4480627477169037
    2. ' calculate' → logprob: -1.698062777519226
    3. ' parse' → logprob: -2.0730626583099365
    4. ' space' → logprob: -3.9480626583099365
    5. '_' → logprob: -4.198062896728516
    6. ' compute' → logprob: -5.948062896728516
    7. ' _' → logprob: -6.073062896728516
    8. ' process' → logprob: -6.198062896728516
    9. ' add' → logprob: -6.323062896728516
    10. ' convert' → logprob: -6.448062896728516

Token 62: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.258029967546463
    2. '_pal' → logprob: -3.0080299377441406
    3. '_overlap' → logprob: -3.2580299377441406
    4. '_available' → logprob: -3.3830299377441406
    5. '_time' → logprob: -4.008029937744141
    6. '_valid' → logprob: -4.008029937744141
    7. '_work' → logprob: -4.383029937744141
    8. '_le' → logprob: -4.508029937744141
    9. '_week' → logprob: -4.758029937744141
    10. ' _' → logprob: -5.008029937744141

Token 63: '_range' (ID: 22022)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.573910653591156
    2. '_range' → logprob: -1.8239107131958008
    3. '_time' → logprob: -1.9489107131958008
    4. 'ter' → logprob: -2.823910713195801
    5. '_interval' → logprob: -3.073910713195801
    6. '_work' → logprob: -5.198910713195801
    7. '_period' → logprob: -6.073910713195801
    8. '_business' → logprob: -6.073910713195801
    9. '_between' → logprob: -6.073910713195801
    10. '_day' → logprob: -6.948910713195801

Token 64: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006477218121290207
    2. ' (' → logprob: -5.256477355957031
    3. '(time' → logprob: -7.131477355957031
    4. '(range' → logprob: -9.506477355957031
    5. '<|end|>' → logprob: -9.881477355957031
    6. '_' → logprob: -10.381477355957031
    7. '(user' → logprob: -10.381477355957031
    8. '(day' → logprob: -10.506477355957031
    9. '(hour' → logprob: -10.631477355957031
    10. '(start' → logprob: -10.631477355957031

Token 65: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.680955171585083
    2. 'utes' → logprob: -1.305955171585083
    3. 's' → logprob: -1.555955171585083
    4. '_' → logprob: -5.430954933166504
    5. '_time' → logprob: -6.430954933166504
    6. '_minutes' → logprob: -6.555954933166504
    7. ')' → logprob: -6.805954933166504
    8. '_start' → logprob: -7.555954933166504
    9. '_value' → logprob: -7.680954933166504
    10. '_,' → logprob: -7.805954933166504

Token 66: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5704400539398193
    2. ',' → logprob: -0.9454400539398193
    3. ')' → logprob: -3.3204400539398193
    4. '):' → logprob: -4.820440292358398
    5. '_' → logprob: -8.195440292358398
    6. '_,' → logprob: -8.570440292358398
    7. ')s' → logprob: -8.570440292358398
    8. ' ,' → logprob: -8.570440292358398
    9. '_time' → logprob: -8.570440292358398
    10. '_minutes' → logprob: -8.695440292358398

Token 67: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.03418591991066933
    2. 'start' → logprob: -3.5341858863830566
    3. ' range' → logprob: -5.659185886383057
    4. 'range' → logprob: -8.034186363220215
    5. 'from' → logprob: -9.284186363220215
    6. ' target' → logprob: -9.409186363220215
    7. ' min' → logprob: -9.534186363220215
    8. ' lower' → logprob: -9.534186363220215
    9. ')' → logprob: -9.784186363220215
    10. ' from' → logprob: -10.409186363220215

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040119826793670654
    2. '_min' → logprob: -3.5401198863983154
    3. '_time' → logprob: -5.165119647979736
    4. '_minutes' → logprob: -5.915119647979736
    5. '_,' → logprob: -7.540119647979736
    6. '_' → logprob: -7.790119647979736
    7. ',_' → logprob: -8.165120124816895
    8. ')' → logprob: -8.665120124816895
    9. ' ,' → logprob: -8.915120124816895
    10. '_hour' → logprob: -9.165120124816895

Token 69: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10022349655628204
    2. 'end' → logprob: -2.3502235412597656
    3. ' stop' → logprob: -11.850223541259766
    4. 'stop' → logprob: -12.350223541259766
    5. '	end' → logprob: -13.350223541259766
    6. ' ' → logprob: -13.850223541259766
    7. '   ' → logprob: -14.350223541259766
    8. '_end' → logprob: -14.475223541259766
    9. ')' → logprob: -15.100223541259766
    10. ',end' → logprob: -15.225223541259766

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00027301779482513666
    2. ')' → logprob: -8.750272750854492
    3. ':' → logprob: -9.625272750854492
    4. ' ):' → logprob: -11.125272750854492
    5. '):
' → logprob: -11.250272750854492
    6. ',' → logprob: -11.625272750854492
    7. '=' → logprob: -12.375272750854492
    8. '   ' → logprob: -13.125272750854492
    9. '>:' → logprob: -14.000272750854492
    10. '**' → logprob: -14.375272750854492

Token 71: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009410137310624123
    2. ' :' → logprob: -5.5094099044799805
    3. ':
' → logprob: -5.8844099044799805
    4. '):' → logprob: -7.0094099044799805
    5. '   ' → logprob: -7.1344099044799805
    6. '<|end|>' → logprob: -8.13440990447998
    7. '():' → logprob: -8.88440990447998
    8. ':return' → logprob: -9.00940990447998
    9. '    ' → logprob: -9.50940990447998
    10. '(True' → logprob: -10.38440990447998

Token 72: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4560309052467346
    2. '    ' → logprob: -1.4560308456420898
    3. ' ' → logprob: -3.08103084564209
    4. ':' → logprob: -3.58103084564209
    5. '<|end|>' → logprob: -3.83103084564209
    6. ' return' → logprob: -4.20603084564209
    7. ':
' → logprob: -5.33103084564209
    8. ' 
' → logprob: -5.70603084564209
    9. ':return' → logprob: -5.70603084564209
    10. '  ' → logprob: -6.33103084564209

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016444755718111992
    2. ' """' → logprob: -4.891444683074951
    3. '    ' → logprob: -6.141444683074951
    4. ' return' → logprob: -6.266444683074951
    5. ' """
' → logprob: -6.266444683074951
    6. '"""' → logprob: -6.641444683074951
    7. ' ' → logprob: -7.766444683074951
    8. ' if' → logprob: -8.64144515991211
    9. ')' → logprob: -8.89144515991211
    10. '  ' → logprob: -9.14144515991211

Token 74: ' Check' (ID: 6208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05535238981246948
    2. ' """' → logprob: -3.8053524494171143
    3. '   ' → logprob: -4.055352210998535
    4. '    ' → logprob: -5.305352210998535
    5. ' )' → logprob: -6.930352210998535
    6. ' """
' → logprob: -7.180352210998535
    7. ' ```' → logprob: -7.180352210998535
    8. ')' → logprob: -7.430352210998535
    9. '  ' → logprob: -7.430352210998535
    10. ' 
' → logprob: -7.805352210998535

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006144457962363958
    2. ' ' → logprob: -6.0061445236206055
    3. ' whether' → logprob: -6.2561445236206055
    4. '  ' → logprob: -6.7561445236206055
    5. 'if' → logprob: -8.131144523620605
    6. '<|end|>' → logprob: -9.381144523620605
    7. 'whether' → logprob: -9.631144523620605
    8. '   ' → logprob: -9.631144523620605
    9. '    ' → logprob: -10.881144523620605
    10. '_' → logprob: -11.506144523620605

Token 76: ' a' (ID: 261)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.20283295214176178
    2. 'start' → logprob: -1.7028329372406006
    3. ' the' → logprob: -7.45283317565918
    4. '(start' → logprob: -7.82783317565918
    5. ' minute' → logprob: -9.07783317565918
    6. ' (' → logprob: -9.32783317565918
    7. 'minute' → logprob: -9.57783317565918
    8. ' a' → logprob: -10.07783317565918
    9. '[start' → logprob: -10.95283317565918
    10. ')' → logprob: -11.07783317565918

Token 77: ' time' (ID: 1058)
  Prédit: ' minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minute' → logprob: -0.19507230818271637
    2. 'minute' → logprob: -1.8200722932815552
    3. ' time' → logprob: -4.945072174072266
    4. ' start' → logprob: -5.820072174072266
    5. ' given' → logprob: -5.820072174072266
    6. 'time' → logprob: -7.445072174072266
    7. 'start' → logprob: -8.195072174072266
    8. 'n' → logprob: -8.320072174072266
    9. ' range' → logprob: -8.445072174072266
    10. '   ' → logprob: -8.695072174072266

Token 78: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2999296188354492
    2. '_' → logprob: -1.5499296188354492
    3. ' <=' → logprob: -1.5499296188354492
    4. ' >=' → logprob: -1.7999296188354492
    5. ')' → logprob: -3.049929618835449
    6. ' is' → logprob: -3.799929618835449
    7. ' minute' → logprob: -3.924929618835449
    8. 'minute' → logprob: -4.799929618835449
    9. '   ' → logprob: -5.049929618835449
    10. ' )' → logprob: -5.049929618835449

Token 79: ' minutes' (ID: 5438)
  Prédit: ' minutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minutes' → logprob: -0.20152463018894196
    2. 'minutes' → logprob: -2.4515247344970703
    3. ' minute' → logprob: -2.8265247344970703
    4. 'minute' → logprob: -3.3265247344970703
    5. '_minutes' → logprob: -8.07652473449707
    6. ' range' → logprob: -8.20152473449707
    7. ')' → logprob: -8.45152473449707
    8. '```' → logprob: -8.82652473449707
    9. 'range' → logprob: -9.32652473449707
    10. 't' → logprob: -10.82652473449707

Token 80: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6028617024421692
    2. ' ' → logprob: -0.8528617024421692
    3. ')' → logprob: -4.1028618812561035
    4. ' >=' → logprob: -5.4778618812561035
    5. '<|end|>' → logprob: -6.6028618812561035
    6. ' )' → logprob: -6.7278618812561035
    7. ' between' → logprob: -7.2278618812561035
    8. '  ' → logprob: -7.8528618812561035
    9. ' lies' → logprob: -8.227861404418945
    10. ',' → logprob: -8.477861404418945

Token 81: ' within' (ID: 3518)
  Prédit: ' within'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' within' → logprob: -0.23854173719882965
    2. ' between' → logprob: -2.238541841506958
    3. 'within' → logprob: -2.488541841506958
    4. ' in' → logprob: -4.738541603088379
    5. 'between' → logprob: -4.863541603088379
    6. 'in' → logprob: -5.363541603088379
    7. '>=' → logprob: -7.613541603088379
    8. 'greater' → logprob: -7.613541603088379
    9. ' >=' → logprob: -8.738541603088379
    10. ' greater' → logprob: -9.238541603088379

Token 82: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.059140440076589584
    2. ' a' → logprob: -3.43414044380188
    3. 'the' → logprob: -4.434140205383301
    4. ' range' → logprob: -5.184140205383301
    5. 'range' → logprob: -5.309140205383301
    6. 'start' → logprob: -7.059140205383301
    7. ' start' → logprob: -7.184140205383301
    8. 'a' → logprob: -8.0591402053833
    9. '[start' → logprob: -8.4341402053833
    10. ')' → logprob: -8.8091402053833

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14028799533843994
    2. 'range' → logprob: -2.1402878761291504
    3. ' given' → logprob: -4.89028787612915
    4. ' start' → logprob: -5.51528787612915
    5. 'start' → logprob: -6.64028787612915
    6. ' specified' → logprob: -9.140288352966309
    7. 'inclusive' → logprob: -9.640288352966309
    8. ' time' → logprob: -9.890288352966309
    9. 'given' → logprob: -9.890288352966309
    10. '[start' → logprob: -10.640288352966309

Token 84: ' [' (ID: 723)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.289262056350708
    2. '(start' → logprob: -2.539262056350708
    3. '[start' → logprob: -2.539262056350708
    4. '[' → logprob: -3.539262056350708
    5. '   ' → logprob: -3.789262056350708
    6. '(min' → logprob: -4.289261817932129
    7. '(' → logprob: -4.664261817932129
    8. '[min' → logprob: -5.539261817932129
    9. ' [' → logprob: -5.664261817932129
    10. 'inclusive' → logprob: -5.914261817932129

Token 85: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.018168320879340172
    2. ' start' → logprob: -4.0181684494018555
    3. ')' → logprob: -11.018168449401855
    4. ',start' → logprob: -14.393168449401855
    5. '[start' → logprob: -15.143168449401855
    6. ',' → logprob: -15.143168449401855
    7. ' ' → logprob: -15.643168449401855
    8. '(start' → logprob: -15.643168449401855
    9. '	start' → logprob: -15.768168449401855
    10. '   ' → logprob: -15.893168449401855

Token 86: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002407282590866089
    2. ' ,' → logprob: -8.375240325927734
    3. ',end' → logprob: -12.500240325927734
    4. ' ' → logprob: -13.500240325927734
    5. '   ' → logprob: -13.500240325927734
    6. '<|end|>' → logprob: -13.875240325927734
    7. ')' → logprob: -14.500240325927734
    8. '<|end|>' → logprob: -14.625240325927734
    9. ']' → logprob: -15.000240325927734
    10. '```' → logprob: -15.375240325927734

Token 87: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007984309340827167
    2. ']:' → logprob: -8.125798225402832
    3. '].' → logprob: -8.250798225402832
    4. ')' → logprob: -9.125798225402832
    5. '],' → logprob: -9.875798225402832
    6. ',' → logprob: -9.875798225402832
    7. '   ' → logprob: -11.125798225402832
    8. ' ]' → logprob: -11.875798225402832
    9. ']
' → logprob: -13.250798225402832
    10. '])' → logprob: -14.250798225402832

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19685405492782593
    2. ')' → logprob: -1.8218541145324707
    3. ' 
' → logprob: -5.821854114532471
    4. ' ' → logprob: -5.946854114532471
    5. ')
' → logprob: -6.321854114532471
    6. ' """
' → logprob: -6.321854114532471
    7. ' return' → logprob: -6.571854114532471
    8. '    ' → logprob: -6.696854114532471
    9. ' )' → logprob: -6.946854114532471
    10. '    
' → logprob: -7.321854114532471

Token 89: ' This' (ID: 1328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07316330075263977
    2. '   ' → logprob: -2.8231632709503174
    3. '"""' → logprob: -5.0731635093688965
    4. ' """
' → logprob: -6.9481635093688965
    5. ' )' → logprob: -6.9481635093688965
    6. ' """' → logprob: -6.9481635093688965
    7. '"""
' → logprob: -7.8231635093688965
    8. ')
' → logprob: -8.073163032531738
    9. ' ' → logprob: -8.323163032531738
    10. '```' → logprob: -8.448163032531738

Token 90: ' function' (ID: 1114)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2968881130218506
    2. ' includes' → logprob: -1.4218881130218506
    3. ' function' → logprob: -1.7968881130218506
    4. ' def' → logprob: -2.4218881130218506
    5. ' ' → logprob: -2.9218881130218506
    6. ' assumes' → logprob: -2.9218881130218506
    7. ' can' → logprob: -3.0468881130218506
    8. ':' → logprob: -4.54688835144043
    9. 'def' → logprob: -4.54688835144043
    10. ' ```' → logprob: -4.79688835144043

Token 91: ' supports' (ID: 17203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8904528021812439
    2. ':' → logprob: -1.5154528617858887
    3. ' ' → logprob: -1.6404528617858887
    4. '    ' → logprob: -2.5154528617858887
    5. '<|end|>' → logprob: -4.140452861785889
    6. '<|end|>' → logprob: -4.640452861785889
    7. ' is' → logprob: -5.015452861785889
    8. ' :' → logprob: -5.015452861785889
    9. '  ' → logprob: -5.265452861785889
    10. ':return' → logprob: -5.265452861785889

Token 92: ' ranges' (ID: 33269)
  Prédit: ' ranges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ranges' → logprob: -0.3331410884857178
    2. ' ' → logprob: -2.7081410884857178
    3. ' the' → logprob: -2.9581410884857178
    4. ' range' → logprob: -3.3331410884857178
    5. 'ranges' → logprob: -3.8331410884857178
    6. 'range' → logprob: -3.9581410884857178
    7. ' overnight' → logprob: -4.208141326904297
    8. ' cases' → logprob: -4.333141326904297
    9. ' midnight' → logprob: -4.458141326904297
    10. ' when' → logprob: -5.333141326904297

Token 93: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.03760277479887009
    2. 'that' → logprob: -3.412602663040161
    3. ' spanning' → logprob: -6.03760290145874
    4. '_that' → logprob: -6.78760290145874
    5. '   ' → logprob: -8.912602424621582
    6. 'def' → logprob: -9.287602424621582
    7. ' ' → logprob: -9.412602424621582
    8. '	that' → logprob: -10.287602424621582
    9. ' crossing' → logprob: -10.537602424621582
    10. ' wrapping' → logprob: -11.287602424621582

Token 94: ' can' (ID: 665)
  Prédit: ' span'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' span' → logprob: -0.45531725883483887
    2. ' wrap' → logprob: -1.0803172588348389
    3. ' cross' → logprob: -4.330317497253418
    4. 'wrap' → logprob: -5.580317497253418
    5. ' may' → logprob: -5.955317497253418
    6. ' might' → logprob: -6.205317497253418
    7. 'cross' → logprob: -6.955317497253418
    8. 'span' → logprob: -7.080317497253418
    9. ' go' → logprob: -7.205317497253418
    10. ' spans' → logprob: -7.830317497253418

Token 95: ' wrap' (ID: 20404)
  Prédit: ' span'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' span' → logprob: -0.5614053606987
    2. ' wrap' → logprob: -1.0614054203033447
    3. ' cross' → logprob: -3.4364054203033447
    4. 'wrap' → logprob: -3.5614054203033447
    5. 'span' → logprob: -4.561405181884766
    6. 'cross' → logprob: -4.811405181884766
    7. '<|end|>' → logprob: -6.561405181884766
    8. ' go' → logprob: -7.936405181884766
    9. '_wrap' → logprob: -7.936405181884766
    10. ' overlap' → logprob: -7.936405181884766

Token 96: ' over' (ID: 1072)
  Prédit: ' around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' around' → logprob: -0.38725051283836365
    2. 'around' → logprob: -1.137250542640686
    3. '-around' → logprob: -8.262250900268555
    4. ' ' → logprob: -9.512250900268555
    5. 'Around' → logprob: -11.012250900268555
    6. '   ' → logprob: -11.512250900268555
    7. '_' → logprob: -11.762250900268555
    8. ' over' → logprob: -12.387250900268555
    9. ' overnight' → logprob: -13.262250900268555
    10. 'overn' → logprob: -13.387250900268555

Token 97: ' midnight' (ID: 54213)
  Prédit: ' midnight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' midnight' → logprob: -0.02839028835296631
    2. ' the' → logprob: -4.153390407562256
    3. ' ' → logprob: -5.403390407562256
    4. 'mid' → logprob: -5.778390407562256
    5. '   ' → logprob: -6.153390407562256
    6. '24' → logprob: -6.528390407562256
    7. ' mid' → logprob: -8.528389930725098
    8. ' a' → logprob: -8.778389930725098
    9. 'the' → logprob: -9.153389930725098
    10. '0' → logprob: -9.778389930725098

Token 98: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.657611608505249
    2. ':' → logprob: -1.657611608505249
    3. '   ' → logprob: -1.657611608505249
    4. ',' → logprob: -2.657611608505249
    5. ')' → logprob: -4.032611846923828
    6. '):' → logprob: -5.532611846923828
    7. ' (' → logprob: -5.907611846923828
    8. ' :' → logprob: -6.657611846923828
    9. ' ' → logprob: -7.032611846923828
    10. ' ,' → logprob: -7.407611846923828

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014740179292857647
    2. ')' → logprob: -4.264739990234375
    3. '```' → logprob: -8.764739990234375
    4. '    
' → logprob: -9.889739990234375
    5. '):' → logprob: -9.889739990234375
    6. ' ' → logprob: -10.014739990234375
    7. '
' → logprob: -10.014739990234375
    8. ':' → logprob: -10.014739990234375
    9. '):
' → logprob: -10.389739990234375
    10. '    ' → logprob: -10.389739990234375

Token 100: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15437853336334229
    2. ')' → logprob: -2.0293784141540527
    3. '```' → logprob: -5.654378414154053
    4. '):
' → logprob: -6.404378414154053
    5. '  
' → logprob: -6.779378414154053
    6. ')
' → logprob: -7.154378414154053
    7. ' ' → logprob: -7.154378414154053
    8. ' 
' → logprob: -7.404378414154053
    9. '    
' → logprob: -7.404378414154053
    10. '"""
' (adapté à ' """
') → logprob: -7.779378414154053

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062970565631985664
    2. ' if' → logprob: -5.2562971115112305
    3. '    ' → logprob: -7.3812971115112305
    4. '    
' → logprob: -8.88129711151123
    5. 'if' → logprob: -9.13129711151123
    6. ' 
' → logprob: -9.13129711151123
    7. ' ' → logprob: -10.88129711151123
    8. '  ' → logprob: -11.00629711151123
    9. ' i' → logprob: -11.50629711151123
    10. 'i' → logprob: -12.00629711151123

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9052560925483704
    2. ' if' → logprob: -0.9052560925483704
    3. 'if' (adapté à ' if') → logprob: -1.6552560329437256
    4. 'i' → logprob: -10.405256271362305
    5. ' i' → logprob: -10.780256271362305
    6. ' ' → logprob: -11.405256271362305
    7. '    ' → logprob: -11.905256271362305
    8. 'return' → logprob: -12.530256271362305
    9. '  ' → logprob: -12.655256271362305
    10. ' return' → logprob: -13.030256271362305

Token 103: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3874043822288513
    2. 'start' → logprob: -1.137404441833496
    3. 'end' → logprob: -7.887404441833496
    4. ' end' → logprob: -8.762404441833496
    5. '	start' → logprob: -14.387404441833496
    6. '[start' → logprob: -15.387404441833496
    7. ' ' → logprob: -15.637404441833496
    8. '   ' → logprob: -16.01240348815918
    9. '(start' → logprob: -16.38740348815918
    10. '  ' → logprob: -17.13740348815918

Token 104: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011051828041672707
    2. '<=' → logprob: -4.511051654815674
    3. ' <' → logprob: -13.261052131652832
    4. ' >' → logprob: -14.261052131652832
    5. ' ' → logprob: -14.761052131652832
    6. ')<=' → logprob: -15.011052131652832
    7. ' ==' → logprob: -15.136052131652832
    8. '<|end|>' → logprob: -15.386052131652832
    9. '<' → logprob: -16.136051177978516
    10. ']<=' → logprob: -16.386051177978516

Token 105: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12705442309379578
    2. ' end' → logprob: -2.127054452896118
    3. 'minute' → logprob: -9.377054214477539
    4. '	end' → logprob: -11.252054214477539
    5. ' ' → logprob: -11.252054214477539
    6. ' minute' → logprob: -12.002054214477539
    7. '>end' → logprob: -13.252054214477539
    8. '   ' → logprob: -13.877054214477539
    9. '=end' → logprob: -14.002054214477539
    10. '[end' → logprob: -14.002054214477539

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030750898644328117
    2. ':
' → logprob: -3.5307509899139404
    3. ':return' → logprob: -7.780750751495361
    4. '       ' → logprob: -8.15575122833252
    5. '   ' → logprob: -8.65575122833252
    6. ' :' → logprob: -10.65575122833252
    7. '<|end|>' → logprob: -10.90575122833252
    8. '):
' → logprob: -10.90575122833252
    9. '):' → logprob: -11.15575122833252
    10. ':

' → logprob: -11.28075122833252

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011295736767351627
    2. ':' → logprob: -4.636295795440674
    3. ' return' → logprob: -7.511295795440674
    4. ':
' → logprob: -7.511295795440674
    5. ':return' → logprob: -9.011295318603516
    6. '
' → logprob: -9.136295318603516
    7. '<|end|>' → logprob: -9.636295318603516
    8. '   ' → logprob: -10.261295318603516
    9. ',' → logprob: -10.386295318603516
    10. 'return' → logprob: -11.011295318603516

Token 108: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3014927804470062
    2. ' return' → logprob: -1.5514928102493286
    3. 'return' (adapté à ' return') → logprob: -3.051492691040039
    4. '   ' → logprob: -7.426492691040039
    5. ':return' → logprob: -8.676492691040039
    6. ' if' → logprob: -8.801492691040039
    7. '<|end|>' → logprob: -10.426492691040039
    8. ' ' → logprob: -10.676492691040039
    9. '           ' → logprob: -10.926492691040039
    10. 'if' → logprob: -11.051492691040039

Token 109: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.014174911193549633
    2. 'start' → logprob: -4.264174938201904
    3. ' ' → logprob: -11.514174461364746
    4. ' minute' → logprob: -14.639174461364746
    5. '   ' → logprob: -15.139174461364746
    6. '(start' → logprob: -15.264174461364746
    7. ' ' → logprob: -16.139175415039062
    8. ' (' → logprob: -16.389175415039062
    9. '  ' → logprob: -16.514175415039062
    10. '    ' → logprob: -16.889175415039062

Token 110: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018152287229895592
    2. '<=' → logprob: -4.018152236938477
    3. ' and' → logprob: -13.393152236938477
    4. 'and' → logprob: -14.643152236938477
    5. ')<=' → logprob: -16.268152236938477
    6. ' ≤' → logprob: -16.643152236938477
    7. ' ' → logprob: -17.143152236938477
    8. ' ' → logprob: -17.393152236938477
    9. ')' → logprob: -17.643152236938477
    10. '<|end|>' → logprob: -17.768152236938477

Token 111: ' minute' (ID: 12434)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.07889143377542496
    2. ' minute' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.82889175415039
    4. '-minute' → logprob: -14.95389175415039
    5. '.minute' → logprob: -14.95389175415039
    6. 'min' → logprob: -15.32889175415039
    7. '   ' → logprob: -15.82889175415039
    8. 'time' → logprob: -16.70389175415039
    9. 'Minute' → logprob: -16.70389175415039
    10. '     ' → logprob: -18.45389175415039

Token 112: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4155714511871338
    2. ' <=' → logprob: -1.1655714511871338
    3. 'and' → logprob: -4.040571212768555
    4. '<=' → logprob: -4.540571212768555
    5. '   ' → logprob: -11.790571212768555
    6. '       ' → logprob: -11.915571212768555
    7. '    ' → logprob: -12.165571212768555
    8. ' or' → logprob: -12.415571212768555
    9. ' ' → logprob: -12.540571212768555
    10. ' ≤' → logprob: -12.790571212768555

Token 113: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3868741989135742
    2. 'end' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.386874198913574
    4. '	end' → logprob: -13.886874198913574
    5. '(end' → logprob: -16.01187515258789
    6. '   ' → logprob: -16.26187515258789
    7. ' ' → logprob: -16.26187515258789
    8. '[end' → logprob: -16.38687515258789
    9. '=end' → logprob: -16.76187515258789
    10. '_end' → logprob: -16.88687515258789

Token 114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000252160825766623
    2. ' else' → logprob: -8.750251770019531
    3. '
' → logprob: -10.250251770019531
    4. '    
' → logprob: -10.500251770019531
    5. '<|end|>' → logprob: -11.000251770019531
    6. '	else' → logprob: -12.125251770019531
    7. 'else' → logprob: -12.500251770019531
    8. '<|end|>' → logprob: -13.125251770019531
    9. '       ' → logprob: -14.875251770019531
    10. '   
' → logprob: -15.000251770019531

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014811802248004824
    2. ' else' → logprob: -9.875147819519043
    3. '    
' → logprob: -10.000147819519043
    4. '
' → logprob: -10.250147819519043
    5. 'else' → logprob: -12.000147819519043
    6. '	else' → logprob: -12.625147819519043
    7. '<|end|>' → logprob: -12.875147819519043
    8. '       ' → logprob: -14.625147819519043
    9. '```' → logprob: -14.625147819519043
    10. ' 
' → logprob: -15.250147819519043

Token 116: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16257642209529877
    2. ' else' → logprob: -2.53757643699646
    3. 'else' (adapté à ' else') → logprob: -2.66257643699646
    4. 'return' → logprob: -6.912576198577881
    5. ' return' → logprob: -8.662576675415039
    6. '
' → logprob: -11.412576675415039
    7. '    
' → logprob: -11.412576675415039
    8. '	else' → logprob: -11.412576675415039
    9. '    ' → logprob: -11.662576675415039
    10. '  ' → logprob: -12.162576675415039

Token 117: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9665539264678955
    2. ':
' → logprob: -1.0915539264678955
    3. ':' → logprob: -1.3415539264678955
    4. '   ' → logprob: -3.9665539264678955
    5. ':return' → logprob: -6.216553688049316
    6. ' :
' → logprob: -7.091553688049316
    7. ',' → logprob: -8.466553688049316
    8. '    ' → logprob: -8.966553688049316
    9. ' return' → logprob: -9.091553688049316
    10. ' :' → logprob: -9.716553688049316

Token 118: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5466575622558594
    2. '   ' → logprob: -1.1716575622558594
    3. '       ' → logprob: -2.5466575622558594
    4. 'return' → logprob: -3.4216575622558594
    5. '    ' → logprob: -8.54665756225586
    6. ' (' → logprob: -10.79665756225586
    7. ' ' → logprob: -10.79665756225586
    8. '  ' → logprob: -12.17165756225586
    9. '     ' → logprob: -12.17165756225586
    10. '	return' → logprob: -12.29665756225586

Token 119: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20204129815101624
    2. ' return' → logprob: -1.7020412683486938
    3. '   ' → logprob: -8.202041625976562
    4. 'minute' → logprob: -8.577041625976562
    5. '       ' → logprob: -8.827041625976562
    6. ' minute' → logprob: -12.077041625976562
    7. ' ' → logprob: -12.577041625976562
    8. 'start' → logprob: -12.577041625976562
    9. '           ' → logprob: -12.702041625976562
    10. '	return' → logprob: -14.452041625976562

Token 120: ' For' (ID: 2214)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.52392578125
    2. 'return' → logprob: -0.89892578125
    3. '   ' → logprob: -7.27392578125
    4. 'minute' → logprob: -9.64892578125
    5. ' minute' → logprob: -11.27392578125
    6. '       ' → logprob: -11.39892578125
    7. ' ' → logprob: -11.52392578125
    8. '    ' → logprob: -12.77392578125
    9. '  ' → logprob: -13.52392578125
    10. 'Return' → logprob: -14.02392578125

Token 121: ' ranges' (ID: 33269)
  Prédit: ' ranges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ranges' → logprob: -0.6695932745933533
    2. ' minute' → logprob: -1.544593334197998
    3. 'minute' → logprob: -1.669593334197998
    4. 'ranges' → logprob: -3.919593334197998
    5. ' times' → logprob: -4.044593334197998
    6. ' wrap' → logprob: -4.294593334197998
    7. ' the' → logprob: -5.169593334197998
    8. ' range' → logprob: -5.419593334197998
    9. ' wrapping' → logprob: -5.669593334197998
    10. ' example' → logprob: -5.794593334197998

Token 122: ' passing' (ID: 21178)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.2863129675388336
    2. '   ' → logprob: -2.411313056945801
    3. ':' → logprob: -2.911313056945801
    4. ' if' → logprob: -3.161313056945801
    5. '       ' → logprob: -4.411313056945801
    6. ' return' → logprob: -4.536313056945801
    7. 'that' → logprob: -4.661313056945801
    8. ',' → logprob: -4.911313056945801
    9. ' (' → logprob: -5.411313056945801
    10. 'return' → logprob: -5.536313056945801

Token 123: ' midnight' (ID: 54213)
  Prédit: ' midnight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' midnight' → logprob: -0.18656575679779053
    2. 'over' → logprob: -2.93656587600708
    3. ' through' → logprob: -3.43656587600708
    4. ' over' → logprob: -3.56156587600708
    5. 'overn' → logprob: -3.68656587600708
    6. 'mid' → logprob: -3.81156587600708
    7. 'through' → logprob: -4.81156587600708
    8. ' ' → logprob: -7.68656587600708
    9. '   ' → logprob: -8.561565399169922
    10. ' the' → logprob: -8.686565399169922

Token 124: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20348218083381653
    2. ' return' → logprob: -2.453482151031494
    3. 'return' → logprob: -2.828482151031494
    4. '       ' → logprob: -3.328482151031494
    5. ':return' → logprob: -6.953482151031494
    6. ',' → logprob: -7.578482151031494
    7. '
' → logprob: -7.578482151031494
    8. ':' → logprob: -7.703482151031494
    9. ' ' → logprob: -9.203482627868652
    10. '  ' → logprob: -9.203482627868652

Token 125: ' e' (ID: 319)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2529124915599823
    2. 'return' → logprob: -1.5029125213623047
    3. '   ' → logprob: -7.252912521362305
    4. '       ' → logprob: -8.252912521362305
    5. '           ' → logprob: -12.627912521362305
    6. '	return' → logprob: -12.752912521362305
    7. ' ' → logprob: -12.877912521362305
    8. '    ' → logprob: -13.502912521362305
    9. ':return' → logprob: -13.502912521362305
    10. '  ' → logprob: -14.252912521362305

Token 126: '.g' (ID: 1940)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2633237838745117
    2. 'lse' → logprob: -1.6383237838745117
    3. 'eturn' → logprob: -3.5133237838745117
    4. 'elif' → logprob: -5.888323783874512
    5. 'if' → logprob: -6.888323783874512
    6. ' return' → logprob: -7.388323783874512
    7. 'else' → logprob: -7.388323783874512
    8. 'ns' → logprob: -7.888323783874512
    9. 'nable' → logprob: -8.013323783874512
    10. 'x' → logprob: -8.263323783874512

Token 127: '.,' (ID: 4213)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5056496858596802
    2. '   ' → logprob: -1.6306496858596802
    3. 'start' → logprob: -1.8806496858596802
    4. ' if' → logprob: -2.1306495666503906
    5. 'minute' → logprob: -2.1306495666503906
    6. ',' → logprob: -2.8806495666503906
    7. '.' → logprob: -3.0056495666503906
    8. 'time' → logprob: -4.130649566650391
    9. ' start' → logprob: -4.380649566650391
    10. '    ' → logprob: -4.755649566650391

Token 128: ' ' (ID: 220)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.31887155771255493
    2. ' minute' → logprob: -1.3188714981079102
    3. ' return' → logprob: -5.94387149810791
    4. 'return' → logprob: -6.94387149810791
    5. '   ' → logprob: -7.44387149810791
    6. 'start' → logprob: -7.56887149810791
    7. ' start' → logprob: -7.81887149810791
    8. 'hour' → logprob: -8.56887149810791
    9. ' ' → logprob: -9.44387149810791
    10. ' hour' → logprob: -9.81887149810791

Token 129: '21' (ID: 2040)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.1544453352689743
    2. '23' → logprob: -2.9044454097747803
    3. ' minute' → logprob: -3.1544454097747803
    4. 'start' → logprob: -3.7794454097747803
    5. 'end' → logprob: -5.404445171356201
    6. ' ' → logprob: -5.779445171356201
    7. ' start' → logprob: -5.904445171356201
    8. '22' → logprob: -5.904445171356201
    9. 'hour' → logprob: -6.279445171356201
    10. '   ' → logprob: -7.029445171356201

Token 130: ':' (ID: 25)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.15833060443401337
    2. ':' → logprob: -2.0333306789398193
    3. ' <=' → logprob: -5.03333044052124
    4. '0' → logprob: -5.15833044052124
    5. '<=' → logprob: -6.28333044052124
    6. '60' → logprob: -8.408330917358398
    7. '```' → logprob: -8.533330917358398
    8. '50' → logprob: -8.533330917358398
    9. '>' → logprob: -8.658330917358398
    10. '55' → logprob: -8.908330917358398

Token 131: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0009443380986340344
    2. '0' → logprob: -7.000944137573242
    3. '30' → logprob: -10.875944137573242
    4. ' ' → logprob: -11.875944137573242
    5. '60' → logprob: -12.000944137573242
    6. '```' → logprob: -15.375944137573242
    7. '45' → logprob: -16.250944137573242
    8. '000' → logprob: -16.500944137573242
    9. '(' → logprob: -17.063444137573242
    10. '15' → logprob: -17.250944137573242

Token 132: ' ~' (ID: 6574)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3142872750759125
    2. '<=' → logprob: -1.3142873048782349
    3. ' or' → logprob: -7.189287185668945
    4. 'or' → logprob: -8.939287185668945
    5. '60' → logprob: -9.939287185668945
    6. ',' → logprob: -11.064287185668945
    7. '   ' → logprob: -11.189287185668945
    8. ')' → logprob: -11.439287185668945
    9. 'return' → logprob: -11.689287185668945
    10. 'minute' → logprob: -11.814287185668945

Token 133: ' ' (ID: 220)
  Prédit: '05'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '05' → logprob: -0.7598559260368347
    2. '06' → logprob: -1.2598559856414795
    3. ' ' → logprob: -1.7598559856414795
    4. '03' → logprob: -3.1348559856414795
    5. '5' → logprob: -3.8848559856414795
    6. '6' → logprob: -5.2598557472229
    7. '04' → logprob: -5.5098557472229
    8. '07' → logprob: -6.7598557472229
    9. '02' → logprob: -7.2598557472229
    10. '3' → logprob: -7.7598557472229

Token 134: '01' (ID: 2290)
  Prédit: '05'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '05' → logprob: -0.24380505084991455
    2. '06' → logprob: -1.9938050508499146
    3. '03' → logprob: -3.118804931640625
    4. '04' → logprob: -3.618804931640625
    5. '5' → logprob: -5.243804931640625
    6. '02' → logprob: -6.118804931640625
    7. ' ' → logprob: -7.493804931640625
    8. '6' → logprob: -7.743804931640625
    9. '07' → logprob: -7.993804931640625
    10. '4' → logprob: -8.493804931640625

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010123764164745808
    2. '00' → logprob: -4.6351237297058105
    3. '   ' → logprob: -8.760124206542969
    4. '59' → logprob: -10.510124206542969
    5. '55' → logprob: -10.635124206542969
    6. '60' → logprob: -10.760124206542969
    7. 'am' → logprob: -10.760124206542969
    8. ':return' → logprob: -11.135124206542969
    9. ' :' → logprob: -11.635124206542969
    10. '0' → logprob: -11.635124206542969

Token 136: '59' (ID: 4621)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.008407365530729294
    2. '59' → logprob: -5.1334075927734375
    3. '30' → logprob: -6.0084075927734375
    4. '60' → logprob: -11.758407592773438
    5. ' ' → logprob: -12.383407592773438
    6. '55' → logprob: -12.633407592773438
    7. '45' → logprob: -14.133407592773438
    8. '0' → logprob: -14.258407592773438
    9. '40' → logprob: -15.508407592773438
    10. '50' → logprob: -15.508407592773438

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8612256646156311
    2. ' return' → logprob: -1.3612256050109863
    3. '   ' → logprob: -1.6112256050109863
    4. 'return' → logprob: -2.1112256050109863
    5. ' ' → logprob: -9.861226081848145
    6. '    ' → logprob: -10.111226081848145
    7. '     ' → logprob: -10.361226081848145
    8. '      ' → logprob: -10.486226081848145
    9. ',' → logprob: -10.611226081848145
    10. ':return' → logprob: -10.736226081848145

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0806637704372406
    2. ' return' → logprob: -2.9556636810302734
    3. '   ' → logprob: -3.9556636810302734
    4. 'return' → logprob: -5.080663681030273
    5. '    ' → logprob: -10.830663681030273
    6. '      ' → logprob: -10.830663681030273
    7. ' ' → logprob: -11.080663681030273
    8. '           ' → logprob: -11.830663681030273
    9. '        ' → logprob: -12.205663681030273
    10. '     ' → logprob: -12.205663681030273

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19045144319534302
    2. ' return' → logprob: -1.8154513835906982
    3. '   ' → logprob: -4.565451622009277
    4. '       ' → logprob: -8.440451622009277
    5. ' ' → logprob: -11.190451622009277
    6. '  ' → logprob: -11.940451622009277
    7. '	return' → logprob: -12.815451622009277
    8. '
' → logprob: -13.690451622009277
    9. '    ' → logprob: -13.815451622009277
    10. 'minute' → logprob: -14.190451622009277

Token 140: ' minute' (ID: 12434)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.5239850282669067
    2. ' minute' → logprob: -0.8989850282669067
    3. '   ' → logprob: -7.398984909057617
    4. ' (' → logprob: -9.398984909057617
    5. '(min' → logprob: -9.648984909057617
    6. '(' → logprob: -10.023984909057617
    7. ' ' → logprob: -10.898984909057617
    8. '  ' → logprob: -11.773984909057617
    9. 'min' → logprob: -11.898984909057617
    10. '.minute' → logprob: -12.523984909057617

Token 141: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4740957021713257
    2. ' >=' → logprob: -0.9740957021713257
    3. '<=' → logprob: -11.599095344543457
    4. ' <=' → logprob: -12.599095344543457
    5. ')>=' → logprob: -12.849095344543457
    6. ')' → logprob: -13.849095344543457
    7. ']>=' → logprob: -13.849095344543457
    8. '>' → logprob: -14.599095344543457
    9. '```' → logprob: -14.849095344543457
    10. ' ' → logprob: -15.224095344543457

Token 142: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.000553151941858232
    2. ' start' → logprob: -7.500553131103516
    3. '	start' → logprob: -16.625553131103516
    4. '[start' → logprob: -17.250553131103516
    5. '(start' → logprob: -18.000553131103516
    6. '=start' → logprob: -18.375553131103516
    7. '0' → logprob: -19.250553131103516
    8. '_start' → logprob: -19.625553131103516
    9. ':start' → logprob: -20.000553131103516
    10. ' ' → logprob: -20.250553131103516

Token 143: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002475777640938759
    2. 'or' → logprob: -6.002475738525391
    3. '	or' → logprob: -16.62747573852539
    4. ' ' → logprob: -18.62747573852539
    5. '0' → logprob: -18.87747573852539
    6. ' orun' → logprob: -19.37747573852539
    7. 'orm' → logprob: -19.75247573852539
    8. '90' → logprob: -20.00247573852539
    9. '   ' → logprob: -20.12747573852539
    10. ' o' → logprob: -20.12747573852539

Token 144: ' minute' (ID: 12434)
  Prédit: ' minute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minute' → logprob: -0.043007638305425644
    2. 'minute' → logprob: -3.1680076122283936
    3. ' ' → logprob: -12.043007850646973
    4. '   ' → logprob: -14.168007850646973
    5. '     ' → logprob: -14.543007850646973
    6. ' minuto' → logprob: -14.918007850646973
    7. '.minute' → logprob: -15.043007850646973
    8. '  ' → logprob: -15.418007850646973
    9. ' ' → logprob: -15.543007850646973
    10. '    ' → logprob: -16.043006896972656

Token 145: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029765760526061058
    2. '<=' → logprob: -3.5297658443450928
    3. '<|end|>' → logprob: -11.779766082763672
    4. ' ' → logprob: -12.529766082763672
    5. ')<=' → logprob: -13.654766082763672
    6. ' <=",' → logprob: -13.779766082763672
    7. '```' → logprob: -14.779766082763672
    8. ']<=' → logprob: -15.029766082763672
    9. ' ≤' → logprob: -15.529766082763672
    10. '  ' → logprob: -15.779766082763672

Token 146: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4740781784057617
    2. ' end' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.724078178405762
    4. '	end' → logprob: -14.974078178405762
    5. '(end' → logprob: -15.599078178405762
    6. '[end' → logprob: -16.099079132080078
    7. ''end' → logprob: -16.474079132080078
    8. '=end' → logprob: -16.599079132080078
    9. '.end' → logprob: -18.224079132080078
    10. '>end' → logprob: -18.349079132080078

Token 147: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020214715972542763
    2. '<|end|>' → logprob: -4.395214557647705
    3. '
' → logprob: -5.270214557647705
    4. '

' → logprob: -6.395214557647705
    5. '<|end|>' → logprob: -8.145215034484863
    6. '#' → logprob: -9.520215034484863
    7. '(' → logprob: -9.520215034484863
    8. '```' → logprob: -9.645215034484863
    9. ')' → logprob: -9.770215034484863
    10. ' def' → logprob: -9.770215034484863

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009561245678924024
    2. 'd' → logprob: -7.250956058502197
    3. '
' → logprob: -9.000956535339355
    4. ' 
' → logprob: -10.250956535339355
    5. ' def' → logprob: -10.625956535339355
    6. '```' → logprob: -11.625956535339355
    7. '\' → logprob: -11.750956535339355
    8. '  
' → logprob: -11.750956535339355
    9. '

' → logprob: -11.875956535339355
    10. 'de' → logprob: -12.000956535339355

Token 149: ' truncate' (ID: 126309)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2435590028762817
    2. 'is' → logprob: -1.6185590028762817
    3. ' get' → logprob: -2.243558883666992
    4. ' check' → logprob: -2.743558883666992
    5. 'get' → logprob: -2.868558883666992
    6. 'check' → logprob: -3.243558883666992
    7. ' time' → logprob: -3.618558883666992
    8. ' filter' → logprob: -3.868558883666992
    9. 'filter' → logprob: -3.868558883666992
    10. 'time' → logprob: -4.118558883666992

Token 150: '_ratio' (ID: 45680)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.49502208828926086
    2. '_string' → logprob: -1.4950220584869385
    3. '_to' → logprob: -3.3700220584869385
    4. '_' → logprob: -3.6200220584869385
    5. '_text' → logprob: -3.6200220584869385
    6. '_log' → logprob: -4.870022296905518
    7. '_timestamp' → logprob: -5.495022296905518
    8. '_at' → logprob: -5.495022296905518
    9. '_duration' → logprob: -5.495022296905518
    10. '_schedule' → logprob: -5.495022296905518

Token 151: '(ok' (ID: 128325)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.805042028427124
    2. '(' → logprob: -1.305042028427124
    3. '(time' → logprob: -2.555042028427124
    4. '(value' → logprob: -3.430042028427124
    5. '(s' → logprob: -3.555042028427124
    6. '_ratio' → logprob: -3.680042028427124
    7. ' (' → logprob: -4.305042266845703
    8. '(tr' → logprob: -4.305042266845703
    9. '_to' → logprob: -4.930042266845703
    10. '(n' → logprob: -4.930042266845703

Token 152: ',' (ID: 11)
  Prédit: '_ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.20953218638896942
    2. ')' → logprob: -2.2095322608947754
    3. 'ay' → logprob: -3.0845322608947754
    4. '_time' → logprob: -5.084532260894775
    5. '_times' → logprob: -5.709532260894775
    6. '_r' → logprob: -5.834532260894775
    7. '_)' → logprob: -6.209532260894775
    8. ',' → logprob: -6.459532260894775
    9. '_rat' → logprob: -6.459532260894775
    10. '_' → logprob: -6.584532260894775

Token 153: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9081722497940063
    2. 'all' → logprob: -1.2831722497940063
    3. 'nok' → logprob: -2.408172130584717
    4. 'ng' → logprob: -2.783172130584717
    5. 'ok' → logprob: -3.033172130584717
    6. 'not' → logprob: -3.283172130584717
    7. ' total' → logprob: -3.908172130584717
    8. 'no' → logprob: -4.658172130584717
    9. 'n' → logprob: -4.783172130584717
    10. ' nok' → logprob: -5.158172130584717

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011556669138371944
    2. '):
' → logprob: -4.511556625366211
    3. ',' → logprob: -7.761556625366211
    4. ')' → logprob: -10.761556625366211
    5. '):
' → logprob: -11.011556625366211
    6. ' ):' → logprob: -11.386556625366211
    7. '   ' → logprob: -11.511556625366211
    8. ':' → logprob: -11.761556625366211
    9. '_ratio' → logprob: -12.011556625366211
    10. ' ' → logprob: -13.011556625366211

Token 155: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003996953833848238
    2. '   ' → logprob: -6.753996849060059
    3. '(' → logprob: -7.003996849060059
    4. '):' → logprob: -7.003996849060059
    5. ',' → logprob: -7.128996849060059
    6. ' :' → logprob: -9.753996849060059
    7. '():' → logprob: -9.753996849060059
    8. ':return' → logprob: -11.253996849060059
    9. '_ratio' → logprob: -11.378996849060059
    10. ':**' → logprob: -12.003996849060059

Token 156: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7686498165130615
    2. ' ok' → logprob: -1.2686498165130615
    3. '0' → logprob: -1.8936498165130615
    4. 'ok' → logprob: -2.5186498165130615
    5. ' if' → logprob: -4.768650054931641
    6. ' return' → logprob: -5.393650054931641
    7. ' ' → logprob: -5.518650054931641
    8. 'if' → logprob: -6.018650054931641
    9. 'return' → logprob: -6.393650054931641
    10. ':' → logprob: -8.14365005493164

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008695646189153194
    2. ' if' → logprob: -5.258695602416992
    3. ' """' → logprob: -6.258695602416992
    4. ' """
' → logprob: -6.883695602416992
    5. 'if' → logprob: -8.883695602416992
    6. '    ' → logprob: -8.883695602416992
    7. '"""' → logprob: -9.008695602416992
    8. ' return' → logprob: -10.133695602416992
    9. '"""
' → logprob: -11.383695602416992
    10. '"' → logprob: -11.383695602416992

Token 158: ' Compute' (ID: 45438)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1619909107685089
    2. 'if' → logprob: -2.1619908809661865
    3. ' return' → logprob: -4.036991119384766
    4. '   ' → logprob: -4.286991119384766
    5. 'return' → logprob: -6.411991119384766
    6. ' ratio' → logprob: -6.661991119384766
    7. 'ratio' → logprob: -9.286991119384766
    8. ' i' → logprob: -11.286991119384766
    9. ' ' → logprob: -11.661991119384766
    10. 'r' → logprob: -12.536991119384766

Token 159: ' the' (ID: 290)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7755786180496216
    2. '0' → logprob: -1.9005786180496216
    3. 'int' → logprob: -1.9005786180496216
    4. ' round' → logprob: -2.525578498840332
    5. ' (' → logprob: -3.025578498840332
    6. 'round' → logprob: -3.400578498840332
    7. ' ok' → logprob: -3.525578498840332
    8. ' ' → logprob: -4.650578498840332
    9. 'ok' → logprob: -4.650578498840332
    10. '(round' → logprob: -4.650578498840332

Token 160: ' integer' (ID: 16336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.129584789276123
    2. 'ok' → logprob: -1.254584789276123
    3. 'round' → logprob: -2.129584789276123
    4. 'int' → logprob: -2.379584789276123
    5. '(ok' → logprob: -3.004584789276123
    6. ' ok' → logprob: -3.129584789276123
    7. 'ratio' → logprob: -4.004584789276123
    8. '(' → logprob: -4.254584789276123
    9. ' (' → logprob: -4.379584789276123
    10. ' int' → logprob: -4.504584789276123

Token 161: ' percentage' (ID: 19717)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.38423988223075867
    2. ' percentage' → logprob: -1.509239912033081
    3. ' ratio' → logprob: -3.259239912033081
    4. ' division' → logprob: -3.259239912033081
    5. 'percentage' → logprob: -4.509239673614502
    6. '(' → logprob: -5.884239673614502
    7. 'part' → logprob: -6.259239673614502
    8. 'ratio' → logprob: -6.634239673614502
    9. ' (' → logprob: -6.759239673614502
    10. 'division' → logprob: -7.009239673614502

Token 162: ' truncated' (ID: 135947)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931149363517761
    2. '   ' → logprob: -1.568114995956421
    3. ' (' → logprob: -1.818114995956421
    4. ' of' → logprob: -3.318114995956421
    5. ' return' → logprob: -3.943114995956421
    6. 'def' → logprob: -3.943114995956421
    7. ' (%)' → logprob: -3.943114995956421
    8. 'return' → logprob: -4.568114757537842
    9. ' ' → logprob: -5.443114757537842
    10. '  ' → logprob: -5.693114757537842

Token 163: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31144341826438904
    2. ' (' → logprob: -1.5614434480667114
    3. ' of' → logprob: -3.936443328857422
    4. ' to' → logprob: -4.436443328857422
    5. ' ' → logprob: -5.436443328857422
    6. 'to' → logprob: -5.561443328857422
    7. ' by' → logprob: -6.186443328857422
    8. 'def' → logprob: -6.561443328857422
    9. '"' → logprob: -6.686443328857422
    10. '(
' → logprob: -6.686443328857422

Token 164: 'not' (ID: 2878)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.9456852674484253
    2. ' ok' → logprob: -0.9456852674484253
    3. ' (' → logprob: -2.570685386657715
    4. '(ok' → logprob: -3.070685386657715
    5. '   ' → logprob: -3.320685386657715
    6. ')' → logprob: -3.945685386657715
    7. ' ' → logprob: -3.945685386657715
    8. 'int' → logprob: -5.320685386657715
    9. '100' → logprob: -5.445685386657715
    10. ' )' → logprob: -5.570685386657715

Token 165: ' rounded' (ID: 24678)
  Prédit: ' rounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rounded' → logprob: -0.15452563762664795
    2. 'rounded' → logprob: -2.0295257568359375
    3. ' rounding' → logprob: -4.6545257568359375
    4. '-rounded' → logprob: -7.1545257568359375
    5. 'round' → logprob: -7.5295257568359375
    6. '<|end|>' → logprob: -7.5295257568359375
    7. ' floor' → logprob: -9.154525756835938
    8. ' round' → logprob: -9.529525756835938
    9. 'floor' → logprob: -10.029525756835938
    10. ')' → logprob: -10.529525756835938

Token 166: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00580994039773941
    2. ',' → logprob: -5.755809783935547
    3. ' to' → logprob: -7.505809783935547
    4. ' ' → logprob: -7.505809783935547
    5. ' )' → logprob: -7.505809783935547
    6. 'def' → logprob: -8.630809783935547
    7. '):' → logprob: -8.630809783935547
    8. '   ' → logprob: -8.755809783935547
    9. ')
' → logprob: -9.630809783935547
    10. '')' → logprob: -9.755809783935547

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0774601399898529
    2. ' if' → logprob: -2.7024600505828857
    3. ' ' → logprob: -5.327460289001465
    4. 'if' → logprob: -7.077460289001465
    5. ' return' → logprob: -7.702460289001465
    6. '    ' → logprob: -7.952460289001465
    7. '  ' → logprob: -8.327460289001465
    8. '(' → logprob: -8.452460289001465
    9. ' (' → logprob: -8.702460289001465
    10. ')' → logprob: -9.827460289001465

Token 168: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09825540333986282
    2. ' if' → logprob: -2.4732553958892822
    3. 'if' → logprob: -4.973255634307861
    4. ' ' → logprob: -6.473255634307861
    5. '  ' → logprob: -7.973255634307861
    6. ' return' → logprob: -9.348255157470703
    7. '       ' → logprob: -9.598255157470703
    8. '    ' → logprob: -9.723255157470703
    9. '    
' → logprob: -9.973255157470703
    10. 'return' → logprob: -10.473255157470703

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30950677394866943
    2. 'if' → logprob: -1.5595067739486694
    3. ' if' → logprob: -3.059506893157959
    4. 'return' → logprob: -4.809506893157959
    5. ' return' → logprob: -7.059506893157959
    6. '```' → logprob: -11.1845064163208
    7. '       ' → logprob: -11.4345064163208
    8. '`' → logprob: -13.6845064163208
    9. '	if' → logprob: -13.8095064163208
    10. '   ' → logprob: -14.1845064163208

Token 170: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11152598261833191
    2. 'return' (adapté à ' return') → logprob: -2.8615260124206543
    3. ' if' → logprob: -3.2365260124206543
    4. '   ' → logprob: -4.986526012420654
    5. ' return' → logprob: -6.111526012420654
    6. '       ' → logprob: -13.236525535583496
    7. '```' → logprob: -14.611525535583496
    8. ' ' → logprob: -14.861525535583496
    9. '	if' → logprob: -15.361525535583496
    10. '100' → logprob: -15.736525535583496

Token 171: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.32487815618515015
    2. '(ok' → logprob: -1.574878215789795
    3. '(' → logprob: -3.824878215789795
    4. '(int' → logprob: -4.449878215789795
    5. '0' → logprob: -4.574878215789795
    6. 'ok' → logprob: -4.574878215789795
    7. 'int' → logprob: -4.949878215789795
    8. ' ok' → logprob: -5.074878215789795
    9. ' int' → logprob: -6.574878215789795
    10. ' ' → logprob: -6.699878215789795

Token 172: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.0015173576539382339
    2. ' ok' → logprob: -7.001517295837402
    3. '(ok' → logprob: -7.501517295837402
    4. 'int' → logprob: -10.626517295837402
    5. '100' → logprob: -11.501517295837402
    6. ' (' → logprob: -12.126517295837402
    7. '(' → logprob: -12.251517295837402
    8. ' ' → logprob: -12.501517295837402
    9. '0' → logprob: -13.251517295837402
    10. '   ' → logprob: -14.001517295837402

Token 173: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.313274085521698
    2. '*' → logprob: -1.3132741451263428
    3. ' ' → logprob: -11.438274383544922
    4. ')' → logprob: -14.188274383544922
    5. '   ' → logprob: -14.813274383544922
    6. '    ' → logprob: -15.563274383544922
    7. '  ' → logprob: -16.063274383544922
    8. '**' → logprob: -16.438274383544922
    9. '```' → logprob: -16.938274383544922
    10. ' )' → logprob: -17.188274383544922

Token 174: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.048588622361421585
    2. ' ' → logprob: -3.048588514328003
    3. '   ' → logprob: -14.423588752746582
    4. '  ' → logprob: -14.548588752746582
    5. '１００' → logprob: -16.423587799072266
    6. '    ' → logprob: -16.923587799072266
    7. ' hundred' → logprob: -17.048587799072266
    8. '```' → logprob: -17.611087799072266
    9. '10' → logprob: -17.798587799072266
    10. ')' → logprob: -18.423587799072266

Token 175: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0005542247672565281
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.250554084777832
    4. '  ' → logprob: -14.750554084777832
    5. '10' → logprob: -15.875554084777832
    6. '    ' → logprob: -17.25055503845215
    7. '１００' → logprob: -17.37555503845215
    8. ' hundred' → logprob: -17.50055503845215
    9. '```' → logprob: -17.87555503845215
    10. '
' → logprob: -18.43805503845215

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030244102235883474
    2. ')//' → logprob: -6.003024578094482
    3. ' )' → logprob: -8.253024101257324
    4. ' //' → logprob: -8.628024101257324
    5. '//' → logprob: -9.128024101257324
    6. ' ' → logprob: -15.628024101257324
    7. ')
' → logprob: -16.00302505493164
    8. '   ' → logprob: -16.12802505493164
    9. ' ' → logprob: -17.12802505493164
    10. ' //
' → logprob: -17.50302505493164

Token 177: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6931604743003845
    2. ' //' → logprob: -0.6931604743003845
    3. ' ' → logprob: -11.818160057067871
    4. '   ' → logprob: -13.693160057067871
    5. ' ' → logprob: -13.693160057067871
    6. '#' → logprob: -14.068160057067871
    7. '```' → logprob: -14.318160057067871
    8. ')' → logprob: -14.693160057067871
    9. ')//' → logprob: -15.068160057067871
    10. '//
' → logprob: -15.443160057067871

Token 178: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0015023599844425917
    2. ' total' → logprob: -6.501502513885498
    3. 'max' → logprob: -16.751502990722656
    4. '(total' → logprob: -18.001502990722656
    5. ' ' → logprob: -19.376502990722656
    6. '   ' → logprob: -19.876502990722656
    7. '	total' → logprob: -21.501502990722656
    8. ' max' → logprob: -21.751502990722656
    9. 'tot' → logprob: -22.001502990722656
    10. 'Total' → logprob: -22.251502990722656

Token 179: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1375723034143448
    2. '<|end|>' → logprob: -2.3875722885131836
    3. '
' → logprob: -3.7625722885131836
    4. '

' → logprob: -4.512572288513184
    5. '<|end|>' → logprob: -6.262572288513184
    6. '%' → logprob: -8.387572288513184
    7. '```' → logprob: -9.512572288513184
    8. '\' → logprob: -9.887572288513184
    9. 'newline' → logprob: -10.012572288513184
    10. '\n' → logprob: -10.137572288513184

Token 180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3425219549390022e-05
    2. ' def' → logprob: -12.12501335144043
    3. 'class' → logprob: -12.62501335144043
    4. '
' → logprob: -13.62501335144043
    5. 'de' → logprob: -14.50001335144043
    6. 'd' → logprob: -14.62501335144043
    7. 'ndef' → logprob: -14.87501335144043
    8. '\' → logprob: -15.00001335144043
    9. '<|end|>' → logprob: -15.12501335144043
    10. '

' → logprob: -15.37501335144043

Token 181: ' main' (ID: 2758)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.8613797426223755
    2. ' get' → logprob: -2.486379623413086
    3. ' check' → logprob: -2.486379623413086
    4. 'check' → logprob: -2.611379623413086
    5. ' calculate' → logprob: -2.611379623413086
    6. 'compute' → logprob: -2.861379623413086
    7. ' main' → logprob: -2.986379623413086
    8. 'get' → logprob: -2.986379623413086
    9. ' compute' → logprob: -3.486379623413086
    10. 'main' → logprob: -3.611379623413086

Token 182: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1398757123970427e-05
    2. ' ():' → logprob: -11.875011444091797
    3. '(' → logprob: -13.125011444091797
    4. '()' → logprob: -13.750011444091797
    5. '():
' → logprob: -13.750011444091797
    6. '_' → logprob: -16.250011444091797
    7. '(":' → logprob: -16.625011444091797
    8. '(:' → logprob: -16.875011444091797
    9. '():
' → logprob: -17.000011444091797
    10. ':' → logprob: -17.500011444091797

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09468800574541092
    2. ' import' → logprob: -3.5946879386901855
    3. ' input' → logprob: -3.8446879386901855
    4. ' time' → logprob: -4.4696879386901855
    5. ' schedule' → logprob: -4.7196879386901855
    6. ' n' → logprob: -4.8446879386901855
    7. ' start' → logprob: -5.9696879386901855
    8. 'n' → logprob: -6.0946879386901855
    9. ' times' → logprob: -6.2196879386901855
    10. ' user' → logprob: -6.2196879386901855

Token 184: ' """
' (ID: 7037)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3939526081085205
    2. 'N' → logprob: -1.5189526081085205
    3. 'n' → logprob: -1.8939526081085205
    4. ' import' → logprob: -2.1439526081085205
    5. '   ' → logprob: -2.5189526081085205
    6. ' n' → logprob: -2.6439526081085205
    7. ' N' → logprob: -2.7689526081085205
    8. ' start' → logprob: -4.893952369689941
    9. 'start' → logprob: -4.893952369689941
    10. 'S' → logprob: -6.456452369689941

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5926758050918579
    2. 'import' → logprob: -1.842675805091858
    3. ' import' → logprob: -2.0926756858825684
    4. ' time' → logprob: -2.7176756858825684
    5. ' input' → logprob: -2.7176756858825684
    6. 'input' → logprob: -4.467675685882568
    7. 'time' → logprob: -4.967675685882568
    8. ' times' → logprob: -6.092675685882568
    9. ' while' → logprob: -6.592675685882568
    10. ' start' → logprob: -6.717675685882568

Token 186: ' Main' (ID: 7956)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7618075013160706
    2. '#' → logprob: -1.3868074417114258
    3. ' import' → logprob: -2.761807441711426
    4. '   ' → logprob: -3.011807441711426
    5. 'input' → logprob: -3.261807441711426
    6. ' input' → logprob: -3.386807441711426
    7. ' time' → logprob: -4.136807441711426
    8. ' #' → logprob: -4.261807441711426
    9. 'time' → logprob: -4.261807441711426
    10. 'Read' → logprob: -4.761807441711426

Token 187: ' logic' (ID: 18485)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027753354981541634
    2. '()' → logprob: -3.6527533531188965
    3. '():
' → logprob: -6.7777533531188965
    4. ' ():' → logprob: -8.777753829956055
    5. ' ()' → logprob: -10.027753829956055
    6. ' function' → logprob: -10.527753829956055
    7. '_' → logprob: -10.527753829956055
    8. 'def' → logprob: -10.902753829956055
    9. '(' → logprob: -12.027753829956055
    10. '_loop' → logprob: -12.277753829956055

Token 188: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.249744713306427
    2. ':' → logprob: -1.6247446537017822
    3. 'def' → logprob: -4.624744892120361
    4. '():' → logprob: -5.374744892120361
    5. '<|end|>' → logprob: -5.499744892120361
    6. '()' → logprob: -6.374744892120361
    7. '<|end|>' → logprob: -6.874744892120361
    8. 'import' → logprob: -7.749744892120361
    9. ' for' → logprob: -8.124744415283203
    10. '(' → logprob: -8.499744415283203

Token 189: ' process' (ID: 2273)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23376142978668213
    2. 'input' → logprob: -2.8587613105773926
    3. 'read' → logprob: -3.8587613105773926
    4. 'def' → logprob: -3.8587613105773926
    5. 'process' → logprob: -3.8587613105773926
    6. ' input' → logprob: -4.608761310577393
    7. 'calculate' → logprob: -4.733761310577393
    8. '...' → logprob: -4.858761310577393
    9. ' process' → logprob: -4.858761310577393
    10. '   ' → logprob: -5.233761310577393

Token 190: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3159064054489136
    2. ' the' → logprob: -1.9409064054489136
    3. ' schedules' → logprob: -1.9409064054489136
    4. '   ' → logprob: -2.065906524658203
    5. 'input' → logprob: -3.065906524658203
    6. 'times' → logprob: -3.315906524658203
    7. ' times' → logprob: -3.440906524658203
    8. ' inputs' → logprob: -3.565906524658203
    9. 'n' → logprob: -3.690906524658203
    10. ' time' → logprob: -3.690906524658203

Token 191: ' datasets' (ID: 57711)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6010871529579163
    2. ' and' → logprob: -1.2260870933532715
    3. '   ' → logprob: -2.9760870933532715
    4. ' lines' → logprob: -2.9760870933532715
    5. ',' → logprob: -3.9760870933532715
    6. ' time' → logprob: -4.6010870933532715
    7. ':' → logprob: -5.2260870933532715
    8. ' line' → logprob: -5.4760870933532715
    9. '.' → logprob: -5.8510870933532715
    10. 's' → logprob: -6.2260870933532715

Token 192: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12459712475538254
    2. '():' → logprob: -2.7495970726013184
    3. '()' → logprob: -3.7495970726013184
    4. ':' → logprob: -4.624597072601318
    5. ' and' → logprob: -4.749597072601318
    6. ',' → logprob: -5.749597072601318
    7. '<|end|>' → logprob: -5.749597072601318
    8. '.' → logprob: -6.374597072601318
    9. '():
' → logprob: -7.499597072601318
    10. '```' → logprob: -7.749597072601318

Token 193: ' compute' (ID: 23864)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.16732226312160492
    2. ' compute' → logprob: -2.1673221588134766
    3. ' calculate' → logprob: -4.042322158813477
    4. ' print' → logprob: -4.917322158813477
    5. 'output' → logprob: -5.667322158813477
    6. ' produce' → logprob: -6.042322158813477
    7. 'print' → logprob: -6.042322158813477
    8. 'calculate' → logprob: -6.292322158813477
    9. 'compute' → logprob: -6.417322158813477
    10. ' process' → logprob: -6.792322158813477

Token 194: ' ok' (ID: 4763)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49197471141815186
    2. 'the' → logprob: -1.1169747114181519
    3. 'rat' → logprob: -4.116974830627441
    4. ' coverage' → logprob: -4.866974830627441
    5. ' ratios' → logprob: -4.991974830627441
    6. 'valid' → logprob: -5.741974830627441
    7. ' valid' → logprob: -5.741974830627441
    8. 'time' → logprob: -5.991974830627441
    9. 'coverage' → logprob: -6.116974830627441
    10. 'tr' → logprob: -6.116974830627441

Token 195: ' check' (ID: 2371)
  Prédit: '_ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.8632837533950806
    2. ',' → logprob: -1.1132837533950806
    3. '_counts' → logprob: -2.488283634185791
    4. '_rat' → logprob: -2.988283634185791
    5. '_rate' → logprob: -3.488283634185791
    6. '_rates' → logprob: -3.738283634185791
    7. '_' → logprob: -4.238283634185791
    8. '_count' → logprob: -4.613283634185791
    9. ' =' → logprob: -5.113283634185791
    10. '_percent' → logprob: -5.613283634185791

Token 196: ' ratios' (ID: 69972)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1434391885995865
    2. '_ratio' → logprob: -3.143439292907715
    3. '   ' → logprob: -3.268439292907715
    4. '_counts' → logprob: -3.893439292907715
    5. '_count' → logprob: -4.393439292907715
    6. '_rate' → logprob: -5.018439292907715
    7. '_percentage' → logprob: -6.393439292907715
    8. 'points' → logprob: -6.893439292907715
    9. 'ratio' → logprob: -7.018439292907715
    10. '_results' → logprob: -7.018439292907715

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009331484325230122
    2. '.' → logprob: -5.134331703186035
    3. ',' → logprob: -6.009331703186035
    4. 'import' → logprob: -7.509331703186035
    5. ' for' → logprob: -8.884331703186035
    6. ' while' → logprob: -9.634331703186035
    7. '<|end|>' → logprob: -9.634331703186035
    8. 'while' → logprob: -10.759331703186035
    9. ':' → logprob: -10.884331703186035
    10. '    
' → logprob: -11.384331703186035

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003863854566588998
    2. ':' → logprob: -6.25386381149292
    3. '.' → logprob: -6.75386381149292
    4. ',' → logprob: -7.75386381149292
    5. 'def' → logprob: -9.253864288330078
    6. ' for' → logprob: -9.628864288330078
    7. 'import' → logprob: -10.003864288330078
    8. '):' → logprob: -10.628864288330078
    9. ')' → logprob: -10.753864288330078
    10. '
' → logprob: -11.378864288330078

Token 199: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003501361235976219
    2. ',' → logprob: -6.6285014152526855
    3. ':' → logprob: -6.8785014152526855
    4. '.' → logprob: -7.2535014152526855
    5. 'import' → logprob: -8.753500938415527
    6. ' for' → logprob: -9.128500938415527
    7. 'def' → logprob: -10.503500938415527
    8. '#' → logprob: -10.628500938415527
    9. 'for' (adapté à ' for') → logprob: -10.753500938415527
    10. 'input' → logprob: -11.003500938415527

Token 200: ' lunch' (ID: 17418)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7577880620956421
    2. 'each' → logprob: -1.132788062095642
    3. 'time' → logprob: -2.8827881813049316
    4. ' time' → logprob: -3.3827881813049316
    5. ' given' → logprob: -3.8827881813049316
    6. ' specified' → logprob: -4.507788181304932
    7. ' the' → logprob: -4.632788181304932
    8. 'the' → logprob: -4.945288181304932
    9. 'specified' → logprob: -5.320288181304932
    10. ' a' → logprob: -5.507788181304932

Token 201: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.898418664932251
    2. ',' → logprob: -1.648418664932251
    3. 'break' → logprob: -1.898418664932251
    4. 'time' → logprob: -2.773418664932251
    5. '_time' → logprob: -3.148418664932251
    6. '_break' → logprob: -3.523418664932251
    7. 'and' → logprob: -3.773418664932251
    8. '   ' → logprob: -4.148418426513672
    9. 'times' → logprob: -4.148418426513672
    10. ' time' → logprob: -4.398418426513672

Token 202: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13409703969955444
    2. 'break' → logprob: -2.759097099304199
    3. ' dinner' → logprob: -3.259097099304199
    4. ' d' → logprob: -5.259097099304199
    5. 'af' → logprob: -5.634097099304199
    6. 'tea' → logprob: -6.634097099304199
    7. ' break' → logprob: -6.759097099304199
    8. 'l' → logprob: -7.009097099304199
    9. 'mor' → logprob: -7.009097099304199
    10. 'br' → logprob: -7.009097099304199

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006133079994469881
    2. ' and' → logprob: -5.506133079528809
    3. '   ' → logprob: -7.131133079528809
    4. 'and' → logprob: -7.631133079528809
    5. ',
' → logprob: -8.256133079528809
    6. ' ,' → logprob: -8.506133079528809
    7. 's' → logprob: -9.256133079528809
    8. 'time' → logprob: -10.006133079528809
    9. 'def' → logprob: -10.381133079528809
    10. ')' → logprob: -11.131133079528809

Token 204: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6349667310714722
    2. 'and' → logprob: -1.1349667310714722
    3. '   ' → logprob: -3.0099668502807617
    4. ' breakfast' → logprob: -3.5099668502807617
    5. 'break' → logprob: -3.8849668502807617
    6. ' snack' → logprob: -4.634966850280762
    7. 'bed' → logprob: -5.634966850280762
    8. '#' → logprob: -5.759966850280762
    9. ' sleep' → logprob: -6.072466850280762
    10. ' bed' → logprob: -6.134966850280762

Token 205: ' midnight' (ID: 54213)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.4020916223526
    2. 'mid' → logprob: -1.4020916223526
    3. 'late' → logprob: -2.2770915031433105
    4. 'bed' → logprob: -2.7770915031433105
    5. 'sn' → logprob: -3.0270915031433105
    6. 'night' → logprob: -3.0270915031433105
    7. ' breakfast' → logprob: -3.5270915031433105
    8. ' midnight' → logprob: -3.5270915031433105
    9. 'sleep' → logprob: -3.5270915031433105
    10. ' late' → logprob: -4.4645915031433105

Token 206: ' times' (ID: 4238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5581587553024292
    2. 'times' → logprob: -2.5581588745117188
    3. 'period' → logprob: -3.3081588745117188
    4. 'time' → logprob: -3.3081588745117188
    5. ' periods' → logprob: -3.3081588745117188
    6. ' ranges' → logprob: -3.4331588745117188
    7. ' times' → logprob: -3.5581588745117188
    8. ' checks' → logprob: -3.5581588745117188
    9. ' check' → logprob: -3.8081588745117188
    10. 'ranges' → logprob: -3.8081588745117188

Token 207: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15789642930030823
    2. '.' → logprob: -2.4078965187072754
    3. ':' → logprob: -3.4078965187072754
    4. ',' → logprob: -4.032896518707275
    5. ' periods' → logprob: -6.657896518707275
    6. ' while' → logprob: -7.157896518707275
    7. '.
' → logprob: -8.157896041870117
    8. 'while' → logprob: -8.157896041870117
    9. ' ranges' → logprob: -8.282896041870117
    10. 'import' → logprob: -8.282896041870117

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011649841908365488
    2. '
' → logprob: -8.001165390014648
    3. '    
' → logprob: -8.001165390014648
    4. 'import' → logprob: -8.876165390014648
    5. '<|end|>' → logprob: -9.126165390014648
    6. ')' → logprob: -9.626165390014648
    7. 'def' → logprob: -10.001165390014648
    8. '```' → logprob: -10.376165390014648
    9. 'input' → logprob: -10.626165390014648
    10. '#' → logprob: -11.001165390014648

Token 209: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002313334261998534
    2. 'input' → logprob: -7.252313137054443
    3. 'Input' → logprob: -8.002313613891602
    4. 'import' → logprob: -8.252313613891602
    5. '"""' → logprob: -8.627313613891602
    6. '    
' → logprob: -8.752313613891602
    7. ' input' → logprob: -8.752313613891602
    8. '```' → logprob: -8.877313613891602
    9. ')' → logprob: -9.877313613891602
    10. '    ' → logprob: -9.877313613891602

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2535945177078247
    2. ' while' → logprob: -2.003594398498535
    3. ' import' → logprob: -2.628594398498535
    4. 'import' → logprob: -4.378594398498535
    5. 'while' → logprob: -6.003594398498535
    6. ' input' → logprob: -7.503594398498535
    7. ' try' → logprob: -7.628594398498535
    8. ' n' → logprob: -8.003594398498535
    9. ' lines' → logprob: -8.503594398498535
    10. ' for' → logprob: -9.503594398498535

Token 211: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5168839693069458
    2. 'import' → logprob: -1.1418839693069458
    3. 'N' → logprob: -3.2668838500976562
    4. '   ' → logprob: -3.5168838500976562
    5. 'num' → logprob: -5.641883850097656
    6. ' n' → logprob: -5.641883850097656
    7. 'T' → logprob: -6.016883850097656
    8. 't' → logprob: -6.266883850097656
    9. ' import' → logprob: -6.391883850097656
    10. 'while' → logprob: -6.766883850097656

Token 212: ' Define' (ID: 38966)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1222747415304184
    2. 'n' → logprob: -2.87227463722229
    3. ' import' → logprob: -3.99727463722229
    4. 'N' → logprob: -4.372274875640869
    5. 'while' → logprob: -4.497274875640869
    6. ' n' → logprob: -5.372274875640869
    7. 'input' → logprob: -5.872274875640869
    8. ' while' → logprob: -5.997274875640869
    9. '   ' → logprob: -6.247274875640869
    10. 'num' → logprob: -6.622274875640869

Token 213: ' time' (ID: 1058)
  Prédit: ' lunch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.3566751480102539
    2. 'l' → logprob: -2.481675148010254
    3. ' ranges' → logprob: -2.606675148010254
    4. ' L' → logprob: -2.731675148010254
    5. 'ranges' → logprob: -3.481675148010254
    6. 'L' → logprob: -3.856675148010254
    7. ' time' → logprob: -4.981675148010254
    8. ' lunchtime' → logprob: -5.481675148010254
    9. ' intervals' → logprob: -6.231675148010254
    10. ' meal' → logprob: -6.231675148010254

Token 214: ' ranges' (ID: 33269)
  Prédit: '_ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ranges' → logprob: -0.005509550217539072
    2. 'ranges' → logprob: -5.380509376525879
    3. '_slots' → logprob: -8.630509376525879
    4. ' ranges' → logprob: -8.880509376525879
    5. '_' → logprob: -9.130509376525879
    6. 's' → logprob: -9.255509376525879
    7. '_r' → logprob: -9.755509376525879
    8. '_limits' → logprob: -10.130509376525879
    9. '_windows' → logprob: -10.505509376525879
    10. 'zones' → logprob: -10.505509376525879

Token 215: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03321751207113266
    2. 'l' → logprob: -3.908217430114746
    3. ' lunch' → logprob: -5.033217430114746
    4. '
' → logprob: -5.908217430114746
    5. '    
' → logprob: -7.408217430114746
    6. 'ranges' → logprob: -7.408217430114746
    7. ' =' → logprob: -7.783217430114746
    8. 'Lunch' → logprob: -8.033217430114746
    9. ' for' → logprob: -8.408217430114746
    10. 'for' → logprob: -8.533217430114746

Token 216: ' minutes' (ID: 5438)
  Prédit: 'minutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minutes' → logprob: -0.28354617953300476
    2. ' minutes' → logprob: -1.4085462093353271
    3. '{
' → logprob: -7.658545970916748
    4. '_minutes' → logprob: -7.658545970916748
    5. '(' → logprob: -7.783545970916748
    6. '{' → logprob: -8.533546447753906
    7. ' ' → logprob: -8.783546447753906
    8. '```' → logprob: -8.908546447753906
    9. 'terms' → logprob: -9.283546447753906
    10. '[' → logprob: -9.283546447753906

Token 217: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13243897259235382
    2. 'l' → logprob: -2.757438898086548
    3. ' lunch' → logprob: -3.132438898086548
    4. ':' → logprob: -5.257439136505127
    5. 'ranges' → logprob: -5.882439136505127
    6. ' ranges' → logprob: -6.257439136505127
    7. 'Lunch' → logprob: -6.507439136505127
    8. '    
' → logprob: -6.757439136505127
    9. '
' → logprob: -6.757439136505127
    10. ' =' → logprob: -7.257439136505127

Token 218: ' midnight' (ID: 54213)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07737739384174347
    2. 'mid' → logprob: -2.9523773193359375
    3. ' ' → logprob: -4.2023773193359375
    4. ' midnight' → logprob: -5.0773773193359375
    5. '   ' → logprob: -7.5773773193359375
    6. '00' → logprob: -8.702377319335938
    7. 'def' → logprob: -8.827377319335938
    8. '000' → logprob: -9.577377319335938
    9. '  ' → logprob: -9.952377319335938
    10. '_mid' → logprob: -10.952377319335938

Token 219: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4232795834541321
    2. ' lunch' → logprob: -1.7982795238494873
    3. 'l' → logprob: -1.9232795238494873
    4. '
' → logprob: -4.048279762268066
    5. ':' → logprob: -4.673279762268066
    6. 'Lunch' → logprob: -6.673279762268066
    7. ' lunchtime' → logprob: -7.048279762268066
    8. '    
' → logprob: -7.173279762268066
    9. ' lunches' → logprob: -7.798279762268066
    10. 'ranges' → logprob: -7.923279762268066

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6968725323677063
    2. ')' → logprob: -1.5718724727630615
    3. ')
' → logprob: -2.1968724727630615
    4. '00' → logprob: -2.6968724727630615
    5. '#' → logprob: -3.4468724727630615
    6. '):
' → logprob: -3.9468724727630615
    7. '{
' → logprob: -4.696872711181641
    8. '):' → logprob: -4.821872711181641
    9. '   ' → logprob: -5.321872711181641
    10. 'start' → logprob: -5.321872711181641

Token 221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6944946050643921
    2. '):' → logprob: -1.569494605064392
    3. ')' → logprob: -1.694494605064392
    4. '):
' → logprob: -2.8194947242736816
    5. '   ' → logprob: -3.3194947242736816
    6. ')
' → logprob: -5.444494724273682
    7. '*' → logprob: -6.569494724273682
    8. ' :' → logprob: -6.819494724273682
    9. 'def' → logprob: -7.069494724273682
    10. 'x' → logprob: -7.194494724273682

Token 222: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0399167574942112
    2. '0' → logprob: -3.289916753768921
    3. ' ' → logprob: -6.6649169921875
    4. 'def' → logprob: -7.5399169921875
    5. ')' → logprob: -10.4149169921875
    6. '   ' → logprob: -11.6649169921875
    7. '```' → logprob: -12.1649169921875
    8. 'int' → logprob: -12.4149169921875
    9. ':' → logprob: -12.5399169921875
    10. 'return' → logprob: -13.0399169921875

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.531015157699585
    2. ')
' → logprob: -1.156015157699585
    3. '):
' → logprob: -2.781015157699585
    4. '):' → logprob: -4.031015396118164
    5. '   ' → logprob: -4.781015396118164
    6. '#' → logprob: -5.781015396118164
    7. '):

' → logprob: -6.406015396118164
    8. ')

' → logprob: -6.531015396118164
    9. ' to' → logprob: -6.656015396118164
    10. ' )' → logprob: -8.156015396118164

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4867834448814392
    2. 'l' → logprob: -1.361783504486084
    3. ' lunch' → logprob: -2.111783504486084
    4. 'L' → logprob: -5.861783504486084
    5. 'Lunch' → logprob: -6.611783504486084
    6. ' lunchtime' → logprob: -6.611783504486084
    7. ' l' → logprob: -7.611783504486084
    8. ' L' → logprob: -7.736783504486084
    9. '```' → logprob: -7.986783504486084
    10. 'lun' → logprob: -8.486783027648926

Token 225: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16261807084083557
    2. ' lunch' → logprob: -2.5376181602478027
    3. 'L' → logprob: -2.9126181602478027
    4. '   ' → logprob: -4.662618160247803
    5. ' L' → logprob: -6.037618160247803
    6. '#' (adapté à ' #') → logprob: -6.787618160247803
    7. 'lun' → logprob: -7.037618160247803
    8. 'Lunch' → logprob: -7.162618160247803
    9. 'ranges' → logprob: -7.287618160247803
    10. ' lunchtime' → logprob: -7.912618160247803

Token 226: ' Lunch' (ID: 73557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6459767818450928
    2. ' lunch' → logprob: -0.8959767818450928
    3. 'L' → logprob: -3.2709767818450928
    4. '   ' → logprob: -4.395977020263672
    5. ' L' → logprob: -4.520977020263672
    6. '#' → logprob: -6.520977020263672
    7. ' lunchtime' → logprob: -6.645977020263672
    8. 'Lunch' → logprob: -6.770977020263672
    9. 'lun' → logprob: -7.520977020263672
    10. ' ranges' → logprob: -7.770977020263672

Token 227: ':' (ID: 25)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0022582602687180042
    2. '_l' → logprob: -6.75225830078125
    3. '_START' → logprob: -8.12725830078125
    4. 'start' → logprob: -8.25225830078125
    5. '_range' → logprob: -8.37725830078125
    6. '_ranges' → logprob: -9.00225830078125
    7. ' =' → logprob: -9.50225830078125
    8. '_' → logprob: -9.87725830078125
    9. '_s' → logprob: -11.75225830078125
    10. '_L' → logprob: -12.00225830078125

Token 228: ' ' (ID: 220)
  Prédit: '660'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '660' → logprob: -0.6690468788146973
    2. '720' → logprob: -1.1690468788146973
    3. '(' → logprob: -2.6690468788146973
    4. '11' → logprob: -2.9190468788146973
    5. '690' → logprob: -3.7940468788146973
    6. '780' → logprob: -4.294046878814697
    7. '12' → logprob: -5.169046878814697
    8. '750' → logprob: -5.169046878814697
    9. ' ' → logprob: -5.919046878814697
    10. '[' → logprob: -7.169046878814697

Token 229: '11' (ID: 994)
  Prédit: '660'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '660' → logprob: -0.6996292471885681
    2. '720' → logprob: -1.074629306793213
    3. '(' → logprob: -2.074629306793213
    4. '11' → logprob: -3.824629306793213
    5. '690' → logprob: -4.824629306793213
    6. '780' → logprob: -6.199629306793213
    7. '750' → logprob: -6.449629306793213
    8. '12' → logprob: -6.699629306793213
    9. '420' → logprob: -8.074628829956055
    10. '600' → logprob: -8.574628829956055

Token 230: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22978545725345612
    2. '00' → logprob: -1.604785442352295
    3. ':' → logprob: -5.979785442352295
    4. ' *' → logprob: -6.479785442352295
    5. '#' → logprob: -9.354785919189453
    6. '   ' → logprob: -9.479785919189453
    7. '0' → logprob: -10.479785919189453
    8. '30' → logprob: -10.729785919189453
    9. ' ' → logprob: -10.854785919189453
    10. '60' → logprob: -10.854785919189453

Token 231: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.011402051895856857
    2. '0' → logprob: -5.011402130126953
    3. '30' → logprob: -5.386402130126953
    4. ' ' → logprob: -10.136402130126953
    5. '60' → logprob: -11.511402130126953
    6. '   ' → logprob: -11.636402130126953
    7. '45' → logprob: -12.511402130126953
    8. '01' → logprob: -12.636402130126953
    9. '  ' → logprob: -12.636402130126953
    10. '000' → logprob: -12.761402130126953

Token 232: ' ~' (ID: 6574)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3940716087818146
    2. ',' → logprob: -1.8940715789794922
    3. ' *' → logprob: -2.894071578979492
    4. ' =' → logprob: -3.519071578979492
    5. '=' → logprob: -3.644071578979492
    6. '   ' → logprob: -4.019071578979492
    7. ' ' → logprob: -4.394071578979492
    8. 'to' → logprob: -4.519071578979492
    9. ' to' → logprob: -4.644071578979492
    10. '0' → logprob: -5.644071578979492

Token 233: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.1582004576921463
    2. '14' → logprob: -2.28320050239563
    3. '12' → logprob: -3.65820050239563
    4. ' ' → logprob: -4.408200263977051
    5. '689' → logprob: -5.908200263977051
    6. '11' → logprob: -7.158200263977051
    7. '719' → logprob: -7.408200263977051
    8. '779' → logprob: -7.533200263977051
    9. '   ' → logprob: -8.53320026397705
    10. '(' → logprob: -8.78320026397705

Token 234: '14' (ID: 1265)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.05928143858909607
    2. '12' → logprob: -3.434281349182129
    3. '14' → logprob: -3.684281349182129
    4. '15' → logprob: -9.684281349182129
    5. '11' → logprob: -10.684281349182129
    6. ' ' → logprob: -11.371781349182129
    7. '1' → logprob: -11.434281349182129
    8. '(' → logprob: -11.996781349182129
    9. '59' → logprob: -12.059281349182129
    10. '

' → logprob: -12.121781349182129

Token 235: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7667835354804993
    2. '00' → logprob: -1.2667834758758545
    3. ':' → logprob: -1.8917834758758545
    4. ' *' → logprob: -2.5167834758758545
    5. '   ' → logprob: -4.391783714294434
    6. '60' → logprob: -5.766783714294434
    7. ')' → logprob: -5.766783714294434
    8. ' ' → logprob: -7.016783714294434
    9. '0' → logprob: -7.141783714294434
    10. '30' → logprob: -8.141783714294434

Token 236: '59' (ID: 4621)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.2048349827528
    2. '59' → logprob: -1.7048349380493164
    3. '0' → logprob: -5.704834938049316
    4. '30' → logprob: -9.579834938049316
    5. '29' → logprob: -12.204834938049316
    6. '```' → logprob: -12.829834938049316
    7. '39' → logprob: -13.204834938049316
    8. ' ' → logprob: -13.204834938049316
    9. ')' → logprob: -14.267334938049316
    10. '60' → logprob: -14.579834938049316

Token 237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13328558206558228
    2. ' lunch' → logprob: -2.2582855224609375
    3. 'l' → logprob: -4.3832855224609375
    4. ',' → logprob: -6.1332855224609375
    5. 'start' → logprob: -6.8832855224609375
    6. '    
' → logprob: -7.0082855224609375
    7. '
' → logprob: -7.1332855224609375
    8. ' lunchtime' → logprob: -7.2582855224609375
    9. 'Lunch' → logprob: -7.6332855224609375
    10. ' start' → logprob: -8.383285522460938

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20658926665782928
    2. ' lunch' → logprob: -1.7065892219543457
    3. 'l' → logprob: -5.831589221954346
    4. 'Lunch' → logprob: -6.956589221954346
    5. ' Lunch' → logprob: -8.081589698791504
    6. '    
' → logprob: -8.581589698791504
    7. ' lunchtime' → logprob: -8.831589698791504
    8. 'L' → logprob: -8.831589698791504
    9. ' l' → logprob: -9.206589698791504
    10. '    ' → logprob: -9.456589698791504

Token 239: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6230039000511169
    2. ' lunch' → logprob: -1.4980039596557617
    3. 'L' → logprob: -2.1230039596557617
    4. '   ' → logprob: -2.3730039596557617
    5. ' L' → logprob: -3.7480039596557617
    6. ' l' → logprob: -6.623003959655762
    7. 'Lunch' → logprob: -7.123003959655762
    8. 'start' → logprob: -7.623003959655762
    9. 'lun' → logprob: -8.123003959655762
    10. ' Lunch' → logprob: -9.123003959655762

Token 240: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0006400037091225386
    2. ' =' → logprob: -8.250639915466309
    3. '_range' → logprob: -8.250639915466309
    4. '_' → logprob: -9.625639915466309
    5. '   ' → logprob: -10.250639915466309
    6. '=' → logprob: -11.875639915466309
    7. 'start' → logprob: -12.750639915466309
    8. '_end' → logprob: -12.750639915466309
    9. '_START' → logprob: -13.500639915466309
    10. '_from' → logprob: -14.750639915466309

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08226698637008667
    2. '=' → logprob: -2.5822670459747314
    3. ',' → logprob: -5.707266807556152
    4. '   ' → logprob: -10.082266807556152
    5. ' ,' → logprob: -12.082266807556152
    6. ')' → logprob: -14.082266807556152
    7. ' ' → logprob: -14.082266807556152
    8. '    ' → logprob: -16.20726776123047
    9. '  ' → logprob: -16.33226776123047
    10. ' =
' → logprob: -16.45726776123047

Token 242: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.13145801424980164
    2. '660' → logprob: -2.131458044052124
    3. ' ' → logprob: -5.506457805633545
    4. '   ' → logprob: -7.881457805633545
    5. '(' → logprob: -10.006458282470703
    6. '  ' → logprob: -10.756458282470703
    7. '     ' → logprob: -12.631458282470703
    8. '    ' → logprob: -12.881458282470703
    9. 'def' → logprob: -13.631458282470703
    10. 'parse' → logprob: -13.631458282470703

Token 243: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.3872624933719635
    2. '660' → logprob: -1.1372624635696411
    3. '(' → logprob: -8.262262344360352
    4. ' ' → logprob: -9.387262344360352
    5. '   ' → logprob: -10.762262344360352
    6. 'parse' → logprob: -11.512262344360352
    7. 'def' → logprob: -12.137262344360352
    8. 'convert' → logprob: -13.637262344360352
    9. '     ' → logprob: -13.762262344360352
    10. '  ' → logprob: -13.887262344360352

Token 244: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31329482793807983
    2. ' *' → logprob: -1.3132948875427246
    3. '00' → logprob: -10.688294410705566
    4. '60' → logprob: -12.813294410705566
    5. ':' → logprob: -12.938294410705566
    6. '   ' → logprob: -13.188294410705566
    7. ' ' → logprob: -13.313294410705566
    8. '0' → logprob: -13.813294410705566
    9. '  ' → logprob: -16.063295364379883
    10. ' ' → logprob: -16.313295364379883

Token 245: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00593117019161582
    2. ' ' → logprob: -5.130931377410889
    3. '   ' → logprob: -13.38093090057373
    4. '  ' → logprob: -14.50593090057373
    5. '*' → logprob: -15.88093090057373
    6. '=' → logprob: -16.255931854248047
    7. ':' → logprob: -16.630931854248047
    8. '```' → logprob: -16.755931854248047
    9. '    ' → logprob: -17.380931854248047
    10. '<|end|>' → logprob: -18.130931854248047

Token 246: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.750036239624023
    4. '*' → logprob: -18.375036239624023
    5. '  ' → logprob: -18.375036239624023
    6. '600' → logprob: -18.500036239624023
    7. '30' → logprob: -18.875036239624023
    8. '45' → logprob: -19.500036239624023
    9. '100' → logprob: -19.500036239624023
    10. '59' → logprob: -19.500036239624023

Token 247: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '   ' (ID: 271)
  Prédit: ' lunch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.049879368394613266
    2. '
' → logprob: -3.799879312515259
    3. 'l' → logprob: -4.299879550933838
    4. ' 
' → logprob: -5.674879550933838
    5. 'Lunch' → logprob: -6.049879550933838
    6. '14' → logprob: -6.299879550933838
    7. '   ' → logprob: -6.299879550933838
    8. '<|end|>' → logprob: -7.174879550933838
    9. '    
' → logprob: -7.799879550933838
    10. '+' → logprob: -7.799879550933838

Token 249: ' lunch' (ID: 17418)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.0012615446466952562
    2. '   ' → logprob: -7.3762617111206055
    3. ' ' → logprob: -8.126261711120605
    4. ' lunch' → logprob: -8.751261711120605
    5. 'l' → logprob: -9.376261711120605
    6. '(' → logprob: -9.626261711120605
    7. '13' → logprob: -12.001261711120605
    8. '#' → logprob: -12.751261711120605
    9. '  ' → logprob: -12.938761711120605
    10. 'Lunch' → logprob: -13.251261711120605

Token 250: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.00039039674447849393
    2. '_' → logprob: -8.37539005279541
    3. '_finish' → logprob: -9.00039005279541
    4. '_stop' → logprob: -10.62539005279541
    5. 'end' → logprob: -12.62539005279541
    6. ' _' → logprob: -12.75039005279541
    7. '   ' → logprob: -13.37539005279541
    8. '_END' → logprob: -13.75039005279541
    9. '_close' → logprob: -14.62539005279541
    10. '_continue' → logprob: -14.75039005279541

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009759394451975822
    2. '=' → logprob: -4.634759426116943
    3. ' ' → logprob: -13.384758949279785
    4. '<|end|>' → logprob: -13.759758949279785
    5. ')' → logprob: -15.134758949279785
    6. '   ' → logprob: -15.384758949279785
    7. ',' → logprob: -16.6347599029541
    8. '    ' → logprob: -17.0097599029541
    9. '  ' → logprob: -17.3847599029541
    10. ':' → logprob: -17.6347599029541

Token 252: ' ' (ID: 220)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.08030025660991669
    2. '(' → logprob: -2.5803003311157227
    3. '   ' → logprob: -7.205300331115723
    4. ' ' → logprob: -7.580300331115723
    5. ' (' → logprob: -8.830300331115723
    6. '  ' → logprob: -12.455300331115723
    7. '((' → logprob: -12.705300331115723
    8. '    ' → logprob: -13.830300331115723
    9. '(int' → logprob: -14.455300331115723
    10. '     ' → logprob: -15.205300331115723

Token 253: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.0046619996428489685
    2. '(' → logprob: -5.379662036895752
    3. '   ' → logprob: -10.504661560058594
    4. ' ' → logprob: -11.504661560058594
    5. ' (' → logprob: -13.004661560058594
    6. '((' → logprob: -14.254661560058594
    7. '  ' → logprob: -15.004661560058594
    8. '13' → logprob: -15.879661560058594
    9. '(int' → logprob: -15.879661560058594
    10. '\(' → logprob: -16.129661560058594

Token 254: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.019191285595297813
    2. '59' → logprob: -4.019191265106201
    3. ' *' → logprob: -7.019191265106201
    4. ':' → logprob: -9.39419174194336
    5. '   ' → logprob: -9.89419174194336
    6. ' ' → logprob: -11.64419174194336
    7. '+' → logprob: -13.76919174194336
    8. '  ' → logprob: -14.39419174194336
    9. '**' → logprob: -14.64419174194336
    10. '    ' → logprob: -14.76919174194336

Token 255: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.002534640720114112
    2. ' ' → logprob: -6.502534866333008
    3. '60' → logprob: -6.877534866333008
    4. '   ' → logprob: -14.252534866333008
    5. '  ' → logprob: -15.877534866333008
    6. '99' → logprob: -16.377534866333008
    7. '*' → logprob: -16.502534866333008
    8. '     ' → logprob: -17.252534866333008
    9. '+' → logprob: -17.502534866333008
    10. '(' → logprob: -17.752534866333008

Token 256: '60' (ID: 1910)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.011089793406426907
    2. '60' → logprob: -4.51108980178833
    3. ' ' → logprob: -10.136089324951172
    4. '   ' → logprob: -13.636089324951172
    5. '+' → logprob: -15.261089324951172
    6. '  ' → logprob: -15.761089324951172
    7. '599' → logprob: -15.886089324951172
    8. '99' → logprob: -16.136089324951172
    9. '     ' → logprob: -16.636089324951172
    10. '
' → logprob: -16.886089324951172

Token 257: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03279191628098488
    2. '59' → logprob: -3.78279185295105
    3. ' +' → logprob: -4.657792091369629
    4. '   ' → logprob: -12.407792091369629
    5. '+
' → logprob: -12.657792091369629
    6. '
' → logprob: -13.657792091369629
    7. ' ' → logprob: -13.782792091369629
    8. 'plus' → logprob: -13.907792091369629
    9. ' plus' → logprob: -14.032792091369629
    10. '＋' → logprob: -14.907792091369629

Token 258: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '58' → logprob: -18.375
    4. '   ' → logprob: -19.875
    5. '599' → logprob: -20.375
    6. '5' → logprob: -21.125
    7. '49' → logprob: -21.25
    8. '  ' → logprob: -21.375
    9. '57' → logprob: -21.75
    10. '50' → logprob: -22.0

Token 259: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '58' → logprob: -19.5
    4. '599' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. '5' → logprob: -20.5
    7. '059' → logprob: -21.5
    8. '
' → logprob: -21.625
    9. '  ' → logprob: -21.75
    10. '50' → logprob: -22.25

Token 260: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5027127861976624
    2. '   ' → logprob: -1.0027127265930176
    3. '    
' → logprob: -3.6277127265930176
    4. 'd' → logprob: -7.877712726593018
    5. '  
' → logprob: -8.252713203430176
    6. '   
' → logprob: -8.502713203430176
    7. '

' → logprob: -8.502713203430176
    8. 'l' → logprob: -9.252713203430176
    9. ',' → logprob: -9.502713203430176
    10. ' lunch' → logprob: -9.502713203430176

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007828064262866974
    2. '#' → logprob: -5.007828235626221
    3. 'd' → logprob: -7.007828235626221
    4. '
' → logprob: -8.882827758789062
    5. '    
' → logprob: -9.882827758789062
    6. '```' → logprob: -12.007827758789062
    7. ' #' → logprob: -12.757827758789062
    8. ' dinner' → logprob: -12.757827758789062
    9. ' ' → logprob: -13.882827758789062
    10. '	d' → logprob: -14.007827758789062

Token 262: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18524520099163055
    2. '#' (adapté à ' #') → logprob: -1.810245156288147
    3. '   ' → logprob: -5.310245037078857
    4. ' dinner' → logprob: -8.185245513916016
    5. ' #' → logprob: -8.935245513916016
    6. '
' → logprob: -9.810245513916016
    7. 'l' → logprob: -10.935245513916016
    8. '```' → logprob: -11.685245513916016
    9. 'Dinner' → logprob: -11.935245513916016
    10. ' ' → logprob: -12.060245513916016

Token 263: ' Dinner' (ID: 62088)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23071223497390747
    2. '#' → logprob: -1.6057121753692627
    3. '   ' → logprob: -5.980712413787842
    4. ' dinner' → logprob: -6.230712413787842
    5. ' #' → logprob: -7.730712413787842
    6. 'Dinner' → logprob: -8.230711936950684
    7. '
' → logprob: -10.855711936950684
    8. ' ' → logprob: -11.480711936950684
    9. ' d' → logprob: -11.605711936950684
    10. ' Dinner' → logprob: -11.730711936950684

Token 264: ':' (ID: 25)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.25458216667175293
    2. ' =' → logprob: -1.504582166671753
    3. '=' → logprob: -6.629582405090332
    4. '   ' → logprob: -6.879582405090332
    5. '_' → logprob: -8.379582405090332
    6. '_end' → logprob: -10.504582405090332
    7. '_d' → logprob: -11.129582405090332
    8. 'start' → logprob: -11.629582405090332
    9. '_s' → logprob: -12.629582405090332
    10. ':' → logprob: -13.004582405090332

Token 265: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.4762616753578186
    2. '17' → logprob: -0.9762616753578186
    3. ' ' → logprob: -6.851261615753174
    4. '19' → logprob: -7.351261615753174
    5. '   ' → logprob: -7.976261615753174
    6. '16' → logprob: -9.351262092590332
    7. '  ' → logprob: -10.851262092590332
    8. '21' → logprob: -11.351262092590332
    9. '20' → logprob: -11.851262092590332
    10. '	' → logprob: -12.976262092590332

Token 266: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.350575715303421
    2. '17' → logprob: -1.2255756855010986
    3. '19' → logprob: -6.225575923919678
    4. '16' → logprob: -9.35057544708252
    5. '20' → logprob: -10.97557544708252
    6. '21' → logprob: -11.22557544708252
    7. '   ' → logprob: -11.60057544708252
    8. ' ' → logprob: -11.60057544708252
    9. '1' → logprob: -13.35057544708252
    10. '
' → logprob: -13.47557544708252

Token 267: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28448668122291565
    2. ' *' → logprob: -1.4094866514205933
    3. ':' → logprob: -6.159486770629883
    4. '   ' → logprob: -7.159486770629883
    5. ' ' → logprob: -8.284486770629883
    6. '=' → logprob: -9.159486770629883
    7. ' =' → logprob: -10.159486770629883
    8. '  ' → logprob: -11.659486770629883
    9. '60' → logprob: -11.784486770629883
    10. ',' → logprob: -12.034486770629883

Token 268: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04879321902990341
    2. '00' → logprob: -3.173793315887451
    3. ' ' → logprob: -5.423793315887451
    4. '60' → logprob: -6.673793315887451
    5. '30' → logprob: -9.298792839050293
    6. '   ' → logprob: -12.048792839050293
    7. '18' → logprob: -12.798792839050293
    8. '59' → logprob: -13.673792839050293
    9. '36' → logprob: -14.673792839050293
    10. '45' → logprob: -15.048792839050293

Token 269: ' ~' (ID: 6574)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5163458585739136
    2. ' *' → logprob: -1.7663458585739136
    3. '=' → logprob: -2.141345977783203
    4. '*' → logprob: -2.266345977783203
    5. '   ' → logprob: -4.766345977783203
    6. '<|end|>' → logprob: -7.141345977783203
    7. ' ' → logprob: -7.516345977783203
    8. '<|end|>' → logprob: -7.766345977783203
    9. ',' → logprob: -8.016345977783203
    10. ')' → logprob: -9.266345977783203

Token 270: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.2840551733970642
    2. '21' → logprob: -1.409055233001709
    3. '22' → logprob: -6.409055233001709
    4. ' ' → logprob: -6.909055233001709
    5. '23' → logprob: -8.90905475616455
    6. '18' → logprob: -10.28405475616455
    7. '19' → logprob: -10.34655475616455
    8. '   ' → logprob: -10.65905475616455
    9. '  ' → logprob: -12.28405475616455
    10. '(' → logprob: -12.78405475616455

Token 271: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.020876077935099602
    2. '21' → logprob: -3.895876169204712
    3. '22' → logprob: -8.520875930786133
    4. '23' → logprob: -9.270875930786133
    5. '19' → logprob: -11.020875930786133
    6. '
' → logprob: -12.145875930786133
    7. '   ' → logprob: -12.145875930786133
    8. ' ' → logprob: -13.083375930786133
    9. '	' → logprob: -13.520875930786133
    10. '

' → logprob: -13.583375930786133

Token 272: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19967563450336456
    2. ':' → logprob: -1.8246756792068481
    3. ' *' → logprob: -4.949675559997559
    4. '59' → logprob: -5.449675559997559
    5. '00' → logprob: -5.699675559997559
    6. '   ' → logprob: -6.324675559997559
    7. '60' → logprob: -6.574675559997559
    8. ' ' → logprob: -7.074675559997559
    9. '30' → logprob: -7.574675559997559
    10. '45' → logprob: -8.949675559997559

Token 273: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.250003814697266
    3. '00' → logprob: -14.000003814697266
    4. '58' → logprob: -15.625003814697266
    5. '29' → logprob: -15.625003814697266
    6. '30' → logprob: -15.750003814697266
    7. '599' → logprob: -15.875003814697266
    8. '39' → logprob: -16.750003814697266
    9. ' ' → logprob: -17.000003814697266
    10. '``' → logprob: -17.625003814697266

Token 274: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029704324901103973
    2. '
' → logprob: -4.0297040939331055
    3. 'd' → logprob: -4.5297040939331055
    4. ' dinner' → logprob: -7.5297040939331055
    5. '    
' → logprob: -9.154704093933105
    6. 'Dinner' → logprob: -10.904704093933105
    7. '	d' → logprob: -12.029704093933105
    8. '  
' → logprob: -12.154704093933105
    9. '  ' → logprob: -12.279704093933105
    10. ' ' → logprob: -12.404704093933105

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009397142566740513
    2. 'd' → logprob: -4.759397029876709
    3. '
' → logprob: -7.259397029876709
    4. ' dinner' → logprob: -10.009397506713867
    5. '    
' → logprob: -11.259397506713867
    6. 'Dinner' → logprob: -11.509397506713867
    7. '18' → logprob: -13.134397506713867
    8. ' ' → logprob: -13.259397506713867
    9. '  ' → logprob: -13.259397506713867
    10. '```' → logprob: -14.009397506713867

Token 276: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002228287048637867
    2. ' dinner' → logprob: -6.127228260040283
    3. '   ' → logprob: -10.377228736877441
    4. '18' → logprob: -11.502228736877441
    5. ' ' → logprob: -13.877228736877441
    6. 'Dinner' → logprob: -14.752228736877441
    7. ' d' → logprob: -15.252228736877441
    8. 'din' → logprob: -15.877228736877441
    9. 'diet' → logprob: -16.377227783203125
    10. '```' → logprob: -16.502227783203125

Token 277: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0021998595912009478
    2. '_' → logprob: -6.377199649810791
    3. '_end' → logprob: -7.877199649810791
    4. ' _' → logprob: -9.50220012664795
    5. ' =' → logprob: -11.25220012664795
    6. '_s' → logprob: -11.75220012664795
    7. '=' → logprob: -12.62720012664795
    8. '_finish' → logprob: -12.87720012664795
    9. '_space' → logprob: -13.00220012664795
    10. '_time' → logprob: -14.00220012664795

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716079078614712
    2. '=' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.506715774536133
    4. '   ' → logprob: -15.631715774536133
    5. ')' → logprob: -16.881715774536133
    6. ' =)' → logprob: -17.381715774536133
    7. ',' → logprob: -17.506715774536133
    8. '    ' → logprob: -17.506715774536133
    9. '<|end|>' → logprob: -17.631715774536133
    10. ' ' → logprob: -17.881715774536133

Token 279: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -14.875051498413086
    4. '  ' → logprob: -19.125051498413086
    5. '    ' → logprob: -20.750051498413086
    6. '１８' → logprob: -21.000051498413086
    7. '۱۸' → logprob: -21.312551498413086
    8. ' eighteen' → logprob: -21.437551498413086
    9. '(' → logprob: -21.437551498413086
    10. '```' → logprob: -21.875051498413086

Token 280: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '19' → logprob: -19.125001907348633
    5. '20' → logprob: -19.625001907348633
    6. '(' → logprob: -20.750001907348633
    7. '```' → logprob: -21.625001907348633
    8. '1' → logprob: -21.750001907348633
    9. '１８' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.000001907348633

Token 281: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759692192077637
    2. ' *' → logprob: -0.8259692192077637
    3. '   ' → logprob: -10.825969696044922
    4. ' ' → logprob: -12.200969696044922
    5. ':' → logprob: -13.325969696044922
    6. '60' → logprob: -13.950969696044922
    7. '<|end|>' → logprob: -14.825969696044922
    8. '**' → logprob: -15.075969696044922
    9. ' ' → logprob: -15.075969696044922
    10. '  ' → logprob: -15.325969696044922

Token 282: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.06993821263313293
    2. ' ' → logprob: -2.6949381828308105
    3. '   ' → logprob: -13.819938659667969
    4. '*' → logprob: -14.444938659667969
    5. '  ' → logprob: -15.319938659667969
    6. ' *' → logprob: -17.31993865966797
    7. ' ' → logprob: -17.56993865966797
    8. '0' → logprob: -17.81993865966797
    9. '```' → logprob: -18.06993865966797
    10. '360' → logprob: -18.19493865966797

Token 283: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.750059127807617
    4. '*' → logprob: -19.125059127807617
    5. '  ' → logprob: -19.250059127807617
    6. '0' → logprob: -20.000059127807617
    7. '6' → logprob: -20.625059127807617
    8. '600' → logprob: -20.750059127807617
    9. '```' → logprob: -20.750059127807617
    10. '360' → logprob: -21.250059127807617

Token 284: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765838027000427
    2. 'd' → logprob: -0.8265838027000427
    3. '
' → logprob: -8.076583862304688
    4. ' dinner' → logprob: -8.951583862304688
    5. '20' → logprob: -9.201583862304688
    6. '    
' → logprob: -9.701583862304688
    7. ' ' → logprob: -10.951583862304688
    8. '  ' → logprob: -11.951583862304688
    9. '  
' → logprob: -12.576583862304688
    10. ' 
' → logprob: -12.701583862304688

Token 286: ' dinner' (ID: 16078)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -9.625067710876465
    3. 'd' → logprob: -14.375067710876465
    4. '   ' → logprob: -14.625067710876465
    5. ' dinner' → logprob: -14.875067710876465
    6. '2' → logprob: -17.37506675720215
    7. '
' → logprob: -17.62506675720215
    8. '  ' → logprob: -17.62506675720215
    9. '21' → logprob: -18.12506675720215
    10. '(' → logprob: -18.25006675720215

Token 287: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.008365161716938019
    2. '   ' → logprob: -5.508365154266357
    3. '_' → logprob: -6.383365154266357
    4. '=' → logprob: -6.883365154266357
    5. ' =' → logprob: -7.008365154266357
    6. '_start' → logprob: -8.133365631103516
    7. ' _' → logprob: -9.383365631103516
    8. 'End' → logprob: -9.883365631103516
    9. '_END' → logprob: -10.008365631103516
    10. '_finish' → logprob: -10.383365631103516

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022534668445587
    2. '=' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.410224914550781
    4. '<|end|>' → logprob: -15.285224914550781
    5. '   ' → logprob: -15.660224914550781
    6. ':' → logprob: -15.910224914550781
    7. ',' → logprob: -17.28522491455078
    8. ' =)' → logprob: -17.53522491455078
    9. ')' → logprob: -17.91022491455078
    10. ' =
' → logprob: -18.03522491455078

Token 289: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.250015258789062
    3. '(' → logprob: -13.375015258789062
    4. '   ' → logprob: -14.750015258789062
    5. '```' → logprob: -16.625015258789062
    6. '
' → logprob: -17.000015258789062
    7. '2' → logprob: -17.937515258789062
    8. ' (' → logprob: -18.062515258789062
    9. '  ' → logprob: -18.250015258789062
    10. '２０' → logprob: -18.437515258789062

Token 290: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.000024795532227
    3. '(' → logprob: -11.750024795532227
    4. '   ' → logprob: -14.875024795532227
    5. ' (' → logprob: -17.125024795532227
    6. '2' → logprob: -17.687524795532227
    7. '```' → logprob: -18.250024795532227
    8. '  ' → logprob: -18.437524795532227
    9. '((' → logprob: -18.437524795532227
    10. '２０' → logprob: -18.687524795532227

Token 291: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008214065805077553
    2. ' *' → logprob: -5.258213996887207
    3. '59' → logprob: -6.258213996887207
    4. ':' → logprob: -6.883213996887207
    5. '60' → logprob: -11.008213996887207
    6. ' ' → logprob: -11.758213996887207
    7. '   ' → logprob: -13.133213996887207
    8. '58' → logprob: -13.258213996887207
    9. '53' → logprob: -14.008213996887207
    10. '37' → logprob: -14.133213996887207

Token 292: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '*' → logprob: -18.000030517578125
    4. '58' → logprob: -18.500030517578125
    5. '+' → logprob: -18.625030517578125
    6. '60' → logprob: -19.875030517578125
    7. '   ' → logprob: -20.000030517578125
    8. '53' → logprob: -20.250030517578125
    9. '  ' → logprob: -20.625030517578125
    10. '
' → logprob: -20.625030517578125

Token 293: '60' (ID: 1910)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '*' → logprob: -16.62504005432129
    4. '60' → logprob: -17.50004005432129
    5. '
' → logprob: -17.75004005432129
    6. '+' → logprob: -17.87504005432129
    7. '  ' → logprob: -18.25004005432129
    8. '   ' → logprob: -18.37504005432129
    9. '58' → logprob: -18.37504005432129
    10. '5' → logprob: -18.50004005432129

Token 294: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038649652153253555
    2. ' +' → logprob: -3.288649559020996
    3. '59' → logprob: -7.413649559020996
    4. '   ' → logprob: -12.663649559020996
    5. ' ' → logprob: -14.413649559020996
    6. '+
' → logprob: -14.788649559020996
    7. '*' → logprob: -15.038649559020996
    8. '58' → logprob: -15.788649559020996
    9. '53' → logprob: -16.038650512695312
    10. '
' → logprob: -16.163650512695312

Token 295: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '58' → logprob: -18.750001907348633
    4. '
' → logprob: -19.250001907348633
    5. '29' → logprob: -20.125001907348633
    6. '39' → logprob: -20.125001907348633
    7. '57' → logprob: -20.375001907348633
    8. '   ' → logprob: -20.375001907348633
    9. '  ' → logprob: -20.500001907348633
    10. '5' → logprob: -20.625001907348633

Token 296: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '58' → logprob: -19.0
    4. '29' → logprob: -20.375
    5. '
' → logprob: -20.5
    6. '059' → logprob: -20.5
    7. '5' → logprob: -20.625
    8. '39' → logprob: -21.3125
    9. '57' → logprob: -21.375
    10. '53' → logprob: -21.375

Token 297: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20773465931415558
    2. '   ' → logprob: -1.7077347040176392
    3. '<|end|>' → logprob: -5.33273458480835
    4. '    
' → logprob: -7.33273458480835
    5. '#' → logprob: -7.83273458480835
    6. '  
' → logprob: -9.332735061645508
    7. '

' → logprob: -9.332735061645508
    8. '```' → logprob: -9.707735061645508
    9. '<|end|>' → logprob: -9.707735061645508
    10. '
' → logprob: -10.832735061645508

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011154402047395706
    2. '#' → logprob: -4.5111541748046875
    3. 'mid' → logprob: -9.511154174804688
    4. '
' → logprob: -10.511154174804688
    5. ' #' → logprob: -13.386154174804688
    6. ' midnight' → logprob: -13.761154174804688
    7. '```' → logprob: -14.011154174804688
    8. '  ' → logprob: -14.386154174804688
    9. ' ' → logprob: -14.636154174804688
    10. '    
' → logprob: -15.136154174804688

Token 299: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2889117896556854
    2. 'mid' → logprob: -1.4139118194580078
    3. '   ' → logprob: -4.913911819458008
    4. '
' → logprob: -8.788911819458008
    5. '```' → logprob: -9.288911819458008
    6. ' midnight' → logprob: -10.288911819458008
    7. ' #' → logprob: -10.538911819458008
    8. '``' → logprob: -11.163911819458008
    9. '       ' → logprob: -11.288911819458008
    10. 'm' → logprob: -11.913911819458008

Token 300: ' Midnight' (ID: 106225)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03815670683979988
    2. '#' → logprob: -3.288156747817993
    3. '   ' → logprob: -9.663156509399414
    4. ' midnight' → logprob: -10.413156509399414
    5. 'night' → logprob: -12.413156509399414
    6. 'm' → logprob: -12.538156509399414
    7. ' #' → logprob: -12.663156509399414
    8. 'MID' → logprob: -13.163156509399414
    9. ' mid' → logprob: -14.038156509399414
    10. 'def' → logprob: -14.413156509399414

Token 301: ':' (ID: 25)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.12828859686851501
    2. '_mid' → logprob: -2.253288507461548
    3. ' =' → logprob: -4.503288745880127
    4. '_' → logprob: -5.628288745880127
    5. 'start' → logprob: -8.378288269042969
    6. 'mid' → logprob: -8.878288269042969
    7. '=' → logprob: -9.628288269042969
    8. ' _' → logprob: -9.628288269042969
    9. '_m' → logprob: -10.003288269042969
    10. '#' → logprob: -10.253288269042969

Token 302: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.8235179781913757
    2. '0' → logprob: -0.9485179781913757
    3. '22' → logprob: -1.9485180377960205
    4. ' ' → logprob: -3.8235180377960205
    5. '23' → logprob: -4.698517799377441
    6. '(' → logprob: -8.698517799377441
    7. '   ' → logprob: -9.198517799377441
    8. '  ' → logprob: -10.698517799377441
    9. '1' → logprob: -10.698517799377441
    10. '00' → logprob: -10.948517799377441

Token 303: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.35796672105789185
    2. '0' → logprob: -1.607966661453247
    3. '22' → logprob: -2.357966661453247
    4. '23' → logprob: -5.482966899871826
    5. '(' → logprob: -6.857966899871826
    6. ' ' → logprob: -7.232966899871826
    7. '1' → logprob: -10.232966423034668
    8. '   ' → logprob: -11.857966423034668
    9. '00' → logprob: -11.982966423034668
    10. ' (' → logprob: -12.732966423034668

Token 304: ':' (ID: 25)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05006692558526993
    2. ' *' → logprob: -3.0500669479370117
    3. ':' → logprob: -6.675066947937012
    4. '00' → logprob: -9.050066947937012
    5. '60' → logprob: -9.800066947937012
    6. '0' → logprob: -11.050066947937012
    7. ' ' → logprob: -12.175066947937012
    8. '   ' → logprob: -12.425066947937012
    9. 'def' → logprob: -12.550066947937012
    10. '**' → logprob: -12.675066947937012

Token 305: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.08023115992546082
    2. '0' → logprob: -2.580231189727783
    3. ' ' → logprob: -6.705231189727783
    4. '60' → logprob: -9.205230712890625
    5. '59' → logprob: -12.455230712890625
    6. '   ' → logprob: -12.580230712890625
    7. '*' → logprob: -12.705230712890625
    8. '(' → logprob: -12.830230712890625
    9. '  ' → logprob: -14.705230712890625
    10. ':' → logprob: -15.080230712890625

Token 306: ' ~' (ID: 6574)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22737139463424683
    2. '=' → logprob: -2.1023714542388916
    3. ' ~' → logprob: -3.3523714542388916
    4. ',' → logprob: -4.2273712158203125
    5. '   ' → logprob: -4.4773712158203125
    6. ' ' → logprob: -4.9773712158203125
    7. '*' → logprob: -5.6023712158203125
    8. '~' → logprob: -5.7273712158203125
    9. ' *' → logprob: -6.3523712158203125
    10. ' ,' → logprob: -6.8523712158203125

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1020747646689415
    2. '23' → logprob: -2.6020748615264893
    3. '(' → logprob: -3.8520748615264893
    4. ' ' → logprob: -6.47707462310791
    5. '  ' → logprob: -10.22707462310791
    6. ' (' → logprob: -10.60207462310791
    7. '   ' → logprob: -10.85207462310791
    8. '((' → logprob: -11.47707462310791
    9. '25' → logprob: -11.72707462310791
    10. '01' → logprob: -11.97707462310791

Token 308: '01' (ID: 2290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025936115998774767
    2. '(' → logprob: -6.002593517303467
    3. ' ' → logprob: -9.252593994140625
    4. '119' → logprob: -11.752593994140625
    5. '23' → logprob: -11.877593994140625
    6. ' (' → logprob: -12.752593994140625
    7. '01' → logprob: -13.377593994140625
    8. '((' → logprob: -14.627593994140625
    9. '  ' → logprob: -14.627593994140625
    10. '   ' → logprob: -14.877593994140625

Token 309: ':' (ID: 25)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.003692835569381714
    2. ':' → logprob: -5.628692626953125
    3. ' ' → logprob: -9.753692626953125
    4. '*' → logprob: -10.628692626953125
    5. '=' → logprob: -13.378692626953125
    6. ' *' → logprob: -13.628692626953125
    7. '   ' → logprob: -14.003692626953125
    8. '#' → logprob: -14.128692626953125
    9. '58' → logprob: -14.378692626953125
    10. '```' → logprob: -14.628692626953125

Token 310: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.0
    3. '959' → logprob: -18.75
    4. '99' → logprob: -19.125
    5. '599' → logprob: -19.5
    6. '60' → logprob: -19.75
    7. '58' → logprob: -19.75
    8. '29' → logprob: -19.875
    9. 'minutes' → logprob: -20.125
    10. '39' → logprob: -20.3125

Token 311: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02025677263736725
    2. 'mid' → logprob: -4.145256996154785
    3. '
' → logprob: -5.770256996154785
    4. ' midnight' → logprob: -6.895256996154785
    5. '    
' → logprob: -10.520256996154785
    6. ' mid' → logprob: -11.395256996154785
    7. 'm' → logprob: -11.395256996154785
    8. '_mid' → logprob: -11.895256996154785
    9. '(mid' → logprob: -12.270256996154785
    10. ',' → logprob: -12.645256996154785

Token 312: 'wrap' (ID: 18351)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00875768531113863
    2. ' midnight' → logprob: -5.383757591247559
    3. '21' → logprob: -6.258757591247559
    4. '   ' → logprob: -7.133757591247559
    5. ')' → logprob: -7.258757591247559
    6. ' mid' → logprob: -8.633757591247559
    7. '0' → logprob: -8.758757591247559
    8. ' ' → logprob: -8.883757591247559
    9. ')
' → logprob: -9.008757591247559
    10. '00' → logprob: -11.133757591247559

Token 313: 's' (ID: 82)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.4604121744632721
    2. '_' → logprob: -1.2104121446609497
    3. ')' → logprob: -2.9604122638702393
    4. ' around' → logprob: -4.46041202545166
    5. '=' → logprob: -5.96041202545166
    6. '   ' → logprob: -6.08541202545166
    7. '-around' → logprob: -7.46041202545166
    8. '_start' → logprob: -7.71041202545166
    9. '_)' → logprob: -8.08541202545166
    10. ')
' → logprob: -8.33541202545166

Token 314: ' over' (ID: 1072)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.605738639831543
    2. 'over' → logprob: -1.105738639831543
    3. ' over' → logprob: -2.730738639831543
    4. ' around' → logprob: -3.480738639831543
    5. ')' → logprob: -4.355738639831543
    6. 'overn' → logprob: -4.480738639831543
    7. ' midnight' → logprob: -6.730738639831543
    8. ' ' → logprob: -7.605738639831543
    9. '   ' → logprob: -7.855738639831543
    10. 'mid' → logprob: -8.230738639831543

Token 315: ' midnight' (ID: 54213)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.5266126990318298
    2. ' ' → logprob: -2.0266127586364746
    3. '2' → logprob: -2.2766127586364746
    4. '144' → logprob: -2.5266127586364746
    5. '24' → logprob: -3.6516127586364746
    6. ')' → logprob: -4.151612758636475
    7. '120' → logprob: -4.276612758636475
    8. 'next' → logprob: -4.276612758636475
    9. ' midnight' → logprob: -5.151612758636475
    10. '0' → logprob: -5.776612758636475

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017097100615501404
    2. ')
' → logprob: -4.392096996307373
    3. '   ' → logprob: -5.392096996307373
    4. ' )' → logprob: -11.517097473144531
    5. '
' → logprob: -12.517097473144531
    6. ' ' → logprob: -12.767097473144531
    7. '```' → logprob: -13.017097473144531
    8. '<|end|>' → logprob: -13.892097473144531
    9. ')
' → logprob: -14.142097473144531
    10. ')

' → logprob: -14.142097473144531

Token 317: '   ' (ID: 271)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4900801181793213
    2. '   ' → logprob: -0.9900801181793213
    3. ' midnight' → logprob: -4.240079879760742
    4. ' mid' → logprob: -6.615079879760742
    5. ' ' → logprob: -10.115079879760742
    6. '
' → logprob: -10.240079879760742
    7. '  ' → logprob: -11.115079879760742
    8. '    
' → logprob: -11.490079879760742
    9. '_mid' → logprob: -12.615079879760742
    10. '       ' → logprob: -12.740079879760742

Token 318: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00011939727846765891
    2. ' midnight' → logprob: -9.12511920928955
    3. ' mid' → logprob: -12.37511920928955
    4. '   ' → logprob: -12.62511920928955
    5. 'night' → logprob: -13.50011920928955
    6. '
' → logprob: -14.87511920928955
    7. 'midt' → logprob: -14.87511920928955
    8. 'm' → logprob: -15.12511920928955
    9. ' ' → logprob: -16.625120162963867
    10. '_mid' → logprob: -16.750120162963867

Token 319: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.250005722045898
    3. ' _' → logprob: -14.875005722045898
    4. '_end' → logprob: -15.625005722045898
    5. 'start' → logprob: -17.2500057220459
    6. '_START' → logprob: -17.5000057220459
    7. '_s' → logprob: -17.6250057220459
    8. '\' → logprob: -17.7500057220459
    9. '_time' → logprob: -18.7500057220459
    10. ''_' → logprob: -18.8750057220459

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.850207328796387
    4. '   ' → logprob: -16.47520637512207
    5. ')' → logprob: -17.10020637512207
    6. ',' → logprob: -18.10020637512207
    7. '```' → logprob: -18.47520637512207
    8. '＝' → logprob: -18.85020637512207
    9. '<|end|>' → logprob: -18.97520637512207
    10. ' =
' → logprob: -18.97520637512207

Token 321: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '  ' → logprob: -20.125001907348633
    6. '```' → logprob: -20.250001907348633
    7. '=' → logprob: -20.500001907348633
    8. '23' → logprob: -20.562501907348633
    9. '22' → logprob: -20.812501907348633
    10. '	' → logprob: -21.437501907348633

Token 322: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -15.87500286102295
    4. '   ' → logprob: -18.375001907348633
    5. '  ' → logprob: -20.125001907348633
    6. '```' → logprob: -20.250001907348633
    7. '=' → logprob: -20.375001907348633
    8. '23' → logprob: -20.375001907348633
    9. '20' → logprob: -20.875001907348633
    10. '22' → logprob: -21.062501907348633

Token 323: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06197138875722885
    2. ' *' → logprob: -2.811971426010132
    3. '60' → logprob: -14.061971664428711
    4. '00' → logprob: -14.186971664428711
    5. '**' → logprob: -14.436971664428711
    6. ' ' → logprob: -14.686971664428711
    7. '0' → logprob: -14.936971664428711
    8. '   ' → logprob: -15.311971664428711
    9. ':' → logprob: -15.561971664428711
    10. '<|end|>' → logprob: -15.936971664428711

Token 324: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00975679699331522
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.009757041931152
    4. '*' → logprob: -15.134757041931152
    5. '  ' → logprob: -16.134756088256836
    6. '0' → logprob: -16.759756088256836
    7. '-' → logprob: -17.884756088256836
    8. ' *' → logprob: -18.259756088256836
    9. ':' → logprob: -18.509756088256836
    10. '61' → logprob: -18.634756088256836

Token 325: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.500017166137695
    4. '0' → logprob: -19.250017166137695
    5. '*' → logprob: -20.500017166137695
    6. '  ' → logprob: -21.000017166137695
    7. '360' → logprob: -21.000017166137695
    8. '600' → logprob: -21.125017166137695
    9. '30' → logprob: -21.250017166137695
    10. '00' → logprob: -21.250017166137695

Token 326: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8470624685287476
    2. 'mid' → logprob: -0.8470624685287476
    3. ' midnight' → logprob: -2.597062587738037
    4. '<|end|>' → logprob: -3.472062587738037
    5. '
' → logprob: -3.597062587738037
    6. ')' → logprob: -5.472062587738037
    7. '    
' → logprob: -6.597062587738037
    8. '<|end|>' → logprob: -6.847062587738037
    9. ' ' → logprob: -7.347062587738037
    10. '  
' → logprob: -7.847062587738037

Token 327: '   ' (ID: 271)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.252683162689209
    2. '   ' → logprob: -1.502683162689209
    3. ' midnight' → logprob: -7.252683162689209
    4. ' ' → logprob: -10.877683639526367
    5. ' mid' → logprob: -11.627683639526367
    6. '    
' → logprob: -12.252683639526367
    7. '  ' → logprob: -12.502683639526367
    8. '_mid' → logprob: -13.377683639526367
    9. '
' → logprob: -13.502683639526367
    10. '       ' → logprob: -13.877683639526367

Token 328: ' midnight' (ID: 54213)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018888992490246892
    2. '(' → logprob: -6.751888751983643
    3. ' ' → logprob: -8.0018892288208
    4. '119' → logprob: -8.0018892288208
    5. '01' → logprob: -10.5018892288208
    6. '59' → logprob: -12.0018892288208
    7. ' (' → logprob: -12.1268892288208
    8. '   ' → logprob: -13.0018892288208
    9. '  ' → logprob: -13.2518892288208
    10. 'm' → logprob: -13.8768892288208

Token 329: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.001963128335773945
    2. 'end' → logprob: -6.251963138580322
    3. '   ' → logprob: -11.001962661743164
    4. '*' → logprob: -12.251962661743164
    5. '=' → logprob: -12.376962661743164
    6. ' =' → logprob: -13.126962661743164
    7. '_END' → logprob: -13.376962661743164
    8. '_' → logprob: -13.501962661743164
    9. 'End' → logprob: -13.626962661743164
    10. 'END' → logprob: -14.751962661743164

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021141171455383
    2. '=' → logprob: -2.3502113819122314
    3. ' ' → logprob: -12.350211143493652
    4. ',' → logprob: -16.35021209716797
    5. '<|end|>' → logprob: -16.47521209716797
    6. '0' → logprob: -16.60021209716797
    7. ':' → logprob: -16.85021209716797
    8. ' =
' → logprob: -17.22521209716797
    9. ')' → logprob: -17.47521209716797
    10. '  ' → logprob: -17.97521209716797

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004336833488196135
    2. '(' → logprob: -5.504336833953857
    3. ' ' → logprob: -8.6293363571167
    4. '2' → logprob: -10.0043363571167
    5. '119' → logprob: -11.3793363571167
    6. ' (' → logprob: -11.5043363571167
    7. '   ' → logprob: -12.2543363571167
    8. '  ' → logprob: -12.2543363571167
    9. '01' → logprob: -13.2543363571167
    10. '101' → logprob: -14.5043363571167

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014205586165189743
    2. '(' → logprob: -4.264205455780029
    3. ' ' → logprob: -10.639205932617188
    4. ' (' → logprob: -11.764205932617188
    5. '  ' → logprob: -12.639205932617188
    6. '   ' → logprob: -12.639205932617188
    7. '((' → logprob: -13.764205932617188
    8. '2' → logprob: -14.014205932617188
    9. '01' → logprob: -14.264205932617188
    10. '101' → logprob: -14.514205932617188

Token 333: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00475727254524827
    2. ' *' → logprob: -5.379757404327393
    3. '59' → logprob: -9.004756927490234
    4. ' ' → logprob: -11.754756927490234
    5. '60' → logprob: -12.004756927490234
    6. '**' → logprob: -15.629756927490234
    7. ':' → logprob: -16.379756927490234
    8. '9' → logprob: -16.754756927490234
    9. '*(' → logprob: -18.004756927490234
    10. '5' → logprob: -18.254756927490234

Token 334: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.375086784362793
    3. '*' → logprob: -14.000086784362793
    4. '59' → logprob: -14.250086784362793
    5. '   ' → logprob: -16.250085830688477
    6. '6' → logprob: -18.125085830688477
    7. '  ' → logprob: -18.250085830688477
    8. '+' → logprob: -18.500085830688477
    9. '0' → logprob: -18.625085830688477
    10. '2' → logprob: -19.125085830688477

Token 335: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.500085830688477
    4. '59' → logprob: -15.625085830688477
    5. '  ' → logprob: -17.375085830688477
    6. '+' → logprob: -17.625085830688477
    7. '*' → logprob: -18.125085830688477
    8. '6' → logprob: -18.375085830688477
    9. '0' → logprob: -18.750085830688477
    10. '1' → logprob: -18.875085830688477

Token 336: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06537569314241409
    2. ' +' → logprob: -2.815375804901123
    3. '59' → logprob: -5.690375804901123
    4. ' ' → logprob: -11.315375328063965
    5. '   ' → logprob: -12.565375328063965
    6. '+
' → logprob: -13.315375328063965
    7. '＋' → logprob: -13.690375328063965
    8. ' plus' → logprob: -13.815375328063965
    9. '    ' → logprob: -14.315375328063965
    10. '60' → logprob: -14.690375328063965

Token 337: ' ' (ID: 220)
  Prédit: '59'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '#' → logprob: -21.25
    4. '959' → logprob: -21.25
    5. '159' → logprob: -21.875
    6. '
' → logprob: -22.125
    7. '```' → logprob: -22.125
    8. '599' → logprob: -22.25
    9. '58' → logprob: -22.375
    10. '059' → logprob: -22.375

Token 338: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '959' → logprob: -19.25
    4. '599' → logprob: -20.75
    5. '159' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. '059' → logprob: -21.25
    8. '```' → logprob: -21.375
    9. '  ' → logprob: -21.625
    10. '
' → logprob: -21.75

Token 339: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06948959082365036
    2. '
' → logprob: -3.1944894790649414
    3. '    
' → logprob: -4.319489479064941
    4. '<|end|>' → logprob: -4.569489479064941
    5. '```' → logprob: -7.944489479064941
    6. 'import' → logprob: -7.944489479064941
    7. 'def' → logprob: -8.194489479064941
    8. '  
' → logprob: -8.319489479064941
    9. 'n' → logprob: -8.944489479064941
    10. 'while' → logprob: -9.194489479064941

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08712784200906754
    2. '
' → logprob: -2.712127923965454
    3. '    
' → logprob: -4.212127685546875
    4. '```' → logprob: -7.462127685546875
    5. '<|end|>' → logprob: -7.962127685546875
    6. 'import' → logprob: -8.462127685546875
    7. '  
' → logprob: -8.587127685546875
    8. 'def' → logprob: -8.837127685546875
    9. 'ok' → logprob: -8.962127685546875
    10. '   
' → logprob: -9.462127685546875

Token 341: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5795186758041382
    2. '   ' → logprob: -0.9545186758041382
    3. 'n' → logprob: -3.0795187950134277
    4. 'l' → logprob: -5.454518795013428
    5. ' import' → logprob: -6.704518795013428
    6. 'num' → logprob: -6.829518795013428
    7. 'N' → logprob: -7.079518795013428
    8. 'ok' → logprob: -7.579518795013428
    9. ' n' → logprob: -8.20451831817627
    10. 'while' (adapté à ' while') → logprob: -8.57951831817627

Token 342: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4742225706577301
    2. 'True' → logprob: -0.9742225408554077
    3. '(True' → logprob: -8.849222183227539
    4. '=True' → logprob: -13.224222183227539
    5. '1' → logprob: -15.849222183227539
    6. 'true' → logprob: -16.59922218322754
    7. ' ' → logprob: -16.97422218322754
    8. '_true' → logprob: -17.84922218322754
    9. '   ' → logprob: -17.97422218322754
    10. '_TRUE' → logprob: -18.47422218322754

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014285710640251637
    2. ':
' → logprob: -6.876428604125977
    3. '():' → logprob: -8.751428604125977
    4. ',' → logprob: -9.626428604125977
    5. '):' → logprob: -9.751428604125977
    6. '       ' → logprob: -9.751428604125977
    7. '   ' → logprob: -10.876428604125977
    8. '():
' → logprob: -11.376428604125977
    9. '):
' → logprob: -12.126428604125977
    10. ' :' → logprob: -12.251428604125977

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007520937360823154
    2. ' try' → logprob: -7.875751972198486
    3. '   ' → logprob: -8.375752449035645
    4. ' line' → logprob: -9.750752449035645
    5. 'try' → logprob: -10.375752449035645
    6. ' input' → logprob: -10.750752449035645
    7. 'input' → logprob: -11.750752449035645
    8. 'n' → logprob: -12.500752449035645
    9. '      ' → logprob: -12.750752449035645
    10. '    ' → logprob: -12.875752449035645

Token 345: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.0543437004089355
    2. 'try' → logprob: -1.5543437004089355
    3. '   ' → logprob: -1.9293437004089355
    4. 'line' → logprob: -2.0543437004089355
    5. ' n' → logprob: -2.8043437004089355
    6. ' line' → logprob: -2.9293437004089355
    7. ' try' → logprob: -3.1793437004089355
    8. '       ' → logprob: -4.8043437004089355
    9. 'input' → logprob: -6.9293437004089355
    10. 'N' → logprob: -7.4293437004089355

Token 346: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896531164646149
    2. '=' → logprob: -2.46396541595459
    3. '=int' → logprob: -11.71396541595459
    4. '=input' → logprob: -11.96396541595459
    5. ' ' → logprob: -12.46396541595459
    6. 'space' → logprob: -12.96396541595459
    7. '_input' → logprob: -13.46396541595459
    8. '_str' → logprob: -14.21396541595459
    9. '   ' → logprob: -14.83896541595459
    10. '  ' → logprob: -14.96396541595459

Token 347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. '   ' → logprob: -15.724077224731445
    4. '=input' → logprob: -16.724077224731445
    5. ' ' → logprob: -16.849077224731445
    6. ' =
' → logprob: -17.349077224731445
    7. '=
' → logprob: -18.099077224731445
    8. '    ' → logprob: -18.224077224731445
    9. 'n' → logprob: -18.474077224731445
    10. 's' → logprob: -18.474077224731445

Token 348: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759395360946655
    2. 'input' → logprob: -0.8259395360946655
    3. '=input' → logprob: -17.075939178466797
    4. '(input' → logprob: -17.825939178466797
    5. '   ' → logprob: -19.950939178466797
    6. '	input' → logprob: -20.200939178466797
    7. ' ' → logprob: -21.200939178466797
    8. '_input' → logprob: -21.575939178466797
    9. '<input' → logprob: -22.075939178466797
    10. '.input' → logprob: -23.075939178466797

Token 349: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012559093534946442
    2. '().' → logprob: -4.387558937072754
    3. '(' → logprob: -10.762558937072754
    4. '()
' → logprob: -11.387558937072754
    5. '.strip' → logprob: -11.762558937072754
    6. '("")' → logprob: -13.262558937072754
    7. ')' → logprob: -13.387558937072754
    8. ' ()' → logprob: -13.762558937072754
    9. '.' → logprob: -14.137558937072754
    10. '();' → logprob: -14.262558937072754

Token 350: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.935296834039036e-06
    2. 'rstrip' → logprob: -12.75000286102295
    3. ' strip' → logprob: -20.375003814697266
    4. '_strip' → logprob: -20.875003814697266
    5. '-strip' → logprob: -23.000003814697266
    6. '.strip' → logprob: -23.000003814697266
    7. '(strip' → logprob: -23.000003814697266
    8. 'str' → logprob: -23.625003814697266
    9. 'isdigit' → logprob: -24.250003814697266
    10. 'split' → logprob: -24.750003814697266

Token 351: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029217300470918417
    2. '()
' → logprob: -5.8779215812683105
    3. ')' → logprob: -9.377922058105469
    4. '())' → logprob: -10.627922058105469
    5. '(' → logprob: -13.377922058105469
    6. '<|end|>' → logprob: -13.377922058105469
    7. ' ()' → logprob: -14.252922058105469
    8. '()

' → logprob: -14.502922058105469
    9. '<|end|>' → logprob: -14.502922058105469
    10. '   ' → logprob: -14.627922058105469

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08760257065296173
    2. '<|end|>' → logprob: -3.2126026153564453
    3. '
' → logprob: -4.462602615356445
    4. 'if' → logprob: -4.837602615356445
    5. '   ' → logprob: -4.837602615356445
    6. ' if' → logprob: -4.962602615356445
    7. '\n' → logprob: -5.462602615356445
    8. '<|end|>' → logprob: -6.587602615356445
    9. '\' → logprob: -7.587602615356445
    10. '        
' → logprob: -7.712602615356445

Token 353: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001956467516720295
    2. ' if' → logprob: -6.251956462860107
    3. '       ' → logprob: -10.501956939697266
    4. 'i' → logprob: -15.126956939697266
    5. 'If' → logprob: -16.626956939697266
    6. '   ' → logprob: -17.751956939697266
    7. '	if' → logprob: -19.126956939697266
    8. ' i' → logprob: -19.501956939697266
    9. '#' → logprob: -19.626956939697266
    10. '        
' → logprob: -20.001956939697266

Token 354: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01675884611904621
    2. ' n' → logprob: -4.516758918762207
    3. 'not' → logprob: -5.516758918762207
    4. 'n' → logprob: -6.391758918762207
    5. 'n't' → logprob: -15.266758918762207
    6. '	not' → logprob: -15.391758918762207
    7. '	n' → logprob: -16.01675796508789
    8. ' ' → logprob: -16.14175796508789
    9. '!' → logprob: -17.76675796508789
    10. ' n't' → logprob: -18.64175796508789

Token 355: '_line' (ID: 14418)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47487249970436096
    2. '==' → logprob: -0.9748724699020386
    3. '_line' → logprob: -8.099872589111328
    4. '=' → logprob: -8.349872589111328
    5. '   ' → logprob: -9.349872589111328
    6. ' ' → logprob: -10.099872589111328
    7. '_' → logprob: -10.474872589111328
    8. ' =' → logprob: -10.599872589111328
    9. '()==' → logprob: -10.974872589111328
    10. '    ' → logprob: -11.599872589111328

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014356553554535
    2. ' ==' → logprob: -1.7014356851577759
    3. '=' → logprob: -11.076436042785645
    4. '()==' → logprob: -12.826436042785645
    5. '===' → logprob: -13.201436042785645
    6. ']==' → logprob: -14.576436042785645
    7. '=='' → logprob: -14.951436042785645
    8. ' =' → logprob: -15.326436042785645
    9. ')==' → logprob: -15.326436042785645
    10. '=="' → logprob: -15.451436042785645

Token 357: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1404937505722046
    2. '''' → logprob: -2.140493869781494
    3. '"' → logprob: -4.390493869781494
    4. '""' → logprob: -7.390493869781494
    5. '0' → logprob: -8.515493392944336
    6. ''end' → logprob: -9.140493392944336
    7. ''ex' → logprob: -10.015493392944336
    8. ''q' → logprob: -10.515493392944336
    9. ''O' → logprob: -10.890493392944336
    10. ''z' → logprob: -11.265493392944336

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018326809629797935
    2. ''' → logprob: -4.018326759338379
    3. 'END' → logprob: -9.518326759338379
    4. '':' → logprob: -9.893326759338379
    5. ''):' → logprob: -11.018326759338379
    6. '''' → logprob: -11.643326759338379
    7. '"' → logprob: -12.143326759338379
    8. 'end' → logprob: -12.518326759338379
    9. ' ' → logprob: -12.518326759338379
    10. '#' → logprob: -12.518326759338379

Token 359: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.024328090250492096
    2. '':
' → logprob: -3.7743279933929443
    3. ':' → logprob: -7.399328231811523
    4. ''' → logprob: -7.899328231811523
    5. ':
' → logprob: -10.024328231811523
    6. '':
' → logprob: -10.649328231811523
    7. '":' → logprob: -11.024328231811523
    8. ''):
' → logprob: -12.649328231811523
    9. '):' → logprob: -13.024328231811523
    10. ''):' → logprob: -13.149328231811523

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21116937696933746
    2. ':' → logprob: -1.7111693620681763
    3. ':
' → logprob: -4.711169242858887
    4. '       ' → logprob: -7.336169242858887
    5. '		' → logprob: -10.461169242858887
    6. ',' → logprob: -12.211169242858887
    7. ' break' → logprob: -12.336169242858887
    8. '          ' → logprob: -12.586169242858887
    9. '	       ' → logprob: -12.961169242858887
    10. '               ' → logprob: -13.086169242858887

Token 361: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08642012625932693
    2. 'break' → logprob: -2.5864200592041016
    3. '       ' → logprob: -5.211420059204102
    4. ' break' → logprob: -6.211420059204102
    5. 'return' → logprob: -11.086420059204102
    6. '               ' → logprob: -11.461420059204102
    7. '	break' → logprob: -11.586420059204102
    8. '   ' → logprob: -12.836420059204102
    9. '		' → logprob: -13.086420059204102
    10. '_break' → logprob: -14.336420059204102

Token 362: ' End' (ID: 6437)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.002145858481526375
    2. ' break' → logprob: -6.252145767211914
    3. '       ' → logprob: -8.752145767211914
    4. 'return' → logprob: -9.752145767211914
    5. '	break' → logprob: -14.002145767211914
    6. '           ' → logprob: -16.627145767211914
    7. 'Break' → logprob: -17.377145767211914
    8. '_break' → logprob: -17.377145767211914
    9. ' return' → logprob: -17.752145767211914
    10. '-break' → logprob: -18.502145767211914

Token 363: ' of' (ID: 328)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6754350066184998
    2. '       ' → logprob: -1.0504350662231445
    3. '           ' → logprob: -2.6754350662231445
    4. '<|end|>' → logprob: -3.9254350662231445
    5. '   ' → logprob: -4.3004350662231445
    6. ')' → logprob: -4.9254350662231445
    7. '    ' → logprob: -4.9254350662231445
    8. '      ' → logprob: -5.9254350662231445
    9. '               ' → logprob: -6.0504350662231445
    10. '	break' → logprob: -6.1754350662231445

Token 364: ' all' (ID: 722)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7710586786270142
    2. 'program' → logprob: -0.8960586786270142
    3. ' input' → logprob: -3.1460585594177246
    4. '<|end|>' → logprob: -3.1460585594177246
    5. ' program' → logprob: -3.5210585594177246
    6. 'the' → logprob: -5.146058559417725
    7. 'process' → logprob: -5.896058559417725
    8. 'break' → logprob: -6.771058559417725
    9. 'data' → logprob: -7.021058559417725
    10. 'main' → logprob: -7.146058559417725

Token 365: ' datasets' (ID: 57711)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3225008249282837
    2. 'break' → logprob: -1.3225008249282837
    3. '<|end|>' → logprob: -1.5725008249282837
    4. 'program' → logprob: -2.322500705718994
    5. ' input' → logprob: -2.572500705718994
    6. 'inputs' → logprob: -3.697500705718994
    7. ' inputs' → logprob: -4.697500705718994
    8. '   ' → logprob: -5.072500705718994
    9. '<|end|>' → logprob: -5.197500705718994
    10. ' program' → logprob: -5.197500705718994

Token 366: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021200355142354965
    2. '       ' → logprob: -3.89620041847229
    3. ' break' → logprob: -8.896200180053711
    4. '\n' → logprob: -9.271200180053711
    5. '               ' → logprob: -9.521200180053711
    6. '<|end|>' → logprob: -9.646200180053711
    7. '		' → logprob: -9.896200180053711
    8. 'break' → logprob: -10.021200180053711
    9. ':
' → logprob: -10.146200180053711
    10. ':' → logprob: -10.146200180053711

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38689476251602173
    2. '       ' → logprob: -1.136894702911377
    3. '               ' → logprob: -11.636895179748535
    4. '		' → logprob: -11.761895179748535
    5. '   ' → logprob: -13.261895179748535
    6. '          ' → logprob: -13.636895179748535
    7. '        ' → logprob: -14.511895179748535
    8. 'break' → logprob: -14.511895179748535
    9. '      ' → logprob: -14.636895179748535
    10. '<|end|>' → logprob: -14.761895179748535

Token 368: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20900091528892517
    2. '       ' → logprob: -2.209000825881958
    3. '           ' → logprob: -2.709000825881958
    4. ' break' → logprob: -4.459001064300537
    5. 'return' → logprob: -7.459001064300537
    6. '	break' → logprob: -10.709000587463379
    7. '               ' → logprob: -11.459000587463379
    8. '   ' → logprob: -12.084000587463379
    9. ' return' → logprob: -13.959000587463379
    10. '		' → logprob: -14.084000587463379

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4849105179309845
    2. '<|end|>' → logprob: -1.109910488128662
    3. '
' → logprob: -2.984910488128662
    4. '        
' → logprob: -6.234910488128662
    5. '<|end|>' → logprob: -6.234910488128662
    6. '  
' → logprob: -10.35991096496582
    7. ')' → logprob: -10.73491096496582
    8. '        ' → logprob: -11.10991096496582
    9. '      ' → logprob: -11.35991096496582
    10. '```' → logprob: -11.35991096496582

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11355140060186386
    2. '<|end|>' → logprob: -2.488551378250122
    3. '
' → logprob: -4.363551616668701
    4. '        
' → logprob: -4.613551616668701
    5. '<|end|>' → logprob: -6.863551616668701
    6. 'n' → logprob: -8.988551139831543
    7. '        ' → logprob: -9.238551139831543
    8. '  
' → logprob: -9.613551139831543
    9. '		
' → logprob: -10.363551139831543
    10. '    
' → logprob: -10.488551139831543

Token 371: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.481930673122406
    2. ' n' → logprob: -0.981930673122406
    3. '       ' → logprob: -4.856930732727051
    4. '   ' → logprob: -10.23193073272705
    5. '	n' → logprob: -11.98193073272705
    6. '        
' → logprob: -12.98193073272705
    7. ',n' → logprob: -14.73193073272705
    8. '_n' → logprob: -14.85693073272705
    9. 'try' → logprob: -14.85693073272705
    10. '
' → logprob: -14.98193073272705

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269475221633911
    2. '=' → logprob: -2.1269474029541016
    3. '=int' → logprob: -12.001947402954102
    4. ' ' → logprob: -12.376947402954102
    5. ')' → logprob: -12.751947402954102
    6. '    ' → logprob: -13.126947402954102
    7. ',' → logprob: -13.501947402954102
    8. '_' → logprob: -13.876947402954102
    9. '  ' → logprob: -15.001947402954102
    10. '   ' → logprob: -15.126947402954102

Token 373: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '[int' → logprob: -20.375709533691406
    4. '=int' → logprob: -20.875709533691406
    5. '(int' → logprob: -21.000709533691406
    6. '<int' → logprob: -21.500709533691406
    7. '	int' → logprob: -22.250709533691406
    8. ':int' → logprob: -23.625709533691406
    9. ']int' → logprob: -23.750709533691406
    10. '    ' → logprob: -23.750709533691406

Token 374: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033546582562848926
    2. '(' → logprob: -8.000335693359375
    3. ' (' → logprob: -17.250335693359375
    4. '(
' → logprob: -17.750335693359375
    5. 'n' → logprob: -18.625335693359375
    6. '()' → logprob: -20.375335693359375
    7. ' n' → logprob: -20.500335693359375
    8. '('' → logprob: -20.500335693359375
    9. '((' → logprob: -21.000335693359375
    10. '(

' → logprob: -22.125335693359375

Token 375: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.0339031834737398e-05
    2. 'line' → logprob: -11.125020027160645
    3. '(n' → logprob: -12.625020027160645
    4. ')' → logprob: -13.375020027160645
    5. '_n' → logprob: -15.375020027160645
    6. 'Line' → logprob: -15.625020027160645
    7. 'n' → logprob: -16.37502098083496
    8. '(line' → logprob: -16.50002098083496
    9. '_LINE' → logprob: -16.50002098083496
    10. ')n' → logprob: -16.75002098083496

Token 376: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ' )' → logprob: -11.625015258789062
    3. '<|end|>' → logprob: -12.875015258789062
    4. ')
' → logprob: -13.000015258789062
    5. '       ' → logprob: -14.250015258789062
    6. '   ' → logprob: -15.125015258789062
    7. '<|end|>' → logprob: -15.375015258789062
    8. ')>' → logprob: -16.125015258789062
    9. ')return' → logprob: -16.500015258789062
    10. ' ' → logprob: -16.750015258789062

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17091608047485352
    2. ' ok' → logprob: -2.6709160804748535
    3. 'ok' → logprob: -3.0459160804748535
    4. '   ' → logprob: -3.2959160804748535
    5. '	ok' → logprob: -6.2959160804748535
    6. '        
' → logprob: -8.420915603637695
    7. 'count' → logprob: -8.545915603637695
    8. 'total' → logprob: -8.670915603637695
    9. 'counts' → logprob: -8.670915603637695
    10. ' counts' → logprob: -9.295915603637695

Token 378: ' #' (ID: 1069)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.39877986907958984
    2. 'l' → logprob: -1.1487798690795898
    3. 'counts' → logprob: -5.64877986907959
    4. '#' (adapté à ' #') → logprob: -6.02377986907959
    5. 'total' → logprob: -6.14877986907959
    6. 'count' → logprob: -6.39877986907959
    7. 'check' → logprob: -8.27377986907959
    8. '   ' → logprob: -8.27377986907959
    9. 'cnt' → logprob: -8.27377986907959
    10. 'checks' → logprob: -8.64877986907959

Token 379: ' Coun' (ID: 11013)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.33380186557769775
    2. 'l' → logprob: -1.4588018655776978
    3. 'counts' → logprob: -3.958801746368408
    4. 'Initialize' → logprob: -4.708801746368408
    5. 'results' → logprob: -4.958801746368408
    6. '#' → logprob: -5.458801746368408
    7. 'c' → logprob: -5.708801746368408
    8. 'count' → logprob: -5.833801746368408
    9. 'for' → logprob: -6.583801746368408
    10. ' Initialize' → logprob: -7.083801746368408

Token 380: 'ters' (ID: 2540)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1057678610086441
    2. 'ters' → logprob: -2.4807679653167725
    3. 'ter' → logprob: -4.980767726898193
    4. 'ok' → logprob: -5.730767726898193
    5. '       ' → logprob: -5.730767726898193
    6. '   ' → logprob: -6.605767726898193
    7. 'ts' → logprob: -7.355767726898193
    8. ' ok' → logprob: -7.980767726898193
    9. 'ted' → logprob: -8.105768203735352
    10. '      ' → logprob: -9.105768203735352

Token 381: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03639595955610275
    2. ' ok' → logprob: -3.911396026611328
    3. 'ok' → logprob: -5.161396026611328
    4. ' =' → logprob: -5.661396026611328
    5. ' lunch' → logprob: -6.036396026611328
    6. '=' → logprob: -6.411396026611328
    7. ' for' → logprob: -7.161396026611328
    8. ':' → logprob: -7.536396026611328
    9. 'l' → logprob: -8.161396026611328
    10. '_ok' → logprob: -8.661396026611328

Token 382: ' each' (ID: 2454)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.09403803199529648
    2. 'l' → logprob: -2.4690380096435547
    3. ' ok' → logprob: -6.219038009643555
    4. 'total' → logprob: -6.344038009643555
    5. ' lunch' → logprob: -7.094038009643555
    6. 'meal' → logprob: -9.094038009643555
    7. 'all' → logprob: -9.844038009643555
    8. '       ' → logprob: -9.844038009643555
    9. 'counts' → logprob: -9.844038009643555
    10. 'checked' → logprob: -10.469038009643555

Token 383: ' time' (ID: 1058)
  Prédit: ' meal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meal' → logprob: -1.0013731718063354
    2. 'meal' → logprob: -1.0013731718063354
    3. 'time' → logprob: -2.251373291015625
    4. 'period' → logprob: -3.001373291015625
    5. ' time' → logprob: -3.251373291015625
    6. ' period' → logprob: -3.501373291015625
    7. 'range' → logprob: -4.876373291015625
    8. 'category' → logprob: -4.876373291015625
    9. 'dataset' → logprob: -5.251373291015625
    10. ' dataset' → logprob: -5.626373291015625

Token 384: ' range' (ID: 3352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4268834590911865
    2. 'range' → logprob: -2.3018834590911865
    3. 'period' → logprob: -2.5518834590911865
    4. 'slot' → logprob: -3.1768834590911865
    5. '       ' → logprob: -3.3018834590911865
    6. ' period' → logprob: -4.176883697509766
    7. '_period' → logprob: -4.176883697509766
    8. '_range' → logprob: -4.301883697509766
    9. '    
' → logprob: -4.926883697509766
    10. '_slot' → logprob: -5.176883697509766

Token 385: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04143286123871803
    2. ' ok' → logprob: -3.6664328575134277
    3. 'ok' → logprob: -4.666432857513428
    4. ':' → logprob: -5.916432857513428
    5. ' lunch' → logprob: -6.916432857513428
    6. 'l' → logprob: -7.916432857513428
    7. ',' → logprob: -8.291433334350586
    8. '```' → logprob: -8.416433334350586
    9. ':
' → logprob: -8.666433334350586
    10. '   ' → logprob: -8.791433334350586

Token 386: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5393146872520447
    2. ' lunch' → logprob: -1.5393147468566895
    3. ' ok' → logprob: -2.0393147468566895
    4. 'ok' → logprob: -3.0393147468566895
    5. 'l' → logprob: -3.9143147468566895
    6. '   ' → logprob: -6.9143147468566895
    7. '```' → logprob: -6.9143147468566895
    8. ' lunchtime' → logprob: -7.6643147468566895
    9. ' lunches' → logprob: -7.7893147468566895
    10. ' l' → logprob: -8.039314270019531

Token 387: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.01156951580196619
    2. 'l' → logprob: -5.261569499969482
    3. 'total' → logprob: -6.011569499969482
    4. ' ok' → logprob: -6.386569499969482
    5. 'checked' → logprob: -7.136569499969482
    6. '   ' → logprob: -7.636569499969482
    7. ')' → logprob: -8.63656997680664
    8. 'check' → logprob: -9.01156997680664
    9. 'count' → logprob: -9.13656997680664
    10. '0' → logprob: -9.63656997680664

Token 388: '_checks' (ID: 188115)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19330663979053497
    2. '_count' → logprob: -1.9433066844940186
    3. '_counts' → logprob: -3.5683066844940186
    4. '_cnt' → logprob: -6.3183064460754395
    5. '_,' → logprob: -6.6933064460754395
    6. ' ,' → logprob: -8.318306922912598
    7. '_total' → logprob: -8.443306922912598
    8. '_counter' → logprob: -8.818306922912598
    9. ',count' → logprob: -9.193306922912598
    10. ')' → logprob: -9.318306922912598

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003519086167216301
    2. ' ,' → logprob: -8.500351905822754
    3. '_count' → logprob: -9.875351905822754
    4. '_ok' → logprob: -10.375351905822754
    5. '_counts' → logprob: -11.500351905822754
    6. '),' → logprob: -11.750351905822754
    7. 'count' → logprob: -11.750351905822754
    8. '   ' → logprob: -11.875351905822754
    9. ')' → logprob: -12.125351905822754
    10. '_,' → logprob: -12.500351905822754

Token 390: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.030008608475327492
    2. ' total' → logprob: -3.530008554458618
    3. 'ok' → logprob: -8.780008316040039
    4. ')' → logprob: -10.405008316040039
    5. '   ' → logprob: -10.405008316040039
    6. ' ' → logprob: -11.655008316040039
    7. ' ok' → logprob: -11.905008316040039
    8. 'all' → logprob: -12.030008316040039
    9. '	total' → logprob: -12.530008316040039
    10. '       ' → logprob: -13.030008316040039

Token 391: '_checks' (ID: 188115)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22599990665912628
    2. '_checks' → logprob: -1.7259999513626099
    3. ')_' → logprob: -3.8509998321533203
    4. '_' → logprob: -6.22599983215332
    5. '_)' → logprob: -7.72599983215332
    6. ')
' → logprob: -9.22599983215332
    7. ' )' → logprob: -9.35099983215332
    8. '_tests' → logprob: -9.60099983215332
    9. '_counts' → logprob: -9.72599983215332
    10. 's' → logprob: -10.10099983215332

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001789881061995402
    2. ')=' → logprob: -9.375179290771484
    3. ')
' → logprob: -10.750179290771484
    4. '   ' → logprob: -10.750179290771484
    5. ' )' → logprob: -10.875179290771484
    6. ' =' → logprob: -11.375179290771484
    7. ',' → logprob: -11.875179290771484
    8. '=' → logprob: -12.000179290771484
    9. '       ' → logprob: -12.375179290771484
    10. ')

' → logprob: -14.250179290771484

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02053605392575264
    2. ' =' → logprob: -4.645535945892334
    3. '
' → logprob: -5.895535945892334
    4. '        
' → logprob: -6.145535945892334
    5. '=' → logprob: -6.395535945892334
    6. ',' → logprob: -6.520535945892334
    7. '   ' → logprob: -6.770535945892334
    8. ')' → logprob: -8.145536422729492
    9. ' lunch' → logprob: -8.270536422729492
    10. '<|end|>' → logprob: -8.645536422729492

Token 394: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36904677748680115
    2. '   ' → logprob: -1.3690468072891235
    3. ' lunch' → logprob: -3.494046688079834
    4. '       ' → logprob: -3.744046688079834
    5. 'Lunch' → logprob: -10.119047164916992
    6. '	l' → logprob: -10.244047164916992
    7. ' l' → logprob: -10.494047164916992
    8. 'lun' → logprob: -10.619047164916992
    9. ' ' → logprob: -11.494047164916992
    10. ' lunches' → logprob: -11.619047164916992

Token 395: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.0012096378486603498
    2. '_' → logprob: -6.876209735870361
    3. '_checks' → logprob: -9.501209259033203
    4. '_counts' → logprob: -9.626209259033203
    5. '_count' → logprob: -11.501209259033203
    6. '_cnt' → logprob: -11.876209259033203
    7. ' _' → logprob: -12.251209259033203
    8. '_OK' → logprob: -12.501209259033203
    9. '_done' → logprob: -13.376209259033203
    10. '_checked' → logprob: -13.501209259033203

Token 396: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043353010551072657
    2. ' ,' → logprob: -8.875433921813965
    3. '_,' → logprob: -9.250433921813965
    4. '_checks' → logprob: -9.750433921813965
    5. ',_' → logprob: -9.875433921813965
    6. '_' → logprob: -10.750433921813965
    7. '=' → logprob: -11.125433921813965
    8. ' =' → logprob: -11.250433921813965
    9. '_counts' → logprob: -11.375433921813965
    10. ',l' → logprob: -11.875433921813965

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.845798710244708e-05
    2. ' ' → logprob: -10.375038146972656
    3. 'l' → logprob: -11.875038146972656
    4. ' lunch' → logprob: -15.250038146972656
    5. '00' → logprob: -18.750038146972656
    6. '۰' → logprob: -19.000038146972656
    7. 'd' → logprob: -19.375038146972656
    8. '(' → logprob: -19.500038146972656
    9. '   ' → logprob: -19.625038146972656
    10. 'lun' → logprob: -19.875038146972656

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3438327843905427e-05
    2. 'l' → logprob: -11.25002384185791
    3. ' ' → logprob: -11.50002384185791
    4. 'd' → logprob: -16.875022888183594
    5. '   ' → logprob: -17.375022888183594
    6. ' lunch' → logprob: -17.625022888183594
    7. '00' → logprob: -18.250022888183594
    8. '۰' → logprob: -18.250022888183594
    9. '     ' → logprob: -18.375022888183594
    10. '       ' → logprob: -18.750022888183594

Token 399: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6736843585968018
    2. '<|end|>' → logprob: -1.0486843585968018
    3. ',' → logprob: -2.2986843585968018
    4. '
' → logprob: -4.298684120178223
    5. ',l' → logprob: -4.298684120178223
    6. '<|end|>' → logprob: -5.298684120178223
    7. ' lunch' → logprob: -5.673684120178223
    8. ',
' → logprob: -6.798684120178223
    9. 'l' → logprob: -7.173684120178223
    10. '        
' → logprob: -7.673684120178223

Token 400: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' lunch' (ID: 17418)
  Prédit: ' lunch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.20919610559940338
    2. 'l' → logprob: -1.7091960906982422
    3. '       ' → logprob: -4.959196090698242
    4. ' l' → logprob: -8.209196090698242
    5. ' lunchtime' → logprob: -8.459196090698242
    6. '   ' → logprob: -9.584196090698242
    7. ' lunches' → logprob: -10.334196090698242
    8. ' luncheon' → logprob: -10.584196090698242
    9. ' lun' → logprob: -10.709196090698242
    10. 'lun' → logprob: -10.834196090698242

Token 402: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0001475220051361248
    2. '_' → logprob: -9.625147819519043
    3. '_tot' → logprob: -9.875147819519043
    4. '_ok' → logprob: -11.000147819519043
    5. ' _' → logprob: -12.000147819519043
    6. '_t' → logprob: -13.625147819519043
    7. '_count' → logprob: -14.125147819519043
    8. 'total' → logprob: -14.250147819519043
    9. '```' → logprob: -14.500147819519043
    10. '_all' → logprob: -14.875147819519043

Token 403: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029759055003523827
    2. '=' → logprob: -3.529759168624878
    3. ',' → logprob: -11.779759407043457
    4. '<|end|>' → logprob: -14.029759407043457
    5. ' =
' → logprob: -16.65475845336914
    6. '<|end|>' → logprob: -17.15475845336914
    7. ')' → logprob: -17.77975845336914
    8. ' ' → logprob: -17.77975845336914
    9. '0' → logprob: -17.90475845336914
    10. '   ' → logprob: -17.90475845336914

Token 404: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036406738217920065
    2. ' ' → logprob: -8.125364303588867
    3. 'n' → logprob: -9.625364303588867
    4. ' n' → logprob: -13.750364303588867
    5. '   ' → logprob: -14.750364303588867
    6. '=' → logprob: -16.187864303588867
    7. '<|end|>' → logprob: -16.437864303588867
    8. '۰' → logprob: -16.937864303588867
    9. '<|end|>' → logprob: -16.937864303588867
    10. '  ' → logprob: -17.687864303588867

Token 405: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. 'n' → logprob: -11.000020980834961
    3. ' ' → logprob: -12.750020980834961
    4. '<|end|>' → logprob: -14.875020980834961
    5. '۰' → logprob: -15.750020980834961
    6. '=' → logprob: -16.25002098083496
    7. '<|end|>' → logprob: -17.25002098083496
    8. '   ' → logprob: -17.31252098083496
    9. '০' → logprob: -17.50002098083496
    10. '```' → logprob: -17.56252098083496

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3645804822444916
    2. '       ' → logprob: -1.239580512046814
    3. '        
' → logprob: -4.8645806312561035
    4. '<|end|>' → logprob: -4.9895806312561035
    5. '    
' → logprob: -8.114580154418945
    6. '  
' → logprob: -8.114580154418945
    7. ' 
' → logprob: -8.364580154418945
    8. '<|end|>' → logprob: -8.489580154418945
    9. '   ' → logprob: -9.739580154418945
    10. '       
' → logprob: -9.864580154418945

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0398809015750885
    2. 'd' → logprob: -3.4148809909820557
    3. '
' → logprob: -5.914880752563477
    4. '   ' → logprob: -6.414880752563477
    5. ' dinner' → logprob: -6.789880752563477
    6. '        
' → logprob: -8.164880752563477
    7. '    
' → logprob: -9.414880752563477
    8. ',d' → logprob: -9.914880752563477
    9. 'Dinner' → logprob: -9.914880752563477
    10. ' lunch' → logprob: -10.039880752563477

Token 408: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06259673088788986
    2. ' dinner' → logprob: -2.8125967979431152
    3. '       ' → logprob: -7.812596797943115
    4. '   ' → logprob: -8.937596321105957
    5. ' d' → logprob: -10.187596321105957
    6. 'for' → logprob: -11.687596321105957
    7. 'Dinner' → logprob: -11.812596321105957
    8. ' for' → logprob: -11.937596321105957
    9. ' ' → logprob: -12.187596321105957
    10. '
' → logprob: -12.437596321105957

Token 409: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -6.098748053773306e-05
    2. '_total' → logprob: -10.00006103515625
    3. '_' → logprob: -11.25006103515625
    4. '_OK' → logprob: -13.62506103515625
    5. ' _' → logprob: -14.12506103515625
    6. 'ok' → logprob: -15.87506103515625
    7. 'Ok' → logprob: -16.25006103515625
    8. '_yes' → logprob: -16.87506103515625
    9. '```' → logprob: -17.12506103515625
    10. '_oc' → logprob: -17.12506103515625

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026610400527715683
    2. '=' → logprob: -3.6516103744506836
    3. ',' → logprob: -8.151610374450684
    4. ' ,' → logprob: -11.026610374450684
    5. ' ' → logprob: -12.776610374450684
    6. '<|end|>' → logprob: -13.151610374450684
    7. ')' → logprob: -15.151610374450684
    8. ' ' → logprob: -16.276611328125
    9. ' =
' → logprob: -16.651611328125
    10. '  ' → logprob: -16.776611328125

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.876326560974121
    4. '=' → logprob: -16.876325607299805
    5. 'n' → logprob: -17.126325607299805
    6. 'd' → logprob: -17.938825607299805
    7. '۰' → logprob: -18.501325607299805
    8. '  ' → logprob: -18.751325607299805
    9. '<|end|>' → logprob: -19.688825607299805
    10. ' =' → logprob: -19.751325607299805

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '=' → logprob: -17.62500762939453
    4. 'd' → logprob: -18.25000762939453
    5. '۰' → logprob: -18.50000762939453
    6. '   ' → logprob: -18.62500762939453
    7. '<|end|>' → logprob: -19.37500762939453
    8. '<|end|>' → logprob: -19.43750762939453
    9. '00' → logprob: -19.50000762939453
    10. 'def' → logprob: -19.87500762939453

Token 413: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01476225908845663
    2. '<|end|>' → logprob: -5.1397624015808105
    3. '
' → logprob: -5.5147624015808105
    4. '        
' → logprob: -6.2647624015808105
    5. ',' → logprob: -7.1397624015808105
    6. 'd' → logprob: -7.3897624015808105
    7. ' 
' → logprob: -8.139761924743652
    8. '    
' → logprob: -8.389761924743652
    9. ',d' → logprob: -8.514761924743652
    10. '   ' → logprob: -8.889761924743652

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02082984708249569
    2. 'd' → logprob: -3.895829916000366
    3. '   ' → logprob: -9.395830154418945
    4. ',d' → logprob: -10.020830154418945
    5. '
' → logprob: -10.395830154418945
    6. '<|end|>' → logprob: -10.645830154418945
    7. '        
' → logprob: -11.020830154418945
    8. ' 
' → logprob: -11.020830154418945
    9. '```' → logprob: -11.145830154418945
    10. ' d' → logprob: -11.145830154418945

Token 415: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009542867541313171
    2. ' dinner' → logprob: -5.009542942047119
    3. '       ' → logprob: -5.884542942047119
    4. '   ' → logprob: -10.384542465209961
    5. ' d' → logprob: -12.509542465209961
    6. ' dîner' → logprob: -13.634542465209961
    7. ' ' → logprob: -13.884542465209961
    8. '	d' → logprob: -14.009542465209961
    9. '```' → logprob: -14.134542465209961
    10. ' dinners' → logprob: -14.759542465209961

Token 416: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.000007629394531
    3. ' _' → logprob: -14.375007629394531
    4. 'total' → logprob: -14.875007629394531
    5. '_final' → logprob: -16.62500762939453
    6. '_ok' → logprob: -16.75000762939453
    7. '_continue' → logprob: -16.87500762939453
    8. '_start' → logprob: -17.12500762939453
    9. '_complete' → logprob: -17.12500762939453
    10. '_tab' → logprob: -17.25000762939453

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868914544582367
    2. '=' → logprob: -1.136891484260559
    3. '   ' → logprob: -11.01189136505127
    4. ' ' → logprob: -14.13689136505127
    5. '	' → logprob: -14.38689136505127
    6. '```' → logprob: -14.38689136505127
    7. '<|end|>' → logprob: -14.63689136505127
    8. '0' → logprob: -14.76189136505127
    9. ',' → logprob: -15.26189136505127
    10. '       ' → logprob: -15.63689136505127

Token 418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.250097274780273
    3. 'n' → logprob: -14.500097274780273
    4. 'd' → logprob: -16.875097274780273
    5. '   ' → logprob: -17.250097274780273
    6. '=' → logprob: -18.000097274780273
    7. '۰' → logprob: -18.062597274780273
    8. ' n' → logprob: -19.125097274780273
    9. '       ' → logprob: -19.750097274780273
    10. '  ' → logprob: -19.875097274780273

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. 'n' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.87500286102295
    4. '=' → logprob: -17.125001907348633
    5. 'd' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.812501907348633
    7. '۰' → logprob: -18.812501907348633
    8. ' n' → logprob: -19.812501907348633
    9. '00' → logprob: -20.000001907348633
    10. '
' → logprob: -20.125001907348633

Token 420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007972124963998795
    2. 'd' → logprob: -5.132972240447998
    3. '   ' → logprob: -6.257972240447998
    4. ' dinner' → logprob: -9.50797176361084
    5. '
' → logprob: -10.13297176361084
    6. ',' → logprob: -13.13297176361084
    7. ' d' → logprob: -13.13297176361084
    8. '```' → logprob: -13.25797176361084
    9. '        
' → logprob: -13.38297176361084
    10. ',d' → logprob: -13.63297176361084

Token 421: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2319127917289734
    2. '       ' → logprob: -1.6069128513336182
    3. 'd' → logprob: -5.106912612915039
    4. 'mid' → logprob: -8.731912612915039
    5. ' midnight' → logprob: -9.106912612915039
    6. ' dinner' → logprob: -9.856912612915039
    7. '
' → logprob: -9.981912612915039
    8. '    
' → logprob: -11.731912612915039
    9. '      ' → logprob: -11.981912612915039
    10. '```' → logprob: -11.981912612915039

Token 422: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0048582423478364944
    2. 'd' → logprob: -5.504858016967773
    3. '       ' → logprob: -8.004858016967773
    4. ' midnight' → logprob: -8.254858016967773
    5. '   ' → logprob: -8.629858016967773
    6. ' mid' → logprob: -12.379858016967773
    7. 'night' → logprob: -14.254858016967773
    8. '
' → logprob: -14.379858016967773
    9. ' ' → logprob: -14.879858016967773
    10. '```' → logprob: -15.129858016967773

Token 423: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.00010425841173855588
    2. '_total' → logprob: -9.625103950500488
    3. '_' → logprob: -10.250103950500488
    4. '_OK' → logprob: -13.750103950500488
    5. 'ok' → logprob: -14.875103950500488
    6. '_yes' → logprob: -14.875103950500488
    7. 'Ok' → logprob: -15.500103950500488
    8. ' _' → logprob: -16.000104904174805
    9. '_ack' → logprob: -16.250104904174805
    10. '_oc' → logprob: -16.375104904174805

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133063316345215
    2. '=' → logprob: -1.3133063316345215
    3. ',' → logprob: -10.06330680847168
    4. '<|end|>' → logprob: -13.68830680847168
    5. ' ' → logprob: -14.93830680847168
    6. ')' → logprob: -15.93830680847168
    7. '0' → logprob: -16.43830680847168
    8. 's' → logprob: -16.56330680847168
    9. '```' → logprob: -17.06330680847168
    10. '   ' → logprob: -17.18830680847168

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.875001907348633
    4. '=' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -21.125001907348633
    6. '۰' → logprob: -21.375001907348633
    7. '```' → logprob: -22.000001907348633
    8. 'def' → logprob: -22.500001907348633
    9. '<|end|>' → logprob: -22.750001907348633
    10. '00' → logprob: -23.000001907348633

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '=' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.000001907348633
    6. '০' → logprob: -21.062501907348633
    7. '<|end|>' → logprob: -21.312501907348633
    8. '```' → logprob: -21.500001907348633
    9. '<|end|>' → logprob: -21.687501907348633
    10. ',' → logprob: -21.812501907348633

Token 427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01676963083446026
    2. 'mid' → logprob: -5.1417694091796875
    3. '<|end|>' → logprob: -5.6417694091796875
    4. '[mid' → logprob: -5.7667694091796875
    5. '(mid' → logprob: -6.5167694091796875
    6. '
' → logprob: -7.6417694091796875
    7. '        
' → logprob: -7.6417694091796875
    8. '_mid' → logprob: -8.016769409179688
    9. '   ' → logprob: -8.016769409179688
    10. ',' → logprob: -8.266769409179688

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00873937364667654
    2. 'mid' → logprob: -4.883739471435547
    3. ' midnight' → logprob: -7.133739471435547
    4. '
' → logprob: -9.758739471435547
    5. '   ' → logprob: -9.758739471435547
    6. '[mid' → logprob: -9.758739471435547
    7. '_mid' → logprob: -9.883739471435547
    8. ' mid' → logprob: -10.258739471435547
    9. '(mid' → logprob: -10.383739471435547
    10. '        
' → logprob: -11.008739471435547

Token 429: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.4021237802808173e-05
    2. ' midnight' → logprob: -11.250014305114746
    3. '       ' → logprob: -14.125014305114746
    4. '   ' → logprob: -16.62501335144043
    5. 'middle' → logprob: -16.62501335144043
    6. 'night' → logprob: -17.75001335144043
    7. ' mid' → logprob: -18.37501335144043
    8. '_mid' → logprob: -18.37501335144043
    9. '(mid' → logprob: -18.50001335144043
    10. 'midd' → logprob: -18.50001335144043

Token 430: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -12.750003814697266
    3. ' _' → logprob: -14.000003814697266
    4. 'total' → logprob: -17.125003814697266
    5. '_final' → logprob: -17.625003814697266
    6. '_start' → logprob: -17.625003814697266
    7. '_target' → logprob: -18.125003814697266
    8. '```' → logprob: -18.125003814697266
    9. '_max' → logprob: -18.250003814697266
    10. '_tab' → logprob: -18.250003814697266

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740943908691406
    2. ' =' → logprob: -0.9740943908691406
    3. '0' → logprob: -11.34909439086914
    4. '   ' → logprob: -12.59909439086914
    5. ' ' → logprob: -13.84909439086914
    6. ' +=' → logprob: -13.97409439086914
    7. '+=' → logprob: -15.72409439086914
    8. '```' → logprob: -16.72409439086914
    9. '    ' → logprob: -17.09909439086914
    10. 's' → logprob: -17.97409439086914

Token 432: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'n' → logprob: -14.500017166137695
    4. '=' → logprob: -16.375017166137695
    5. '   ' → logprob: -18.437517166137695
    6. '۰' → logprob: -18.500017166137695
    7. '00' → logprob: -18.625017166137695
    8. '000' → logprob: -18.937517166137695
    9. ' n' → logprob: -19.125017166137695
    10. '>' → logprob: -19.625017166137695

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. 'n' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '=' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -18.875001907348633
    6. '۰' → logprob: -19.125001907348633
    7. '000' → logprob: -19.750001907348633
    8. '00' → logprob: -19.812501907348633
    9. '   ' → logprob: -20.125001907348633
    10. ' n' → logprob: -20.500001907348633

Token 434: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8417641520500183
    2. 'for' → logprob: -0.8417641520500183
    3. ' for' → logprob: -2.591764211654663
    4. '   ' → logprob: -2.841764211654663
    5. '
' → logprob: -5.966763973236084
    6. '	for' → logprob: -6.841763973236084
    7. '<|end|>' → logprob: -7.216763973236084
    8. '    
' → logprob: -8.591764450073242
    9. '        
' → logprob: -8.591764450073242
    10. '```' → logprob: -9.716764450073242

Token 436: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018377259839326143
    2. '       ' → logprob: -6.501837730407715
    3. ' for' → logprob: -8.001837730407715
    4. '	for' → logprob: -14.876837730407715
    5. '   ' → logprob: -15.626837730407715
    6. '
' → logprob: -18.0018367767334
    7. '```' → logprob: -18.5018367767334
    8. '        
' → logprob: -18.8768367767334
    9. 'import' → logprob: -20.3768367767334
    10. ' ' → logprob: -20.5018367767334

Token 437: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011726059019565582
    2. ' _' → logprob: -6.7511725425720215
    3. '_i' → logprob: -13.00117301940918
    4. 'i' → logprob: -15.87617301940918
    5. ' i' → logprob: -17.25117301940918
    6. '   ' → logprob: -19.12617301940918
    7. '_

' → logprob: -19.37617301940918
    8. '_
' → logprob: -20.12617301940918
    9. '  ' → logprob: -20.50117301940918
    10. '_=' → logprob: -20.50117301940918

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5772144794464111
    2. 'in' → logprob: -0.8272144794464111
    3. 'range' → logprob: -6.702214241027832
    4. ' ' → logprob: -10.702214241027832
    5. 'i' → logprob: -12.202214241027832
    6. '  ' → logprob: -12.202214241027832
    7. ' range' → logprob: -12.202214241027832
    8. '   ' → logprob: -12.702214241027832
    9. 'n' → logprob: -13.077214241027832
    10. '    ' → logprob: -13.702214241027832

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '_range' → logprob: -18.75020408630371
    4. '	range' → logprob: -19.62520408630371
    5. '_' → logprob: -20.37520408630371
    6. 'Range' → logprob: -20.50020408630371
    7. '(range' → logprob: -20.62520408630371
    8. '
' → logprob: -21.12520408630371
    9. 'r' → logprob: -21.37520408630371
    10. 'in' → logprob: -21.50020408630371

Token 440: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004896196536719799
    2. '(' → logprob: -5.50489616394043
    3. ' range' → logprob: -8.25489616394043
    4. ' (' → logprob: -8.62989616394043
    5. '(range' → logprob: -8.87989616394043
    6. ' n' → logprob: -9.12989616394043
    7. 'range' → logprob: -9.62989616394043
    8. 'n' → logprob: -9.87989616394043
    9. ' in' → logprob: -12.00489616394043
    10. ' ' → logprob: -12.62989616394043

Token 441: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04866616427898407
    2. '):
' → logprob: -3.04866623878479
    3. '       ' → logprob: -10.298666000366211
    4. ':' → logprob: -11.048666000366211
    5. ' ):' → logprob: -11.173666000366211
    6. '):
' → logprob: -12.048666000366211
    7. '   ' → logprob: -12.423666000366211
    8. ')' → logprob: -13.923666000366211
    9. '):

' → logprob: -14.048666000366211
    10. ',' → logprob: -14.048666000366211

Token 442: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028090469539165497
    2. '           ' → logprob: -3.653090476989746
    3. '```' → logprob: -7.528090476989746
    4. '<|end|>' → logprob: -8.403090476989746
    5. '   ' → logprob: -8.903090476989746
    6. ' line' → logprob: -9.028090476989746
    7. 'input' → logprob: -9.403090476989746
    8. '<|end|>' → logprob: -9.528090476989746
    9. '	       ' → logprob: -10.028090476989746
    10. ' code' → logprob: -10.028090476989746

Token 443: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2810976207256317
    2. ' time' → logprob: -1.906097650527954
    3. ' check' → logprob: -2.906097650527954
    4. 'time' → logprob: -3.906097650527954
    5. 'line' (adapté à ' line') → logprob: -5.281097412109375
    6. ' input' → logprob: -5.656097412109375
    7. '           ' → logprob: -5.781097412109375
    8. ' data' → logprob: -6.031097412109375
    9. 'check' → logprob: -6.031097412109375
    10. ' timestamp' → logprob: -6.531097412109375

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004324573092162609
    2. '=' → logprob: -7.75043249130249
    3. '=line' → logprob: -15.000432014465332
    4. '_' → logprob: -15.250432014465332
    5. ' ' → logprob: -15.250432014465332
    6. ' =
' → logprob: -15.500432014465332
    7. ')' → logprob: -15.500432014465332
    8. '_tokens' → logprob: -15.875432014465332
    9. '<|end|>' → logprob: -15.875432014465332
    10. 'tokens' → logprob: -16.00043296813965

Token 445: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759395956993103
    2. 'input' → logprob: -0.8259395956993103
    3. '           ' → logprob: -16.950939178466797
    4. '=input' → logprob: -17.450939178466797
    5. '	input' → logprob: -18.200939178466797
    6. '(input' → logprob: -18.575939178466797
    7. '   ' → logprob: -18.825939178466797
    8. ' ' → logprob: -19.325939178466797
    9. '_input' → logprob: -19.575939178466797
    10. ',input' → logprob: -19.950939178466797

Token 446: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018153922632336617
    2. '()' → logprob: -4.018154144287109
    3. '(' → logprob: -12.89315414428711
    4. '()
' → logprob: -14.51815414428711
    5. '.strip' → logprob: -14.76815414428711
    6. '.' → logprob: -16.01815414428711
    7. '()

' → logprob: -16.14315414428711
    8. '())' → logprob: -16.51815414428711
    9. ' ().' → logprob: -17.14315414428711
    10. '();' → logprob: -17.14315414428711

Token 447: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.0445127372804563e-05
    2. 'split' → logprob: -11.50001049041748
    3. 'rstrip' → logprob: -15.25001049041748
    4. ' strip' → logprob: -19.250009536743164
    5. '_strip' → logprob: -19.375009536743164
    6. '.strip' → logprob: -20.625009536743164
    7. '(strip' → logprob: -21.000009536743164
    8. '-strip' → logprob: -22.250009536743164
    9. 'str' → logprob: -23.000009536743164
    10. 'Strip' → logprob: -24.500009536743164

Token 448: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018587957601994276
    2. '<|end|>' → logprob: -6.751858711242676
    3. '            
' → logprob: -8.126858711242676
    4. '<|end|>' → logprob: -9.251858711242676
    5. ',' → logprob: -9.501858711242676
    6. 'tokens' → logprob: -9.876858711242676
    7. '          ' → logprob: -10.751858711242676
    8. '       ' → logprob: -11.126858711242676
    9. '   ' → logprob: -11.126858711242676
    10. '.split' → logprob: -11.126858711242676

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013284345157444477
    2. 'tokens' → logprob: -5.513284206390381
    3. ' tokens' → logprob: -5.638284206390381
    4. ' parts' → logprob: -5.888284206390381
    5. '       ' → logprob: -7.513284206390381
    6. ',' → logprob: -7.513284206390381
    7. '_tokens' → logprob: -7.763284206390381
    8. '            
' → logprob: -7.888284206390381
    9. '.split' → logprob: -9.138284683227539
    10. '	       ' → logprob: -9.138284683227539

Token 450: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.07553239911794662
    2. 'hh' → logprob: -3.8255324363708496
    3. 'parts' → logprob: -4.07553243637085
    4. 'timestamp' → logprob: -4.70053243637085
    5. 'if' → logprob: -4.82553243637085
    6. 'check' → logprob: -5.57553243637085
    7. 'fields' → logprob: -5.70053243637085
    8. 'status' → logprob: -5.95053243637085
    9. 'hour' → logprob: -6.57553243637085
    10. 'tokens' → logprob: -6.82553243637085

Token 451: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1460038274526596
    2. '_str' → logprob: -2.5210037231445312
    3. '_' → logprob: -3.3960037231445312
    4. '_,' → logprob: -4.271003723144531
    5. '_tokens' → logprob: -5.521003723144531
    6. '_token' → logprob: -6.271003723144531
    7. ' ,' → logprob: -7.771003723144531
    8. ',_' → logprob: -8.271003723144531
    9. '_time' → logprob: -8.396003723144531
    10. ')' → logprob: -8.396003723144531

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ',status' → logprob: -11.125024795532227
    3. ' ,' → logprob: -12.250024795532227
    4. 'status' → logprob: -12.875024795532227
    5. ',result' → logprob: -14.500024795532227
    6. ',user' → logprob: -14.625024795532227
    7. ',time' → logprob: -14.875024795532227
    8. '=' → logprob: -15.750024795532227
    9. ',event' → logprob: -16.250024795532227
    10. ',input' → logprob: -16.250024795532227

Token 453: ' mm' (ID: 8957)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.4966047406196594
    2. 'result' → logprob: -1.4966046810150146
    3. 'check' → logprob: -2.4966046810150146
    4. 'ok' → logprob: -2.9966046810150146
    5. 'state' → logprob: -5.121604919433594
    6. ' status' → logprob: -5.246604919433594
    7. 'flag' → logprob: -5.496604919433594
    8. 'rest' → logprob: -5.746604919433594
    9. ' result' → logprob: -6.496604919433594
    10. 'code' → logprob: -6.621604919433594

Token 454: '_str' (ID: 6182)
  Prédit: 'status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'status' → logprob: -0.955427885055542
    2. 'result' → logprob: -1.205427885055542
    3. ',' → logprob: -1.705427885055542
    4. '_result' → logprob: -3.205427885055542
    5. 'ss' → logprob: -3.705427885055542
    6. '_status' → logprob: -4.205428123474121
    7. 'ok' → logprob: -4.580428123474121
    8. 'state' → logprob: -4.580428123474121
    9. 's' → logprob: -4.705428123474121
    10. '=' → logprob: -5.455428123474121

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28165993094444275
    2. ',' → logprob: -1.6566599607467651
    3. ' =' → logprob: -2.9066598415374756
    4. ' ,' → logprob: -10.656660079956055
    5. '   ' → logprob: -13.906660079956055
    6. '_=' → logprob: -14.031660079956055
    7. ',status' → logprob: -14.031660079956055
    8. '=line' → logprob: -14.031660079956055
    9. ' ' → logprob: -14.281660079956055
    10. '<|end|>' → logprob: -14.469160079956055

Token 456: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078639671206474
    2. ' line' → logprob: -5.5040788650512695
    3. 'time' → logprob: -16.879077911376953
    4. '[line' → logprob: -16.879077911376953
    5. '	line' → logprob: -17.129077911376953
    6. '
' → logprob: -17.129077911376953
    7. ' ' → logprob: -17.379077911376953
    8. '(line' → logprob: -17.504077911376953
    9. '   ' → logprob: -17.754077911376953
    10. '=line' → logprob: -17.754077911376953

Token 457: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067478204146027565
    2. ' =' → logprob: -5.006747722625732
    3. '.split' → logprob: -10.50674819946289
    4. 'split' → logprob: -12.75674819946289
    5. ',' → logprob: -13.88174819946289
    6. '   ' → logprob: -14.38174819946289
    7. '_split' → logprob: -15.38174819946289
    8. '=line' → logprob: -15.63174819946289
    9. '.=' → logprob: -16.50674819946289
    10. '.' → logprob: -16.50674819946289

Token 458: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0055741677060723305
    2. '('' → logprob: -5.2555742263793945
    3. '(' → logprob: -8.380574226379395
    4. ''' → logprob: -10.130574226379395
    5. '(',' → logprob: -10.130574226379395
    6. '()[' → logprob: -11.630574226379395
    7. '()='' → logprob: -12.130574226379395
    8. '();' → logprob: -12.630574226379395
    9. '()
' → logprob: -12.755574226379395
    10. '[' → logprob: -12.880574226379395

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49422818422317505
    2. '       ' → logprob: -2.1192281246185303
    3. ' ok' → logprob: -2.7442281246185303
    4. '<|end|>' → logprob: -3.1192281246185303
    5. 'time' → logprob: -3.4942281246185303
    6. ',' → logprob: -3.7442281246185303
    7. 'status' → logprob: -3.7442281246185303
    8. ' time' → logprob: -4.244228363037109
    9. ' status' → logprob: -4.494228363037109
    10. '            
' → logprob: -4.619228363037109

Token 460: ' provide' (ID: 3587)
  Prédit: 'minute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minute' → logprob: -0.4499903917312622
    2. 'time' → logprob: -1.8249903917312622
    3. 'mm' → logprob: -2.1999902725219727
    4. 'check' → logprob: -3.3249902725219727
    5. 'status' → logprob: -3.6999902725219727
    6. '           ' → logprob: -4.449990272521973
    7. 'result' → logprob: -4.574990272521973
    8. 'ok' → logprob: -6.824990272521973
    9. 'm' → logprob: -6.949990272521973
    10. 'min' → logprob: -7.199990272521973

Token 461: '_time' (ID: 6425)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.024909771978855133
    2. '_time' → logprob: -5.024909973144531
    3. 'ed' → logprob: -5.274909973144531
    4. 's' → logprob: -5.649909973144531
    5. 'time' → logprob: -6.274909973144531
    6. 'ment' → logprob: -6.649909973144531
    7. '_check' → logprob: -6.899909973144531
    8. 'r' → logprob: -7.024909973144531
    9. '_mm' → logprob: -7.024909973144531
    10. '_status' → logprob: -7.274909973144531

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6134969592094421
    2. ' =' → logprob: -0.8634969592094421
    3. 'd' → logprob: -3.488497018814087
    4. ',' → logprob: -5.363496780395508
    5. '_minutes' → logprob: -7.113496780395508
    6. '_' → logprob: -7.863496780395508
    7. '   ' → logprob: -9.113496780395508
    8. 's' → logprob: -9.988496780395508
    9. 'ed' → logprob: -10.613496780395508
    10. '  ' → logprob: -10.738496780395508

Token 463: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.003460252657532692
    2. ' parse' → logprob: -5.87846040725708
    3. 'time' → logprob: -7.75346040725708
    4. 'mm' → logprob: -8.503459930419922
    5. ' time' → logprob: -11.753459930419922
    6. ' mm' → logprob: -11.753459930419922
    7. 'int' → logprob: -12.753459930419922
    8. '   ' → logprob: -14.128459930419922
    9. ' ' → logprob: -14.253459930419922
    10. '(parse' → logprob: -15.128459930419922

Token 464: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0280383548888494e-06
    2. 'time' → logprob: -14.000000953674316
    3. '_' → logprob: -16.625001907348633
    4. '_str' → logprob: -18.750001907348633
    5. '_code' → logprob: -18.750001907348633
    6. 'parse' → logprob: -19.250001907348633
    7. 'Time' → logprob: -19.500001907348633
    8. 'str' → logprob: -19.500001907348633
    9. '_
' → logprob: -19.750001907348633
    10. '_token' → logprob: -19.750001907348633

Token 465: '_to' (ID: 5089)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00671940203756094
    2. '_to' → logprob: -5.006719589233398
    3. '_token' → logprob: -13.256719589233398
    4. '_str' → logprob: -13.631719589233398
    5. 'time' → logprob: -14.381719589233398
    6. '_minutes' → logprob: -15.631719589233398
    7. 'to' → logprob: -15.756719589233398
    8. '```' → logprob: -17.1317195892334
    9. 'To' → logprob: -17.2567195892334
    10. '_' → logprob: -17.5067195892334

Token 466: '_minutes' (ID: 174025)
  Prédit: '_minutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_minutes' → logprob: -0.01604011468589306
    2. 'minutes' → logprob: -4.141040325164795
    3. '(minutes' → logprob: -13.141039848327637
    4. 'int' → logprob: -13.516039848327637
    5. ' minutes' → logprob: -14.266039848327637
    6. 'Minutes' → logprob: -14.516039848327637
    7. 'minute' → logprob: -14.891039848327637
    8. 'token' → logprob: -15.266039848327637
    9. 'time' → logprob: -15.641039848327637
    10. '```' → logprob: -15.766039848327637

Token 467: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -6.704273118884885e-07
    2. '(pro' → logprob: -14.500000953674316
    3. 'time' → logprob: -17.5
    4. '(' → logprob: -18.25
    5. '(mm' → logprob: -18.75
    6. '(times' → logprob: -18.75
    7. '(date' → logprob: -19.75
    8. '(Time' → logprob: -20.0
    9. ' (' → logprob: -20.5
    10. '(datetime' → logprob: -21.25

Token 468: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.170270353322849e-05
    2. 'str' → logprob: -9.750061988830566
    3. ')' → logprob: -13.375061988830566
    4. 'Str' → logprob: -14.000061988830566
    5. '_time' → logprob: -14.625061988830566
    6. 'time' → logprob: -14.875061988830566
    7. '_)' → logprob: -17.00006103515625
    8. '.strptime' → logprob: -17.62506103515625
    9. '	str' → logprob: -17.87506103515625
    10. '_STR' → logprob: -18.00006103515625

Token 469: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.034705113619565964
    2. ')' → logprob: -3.40970516204834
    3. '           ' → logprob: -6.90970516204834
    4. '()
' → logprob: -10.53470516204834
    5. '())
' → logprob: -11.53470516204834
    6. ')
' → logprob: -11.90970516204834
    7. '()' → logprob: -12.03470516204834
    8. ' )
' → logprob: -12.90970516204834
    9. ')

' → logprob: -13.03470516204834
    10. '       ' → logprob: -13.65970516204834

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42476215958595276
    2. ' ok' → logprob: -1.4247621297836304
    3. ' check' → logprob: -3.67476224899292
    4. 'ok' → logprob: -3.92476224899292
    5. ' status' → logprob: -4.29976224899292
    6. 'status' → logprob: -4.54976224899292
    7. 'check' → logprob: -4.54976224899292
    8. 'mm' → logprob: -4.92476224899292
    9. ' mm' → logprob: -5.04976224899292
    10. 'answer' → logprob: -6.42476224899292

Token 471: ' provided' (ID: 5181)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.16809745132923126
    2. 'check' → logprob: -3.543097496032715
    3. 'm' → logprob: -3.918097496032715
    4. '           ' → logprob: -4.168097496032715
    5. 'measure' → logprob: -4.168097496032715
    6. 'measurement' → logprob: -4.168097496032715
    7. 'result' → logprob: -5.543097496032715
    8. 'min' → logprob: -5.543097496032715
    9. 'meal' → logprob: -5.668097496032715
    10. 'me' → logprob: -5.793097496032715

Token 472: '_mm' (ID: 83510)
  Prédit: '_mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mm' → logprob: -0.078559011220932
    2. '_time' → logprob: -4.078558921813965
    3. '_m' → logprob: -4.328558921813965
    4. 'mm' → logprob: -4.953558921813965
    5. '_ok' → logprob: -4.953558921813965
    6. ' =' → logprob: -5.453558921813965
    7. '_result' → logprob: -5.578558921813965
    8. '_status' → logprob: -5.703558921813965
    9. '_value' → logprob: -5.828558921813965
    10. '=' → logprob: -5.953558921813965

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22544145584106445
    2. ' =' → logprob: -1.6004414558410645
    3. '=int' → logprob: -10.850440979003906
    4. ' ' → logprob: -12.600440979003906
    5. ',' → logprob: -13.225440979003906
    6. '   ' → logprob: -13.725440979003906
    7. 's' → logprob: -14.225440979003906
    8. 'int' → logprob: -15.225440979003906
    9. '  ' → logprob: -15.225440979003906
    10. 'ount' → logprob: -15.350440979003906

Token 474: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001751818461343646
    2. 'mm' → logprob: -7.001751899719238
    3. 'float' → logprob: -7.251751899719238
    4. ' int' → logprob: -9.001751899719238
    5. ' mm' → logprob: -13.001751899719238
    6. 'parse' → logprob: -13.876751899719238
    7. '(int' → logprob: -14.001751899719238
    8. '=int' → logprob: -14.501751899719238
    9. '[int' → logprob: -14.751751899719238
    10. '0' → logprob: -15.001751899719238

Token 475: '(mm' (ID: 124702)
  Prédit: '(mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mm' → logprob: -7.941850526549388e-06
    2. 'mm' → logprob: -11.750007629394531
    3. '_mm' → logprob: -17.25000762939453
    4. '/mm' → logprob: -18.37500762939453
    5. ':mm' → logprob: -18.87500762939453
    6. ' mm' → logprob: -19.25000762939453
    7. '(m' → logprob: -19.75000762939453
    8. '(' → logprob: -20.00000762939453
    9. '(mi' → logprob: -21.00000762939453
    10. 'MM' → logprob: -21.25000762939453

Token 476: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0001438266917830333
    2. 'str' → logprob: -9.125144004821777
    3. '_mm' → logprob: -10.500144004821777
    4. '(mm' → logprob: -12.625144004821777
    5. 'mm' → logprob: -12.875144004821777
    6. 'Str' → logprob: -14.750144004821777
    7. ')' → logprob: -15.250144004821777
    8. '[' → logprob: -15.750144004821777
    9. ' mm' → logprob: -16.12514305114746
    10. '-str' → logprob: -16.37514305114746

Token 477: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048167374916374683
    2. ')
' → logprob: -7.750481605529785
    3. '           ' → logprob: -10.125481605529785
    4. '<|end|>' → logprob: -12.125481605529785
    5. ')

' → logprob: -13.500481605529785
    6. '<|end|>' → logprob: -13.875481605529785
    7. ' )' → logprob: -14.500481605529785
    8. ')
' → logprob: -15.000481605529785
    9. '),' → logprob: -15.125481605529785
    10. '       ' → logprob: -15.250481605529785

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009364743018522859
    2. 'if' → logprob: -7.500936508178711
    3. '<|end|>' → logprob: -8.875936508178711
    4. '       ' → logprob: -9.750936508178711
    5. ' if' → logprob: -10.000936508178711
    6. '            
' → logprob: -10.375936508178711
    7. '   ' → logprob: -10.750936508178711
    8. '<|end|>' → logprob: -10.875936508178711
    9. '```' → logprob: -11.375936508178711
    10. 'check' → logprob: -11.625936508178711

Token 479: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21537305414676666
    2. '           ' → logprob: -2.0903730392456055
    3. '#' (adapté à ' #') → logprob: -2.9653730392456055
    4. 'for' → logprob: -5.4653730392456055
    5. 'total' → logprob: -5.7153730392456055
    6. 'expected' → logprob: -6.2153730392456055
    7. 'ok' → logprob: -6.3403730392456055
    8. 'l' → logprob: -6.7153730392456055
    9. 'check' → logprob: -6.7153730392456055
    10. 'valid' → logprob: -6.8403730392456055

Token 480: ' Categor' (ID: 168772)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12970492243766785
    2. '#' → logprob: -2.2547049522399902
    3. 'for' → logprob: -4.50470495223999
    4. 'total' → logprob: -6.12970495223999
    5. '           ' → logprob: -6.62970495223999
    6. 'l' → logprob: -7.00470495223999
    7. 'provided' → logprob: -7.62970495223999
    8. 'in' → logprob: -8.754704475402832
    9. 'is' → logprob: -8.879704475402832
    10. 'check' → logprob: -9.379704475402832

Token 481: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.0002820736262947321
    2. 'y' → logprob: -8.250282287597656
    3. '           ' → logprob: -11.625282287597656
    4. 'ized' → logprob: -12.500282287597656
    5. 'e' → logprob: -13.000282287597656
    6. '       ' → logprob: -13.375282287597656
    7. 'izing' → logprob: -13.500282287597656
    8. '   ' → logprob: -14.625282287597656
    9. 'izer' → logprob: -14.625282287597656
    10. 'IZE' → logprob: -15.000282287597656

Token 482: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2414277344942093
    2. '            ' → logprob: -1.7414277791976929
    3. ' if' → logprob: -3.7414276599884033
    4. 'if' → logprob: -5.491427898406982
    5. 'provided' → logprob: -5.616427898406982
    6. ' into' → logprob: -5.741427898406982
    7. ' and' → logprob: -6.616427898406982
    8. ' provided' → logprob: -7.241427898406982
    9. '<|end|>' → logprob: -7.616427898406982
    10. 'and' → logprob: -7.866427898406982

Token 483: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09253814816474915
    2. 'time' → logprob: -2.5925381183624268
    3. 'provide' → logprob: -4.717538356781006
    4. 'provided' → logprob: -6.217538356781006
    5. 'check' → logprob: -6.842538356781006
    6. 'minute' → logprob: -6.967538356781006
    7. ' if' → logprob: -8.092537879943848
    8. 'current' → logprob: -9.592537879943848
    9. '#' → logprob: -9.717537879943848
    10. 'token' → logprob: -10.342537879943848

Token 484: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02053757570683956
    2. ' if' → logprob: -4.895537376403809
    3. 'time' → logprob: -5.395537376403809
    4. 'if' → logprob: -6.145537376403809
    5. ' at' → logprob: -6.645537376403809
    6. ' into' → logprob: -7.145537376403809
    7. 'and' → logprob: -7.270537376403809
    8. ' and' → logprob: -7.270537376403809
    9. '<|end|>' → logprob: -7.645537376403809
    10. ' time' → logprob: -8.270537376403809

Token 485: ' print' (ID: 2123)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.007802160922437906
    2. 'provide' → logprob: -5.5078020095825195
    3. 'provided' → logprob: -6.1328020095825195
    4. 'the' → logprob: -7.0078020095825195
    5. ' time' → logprob: -8.50780200958252
    6. 'which' → logprob: -8.75780200958252
    7. 'its' → logprob: -9.38280200958252
    8. 'timestamp' → logprob: -10.50780200958252
    9. 'meal' → logprob: -10.88280200958252
    10. 'timeofday' → logprob: -10.88280200958252

Token 486: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.07189464569091797
    2. 'ing' → logprob: -3.321894645690918
    3. 'ed' → logprob: -3.696894645690918
    4. ' time' → logprob: -5.946894645690918
    5. 'provided' → logprob: -6.071894645690918
    6. '_time' → logprob: -6.946894645690918
    7. 'def' → logprob: -7.321894645690918
    8. 'provide' → logprob: -7.446894645690918
    9. 'the' → logprob: -8.321894645690918
    10. 'ion' → logprob: -8.696894645690918

Token 487: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022051628679037094
    2. ' and' → logprob: -4.397051811218262
    3. '            
' → logprob: -5.772051811218262
    4. '<|end|>' → logprob: -6.522051811218262
    5. ',' → logprob: -6.897051811218262
    6. ' into' → logprob: -7.022051811218262
    7. ' if' → logprob: -7.147051811218262
    8. 'and' → logprob: -7.522051811218262
    9. '            ' → logprob: -7.647051811218262
    10. '<|end|>' → logprob: -8.022051811218262

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040457461727783084
    2. '            
' → logprob: -9.125404357910156
    3. ' if' → logprob: -9.375404357910156
    4. ' and' → logprob: -10.125404357910156
    5. '<|end|>' → logprob: -10.125404357910156
    6. 'if' → logprob: -10.500404357910156
    7. ',' → logprob: -10.750404357910156
    8. '          ' → logprob: -10.875404357910156
    9. '       ' → logprob: -11.250404357910156
    10. '   ' → logprob: -11.500404357910156

Token 489: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07066558301448822
    2. 'if' (adapté à ' if') → logprob: -3.3206655979156494
    3. ' if' → logprob: -3.4456655979156494
    4. '   ' → logprob: -9.07066535949707
    5. '       ' → logprob: -10.44566535949707
    6. '```' → logprob: -10.69566535949707
    7. '            
' → logprob: -11.32066535949707
    8. 'for' → logprob: -11.94566535949707
    9. ' ' → logprob: -12.07066535949707
    10. '          ' → logprob: -12.07066535949707

Token 490: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012518009170889854
    2. ' is' → logprob: -4.387517929077148
    3. '   ' → logprob: -11.887517929077148
    4. 'l' → logprob: -14.887517929077148
    5. ' ' → logprob: -15.137517929077148
    6. '    ' → logprob: -15.762517929077148
    7. '  ' → logprob: -15.887517929077148
    8. '	is' → logprob: -15.887517929077148
    9. ' lunch' → logprob: -16.51251792907715
    10. '     ' → logprob: -16.51251792907715

Token 491: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.961759259458631e-06
    2. 'in' → logprob: -12.500004768371582
    3. ')' → logprob: -15.625004768371582
    4. 'In' → logprob: -15.750004768371582
    5. ' _' → logprob: -16.3750057220459
    6. ' in' → logprob: -16.3750057220459
    7. ')_' → logprob: -16.6250057220459
    8. '_' → logprob: -17.0000057220459
    9. '_is' → logprob: -17.0000057220459
    10. '_i' → logprob: -17.1250057220459

Token 492: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0067167943343520164
    2. 'range' → logprob: -5.006716728210449
    3. ' range' → logprob: -13.88171672821045
    4. 'Range' → logprob: -15.13171672821045
    5. '	range' → logprob: -16.131717681884766
    6. 'is' → logprob: -16.506717681884766
    7. 'in' → logprob: -17.631717681884766
    8. '_RANGE' → logprob: -18.256717681884766
    9. '_ranges' → logprob: -18.631717681884766
    10. '_' → logprob: -19.006717681884766

Token 493: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -3.054500666621607e-06
    2. ' (' → logprob: -13.87500286102295
    3. 'provide' → logprob: -13.87500286102295
    4. ')' → logprob: -14.62500286102295
    5. '```' → logprob: -15.00000286102295
    6. '(' → logprob: -15.87500286102295
    7. ' provide' → logprob: -17.125003814697266
    8. '(
' → logprob: -17.250003814697266
    9. ',' → logprob: -18.000003814697266
    10. '	pro' → logprob: -18.000003814697266

Token 494: 'vide' (ID: 65239)
  Prédit: 'vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.0008336895843967795
    2. 'ov' → logprob: -7.500833511352539
    3. 'ide' → logprob: -8.250833511352539
    4. 'vided' → logprob: -12.000833511352539
    5. 'wide' → logprob: -12.250833511352539
    6. 'vid' → logprob: -12.625833511352539
    7. 'vice' → logprob: -12.875833511352539
    8. 'provide' → logprob: -13.375833511352539
    9. 'video' → logprob: -15.375833511352539
    10. 'v' → logprob: -15.750833511352539

Token 495: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5762382745742798
    2. 'd' → logprob: -0.8262382745742798
    3. 'time' → logprob: -8.326238632202148
    4. 'ed' → logprob: -10.076238632202148
    5. 'e' → logprob: -11.451238632202148
    6. '   ' → logprob: -14.826238632202148
    7. 'Time' → logprob: -15.076238632202148
    8. '(d' → logprob: -15.076238632202148
    9. 'r' → logprob: -15.201238632202148
    10. 'ime' → logprob: -15.201238632202148

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012832103529945016
    2. ',l' → logprob: -6.876283168792725
    3. '(' → logprob: -8.876283645629883
    4. '(l' → logprob: -9.626283645629883
    5. ' ,' → logprob: -10.751283645629883
    6. ')' → logprob: -12.626283645629883
    7. ',m' → logprob: -12.751283645629883
    8. ',
' → logprob: -13.001283645629883
    9. ',(' → logprob: -13.001283645629883
    10. 'l' → logprob: -13.001283645629883

Token 497: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.9888433093437925e-05
    2. ' lunch' → logprob: -10.375040054321289
    3. 'lun' → logprob: -11.750040054321289
    4. '   ' → logprob: -15.375040054321289
    5. 'Lunch' → logprob: -15.500040054321289
    6. ' lunchtime' → logprob: -16.75004005432129
    7. '```' → logprob: -17.12504005432129
    8. '	l' → logprob: -17.37504005432129
    9. '
' → logprob: -18.25004005432129
    10. ')' → logprob: -18.37504005432129

Token 498: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.696889623621246e-06
    2. 'start' → logprob: -12.87500286102295
    3. '_START' → logprob: -19.625001907348633
    4. '_end' → logprob: -19.875001907348633
    5. 'Start' → logprob: -20.250001907348633
    6. '_stop' → logprob: -20.875001907348633
    7. '_' → logprob: -21.375001907348633
    8. 's' → logprob: -21.500001907348633
    9. '```' → logprob: -21.625001907348633
    10. 'l' → logprob: -21.750001907348633

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002048670779913664
    2. ',l' → logprob: -6.252048492431641
    3. ' ,' → logprob: -9.62704849243164
    4. 'l' → logprob: -10.25204849243164
    5. ',
' → logprob: -11.75204849243164
    6. '   ' → logprob: -12.87704849243164
    7. ' lunch' → logprob: -12.87704849243164
    8. ',line' → logprob: -14.62704849243164
    9. ',

' → logprob: -14.75204849243164
    10. ',d' → logprob: -14.87704849243164

Token 500: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00020830852736253291
    2. ' lunch' → logprob: -8.500207901000977
    3. 'lun' → logprob: -12.500207901000977
    4. 'Lunch' → logprob: -13.875207901000977
    5. '
' → logprob: -16.000207901000977
    6. ' lunchtime' → logprob: -17.625207901000977
    7. '```' → logprob: -18.625207901000977
    8. '	l' → logprob: -18.625207901000977
    9. ' luncheon' → logprob: -18.750207901000977
    10. '   ' → logprob: -19.000207901000977

Token 501: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0181913822889328
    2. 'end' → logprob: -4.018191337585449
    3. 'l' → logprob: -10.14319133758545
    4. 'End' → logprob: -14.39319133758545
    5. 'lun' → logprob: -14.89319133758545
    6. ' lunch' → logprob: -15.26819133758545
    7. 'END' → logprob: -15.64319133758545
    8. '_' → logprob: -15.76819133758545
    9. '```' → logprob: -16.643192291259766
    10. '_l' → logprob: -16.643192291259766

Token 502: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5259413719177246
    2. '):' → logprob: -0.9009413719177246
    3. ')' → logprob: -6.025941371917725
    4. '       ' → logprob: -9.150941848754883
    5. '   ' → logprob: -9.275941848754883
    6. ':' → logprob: -9.525941848754883
    7. '):
' → logprob: -10.150941848754883
    8. '           ' → logprob: -10.275941848754883
    9. '):

' → logprob: -10.775941848754883
    10. ' and' → logprob: -11.025941848754883

Token 503: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014678422594442964
    2. '           ' → logprob: -6.626467704772949
    3. ',' → logprob: -10.12646770477295
    4. '       ' → logprob: -10.25146770477295
    5. '```' → logprob: -11.00146770477295
    6. ' lunch' → logprob: -11.37646770477295
    7. '<|end|>' → logprob: -11.87646770477295
    8. '                
' → logprob: -12.37646770477295
    9. ':' → logprob: -12.50146770477295
    10. '   ' → logprob: -12.87646770477295

Token 504: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5059167146682739
    2. 'l' → logprob: -1.005916714668274
    3. ' lunch' → logprob: -3.5059165954589844
    4. '                   ' → logprob: -7.380916595458984
    5. '           ' → logprob: -8.130916595458984
    6. '   ' → logprob: -8.505916595458984
    7. ' l' → logprob: -9.880916595458984
    8. 'lun' → logprob: -10.255916595458984
    9. 'if' → logprob: -10.380916595458984
    10. '       ' → logprob: -10.630916595458984

Token 505: ' It's' (ID: 7744)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11100581288337708
    2. '               ' → logprob: -2.7360057830810547
    3. ' lunch' → logprob: -3.2360057830810547
    4. 'if' → logprob: -7.986005783081055
    5. '           ' → logprob: -8.361005783081055
    6. '                   ' → logprob: -9.111005783081055
    7. 'lun' → logprob: -9.486005783081055
    8. ' l' → logprob: -9.736005783081055
    9. '   ' → logprob: -10.236005783081055
    10. ' if' → logprob: -10.986005783081055

Token 506: ' lunch' (ID: 17418)
  Prédit: ' lunch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.028165806084871292
    2. '               ' → logprob: -3.778165817260742
    3. '                   ' → logprob: -6.153165817260742
    4. ' lunchtime' → logprob: -6.778165817260742
    5. 'l' → logprob: -7.028165817260742
    6. ' if' → logprob: -8.403165817260742
    7. '                ' → logprob: -9.278165817260742
    8. '           ' → logprob: -9.528165817260742
    9. '   ' → logprob: -9.653165817260742
    10. ' total' → logprob: -10.403165817260742

Token 507: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1443461924791336
    2. '_total' → logprob: -2.019346237182617
    3. '                   ' → logprob: -7.769346237182617
    4. '_ok' → logprob: -7.769346237182617
    5. '                
' → logprob: -7.894346237182617
    6. '           ' → logprob: -8.769346237182617
    7. ' _' → logprob: -9.394346237182617
    8. ',' → logprob: -9.519346237182617
    9. '                ' → logprob: -11.019346237182617
    10. '_time' → logprob: -11.019346237182617

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3537355959415436
    2. '_total' → logprob: -1.2287355661392212
    3. '_ok' → logprob: -5.603735446929932
    4. ' _' → logprob: -7.978735446929932
    5. '                
' → logprob: -8.22873592376709
    6. '                   ' → logprob: -8.72873592376709
    7. '		       ' → logprob: -8.72873592376709
    8. '_time' → logprob: -9.10373592376709
    9. '_' → logprob: -9.47873592376709
    10. '           ' → logprob: -9.97873592376709

Token 509: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23316630721092224
    2. '               ' → logprob: -1.6081663370132446
    3. ' lunch' → logprob: -4.983166217803955
    4. '           ' → logprob: -7.358166217803955
    5. '   ' → logprob: -10.108166694641113
    6. 'if' → logprob: -10.233166694641113
    7. '                   ' → logprob: -10.233166694641113
    8. 'total' → logprob: -10.358166694641113
    9. '       ' → logprob: -10.483166694641113
    10. ' l' → logprob: -10.858166694641113

Token 510: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.62500286102295
    3. '_ok' → logprob: -13.62500286102295
    4. '##_' → logprob: -16.500003814697266
    5. '_time' → logprob: -16.625003814697266
    6. 'total' → logprob: -16.750003814697266
    7. ' _' → logprob: -16.875003814697266
    8. ')_' → logprob: -17.125003814697266
    9. '_tot' → logprob: -17.500003814697266
    10. '_possible' → logprob: -17.500003814697266

Token 511: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04858975484967232
    2. '+=' → logprob: -3.0485897064208984
    3. '=' → logprob: -13.548589706420898
    4. ' =' → logprob: -15.173589706420898
    5. '```' → logprob: -15.673589706420898
    6. ']+=' → logprob: -15.673589706420898
    7. ')' → logprob: -15.798589706420898
    8. '+' → logprob: -16.4235897064209
    9. '   ' → logprob: -16.4235897064209
    10. '               ' → logprob: -17.4235897064209

Token 512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020509003661572933
    2. ' ' → logprob: -8.500205039978027
    3. 'provided' → logprob: -13.625205039978027
    4. '   ' → logprob: -15.937705039978027
    5. ' provided' → logprob: -17.000205993652344
    6. 'total' → logprob: -17.500205993652344
    7. 'Provided' → logprob: -17.937705993652344
    8. 'int' → logprob: -18.000205993652344
    9. '100' → logprob: -18.375205993652344
    10. 'provide' → logprob: -18.500205993652344

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. 'provided' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.250003814697266
    4. ' provided' → logprob: -18.937503814697266
    5. 'provid' → logprob: -18.937503814697266
    6. 'provide' → logprob: -19.187503814697266
    7. 'Provided' → logprob: -19.312503814697266
    8. '100' → logprob: -19.437503814697266
    9. 'int' → logprob: -19.562503814697266
    10. '   ' → logprob: -19.625003814697266

Token 514: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004782899748533964
    2. '
' → logprob: -5.754782676696777
    3. '           ' → logprob: -7.379782676696777
    4. '<|end|>' → logprob: -7.754782676696777
    5. '                
' → logprob: -8.754782676696777
    6. ' if' → logprob: -9.004782676696777
    7. 'if' → logprob: -9.754782676696777
    8. '            
' → logprob: -10.379782676696777
    9. '       ' → logprob: -10.504782676696777
    10. '                   ' → logprob: -10.504782676696777

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008963046595454216
    2. '
' → logprob: -5.008963108062744
    3. ' if' → logprob: -6.633963108062744
    4. '<|end|>' → logprob: -8.133962631225586
    5. '                
' → logprob: -8.508962631225586
    6. 'if' → logprob: -9.008962631225586
    7. '           ' → logprob: -9.008962631225586
    8. ' 
' → logprob: -10.008962631225586
    9. '                   ' → logprob: -10.133962631225586
    10. '                ' → logprob: -10.633962631225586

Token 516: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22678641974925995
    2. ' if' → logprob: -1.7267863750457764
    3. '               ' → logprob: -3.7267863750457764
    4. '           ' → logprob: -6.9767866134643555
    5. 'l' → logprob: -11.101786613464355
    6. '                   ' → logprob: -11.226786613464355
    7. '   ' → logprob: -11.601786613464355
    8. 'If' → logprob: -12.851786613464355
    9. '       ' → logprob: -13.101786613464355
    10. ' lunch' → logprob: -13.351786613464355

Token 517: ' provided' (ID: 5181)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'provided' → logprob: -0.0003469057264737785
    2. ' provided' → logprob: -8.000347137451172
    3. 'provide' → logprob: -12.250347137451172
    4. 'pro' → logprob: -13.000347137451172
    5. 'provid' → logprob: -13.375347137451172
    6. '   ' → logprob: -14.125347137451172
    7. 'proved' → logprob: -14.875347137451172
    8. ' ' → logprob: -15.125347137451172
    9. 'tr' → logprob: -15.250347137451172
    10. 'requested' → logprob: -15.375347137451172

Token 518: '_mm' (ID: 83510)
  Prédit: '_mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mm' → logprob: -3.786196975852363e-05
    2. 'mm' → logprob: -10.250038146972656
    3. '_' → logprob: -13.500038146972656
    4. '_pm' → logprob: -14.500038146972656
    5. 'Mm' → logprob: -16.375038146972656
    6. '_MM' → logprob: -16.500038146972656
    7. 'MM' → logprob: -17.000038146972656
    8. '==' → logprob: -17.125038146972656
    9. '_m' → logprob: -17.125038146972656
    10. '(mm' → logprob: -17.750038146972656

Token 519: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5450373291969299
    2. ' >=' → logprob: -1.4200372695922852
    3. '==' → logprob: -2.045037269592285
    4. '<=' → logprob: -4.045037269592285
    5. ' ==' → logprob: -4.045037269592285
    6. ' <=' → logprob: -4.795037269592285
    7. '>' → logprob: -5.420037269592285
    8. ' >' → logprob: -7.420037269592285
    9. '   ' → logprob: -8.670037269592285
    10. ')' → logprob: -9.295037269592285

Token 520: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -1.1314735412597656
    2. '30' → logprob: -2.0064735412597656
    3. '5' → logprob: -2.2564735412597656
    4. '120' → logprob: -2.6314735412597656
    5. '10' → logprob: -2.7564735412597656
    6. '60' → logprob: -3.1314735412597656
    7. '150' → logprob: -3.7564735412597656
    8. '20' → logprob: -3.7564735412597656
    9. '100' → logprob: -3.8814735412597656
    10. '300' → logprob: -4.006473541259766

Token 521: '8' (ID: 23)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.7011253833770752
    2. '30' → logprob: -2.076125383377075
    3. '5' → logprob: -2.326125383377075
    4. '10' → logprob: -3.326125383377075
    5. '60' → logprob: -3.326125383377075
    6. 'truncate' → logprob: -3.701125383377075
    7. '120' → logprob: -3.826125383377075
    8. 'l' → logprob: -4.326125144958496
    9. '150' → logprob: -4.326125144958496
    10. '45' → logprob: -4.451125144958496

Token 522: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31553345918655396
    2. ':' → logprob: -1.3155333995819092
    3. '                   ' → logprob: -6.440533638000488
    4. '               ' → logprob: -7.565533638000488
    5. '           ' → logprob: -9.815533638000488
    6. '):
' → logprob: -10.440533638000488
    7. ' and' → logprob: -11.065533638000488
    8. ':
' → logprob: -11.190533638000488
    9. ' :
' → logprob: -11.940533638000488
    10. ':

' → logprob: -12.190533638000488

Token 523: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033530937507748604
    2. ' lunch' → logprob: -5.753353118896484
    3. '               ' → logprob: -9.503353118896484
    4. '                       ' → logprob: -10.128353118896484
    5. '                           ' → logprob: -10.878353118896484
    6. ' lunchtime' → logprob: -11.253353118896484
    7. '                  ' → logprob: -12.003353118896484
    8. 'l' → logprob: -12.128353118896484
    9. '           ' → logprob: -12.128353118896484
    10. '   ' → logprob: -12.878353118896484

Token 524: ' lunch' (ID: 17418)
  Prédit: ' lunch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.16181044280529022
    2. '                       ' → logprob: -1.9118103981018066
    3. 'l' → logprob: -7.161810398101807
    4. '                   ' → logprob: -7.661810398101807
    5. ' lunchtime' → logprob: -9.161810874938965
    6. ' lunches' → logprob: -9.661810874938965
    7. '                           ' → logprob: -9.911810874938965
    8. '	l' → logprob: -10.286810874938965
    9. '                               ' → logprob: -11.161810874938965
    10. ' l' → logprob: -11.286810874938965

Token 525: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: 0.0
    2. 'ok' → logprob: -17.5
    3. '_OK' → logprob: -18.875
    4. '_yes' → logprob: -20.0
    5. '_oc' → logprob: -20.625
    6. '_' → logprob: -20.75
    7. 'Ok' → logprob: -20.875
    8. '_opt' → logprob: -20.875
    9. '_ack' → logprob: -21.375
    10. ' _' → logprob: -21.75

Token 526: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931540966033936
    2. '+=' → logprob: -0.6931540966033936
    3. ']+=' → logprob: -12.818154335021973
    4. '=' → logprob: -13.193154335021973
    5. '+' → logprob: -13.568154335021973
    6. '   ' → logprob: -14.818154335021973
    7. '    ' → logprob: -15.068154335021973
    8. ' =' → logprob: -15.568154335021973
    9. '```' → logprob: -16.193153381347656
    10. '_' → logprob: -16.693153381347656

Token 527: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. 'provided' → logprob: -15.625553131103516
    4. 'l' → logprob: -17.875553131103516
    5. 'ok' → logprob: -17.938053131103516
    6. '10' → logprob: -18.375553131103516
    7. '   ' → logprob: -18.438053131103516
    8. ' provided' → logprob: -18.688053131103516
    9. '2' → logprob: -19.063053131103516
    10. '0' → logprob: -19.063053131103516

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '１' → logprob: -20.500001907348633
    4. 'l' → logprob: -21.000001907348633
    5. 'provided' → logprob: -21.250001907348633
    6. '+' → logprob: -21.312501907348633
    7. '```' → logprob: -21.875001907348633
    8. '.' → logprob: -21.937501907348633
    9. '۱' → logprob: -22.000001907348633
    10. '   ' → logprob: -22.125001907348633

Token 529: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3046469986438751
    2. '
' → logprob: -1.5546469688415527
    3. 'elif' → logprob: -3.6796469688415527
    4. '<|end|>' → logprob: -4.179646968841553
    5. '               ' → logprob: -5.679646968841553
    6. '       ' → logprob: -6.179646968841553
    7. '\n' → logprob: -6.304646968841553
    8. '            
' → logprob: -6.929646968841553
    9. ' elif' → logprob: -7.554646968841553
    10. '<|end|>' → logprob: -7.679646968841553

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01571500301361084
    2. 'elif' → logprob: -4.6407151222229
    3. '<|end|>' → logprob: -6.2657151222229
    4. '       ' → logprob: -6.3907151222229
    5. '               ' → logprob: -7.0157151222229
    6. '
' → logprob: -7.5157151222229
    7. ' elif' → logprob: -8.390714645385742
    8. '```' → logprob: -8.515714645385742
    9. '<|end|>' → logprob: -9.140714645385742
    10. 'else' → logprob: -9.640714645385742

Token 531: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010878028348088264
    2. 'elif' (adapté à ' elif') → logprob: -4.635878086090088
    3. ' elif' → logprob: -7.135878086090088
    4. '       ' → logprob: -8.26087760925293
    5. '               ' → logprob: -10.63587760925293
    6. '```' → logprob: -10.63587760925293
    7. 'else' → logprob: -11.26087760925293
    8. ' else' → logprob: -13.63587760925293
    9. '          ' → logprob: -13.76087760925293
    10. '		' → logprob: -14.01087760925293

Token 532: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0028073713183403015
    2. ' is' → logprob: -5.877807140350342
    3. 'd' → logprob: -13.1278076171875
    4. '   ' → logprob: -15.2528076171875
    5. ' ' → logprob: -16.1278076171875
    6. '	is' → logprob: -16.8778076171875
    7. '(is' → logprob: -17.3778076171875
    8. '#' → logprob: -17.5028076171875
    9. ' ' → logprob: -17.5028076171875
    10. '```' → logprob: -17.5028076171875

Token 533: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.282920129597187e-05
    2. 'In' → logprob: -11.875012397766113
    3. 'in' → logprob: -12.250012397766113
    4. 'd' → logprob: -15.250012397766113
    5. 'n' → logprob: -15.250012397766113
    6. '-in' → logprob: -16.00001335144043
    7. 'range' → logprob: -16.75001335144043
    8. ' in' → logprob: -16.87501335144043
    9. 's' → logprob: -17.12501335144043
    10. '_IN' → logprob: -17.50001335144043

Token 534: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.014206405729055405
    2. 'range' → logprob: -4.264206409454346
    3. 'is' → logprob: -10.139205932617188
    4. 'Range' → logprob: -13.514205932617188
    5. 'd' → logprob: -14.014205932617188
    6. 'in' → logprob: -14.514205932617188
    7. ' range' → logprob: -16.264205932617188
    8. '_ranges' → logprob: -16.389205932617188
    9. '_RANGE' → logprob: -16.514205932617188
    10. 'elif' → logprob: -16.639205932617188

Token 535: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -2.15310683415737e-05
    2. '(d' → logprob: -10.875021934509277
    3. 'd' → logprob: -13.125021934509277
    4. ' (' → logprob: -15.625021934509277
    5. '(' → logprob: -16.00002098083496
    6. '```' → logprob: -16.50002098083496
    7. 'provide' → logprob: -16.75002098083496
    8. '   ' → logprob: -17.37502098083496
    9. '	pro' → logprob: -18.62502098083496
    10. '     ' → logprob: -18.87502098083496

Token 536: 'vide' (ID: 65239)
  Prédit: 'ov'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.053763143718242645
    2. 'vide' → logprob: -3.3037631511688232
    3. 'ide' → logprob: -5.053762912750244
    4. 'rov' → logprob: -5.053762912750244
    5. 'provide' → logprob: -7.053762912750244
    6. 'time' → logprob: -7.303762912750244
    7. 'range' → logprob: -8.178763389587402
    8. 'rove' → logprob: -8.303763389587402
    9. 'ovid' → logprob: -8.678763389587402
    10. 'ow' → logprob: -9.553763389587402

Token 537: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00349530391395092
    2. 'time' → logprob: -5.878495216369629
    3. 'd' → logprob: -7.378495216369629
    4. 'e' → logprob: -10.753495216369629
    5. 'ime' → logprob: -11.128495216369629
    6. 'Time' → logprob: -11.878495216369629
    7. '_d' → logprob: -12.003495216369629
    8. 'ed' → logprob: -12.378495216369629
    9. 'provide' → logprob: -13.503495216369629
    10. 'etime' → logprob: -14.003495216369629

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010139751975657418
    2. '(' → logprob: -10.500101089477539
    3. ' ,' → logprob: -10.875101089477539
    4. '(d' → logprob: -11.125101089477539
    5. '(mid' → logprob: -11.125101089477539
    6. ',d' → logprob: -11.500101089477539
    7. 'd' → logprob: -11.750101089477539
    8. 's' → logprob: -13.250101089477539
    9. '(m' → logprob: -13.750101089477539
    10. 'mid' → logprob: -13.875101089477539

Token 539: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008643174543976784
    2. ' dinner' → logprob: -4.75864315032959
    3. 'Dinner' → logprob: -10.50864315032959
    4. '(d' → logprob: -14.63364315032959
    5. 'mid' → logprob: -15.25864315032959
    6. '	d' → logprob: -16.258644104003906
    7. 's' → logprob: -16.633644104003906
    8. '```' → logprob: -16.758644104003906
    9. 'l' → logprob: -16.883644104003906
    10. '
' → logprob: -16.883644104003906

Token 540: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -6.988221684878226e-06
    2. 'start' → logprob: -11.875006675720215
    3. '_end' → logprob: -17.37500762939453
    4. '_START' → logprob: -18.25000762939453
    5. 'd' → logprob: -19.50000762939453
    6. 's' → logprob: -19.75000762939453
    7. 'Start' → logprob: -20.00000762939453
    8. ' _' → logprob: -20.87500762939453
    9. '```' → logprob: -21.37500762939453
    10. '_d' → logprob: -21.50000762939453

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006515554850921035
    2. ',d' → logprob: -7.6256513595581055
    3. ' ,' → logprob: -8.875651359558105
    4. '           ' → logprob: -12.000651359558105
    5. 'd' → logprob: -12.125651359558105
    6. '               ' → logprob: -13.125651359558105
    7. '   ' → logprob: -13.250651359558105
    8. ')' → logprob: -13.500651359558105
    9. '```' → logprob: -13.750651359558105
    10. ',
' → logprob: -14.000651359558105

Token 542: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006278486107476056
    2. ' dinner' → logprob: -7.3756279945373535
    3. 'Dinner' → logprob: -15.125627517700195
    4. ' d' → logprob: -15.375627517700195
    5. '   ' → logprob: -15.875627517700195
    6. '           ' → logprob: -16.250627517700195
    7. ' ' → logprob: -16.625627517700195
    8. '	d' → logprob: -16.625627517700195
    9. '
' → logprob: -16.625627517700195
    10. '       ' → logprob: -17.000627517700195

Token 543: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0031742677092552185
    2. 'end' → logprob: -5.878174304962158
    3. ',' → logprob: -8.378173828125
    4. 'd' → logprob: -9.628173828125
    5. '20' → logprob: -10.003173828125
    6. '_start' → logprob: -11.503173828125
    7. '18' → logprob: -12.378173828125
    8. ',end' → logprob: -12.878173828125
    9. 'End' → logprob: -13.128173828125
    10. '0' → logprob: -13.503173828125

Token 544: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20235750079154968
    2. '):' → logprob: -1.702357530593872
    3. '       ' → logprob: -7.702357292175293
    4. '               ' → logprob: -8.452357292175293
    5. '           ' → logprob: -8.452357292175293
    6. ':' → logprob: -10.952357292175293
    7. ')' → logprob: -11.327357292175293
    8. '):
' → logprob: -11.327357292175293
    9. '   ' → logprob: -11.577357292175293
    10. '):

' → logprob: -12.202357292175293

Token 545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016098834748845547
    2. 'd' → logprob: -9.375161170959473
    3. '```' → logprob: -10.375161170959473
    4. '           ' → logprob: -10.500161170959473
    5. '       ' → logprob: -11.250161170959473
    6. '                   ' → logprob: -14.000161170959473
    7. '``' → logprob: -14.250161170959473
    8. '              ' → logprob: -14.500161170959473
    9. '   ' → logprob: -14.625161170959473
    10. ' ' → logprob: -15.250161170959473

Token 546: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000888471957296133
    2. 'd' → logprob: -7.500888347625732
    3. '```' → logprob: -8.50088882446289
    4. '       ' → logprob: -9.75088882446289
    5. '           ' → logprob: -11.00088882446289
    6. '   ' → logprob: -11.12588882446289
    7. ' d' → logprob: -11.37588882446289
    8. '                   ' → logprob: -11.87588882446289
    9. '``' → logprob: -12.50088882446289
    10. ' dinner' → logprob: -12.50088882446289

Token 547: ' Dinner' (ID: 62088)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06948214024305344
    2. ' dinner' → logprob: -2.8194820880889893
    3. '               ' → logprob: -5.069482326507568
    4. '           ' → logprob: -6.944482326507568
    5. 'Dinner' → logprob: -9.31948184967041
    6. '#' → logprob: -10.44448184967041
    7. '                   ' → logprob: -10.81948184967041
    8. ' d' → logprob: -10.94448184967041
    9. '       ' → logprob: -11.19448184967041
    10. 'mid' → logprob: -11.31948184967041

Token 548: ' time' (ID: 1058)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018546124920248985
    2. '_total' → logprob: -5.268546104431152
    3. '                   ' → logprob: -5.643546104431152
    4. 'd' → logprob: -5.643546104431152
    5. '           ' → logprob: -5.768546104431152
    6. '
' → logprob: -6.518546104431152
    7. 'total' → logprob: -7.143546104431152
    8. '```' → logprob: -8.518546104431152
    9. '   ' → logprob: -9.393546104431152
    10. '       ' → logprob: -9.393546104431152

Token 549: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004606945440173149
    2. 'd' → logprob: -5.5046067237854
    3. '                   ' → logprob: -8.379607200622559
    4. '
' → logprob: -9.129607200622559
    5. '           ' → logprob: -9.254607200622559
    6. '```' → logprob: -10.504607200622559
    7. '       ' → logprob: -10.754607200622559
    8. ',d' → logprob: -11.254607200622559
    9. ' dinner' → logprob: -11.254607200622559
    10. 'Dinner' → logprob: -12.129607200622559

Token 550: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003416412975639105
    2. '           ' → logprob: -6.378416538238525
    3. 'd' → logprob: -7.003416538238525
    4. '       ' → logprob: -7.378416538238525
    5. '                   ' → logprob: -10.003416061401367
    6. '
' → logprob: -10.128416061401367
    7. '```' → logprob: -10.128416061401367
    8. '   ' → logprob: -11.503416061401367
    9. ' dinner' → logprob: -11.628416061401367
    10. ',d' → logprob: -11.628416061401367

Token 551: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10890360921621323
    2. '               ' → logprob: -2.358903646469116
    3. ' dinner' → logprob: -4.983903408050537
    4. '           ' → logprob: -6.858903408050537
    5. ' d' → logprob: -7.358903408050537
    6. '                   ' → logprob: -10.608903884887695
    7. '       ' → logprob: -11.108903884887695
    8. '	d' → logprob: -11.358903884887695
    9. '```' → logprob: -11.358903884887695
    10. '   ' → logprob: -11.483903884887695

Token 552: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -14.500000953674316
    3. '_' → logprob: -14.750000953674316
    4. '```' → logprob: -16.000001907348633
    5. '_tot' → logprob: -16.750001907348633
    6. 'total' → logprob: -16.750001907348633
    7. ')_' → logprob: -17.375001907348633
    8. '               ' → logprob: -18.125001907348633
    9. '_possible' → logprob: -18.500001907348633
    10. '           ' → logprob: -18.625001907348633

Token 553: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10022036731243134
    2. '+=' → logprob: -2.3502204418182373
    3. '   ' → logprob: -12.725220680236816
    4. '           ' → logprob: -12.850220680236816
    5. '       ' → logprob: -12.975220680236816
    6. '    ' → logprob: -13.475220680236816
    7. '        ' → logprob: -13.600220680236816
    8. '            ' → logprob: -13.725220680236816
    9. ']+=' → logprob: -14.725220680236816
    10. '               ' → logprob: -14.850220680236816

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -15.505928993225098
    4. '```' → logprob: -16.130929946899414
    5. '           ' → logprob: -17.505929946899414
    6. '       ' → logprob: -18.880929946899414
    7. '                   ' → logprob: -19.505929946899414
    8. '<|end|>' → logprob: -19.630929946899414
    9. '１' → logprob: -19.880929946899414
    10. '+' → logprob: -20.005929946899414

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -21.250001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '１' → logprob: -22.625001907348633
    6. '-' → logprob: -23.000001907348633
    7. '<|end|>' → logprob: -24.000001907348633
    8. '۱' → logprob: -24.125001907348633
    9. '           ' → logprob: -24.625001907348633
    10. '       ' → logprob: -25.125001907348633

Token 556: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005351595464162529
    2. '                   ' → logprob: -8.250535011291504
    3. '
' → logprob: -9.125535011291504
    4. '           ' → logprob: -9.750535011291504
    5. '<|end|>' → logprob: -9.750535011291504
    6. '       ' → logprob: -11.250535011291504
    7. '```' → logprob: -12.250535011291504
    8. ' if' → logprob: -12.250535011291504
    9. '	           ' → logprob: -12.375535011291504
    10. 'if' → logprob: -12.625535011291504

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04210558906197548
    2. '                   ' → logprob: -3.2921056747436523
    3. '           ' → logprob: -5.667105674743652
    4. '       ' → logprob: -8.042105674743652
    5. '   ' → logprob: -10.042105674743652
    6. ' if' → logprob: -10.167105674743652
    7. '
' → logprob: -10.292105674743652
    8. '                ' → logprob: -10.292105674743652
    9. 'if' → logprob: -10.542105674743652
    10. ' ' → logprob: -10.792105674743652

Token 558: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16162699460983276
    2. '               ' → logprob: -1.9116270542144775
    3. ' if' → logprob: -7.161626815795898
    4. '           ' → logprob: -7.536626815795898
    5. '```' → logprob: -9.536626815795898
    6. '                   ' → logprob: -10.911626815795898
    7. '   ' → logprob: -13.536626815795898
    8. '       ' → logprob: -14.536626815795898
    9. '``' → logprob: -15.536626815795898
    10. '              ' → logprob: -16.0366268157959

Token 559: ' provided' (ID: 5181)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'provided' → logprob: -0.0017123052384704351
    2. ' provided' → logprob: -6.376712322235107
    3. 'int' → logprob: -11.75171184539795
    4. '               ' → logprob: -14.00171184539795
    5. '                   ' → logprob: -14.50171184539795
    6. '           ' → logprob: -15.00171184539795
    7. ' int' → logprob: -15.50171184539795
    8. 'pro' → logprob: -15.87671184539795
    9. '   ' → logprob: -15.87671184539795
    10. 'provid' → logprob: -16.751712799072266

Token 560: '_mm' (ID: 83510)
  Prédit: '_mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mm' → logprob: -2.975612187583465e-05
    2. 'mm' → logprob: -10.500029563903809
    3. '_time' → logprob: -14.375029563903809
    4. 'provided' → logprob: -15.000029563903809
    5. '_' → logprob: -15.500029563903809
    6. '_pm' → logprob: -15.875029563903809
    7. '```' → logprob: -15.875029563903809
    8. '_m' → logprob: -15.875029563903809
    9. '_MM' → logprob: -16.000030517578125
    10. '(mm' → logprob: -16.375030517578125

Token 561: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005237906239926815
    2. '<=' → logprob: -5.255238056182861
    3. ' ' → logprob: -13.255237579345703
    4. ')<=' → logprob: -13.755237579345703
    5. '```' → logprob: -14.505237579345703
    6. ' ≤' → logprob: -15.505237579345703
    7. '<|end|>' → logprob: -15.755237579345703
    8. ' <=",' → logprob: -16.005237579345703
    9. ']<=' → logprob: -16.630237579345703
    10. ')' → logprob: -16.630237579345703

Token 562: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.9267697930335999
    2. '10' → logprob: -1.301769733428955
    3. '15' → logprob: -2.301769733428955
    4. '5' → logprob: -2.676769733428955
    5. '12' → logprob: -3.301769733428955
    6. '9' → logprob: -3.551769733428955
    7. '7' → logprob: -3.551769733428955
    8. '6' → logprob: -3.926769733428955
    9. '11' → logprob: -4.926769733428955
    10. '20' → logprob: -4.926769733428955

Token 563: '8' (ID: 23)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2631206512451172
    2. '8' → logprob: -1.3881206512451172
    3. '15' → logprob: -2.013120651245117
    4. '5' → logprob: -2.638120651245117
    5. '9' → logprob: -2.888120651245117
    6. '7' → logprob: -2.888120651245117
    7. '12' → logprob: -3.138120651245117
    8. '6' → logprob: -3.763120651245117
    9. '11' → logprob: -4.388120651245117
    10. '13' → logprob: -4.388120651245117

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08428112417459488
    2. '):' → logprob: -3.8342812061309814
    3. ':
' → logprob: -3.8342812061309814
    4. '):
' → logprob: -4.084280967712402
    5. '                   ' → logprob: -4.584280967712402
    6. '<|end|>' → logprob: -4.959280967712402
    7. '               ' → logprob: -6.584280967712402
    8. ')' → logprob: -6.584280967712402
    9. ',' → logprob: -8.084280967712402
    10. '<|end|>' → logprob: -8.709280967712402

Token 565: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007081787567585707
    2. 'd' → logprob: -5.382081985473633
    3. '               ' → logprob: -6.632081985473633
    4. ' d' → logprob: -7.382081985473633
    5. '   ' → logprob: -8.382081985473633
    6. '           ' → logprob: -9.882081985473633
    7. ' dinner' → logprob: -10.132081985473633
    8. ',d' → logprob: -10.382081985473633
    9. ' ' → logprob: -11.007081985473633
    10. '8' → logprob: -11.007081985473633

Token 566: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1271359771490097
    2. ' dinner' → logprob: -2.127135992050171
    3. '                   ' → logprob: -8.87713623046875
    4. '               ' → logprob: -10.50213623046875
    5. 'Dinner' → logprob: -11.00213623046875
    6. ' d' → logprob: -11.87713623046875
    7. ' dîner' → logprob: -12.37713623046875
    8. ' diner' → logprob: -13.25213623046875
    9. '           ' → logprob: -13.37713623046875
    10. '                       ' → logprob: -13.75213623046875

Token 567: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.02664221078157425
    2. '+=' → logprob: -3.901642322540283
    3. ' +=' → logprob: -5.526642322540283
    4. 'ok' → logprob: -6.901642322540283
    5. '_d' → logprob: -7.526642322540283
    6. '                   ' → logprob: -8.651641845703125
    7. '+' → logprob: -8.651641845703125
    8. ' _' → logprob: -9.526641845703125
    9. 'd' → logprob: -10.526641845703125
    10. '++' → logprob: -11.026641845703125

Token 568: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1270868480205536
    2. '+=' → logprob: -2.127086877822876
    3. '                   ' → logprob: -9.502086639404297
    4. '               ' → logprob: -10.127086639404297
    5. '+' → logprob: -11.127086639404297
    6. ' +' → logprob: -12.252086639404297
    7. '           ' → logprob: -12.252086639404297
    8. '=' → logprob: -13.002086639404297
    9. ' ' → logprob: -13.002086639404297
    10. '                    ' → logprob: -13.127086639404297

Token 569: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '8' → logprob: -14.628178596496582
    4. '               ' → logprob: -16.628177642822266
    5. '   ' → logprob: -17.128177642822266
    6. '```' → logprob: -17.378177642822266
    7. '           ' → logprob: -17.878177642822266
    8. ' ' → logprob: -17.878177642822266
    9. '                   ' → logprob: -18.378177642822266
    10. '       ' → logprob: -19.628177642822266

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -20.500001907348633
    5. '１' → logprob: -21.187501907348633
    6. '8' → logprob: -21.437501907348633
    7. '0' → logprob: -21.500001907348633
    8. '2' → logprob: -22.187501907348633
    9. '3' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.687501907348633

Token 571: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0087695037946105
    2. 'elif' → logprob: -4.758769512176514
    3. ' elif' → logprob: -9.508769035339355
    4. 'else' → logprob: -10.258769035339355
    5. '```' → logprob: -11.133769035339355
    6. '   ' → logprob: -11.758769035339355
    7. '       ' → logprob: -12.008769035339355
    8. '	elif' → logprob: -12.133769035339355
    9. '		' → logprob: -12.258769035339355
    10. '<|end|>' → logprob: -13.258769035339355

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023336668964475393
    2. 'elif' → logprob: -6.127333641052246
    3. '   ' → logprob: -9.627333641052246
    4. ' elif' → logprob: -10.377333641052246
    5. '	elif' → logprob: -11.002333641052246
    6. '```' → logprob: -11.627333641052246
    7. '       ' → logprob: -11.752333641052246
    8. '	       ' → logprob: -11.752333641052246
    9. '		' → logprob: -12.502333641052246
    10. 'else' → logprob: -12.877333641052246

Token 573: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.782416045665741
    2. 'else' → logprob: -1.2824161052703857
    3. '           ' → logprob: -1.4074161052703857
    4. ' elif' → logprob: -4.282415866851807
    5. ' else' → logprob: -5.032415866851807
    6. '       ' → logprob: -8.907416343688965
    7. '```' → logprob: -10.157416343688965
    8. '	elif' → logprob: -10.532416343688965
    9. '   ' → logprob: -10.907416343688965
    10. '	else' → logprob: -13.407416343688965

Token 574: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004621422383934259
    2. ' is' → logprob: -5.379621505737305
    3. '(is' → logprob: -14.879621505737305
    4. ' ' → logprob: -15.004621505737305
    5. '   ' → logprob: -15.504621505737305
    6. 'mid' → logprob: -15.754621505737305
    7. '	is' → logprob: -16.504621505737305
    8. '  ' → logprob: -17.129621505737305
    9. '0' → logprob: -17.254621505737305
    10. '"is' → logprob: -17.754621505737305

Token 575: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.4855663721391466e-05
    2. 'in' → logprob: -11.250015258789062
    3. 'In' → logprob: -13.875015258789062
    4. 'n' → logprob: -15.000015258789062
    5. 'range' → logprob: -16.500015258789062
    6. '_range' → logprob: -16.750015258789062
    7. '[' → logprob: -17.125015258789062
    8. '_at' → logprob: -17.250015258789062
    9. '\' → logprob: -17.250015258789062
    10. ' in' → logprob: -17.500015258789062

Token 576: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.0789119303226471
    2. 'range' → logprob: -2.5789120197296143
    3. 'Range' → logprob: -11.453911781311035
    4. 'is' → logprob: -11.703911781311035
    5. 'in' → logprob: -14.578911781311035
    6. 'tr' → logprob: -14.953911781311035
    7. ' range' → logprob: -15.203911781311035
    8. 'r' → logprob: -15.328911781311035
    9. 'def' → logprob: -15.328911781311035
    10. '_ranges' → logprob: -15.453911781311035

Token 577: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. 'provide' → logprob: -20.125
    4. ' (' → logprob: -20.25
    5. '(provider' → logprob: -20.875
    6. '	pro' → logprob: -20.875
    7. '```' → logprob: -21.5
    8. '(
' → logprob: -21.625
    9. '(pre' → logprob: -21.625
    10. '(pr' → logprob: -21.75

Token 578: 'vide' (ID: 65239)
  Prédit: 'ov'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.2803012728691101
    2. 'ide' → logprob: -2.030301332473755
    3. 'rov' → logprob: -3.280301332473755
    4. 'ro' → logprob: -3.780301332473755
    5. 'rove' → logprob: -4.155301094055176
    6. 'ove' → logprob: -4.530301094055176
    7. 'provide' → logprob: -4.530301094055176
    8. 'ovid' → logprob: -5.155301094055176
    9. 'vide' → logprob: -5.280301094055176
    10. 'o' → logprob: -6.280301094055176

Token 579: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.03235864266753197
    2. '(pro' → logprob: -3.7823586463928223
    3. 'time' → logprob: -5.532358646392822
    4. 'provide' → logprob: -5.532358646392822
    5. '_pro' → logprob: -7.282358646392822
    6. 'prove' → logprob: -8.657358169555664
    7. 'pro' → logprob: -9.657358169555664
    8. 'ed' → logprob: -9.657358169555664
    9. 'e' → logprob: -9.907358169555664
    10. 'Time' → logprob: -10.282358169555664

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02988702431321144
    2. '(mid' → logprob: -3.5298869609832764
    3. '(' → logprob: -9.154887199401855
    4. 'mid' → logprob: -10.779887199401855
    5. '[mid' → logprob: -12.404887199401855
    6. ' ,' → logprob: -13.404887199401855
    7. ')' → logprob: -13.529887199401855
    8. ',
' → logprob: -13.779887199401855
    9. ' midnight' → logprob: -14.654887199401855
    10. ',(' → logprob: -15.154887199401855

Token 581: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -3.128163257315464e-07
    2. ' midnight' → logprob: -16.5
    3. '(mid' → logprob: -16.5
    4. '[mid' → logprob: -18.375
    5. ' mid' → logprob: -19.875
    6. '_mid' → logprob: -20.75
    7. 'night' → logprob: -21.5
    8. '.mid' → logprob: -22.0
    9. '-mid' → logprob: -22.375
    10. 'midt' → logprob: -22.375

Token 582: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.000433291686931625
    2. 'start' → logprob: -7.750433444976807
    3. ',' → logprob: -13.375432968139648
    4. '_end' → logprob: -14.250432968139648
    5. 'Start' → logprob: -16.00043296813965
    6. '_START' → logprob: -16.62543296813965
    7. '```' → logprob: -17.50043296813965
    8. '[start' → logprob: -17.62543296813965
    9. ',start' → logprob: -17.62543296813965
    10. '_mid' → logprob: -17.75043296813965

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041851779678836465
    2. ',m' → logprob: -8.000418663024902
    3. ' ,' → logprob: -10.375418663024902
    4. ',
' → logprob: -11.500418663024902
    5. '(mid' → logprob: -11.625418663024902
    6. 'mid' → logprob: -11.875418663024902
    7. '[mid' → logprob: -12.500418663024902
    8. ')' → logprob: -13.375418663024902
    9. ',end' → logprob: -13.375418663024902
    10. ' midnight' → logprob: -13.375418663024902

Token 584: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -8.590104698669165e-05
    2. ' midnight' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. ' mid' → logprob: -15.375085830688477
    5. '23' → logprob: -16.375085830688477
    6. '(mid' → logprob: -16.625085830688477
    7. 'midt' → logprob: -17.000085830688477
    8. '
' → logprob: -17.000085830688477
    9. ' ' → logprob: -17.125085830688477
    10. '  ' → logprob: -17.250085830688477

Token 585: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4740876853466034
    2. '_end' → logprob: -0.9740877151489258
    3. ' end' → logprob: -13.349087715148926
    4. 'End' → logprob: -13.599087715148926
    5. '
' → logprob: -13.724087715148926
    6. '   ' → logprob: -13.974087715148926
    7. ')' → logprob: -13.974087715148926
    8. '59' → logprob: -14.599087715148926
    9. '+' → logprob: -14.599087715148926
    10. '1' → logprob: -14.849087715148926

Token 586: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18061810731887817
    2. '):' → logprob: -1.8056180477142334
    3. '           ' → logprob: -8.055618286132812
    4. '               ' → logprob: -8.055618286132812
    5. '       ' → logprob: -9.430618286132812
    6. ':' → logprob: -9.555618286132812
    7. ')' → logprob: -10.180618286132812
    8. '):
' → logprob: -11.055618286132812
    9. ':
' → logprob: -11.680618286132812
    10. '):

' → logprob: -11.680618286132812

Token 587: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004071397706866264
    2. 'mid' → logprob: -5.629071235656738
    3. '           ' → logprob: -8.504071235656738
    4. '       ' → logprob: -9.379071235656738
    5. '                   ' → logprob: -9.879071235656738
    6. ' midnight' → logprob: -10.004071235656738
    7. '[mid' → logprob: -10.629071235656738
    8. '(mid' → logprob: -11.004071235656738
    9. '   ' → logprob: -11.129071235656738
    10. '              ' → logprob: -11.379071235656738

Token 588: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10215108096599579
    2. 'mid' → logprob: -2.3521511554718018
    3. '           ' → logprob: -7.102150917053223
    4. '                   ' → logprob: -7.727150917053223
    5. ' midnight' → logprob: -7.727150917053223
    6. '       ' → logprob: -8.727150917053223
    7. '   ' → logprob: -10.352150917053223
    8. '              ' → logprob: -11.477150917053223
    9. '[mid' → logprob: -11.602150917053223
    10. '             ' → logprob: -12.102150917053223

Token 589: ' Midnight' (ID: 106225)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.000628683075774461
    2. ' midnight' → logprob: -7.625628471374512
    3. '           ' → logprob: -9.250628471374512
    4. '               ' → logprob: -10.875628471374512
    5. '       ' → logprob: -11.000628471374512
    6. 'night' → logprob: -13.250628471374512
    7. ' mid' → logprob: -13.500628471374512
    8. '
' → logprob: -13.750628471374512
    9. '                   ' → logprob: -14.000628471374512
    10. '   ' → logprob: -14.000628471374512

Token 590: ' time' (ID: 1058)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.00015693542081862688
    2. '               ' → logprob: -9.500157356262207
    3. '_mid' → logprob: -10.375157356262207
    4. '```' → logprob: -11.125157356262207
    5. '                   ' → logprob: -11.250157356262207
    6. '           ' → logprob: -11.750157356262207
    7. ' _' → logprob: -12.750157356262207
    8. 'total' → logprob: -12.875157356262207
    9. '_time' → logprob: -13.125157356262207
    10. '
' → logprob: -13.250157356262207

Token 591: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020975777879357338
    2. 'mid' → logprob: -4.520975589752197
    3. ' midnight' → logprob: -5.145975589752197
    4. '                   ' → logprob: -6.020975589752197
    5. '       ' → logprob: -6.770975589752197
    6. '           ' → logprob: -8.270976066589355
    7. '[mid' → logprob: -9.270976066589355
    8. '(mid' → logprob: -10.395976066589355
    9. '
' → logprob: -10.520976066589355
    10. '   ' → logprob: -11.145976066589355

Token 592: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4756639003753662
    2. 'mid' → logprob: -0.9756639003753662
    3. ' midnight' → logprob: -6.850664138793945
    4. '                   ' → logprob: -8.475664138793945
    5. '           ' → logprob: -8.600664138793945
    6. '       ' → logprob: -9.600664138793945
    7. '[mid' → logprob: -10.600664138793945
    8. '(mid' → logprob: -11.100664138793945
    9. ' mid' → logprob: -11.475664138793945
    10. '   ' → logprob: -12.725664138793945

Token 593: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014523439109325409
    2. '               ' → logprob: -4.889523506164551
    3. ' midnight' → logprob: -5.139523506164551
    4. '           ' → logprob: -7.139523506164551
    5. '       ' → logprob: -9.26452350616455
    6. ' mid' → logprob: -9.88952350616455
    7. '                   ' → logprob: -10.38952350616455
    8. '[mid' → logprob: -11.01452350616455
    9. '   ' → logprob: -11.26452350616455
    10. '(mid' → logprob: -11.38952350616455

Token 594: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.8312570318812504e-05
    2. 'total' → logprob: -11.125018119812012
    3. '_ok' → logprob: -13.250018119812012
    4. '_' → logprob: -14.500018119812012
    5. '```' → logprob: -15.500018119812012
    6. 'Total' → logprob: -15.625018119812012
    7. ' _' → logprob: -16.000019073486328
    8. '_time' → logprob: -16.375019073486328
    9. '_tot' → logprob: -16.375019073486328
    10. '_start' → logprob: -17.250019073486328

Token 595: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693597376346588
    2. '+=' → logprob: -2.1269359588623047
    3. ']+=' → logprob: -12.626935958862305
    4. '```' → logprob: -13.876935958862305
    5. '   ' → logprob: -14.251935958862305
    6. '       ' → logprob: -14.376935958862305
    7. '+' → logprob: -14.501935958862305
    8. ' ' → logprob: -15.001935958862305
    9. ' ' → logprob: -15.001935958862305
    10. ' +' → logprob: -15.126935958862305

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859350249171257
    2. ' ' → logprob: -3.048593521118164
    3. '   ' → logprob: -12.548593521118164
    4. '+' → logprob: -14.548593521118164
    5. '           ' → logprob: -14.673593521118164
    6. '               ' → logprob: -14.923593521118164
    7. '                   ' → logprob: -15.048593521118164
    8. '```' → logprob: -15.173593521118164
    9. ' ' → logprob: -16.423593521118164
    10. '	' → logprob: -16.423593521118164

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.625009536743164
    4. '```' → logprob: -17.875009536743164
    5. '           ' → logprob: -18.875009536743164
    6. '       ' → logprob: -20.000009536743164
    7. '１' → logprob: -20.250009536743164
    8. '+' → logprob: -20.750009536743164
    9. '<|end|>' → logprob: -20.875009536743164
    10. '                   ' → logprob: -21.000009536743164

Token 598: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026616237591952085
    2. '                   ' → logprob: -6.62766170501709
    3. '<|end|>' → logprob: -7.00266170501709
    4. '           ' → logprob: -8.87766170501709
    5. '```' → logprob: -9.50266170501709
    6. ' if' → logprob: -9.50266170501709
    7. '       ' → logprob: -10.12766170501709
    8. '                               ' → logprob: -11.25266170501709
    9. '			' → logprob: -11.37766170501709
    10. 'if' → logprob: -11.62766170501709

Token 599: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034380643046461046
    2. '           ' → logprob: -8.625344276428223
    3. '                   ' → logprob: -10.125344276428223
    4. 'if' → logprob: -10.250344276428223
    5. ' if' → logprob: -10.375344276428223
    6. '```' → logprob: -10.500344276428223
    7. '       ' → logprob: -11.000344276428223
    8. '   ' → logprob: -12.375344276428223
    9. '<|end|>' → logprob: -12.625344276428223
    10. '	           ' → logprob: -13.625344276428223

Token 600: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008750165579840541
    2. ' if' → logprob: -7.250874996185303
    3. '               ' → logprob: -8.750875473022461
    4. '           ' → logprob: -12.125875473022461
    5. '                   ' → logprob: -13.750875473022461
    6. 'If' → logprob: -16.00087547302246
    7. '```' → logprob: -17.00087547302246
    8. '              ' → logprob: -17.75087547302246
    9. '                ' → logprob: -17.87587547302246
    10. '       ' → logprob: -18.37587547302246

Token 601: ' provided' (ID: 5181)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'provided' → logprob: -0.04858771339058876
    2. ' provided' → logprob: -3.0485877990722656
    3. '                   ' → logprob: -16.298587799072266
    4. '   ' → logprob: -16.423587799072266
    5. '           ' → logprob: -16.548587799072266
    6. ' ' → logprob: -16.798587799072266
    7. 'provide' → logprob: -17.173587799072266
    8. '               ' → logprob: -17.298587799072266
    9. '```' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.048587799072266

Token 602: '_mm' (ID: 83510)
  Prédit: '_mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mm' → logprob: -0.0002444125711917877
    2. 'mm' → logprob: -8.500244140625
    3. 'provided' → logprob: -10.250244140625
    4. '_pm' → logprob: -13.875244140625
    5. '(mm' → logprob: -14.250244140625
    6. ' mm' → logprob: -14.375244140625
    7. '_m' → logprob: -14.625244140625
    8. 'mmm' → logprob: -14.875244140625
    9. '   ' → logprob: -15.000244140625
    10. '_pro' → logprob: -15.375244140625

Token 603: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014164801687002182
    2. '<=' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.389164924621582
    4. ')<=' → logprob: -14.764164924621582
    5. '<|end|>' → logprob: -15.639164924621582
    6. '```' → logprob: -16.264163970947266
    7. ' ≤' → logprob: -16.889163970947266
    8. ']<=' → logprob: -17.264163970947266
    9. ' <=",' → logprob: -17.639163970947266
    10. ')' → logprob: -18.139163970947266

Token 604: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -7.73183855926618e-05
    2. ' ' → logprob: -9.625077247619629
    3. '10' → logprob: -13.125077247619629
    4. '9' → logprob: -13.250077247619629
    5. '7' → logprob: -13.250077247619629
    6. '15' → logprob: -13.875077247619629
    7. '5' → logprob: -14.375077247619629
    8. '18' → logprob: -14.562577247619629
    9. '12' → logprob: -14.812577247619629
    10. '```' → logprob: -14.812577247619629

Token 605: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.60414821645827e-06
    2. '15' → logprob: -14.000004768371582
    3. '10' → logprob: -14.125004768371582
    4. '9' → logprob: -14.812504768371582
    5. '7' → logprob: -14.875004768371582
    6. '5' → logprob: -15.312504768371582
    7. '3' → logprob: -15.625004768371582
    8. '30' → logprob: -15.625004768371582
    9. ' ' → logprob: -15.625004768371582
    10. '18' → logprob: -15.625004768371582

Token 606: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.397388219833374
    2. ':' → logprob: -1.147388219833374
    3. ':
' → logprob: -5.522388458251953
    4. '               ' → logprob: -6.397388458251953
    5. '<|end|>' → logprob: -6.897388458251953
    6. '):
' → logprob: -7.272388458251953
    7. '):' → logprob: -7.272388458251953
    8. '           ' → logprob: -7.647388458251953
    9. '                  ' → logprob: -7.772388458251953
    10. '                       ' → logprob: -7.772388458251953

Token 607: '                   ' (ID: 699)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.17661714553833008
    2. '                   ' → logprob: -2.17661714553833
    3. ' midnight' → logprob: -3.17661714553833
    4. ' mid' → logprob: -5.05161714553833
    5. '               ' → logprob: -8.926616668701172
    6. '                       ' → logprob: -9.301616668701172
    7. '   ' → logprob: -10.426616668701172
    8. '[mid' → logprob: -10.551616668701172
    9. '(mid' → logprob: -10.551616668701172
    10. '           ' → logprob: -10.801616668701172

Token 608: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -6.2729995988775045e-06
    2. ' midnight' → logprob: -12.000006675720215
    3. '(mid' → logprob: -19.3750057220459
    4. '[mid' → logprob: -19.5000057220459
    5. ' mid' → logprob: -19.6250057220459
    6. 'night' → logprob: -21.1250057220459
    7. 'midt' → logprob: -21.5000057220459
    8. '_mid' → logprob: -22.0000057220459
    9. '.mid' → logprob: -22.6250057220459
    10. '                   ' → logprob: -23.0000057220459

Token 609: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.6482122540473938
    2. '+=' → logprob: -1.023212194442749
    3. ' +=' → logprob: -2.273212194442749
    4. '_' → logprob: -4.273212432861328
    5. '+' → logprob: -8.148212432861328
    6. ' _' → logprob: -8.773212432861328
    7. '_yes' → logprob: -9.773212432861328
    8. 'ok' → logprob: -10.398212432861328
    9. '++' → logprob: -10.648212432861328
    10. '```' → logprob: -11.273212432861328

Token 610: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20142494142055511
    2. ' +=' → logprob: -1.7014249563217163
    3. '+' → logprob: -11.576424598693848
    4. ']+=' → logprob: -13.701424598693848
    5. '=' → logprob: -14.826424598693848
    6. '```' → logprob: -15.576424598693848
    7. ' +' → logprob: -16.076425552368164
    8. '   ' → logprob: -16.326425552368164
    9. '+="' → logprob: -16.451425552368164
    10. '++' → logprob: -16.701425552368164

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.500431060791016
    4. '8' → logprob: -17.500431060791016
    5. '```' → logprob: -18.500431060791016
    6. '+' → logprob: -19.125431060791016
    7. ' ' → logprob: -19.312931060791016
    8. '１' → logprob: -19.812931060791016
    9. '-' → logprob: -19.875431060791016
    10. '
' → logprob: -20.062931060791016

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '8' → logprob: -18.250001907348633
    4. '```' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '１' → logprob: -20.750001907348633
    7. '-' → logprob: -21.437501907348633
    8. '
' → logprob: -21.500001907348633
    9. '+' → logprob: -22.250001907348633
    10. '       ' → logprob: -22.437501907348633

Token 613: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0662762001156807
    2. '<|end|>' → logprob: -3.0662763118743896
    3. '```' → logprob: -4.1912760734558105
    4. '   ' → logprob: -7.1912760734558105
    5. '        
' → logprob: -7.9412760734558105
    6. '<|end|>' → logprob: -8.191276550292969
    7. ')' → logprob: -8.566276550292969
    8. 'continue' → logprob: -8.566276550292969
    9. '\n' → logprob: -9.066276550292969
    10. '           ' → logprob: -9.316276550292969

Token 615: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21112991869449615
    2. '<|end|>' → logprob: -1.836129903793335
    3. 'continue' → logprob: -4.461130142211914
    4. 'else' (adapté à ' else') → logprob: -4.711130142211914
    5. '```' → logprob: -6.586130142211914
    6. ' continue' → logprob: -6.711130142211914
    7. ' else' → logprob: -6.961130142211914
    8. '        ' → logprob: -7.211130142211914
    9. '<|end|>' → logprob: -7.211130142211914
    10. '           ' → logprob: -7.336130142211914

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12735220789909363
    2. ':
' → logprob: -2.127352237701416
    3. ' continue' → logprob: -8.877351760864258
    4. 'continue' → logprob: -9.252351760864258
    5. ' continues' → logprob: -10.377351760864258
    6. '           ' → logprob: -10.377351760864258
    7. '               ' → logprob: -10.502351760864258
    8. '       ' → logprob: -10.877351760864258
    9. '<|end|>' → logprob: -10.877351760864258
    10. ':return' → logprob: -11.127351760864258

Token 617: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.258129358291626
    2. '           ' → logprob: -1.508129358291626
    3. '       ' → logprob: -5.258129119873047
    4. 'continue' → logprob: -7.258129119873047
    5. ' continue' → logprob: -8.508129119873047
    6. '```' → logprob: -9.633129119873047
    7. '   ' → logprob: -13.383129119873047
    8. '                   ' → logprob: -14.133129119873047
    9. '              ' → logprob: -14.758129119873047
    10. '             ' → logprob: -15.008129119873047

Token 618: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1588319092988968
    2. 'continue' → logprob: -2.408831834793091
    3. ' pass' → logprob: -3.158831834793091
    4. '               ' → logprob: -4.90883207321167
    5. 'pass' → logprob: -5.65883207321167
    6. '       ' → logprob: -5.90883207321167
    7. '           ' → logprob: -7.40883207321167
    8. '```' → logprob: -9.158831596374512
    9. '                   ' → logprob: -9.408831596374512
    10. '   ' → logprob: -10.158831596374512

Token 619: ' Out' (ID: 6042)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20112577080726624
    2. 'pass' → logprob: -2.7011258602142334
    3. ' continue' → logprob: -2.9511258602142334
    4. '#' → logprob: -3.4511258602142334
    5. '               ' → logprob: -3.8261258602142334
    6. ' pass' → logprob: -5.326125621795654
    7. '           ' → logprob: -5.826125621795654
    8. '```' → logprob: -7.951125621795654
    9. '       ' → logprob: -8.076126098632812
    10. '                   ' → logprob: -8.451126098632812

Token 620: ' of' (ID: 328)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.6550915837287903
    2. 'put' → logprob: -1.1550915241241455
    3. '           ' → logprob: -3.1550915241241455
    4. ' of' → logprob: -3.4050915241241455
    5. '_of' → logprob: -3.4050915241241455
    6. '       ' → logprob: -3.9050915241241455
    7. 'of' → logprob: -4.280091762542725
    8. '               ' → logprob: -4.405091762542725
    9. '   ' → logprob: -5.405091762542725
    10. 'puts' → logprob: -6.030091762542725

Token 621: ' any' (ID: 1062)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002487787976861
    2. 'time' → logprob: -6.502487659454346
    3. 'any' → logprob: -7.627487659454346
    4. 'the' → logprob: -8.002488136291504
    5. 'all' → logprob: -9.377488136291504
    6. 'scope' → logprob: -10.752488136291504
    7. ' range' → logprob: -11.127488136291504
    8. 'ranges' → logprob: -11.127488136291504
    9. '_range' → logprob: -11.252488136291504
    10. '   ' → logprob: -12.752488136291504

Token 622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027623141184449196
    2. 'time' → logprob: -4.152623176574707
    3. ' range' → logprob: -4.652623176574707
    4. 'defined' → logprob: -7.527623176574707
    5. 'specified' → logprob: -7.527623176574707
    6. 'ranges' → logprob: -7.902623176574707
    7. '#' → logprob: -8.777623176574707
    8. '   ' → logprob: -9.027623176574707
    9. ' time' → logprob: -9.152623176574707
    10. ' defined' → logprob: -9.777623176574707

Token 623: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3542061746120453
    2. ' continue' → logprob: -1.8542062044143677
    3. 'continue' → logprob: -1.9792062044143677
    4. '           ' → logprob: -5.729206085205078
    5. ' continues' → logprob: -9.354206085205078
    6. '```' → logprob: -9.604206085205078
    7. '_continue' → logprob: -10.104206085205078
    8. '       ' → logprob: -10.979206085205078
    9. '	continue' → logprob: -11.229206085205078
    10. '                   ' → logprob: -11.354206085205078

Token 624: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2766217589378357
    2. 'pass' → logprob: -2.0266218185424805
    3. ' continue' → logprob: -2.7766218185424805
    4. ' pass' → logprob: -3.4016218185424805
    5. '               ' → logprob: -4.7766218185424805
    6. '           ' → logprob: -5.2766218185424805
    7. '                   ' → logprob: -8.02662181854248
    8. '```' → logprob: -8.15162181854248
    9. '       ' → logprob: -9.15162181854248
    10. '   ' → logprob: -10.27662181854248

Token 625: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6862319707870483
    2. '       ' → logprob: -1.8112319707870483
    3. 'continue' → logprob: -1.9362319707870483
    4. ' continue' → logprob: -2.186232089996338
    5. '               ' → logprob: -3.061232089996338
    6. '<|end|>' → logprob: -3.686232089996338
    7. '   ' → logprob: -6.686232089996338
    8. '	continue' → logprob: -6.686232089996338
    9. '```' → logprob: -7.436232089996338
    10. '<|end|>' → logprob: -8.18623161315918

Token 626: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2862308919429779
    2. ' check' → logprob: -2.4112308025360107
    3. 'check' → logprob: -2.6612308025360107
    4. ' continue' → logprob: -2.7862308025360107
    5. ' line' → logprob: -4.16123104095459
    6. '           ' → logprob: -5.53623104095459
    7. '   ' → logprob: -6.03623104095459
    8. 'line' → logprob: -6.16123104095459
    9. '\n' → logprob: -6.91123104095459
    10. 'pass' → logprob: -7.28623104095459

Token 627: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4001280665397644
    2. '<|end|>' → logprob: -1.4001281261444092
    3. '               ' → logprob: -3.525128126144409
    4. ' continue' → logprob: -3.650128126144409
    5. 'continue' → logprob: -4.40012788772583
    6. '       ' → logprob: -4.77512788772583
    7. '```' → logprob: -5.77512788772583
    8. '<|end|>' → logprob: -6.40012788772583
    9. '   ' → logprob: -7.90012788772583
    10. '\n' → logprob: -7.90012788772583

Token 628: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39116641879081726
    2. '           ' → logprob: -1.6411664485931396
    3. ' continue' → logprob: -2.6411664485931396
    4. 'continue' → logprob: -2.8911664485931396
    5. '	continue' → logprob: -6.2661662101745605
    6. '               ' → logprob: -7.5161662101745605
    7. '   ' → logprob: -7.6411662101745605
    8. '```' → logprob: -9.141166687011719
    9. ' continues' → logprob: -9.516166687011719
    10. '_continue' → logprob: -10.141166687011719

Token 629: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05043061450123787
    2. ' continue' → logprob: -3.0504305362701416
    3. '           ' → logprob: -6.800430774688721
    4. '       ' → logprob: -7.800430774688721
    5. 'pass' (adapté à ' pass') → logprob: -8.800430297851562
    6. '   ' → logprob: -9.050430297851562
    7. ' pass' → logprob: -10.425430297851562
    8. '               ' → logprob: -11.175430297851562
    9. '```' → logprob: -12.175430297851562
    10. '	continue' → logprob: -13.800430297851562

Token 630: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012482105754315853
    2. '```' → logprob: -4.637482166290283
    3. '
' → logprob: -6.637482166290283
    4. '   ' → logprob: -7.137482166290283
    5. '        
' → logprob: -7.762482166290283
    6. '    
' → logprob: -9.512481689453125
    7. 'print' → logprob: -9.762481689453125
    8. '``' → logprob: -10.512481689453125
    9. '\n' → logprob: -11.637481689453125
    10. '<|end|>' → logprob: -12.137481689453125

Token 631: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004897496663033962
    2. '
' → logprob: -6.004897594451904
    3. '    
' → logprob: -6.254897594451904
    4. '       ' → logprob: -8.379897117614746
    5. '```' → logprob: -8.504897117614746
    6. '        
' → logprob: -11.004897117614746
    7. 'if' → logprob: -11.004897117614746
    8. 'print' → logprob: -11.129897117614746
    9. '  
' → logprob: -11.754897117614746
    10. '\n' → logprob: -13.129897117614746

Token 632: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5517601370811462
    2. '   ' → logprob: -1.551760196685791
    3. '       ' → logprob: -2.051760196685791
    4. ' print' → logprob: -2.551760196685791
    5. '```' → logprob: -5.176760196685791
    6. '``' → logprob: -9.926759719848633
    7. 'l' → logprob: -10.551759719848633
    8. '	print' → logprob: -12.176759719848633
    9. ' l' → logprob: -12.801759719848633
    10. 'import' → logprob: -13.426759719848633

Token 633: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05397064983844757
    2. '       ' → logprob: -3.3039705753326416
    3. ' print' → logprob: -4.178970813751221
    4. 'l' → logprob: -7.928970813751221
    5. ' lunch' → logprob: -10.053970336914062
    6. '```' → logprob: -10.428970336914062
    7. '   ' → logprob: -10.928970336914062
    8. 'if' → logprob: -11.303970336914062
    9. ' l' → logprob: -11.678970336914062
    10. ' if' → logprob: -12.303970336914062

Token 634: ' results' (ID: 4376)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.32954710721969604
    2. '(tr' → logprob: -1.3295471668243408
    3. '(l' → logprob: -4.704546928405762
    4. '(' → logprob: -5.329546928405762
    5. '("' → logprob: -6.579546928405762
    6. '(
' → logprob: -7.704546928405762
    7. '('' → logprob: -9.079546928405762
    8. 'l' → logprob: -9.454546928405762
    9. 'truncate' → logprob: -9.954546928405762
    10. '   ' → logprob: -10.329546928405762

Token 635: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024763107649050653
    2. '   ' → logprob: -8.625247955322266
    3. 'print' → logprob: -10.000247955322266
    4. '```' → logprob: -11.375247955322266
    5. '(' → logprob: -12.250247955322266
    6. ' print' → logprob: -12.375247955322266
    7. '           ' → logprob: -14.375247955322266
    8. '        
' → logprob: -14.750247955322266
    9. '(print' → logprob: -15.125247955322266
    10. '<|end|>' → logprob: -15.125247955322266

Token 636: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26215073466300964
    2. '"' → logprob: -2.012150764465332
    3. 'f' → logprob: -3.387150764465332
    4. ''l' → logprob: -3.637150764465332
    5. ' lunch' → logprob: -3.637150764465332
    6. ''' → logprob: -5.512150764465332
    7. '"L' → logprob: -6.262150764465332
    8. '   ' → logprob: -6.887150764465332
    9. 'lun' → logprob: -6.887150764465332
    10. '("' → logprob: -7.762150764465332

Token 637: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0440603569149971
    2. '   ' → logprob: -3.169060468673706
    3. 'print' → logprob: -7.544060230255127
    4. '(' → logprob: -8.544060707092285
    5. '()' → logprob: -8.669060707092285
    6. '```' → logprob: -9.544060707092285
    7. '           ' → logprob: -10.669060707092285
    8. ',' → logprob: -11.044060707092285
    9. ')' → logprob: -11.794060707092285
    10. '     ' → logprob: -11.919060707092285

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003900177078321576
    2. 'print' → logprob: -6.128900051116943
    3. '   ' → logprob: -6.878900051116943
    4. '```' → logprob: -7.628900051116943
    5. '(' → logprob: -8.753900527954102
    6. 'if' → logprob: -11.128900527954102
    7. ' print' → logprob: -12.253900527954102
    8. '`' → logprob: -12.378900527954102
    9. '``' → logprob: -12.378900527954102
    10. '           ' → logprob: -12.753900527954102

Token 639: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41873669624328613
    2. 'print' (adapté à ' print') → logprob: -1.1687366962432861
    3. ' print' → logprob: -3.543736696243286
    4. 'if' → logprob: -6.668736457824707
    5. ' if' → logprob: -7.043736457824707
    6. '   ' → logprob: -8.668736457824707
    7. '```' → logprob: -8.918736457824707
    8. '           ' → logprob: -12.168736457824707
    9. '``' → logprob: -13.668736457824707
    10. '`' → logprob: -14.043736457824707

Token 640: '("' (ID: 568)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.07680660486221313
    2. '("' → logprob: -3.2018065452575684
    3. '(tr' → logprob: -3.9518065452575684
    4. '(' → logprob: -4.951806545257568
    5. '('' → logprob: -5.076806545257568
    6. '(l' → logprob: -8.076807022094727
    7. '("("' → logprob: -8.451807022094727
    8. '("{}' → logprob: -9.826807022094727
    9. '("(' → logprob: -10.326807022094727
    10. '("{' → logprob: -10.451807022094727

Token 641: 'l' (ID: 75)
  Prédit: 'Lunch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lunch' → logprob: -0.32926324009895325
    2. 'f' → logprob: -1.8292632102966309
    3. 'l' → logprob: -2.829263210296631
    4. 'L' → logprob: -3.704263210296631
    5. '"L' → logprob: -4.079263210296631
    6. '"' → logprob: -5.079263210296631
    7. '{}' → logprob: -5.204263210296631
    8. '{' → logprob: -5.829263210296631
    9. '(f' → logprob: -6.454263210296631
    10. '%d' → logprob: -7.954263210296631

Token 642: 'unch' (ID: 4446)
  Prédit: 'unch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unch' → logprob: -0.0002953015500679612
    2. 'Lunch' → logprob: -9.000295639038086
    3. 'un' → logprob: -9.500295639038086
    4. 'unc' → logprob: -10.750295639038086
    5. '"' → logprob: -10.875295639038086
    6. 'uch' → logprob: -11.375295639038086
    7. '   ' → logprob: -11.500295639038086
    8. 'UNCH' → logprob: -12.000295639038086
    9. 'u' → logprob: -12.500295639038086
    10. 'Un' → logprob: -13.250295639038086

Token 643: '",' (ID: 672)
  Prédit: ':",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':",' → logprob: -1.2447389364242554
    2. ':' → logprob: -1.6197389364242554
    3. '",' → logprob: -1.6197389364242554
    4. ' %' → logprob: -2.369739055633545
    5. ' {}' → logprob: -2.369739055633545
    6. '{}' → logprob: -3.119739055633545
    7. '%' → logprob: -3.869739055633545
    8. ' ",' → logprob: -4.244739055633545
    9. ':{}' → logprob: -4.744739055633545
    10. ' {:' → logprob: -4.869739055633545

Token 644: ' (' (ID: 350)
  Prédit: 'truncate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.001432620221748948
    2. 'tr' → logprob: -7.126432418823242
    3. ' truncate' → logprob: -7.501432418823242
    4. '   ' → logprob: -10.501432418823242
    5. 'f' → logprob: -10.626432418823242
    6. '"' → logprob: -12.251432418823242
    7. 'end' → logprob: -12.251432418823242
    8. 'l' → logprob: -13.126432418823242
    9. '(tr' → logprob: -13.251432418823242
    10. 'str' → logprob: -13.751432418823242

Token 645: 'truncate' (ID: 163507)
  Prédit: 'truncate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.0001322639436693862
    2. 'tr' → logprob: -9.62513256072998
    3. 'l' → logprob: -10.50013256072998
    4. ' truncate' → logprob: -10.75013256072998
    5. 'f' → logprob: -12.50013256072998
    6. '   ' → logprob: -12.87513256072998
    7. '"' → logprob: -13.25013256072998
    8. 'str' → logprob: -13.25013256072998
    9. '
' → logprob: -13.75013256072998
    10. ' ' → logprob: -13.75013256072998

Token 646: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -0.0020114334765821695
    2. '(l' → logprob: -6.377011299133301
    3. 'ratio' → logprob: -8.2520112991333
    4. ')' → logprob: -10.8770112991333
    5. 'l' → logprob: -11.2520112991333
    6. '_rat' → logprob: -12.3770112991333
    7. 'Ratio' → logprob: -12.7520112991333
    8. ')_' → logprob: -13.2520112991333
    9. '   ' → logprob: -13.8770112991333
    10. ')(' → logprob: -14.0020112991333

Token 647: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0004269812779966742
    2. 'l' → logprob: -8.12542724609375
    3. ')' → logprob: -9.50042724609375
    4. ')(' → logprob: -10.37542724609375
    5. '(' → logprob: -10.75042724609375
    6. ' (' → logprob: -13.75042724609375
    7. ',l' → logprob: -14.50042724609375
    8. '	l' → logprob: -14.75042724609375
    9. '/l' → logprob: -14.75042724609375
    10. '=l' → logprob: -15.25042724609375

Token 648: 'unch' (ID: 4446)
  Prédit: 'unch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unch' → logprob: -0.0003461905289441347
    2. 'l' → logprob: -8.125346183776855
    3. ' lunch' → logprob: -10.500346183776855
    4. 'un' → logprob: -11.625346183776855
    5. 'unc' → logprob: -11.875346183776855
    6. 'Lunch' → logprob: -13.000346183776855
    7. 'uch' → logprob: -13.250346183776855
    8. 'u' → logprob: -14.125346183776855
    9. '   ' → logprob: -15.125346183776855
    10. 'aunch' → logprob: -15.250346183776855

Token 649: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -4.572941179503687e-05
    2. 'ok' → logprob: -10.000045776367188
    3. 'Ok' → logprob: -15.125045776367188
    4. 'OK' → logprob: -17.000045776367188
    5. '_OK' → logprob: -17.500045776367188
    6. '(ok' → logprob: -18.000045776367188
    7. ' ok' → logprob: -18.000045776367188
    8. '_yes' → logprob: -19.125045776367188
    9. '	ok' → logprob: -19.250045776367188
    10. '
' → logprob: -19.250045776367188

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03384348377585411
    2. ',l' → logprob: -3.408843517303467
    3. 'l' → logprob: -9.158843040466309
    4. ' ,' → logprob: -9.533843040466309
    5. '(' → logprob: -11.908843040466309
    6. ',
' → logprob: -12.033843040466309
    7. '(l' → logprob: -13.283843040466309
    8. ',

' → logprob: -13.783843040466309
    9. ')' → logprob: -14.283843040466309
    10. '```' → logprob: -14.283843040466309

Token 651: ' lunch' (ID: 17418)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012649968266487122
    2. ' lunch' → logprob: -4.387650012969971
    3. 'lun' → logprob: -9.387649536132812
    4. '   ' → logprob: -10.887649536132812
    5. '       ' → logprob: -11.762649536132812
    6. 'max' → logprob: -12.262649536132812
    7. ' l' → logprob: -12.637649536132812
    8. ' lunchtime' → logprob: -12.887649536132812
    9. ' lunches' → logprob: -13.012649536132812
    10. 'Lunch' → logprob: -13.137649536132812

Token 652: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.128163257315464e-07
    2. 'total' → logprob: -16.125
    3. '_ok' → logprob: -16.375
    4. '_' → logprob: -19.125
    5. 'Total' → logprob: -19.625
    6. '_tot' → logprob: -20.125
    7. '_max' → logprob: -20.25
    8. '__' → logprob: -21.0
    9. ' total' → logprob: -21.5
    10. '_TOTAL' → logprob: -21.875

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04741638898849487
    2. '))' → logprob: -3.4224164485931396
    3. '),' → logprob: -5.1724162101745605
    4. ',' → logprob: -5.5474162101745605
    5. 'if' → logprob: -6.1724162101745605
    6. ' if' → logprob: -6.6724162101745605
    7. ')))' → logprob: -8.547416687011719
    8. '   ' → logprob: -9.297416687011719
    9. ')+' → logprob: -9.297416687011719
    10. ')
' → logprob: -9.672416687011719

Token 654: '                      ' (ID: 10682)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7221956849098206
    2. ' if' → logprob: -0.9721956849098206
    3. ',' → logprob: -2.472195625305176
    4. 'if' → logprob: -3.097195625305176
    5. '))' → logprob: -5.472195625305176
    6. ' ,' → logprob: -7.347195625305176
    7. ' )' → logprob: -7.472195625305176
    8. '   ' → logprob: -7.972195625305176
    9. '()' → logprob: -8.347195625305176
    10. '),' → logprob: -8.347195625305176

Token 655: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6586348414421082
    2. 'if' (adapté à ' if') → logprob: -0.7836348414421082
    3. ')' → logprob: -3.908634901046753
    4. '))' → logprob: -5.408634662628174
    5. ',' → logprob: -7.033634662628174
    6. '),' → logprob: -9.033635139465332
    7. '   ' → logprob: -9.533635139465332
    8. ' )' → logprob: -10.533635139465332
    9. ' ))' → logprob: -11.033635139465332
    10. ' ,' → logprob: -11.033635139465332

Token 656: ' lunch' (ID: 17418)
  Prédit: ' lunch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lunch' → logprob: -0.5759485363960266
    2. 'l' → logprob: -0.8259485363960266
    3. 'lun' → logprob: -12.200948715209961
    4. '   ' → logprob: -13.575948715209961
    5. ' lunchtime' → logprob: -14.075948715209961
    6. '(l' → logprob: -14.200948715209961
    7. ' ' → logprob: -14.450948715209961
    8. '	l' → logprob: -16.07594871520996
    9. ' luncheon' → logprob: -16.20094871520996
    10. '  ' → logprob: -16.20094871520996

Token 657: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.650518920039758e-06
    2. 'total' → logprob: -12.625003814697266
    3. '_' → logprob: -16.000003814697266
    4. '_tot' → logprob: -16.875003814697266
    5. '>' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '
' → logprob: -18.000003814697266
    8. 'Total' → logprob: -18.125003814697266
    9. '```' → logprob: -18.500003814697266
    10. '_possible' → logprob: -18.750003814697266

Token 658: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17514726519584656
    2. 'else' → logprob: -2.425147294998169
    3. '!=' → logprob: -3.300147294998169
    4. ' else' → logprob: -3.550147294998169
    5. ' >' → logprob: -5.55014705657959
    6. ' !=' → logprob: -6.05014705657959
    7. ')' → logprob: -8.05014705657959
    8. ')>' → logprob: -10.92514705657959
    9. '   ' → logprob: -11.80014705657959
    10. ')!=' → logprob: -12.42514705657959

Token 659: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.125554084777832
    4. '  ' → logprob: -16.750553131103516
    5. '           ' → logprob: -16.750553131103516
    6. '                       ' → logprob: -17.000553131103516
    7. '                   ' → logprob: -17.000553131103516
    8. '
' → logprob: -17.250553131103516
    9. '     ' → logprob: -17.875553131103516
    10. '                     ' → logprob: -18.000553131103516

Token 660: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.25020408630371
    4. '  ' → logprob: -18.50020408630371
    5. 'zero' → logprob: -19.00020408630371
    6. '۰' → logprob: -19.25020408630371
    7. '```' → logprob: -19.25020408630371
    8. '
' → logprob: -19.37520408630371
    9. '=' → logprob: -19.62520408630371
    10. '    ' → logprob: -19.62520408630371

Token 661: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2521856427192688
    2. ' else' → logprob: -1.502185583114624
    3. ')' → logprob: -8.377185821533203
    4. ',' → logprob: -11.627185821533203
    5. '   ' → logprob: -11.877185821533203
    6. '```' → logprob: -12.877185821533203
    7. ' ' → logprob: -13.377185821533203
    8. '	else' → logprob: -14.002185821533203
    9. ' )' → logprob: -14.377185821533203
    10. '           ' → logprob: -14.377185821533203

Token 662: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6074371337890625
    2. '"-' → logprob: -1.8574371337890625
    3. '-' → logprob: -2.3574371337890625
    4. '"' → logprob: -2.4824371337890625
    5. ''-' → logprob: -2.6074371337890625
    6. ''' → logprob: -4.1074371337890625
    7. ' ' → logprob: -4.7324371337890625
    8. '100' → logprob: -4.7324371337890625
    9. '   ' → logprob: -5.4824371337890625
    10. '"--' → logprob: -6.8574371337890625

Token 663: 'no' (ID: 1750)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11987251043319702
    2. '"' → logprob: -3.494872570037842
    3. '0' → logprob: -3.494872570037842
    4. '"-' → logprob: -3.619872570037842
    5. 'NA' → logprob: -3.869872570037842
    6. '-"' → logprob: -6.244872570037842
    7. 'N' → logprob: -7.619872570037842
    8. ''-' → logprob: -8.119872093200684
    9. 'n' → logprob: -8.244872093200684
    10. '--' → logprob: -8.244872093200684

Token 664: ' guest' (ID: 15489)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.030124163255095482
    2. 'data' → logprob: -3.6551241874694824
    3. ' answer' → logprob: -6.530124187469482
    4. ' checks' → logprob: -7.155124187469482
    5. ' input' → logprob: -8.155123710632324
    6. ' record' → logprob: -8.280123710632324
    7. ' check' → logprob: -8.780123710632324
    8. 'input' → logprob: -8.905123710632324
    9. 'record' → logprob: -9.030123710632324
    10. ' info' → logprob: -9.405123710632324

Token 665: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.3891761302947998
    2. 's' → logprob: -1.1391761302947998
    3. '")' → logprob: -6.264176368713379
    4. ')' → logprob: -9.139176368713379
    5. ')s' → logprob: -9.139176368713379
    6. '"))
' → logprob: -10.014176368713379
    7. '"),' → logprob: -10.139176368713379
    8. ')")' → logprob: -10.139176368713379
    9. '))' → logprob: -11.014176368713379
    10. '"s' → logprob: -11.514176368713379

Token 666: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02500930055975914
    2. ')
' → logprob: -4.2750091552734375
    3. '   ' → logprob: -4.6500091552734375
    4. ',' → logprob: -7.9000091552734375
    5. '       ' → logprob: -8.025009155273438
    6. '<|end|>' → logprob: -8.900009155273438
    7. '()' → logprob: -9.525009155273438
    8. '
' → logprob: -9.525009155273438
    9. '")' → logprob: -9.900009155273438
    10. '    
' → logprob: -10.525009155273438

Token 667: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34541207551956177
    2. '       ' → logprob: -1.720412015914917
    3. '   ' → logprob: -2.970412015914917
    4. '        
' → logprob: -3.470412015914917
    5. '    
' → logprob: -4.095412254333496
    6. '  
' → logprob: -5.220412254333496
    7. ')
' → logprob: -5.970412254333496
    8. ')' → logprob: -6.095412254333496
    9. '\n' → logprob: -6.720412254333496
    10. '   
' → logprob: -7.095412254333496

Token 668: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016388466581702232
    2. '#' → logprob: -4.266388416290283
    3. '       ' → logprob: -6.141388416290283
    4. '   ' → logprob: -9.641388893127441
    5. '#print' → logprob: -12.391388893127441
    6. ' print' → logprob: -13.641388893127441
    7. ' #' → logprob: -15.891388893127441
    8. '```' → logprob: -16.391387939453125
    9. '           ' → logprob: -17.016387939453125
    10. '      ' → logprob: -17.266387939453125

Token 669: ' results' (ID: 4376)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0047143264673650265
    2. '(' → logprob: -5.504714488983154
    3. '(
' → logprob: -7.379714488983154
    4. 'd' → logprob: -11.504714012145996
    5. '(d' → logprob: -14.129714012145996
    6. '('' → logprob: -14.504714012145996
    7. '"' → logprob: -15.754714012145996
    8. '("
' → logprob: -16.004714965820312
    9. '"d' → logprob: -16.629714965820312
    10. '   ' → logprob: -16.629714965820312

Token 670: ' for' (ID: 395)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.010821070522069931
    2. '(' → logprob: -4.7608208656311035
    3. '(
' → logprob: -6.7608208656311035
    4. 'for' → logprob: -6.8858208656311035
    5. ' for' → logprob: -11.385821342468262
    6. '   ' → logprob: -12.135821342468262
    7. '       ' → logprob: -12.385821342468262
    8. '(for' → logprob: -14.385821342468262
    9. '("
' → logprob: -14.385821342468262
    10. '('' → logprob: -14.885821342468262

Token 671: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10064581036567688
    2. '"d' → logprob: -2.3506457805633545
    3. '"' → logprob: -7.975646018981934
    4. ' dinner' → logprob: -9.975646018981934
    5. ''d' → logprob: -10.225646018981934
    6. '       ' → logprob: -12.600646018981934
    7. '   ' → logprob: -12.850646018981934
    8. 'din' → logprob: -13.725646018981934
    9. ' d' → logprob: -13.850646018981934
    10. '("' → logprob: -14.100646018981934

Token 672: '
' (ID: 198)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00411829212680459
    2. '(' → logprob: -6.0041184425354
    3. '   ' → logprob: -6.7541184425354
    4. '(
' → logprob: -8.504117965698242
    5. '       ' → logprob: -8.879117965698242
    6. '"' → logprob: -9.754117965698242
    7. ',' → logprob: -10.129117965698242
    8. 'print' → logprob: -11.004117965698242
    9. '(",' → logprob: -11.504117965698242
    10. '('' → logprob: -12.754117965698242

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04086599498987198
    2. 'print' → logprob: -3.290865898132324
    3. '   ' → logprob: -5.915865898132324
    4. ' print' → logprob: -9.665865898132324
    5. '(print' → logprob: -11.290865898132324
    6. '```' → logprob: -11.290865898132324
    7. '(' → logprob: -11.415865898132324
    8. '           ' → logprob: -11.915865898132324
    9. ',' → logprob: -12.040865898132324
    10. '("' → logprob: -12.040865898132324

Token 674: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.017633911222219467
    2. '       ' → logprob: -4.14263391494751
    3. ' print' → logprob: -6.51763391494751
    4. '   ' → logprob: -9.142633438110352
    5. '"' → logprob: -12.267633438110352
    6. '(print' → logprob: -12.642633438110352
    7. '("' → logprob: -13.017633438110352
    8. ',' → logprob: -13.767633438110352
    9. '```' → logprob: -14.017633438110352
    10. '           ' → logprob: -14.267633438110352

Token 675: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. '(
' → logprob: -15.125553131103516
    4. '('' → logprob: -17.375553131103516
    5. '(f' → logprob: -20.000553131103516
    6. '"' → logprob: -20.125553131103516
    7. '("("' → logprob: -20.750553131103516
    8. ' ("' → logprob: -22.000553131103516
    9. '(

' → logprob: -22.125553131103516
    10. '(("' → logprob: -22.125553131103516

Token 676: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12722541391849518
    2. '"d' → logprob: -2.127225399017334
    3. '"' → logprob: -8.127225875854492
    4. ''d' → logprob: -13.627225875854492
    5. '("' → logprob: -15.002225875854492
    6. '(d' → logprob: -16.002225875854492
    7. 'din' → logprob: -16.127225875854492
    8. '	d' → logprob: -16.252225875854492
    9. ' dinner' → logprob: -17.252225875854492
    10. ')d' → logprob: -17.627225875854492

Token 677: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.007063562050461769
    2. 'd' → logprob: -5.007063388824463
    3. '"' → logprob: -9.007063865661621
    4. 'inn' → logprob: -9.257063865661621
    5. 'inne' → logprob: -10.382063865661621
    6. 'iner' → logprob: -10.757063865661621
    7. 'nner' → logprob: -10.757063865661621
    8. ' dinner' → logprob: -11.007063865661621
    9. 'i' → logprob: -11.632063865661621
    10. 'e' → logprob: -12.757063865661621

Token 678: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00026848804554902017
    2. '",(' → logprob: -8.625268936157227
    3. ' ",' → logprob: -9.375268936157227
    4. '"' → logprob: -13.250268936157227
    5. ',' → logprob: -13.250268936157227
    6. ',",' → logprob: -15.500268936157227
    7. '',' → logprob: -16.000268936157227
    8. '","' → logprob: -16.375268936157227
    9. '",
' → logprob: -16.875268936157227
    10. ' (' → logprob: -17.500268936157227

Token 679: ' (' (ID: 350)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.47466957569122314
    2. ' (' → logprob: -0.9746695756912231
    3. 'truncate' → logprob: -7.974669456481934
    4. '(' → logprob: -8.849669456481934
    5. ' truncate' → logprob: -9.349669456481934
    6. '"' → logprob: -12.349669456481934
    7. '(trim' → logprob: -12.474669456481934
    8. 'tr' → logprob: -13.349669456481934
    9. '(strip' → logprob: -14.099669456481934
    10. ' ' → logprob: -14.099669456481934

Token 680: 'truncate' (ID: 163507)
  Prédit: 'truncate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.00010759611177491024
    2. '(tr' → logprob: -9.750107765197754
    3. ' truncate' → logprob: -10.500107765197754
    4. 'tr' → logprob: -10.750107765197754
    5. '   ' → logprob: -16.875106811523438
    6. ' ' → logprob: -17.250106811523438
    7. 'Tr' → logprob: -17.250106811523438
    8. '	tr' → logprob: -17.375106811523438
    9. '  ' → logprob: -17.875106811523438
    10. '/tr' → logprob: -18.000106811523438

Token 681: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -4.008129963040119e-06
    2. 'ratio' → logprob: -12.500003814697266
    3. '_rat' → logprob: -15.625003814697266
    4. 'Ratio' → logprob: -17.500003814697266
    5. '_rate' → logprob: -18.000003814697266
    6. '_RATIO' → logprob: -19.375003814697266
    7. '(tr' → logprob: -19.375003814697266
    8. '(' → logprob: -19.375003814697266
    9. 'tr' → logprob: -20.125003814697266
    10. 'r' → logprob: -20.125003814697266

Token 682: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.7159857786027715e-05
    2. 'd' → logprob: -10.000046730041504
    3. 'Dinner' → logprob: -14.000046730041504
    4. '(' → logprob: -14.375046730041504
    5. ' dinner' → logprob: -15.125046730041504
    6. ',d' → logprob: -19.12504768371582
    7. '(
' → logprob: -19.25004768371582
    8. ')d' → logprob: -20.00004768371582
    9. ' (' → logprob: -20.75004768371582
    10. ')' → logprob: -20.87504768371582

Token 683: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.00014013137842994183
    2. 'd' → logprob: -9.625140190124512
    3. 'inn' → logprob: -10.750140190124512
    4. 'nner' → logprob: -11.500140190124512
    5. 'iner' → logprob: -11.750140190124512
    6. 'i' → logprob: -11.875140190124512
    7. '_inner' → logprob: -11.875140190124512
    8. 'in' → logprob: -13.000140190124512
    9. '(inner' → logprob: -13.125140190124512
    10. 'inne' → logprob: -13.375140190124512

Token 684: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.0033717502374202013
    2. '_d' → logprob: -5.753371715545654
    3. '(d' → logprob: -9.003372192382812
    4. 'd' → logprob: -9.753372192382812
    5. 'ok' → logprob: -11.753372192382812
    6. 'Ok' → logprob: -13.628372192382812
    7. '_OK' → logprob: -13.753372192382812
    8. '(_' → logprob: -14.128372192382812
    9. ')_' → logprob: -15.378372192382812
    10. ')' → logprob: -15.378372192382812

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001511408481746912
    2. ',d' → logprob: -6.501511573791504
    3. 'd' → logprob: -11.876511573791504
    4. ' ,' → logprob: -14.126511573791504
    5. ',
' → logprob: -14.751511573791504
    6. '(d' → logprob: -14.751511573791504
    7. '           ' → logprob: -15.001511573791504
    8. ',l' → logprob: -16.376510620117188
    9. '   ' → logprob: -16.501510620117188
    10. '       ' → logprob: -17.001510620117188

Token 686: ' dinner' (ID: 16078)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003215857082977891
    2. ' dinner' → logprob: -5.753215789794922
    3. ' d' → logprob: -10.628215789794922
    4. '           ' → logprob: -13.128215789794922
    5. '   ' → logprob: -13.378215789794922
    6. '	d' → logprob: -13.628215789794922
    7. ' ' → logprob: -13.878215789794922
    8. '       ' → logprob: -13.878215789794922
    9. '```' → logprob: -13.878215789794922
    10. '(d' → logprob: -14.003215789794922

Token 687: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -7.278864359250292e-05
    2. ',' → logprob: -9.625072479248047
    3. 'total' → logprob: -12.875072479248047
    4. '_d' → logprob: -13.250072479248047
    5. ',_' → logprob: -13.750072479248047
    6. 'd' → logprob: -14.625072479248047
    7. ',total' → logprob: -15.375072479248047
    8. '_tot' → logprob: -15.625072479248047
    9. '_,' → logprob: -15.875072479248047
    10. ',d' → logprob: -16.250072479248047

Token 688: ')
' (ID: 446)
  Prédit: '                      '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                      ' → logprob: -0.08226412534713745
    2. 'if' → logprob: -3.3322641849517822
    3. ',' → logprob: -4.457263946533203
    4. ')' → logprob: -4.457263946533203
    5. ',
' → logprob: -5.582263946533203
    6. '                     ' → logprob: -5.707263946533203
    7. ' if' → logprob: -5.832263946533203
    8. '                       ' → logprob: -6.082263946533203
    9. '           ' → logprob: -6.332263946533203
    10. '                   ' → logprob: -7.207263946533203

Token 689: '                       ' (ID: 968)
  Prédit: '                      '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                      ' → logprob: -0.024653218686580658
    2. ' if' → logprob: -4.399653434753418
    3. 'if' → logprob: -5.399653434753418
    4. '                  ' → logprob: -5.649653434753418
    5. '              ' → logprob: -6.274653434753418
    6. '          ' → logprob: -6.649653434753418
    7. '           ' → logprob: -8.899653434753418
    8. '               ' → logprob: -9.024653434753418
    9. '                          ' → logprob: -9.024653434753418
    10. '                     ' → logprob: -9.274653434753418

Token 690: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1135064885020256
    2. 'if' (adapté à ' if') → logprob: -2.363506555557251
    3. '                      ' → logprob: -4.363506317138672
    4. '              ' → logprob: -9.238506317138672
    5. '                    ' → logprob: -9.238506317138672
    6. '                  ' → logprob: -9.613506317138672
    7. '          ' → logprob: -9.738506317138672
    8. '            ' → logprob: -9.863506317138672
    9. '                     ' → logprob: -10.738506317138672
    10. '                       ' → logprob: -10.863506317138672

Token 691: ' dinner' (ID: 16078)
  Prédit: ' dinner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dinner' → logprob: -0.2519339919090271
    2. 'd' → logprob: -1.5019340515136719
    3. '(d' → logprob: -13.626934051513672
    4. 'Dinner' → logprob: -13.626934051513672
    5. ' d' → logprob: -13.751934051513672
    6. ' diner' → logprob: -15.126934051513672
    7. '           ' → logprob: -15.501934051513672
    8. ' ' → logprob: -15.751934051513672
    9. '               ' → logprob: -15.876934051513672
    10. '   ' → logprob: -15.876934051513672

Token 692: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.173704271830502e-06
    2. 'total' → logprob: -12.75000286102295
    3. '>' → logprob: -16.750003814697266
    4. '_d' → logprob: -16.875003814697266
    5. 'd' → logprob: -17.000003814697266
    6. '_tot' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.000003814697266
    8. 'Total' → logprob: -18.000003814697266
    9. ' _' → logprob: -18.000003814697266
    10. '_' → logprob: -18.375003814697266

Token 693: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889165729284286
    2. '>' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.70389175415039
    4. ' ' → logprob: -14.32889175415039
    5. ')' → logprob: -16.20389175415039
    6. '   ' → logprob: -16.45389175415039
    7. ')>' → logprob: -17.70389175415039
    8. '&gt' → logprob: -18.20389175415039
    9. '  ' → logprob: -18.70389175415039
    10. '<|end|>' → logprob: -19.20389175415039

Token 694: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008715503849089146
    2. ' ' → logprob: -4.758715629577637
    3. '>' → logprob: -9.258715629577637
    4. '   ' → logprob: -12.633715629577637
    5. '```' → logprob: -14.633715629577637
    6. '           ' → logprob: -14.883715629577637
    7. ' >' → logprob: -14.883715629577637
    8. '``' → logprob: -15.508715629577637
    9. '=' → logprob: -15.758715629577637
    10. '       ' → logprob: -15.758715629577637

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020973898062948138
    2. ' ' → logprob: -8.50020980834961
    3. '>' → logprob: -12.12520980834961
    4. '   ' → logprob: -14.50020980834961
    5. '=' → logprob: -16.62520980834961
    6. '```' → logprob: -16.75020980834961
    7. '
' → logprob: -17.25020980834961
    8. '           ' → logprob: -17.37520980834961
    9. '       ' → logprob: -17.56270980834961
    10. '  ' → logprob: -17.68770980834961

Token 696: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931476593017578
    2. 'else' → logprob: -0.6931476593017578
    3. '                       ' → logprob: -16.318147659301758
    4. '                    ' → logprob: -16.568147659301758
    5. '                        ' → logprob: -16.818147659301758
    6. '                   ' → logprob: -17.068147659301758
    7. '                     ' → logprob: -17.318147659301758
    8. '                               ' → logprob: -17.568147659301758
    9. '                         ' → logprob: -17.693147659301758
    10. '                           ' → logprob: -17.818147659301758

Token 697: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6931909918785095
    2. ' "' → logprob: -0.6931909918785095
    3. ''' → logprob: -10.693190574645996
    4. '"No' → logprob: -11.443190574645996
    5. ' '' → logprob: -12.943190574645996
    6. ')' → logprob: -13.693190574645996
    7. '    ' → logprob: -13.818190574645996
    8. '"display' → logprob: -13.943190574645996
    9. ' ' → logprob: -14.068190574645996
    10. '"user' → logprob: -14.443190574645996

Token 698: 'no' (ID: 1750)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00011117222311440855
    2. 'no' → logprob: -9.25011157989502
    3. ''' → logprob: -11.12511157989502
    4. ' "' → logprob: -16.750110626220703
    5. '"No' → logprob: -17.500110626220703
    6. '
' → logprob: -17.500110626220703
    7. '"'' → logprob: -18.125110626220703
    8. '	no' → logprob: -18.500110626220703
    9. ' ' → logprob: -18.625110626220703
    10. '   ' → logprob: -19.000110626220703

Token 699: ' guest' (ID: 15489)
  Prédit: ' guest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guest' → logprob: -0.31326842308044434
    2. 'guest' → logprob: -1.3132684230804443
    3. '_guest' → logprob: -12.313268661499023
    4. ' guests' → logprob: -14.188268661499023
    5. 'Guest' → logprob: -14.438268661499023
    6. ' ' → logprob: -14.563268661499023
    7. ' Guest' → logprob: -15.938268661499023
    8. 'gu' → logprob: -16.063268661499023
    9. '   ' → logprob: -16.438268661499023
    10. ' ' → logprob: -17.438268661499023

Token 700: '"))
' (ID: 10990)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6945482492446899
    2. '"))' → logprob: -0.6945482492446899
    3. '"))
' → logprob: -7.0695481300354
    4. ')' → logprob: -8.444548606872559
    5. '))
' → logprob: -8.694548606872559
    6. ''))' → logprob: -9.444548606872559
    7. '       ' → logprob: -9.944548606872559
    8. '")' → logprob: -11.319548606872559
    9. ')")' → logprob: -12.319548606872559
    10. ' ))' → logprob: -12.569548606872559

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002500152215361595
    2. '   ' → logprob: -6.002500057220459
    3. '```' → logprob: -11.002500534057617
    4. 'print' → logprob: -11.877500534057617
    5. '           ' → logprob: -14.377500534057617
    6. '#' → logprob: -15.752500534057617
    7. ' print' → logprob: -16.252500534057617
    8. '      ' → logprob: -17.377500534057617
    9. '     ' → logprob: -17.752500534057617
    10. '``' → logprob: -17.752500534057617

Token 702: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.40979868173599243
    2. 'print' → logprob: -1.4097986221313477
    3. '       ' → logprob: -2.4097986221313477
    4. '```' → logprob: -6.284798622131348
    5. '   ' → logprob: -8.284798622131348
    6. '#print' → logprob: -10.034798622131348
    7. '``' → logprob: -11.284798622131348
    8. '           ' → logprob: -11.659798622131348
    9. ' #' → logprob: -12.409798622131348
    10. ' print' → logprob: -13.284798622131348

Token 703: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3902033970225602e-05
    2. '       ' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.250014305114746
    4. '#' → logprob: -15.000014305114746
    5. ' print' → logprob: -15.250014305114746
    6. '#print' → logprob: -18.37501335144043
    7. '```' → logprob: -18.62501335144043
    8. '
' → logprob: -20.37501335144043
    9. '           ' → logprob: -20.75001335144043
    10. '	print' → logprob: -20.75001335144043

Token 704: ' results' (ID: 4376)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00042888117604888976
    2. '(' → logprob: -7.875428676605225
    3. '"' → logprob: -10.125429153442383
    4. '(
' → logprob: -12.375429153442383
    5. 'mid' → logprob: -12.875429153442383
    6. 'print' → logprob: -14.375429153442383
    7. '(mid' → logprob: -14.500429153442383
    8. '('' → logprob: -14.875429153442383
    9. '   ' → logprob: -15.000429153442383
    10. 'results' → logprob: -16.750429153442383

Token 705: ' for' (ID: 395)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001547002699226141
    2. '(' → logprob: -6.501546859741211
    3. '(
' → logprob: -10.251546859741211
    4. 'for' → logprob: -11.626546859741211
    5. '   ' → logprob: -15.376546859741211
    6. '('' → logprob: -15.751546859741211
    7. ' for' → logprob: -18.50154685974121
    8. '"' → logprob: -18.75154685974121
    9. 'print' → logprob: -18.87654685974121
    10. '("
' → logprob: -19.37654685974121

Token 706: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0041067772544920444
    2. '"' → logprob: -5.5041069984436035
    3. '(mid' → logprob: -11.129106521606445
    4. '("' → logprob: -12.004106521606445
    5. 'print' → logprob: -13.004106521606445
    6. ' mid' → logprob: -13.129106521606445
    7. ' midnight' → logprob: -13.504106521606445
    8. ''m' → logprob: -13.879106521606445
    9. 'm' → logprob: -15.504106521606445
    10. '
' → logprob: -15.629106521606445

Token 707: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.040532130748033524
    2. ' print' → logprob: -3.665532112121582
    3. '   ' → logprob: -4.290532112121582
    4. '(print' → logprob: -8.165532112121582
    5. '(' → logprob: -9.790532112121582
    6. ',' → logprob: -10.290532112121582
    7. '       ' → logprob: -10.290532112121582
    8. '("' → logprob: -11.415532112121582
    9. '```' → logprob: -12.540532112121582
    10. '	print' → logprob: -12.915532112121582

Token 708: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014509111642837524
    2. ' print' → logprob: -4.264509201049805
    3. '   ' → logprob: -8.389509201049805
    4. '("' → logprob: -9.889509201049805
    5. '(print' → logprob: -9.889509201049805
    6. ' midnight' → logprob: -12.014509201049805
    7. '"' → logprob: -12.389509201049805
    8. '(' → logprob: -13.764509201049805
    9. '.print' → logprob: -13.764509201049805
    10. '       ' → logprob: -14.014509201049805

Token 709: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.5
    4. '       ' → logprob: -22.0
    5. '```' → logprob: -22.0
    6. '(print' → logprob: -22.375
    7. '
' → logprob: -23.25
    8. '.print' → logprob: -23.625
    9. 'for' → logprob: -23.875
    10. '"' → logprob: -23.875

Token 710: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0031827057246118784
    2. '(' → logprob: -5.753182888031006
    3. '(
' → logprob: -12.253182411193848
    4. '('' → logprob: -15.753182411193848
    5. '"' → logprob: -16.128183364868164
    6. '(

' → logprob: -18.878183364868164
    7. '("("' → logprob: -20.253183364868164
    8. '(""' → logprob: -20.503183364868164
    9. '()' → logprob: -20.503183364868164
    10. ' ("' → logprob: -21.003183364868164

Token 711: 'mid' (ID: 23430)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008626160211861134
    2. 'mid' → logprob: -4.7586259841918945
    3. '(mid' → logprob: -12.008625984191895
    4. ''m' → logprob: -12.508625984191895
    5. '("' → logprob: -13.383625984191895
    6. '-mid' → logprob: -16.00862693786621
    7. '[mid' → logprob: -16.88362693786621
    8. '_mid' → logprob: -17.13362693786621
    9. ' midnight' → logprob: -17.63362693786621
    10. '.mid' → logprob: -17.88362693786621

Token 712: 'night' (ID: 15869)
  Prédit: 'night'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'night' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -16.5
    3. 'n' → logprob: -16.5
    4. ' night' → logprob: -18.0
    5. 'right' → logprob: -18.375
    6. 'ning' → logprob: -18.875
    7. '   ' → logprob: -19.125
    8. 'nacht' → logprob: -19.125
    9. 'mid' → logprob: -19.25
    10. 'nite' → logprob: -19.375

Token 713: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0017134972149506211
    2. '",(' → logprob: -6.376713275909424
    3. ' ",' → logprob: -11.751713752746582
    4. '"' → logprob: -13.376713752746582
    5. '',' → logprob: -14.626713752746582
    6. '",
' → logprob: -14.626713752746582
    7. '","' → logprob: -15.126713752746582
    8. ',' → logprob: -15.376713752746582
    9. 'mid' → logprob: -15.876713752746582
    10. '',(' → logprob: -16.376712799072266

Token 714: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47424083948135376
    2. '(tr' → logprob: -0.9742408394813538
    3. 'truncate' → logprob: -9.224241256713867
    4. ' truncate' → logprob: -10.849241256713867
    5. '(trim' → logprob: -10.974241256713867
    6. '(mid' → logprob: -12.099241256713867
    7. '                       ' → logprob: -12.849241256713867
    8. '                      ' → logprob: -13.099241256713867
    9. '                   ' → logprob: -13.099241256713867
    10. '(' → logprob: -13.224241256713867

Token 715: 'truncate' (ID: 163507)
  Prédit: 'truncate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'truncate' → logprob: -0.0005066845333203673
    2. '(tr' → logprob: -8.250506401062012
    3. 'tr' → logprob: -8.375506401062012
    4. ' truncate' → logprob: -11.125506401062012
    5. 'str' → logprob: -16.750507354736328
    6. '   ' → logprob: -17.375507354736328
    7. '<tr' → logprob: -17.500507354736328
    8. '	tr' → logprob: -17.500507354736328
    9. '/tr' → logprob: -17.750507354736328
    10. 'Tr' → logprob: -18.000507354736328

Token 716: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -4.961759259458631e-06
    2. 'ratio' → logprob: -12.375004768371582
    3. '_rat' → logprob: -14.875004768371582
    4. 'Ratio' → logprob: -15.375004768371582
    5. 'truncate' → logprob: -16.2500057220459
    6. '(tr' → logprob: -17.8750057220459
    7. '(' → logprob: -19.0000057220459
    8. 'tr' → logprob: -19.7500057220459
    9. '```' → logprob: -19.7500057220459
    10. '_RATIO' → logprob: -19.7500057220459

Token 717: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -4.787507714354433e-05
    2. 'mid' → logprob: -10.00004768371582
    3. '[mid' → logprob: -13.00004768371582
    4. '(' → logprob: -16.12504768371582
    5. '(m' → logprob: -16.62504768371582
    6. '_mid' → logprob: -18.12504768371582
    7. '(min' → logprob: -18.87504768371582
    8. ')' → logprob: -19.00004768371582
    9. '```' → logprob: -19.12504768371582
    10. '(
' → logprob: -19.12504768371582

Token 718: 'night' (ID: 15869)
  Prédit: 'night'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'night' → logprob: -0.016764359548687935
    2. 'mid' → logprob: -4.766764163970947
    3. 'ight' → logprob: -5.016764163970947
    4. 'right' → logprob: -6.891764163970947
    5. 'id' → logprob: -7.891764163970947
    6. '_mid' → logprob: -10.266764640808105
    7. 'n' → logprob: -11.016764640808105
    8. '(mid' → logprob: -11.391764640808105
    9. 'nit' → logprob: -12.141764640808105
    10. 'it' → logprob: -12.766764640808105

Token 719: '_ok' (ID: 45191)
  Prédit: '_ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.0009164590737782419
    2. '_mid' → logprob: -7.000916481018066
    3. '(mid' → logprob: -13.000916481018066
    4. 'ok' → logprob: -14.000916481018066
    5. '_OK' → logprob: -14.500916481018066
    6. '(_' → logprob: -15.000916481018066
    7. 'mid' → logprob: -15.375916481018066
    8. 'Ok' → logprob: -15.625916481018066
    9. '_yes' → logprob: -15.875916481018066
    10. '_' → logprob: -16.75091552734375

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.91732100979425e-05
    2. '(mid' → logprob: -10.875039100646973
    3. ',m' → logprob: -11.000039100646973
    4. ' ,' → logprob: -13.875039100646973
    5. ',
' → logprob: -14.125039100646973
    6. 'mid' → logprob: -14.500039100646973
    7. '(' → logprob: -15.000039100646973
    8. '[mid' → logprob: -15.375039100646973
    9. ',min' → logprob: -16.75004005432129
    10. ')' → logprob: -16.87504005432129

Token 721: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.318681188422488e-05
    2. ' midnight' → logprob: -11.25001335144043
    3. ' mid' → logprob: -16.75001335144043
    4. 'night' → logprob: -17.25001335144043
    5. '   ' → logprob: -17.37501335144043
    6. '(mid' → logprob: -17.87501335144043
    7. '[mid' → logprob: -18.87501335144043
    8. 'midt' → logprob: -19.12501335144043
    9. 'middle' → logprob: -19.62501335144043
    10. '```' → logprob: -19.87501335144043

Token 722: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.531315314830863e-06
    2. 'total' → logprob: -13.625003814697266
    3. '_mid' → logprob: -13.875003814697266
    4. '_end' → logprob: -14.250003814697266
    5. '_tot' → logprob: -15.375003814697266
    6. 'Total' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. '_start' → logprob: -16.875003814697266
    9. ',' → logprob: -18.000003814697266
    10. ')_' → logprob: -18.125003814697266

Token 723: ')
' (ID: 446)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05787287652492523
    2. ')' → logprob: -3.557872772216797
    3. ')
' → logprob: -4.307872772216797
    4. ' if' → logprob: -4.932872772216797
    5. '
' → logprob: -6.057872772216797
    6. '           ' → logprob: -6.932872772216797
    7. '   ' → logprob: -7.307872772216797
    8. '               ' → logprob: -7.307872772216797
    9. '                       ' → logprob: -7.307872772216797
    10. '                   ' → logprob: -7.807872772216797

Token 724: '                         ' (ID: 6453)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8690765500068665
    2. ' if' → logprob: -1.2440764904022217
    3. 'if' → logprob: -1.3690764904022217
    4. '                      ' → logprob: -3.9940764904022217
    5. '           ' → logprob: -4.994076728820801
    6. '               ' → logprob: -5.244076728820801
    7. '                   ' → logprob: -5.369076728820801
    8. '          ' → logprob: -6.994076728820801
    9. '                  ' → logprob: -7.994076728820801
    10. '              ' → logprob: -8.1190767288208

Token 725: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.475759357213974
    2. ' if' → logprob: -0.9757593870162964
    3. '                      ' → logprob: -6.975759506225586
    4. '                          ' → logprob: -8.725759506225586
    5. '                         ' → logprob: -8.725759506225586
    6. '                       ' → logprob: -9.225759506225586
    7. '                        ' → logprob: -9.350759506225586
    8. '                              ' → logprob: -9.350759506225586
    9. '                            ' → logprob: -10.350759506225586
    10. '                           ' → logprob: -10.725759506225586

Token 726: ' midnight' (ID: 54213)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.31326499581336975
    2. ' midnight' → logprob: -1.3132649660110474
    3. ' mid' → logprob: -13.563264846801758
    4. '(mid' → logprob: -13.938264846801758
    5. '[mid' → logprob: -14.313264846801758
    6. '   ' → logprob: -16.063264846801758
    7. 'm' → logprob: -16.313264846801758
    8. ' ' → logprob: -16.438264846801758
    9. 'midt' → logprob: -16.563264846801758
    10. 'night' → logprob: -16.688264846801758

Token 727: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -5.455048449221067e-05
    2. '_mid' → logprob: -10.500054359436035
    3. '>' → logprob: -11.250054359436035
    4. 'total' → logprob: -11.375054359436035
    5. '_end' → logprob: -13.500054359436035
    6. '_start' → logprob: -15.375054359436035
    7. '_tot' → logprob: -15.375054359436035
    8. '+' → logprob: -16.25005531311035
    9. 'Total' → logprob: -16.25005531311035
    10. '_max' → logprob: -16.62505531311035

Token 728: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22542469203472137
    2. '>' → logprob: -1.6004246473312378
    3. ' ' → logprob: -11.850424766540527
    4. '   ' → logprob: -13.475424766540527
    5. ' ' → logprob: -14.100424766540527
    6. '==' → logprob: -14.600424766540527
    7. '0' → logprob: -14.725424766540527
    8. ' ==' → logprob: -15.100424766540527
    9. ')' → logprob: -15.100424766540527
    10. '  ' → logprob: -15.225424766540527

Token 729: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07923290133476257
    2. ' ' → logprob: -2.579232931137085
    3. '>' → logprob: -8.079233169555664
    4. '   ' → logprob: -10.829233169555664
    5. '```' → logprob: -13.516733169555664
    6. '    ' → logprob: -13.579233169555664
    7. 'mid' → logprob: -13.704233169555664
    8. '  ' → logprob: -13.829233169555664
    9. '=' → logprob: -13.891733169555664
    10. '     ' → logprob: -14.079233169555664

Token 730: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036846695002168417
    2. ' ' → logprob: -8.000368118286133
    3. '>' → logprob: -10.375368118286133
    4. '   ' → logprob: -14.375368118286133
    5. 'mid' → logprob: -14.750368118286133
    6. '=' → logprob: -15.250368118286133
    7. '  ' → logprob: -16.312868118286133
    8. '
' → logprob: -16.625368118286133
    9. '    ' → logprob: -16.750368118286133
    10. '```' → logprob: -16.812868118286133

Token 731: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25192955136299133
    2. 'else' → logprob: -1.501929521560669
    3. '        ' → logprob: -16.501930236816406
    4. '                               ' → logprob: -16.626930236816406
    5. '    ' → logprob: -17.001930236816406
    6. '>' → logprob: -17.251930236816406
    7. '                            ' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '                                ' → logprob: -17.751930236816406
    10. '   ' → logprob: -17.876930236816406

Token 732: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5762438774108887
    2. ' "' → logprob: -0.8262438774108887
    3. '"No' → logprob: -8.826244354248047
    4. ''' → logprob: -9.076244354248047
    5. ' '' → logprob: -10.701244354248047
    6. ')' → logprob: -11.201244354248047
    7. ' no' → logprob: -13.326244354248047
    8. ' ' → logprob: -13.326244354248047
    9. '("' → logprob: -14.701244354248047
    10. '    ' → logprob: -15.201244354248047

Token 733: 'no' (ID: 1750)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005854414775967598
    2. 'no' → logprob: -7.625585556030273
    3. ''' → logprob: -9.375585556030273
    4. '"No' → logprob: -12.000585556030273
    5. ' "' → logprob: -12.375585556030273
    6. ' no' → logprob: -13.375585556030273
    7. '"'' → logprob: -15.250585556030273
    8. ' ' → logprob: -15.750585556030273
    9. '	no' → logprob: -16.125585556030273
    10. '   ' → logprob: -17.625585556030273

Token 734: ' guest' (ID: 15489)
  Prédit: ' guest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' guest' → logprob: -0.20141655206680298
    2. 'guest' → logprob: -1.7014164924621582
    3. '_guest' → logprob: -13.076416969299316
    4. '"' → logprob: -14.701416969299316
    5. 'Guest' → logprob: -14.826416969299316
    6. 'gu' → logprob: -15.576416969299316
    7. ' Guest' → logprob: -16.076416015625
    8. ' ' → logprob: -16.326416015625
    9. '```' → logprob: -17.576416015625
    10. ' guests' → logprob: -18.076416015625

Token 735: '"))' (ID: 5063)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038881413638591766
    2. '"))' → logprob: -3.288881301879883
    3. ')' → logprob: -7.163881301879883
    4. '))
' → logprob: -10.163881301879883
    5. ')")' → logprob: -11.663881301879883
    6. '")' → logprob: -12.038881301879883
    7. '"))
' → logprob: -12.663881301879883
    8. ''))' → logprob: -12.788881301879883
    9. '()))' → logprob: -13.288881301879883
    10. '       ' → logprob: -13.288881301879883

Token 736: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 737: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008877566433511674
    2. '```' → logprob: -7.125887870788574
    3. '
' → logprob: -10.250887870788574
    4. ' if' → logprob: -10.375887870788574
    5. '\n' → logprob: -11.750887870788574
    6. '``' → logprob: -12.750887870788574
    7. '\' → logprob: -13.250887870788574
    8. '<|end|>' → logprob: -13.875887870788574
    9. '\
' → logprob: -14.125887870788574
    10. '#' → logprob: -14.125887870788574

Token 738: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14311546087265015
    2. ' __' → logprob: -2.018115520477295
    3. '_' → logprob: -7.768115520477295
    4. ' ' → logprob: -11.643115043640137
    5. ' ' → logprob: -12.768115043640137
    6. '___' → logprob: -13.268115043640137
    7. '_name' → logprob: -13.643115043640137
    8. 'name' → logprob: -14.143115043640137
    9. ''' → logprob: -14.643115043640137
    10. '"' → logprob: -14.768115043640137

Token 739: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010816368740051985
    2. ' ==' → logprob: -7.501081466674805
    3. '==' → logprob: -8.126081466674805
    4. ' __' → logprob: -9.001081466674805
    5. '_' → logprob: -11.001081466674805
    6. '__.__' → logprob: -11.126081466674805
    7. '___' → logprob: -11.626081466674805
    8. '[' → logprob: -11.626081466674805
    9. '__[' → logprob: -11.751081466674805
    10. 'if' → logprob: -12.001081466674805

Token 740: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.306760805164231e-05
    2. '__.__' → logprob: -11.37501335144043
    3. '____' → logprob: -14.37501335144043
    4. '__('' → logprob: -14.87501335144043
    5. '___' → logprob: -15.75001335144043
    6. '==' → logprob: -15.87501335144043
    7. '__
' → logprob: -15.87501335144043
    8. '__["' → logprob: -16.75001335144043
    9. '__.' → logprob: -17.12501335144043
    10. '_' → logprob: -17.25001335144043

Token 741: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029027052223682404
    2. '==' → logprob: -5.877902507781982
    3. ' ==' → logprob: -9.37790298461914
    4. '=="' → logprob: -12.12790298461914
    5. '__.__' → logprob: -12.75290298461914
    6. '_' → logprob: -12.87790298461914
    7. '=='' → logprob: -14.25290298461914
    8. '=' → logprob: -14.37790298461914
    9. '___' → logprob: -15.25290298461914
    10. '____' → logprob: -15.50290298461914

Token 742: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0789036676287651
    2. ''' → logprob: -2.5789036750793457
    3. '__' → logprob: -11.328903198242188
    4. ' "__' → logprob: -13.453903198242188
    5. ' '__' → logprob: -15.578903198242188
    6. ''"' → logprob: -16.203903198242188
    7. '"'' → logprob: -16.953903198242188
    8. '   ' → logprob: -17.328903198242188
    9. '"name' → logprob: -17.578903198242188
    10. '"class' → logprob: -18.203903198242188

Token 743: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018368368968367577
    2. '__' → logprob: -4.018368244171143
    3. 'name' → logprob: -9.1433687210083
    4. '"' → logprob: -9.2683687210083
    5. ''' → logprob: -11.2683687210083
    6. 'built' → logprob: -13.8933687210083
    7. '_main' → logprob: -14.1433687210083
    8. ' main' → logprob: -14.3933687210083
    9. 'python' → logprob: -14.5183687210083
    10. '___' → logprob: -14.6433687210083

Token 744: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20195917785167694
    2. '__' → logprob: -1.7019591331481934
    3. '__':
' → logprob: -7.576959133148193
    4. '__.' → logprob: -11.076959609985352
    5. '__.__' → logprob: -11.951959609985352
    6. '__["' → logprob: -12.451959609985352
    7. '"' → logprob: -12.576959609985352
    8. '__("' → logprob: -13.576959609985352
    9. '__
' → logprob: -13.701959609985352
    10. '=="' → logprob: -14.826959609985352

Token 745: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2314012199640274
    2. '__' → logprob: -1.6064012050628662
    3. 'if' → logprob: -5.856401443481445
    4. ' main' → logprob: -5.981401443481445
    5. '   ' → logprob: -7.981401443481445
    6. '_main' → logprob: -8.856401443481445
    7. '	main' → logprob: -10.731401443481445
    8. ' __' → logprob: -11.231401443481445
    9. '__":
' → logprob: -11.231401443481445
    10. 'run' → logprob: -11.606401443481445

Token 746: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -22.25
    4. '   ' → logprob: -23.375
    5. '_main' → logprob: -25.25
    6. '(main' → logprob: -25.875
    7. '.main' → logprob: -26.125
    8. 'Main' → logprob: -28.0
    9. 'import' → logprob: -28.875
    10. '__' → logprob: -29.0

Token 747: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 745
Tokens correctement prédits (1ère position, stricte): 295
Tokens correctement prédits (1ère position, avec adaptation): 313
Tokens correctement prédits (top 10): 596
Précision stricte (1ère position): 39.60%
Précision adaptée (1ère position): 42.01%
Précision (top 10): 80.00%
================================================================================
