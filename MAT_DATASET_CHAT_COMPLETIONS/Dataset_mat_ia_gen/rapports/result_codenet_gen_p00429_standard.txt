================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def look_and_say(s):
    res = []
    count = 1
    for i in range(1, len(s)+1):
        if i < len(s) and s[i] == s[i-1]:
            count += 1
        else:
            res.append(str(count))
            res.append(s[i-1])
            count = 1
    return ''.join(res)

while True:
    n = int(input())
    if n == 0:
        break
    s = input()
    for _ in range(n):
        s = look_and_say(s)
    print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' look' (ID: 1631)
  → Token d'amorce (pas de prédiction)

Token 2: '_and' (ID: 18645)
  → Token d'amorce (pas de prédiction)

Token 3: '_s' (ID: 1278)
  Prédit: 'say'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'say' → logprob: -0.0781392827630043
    2. '_s' → logprob: -3.078139305114746
    3. 's' → logprob: -3.828139305114746
    4. 'feel' → logprob: -5.953139305114746
    5. 'see' → logprob: -6.203139305114746
    6. '_' → logprob: -6.203139305114746
    7. '_fe' → logprob: -8.328139305114746
    8. 'replace' → logprob: -9.203139305114746
    9. 'listen' → logprob: -10.078139305114746
    10. 'find' → logprob: -10.328139305114746

Token 4: 'ay' (ID: 356)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011608283035457134
    2. 'ee' → logprob: -4.886608123779297
    3. 'ay' → logprob: -5.886608123779297
    4. 'a' → logprob: -6.886608123779297
    5. 'at' → logprob: -10.136608123779297
    6. 'eye' → logprob: -10.886608123779297
    7. 'ek' → logprob: -11.011608123779297
    8. 'em' → logprob: -11.511608123779297
    9. 'ep' → logprob: -11.511608123779297
    10. 'eam' → logprob: -11.636608123779297

Token 5: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005427035503089428
    2. '_' → logprob: -6.00542688369751
    3. '():' → logprob: -6.63042688369751
    4. '(:' → logprob: -6.75542688369751
    5. ':' → logprob: -8.505427360534668
    6. '```' → logprob: -9.880427360534668
    7. '_:' → logprob: -9.880427360534668
    8. ' (' → logprob: -10.130427360534668
    9. '(_:' → logprob: -10.255427360534668
    10. '(_' → logprob: -10.880427360534668

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033676013350486755
    2. ')' → logprob: -3.4086759090423584
    3. ':' → logprob: -11.658676147460938
    4. ''):' → logprob: -12.158676147460938
    5. '[' → logprob: -12.283676147460938
    6. '(' → logprob: -12.658676147460938
    7. '):
' → logprob: -13.158676147460938
    8. ' ):' → logprob: -13.283676147460938
    9. ')：' → logprob: -14.408676147460938
    10. '"):' → logprob: -14.533676147460938

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36443325877189636
    2. ':' → logprob: -1.2394332885742188
    3. '```' → logprob: -5.239433288574219
    4. ' :' → logprob: -5.864433288574219
    5. ' if' → logprob: -5.989433288574219
    6. ':
' → logprob: -7.114433288574219
    7. ' ' → logprob: -7.364433288574219
    8. '):' → logprob: -7.614433288574219
    9. '  
' → logprob: -7.739433288574219
    10. '    
' → logprob: -7.989433288574219

Token 8: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6009098291397095
    2. 'i' → logprob: -1.4759098291397095
    3. 'if' → logprob: -2.47590970993042
    4. '   ' → logprob: -2.97590970993042
    5. 'n' → logprob: -3.22590970993042
    6. ' i' → logprob: -4.10090970993042
    7. '```' → logprob: -4.97590970993042
    8. 'r' → logprob: -5.10090970993042
    9. ' ' → logprob: -5.22590970993042
    10. 's' → logprob: -5.35090970993042

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7627561688423157
    2. ' =' → logprob: -1.012756109237671
    3. ' +=' → logprob: -2.387756109237671
    4. 'u' → logprob: -3.137756109237671
    5. '+' → logprob: -4.26275634765625
    6. ' ' → logprob: -4.76275634765625
    7. '[' → logprob: -5.01275634765625
    8. '+=' → logprob: -6.01275634765625
    9. 'ult' → logprob: -6.38775634765625
    10. '.' → logprob: -7.88775634765625

Token 10: ' []
' (ID: 8911)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.504048228263855
    2. ' []' → logprob: -1.379048228263855
    3. '""' → logprob: -2.8790483474731445
    4. ''' → logprob: -3.1290483474731445
    5. '[]' → logprob: -3.5040483474731445
    6. ' ' → logprob: -5.1290483474731445
    7. ' ""' → logprob: -5.5040483474731445
    8. '''' → logprob: -5.8790483474731445
    9. ' "' → logprob: -7.1290483474731445
    10. '[' → logprob: -8.754048347473145

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2342660278081894
    2. '```' → logprob: -1.9842660427093506
    3. ' for' → logprob: -3.9842660427093506
    4. '\' → logprob: -4.9842658042907715
    5. ' ' → logprob: -4.9842658042907715
    6. '\n' → logprob: -5.1092658042907715
    7. '``' → logprob: -5.1092658042907715
    8. '    
' → logprob: -5.6092658042907715
    9. 'for' → logprob: -5.7342658042907715
    10. '_' → logprob: -5.9842658042907715

Token 12: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26428550481796265
    2. 'i' → logprob: -2.1392855644226074
    3. ' for' → logprob: -2.7642855644226074
    4. 'n' → logprob: -3.3892855644226074
    5. '   ' → logprob: -4.889285564422607
    6. '```' → logprob: -5.639285564422607
    7. 'prev' → logprob: -6.139285564422607
    8. 'count' (adapté à ' count') → logprob: -6.889285564422607
    9. ' i' → logprob: -7.014285564422607
    10. 'if' → logprob: -7.389285564422607

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3825216591358185
    2. ' =' → logprob: -1.507521629333496
    3. '=' → logprob: -2.882521629333496
    4. ' ' → logprob: -3.382521629333496
    5. '(' → logprob: -6.257521629333496
    6. 's' → logprob: -6.882521629333496
    7. '  ' → logprob: -7.132521629333496
    8. '_=' → logprob: -8.007521629333496
    9. '```' → logprob: -8.132521629333496
    10. ')' → logprob: -8.132521629333496

Token 14: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07374181598424911
    2. ' ' → logprob: -2.698741912841797
    3. '0' → logprob: -5.573741912841797
    4. '   ' → logprob: -13.448741912841797
    5. '  ' → logprob: -15.323741912841797
    6. ' ' → logprob: -16.073741912841797
    7. 's' → logprob: -16.323741912841797
    8. '`' → logprob: -17.011241912841797
    9. '    ' → logprob: -17.136241912841797
    10. '```' → logprob: -17.386241912841797

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012107107322663069
    2. '0' → logprob: -6.751210689544678
    3. ' ' → logprob: -10.126211166381836
    4. '   ' → logprob: -15.501211166381836
    5. '```' → logprob: -16.251211166381836
    6. '`' → logprob: -17.126211166381836
    7. 's' → logprob: -18.001211166381836
    8. '  ' → logprob: -18.251211166381836
    9. '[' → logprob: -18.751211166381836
    10. '    ' → logprob: -19.376211166381836

Token 16: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8762441873550415
    2. '_' → logprob: -1.5012441873550415
    3. 'for' → logprob: -1.7512441873550415
    4. ' for' → logprob: -2.376244068145752
    5. '\' → logprob: -3.626244068145752
    6. '   ' → logprob: -3.751244068145752
    7. '\n' → logprob: -4.376244068145752
    8. '<|end|>' → logprob: -5.251244068145752
    9. '\r' → logprob: -5.751244068145752
    10. ' ' → logprob: -5.876244068145752

Token 17: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2581091821193695
    2. 'for' → logprob: -2.3831090927124023
    3. '_' → logprob: -2.6331090927124023
    4. ',' → logprob: -3.7581090927124023
    5. ' ' → logprob: -4.008109092712402
    6. '   ' → logprob: -4.633109092712402
    7. '\' → logprob: -6.258109092712402
    8. ' ,' → logprob: -6.758109092712402
    9. '```' → logprob: -6.758109092712402
    10. ' _' → logprob: -7.133109092712402

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20478329062461853
    2. ' for' → logprob: -1.704783320426941
    3. 'i' → logprob: -6.7047834396362305
    4. '   ' → logprob: -6.9547834396362305
    5. 'n' → logprob: -7.0797834396362305
    6. '```' → logprob: -8.45478343963623
    7. ' ' → logprob: -9.82978343963623
    8. ' i' → logprob: -10.57978343963623
    9. 's' → logprob: -11.70478343963623
    10. '`' → logprob: -11.82978343963623

Token 19: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3058081269264221
    2. ' c' → logprob: -1.9308080673217773
    3. ' i' → logprob: -2.1808080673217773
    4. 'c' → logprob: -5.805808067321777
    5. ' char' → logprob: -6.430808067321777
    6. 'i' → logprob: -8.180808067321777
    7. '  ' → logprob: -9.055808067321777
    8. ' x' → logprob: -9.180808067321777
    9. 'ch' → logprob: -9.430808067321777
    10. ' s' → logprob: -9.555808067321777

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002421556506305933
    2. ' ' → logprob: -6.5024213790893555
    3. 'in' → logprob: -7.2524213790893555
    4. '  ' → logprob: -8.752421379089355
    5. '+' → logprob: -11.252421379089355
    6. ',' → logprob: -11.502421379089355
    7. '_' → logprob: -11.752421379089355
    8. 's' → logprob: -12.502421379089355
    9. '[' → logprob: -12.627421379089355
    10. '<|end|>' → logprob: -12.752421379089355

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005498887505382299
    2. 'range' → logprob: -5.255498886108398
    3. ' ' → logprob: -8.255498886108398
    4. '1' → logprob: -13.005498886108398
    5. ' xrange' → logprob: -13.630498886108398
    6. ' len' → logprob: -14.380498886108398
    7. '  ' → logprob: -15.380498886108398
    8. ' in' → logprob: -15.630498886108398
    9. ' r' → logprob: -15.880498886108398
    10. ' s' → logprob: -15.880498886108398

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006765229161828756
    2. '(len' → logprob: -5.006765365600586
    3. '1' → logprob: -10.256765365600586
    4. 'len' → logprob: -11.506765365600586
    5. ' (' → logprob: -12.756765365600586
    6. ' ' → logprob: -13.881765365600586
    7. ' len' → logprob: -14.756765365600586
    8. '(i' → logprob: -15.131765365600586
    9. '(
' → logprob: -16.131765365600586
    10. '```' → logprob: -16.756765365600586

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8590300139039755e-05
    2. 'len' → logprob: -10.000048637390137
    3. ' ' → logprob: -12.875048637390137
    4. ' len' → logprob: -15.500048637390137
    5. '   ' → logprob: -15.625048637390137
    6. '```' → logprob: -16.75004768371582
    7. '(len' → logprob: -18.37504768371582
    8. '2' → logprob: -19.00004768371582
    9. '0' → logprob: -19.37504768371582
    10. '(' → logprob: -20.00004768371582

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13666151463985443
    2. ',len' → logprob: -2.3866615295410156
    3. ' ,' → logprob: -3.5116615295410156
    4. ' ' → logprob: -6.511661529541016
    5. '(len' → logprob: -6.761661529541016
    6. ' len' → logprob: -6.886661529541016
    7. '<len' → logprob: -7.261661529541016
    8. ')' → logprob: -7.511661529541016
    9. '):' → logprob: -7.886661529541016
    10. 'len' → logprob: -8.261661529541016

Token 25: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0619756355881691
    2. ' len' → logprob: -2.8119757175445557
    3. '   ' → logprob: -12.561975479125977
    4. ')' → logprob: -13.186975479125977
    5. '(len' → logprob: -13.186975479125977
    6. ',len' → logprob: -15.561975479125977
    7. '```' → logprob: -15.561975479125977
    8. '	len' → logprob: -16.436975479125977
    9. '=len' → logprob: -16.561975479125977
    10. ' ' → logprob: -16.811975479125977

Token 26: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00011880126112373546
    2. '(' → logprob: -9.25011920928955
    3. 's' → logprob: -10.75011920928955
    4. ')' → logprob: -13.75011920928955
    5. ')s' → logprob: -17.375118255615234
    6. '(
' → logprob: -18.125118255615234
    7. ' s' → logprob: -18.250118255615234
    8. ' (' → logprob: -18.250118255615234
    9. '```' → logprob: -19.375118255615234
    10. '(

' → logprob: -19.625118255615234

Token 27: ')+' (ID: 16161)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.5786105394363403
    2. '):' → logprob: -0.8286105394363403
    3. ')' → logprob: -6.328610420227051
    4. '))' → logprob: -7.453610420227051
    5. ')):
' → logprob: -8.45361042022705
    6. ' ):' → logprob: -10.57861042022705
    7. '):
' → logprob: -10.70361042022705
    8. 's' → logprob: -11.70361042022705
    9. ' ' → logprob: -11.82861042022705
    10. ')+' → logprob: -11.95361042022705

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -16.000045776367188
    4. '   ' → logprob: -17.125045776367188
    5. '```' → logprob: -17.625045776367188
    6. '):' → logprob: -18.500045776367188
    7. '  ' → logprob: -19.125045776367188
    8. '0' → logprob: -20.125045776367188
    9. 's' → logprob: -20.750045776367188
    10. '``' → logprob: -21.125045776367188

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005729686468839645
    2. ':' → logprob: -5.505729675292969
    3. ')' → logprob: -6.505729675292969
    4. '):
' → logprob: -9.380729675292969
    5. ',' → logprob: -10.130729675292969
    6. ' ):' → logprob: -10.630729675292969
    7. ' ' → logprob: -13.630729675292969
    8. ':)' → logprob: -13.755729675292969
    9. '   ' → logprob: -14.005729675292969
    10. ':**' → logprob: -14.005729675292969

Token 30: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0964090824127197
    2. ' :' → logprob: -1.4714090824127197
    3. '   ' → logprob: -1.7214090824127197
    4. ':' → logprob: -2.0964090824127197
    5. '    ' → logprob: -3.2214090824127197
    6. ' ' → logprob: -3.3464090824127197
    7. 'if' → logprob: -3.7214090824127197
    8. '       ' → logprob: -4.096408843994141
    9. 's' → logprob: -5.096408843994141
    10. '  ' → logprob: -6.096408843994141

Token 31: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33287644386291504
    2. 'if' (adapté à ' if') → logprob: -1.832876443862915
    3. '       ' → logprob: -2.207876443862915
    4. '   ' → logprob: -4.957876205444336
    5. '    ' → logprob: -6.082876205444336
    6. ' ' → logprob: -6.582876205444336
    7. '           ' → logprob: -7.332876205444336
    8. '        ' → logprob: -7.582876205444336
    9. '```' → logprob: -7.832876205444336
    10. 's' → logprob: -8.457876205444336

Token 32: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.016308601945638657
    2. 's' → logprob: -4.141308784484863
    3. ' i' → logprob: -8.266308784484863
    4. 'i' → logprob: -11.266308784484863
    5. ' len' → logprob: -12.891308784484863
    6. ' ' → logprob: -13.516308784484863
    7. 'len' → logprob: -16.266307830810547
    8. '    ' → logprob: -16.516307830810547
    9. ' (' → logprob: -16.516307830810547
    10. '(s' → logprob: -16.766307830810547

Token 33: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8811460137367249
    2. '<' → logprob: -1.25614595413208
    3. '==' → logprob: -1.75614595413208
    4. ' <' → logprob: -2.13114595413208
    5. '<|end|>' → logprob: -5.63114595413208
    6. ' ' → logprob: -6.38114595413208
    7. '<len' → logprob: -6.50614595413208
    8. '>=' → logprob: -7.63114595413208
    9. 's' → logprob: -7.63114595413208
    10. ' >=' → logprob: -7.75614595413208

Token 34: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759458541870117
    2. 'len' → logprob: -0.8259458541870117
    3. '=len' → logprob: -13.200945854187012
    4. ' ' → logprob: -13.700945854187012
    5. 'length' → logprob: -13.700945854187012
    6. '<len' → logprob: -14.325945854187012
    7. '(len' → logprob: -14.450945854187012
    8. '	len' → logprob: -14.700945854187012
    9. '[len' → logprob: -15.200945854187012
    10. '<|end|>' → logprob: -15.450945854187012

Token 35: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.363617962459102e-05
    2. '(' → logprob: -10.000083923339844
    3. 's' → logprob: -10.375083923339844
    4. ' (' → logprob: -12.125083923339844
    5. ' s' → logprob: -14.000083923339844
    6. ')' → logprob: -14.750083923339844
    7. '```' → logprob: -16.375083923339844
    8. ' ' → logprob: -16.875083923339844
    9. '(
' → logprob: -17.250083923339844
    10. ')s' → logprob: -17.500083923339844

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001433324534446001
    2. ' and' → logprob: -7.376433372497559
    3. 'and' → logprob: -7.501433372497559
    4. ' )' → logprob: -8.376433372497559
    5. 's' → logprob: -11.626433372497559
    6. '):' → logprob: -12.001433372497559
    7. '):
' → logprob: -13.376433372497559
    8. '")' → logprob: -13.376433372497559
    9. '`)' → logprob: -13.376433372497559
    10. '))' → logprob: -14.001433372497559

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2520750164985657
    2. 'and' → logprob: -1.502074956893921
    3. ' ' → logprob: -9.1270751953125
    4. '       ' → logprob: -11.3770751953125
    5. '        ' → logprob: -11.7520751953125
    6. ')' → logprob: -12.6270751953125
    7. '   ' → logprob: -12.8770751953125
    8. '    ' → logprob: -12.8770751953125
    9. ' or' → logprob: -13.2520751953125
    10. '	and' → logprob: -13.2520751953125

Token 38: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.038042180240154266
    2. 's' → logprob: -3.2880420684814453
    3. '(s' → logprob: -14.913042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '	s' → logprob: -16.288042068481445
    6. '    ' → logprob: -16.538042068481445
    7. '   ' → logprob: -17.038042068481445
    8. ' ' → logprob: -17.538042068481445
    9. '<s' → logprob: -17.913042068481445
    10. ''s' → logprob: -18.038042068481445

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043579499470070004
    2. '[' → logprob: -7.750435829162598
    3. 'i' → logprob: -13.125435829162598
    4. '```' → logprob: -13.375435829162598
    5. ' [' → logprob: -14.000435829162598
    6. '[
' → logprob: -15.125435829162598
    7. '[I' → logprob: -15.625435829162598
    8. '`' → logprob: -16.50043487548828
    9. '(i' → logprob: -17.50043487548828
    10. ' i' → logprob: -17.50043487548828

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24448023736476898
    2. ']==' → logprob: -1.6194802522659302
    3. ' ]' → logprob: -3.9944801330566406
    4. '==' → logprob: -8.74448013305664
    5. ' ==' → logprob: -8.99448013305664
    6. ' ' → logprob: -9.36948013305664
    7. ']=='' → logprob: -10.99448013305664
    8. ']=' → logprob: -11.11948013305664
    9. '```' → logprob: -11.24448013305664
    10. '']' → logprob: -11.74448013305664

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19108878076076508
    2. '==' → logprob: -1.9410887956619263
    3. ' ' → logprob: -3.5660886764526367
    4. '=' → logprob: -6.691088676452637
    5. ']==' → logprob: -8.191088676452637
    6. '	' → logprob: -8.941088676452637
    7. '```' → logprob: -9.566088676452637
    8. ')' → logprob: -9.691088676452637
    9. '"' → logprob: -9.816088676452637
    10. ' =' → logprob: -10.066088676452637

Token 42: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08896095305681229
    2. 's' → logprob: -2.463960886001587
    3. ' ' → logprob: -10.838960647583008
    4. ' ' → logprob: -14.213960647583008
    5. '	s' → logprob: -14.713960647583008
    6. '(s' → logprob: -15.088960647583008
    7. '    ' → logprob: -15.213960647583008
    8. '   ' → logprob: -16.713960647583008
    9. '<|end|>' → logprob: -16.963960647583008
    10. ''s' → logprob: -17.088960647583008

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0325924449716695e-05
    2. 'i' → logprob: -12.12501049041748
    3. '[' → logprob: -12.37501049041748
    4. ' [' → logprob: -14.87501049041748
    5. '   ' → logprob: -16.375009536743164
    6. ' i' → logprob: -16.625009536743164
    7. '[
' → logprob: -17.125009536743164
    8. '[j' → logprob: -17.875009536743164
    9. '-' → logprob: -18.250009536743164
    10. ' ' → logprob: -18.375009536743164

Token 44: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006278486107476056
    2. ' -' → logprob: -7.3756279945373535
    3. '[i' → logprob: -14.500627517700195
    4. ' ' → logprob: -15.375627517700195
    5. ']' → logprob: -16.000627517700195
    6. '−' → logprob: -16.000627517700195
    7. '1' → logprob: -16.625627517700195
    8. '   ' → logprob: -16.625627517700195
    9. '-
' → logprob: -17.375627517700195
    10. '[-' → logprob: -18.000627517700195

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.251091377227567e-05
    2. ' ' → logprob: -10.125042915344238
    3. ']' → logprob: -13.250042915344238
    4. '   ' → logprob: -15.750042915344238
    5. '])' → logprob: -16.250041961669922
    6. '-' → logprob: -16.250041961669922
    7. '```' → logprob: -16.500041961669922
    8. ')' → logprob: -17.250041961669922
    9. '  ' → logprob: -17.687541961669922
    10. ']+' → logprob: -18.187541961669922

Token 46: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016979439184069633
    2. '):' → logprob: -4.266979217529297
    3. ' :' → logprob: -6.016979217529297
    4. ':
' → logprob: -9.016979217529297
    5. '       ' → logprob: -9.641979217529297
    6. ')' → logprob: -9.891979217529297
    7. ' ):' → logprob: -9.891979217529297
    8. ']:' → logprob: -10.391979217529297
    9. '):
' → logprob: -10.391979217529297
    10. ' and' → logprob: -12.766979217529297

Token 47: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040130361914634705
    2. '       ' → logprob: -3.915130376815796
    3. ':' → logprob: -5.040130138397217
    4. '\n' → logprob: -5.540130138397217
    5. '               ' → logprob: -6.665130138397217
    6. ' :' → logprob: -6.790130138397217
    7. '        ' → logprob: -6.915130138397217
    8. '\' → logprob: -6.915130138397217
    9. '            ' → logprob: -7.165130138397217
    10. '            
' → logprob: -7.415130138397217

Token 48: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.4772951304912567
    2. ' count' → logprob: -0.9772951602935791
    3. '               ' → logprob: -6.227294921875
    4. '           ' → logprob: -6.977294921875
    5. '	count' → logprob: -9.227294921875
    6. '_count' → logprob: -10.477294921875
    7. '$count' → logprob: -10.602294921875
    8. '            ' → logprob: -10.727294921875
    9. '[count' → logprob: -11.102294921875
    10. '       ' → logprob: -11.102294921875

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.002534759696573019
    2. '+=' → logprob: -6.752534866333008
    3. '+' → logprob: -6.877534866333008
    4. ' +' → logprob: -8.127534866333008
    5. ' ' → logprob: -10.752534866333008
    6. ' =' → logprob: -11.627534866333008
    7. '=' → logprob: -12.502534866333008
    8. '<|end|>' → logprob: -13.502534866333008
    9. ' ' → logprob: -14.252534866333008
    10. '            ' → logprob: -14.502534866333008

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.500553131103516
    4. '```' → logprob: -19.250553131103516
    5. '<|end|>' → logprob: -19.375553131103516
    6. '۱' → logprob: -20.250553131103516
    7. '１' → logprob: -20.625553131103516
    8. '  ' → logprob: -21.063053131103516
    9. '0' → logprob: -21.688053131103516
    10. '१' → logprob: -21.688053131103516

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -20.375001907348633
    6. '  ' → logprob: -22.125001907348633
    7. '۱' → logprob: -22.250001907348633
    8. '-' → logprob: -22.500001907348633
    9. '１' → logprob: -23.000001907348633
    10. '१' → logprob: -23.250001907348633

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06707803905010223
    2. 'else' → logprob: -3.317078113555908
    3. ' else' → logprob: -3.567078113555908
    4. '   ' → logprob: -9.06707763671875
    5. ')' → logprob: -10.19207763671875
    6. '	else' → logprob: -10.31707763671875
    7. '\n' → logprob: -10.56707763671875
    8. ':' → logprob: -10.81707763671875
    9. '
' → logprob: -10.81707763671875
    10. '<|end|>' → logprob: -10.81707763671875

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08501632511615753
    2. 'else' → logprob: -3.0850162506103516
    3. ' else' → logprob: -3.3350162506103516
    4. '   ' → logprob: -9.585016250610352
    5. ')' → logprob: -10.585016250610352
    6. '	else' → logprob: -10.835016250610352
    7. '           ' → logprob: -11.710016250610352
    8. '```' → logprob: -11.960016250610352
    9. 'elif' → logprob: -11.960016250610352
    10. '	' → logprob: -12.460016250610352

Token 54: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6205292344093323
    2. ' else' → logprob: -1.1205291748046875
    3. 'else' (adapté à ' else') → logprob: -1.9955291748046875
    4. '   ' → logprob: -8.745529174804688
    5. '	else' → logprob: -9.995529174804688
    6. '```' → logprob: -10.870529174804688
    7. '           ' → logprob: -10.995529174804688
    8. ')' → logprob: -11.620529174804688
    9. 'elif' → logprob: -11.620529174804688
    10. ':
' → logprob: -11.995529174804688

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034142236108891666
    2. ':
' → logprob: -8.750341415405273
    3. ' :' → logprob: -8.875341415405273
    4. '           ' → logprob: -11.125341415405273
    5. '       ' → logprob: -11.250341415405273
    6. '):' → logprob: -12.125341415405273
    7. ':return' → logprob: -12.125341415405273
    8. '   ' → logprob: -14.250341415405273
    9. ' :
' → logprob: -14.375341415405273
    10. '[' → logprob: -14.750341415405273

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08546721935272217
    2. '       ' → logprob: -2.9604673385620117
    3. ' res' → logprob: -3.5854673385620117
    4. 'res' → logprob: -6.960467338562012
    5. '   ' → logprob: -7.585467338562012
    6. '               ' → logprob: -8.835467338562012
    7. '        ' → logprob: -8.960467338562012
    8. '```' → logprob: -8.960467338562012
    9. '            ' → logprob: -9.460467338562012
    10. ' ' → logprob: -9.835467338562012

Token 57: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.08014919608831406
    2. 'res' (adapté à ' res') → logprob: -2.5801491737365723
    3. '           ' → logprob: -6.705149173736572
    4. '               ' → logprob: -11.20514965057373
    5. '       ' → logprob: -11.33014965057373
    6. '   ' → logprob: -12.83014965057373
    7. ' ' → logprob: -13.20514965057373
    8. '	res' → logprob: -13.20514965057373
    9. '```' → logprob: -14.58014965057373
    10. ' ' → logprob: -14.95514965057373

Token 58: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017449157312512398
    2. '.' → logprob: -6.376744747161865
    3. '.extend' → logprob: -10.501745223999023
    4. '.app' → logprob: -12.251745223999023
    5. 'append' → logprob: -12.376745223999023
    6. '.Append' → logprob: -12.751745223999023
    7. '.ap' → logprob: -13.251745223999023
    8. ' .' → logprob: -14.626745223999023
    9. ').' → logprob: -15.501745223999023
    10. '.push' → logprob: -15.751745223999023

Token 59: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.015767453238368034
    2. '(f' → logprob: -5.015767574310303
    3. '(' → logprob: -5.140767574310303
    4. '((' → logprob: -5.765767574310303
    5. 'str' → logprob: -11.140767097473145
    6. '('' → logprob: -12.390767097473145
    7. '('{}' → logprob: -13.515767097473145
    8. 'f' → logprob: -13.890767097473145
    9. '(s' → logprob: -14.140767097473145
    10. '("{}' → logprob: -14.265767097473145

Token 60: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00011343709047650918
    2. '(' → logprob: -9.750113487243652
    3. 'count' → logprob: -9.875113487243652
    4. '	count' → logprob: -14.125113487243652
    5. ' count' → logprob: -14.250113487243652
    6. ')' → logprob: -14.500113487243652
    7. '<count' → logprob: -14.500113487243652
    8. '[count' → logprob: -14.750113487243652
    9. '=count' → logprob: -15.250113487243652
    10. '$count' → logprob: -15.500113487243652

Token 61: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033661695197224617
    2. ')+' → logprob: -6.378365993499756
    3. '))' → logprob: -6.503365993499756
    4. ' )' → logprob: -9.378366470336914
    5. ')+'' → logprob: -10.503366470336914
    6. ')+"' → logprob: -11.003366470336914
    7. '))
' → logprob: -11.128366470336914
    8. '),' → logprob: -11.753366470336914
    9. ')
' → logprob: -12.253366470336914
    10. '+' → logprob: -13.003366470336914

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30846238136291504
    2. '       ' → logprob: -1.933462381362915
    3. '<|end|>' → logprob: -3.308462381362915
    4. '+' → logprob: -3.808462381362915
    5. ' +' → logprob: -3.933462381362915
    6. 's' → logprob: -4.058462142944336
    7. 'res' → logprob: -4.933462142944336
    8. ' ' → logprob: -5.308462142944336
    9. ')' → logprob: -5.433462142944336
    10. '[' → logprob: -6.558462142944336

Token 63: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.041834574192762375
    2. '           ' → logprob: -3.916834592819214
    3. 's' → logprob: -4.041834354400635
    4. ' res' → logprob: -6.041834354400635
    5. '       ' → logprob: -8.166834831237793
    6. ' s' → logprob: -8.291834831237793
    7. '            ' → logprob: -9.166834831237793
    8. '<|end|>' → logprob: -9.166834831237793
    9. '+' → logprob: -9.666834831237793
    10. '          ' → logprob: -10.041834831237793

Token 64: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05248893052339554
    2. '.extend' → logprob: -3.1774890422821045
    3. '.' → logprob: -4.677488803863525
    4. '.Append' → logprob: -10.802489280700684
    5. 'append' → logprob: -11.052489280700684
    6. '+.' → logprob: -11.052489280700684
    7. '.setdefault' → logprob: -11.177489280700684
    8. ' .' → logprob: -11.177489280700684
    9. '[-' → logprob: -11.302489280700684
    10. '+' → logprob: -11.927489280700684

Token 65: '(s' (ID: 1858)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.17820075154304504
    2. '(' → logprob: -2.6782007217407227
    3. '("("' → logprob: -3.3032007217407227
    4. '(s' → logprob: -3.4282007217407227
    5. '('(' → logprob: -4.303200721740723
    6. '(str' → logprob: -5.303200721740723
    7. ''(' → logprob: -5.678200721740723
    8. '("(' → logprob: -6.678200721740723
    9. ''' → logprob: -6.803200721740723
    10. '"(' → logprob: -7.678200721740723

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '[
' → logprob: -16.375
    4. 'i' → logprob: -17.125
    5. ' [' → logprob: -19.25
    6. '{i' → logprob: -19.375
    7. '   ' → logprob: -20.125
    8. '```' → logprob: -20.125
    9. '[I' → logprob: -20.5
    10. ')[' → logprob: -21.0

Token 67: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.949026571121067e-05
    2. '[i' → logprob: -9.625099182128906
    3. ' -' → logprob: -10.375099182128906
    4. '[-' → logprob: -13.625099182128906
    5. ''-' → logprob: -14.875099182128906
    6. '[' → logprob: -15.125099182128906
    7. 'i' → logprob: -15.500099182128906
    8. '-i' → logprob: -16.000099182128906
    9. '   ' → logprob: -17.375099182128906
    10. '[
' → logprob: -17.500099182128906

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.098748053773306e-05
    2. '-' → logprob: -9.87506103515625
    3. ' ' → logprob: -11.75006103515625
    4. '   ' → logprob: -14.25006103515625
    5. '```' → logprob: -14.50006103515625
    6. ']' → logprob: -16.75006103515625
    7. ')' → logprob: -16.93756103515625
    8. '  ' → logprob: -17.00006103515625
    9. 'i' → logprob: -17.25006103515625
    10. ' -' → logprob: -17.50006103515625

Token 69: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6957175135612488
    2. '])' → logprob: -0.9457175135612488
    3. '))' → logprob: -2.1957175731658936
    4. ''])' → logprob: -6.9457173347473145
    5. ')
' → logprob: -8.570717811584473
    6. '')' → logprob: -8.945717811584473
    7. '])
' → logprob: -9.445717811584473
    8. ')])' → logprob: -9.445717811584473
    9. '))
' → logprob: -10.320717811584473
    10. ']' → logprob: -10.445717811584473

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13019230961799622
    2. 'count' → logprob: -2.130192279815674
    3. '       ' → logprob: -6.130192279815674
    4. '   ' → logprob: -7.880192279815674
    5. ' count' → logprob: -8.255192756652832
    6. '
' → logprob: -8.755192756652832
    7. '            
' → logprob: -9.880192756652832
    8. '```' → logprob: -10.005192756652832
    9. '	count' → logprob: -10.255192756652832
    10. ' ' → logprob: -10.380192756652832

Token 71: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00047773998812772334
    2. ' count' → logprob: -8.00047779083252
    3. '           ' → logprob: -9.25047779083252
    4. '   ' → logprob: -10.25047779083252
    5. '       ' → logprob: -12.12547779083252
    6. '	count' → logprob: -12.50047779083252
    7. ' ' → logprob: -14.50047779083252
    8. 'Count' → logprob: -15.25047779083252
    9. '.count' → logprob: -15.62547779083252
    10. '$count' → logprob: -16.000476837158203

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858759790658951
    2. ' =' → logprob: -3.0485875606536865
    3. '＝' → logprob: -15.423587799072266
    4. '=
' → logprob: -17.298587799072266
    5. '1' → logprob: -17.673587799072266
    6. ' ' → logprob: -18.048587799072266
    7. ' =
' → logprob: -18.298587799072266
    8. '0' → logprob: -18.923587799072266
    9. '=

' → logprob: -18.923587799072266
    10. ' =)' → logprob: -20.173587799072266

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '0' → logprob: -15.7500581741333
    4. '   ' → logprob: -16.375059127807617
    5. '<|end|>' → logprob: -17.000059127807617
    6. '```' → logprob: -17.375059127807617
    7. '  ' → logprob: -18.937559127807617
    8. '۱' → logprob: -19.562559127807617
    9. '' → logprob: -19.625059127807617
    10. 'def' → logprob: -19.625059127807617

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '0' → logprob: -18.25
    4. '```' → logprob: -18.25
    5. '   ' → logprob: -19.625
    6. '<|end|>' → logprob: -19.9375
    7. 'def' → logprob: -20.0
    8. '۱' → logprob: -20.5625
    9. '१' → logprob: -20.8125
    10. '１' → logprob: -21.0

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30105504393577576
    2. '
' → logprob: -2.5510549545288086
    3. '\n' → logprob: -2.9260549545288086
    4. '    
' → logprob: -3.0510549545288086
    5. ' 
' → logprob: -3.1760549545288086
    6. ' return' → logprob: -4.051054954528809
    7. '  
' → logprob: -4.801054954528809
    8. 'return' → logprob: -4.926054954528809
    9. ' ' → logprob: -6.176054954528809
    10. '   
' → logprob: -6.926054954528809

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8361842036247253
    2. ' return' → logprob: -1.5861842632293701
    3. ' 
' → logprob: -1.9611842632293701
    4. 'return' → logprob: -2.58618426322937
    5. '    
' → logprob: -3.08618426322937
    6. '
' → logprob: -3.21118426322937
    7. ' ' → logprob: -3.33618426322937
    8. '  
' → logprob: -5.086184024810791
    9. '\n' → logprob: -5.211184024810791
    10. 'r' → logprob: -5.211184024810791

Token 77: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7165439128875732
    2. '   ' → logprob: -1.3415439128875732
    3. ' return' → logprob: -1.5915439128875732
    4. ' ' → logprob: -3.9665439128875732
    5. '
' → logprob: -4.466544151306152
    6. '    
' → logprob: -5.466544151306152
    7. 'r' → logprob: -5.466544151306152
    8. '\n' → logprob: -5.841544151306152
    9. '```' → logprob: -6.966544151306152
    10. '	return' → logprob: -7.091544151306152

Token 78: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.4908882975578308
    2. ' ''.' → logprob: -0.9908882975578308
    3. '"' → logprob: -4.7408881187438965
    4. ' "".' → logprob: -4.8658881187438965
    5. ''' → logprob: -8.490888595581055
    6. ' ' → logprob: -11.615888595581055
    7. '''' → logprob: -11.615888595581055
    8. 'res' → logprob: -12.115888595581055
    9. ' '' → logprob: -12.990888595581055
    10. ' res' → logprob: -13.365888595581055

Token 79: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.771655115589965e-05
    2. 'j' → logprob: -11.125018119812012
    3. ' join' → logprob: -14.000018119812012
    4. 'jo' → logprob: -14.250018119812012
    5. '.join' → logprob: -14.375018119812012
    6. ' ' → logprob: -15.500018119812012
    7. '```' → logprob: -15.625018119812012
    8. '.' → logprob: -15.750018119812012
    9. '   ' → logprob: -16.250017166137695
    10. '''.' → logprob: -16.375017166137695

Token 80: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005542247672565281
    2. '(' → logprob: -7.500554084777832
    3. 'res' → logprob: -15.000554084777832
    4. '(s' → logprob: -15.625554084777832
    5. '('' → logprob: -15.750554084777832
    6. ' (' → logprob: -15.750554084777832
    7. '(re' → logprob: -15.875554084777832
    8. '(r' → logprob: -16.37555503845215
    9. '(
' → logprob: -16.75055503845215
    10. '((' → logprob: -17.25055503845215

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -16.25
    4. '))' → logprob: -18.0
    5. '`)' → logprob: -18.5
    6. ')`' → logprob: -18.625
    7. '')' → logprob: -18.875
    8. ')return' → logprob: -19.625
    9. ')i' → logprob: -20.125
    10. '")' → logprob: -20.25

Token 82: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1325366050004959
    2. ')' → logprob: -3.0075366497039795
    3. '(
' → logprob: -4.2575364112854
    4. '#' → logprob: -4.3825364112854
    5. '
' → logprob: -4.7575364112854
    6. '\n' → logprob: -5.1325364112854
    7. 'n' → logprob: -5.2575364112854
    8. '\' → logprob: -5.5075364112854
    9. '  
' → logprob: -5.6325364112854
    10. '<|end|>' → logprob: -5.8825364112854

Token 83: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0001895935565698892
    2. 'True' → logprob: -8.625189781188965
    3. ' input' → logprob: -11.875189781188965
    4. '(True' → logprob: -13.125189781188965
    5. ' ' → logprob: -14.000189781188965
    6. ' not' → logprob: -15.625189781188965
    7. '=True' → logprob: -18.00018882751465
    8. '  ' → logprob: -18.50018882751465
    9. ' true' → logprob: -19.00018882751465
    10. ' Tru' → logprob: -19.62518882751465

Token 84: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4078441560268402
    2. ':' → logprob: -1.2828441858291626
    3. '():' → logprob: -3.657844066619873
    4. ' :' → logprob: -4.157844066619873
    5. ' (' → logprob: -5.157844066619873
    6. '(input' → logprob: -5.282844066619873
    7. ' ' → logprob: -6.907844066619873
    8. '()' → logprob: -7.282844066619873
    9. '(
' → logprob: -7.282844066619873
    10. 'input' → logprob: -7.532844066619873

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006601210217922926
    2. ' input' → logprob: -5.506601333618164
    3. '    
' → logprob: -6.881601333618164
    4. 'input' → logprob: -7.131601333618164
    5. ' s' → logprob: -8.256601333618164
    6. '(' → logprob: -9.506601333618164
    7. ' user' → logprob: -9.756601333618164
    8. ' 
' → logprob: -10.131601333618164
    9. '    ' → logprob: -10.506601333618164
    10. ' ' → logprob: -10.756601333618164

Token 86: ' n' (ID: 297)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.8061486482620239
    2. ' user' → logprob: -1.056148648262024
    3. ' input' → logprob: -2.6811485290527344
    4. ' s' → logprob: -3.4311485290527344
    5. 'inp' → logprob: -3.5561485290527344
    6. 'n' (adapté à ' n') → logprob: -3.9311485290527344
    7. 'user' → logprob: -4.056148529052734
    8. 's' → logprob: -4.306148529052734
    9. 'input' → logprob: -4.431148529052734
    10. ' n' → logprob: -4.931148529052734

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06325515359640121
    2. '=' → logprob: -3.1882550716400146
    3. 'umber' → logprob: -4.813255310058594
    4. 'um' → logprob: -4.938255310058594
    5. 'u' → logprob: -6.063255310058594
    6. ' ' → logprob: -7.063255310058594
    7. 'o' → logprob: -7.313255310058594
    8. 'ext' → logprob: -7.813255310058594
    9. '_' → logprob: -7.938255310058594
    10. '  ' → logprob: -10.188255310058594

Token 88: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8068723678588867
    2. ' input' → logprob: -0.9318723678588867
    3. 'int' → logprob: -2.1818723678588867
    4. ' int' → logprob: -3.0568723678588867
    5. ' ' → logprob: -10.556872367858887
    6. '   ' → logprob: -11.056872367858887
    7. '=input' → logprob: -11.681872367858887
    8. '(input' → logprob: -12.681872367858887
    9. '=int' → logprob: -13.056872367858887
    10. '  ' → logprob: -13.181872367858887

Token 89: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10024290531873703
    2. '(' → logprob: -2.350242853164673
    3. 'input' → logprob: -10.350242614746094
    4. '(
' → logprob: -12.850242614746094
    5. ' (' → logprob: -14.100242614746094
    6. ' input' → logprob: -15.350242614746094
    7. '=input' → logprob: -15.725242614746094
    8. '(raw' → logprob: -16.225242614746094
    9. '(in' → logprob: -16.350242614746094
    10. '()' → logprob: -16.600242614746094

Token 90: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20518864691257477
    2. '())' → logprob: -1.8301886320114136
    3. '("' → logprob: -4.580188751220703
    4. '(' → logprob: -5.205188751220703
    5. '('' → logprob: -5.330188751220703
    6. '("("' → logprob: -5.955188751220703
    7. '()>' → logprob: -7.455188751220703
    8. '(">' → logprob: -7.580188751220703
    9. '()))' → logprob: -8.205188751220703
    10. '(""))' → logprob: -9.080188751220703

Token 91: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0464385449886322
    2. '   ' → logprob: -3.796438455581665
    3. ' ' → logprob: -4.796438694000244
    4. '<|end|>' → logprob: -4.921438694000244
    5. 'if' → logprob: -5.671438694000244
    6. '    ' → logprob: -6.671438694000244
    7. ' n' → logprob: -6.921438694000244
    8. ' 
' → logprob: -7.046438694000244
    9. 'n' → logprob: -8.671438217163086
    10. '<|end|>' → logprob: -8.921438217163086

Token 92: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07962168753147125
    2. '   ' → logprob: -3.4546217918395996
    3. 'if' (adapté à ' if') → logprob: -4.2046217918396
    4. ' s' → logprob: -4.3296217918396
    5. ' print' → logprob: -4.9546217918396
    6. ' n' → logprob: -5.9546217918396
    7. ' next' → logprob: -6.0796217918396
    8. 'n' → logprob: -7.0796217918396
    9. 's' → logprob: -7.2046217918396
    10. 'print' → logprob: -7.2046217918396

Token 93: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0002714681322686374
    2. 'n' → logprob: -8.375271797180176
    3. ' not' → logprob: -10.125271797180176
    4. ' ' → logprob: -14.625271797180176
    5. '	n' → logprob: -15.500271797180176
    6. ' ' → logprob: -15.875271797180176
    7. 'not' → logprob: -17.25027084350586
    8. ' н' → logprob: -18.00027084350586
    9. '(n' → logprob: -18.12527084350586
    10. '<|end|>' → logprob: -18.12527084350586

Token 94: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10107268393039703
    2. ' <=' → logprob: -2.8510727882385254
    3. '==' → logprob: -3.3510727882385254
    4. ' <' → logprob: -6.476072788238525
    5. '<=' → logprob: -6.726072788238525
    6. ' ' → logprob: -8.226072311401367
    7. '<|end|>' → logprob: -8.601072311401367
    8. ')' → logprob: -9.851072311401367
    9. '<' → logprob: -10.851072311401367
    10. '=' → logprob: -11.601072311401367

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975130677223206
    2. ' ' → logprob: -1.8047512769699097
    3. '<|end|>' → logprob: -12.1797513961792
    4. ' ' → logprob: -14.5547513961792
    5. '  ' → logprob: -14.9297513961792
    6. '۰' → logprob: -15.3047513961792
    7. ' 
' → logprob: -16.304750442504883
    8. ')' → logprob: -16.742250442504883
    9. '   ' → logprob: -17.179750442504883
    10. '```' → logprob: -17.367250442504883

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00280784466303885
    2. ' ' → logprob: -5.8778076171875
    3. '-' → logprob: -13.6278076171875
    4. ' -' → logprob: -13.8778076171875
    5. '۰' → logprob: -15.5028076171875
    6. '   ' → logprob: -15.6903076171875
    7. '<|end|>' → logprob: -15.8778076171875
    8. '  ' → logprob: -16.5028076171875
    9. '```' → logprob: -16.5653076171875
    10. ')' → logprob: -16.8153076171875

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004481746815145016
    2. ':
' → logprob: -5.504481792449951
    3. ' :' → logprob: -8.504481315612793
    4. '   ' → logprob: -8.629481315612793
    5. ' :
' → logprob: -11.004481315612793
    6. '       ' → logprob: -13.129481315612793
    7. '    ' → logprob: -14.004481315612793
    8. '  ' → logprob: -14.754481315612793
    9. '	break' → logprob: -15.004481315612793
    10. ' ' → logprob: -15.129481315612793

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10216281563043594
    2. ':' → logprob: -2.7271628379821777
    3. '   ' → logprob: -3.4771628379821777
    4. ':
' → logprob: -7.477162837982178
    5. '    ' → logprob: -9.60216236114502
    6. ' ' → logprob: -10.22716236114502
    7. '	' → logprob: -10.47716236114502
    8. '	break' → logprob: -10.60216236114502
    9. '      ' → logprob: -10.97716236114502
    10. '<|end|>' → logprob: -11.10216236114502

Token 99: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10330570489168167
    2. '       ' → logprob: -3.1033058166503906
    3. '   ' → logprob: -3.2283058166503906
    4. 'break' (adapté à ' break') → logprob: -4.353305816650391
    5. '	break' → logprob: -7.353305816650391
    6. '
' → logprob: -9.72830581665039
    7. '```' → logprob: -11.10330581665039
    8. ' ' → logprob: -11.47830581665039
    9. '           ' → logprob: -11.60330581665039
    10. '    
' → logprob: -11.72830581665039

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2763235867023468
    2. '   ' → logprob: -1.5263235569000244
    3. '    
' → logprob: -3.9013235569000244
    4. 'n' → logprob: -6.0263237953186035
    5. '  
' → logprob: -8.401323318481445
    6. ' 
' → logprob: -8.401323318481445
    7. ' s' → logprob: -8.776323318481445
    8. 'print' → logprob: -8.901323318481445
    9. 'input' → logprob: -9.026323318481445
    10. ' n' → logprob: -9.276323318481445

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12725229561328888
    2. '
' → logprob: -3.0022523403167725
    3. ' s' → logprob: -4.002252101898193
    4. '    
' → logprob: -4.502252101898193
    5. 'input' → logprob: -4.627252101898193
    6. ' print' → logprob: -5.002252101898193
    7. 'n' → logprob: -5.127252101898193
    8. 'print' → logprob: -5.252252101898193
    9. 's' → logprob: -5.752252101898193
    10. '```' → logprob: -5.877252101898193

Token 102: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.13759920001029968
    2. 'print' → logprob: -3.137599229812622
    3. '   ' → logprob: -3.512599229812622
    4. ' s' → logprob: -3.512599229812622
    5. 'result' → logprob: -4.262598991394043
    6. 'sequence' → logprob: -5.512598991394043
    7. 'output' → logprob: -6.387598991394043
    8. ' print' → logprob: -6.512598991394043
    9. 'n' → logprob: -6.887598991394043
    10. ' result' → logprob: -7.637598991394043

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023265859112143517
    2. '=' → logprob: -3.773265838623047
    3. ' ' → logprob: -11.148265838623047
    4. '  ' → logprob: -13.523265838623047
    5. ',' → logprob: -13.523265838623047
    6. ' ='' → logprob: -13.523265838623047
    7. ' ="' → logprob: -14.648265838623047
    8. '   ' → logprob: -14.773265838623047
    9. 's' → logprob: -15.273265838623047
    10. '='' → logprob: -15.273265838623047

Token 104: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6997278928756714
    2. ' "' → logprob: -1.1997278928756714
    3. ''' → logprob: -2.074728012084961
    4. ' '' → logprob: -2.574728012084961
    5. '   ' → logprob: -8.824728012084961
    6. ' ' → logprob: -10.449728012084961
    7. ''s' → logprob: -11.949728012084961
    8. '1' → logprob: -12.074728012084961
    9. 'input' → logprob: -12.074728012084961
    10. '  ' → logprob: -12.324728012084961

Token 105: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001158211671281606
    2. '(' → logprob: -9.500115394592285
    3. '().' → logprob: -10.750115394592285
    4. ' ()' → logprob: -11.625115394592285
    5. '()
' → logprob: -12.500115394592285
    6. '())' → logprob: -12.750115394592285
    7. '()>' → logprob: -13.750115394592285
    8. '("' → logprob: -14.500115394592285
    9. '('' → logprob: -14.625115394592285
    10. '（）' → logprob: -14.875115394592285

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2279994785785675
    2. ' for' → logprob: -1.8529994487762451
    3. 'for' → logprob: -3.352999448776245
    4. 's' → logprob: -5.602999687194824
    5. 'print' → logprob: -5.602999687194824
    6. 'output' → logprob: -6.227999687194824
    7. '
' → logprob: -6.602999687194824
    8. 'current' → logprob: -8.102999687194824
    9. ' s' → logprob: -8.352999687194824
    10. 'result' → logprob: -8.602999687194824

Token 107: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.161983922123909
    2. 'print' → logprob: -1.9119839668273926
    3. '   ' → logprob: -7.036983966827393
    4. 'result' → logprob: -7.661983966827393
    5. 's' → logprob: -8.036983489990234
    6. ' for' → logprob: -10.036983489990234
    7. 'output' → logprob: -10.661983489990234
    8. 'res' → logprob: -11.786983489990234
    9. 'current' → logprob: -12.786983489990234
    10. 'while' → logprob: -12.911983489990234

Token 108: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08913858234882355
    2. '_' → logprob: -2.4641385078430176
    3. ' i' → logprob: -8.839138984680176
    4. ' ' → logprob: -10.589138984680176
    5. ' range' → logprob: -10.589138984680176
    6. '_range' → logprob: -13.839138984680176
    7. 'range' → logprob: -14.464138984680176
    8. ' in' → logprob: -14.464138984680176
    9. ' ' → logprob: -14.464138984680176
    10. '_i' → logprob: -15.089138984680176

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00468727620318532
    2. 'in' → logprob: -5.379687309265137
    3. ' ' → logprob: -10.004687309265137
    4. 'range' → logprob: -11.129687309265137
    5. '  ' → logprob: -12.879687309265137
    6. ' range' → logprob: -13.379687309265137
    7. '   ' → logprob: -14.004687309265137
    8. ' _' → logprob: -14.129687309265137
    9. 'n' → logprob: -14.629687309265137
    10. 's' → logprob: -15.254687309265137

Token 110: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804619982838631
    2. ' range' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.288045883178711
    4. 's' → logprob: -14.038045883178711
    5. '(range' → logprob: -14.038045883178711
    6. '	range' → logprob: -14.663045883178711
    7. 'ange' → logprob: -14.788045883178711
    8. '  ' → logprob: -16.03804588317871
    9. '   ' → logprob: -16.41304588317871
    10. '_' → logprob: -16.53804588317871

Token 111: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016539888747502118
    2. '(' → logprob: -8.750164985656738
    3. 'n' → logprob: -12.750164985656738
    4. ' (' → logprob: -12.875164985656738
    5. ' n' → logprob: -13.500164985656738
    6. '	n' → logprob: -17.875165939331055
    7. '(
' → logprob: -18.625165939331055
    8. ' ' → logprob: -19.250165939331055
    9. 's' → logprob: -19.625165939331055
    10. '(s' → logprob: -20.250165939331055

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10277827084064484
    2. '-' → logprob: -3.352778196334839
    3. ' -' → logprob: -3.602778196334839
    4. '):
' → logprob: -3.852778196334839
    5. ' ):' → logprob: -4.477778434753418
    6. '   ' → logprob: -6.727778434753418
    7. ')' → logprob: -7.227778434753418
    8. ' ):
' → logprob: -7.352778434753418
    9. ' )' → logprob: -8.852778434753418
    10. '+' → logprob: -9.477778434753418

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00250918953679502
    2. 's' → logprob: -6.252509117126465
    3. ' s' → logprob: -7.502509117126465
    4. '   ' → logprob: -11.127509117126465
    5. '(s' → logprob: -12.752509117126465
    6. '      ' → logprob: -13.127509117126465
    7. ',' → logprob: -13.127509117126465
    8. '<|end|>' → logprob: -14.002509117126465
    9. '           ' → logprob: -14.377509117126465
    10. '        
' → logprob: -14.377509117126465

Token 114: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2599892020225525
    2. 's' (adapté à ' s') → logprob: -1.5099892616271973
    3. '       ' → logprob: -4.884989261627197
    4. '   ' → logprob: -7.884989261627197
    5. '           ' → logprob: -10.134988784790039
    6. ' ' → logprob: -10.259988784790039
    7. '<|end|>' → logprob: -11.759988784790039
    8. '
' → logprob: -13.009988784790039
    9. '	s' → logprob: -13.384988784790039
    10. '        ' → logprob: -13.634988784790039

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' =
' → logprob: -17.798587799072266
    4. 's' → logprob: -18.298587799072266
    5. 'look' → logprob: -18.673587799072266
    6. ' =)' → logprob: -19.048587799072266
    7. '=s' → logprob: -19.423587799072266
    8. ' ' → logprob: -19.673587799072266
    9. '＝' → logprob: -19.923587799072266
    10. '	' → logprob: -20.048587799072266

Token 116: ' look' (ID: 1631)
  Prédit: ' look'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.012511532753705978
    2. 'look' → logprob: -4.387511730194092
    3. ' ' → logprob: -14.387511253356934
    4. ' looks' → logprob: -15.012511253356934
    5. '.look' → logprob: -15.512511253356934
    6. ' "' → logprob: -16.26251220703125
    7. '"' → logprob: -16.26251220703125
    8. ' ' → logprob: -16.51251220703125
    9. ' lookup' → logprob: -16.51251220703125
    10. 'Look' → logprob: -16.57501220703125

Token 117: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.625
    3. ' _' → logprob: -17.0
    4. ' and' → logprob: -18.375
    5. '_s' → logprob: -18.5
    6. '_or' → logprob: -18.875
    7. '_a' → logprob: -19.125
    8. '_AND' → logprob: -19.125
    9. '_to' → logprob: -19.5
    10. 'and' → logprob: -19.75

Token 118: '_s' (ID: 1278)
  Prédit: 'say'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'say' → logprob: -0.02748328074812889
    2. 's' → logprob: -3.6524832248687744
    3. ' say' → logprob: -7.1524834632873535
    4. '_s' → logprob: -8.277482986450195
    5. 'ay' → logprob: -10.402482986450195
    6. ' ' → logprob: -11.152482986450195
    7. ' s' → logprob: -11.152482986450195
    8. '.say' → logprob: -11.277482986450195
    9. 'Say' → logprob: -11.589982986450195
    10. '	s' → logprob: -11.652482986450195

Token 119: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.0037364219315350056
    2. 'say' → logprob: -5.62873649597168
    3. 's' → logprob: -9.12873649597168
    4. 'y' → logprob: -11.00373649597168
    5. ' say' → logprob: -12.50373649597168
    6. 'ays' → logprob: -13.37873649597168
    7. 'Say' → logprob: -14.00373649597168
    8. '   ' → logprob: -14.50373649597168
    9. 'and' → logprob: -14.69123649597168
    10. '.say' → logprob: -14.94123649597168

Token 120: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.375001907348633
    4. 's' → logprob: -17.750001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '(ss' → logprob: -21.750001907348633
    7. '((' → logprob: -22.125001907348633
    8. ' s' → logprob: -22.375001907348633
    9. ')(' → logprob: -22.500001907348633
    10. '```' → logprob: -23.000001907348633

Token 121: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.62501335144043
    4. '))' → logprob: -16.62501335144043
    5. '<|end|>' → logprob: -17.00001335144043
    6. ')`' → logprob: -17.12501335144043
    7. ')return' → logprob: -17.37501335144043
    8. ')

' → logprob: -17.37501335144043
    9. ')
' → logprob: -18.25001335144043
    10. ')n' → logprob: -18.25001335144043

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029756737872958183
    2. 'print' → logprob: -3.529756784439087
    3. ' print' → logprob: -12.404756546020508
    4. '```' → logprob: -13.654756546020508
    5. '
' → logprob: -14.279756546020508
    6. '    
' → logprob: -15.904756546020508
    7. '       ' → logprob: -16.529756546020508
    8. '	print' → logprob: -17.154756546020508
    9. '``' → logprob: -17.904756546020508
    10. 'Print' → logprob: -18.529756546020508

Token 123: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.9875325708417222e-05
    2. '   ' → logprob: -11.000029563903809
    3. ' print' → logprob: -11.250029563903809
    4. '```' → logprob: -17.250030517578125
    5. '	print' → logprob: -17.750030517578125
    6. '.print' → logprob: -21.625030517578125
    7. '
' → logprob: -21.625030517578125
    8. '``' → logprob: -21.750030517578125
    9. '#print' → logprob: -21.875030517578125
    10. '    
' → logprob: -22.375030517578125

Token 124: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009211080614477396
    2. '(' → logprob: -7.000921249389648
    3. 's' → logprob: -12.250921249389648
    4. ' (' → logprob: -12.750921249389648
    5. '()' → logprob: -13.625921249389648
    6. '('' → logprob: -14.500921249389648
    7. '((' → logprob: -16.50092124938965
    8. '(S' → logprob: -17.75092124938965
    9. '(len' → logprob: -17.75092124938965
    10. '(f' → logprob: -18.25092124938965

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. '))' → logprob: -15.375000953674316
    4. ')
' → logprob: -16.5
    5. '())' → logprob: -17.625
    6. ')`' → logprob: -18.0
    7. '`)' → logprob: -18.125
    8. '')' → logprob: -18.625
    9. '")' → logprob: -19.625
    10. '()' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 56.10%
Précision adaptée (1ère position): 62.60%
Précision (top 10): 91.87%
================================================================================
