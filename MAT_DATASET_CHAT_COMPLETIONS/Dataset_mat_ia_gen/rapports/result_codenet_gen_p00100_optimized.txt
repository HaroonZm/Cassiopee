================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    sales = {}
    order = []
    for _ in range(n):
        i, p, q = input().split()
        p, q = int(p), int(q)
        if i not in sales:
            sales[i] = 0
            order.append(i)
        sales[i] += p * q
    res = [eid for eid in order if sales[eid] >= 1000000]
    if res:
        print('\n'.join(res))
    else:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8856312036514282
    2. '   ' → logprob: -1.1356312036514282
    3. ' ' → logprob: -1.7606312036514282
    4. '```' → logprob: -2.7606310844421387
    5. '       ' → logprob: -5.135631084442139
    6. '  ' → logprob: -5.760631084442139
    7. ' ```' → logprob: -5.885631084442139
    8. ' (' → logprob: -6.135631084442139
    9. '    
' → logprob: -6.385631084442139
    10. '[' → logprob: -6.760631084442139

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34604600071907043
    2. ' input' → logprob: -1.346045970916748
    3. 'input' → logprob: -3.846045970916748
    4. 'int' → logprob: -4.596045970916748
    5. ' n' → logprob: -7.596045970916748
    6. ' ' → logprob: -9.346046447753906
    7. 'n' → logprob: -10.221046447753906
    8. '```' → logprob: -10.971046447753906
    9. ' randint' → logprob: -10.971046447753906
    10. ' eval' → logprob: -11.221046447753906

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0034862698521465063
    2. ' ' → logprob: -6.003486156463623
    3. ' not' → logprob: -7.378486156463623
    4. 'n' → logprob: -7.878486156463623
    5. ' ' → logprob: -12.378486633300781
    6. 'not' → logprob: -13.628486633300781
    7. '  ' → logprob: -15.003486633300781
    8. ' (' → logprob: -15.753486633300781
    9. '(n' → logprob: -15.878486633300781
    10. '<|end|>' → logprob: -16.12848663330078

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.5491004129871726e-05
    2. ' :' → logprob: -10.875045776367188
    3. ':
' → logprob: -11.125045776367188
    4. '   ' → logprob: -12.250045776367188
    5. '):' → logprob: -13.125045776367188
    6. '       ' → logprob: -13.375045776367188
    7. ':return' → logprob: -13.625045776367188
    8. '    ' → logprob: -14.500045776367188
    9. ':\' → logprob: -14.625045776367188
    10. '():' → logprob: -14.875045776367188

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9910358190536499
    2. '   ' → logprob: -0.9910358190536499
    3. '\n' → logprob: -1.86603581905365
    4. '\' → logprob: -3.1160359382629395
    5. '```' → logprob: -3.9910359382629395
    6. '    
' → logprob: -4.1160359382629395
    7. 'n' → logprob: -5.1160359382629395
    8. '\r' → logprob: -5.6160359382629395
    9. '
' → logprob: -5.9910359382629395
    10. ':
' → logprob: -6.3660359382629395

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' sales' (ID: 7155)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5292903780937195
    2. ' ' → logprob: -1.1542904376983643
    3. '    ' → logprob: -3.9042904376983643
    4. ':' → logprob: -4.279290199279785
    5. '\' → logprob: -4.529290199279785
    6. '\n' → logprob: -4.529290199279785
    7. ')' → logprob: -4.654290199279785
    8. '(' → logprob: -5.529290199279785
    9. '#' → logprob: -5.529290199279785
    10. '  ' → logprob: -5.654290199279785

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2173343300819397
    2. '[' → logprob: -2.717334270477295
    3. '=' → logprob: -3.217334270477295
    4. '_' → logprob: -3.467334270477295
    5. '_data' → logprob: -3.467334270477295
    6. '_count' → logprob: -4.717334270477295
    7. '_amount' → logprob: -5.467334270477295
    8. '_counts' → logprob: -6.217334270477295
    9. 's' → logprob: -6.342334270477295
    10. '   ' → logprob: -6.592334270477295

Token 22: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2756754159927368
    2. ' {}' → logprob: -2.5256752967834473
    3. '{}' → logprob: -2.9006752967834473
    4. '[]' → logprob: -3.0256752967834473
    5. ' [' → logprob: -3.5256752967834473
    6. ' list' → logprob: -3.9006752967834473
    7. 'list' → logprob: -5.400675296783447
    8. '[' → logprob: -6.025675296783447
    9. ' ' → logprob: -7.900675296783447
    10. '[int' → logprob: -8.775675773620605

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015538262203335762
    2. '    
' → logprob: -5.015538215637207
    3. '<|end|>' → logprob: -5.515538215637207
    4. '    ' → logprob: -6.390538215637207
    5. '\n' → logprob: -7.390538215637207
    6. ' ' → logprob: -7.640538215637207
    7. '\' → logprob: -7.640538215637207
    8. '[' → logprob: -8.765538215637207
    9. ' 
' → logprob: -8.890538215637207
    10. '       ' → logprob: -8.890538215637207

Token 24: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21512776613235474
    2. ' for' → logprob: -2.09012770652771
    3. '   ' → logprob: -3.21512770652771
    4. ' ' → logprob: -3.96512770652771
    5. '    ' → logprob: -5.965127944946289
    6. 'n' → logprob: -5.965127944946289
    7. '	for' → logprob: -6.590127944946289
    8. '\t' → logprob: -7.090127944946289
    9. ' 
' → logprob: -7.215127944946289
    10. 't' → logprob: -7.840127944946289

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02808351255953312
    2. '=' → logprob: -4.153083324432373
    3. '_' → logprob: -5.653083324432373
    4. '[' → logprob: -5.653083324432373
    5. 's' → logprob: -5.653083324432373
    6. ' ' → logprob: -8.153083801269531
    7. '[]' → logprob: -8.403083801269531
    8. '=[]' → logprob: -8.653083801269531
    9. '_list' → logprob: -9.028083801269531
    10. 'ed' → logprob: -9.403083801269531

Token 26: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3133111894130707
    2. '[]' → logprob: -1.313311219215393
    3. '[' → logprob: -10.813311576843262
    4. ' ' → logprob: -11.063311576843262
    5. ' [' → logprob: -12.563311576843262
    6. '[]}' → logprob: -12.938311576843262
    7. '   ' → logprob: -13.063311576843262
    8. 'list' → logprob: -13.688311576843262
    9. '0' → logprob: -13.688311576843262
    10. '{}' → logprob: -14.438311576843262

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06909028440713882
    2. '<|end|>' → logprob: -3.3190903663635254
    3. ' ' → logprob: -4.194090366363525
    4. '    
' → logprob: -5.194090366363525
    5. '    ' → logprob: -5.694090366363525
    6. '  ' → logprob: -6.444090366363525
    7. ' 
' → logprob: -6.444090366363525
    8. 'n' → logprob: -7.569090366363525
    9. '<|end|>' → logprob: -7.694090366363525
    10. '  
' → logprob: -7.944090366363525

Token 28: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3267252743244171
    2. '   ' → logprob: -1.9517252445220947
    3. ' for' → logprob: -2.0767252445220947
    4. ' ' → logprob: -5.576725482940674
    5. 'n' → logprob: -6.576725482940674
    6. '	for' → logprob: -6.576725482940674
    7. '    ' → logprob: -6.951725482940674
    8. '<|end|>' → logprob: -6.951725482940674
    9. '    
' → logprob: -7.326725482940674
    10. '  ' → logprob: -7.826725482940674

Token 29: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3017416000366211
    2. ' i' → logprob: -1.426741600036621
    3. ' _' → logprob: -3.926741600036621
    4. '  ' → logprob: -8.176741600036621
    5. '_' → logprob: -8.676741600036621
    6. 'i' → logprob: -9.676741600036621
    7. ' ‌' → logprob: -9.676741600036621
    8. ' item' → logprob: -10.676741600036621
    9. ' ▁' → logprob: -10.676741600036621
    10. ' range' → logprob: -11.176741600036621

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002264090348035097
    2. 'in' → logprob: -6.127264022827148
    3. ' ' → logprob: -9.502264022827148
    4. 'range' → logprob: -13.877264022827148
    5. ' i' → logprob: -14.002264022827148
    6. '_' → logprob: -14.877264022827148
    7. '  ' → logprob: -15.002264022827148
    8. ' _' → logprob: -15.127264022827148
    9. '	in' → logprob: -15.252264022827148
    10. '<|end|>' → logprob: -15.377264022827148

Token 31: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.126930832862854
    2. ' range' → logprob: -2.1269307136535645
    3. '	range' → logprob: -13.501931190490723
    4. ' ' → logprob: -14.501931190490723
    5. 'rang' → logprob: -15.001931190490723
    6. '(range' → logprob: -15.126931190490723
    7. 'ran' → logprob: -15.876931190490723
    8. '_range' → logprob: -17.001930236816406
    9. ' ran' → logprob: -17.751930236816406
    10. '  ' → logprob: -17.751930236816406

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16903391480445862
    2. '(' → logprob: -2.294034004211426
    3. ' (' → logprob: -3.294034004211426
    4. ' n' → logprob: -4.044034004211426
    5. 'n' → logprob: -11.044034004211426
    6. ' ' → logprob: -11.794034004211426
    7. '()' → logprob: -13.419034004211426
    8. ' )' → logprob: -13.669034004211426
    9. '(int' → logprob: -13.794034004211426
    10. '(s' → logprob: -14.044034004211426

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006450793240219355
    2. ')' → logprob: -5.131450653076172
    3. ' ):' → logprob: -8.381450653076172
    4. ':' → logprob: -8.381450653076172
    5. '):
' → logprob: -10.381450653076172
    6. '   ' → logprob: -11.006450653076172
    7. ' )' → logprob: -12.256450653076172
    8. '+' → logprob: -13.506450653076172
    9. ',' → logprob: -13.506450653076172
    10. '():' → logprob: -13.756450653076172

Token 34: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1657743453979492
    2. '    ' → logprob: -1.2907743453979492
    3. '       ' → logprob: -1.7907743453979492
    4. ' ' → logprob: -1.7907743453979492
    5. ' s' → logprob: -3.290774345397949
    6. '    
' → logprob: -4.415774345397949
    7. ' 
' → logprob: -4.915774345397949
    8. '<|end|>' → logprob: -5.040774345397949
    9. '     
' → logprob: -5.790774345397949
    10. ' input' → logprob: -5.790774345397949

Token 35: ' i' (ID: 575)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6356070041656494
    2. ' item' → logprob: -1.6356070041656494
    3. ' product' → logprob: -2.1356070041656494
    4. 'line' → logprob: -3.3856070041656494
    5. '   ' → logprob: -3.7606070041656494
    6. 'product' → logprob: -3.8856070041656494
    7. ' name' → logprob: -4.01060676574707
    8. ' s' → logprob: -4.26060676574707
    9. 'item' → logprob: -4.38560676574707
    10. 'name' → logprob: -4.76060676574707

Token 36: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002723683137446642
    2. 'tem' → logprob: -6.502723693847656
    3. ' =' → logprob: -7.377723693847656
    4. 'np' → logprob: -8.127723693847656
    5. '=' → logprob: -9.252723693847656
    6. 'm' → logprob: -10.002723693847656
    7. ' n' → logprob: -10.377723693847656
    8. 'f' → logprob: -10.877723693847656
    9. ' ' → logprob: -11.002723693847656
    10. 't' → logprob: -11.252723693847656

Token 37: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.728273868560791
    2. 'p' → logprob: -2.228273868560791
    3. 'j' → logprob: -2.603273868560791
    4. ' ' → logprob: -2.853273868560791
    5. ' s' → logprob: -2.978273868560791
    6. 'name' → logprob: -3.228273868560791
    7. 'd' → logprob: -3.978273868560791
    8. 'q' → logprob: -3.978273868560791
    9. 'a' → logprob: -4.103273868560791
    10. 'v' → logprob: -4.353273868560791

Token 38: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15592052042484283
    2. ',' → logprob: -2.4059205055236816
    3. '=' → logprob: -3.5309205055236816
    4. 'rice' → logprob: -3.9059205055236816
    5. ' ' → logprob: -5.905920505523682
    6. 'iece' → logprob: -7.405920505523682
    7. 'r' → logprob: -7.655920505523682
    8. 'ieces' → logprob: -8.15592098236084
    9. 'rices' → logprob: -8.78092098236084
    10. ' ,' → logprob: -9.40592098236084

Token 39: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16099323332309723
    2. ' q' → logprob: -2.0359933376312256
    3. 'c' → logprob: -5.4109930992126465
    4. 's' → logprob: -5.5359930992126465
    5. 'v' → logprob: -5.7859930992126465
    6. ' =' → logprob: -6.5359930992126465
    7. ' s' → logprob: -6.9109930992126465
    8. 'a' → logprob: -6.9109930992126465
    9. ' ' → logprob: -7.4109930992126465
    10. 'b' → logprob: -7.7859930992126465

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490157753229141
    2. '=' → logprob: -2.929901599884033
    3. ',' → logprob: -11.304901123046875
    4. ' ' → logprob: -12.304901123046875
    5. '=input' → logprob: -13.929901123046875
    6. ')' → logprob: -14.929901123046875
    7. '   ' → logprob: -15.054901123046875
    8. '    ' → logprob: -15.179901123046875
    9. '  ' → logprob: -16.179901123046875
    10. ' ,' → logprob: -16.429901123046875

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04674858972430229
    2. 'input' → logprob: -3.296748638153076
    3. ' map' → logprob: -4.796748638153076
    4. 'map' → logprob: -7.921748638153076
    5. ' ' → logprob: -10.296748161315918
    6. ' ' → logprob: -12.546748161315918
    7. '	input' → logprob: -13.171748161315918
    8. '   ' → logprob: -13.296748161315918
    9. ' int' → logprob: -13.296748161315918
    10. '(input' → logprob: -13.421748161315918

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003302954835817218
    2. '()' → logprob: -5.753303050994873
    3. '(' → logprob: -9.003302574157715
    4. '('' → logprob: -14.003302574157715
    5. ' ().' → logprob: -14.878302574157715
    6. '("' → logprob: -15.378302574157715
    7. 'split' → logprob: -16.37830352783203
    8. '()
' → logprob: -16.50330352783203
    9. ' ()' → logprob: -16.50330352783203
    10. '.split' → logprob: -16.50330352783203

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010604646377032623
    2. 'strip' → logprob: -9.375105857849121
    3. 'rstrip' → logprob: -10.875105857849121
    4. ' split' → logprob: -13.500105857849121
    5. 'rs' → logprob: -14.875105857849121
    6. 'spl' → logprob: -15.250105857849121
    7. '(split' → logprob: -16.250106811523438
    8. '.split' → logprob: -17.750106811523438
    9. '```' → logprob: -17.875106811523438
    10. ' ' → logprob: -18.000106811523438

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1400497853755951
    2. '('' → logprob: -2.265049695968628
    3. '(' → logprob: -3.640049695968628
    4. '("' → logprob: -8.515049934387207
    5. '(',' → logprob: -9.015049934387207
    6. '("("' → logprob: -9.015049934387207
    7. '())' → logprob: -10.390049934387207
    8. ')' → logprob: -10.765049934387207
    9. '   ' → logprob: -10.890049934387207
    10. '(),' → logprob: -11.265049934387207

Token 45: '       ' (ID: 309)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.3946259021759033
    2. '       ' → logprob: -1.5196259021759033
    3. '
' → logprob: -1.8946259021759033
    4. '<|end|>' → logprob: -2.1446259021759033
    5. ' 
' → logprob: -2.3946259021759033
    6. '   ' → logprob: -2.7696259021759033
    7. '        
' → logprob: -2.7696259021759033
    8. '   
' → logprob: -4.644625663757324
    9. '  
' → logprob: -4.769625663757324
    10. ')' → logprob: -5.394625663757324

Token 46: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9033271670341492
    2. ' i' → logprob: -1.903327226638794
    3. ' 
' → logprob: -2.153327226638794
    4. 'i' → logprob: -2.778327226638794
    5. ' p' → logprob: -2.778327226638794
    6. '<|end|>' → logprob: -3.153327226638794
    7. 's' → logprob: -3.403327226638794
    8. '    ' → logprob: -3.528327226638794
    9. ' q' → logprob: -4.403326988220215
    10. ')' → logprob: -4.403326988220215

Token 47: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16101443767547607
    2. '=' → logprob: -1.911014437675476
    3. ',' → logprob: -7.411014556884766
    4. '=int' → logprob: -9.161014556884766
    5. ')' → logprob: -10.661014556884766
    6. '_' → logprob: -11.286014556884766
    7. ' ' → logprob: -12.036014556884766
    8. 'int' → logprob: -12.286014556884766
    9. '   ' → logprob: -12.411014556884766
    10. '_price' → logprob: -13.036014556884766

Token 48: ' q' (ID: 2335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12381096184253693
    2. 'int' → logprob: -2.4988110065460205
    3. '<|end|>' → logprob: -4.373810768127441
    4. ' q' → logprob: -4.623810768127441
    5. ' int' → logprob: -5.498810768127441
    6. 'q' → logprob: -5.998810768127441
    7. '=int' → logprob: -6.498810768127441
    8. '    ' → logprob: -7.123810768127441
    9. ')' → logprob: -7.623810768127441
    10. '  ' → logprob: -8.123810768127441

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023387014865875
    2. '=' → logprob: -1.9102338552474976
    3. ',' → logprob: -12.035233497619629
    4. '=int' → logprob: -13.035233497619629
    5. ' ' → logprob: -14.535233497619629
    6. ')' → logprob: -15.285233497619629
    7. '＝' → logprob: -15.535233497619629
    8. 'int' → logprob: -15.785233497619629
    9. ' =
' → logprob: -15.910233497619629
    10. '<|end|>' → logprob: -15.910233497619629

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04820256680250168
    2. 'int' → logprob: -3.4232025146484375
    3. ' float' → logprob: -4.2982025146484375
    4. ' ' → logprob: -8.048202514648438
    5. 'float' → logprob: -8.048202514648438
    6. ' map' → logprob: -8.548202514648438
    7. 'map' → logprob: -11.923202514648438
    8. ' ' → logprob: -13.048202514648438
    9. ' 
' → logprob: -13.173202514648438
    10. ' list' → logprob: -13.298202514648438

Token 51: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0031790214125066996
    2. '(' → logprob: -5.75317907333374
    3. '(q' → logprob: -13.878178596496582
    4. '()' → logprob: -15.878178596496582
    5. ' (' → logprob: -16.1281795501709
    6. '('' → logprob: -17.0031795501709
    7. '(
' → logprob: -17.2531795501709
    8. ')' → logprob: -17.2531795501709
    9. '(i' → logprob: -18.0031795501709
    10. ' p' → logprob: -18.2531795501709

Token 52: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007930141873657703
    2. '),' → logprob: -5.382930278778076
    3. ' ,' → logprob: -6.132930278778076
    4. ')' → logprob: -6.882930278778076
    5. ',q' → logprob: -10.007929801940918
    6. ' ),' → logprob: -10.632929801940918
    7. '<|end|>' → logprob: -11.257929801940918
    8. ',p' → logprob: -11.632929801940918
    9. ' ' → logprob: -11.632929801940918
    10. '<|end|>' → logprob: -13.007929801940918

Token 53: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5942271947860718
    2. 'int' → logprob: -1.3442271947860718
    3. ' q' → logprob: -1.7192271947860718
    4. 'q' → logprob: -4.844227313995361
    5. ' ' → logprob: -8.969226837158203
    6. ' 
' → logprob: -10.344226837158203
    7. ' ' → logprob: -11.594226837158203
    8. '<int' → logprob: -12.219226837158203
    9. '=int' → logprob: -12.844226837158203
    10. '[int' → logprob: -12.969226837158203

Token 54: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.003604224883019924
    2. '(' → logprob: -5.628604412078857
    3. 'q' → logprob: -13.3786039352417
    4. ')' → logprob: -13.7536039352417
    5. ' (' → logprob: -14.2536039352417
    6. ' q' → logprob: -15.2536039352417
    7. '(quantity' → logprob: -15.2536039352417
    8. '	q' → logprob: -15.3786039352417
    9. '()' → logprob: -16.253604888916016
    10. '(
' → logprob: -16.503604888916016

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7133641196996905e-05
    2. ')
' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.75002670288086
    4. ')

' → logprob: -14.50002670288086
    5. '*' → logprob: -14.87502670288086
    6. '<|end|>' → logprob: -16.00002670288086
    7. '   ' → logprob: -16.25002670288086
    8. '}' → logprob: -16.25002670288086
    9. ')`' → logprob: -16.50002670288086
    10. '))' → logprob: -16.50002670288086

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7641414999961853
    2. '   ' → logprob: -1.26414155960083
    3. '
' → logprob: -1.88914155960083
    4. '<|end|>' → logprob: -2.63914155960083
    5. '    
' → logprob: -4.26414155960083
    6. '        
' → logprob: -5.76414155960083
    7. ' 
' → logprob: -5.76414155960083
    8. ' ' → logprob: -6.13914155960083
    9. '  
' → logprob: -6.63914155960083
    10. '<|end|>' → logprob: -6.76414155960083

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6578859090805054
    2. '   ' → logprob: -1.4078859090805054
    3. 'if' (adapté à ' if') → logprob: -1.6578859090805054
    4. ' sales' → logprob: -3.907886028289795
    5. 'sales' → logprob: -3.907886028289795
    6. ' for' → logprob: -6.532886028289795
    7. 'for' → logprob: -6.907886028289795
    8. '       ' → logprob: -7.532886028289795
    9. '    ' → logprob: -7.532886028289795
    10. 'total' → logprob: -7.782886028289795

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03130149468779564
    2. 'i' → logprob: -3.531301498413086
    3. ' ' → logprob: -7.031301498413086
    4. ' p' → logprob: -7.406301498413086
    5. 'p' → logprob: -10.781301498413086
    6. '  ' → logprob: -11.531301498413086
    7. ' (' → logprob: -11.906301498413086
    8. ' q' → logprob: -12.406301498413086
    9. '(' → logprob: -12.531301498413086
    10. ' ' → logprob: -12.656301498413086

Token 59: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2875182032585144
    2. ' not' → logprob: -1.4125182628631592
    3. ' ' → logprob: -5.53751802444458
    4. 'in' → logprob: -6.53751802444458
    5. 'not' → logprob: -7.03751802444458
    6. '  ' → logprob: -10.787518501281738
    7. ' n' → logprob: -10.912518501281738
    8. '<|end|>' → logprob: -11.287518501281738
    9. '   ' → logprob: -12.037518501281738
    10. ' no' → logprob: -12.287518501281738

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07238631695508957
    2. 'in' → logprob: -2.8223862648010254
    3. '<|end|>' → logprob: -4.697386264801025
    4. '<|end|>' → logprob: -6.947386264801025
    5. ' sales' → logprob: -9.197386741638184
    6. ' ' → logprob: -9.947386741638184
    7. 'sales' → logprob: -10.072386741638184
    8. '  ' → logprob: -10.697386741638184
    9. '    ' → logprob: -11.447386741638184
    10. '   ' → logprob: -12.259886741638184

Token 61: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.054922789335250854
    2. 'sales' → logprob: -2.9299228191375732
    3. ' sale' → logprob: -10.429923057556152
    4. 'sale' → logprob: -11.804923057556152
    5. 's' → logprob: -13.679923057556152
    6. ' order' → logprob: -14.179923057556152
    7. '_sales' → logprob: -15.179923057556152
    8. '.sales' → logprob: -15.429923057556152
    9. 'order' → logprob: -15.929923057556152
    10. '```' → logprob: -15.929923057556152

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001830410328693688
    2. ']:' → logprob: -9.37518310546875
    3. '):' → logprob: -9.75018310546875
    4. ']' → logprob: -11.50018310546875
    5. ' :' → logprob: -12.00018310546875
    6. ':
' → logprob: -12.25018310546875
    7. '<|end|>' → logprob: -12.50018310546875
    8. ':**' → logprob: -13.12518310546875
    9. '.setdefault' → logprob: -13.50018310546875
    10. '<|end|>' → logprob: -13.62518310546875

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024837462697178125
    2. ':
' → logprob: -6.50248384475708
    3. '       ' → logprob: -7.50248384475708
    4. '):' → logprob: -9.127483367919922
    5. '   ' → logprob: -9.502483367919922
    6. '<|end|>' → logprob: -9.627483367919922
    7. ' :' → logprob: -9.752483367919922
    8. ' =' → logprob: -11.002483367919922
    9. '           ' → logprob: -11.377483367919922
    10. '    ' → logprob: -11.627483367919922

Token 64: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.020892426371574402
    2. ' order' → logprob: -4.14589262008667
    3. 'sales' (adapté à ' sales') → logprob: -5.64589262008667
    4. ' sale' → logprob: -7.27089262008667
    5. ' ' → logprob: -8.895892143249512
    6. '    ' → logprob: -8.895892143249512
    7. 'order' → logprob: -9.020892143249512
    8. ' 
' → logprob: -10.020892143249512
    9. '            ' → logprob: -10.895892143249512
    10. '        ' → logprob: -11.020892143249512

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.32392441527918e-05
    2. '[' → logprob: -9.875053405761719
    3. '[I' → logprob: -14.750053405761719
    4. 'i' → logprob: -15.250053405761719
    5. '\[' → logprob: -15.250053405761719
    6. ' [' → logprob: -16.37505340576172
    7. ']' → logprob: -16.50005340576172
    8. '
' → logprob: -16.87505340576172
    9. '

' → logprob: -16.87505340576172
    10. '[]' → logprob: -17.00005340576172

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.5014188799541444e-05
    2. ']=' → logprob: -10.250044822692871
    3. ' =' → logprob: -12.625044822692871
    4. ' ]' → logprob: -12.625044822692871
    5. '=' → logprob: -14.000044822692871
    6. '']' → logprob: -14.125044822692871
    7. '"]' → logprob: -14.250044822692871
    8. '`]' → logprob: -15.375044822692871
    9. ',' → logprob: -16.000045776367188
    10. '   ' → logprob: -16.500045776367188

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5775976181030273
    2. '=' → logprob: -0.8275976181030273
    3. ']' → logprob: -6.452597618103027
    4. ']=' → logprob: -10.702597618103027
    5. ',' → logprob: -11.452597618103027
    6. 's' → logprob: -11.577597618103027
    7. '<|end|>' → logprob: -11.577597618103027
    8. ')' → logprob: -11.827597618103027
    9. ' ' → logprob: -12.327597618103027
    10. '[' → logprob: -12.327597618103027

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20476941764354706
    2. ' ' → logprob: -2.2047693729400635
    3. ' p' → logprob: -3.2047693729400635
    4. 'p' → logprob: -3.5797693729400635
    5. ' [' → logprob: -6.079769611358643
    6. 'q' → logprob: -6.704769611358643
    7. ' q' → logprob: -6.829769611358643
    8. '[' → logprob: -7.079769611358643
    9. '[p' → logprob: -7.329769611358643
    10. ' (' → logprob: -9.079769134521484

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1575022041797638
    2. 'p' → logprob: -2.0325021743774414
    3. ' ' → logprob: -5.032502174377441
    4. ' p' → logprob: -5.657502174377441
    5. '[' → logprob: -6.282502174377441
    6. '[p' → logprob: -6.532502174377441
    7. 'q' → logprob: -7.282502174377441
    8. ' [' → logprob: -8.532502174377441
    9. '(p' → logprob: -8.907502174377441
    10. '[]' → logprob: -9.032502174377441

Token 70: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8972877264022827
    2. ' 
' → logprob: -1.2722877264022827
    3. '    
' → logprob: -2.3972878456115723
    4. '
' → logprob: -2.5222878456115723
    5. '<|end|>' → logprob: -3.0222878456115723
    6. '   
' → logprob: -3.6472878456115723
    7. '   ' → logprob: -3.7722878456115723
    8. ' +' → logprob: -4.397287845611572
    9. ' ' → logprob: -4.522287845611572
    10. '  
' → logprob: -4.772287845611572

Token 71: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.983041524887085
    2. 'order' (adapté à ' order') → logprob: -0.983041524887085
    3. ' order' → logprob: -1.608041524887085
    4. '       ' → logprob: -3.358041524887085
    5. '           ' → logprob: -4.983041763305664
    6. '	order' → logprob: -5.108041763305664
    7. ' ' → logprob: -6.733041763305664
    8. '    ' → logprob: -6.983041763305664
    9. '
' → logprob: -7.483041763305664
    10. '  ' → logprob: -8.358041763305664

Token 73: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16024687886238098
    2. '.' → logprob: -1.9102468490600586
    3. '.app' → logprob: -11.535246849060059
    4. ' .' → logprob: -12.160246849060059
    5. '.ap' → logprob: -12.660246849060059
    6. '.extend' → logprob: -12.910246849060059
    7. '.add' → logprob: -13.785246849060059
    8. '.setdefault' → logprob: -14.660246849060059
    9. '.Append' → logprob: -16.285247802734375
    10. '.py' → logprob: -16.410247802734375

Token 74: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '((' → logprob: -16.62509536743164
    4. '(
' → logprob: -19.62509536743164
    5. ' (' → logprob: -20.12509536743164
    6. '(ii' → logprob: -20.25009536743164
    7. '(I' → logprob: -20.62509536743164
    8. 'i' → logprob: -20.87509536743164
    9. '(a' → logprob: -21.12509536743164
    10. '(s' → logprob: -21.12509536743164

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003034074034076184
    2. ')
' → logprob: -8.125303268432617
    3. ' )' → logprob: -12.375303268432617
    4. '   ' → logprob: -13.500303268432617
    5. '       ' → logprob: -13.875303268432617
    6. ')
' → logprob: -15.125303268432617
    7. ')

' → logprob: -16.375303268432617
    8. ')\
' → logprob: -16.875303268432617
    9. ')n' → logprob: -17.000303268432617
    10. '）' → logprob: -17.000303268432617

Token 76: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.235684335231781
    2. 'sales' → logprob: -2.610684394836426
    3. ' sales' → logprob: -2.860684394836426
    4. '<|end|>' → logprob: -3.360684394836426
    5. ' ' → logprob: -4.110684394836426
    6. ' 
' → logprob: -4.985684394836426
    7. 's' → logprob: -5.110684394836426
    8. '	s' → logprob: -5.360684394836426
    9. '       ' → logprob: -6.110684394836426
    10. '    
' → logprob: -6.235684394836426

Token 77: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.6357465386390686
    2. 'sales' (adapté à ' sales') → logprob: -0.7607465386390686
    3. '<|end|>' → logprob: -6.510746479034424
    4. 's' → logprob: -7.260746479034424
    5. ' 
' → logprob: -8.260746955871582
    6. '   ' → logprob: -9.010746955871582
    7. '_sales' → logprob: -9.010746955871582
    8. 'sale' → logprob: -9.635746955871582
    9. '
' → logprob: -9.635746955871582
    10. '.sales' → logprob: -9.885746955871582

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.125016212463379
    3. '```' → logprob: -14.250016212463379
    4. 'i' → logprob: -15.375016212463379
    5. '[I' → logprob: -15.500016212463379
    6. ' [' → logprob: -16.000017166137695
    7. '\[' → logprob: -16.000017166137695
    8. '][' → logprob: -16.500017166137695
    9. '[s' → logprob: -17.375017166137695
    10. '[...]' → logprob: -18.000017166137695

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2830089032649994
    2. ']+=' → logprob: -1.4080089330673218
    3. ' +=' → logprob: -6.908009052276611
    4. '+=' → logprob: -7.533009052276611
    5. ']+' → logprob: -9.033008575439453
    6. ' ]' → logprob: -9.033008575439453
    7. ')' → logprob: -10.158008575439453
    8. '+' → logprob: -10.283008575439453
    9. '```' → logprob: -13.033008575439453
    10. '[' → logprob: -13.283008575439453

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.114378422498703
    2. '+=' → logprob: -2.6143784523010254
    3. '+' → logprob: -3.3643784523010254
    4. '<|end|>' → logprob: -9.239377975463867
    5. ' ' → logprob: -9.739377975463867
    6. ']+=' → logprob: -10.489377975463867
    7. ' +' → logprob: -10.614377975463867
    8. '=' → logprob: -10.739377975463867
    9. '[' → logprob: -10.739377975463867
    10. '+='' → logprob: -11.364377975463867

Token 81: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01113848201930523
    2. 'p' → logprob: -4.511138439178467
    3. ' ' → logprob: -10.011138916015625
    4. ' q' → logprob: -10.261138916015625
    5. ' (' → logprob: -12.511138916015625
    6. 'q' → logprob: -12.761138916015625
    7. '(p' → logprob: -13.011138916015625
    8. '(' → logprob: -14.386138916015625
    9. '    ' → logprob: -15.386138916015625
    10. ' `' → logprob: -15.511138916015625

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.055768053978681564
    2. '*' → logprob: -2.9307680130004883
    3. '*q' → logprob: -7.055768013000488
    4. ' ' → logprob: -11.430768013000488
    5. ' ' → logprob: -11.805768013000488
    6. ' *
' → logprob: -12.805768013000488
    7. ' **' → logprob: -15.430768013000488
    8. '*
' → logprob: -15.555768013000488
    9. ' *

' → logprob: -15.805768013000488
    10. '0' → logprob: -15.805768013000488

Token 83: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.2519410252571106
    2. 'q' → logprob: -1.5019409656524658
    3. '	q' → logprob: -12.126940727233887
    4. ' ' → logprob: -12.376940727233887
    5. '    ' → logprob: -15.001940727233887
    6. '*q' → logprob: -15.126940727233887
    7. ' ' → logprob: -15.126940727233887
    8. '_q' → logprob: -15.501940727233887
    9. '   ' → logprob: -15.751940727233887
    10. '(q' → logprob: -15.751940727233887

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8811118602752686
    2. 'for' → logprob: -1.1311118602752686
    3. ' for' → logprob: -1.5061118602752686
    4. '   ' → logprob: -3.5061118602752686
    5. '\n' → logprob: -6.006112098693848
    6. ' 
' → logprob: -6.131112098693848
    7. 'print' → logprob: -6.256112098693848
    8. '    
' → logprob: -6.256112098693848
    9. '```' → logprob: -6.756112098693848
    10. '  
' → logprob: -7.631112098693848

Token 85: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4173392653465271
    2. ' for' → logprob: -1.5423393249511719
    3. '   ' → logprob: -2.792339324951172
    4. 'print' → logprob: -3.042339324951172
    5. ' print' → logprob: -4.542339324951172
    6. '    
' → logprob: -6.292339324951172
    7. '
' → logprob: -6.417339324951172
    8. ' 
' → logprob: -6.917339324951172
    9. '```' → logprob: -7.167339324951172
    10. '\n' → logprob: -7.542339324951172

Token 86: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04730302840471268
    2. ' for' → logprob: -3.5473029613494873
    3. 'print' → logprob: -4.172303199768066
    4. '   ' → logprob: -6.672303199768066
    5. ' print' → logprob: -8.797303199768066
    6. '
' → logprob: -8.797303199768066
    7. '    
' → logprob: -8.922303199768066
    8. '```' → logprob: -10.047303199768066
    9. ' 
' → logprob: -10.172303199768066
    10. 'while' → logprob: -10.547303199768066

Token 87: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21958550810813904
    2. 'ult' → logprob: -1.7195855379104614
    3. 'ul' → logprob: -5.219585418701172
    4. 'ults' → logprob: -5.219585418701172
    5. ' =' → logprob: -5.469585418701172
    6. ' ' → logprob: -6.969585418701172
    7. '=' → logprob: -7.094585418701172
    8. '[' → logprob: -7.344585418701172
    9. 'ultat' → logprob: -8.594585418701172
    10. 'ulta' → logprob: -9.594585418701172

Token 88: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6580495238304138
    2. '"' → logprob: -1.2830495834350586
    3. '[]' → logprob: -1.7830495834350586
    4. ''' → logprob: -4.408049583435059
    5. '""' → logprob: -4.783049583435059
    6. '[' → logprob: -5.158049583435059
    7. ' "' → logprob: -5.408049583435059
    8. ' [' → logprob: -6.158049583435059
    9. ' ""' → logprob: -7.408049583435059
    10. ' ' → logprob: -7.408049583435059

Token 89: 'eid' (ID: 100615)
  Prédit: 'sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sales' → logprob: -0.8788997530937195
    2. '(s' → logprob: -1.0038998126983643
    3. 'f' → logprob: -2.5038998126983643
    4. 'str' → logprob: -3.1288998126983643
    5. ' (' → logprob: -3.5038998126983643
    6. ' sales' → logprob: -3.7538998126983643
    7. '(f' → logprob: -5.128899574279785
    8. ' str' → logprob: -5.253899574279785
    9. '(str' → logprob: -5.253899574279785
    10. '(' → logprob: -5.378899574279785

Token 90: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22612600028514862
    2. ' for' → logprob: -2.476125955581665
    3. ']' → logprob: -2.601125955581665
    4. 'for' → logprob: -3.851125955581665
    5. ')' → logprob: -4.476126194000244
    6. '(' → logprob: -5.976126194000244
    7. ')]' → logprob: -5.976126194000244
    8. ' ' → logprob: -6.851126194000244
    9. ':' → logprob: -7.226126194000244
    10. ' ]' → logprob: -7.601126194000244

Token 91: ' eid' (ID: 131397)
  Prédit: ' eid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eid' → logprob: -0.00526091456413269
    2. 'eid' → logprob: -5.255260944366455
    3. ' ' → logprob: -11.005260467529297
    4. ' order' → logprob: -12.005260467529297
    5. ' e' → logprob: -13.380260467529297
    6. ' sales' → logprob: -14.005260467529297
    7. ' ei' → logprob: -14.880260467529297
    8. ' in' → logprob: -15.380260467529297
    9. 'e' → logprob: -15.505260467529297
    10. '```' → logprob: -15.630260467529297

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02342168241739273
    2. ' ' → logprob: -4.023421764373779
    3. 'in' → logprob: -6.398421764373779
    4. ' eid' → logprob: -6.398421764373779
    5. ',' → logprob: -7.273421764373779
    6. ' i' → logprob: -7.523421764373779
    7. ' e' → logprob: -8.773421287536621
    8. '  ' → logprob: -8.898421287536621
    9. 'e' → logprob: -9.648421287536621
    10. '<|end|>' → logprob: -10.023421287536621

Token 93: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.018257638439536095
    2. 'order' → logprob: -4.0182576179504395
    3. ' sales' → logprob: -9.393258094787598
    4. ' ' → logprob: -11.018258094787598
    5. 'sales' → logprob: -12.643258094787598
    6. ' sale' → logprob: -13.018258094787598
    7. '	order' → logprob: -13.393258094787598
    8. '(order' → logprob: -15.018258094787598
    9. '   ' → logprob: -15.518258094787598
    10. 'sale' → logprob: -15.768258094787598

Token 94: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.033961713314056396
    2. 'if' → logprob: -3.408961772918701
    3. ']' → logprob: -8.158961296081543
    4. '	if' → logprob: -11.658961296081543
    5. ' ' → logprob: -11.783961296081543
    6. '   ' → logprob: -11.783961296081543
    7. '  ' → logprob: -12.908961296081543
    8. '    ' → logprob: -13.908961296081543
    9. ' ]' → logprob: -14.283961296081543
    10. '<|end|>' → logprob: -14.783961296081543

Token 95: ' sales' (ID: 7155)
  Prédit: ' sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sales' → logprob: -0.038092322647571564
    2. 'sales' → logprob: -3.2880923748016357
    3. ' sale' → logprob: -10.663092613220215
    4. '    ' → logprob: -12.538092613220215
    5. '_sales' → logprob: -12.663092613220215
    6. ' not' → logprob: -12.788092613220215
    7. '(s' → logprob: -12.913092613220215
    8. ' s' → logprob: -13.038092613220215
    9. 'sale' → logprob: -13.163092613220215
    10. 's' → logprob: -13.413092613220215

Token 96: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0018640223424881697
    2. '[s' → logprob: -6.751863956451416
    3. '[' → logprob: -7.376863956451416
    4. '[i' → logprob: -9.876864433288574
    5. '	e' → logprob: -12.626864433288574
    6. '```' → logprob: -13.001864433288574
    7. '

' → logprob: -13.126864433288574
    8. 'eid' → logprob: -13.751864433288574
    9. '[]' → logprob: -14.126864433288574
    10. '==' → logprob: -14.251864433288574

Token 97: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -3.273621405242011e-05
    2. 'i' → logprob: -10.500032424926758
    3. '[id' → logprob: -13.000032424926758
    4. 'eid' → logprob: -13.750032424926758
    5. 'd' → logprob: -15.250032424926758
    6. '[' → logprob: -15.375032424926758
    7. '[i' → logprob: -15.750032424926758
    8. '```' → logprob: -15.750032424926758
    9. ']' → logprob: -16.187532424926758
    10. '[e' → logprob: -16.250032424926758

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1943467855453491
    2. ']==' → logprob: -1.1943467855453491
    3. ' ==' → logprob: -1.3193467855453491
    4. '==' → logprob: -2.3193469047546387
    5. '=' → logprob: -4.694346904754639
    6. '>' → logprob: -4.819346904754639
    7. ']>' → logprob: -5.319346904754639
    8. ']>=' → logprob: -6.569346904754639
    9. ' >' → logprob: -6.694346904754639
    10. ' ]' → logprob: -7.069346904754639

Token 99: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.109799325466156
    2. ' ==' → logprob: -2.359799385070801
    3. '=' → logprob: -4.859799385070801
    4. '>' → logprob: -6.484799385070801
    5. ']==' → logprob: -9.3597993850708
    6. '>=' → logprob: -9.7347993850708
    7. ' >' → logprob: -10.6097993850708
    8. '%' → logprob: -10.9847993850708
    9. ')' → logprob: -10.9847993850708
    10. ' =' → logprob: -11.2347993850708

Token 100: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.28383129835128784
    2. ' ' → logprob: -1.5338313579559326
    3. '500' → logprob: -5.1588311195373535
    4. '200' → logprob: -5.5338311195373535
    5. '10' → logprob: -5.6588311195373535
    6. ' max' → logprob: -5.7838311195373535
    7. ' min' → logprob: -6.4088311195373535
    8. '   ' → logprob: -6.4088311195373535
    9. 'max' → logprob: -6.5338311195373535
    10. 'sales' → logprob: -6.5338311195373535

Token 101: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.018233176320791245
    2. '10' → logprob: -5.768233299255371
    3. '500' → logprob: -5.768233299255371
    4. ' ' → logprob: -5.893233299255371
    5. '200' → logprob: -5.893233299255371
    6. 'min' → logprob: -7.143233299255371
    7. '1' → logprob: -7.393233299255371
    8. '300' → logprob: -7.393233299255371
    9. '0' → logprob: -7.518233299255371
    10. '150' → logprob: -7.518233299255371

Token 102: '000' (ID: 1302)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005171707598492503
    2. '0' → logprob: -7.87551736831665
    3. ' ]' → logprob: -9.000516891479492
    4. ']
' → logprob: -12.250516891479492
    5. ')]' → logprob: -12.375516891479492
    6. ':]' → logprob: -13.750516891479492
    7. '00' → logprob: -14.750516891479492
    8. ']

' → logprob: -14.750516891479492
    9. '()]' → logprob: -14.750516891479492
    10. ' ' → logprob: -14.875516891479492

Token 103: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.637786231702194e-05
    2. ' ]' → logprob: -10.125086784362793
    3. ']
' → logprob: -10.125086784362793
    4. ']

' → logprob: -13.500086784362793
    5. ')' → logprob: -13.625086784362793
    6. ')]' → logprob: -13.875086784362793
    7. '0' → logprob: -14.125086784362793
    8. ']
' → logprob: -15.000086784362793
    9. '']' → logprob: -15.375086784362793
    10. '[' → logprob: -15.500086784362793

Token 104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.0868278524139896e-05
    2. ' ]' → logprob: -10.25006103515625
    3. ']
' → logprob: -10.87506103515625
    4. ')]' → logprob: -12.62506103515625
    5. ')' → logprob: -13.25006103515625
    6. ']

' → logprob: -14.87506103515625
    7. ']
' → logprob: -15.50006103515625
    8. '']' → logprob: -15.62506103515625
    9. '[' → logprob: -16.00006103515625
    10. '`]' → logprob: -16.00006103515625

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14223752915859222
    2. '
' → logprob: -2.642237424850464
    3. 'print' → logprob: -2.892237424850464
    4. '<|end|>' → logprob: -6.142237663269043
    5. '    
' → logprob: -6.517237663269043
    6. ' print' → logprob: -6.892237663269043
    7. '[
' → logprob: -7.892237663269043
    8. '[' → logprob: -9.142237663269043
    9. ' if' → logprob: -9.392237663269043
    10. 'if' → logprob: -9.392237663269043

Token 106: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08895593881607056
    2. '   ' → logprob: -3.463955879211426
    3. 'for' → logprob: -3.588955879211426
    4. 'if' (adapté à ' if') → logprob: -3.838955879211426
    5. ' print' → logprob: -6.213955879211426
    6. ' if' → logprob: -6.713955879211426
    7. ' for' → logprob: -6.963955879211426
    8. '
' → logprob: -8.338955879211426
    9. '    
' → logprob: -8.838955879211426
    10. '<|end|>' → logprob: -9.963955879211426

Token 107: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2935218811035156
    2. ' len' → logprob: -1.4185218811035156
    3. ' not' → logprob: -4.668521881103516
    4. 'res' → logprob: -6.418521881103516
    5. 'len' → logprob: -6.793521881103516
    6. ' ' → logprob: -8.918521881103516
    7. 'not' → logprob: -11.793521881103516
    8. ' ' → logprob: -12.043521881103516
    9. ' le' → logprob: -12.668521881103516
    10. '(len' → logprob: -13.418521881103516

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005800772923976183
    2. ' ==' → logprob: -8.375579833984375
    3. ' :' → logprob: -8.625579833984375
    4. '==' → logprob: -9.125579833984375
    5. '>' → logprob: -11.500579833984375
    6. '):' → logprob: -11.500579833984375
    7. '>:' → logprob: -11.625579833984375
    8. '[:]' → logprob: -11.750579833984375
    9. '[' → logprob: -12.250579833984375
    10. '.' → logprob: -12.250579833984375

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000588417868129909
    2. '
' → logprob: -8.000588417053223
    3. 'print' → logprob: -9.875588417053223
    4. ':' → logprob: -10.000588417053223
    5. '        
' → logprob: -10.000588417053223
    6. ' print' → logprob: -10.500588417053223
    7. '<|end|>' → logprob: -10.500588417053223
    8. '    
' → logprob: -11.000588417053223
    9. ':
' → logprob: -11.750588417053223
    10. '   ' → logprob: -11.875588417053223

Token 110: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.18296875059604645
    2. 'print' (adapté à ' print') → logprob: -2.057968854904175
    3. ' for' → logprob: -3.682968854904175
    4. '       ' → logprob: -4.807968616485596
    5. 'for' → logprob: -6.057968616485596
    6. '   ' → logprob: -6.182968616485596
    7. '    ' → logprob: -6.682968616485596
    8. ' 
' → logprob: -9.182969093322754
    9. '```' → logprob: -9.307969093322754
    10. '        ' → logprob: -9.557969093322754

Token 111: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9604077935218811
    2. '("' → logprob: -0.9604077935218811
    3. '('' → logprob: -1.4604077339172363
    4. '(":' → logprob: -7.335407733917236
    5. '(*' → logprob: -7.460407733917236
    6. '()' → logprob: -7.835407733917236
    7. '("("' → logprob: -7.835407733917236
    8. '"' → logprob: -8.960408210754395
    9. '(f' → logprob: -9.085408210754395
    10. '(res' → logprob: -10.335408210754395

Token 112: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5870479345321655
    2. ' '.' → logprob: -2.337048053741455
    3. ''' → logprob: -2.587048053741455
    4. ''.' → logprob: -2.837048053741455
    5. '\' → logprob: -3.212048053741455
    6. ''\' → logprob: -3.712048053741455
    7. '
' → logprob: -3.962048053741455
    8. 'Y' → logprob: -4.212048053741455
    9. ' \' → logprob: -4.212048053741455
    10. ',' → logprob: -4.337048053741455

Token 113: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0016550635918974876
    2. '".' → logprob: -6.876655101776123
    3. '.' → logprob: -8.001654624938965
    4. ''' → logprob: -8.876654624938965
    5. ')' → logprob: -10.501654624938965
    6. '''.' → logprob: -10.501654624938965
    7. ').' → logprob: -10.751654624938965
    8. '`.' → logprob: -11.626654624938965
    9. '')' → logprob: -11.751654624938965
    10. '.join' → logprob: -12.126654624938965

Token 114: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.963691804325208e-05
    2. 'print' → logprob: -11.750029563903809
    3. 'j' → logprob: -12.250029563903809
    4. ' join' → logprob: -12.250029563903809
    5. '.' → logprob: -12.750029563903809
    6. '.join' → logprob: -13.000029563903809
    7. ''.' → logprob: -13.375029563903809
    8. 'jo' → logprob: -13.500029563903809
    9. ').' → logprob: -13.875029563903809
    10. '```' → logprob: -14.625029563903809

Token 115: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0001867326645879075
    2. '(' → logprob: -8.625186920166016
    3. '([' → logprob: -12.625186920166016
    4. ' (' → logprob: -12.875186920166016
    5. 'res' → logprob: -14.500186920166016
    6. '(
' → logprob: -15.500186920166016
    7. ')' → logprob: -15.875186920166016
    8. '   ' → logprob: -16.250186920166016
    9. '(list' → logprob: -16.250186920166016
    10. '(sorted' → logprob: -16.250186920166016

Token 116: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014173625037074089
    2. '))' → logprob: -4.26417350769043
    3. ')
' → logprob: -12.13917350769043
    4. ')))' → logprob: -13.26417350769043
    5. '   ' → logprob: -14.13917350769043
    6. '`)' → logprob: -14.38917350769043
    7. '))
' → logprob: -14.63917350769043
    8. ' )' → logprob: -14.76417350769043
    9. ')}' → logprob: -15.38917350769043
    10. ')`' → logprob: -15.88917350769043

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04860395938158035
    2. 'else' → logprob: -3.1736040115356445
    3. ' else' → logprob: -5.5486040115356445
    4. '<|end|>' → logprob: -6.4236040115356445
    5. '```' → logprob: -10.798604011535645
    6. '<|end|>' → logprob: -11.298604011535645
    7. '	else' → logprob: -11.798604011535645
    8. 'print' → logprob: -12.173604011535645
    9. '    
' → logprob: -12.423604011535645
    10. '[' → logprob: -12.548604011535645

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20720766484737396
    2. '   ' → logprob: -1.9572076797485352
    3. ' else' → logprob: -3.082207679748535
    4. '	else' → logprob: -11.582207679748535
    5. '<|end|>' → logprob: -11.582207679748535
    6. ' ' → logprob: -12.207207679748535
    7. '_else' → logprob: -12.582207679748535
    8. '```' → logprob: -12.832207679748535
    9. '  ' → logprob: -12.957207679748535
    10. '    ' → logprob: -13.332207679748535

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008058924227952957
    2. ':
' → logprob: -5.258059024810791
    3. '       ' → logprob: -6.008059024810791
    4. '   ' → logprob: -8.133058547973633
    5. ' :' → logprob: -11.008058547973633
    6. '<|end|>' → logprob: -11.258058547973633
    7. '    ' → logprob: -11.383058547973633
    8. '     ' → logprob: -12.508058547973633
    9. '```' → logprob: -12.883058547973633
    10. '.' → logprob: -13.133058547973633

Token 120: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763429403305054
    2. '       ' → logprob: -0.8263429403305054
    3. 'print' → logprob: -8.451342582702637
    4. ' print' → logprob: -8.951342582702637
    5. '    ' → logprob: -10.951342582702637
    6. '    
' → logprob: -11.326342582702637
    7. '```' → logprob: -12.076342582702637
    8. '<|end|>' → logprob: -12.076342582702637
    9. '	   ' → logprob: -12.201342582702637
    10. '
' → logprob: -12.951342582702637

Token 121: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12274310737848282
    2. ' print' → logprob: -2.2477431297302246
    3. '   ' → logprob: -4.622743129730225
    4. '    ' → logprob: -10.997742652893066
    5. '	print' → logprob: -10.997742652893066
    6. ' ' → logprob: -12.122742652893066
    7. '  ' → logprob: -12.997742652893066
    8. '       ' → logprob: -12.997742652893066
    9. '```' → logprob: -14.622742652893066
    10. '    
' → logprob: -14.747742652893066

Token 122: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.797702968120575
    2. '("' → logprob: -1.2977030277252197
    3. '('' → logprob: -1.6727030277252197
    4. '()' → logprob: -2.4227030277252197
    5. '(None' → logprob: -11.04770278930664
    6. '(
' → logprob: -11.67270278930664
    7. '(`' → logprob: -11.92270278930664
    8. '(False' → logprob: -12.17270278930664
    9. '("")' → logprob: -12.29770278930664
    10. '("""' → logprob: -13.04770278930664

Token 123: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.011450730264186859
    2. '-' → logprob: -5.26145076751709
    3. 'No' → logprob: -6.38645076751709
    4. '0' → logprob: -7.51145076751709
    5. 'Sorry' → logprob: -7.63645076751709
    6. 'None' → logprob: -8.01145076751709
    7. 'NO' → logprob: -8.13645076751709
    8. 'Minimum' → logprob: -8.38645076751709
    9. 'Nen' → logprob: -8.38645076751709
    10. 'Nao' → logprob: -8.51145076751709

Token 124: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0025019366294145584
    2. ')' → logprob: -6.002501964569092
    3. ')")' → logprob: -11.002501487731934
    4. '")
' → logprob: -12.127501487731934
    5. '')' → logprob: -13.377501487731934
    6. '"' → logprob: -13.377501487731934
    7. ' ")' → logprob: -15.502501487731934
    8. '`)' → logprob: -15.877501487731934
    9. '!")' → logprob: -15.877501487731934
    10. '\n' → logprob: -16.12750244140625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 51.64%
Précision adaptée (1ère position): 54.10%
Précision (top 10): 85.25%
================================================================================
