================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import heapq

def dist(p1, p2):
    return math.hypot(p1[0] - p2[0], p1[1] - p2[1])

def can_stand(pos, monsters):
    dists = [dist(pos, m) for m in monsters]
    if not dists:
        return True
    mind = min(dists)
    return dists.count(mind) >= 2

def generate_points(monsters):
    pts = []
    # add start and goal boundaries as points (y from 0 to 4 in steps)
    for y in [i * 0.5 for i in range(9)]:
        start = (0.0, y)
        goal = (4.0, y)
        if can_stand(start, monsters):
            pts.append(start)
        if can_stand(goal, monsters):
            pts.append(goal)
    for m in monsters:
        if can_stand(m, monsters):
            pts.append(m)
    return pts

def build_graph(points, monsters):
    n = len(points)
    graph = [[] for _ in range(n)]
    for i in range(n):
        for j in range(i+1,n):
            p1, p2 = points[i], points[j]
            # check path validity: sample points along segment
            steps = max(10, int(dist(p1,p2)*5))
            valid = True
            for k in range(steps+1):
                t = k/steps
                x = p1[0] + (p2[0]-p1[0])*t
                y = p1[1] + (p2[1]-p1[1])*t
                if not can_stand((x,y), monsters):
                    valid = False
                    break
            if valid:
                d = dist(p1,p2)
                graph[i].append((j,d))
                graph[j].append((i,d))
    return graph

def dijkstra(graph, start_indices, goal_indices):
    n = len(graph)
    dist_arr = [math.inf]*n
    hq = []
    for si in start_indices:
        dist_arr[si] = 0.0
        heapq.heappush(hq,(0.0,si))
    goal_set = set(goal_indices)
    while hq:
        cd, u = heapq.heappop(hq)
        if dist_arr[u]<cd:
            continue
        if u in goal_set:
            return cd
        for v,w in graph[u]:
            nd = cd+w
            if nd<dist_arr[v]:
                dist_arr[v]=nd
                heapq.heappush(hq,(nd,v))
    return math.inf

def main():
    input=sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = int(n)
        if n==0:
            break
        monsters = [tuple(map(float, input().split())) for _ in range(n)]
        points = generate_points(monsters)
        if not points:
            print("impossible")
            continue
        graph = build_graph(points, monsters)
        start_indices = [i for i,p in enumerate(points) if abs(p[0]-0.0)<1e-9 and 0.0<=p[1]<=4.0]
        goal_indices = [i for i,p in enumerate(points) if abs(p[0]-4.0)<1e-9 and 0.0<=p[1]<=4.0]
        if not start_indices or not goal_indices:
            print("impossible")
            continue
        ans = dijkstra(graph,start_indices,goal_indices)
        if ans==math.inf:
            print("impossible")
        else:
            print(ans)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0004885728703811765
    2. 'os' → logprob: -7.625488758087158
    3. '"os' → logprob: -15.12548828125
    4. ' re' → logprob: -16.37548828125
    5. ' math' → logprob: -16.62548828125
    6. '	os' → logprob: -17.12548828125
    7. '_os' → logprob: -17.25048828125
    8. ' o' → logprob: -17.37548828125
    9. ' json' → logprob: -17.87548828125
    10. ' ' → logprob: -18.25048828125

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10232575237751007
    2. '\' → logprob: -3.602325677871704
    3. '\n' → logprob: -3.977325677871704
    4. 'import' → logprob: -4.352325916290283
    5. '<|end|>' → logprob: -4.602325916290283
    6. '```' → logprob: -4.727325916290283
    7. '
' → logprob: -4.852325916290283
    8. '

' → logprob: -5.477325916290283
    9. '<|end|>' → logprob: -6.602325916290283
    10. '' → logprob: -6.602325916290283

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7915539145469666
    2. '\n' → logprob: -1.6665539741516113
    3. 'import' → logprob: -2.0415539741516113
    4. '```' → logprob: -2.6665539741516113
    5. '
' → logprob: -2.7915539741516113
    6. '\' → logprob: -3.0415539741516113
    7. '

' → logprob: -4.041553974151611
    8. '<|end|>' → logprob: -4.416553974151611
    9. ',' → logprob: -4.666553974151611
    10. '<|end|>' → logprob: -6.291553974151611

Token 7: ' heap' (ID: 37237)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.4883849322795868
    2. ' os' → logprob: -0.9883849620819092
    3. 'random' → logprob: -4.73838472366333
    4. ' random' → logprob: -5.48838472366333
    5. ' re' → logprob: -7.86338472366333
    6. 're' → logprob: -7.86338472366333
    7. ' numpy' → logprob: -8.988385200500488
    8. 'numpy' → logprob: -9.738385200500488
    9. 'collections' → logprob: -9.863385200500488
    10. ' statistics' → logprob: -10.113385200500488

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002273774443892762
    2. '_' → logprob: -8.750226974487305
    3. '.' → logprob: -10.000226974487305
    4. '#' → logprob: -12.000226974487305
    5. 'space' → logprob: -12.875226974487305
    6. ' #' → logprob: -13.000226974487305
    7. '<|end|>' → logprob: -13.125226974487305
    8. 's' → logprob: -13.250226974487305
    9. 'u' → logprob: -13.750226974487305
    10. '[' → logprob: -13.875226974487305

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43606555461883545
    2. '\' → logprob: -2.186065673828125
    3. '\n' → logprob: -2.436065673828125
    4. '
' → logprob: -2.936065673828125
    5. 'import' → logprob: -3.061065673828125
    6. '

' → logprob: -4.061065673828125
    7. '```' → logprob: -4.311065673828125
    8. '<|end|>' → logprob: -4.686065673828125
    9. 'def' → logprob: -5.436065673828125
    10. '<|end|>' → logprob: -6.061065673828125

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8168159127235413
    2. '.' → logprob: -1.0668158531188965
    3. '\' → logprob: -2.5668158531188965
    4. '```' → logprob: -3.0668158531188965
    5. 'from' → logprob: -3.5668158531188965
    6. 'import' → logprob: -3.6918158531188965
    7. '
' → logprob: -4.4418158531188965
    8. 'class' → logprob: -4.8168158531188965
    9. '\n' → logprob: -4.9418158531188965
    10. ',' → logprob: -6.3168158531188965

Token 11: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006288022268563509
    2. ' a' → logprob: -8.625628471374512
    3. ' shortest' → logprob: -9.125628471374512
    4. ' d' → logprob: -9.750628471374512
    5. ' solve' → logprob: -9.875628471374512
    6. ' find' → logprob: -10.000628471374512
    7. ' space' → logprob: -10.500628471374512
    8. '_' → logprob: -10.750628471374512
    9. ' `' → logprob: -10.750628471374512
    10. ' calculate' → logprob: -10.875628471374512

Token 12: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.700344979763031
    2. 'ance' → logprob: -0.825344979763031
    3. '(a' → logprob: -3.450345039367676
    4. 'ANCE' → logprob: -3.575345039367676
    5. ' (' → logprob: -5.825345039367676
    6. '(x' → logprob: -6.825345039367676
    7. 'an' → logprob: -7.950345039367676
    8. '_' → logprob: -7.950345039367676
    9. 'ancia' → logprob: -8.700345039367676
    10. 'anc' → logprob: -8.825345039367676

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01511481124907732
    2. ',' → logprob: -4.515114784240723
    3. 'oint' → logprob: -5.640114784240723
    4. 'a' → logprob: -8.640114784240723
    5. 'oints' → logprob: -8.765114784240723
    6. ')' → logprob: -9.390114784240723
    7. 'osition' → logprob: -10.890114784240723
    8. '[' → logprob: -11.140114784240723
    9. '):' → logprob: -11.515114784240723
    10. 'A' → logprob: -12.015114784240723

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036679807817563415
    2. ',p' → logprob: -8.000367164611816
    3. ' ,' → logprob: -10.625367164611816
    4. '):' → logprob: -13.000367164611816
    5. ')' → logprob: -13.125367164611816
    6. '[' → logprob: -13.750367164611816
    7. '(p' → logprob: -14.500367164611816
    8. ' p' → logprob: -15.750367164611816
    9. 'p' → logprob: -16.0003662109375
    10. '.' → logprob: -16.1253662109375

Token 15: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.018867991864681244
    2. 'p' → logprob: -4.5188679695129395
    3. ' ' → logprob: -4.8938679695129395
    4. '<|end|>' → logprob: -8.893868446350098
    5. ' )' → logprob: -9.518868446350098
    6. ')' → logprob: -10.143868446350098
    7. ' ,' → logprob: -11.268868446350098
    8. ',' → logprob: -11.393868446350098
    9. ' ' → logprob: -12.518868446350098
    10. '  ' → logprob: -12.643868446350098

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.25000286102295
    3. 'oint' → logprob: -14.37500286102295
    4. ',' → logprob: -16.500001907348633
    5. '₂' → logprob: -17.000001907348633
    6. 'oints' → logprob: -17.125001907348633
    7. '```' → logprob: -17.750001907348633
    8. ')' → logprob: -18.375001907348633
    9. 'p' → logprob: -18.500001907348633
    10. '3' → logprob: -19.125001907348633

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012535012501757592
    2. ')' → logprob: -9.12512493133545
    3. '):
' → logprob: -11.50012493133545
    4. ' ):' → logprob: -12.25012493133545
    5. ':' → logprob: -13.75012493133545
    6. '):
' → logprob: -15.87512493133545
    7. ')):' → logprob: -16.875125885009766
    8. ')：' → logprob: -17.250125885009766
    9. ' ' → logprob: -17.750125885009766
    10. '):

' → logprob: -17.875125885009766

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7711705565452576
    2. '(' → logprob: -1.1461706161499023
    3. '(p' → logprob: -2.2711706161499023
    4. ':' → logprob: -3.1461706161499023
    5. '[' → logprob: -3.3961706161499023
    6. '):' → logprob: -4.021170616149902
    7. ' return' → logprob: -5.271170616149902
    8. 'return' → logprob: -5.896170616149902
    9. '```' → logprob: -5.896170616149902
    10. ',' → logprob: -6.021170616149902

Token 19: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6599223613739014
    2. '   ' → logprob: -1.1599223613739014
    3. 'return' (adapté à ' return') → logprob: -2.0349223613739014
    4. '    ' → logprob: -3.4099223613739014
    5. ' ' → logprob: -6.1599225997924805
    6. ')' → logprob: -6.9099225997924805
    7. ' math' → logprob: -7.2849225997924805
    8. '       ' → logprob: -7.9099225997924805
    9. '(' → logprob: -7.9099225997924805
    10. '```' → logprob: -8.53492259979248

Token 20: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.021929176524281502
    2. 'math' → logprob: -4.0219292640686035
    3. '(math' → logprob: -5.6469292640686035
    4. ' ((' → logprob: -9.021928787231445
    5. ' (' → logprob: -9.646928787231445
    6. '((' → logprob: -10.396928787231445
    7. '(' → logprob: -11.146928787231445
    8. ' int' → logprob: -12.021928787231445
    9. ' ' → logprob: -12.146928787231445
    10. '(int' → logprob: -14.021928787231445

Token 21: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.388217031955719
    2. '.' → logprob: -1.1382169723510742
    3. '.h' → logprob: -7.763216972351074
    4. '.s' → logprob: -7.763216972351074
    5. '.dist' → logprob: -7.763216972351074
    6. '.atan' → logprob: -9.888216972351074
    7. '.Sqrt' → logprob: -12.013216972351074
    8. '.f' → logprob: -13.013216972351074
    9. '.pi' → logprob: -13.263216972351074
    10. '.pow' → logprob: -13.263216972351074

Token 22: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -1.4498052223643754e-05
    2. 'av' → logprob: -11.750014305114746
    3. 'hyp' → logprob: -12.750014305114746
    4. 'sqrt' → logprob: -13.375014305114746
    5. 'a' → logprob: -13.375014305114746
    6. 'y' → logprob: -15.000014305114746
    7. 'ash' → logprob: -16.250015258789062
    8. 'dist' → logprob: -17.000015258789062
    9. 'e' → logprob: -17.250015258789062
    10. 'yper' → logprob: -17.500015258789062

Token 23: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0005527943139895797
    2. 'o' → logprob: -7.750552654266357
    3. 'otl' → logprob: -9.625553131103516
    4. 't' → logprob: -10.250553131103516
    5. '.ot' → logprob: -12.375553131103516
    6. 'от' → logprob: -12.625553131103516
    7. 'otp' → logprob: -12.750553131103516
    8. 'at' → logprob: -13.375553131103516
    9. 'otlin' → logprob: -13.750553131103516
    10. '```' → logprob: -13.875553131103516

Token 24: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.07891038805246353
    2. '(' → logprob: -2.5789103507995605
    3. '(
' → logprob: -11.203910827636719
    4. '((' → logprob: -12.703910827636719
    5. ' (' → logprob: -12.828910827636719
    6. 'p' → logprob: -14.578910827636719
    7. '(

' → logprob: -14.703910827636719
    8. '(*' → logprob: -15.828910827636719
    9. ' p' → logprob: -16.20391082763672
    10. ')' → logprob: -17.07891082763672

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002367562847211957
    2. '2' → logprob: -6.1273674964904785
    3. '[' → logprob: -8.877367973327637
    4. '0' → logprob: -11.002367973327637
    5. '_' → logprob: -11.752367973327637
    6. '-' → logprob: -12.252367973327637
    7. 'oint' → logprob: -13.189867973327637
    8. '```' → logprob: -13.627367973327637
    9. ' ' → logprob: -14.127367973327637
    10. 'i' → logprob: -14.502367973327637

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -18.875
    3. '.' → logprob: -19.125
    4. '0' → logprob: -19.5
    5. ' [' → logprob: -20.0
    6. '   ' → logprob: -20.25
    7. '```' → logprob: -20.875
    8. ',' → logprob: -21.25
    9. 'x' → logprob: -21.375
    10. '1' → logprob: -21.375

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -14.375001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '[' → logprob: -17.875001907348633
    6. '-' → logprob: -18.625001907348633
    7. '  ' → logprob: -18.812501907348633
    8. '۰' → logprob: -18.875001907348633
    9. '```' → logprob: -19.937501907348633
    10. '０' → logprob: -20.000001907348633

Token 28: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6932523846626282
    2. ' -' → logprob: -0.6932523846626282
    3. '-p' → logprob: -9.568252563476562
    4. ' ' → logprob: -10.693252563476562
    5. ' p' → logprob: -12.693252563476562
    6. '<|end|>' → logprob: -12.943252563476562
    7. ',' → logprob: -13.318252563476562
    8. 'p' → logprob: -13.693252563476562
    9. ' ' → logprob: -14.193252563476562
    10. ' –' → logprob: -14.693252563476562

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47632884979248047
    2. '-' → logprob: -0.9763288497924805
    3. '-p' → logprob: -6.1013288497924805
    4. ' p' → logprob: -12.22632884979248
    5. ' ' → logprob: -13.10132884979248
    6. 'p' → logprob: -13.47632884979248
    7. ' ' → logprob: -15.47632884979248
    8. '[' → logprob: -16.101329803466797
    9. '(p' → logprob: -16.101329803466797
    10. ' –' → logprob: -16.226329803466797

Token 30: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1269282102584839
    2. ' p' → logprob: -2.1269283294677734
    3. '	p' → logprob: -16.001928329467773
    4. ' ' → logprob: -16.876928329467773
    5. ' п' → logprob: -18.501928329467773
    6. ')p' → logprob: -18.626928329467773
    7. '<p' → logprob: -19.626928329467773
    8. '  ' → logprob: -19.751928329467773
    9. '   ' → logprob: -19.751928329467773
    10. ''p' → logprob: -20.126928329467773

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03843962028622627
    2. '1' → logprob: -3.2884395122528076
    3. 'p' → logprob: -8.413439750671387
    4. ' ' → logprob: -9.163439750671387
    5. '[' → logprob: -10.538439750671387
    6. 's' → logprob: -11.288439750671387
    7. 'o' → logprob: -11.788439750671387
    8. '0' → logprob: -11.913439750671387
    9. 'x' → logprob: -12.663439750671387
    10. 'r' → logprob: -13.038439750671387

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -14.125003814697266
    3. '0' → logprob: -14.250003814697266
    4. '][' → logprob: -14.375003814697266
    5. '[
' → logprob: -14.500003814697266
    6. ' [' → logprob: -15.125003814697266
    7. ''[' → logprob: -16.062503814697266
    8. '```' → logprob: -16.562503814697266
    9. ']' → logprob: -16.687503814697266
    10. ' ' → logprob: -16.875003814697266

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -13.375008583068848
    4. '[' → logprob: -17.62500762939453
    5. '۰' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.50000762939453
    7. '０' → logprob: -19.25000762939453
    8. '  ' → logprob: -19.81250762939453
    9. '```' → logprob: -20.31250762939453
    10. '

' → logprob: -20.93750762939453

Token 34: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000522650487255305
    2. ')' → logprob: -7.875522613525391
    3. '),' → logprob: -9.62552261352539
    4. ' ,' → logprob: -9.62552261352539
    5. '],' → logprob: -12.37552261352539
    6. ',
' → logprob: -13.00052261352539
    7. ',

' → logprob: -13.62552261352539
    8. ']' → logprob: -13.75052261352539
    9. ',)' → logprob: -13.87552261352539
    10. ',p' → logprob: -15.75052261352539

Token 35: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0091495830565691
    2. 'p' → logprob: -5.009149551391602
    3. ' ' → logprob: -6.134149551391602
    4. ' ' → logprob: -9.134149551391602
    5. '<|end|>' → logprob: -9.384149551391602
    6. 's' → logprob: -10.509149551391602
    7. ')' → logprob: -11.259149551391602
    8. ' )' → logprob: -11.759149551391602
    9. '(p' → logprob: -11.884149551391602
    10. '1' → logprob: -12.509149551391602

Token 36: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002614550176076591
    2. '1' → logprob: -8.250261306762695
    3. '[
' → logprob: -16.625261306762695
    4. ' [' → logprob: -17.250261306762695
    5. '```' → logprob: -17.750261306762695
    6. 'p' → logprob: -17.812761306762695
    7. '.' → logprob: -17.875261306762695
    8. '2' → logprob: -18.187761306762695
    9. ']' → logprob: -18.250261306762695
    10. '_' → logprob: -18.375261306762695

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '][' → logprob: -16.0
    3. '[
' → logprob: -16.125
    4. ')' → logprob: -17.25
    5. ']' → logprob: -17.25
    6. '<|end|>' → logprob: -17.25
    7. ')[' → logprob: -17.375
    8. '1' → logprob: -17.875
    9. '```' → logprob: -17.875
    10. '<|end|>' → logprob: -18.375

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '[' → logprob: -14.87501049041748
    4. '0' → logprob: -15.00001049041748
    5. ']' → logprob: -17.250011444091797
    6. '   ' → logprob: -17.500011444091797
    7. ')' → logprob: -17.625011444091797
    8. '```' → logprob: -18.000011444091797
    9. '-' → logprob: -18.750011444091797
    10. '  ' → logprob: -18.875011444091797

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6932187676429749
    2. ' -' → logprob: -0.8182187676429749
    3. '[' → logprob: -3.81821870803833
    4. '-' → logprob: -4.06821870803833
    5. ')' → logprob: -4.19321870803833
    6. ' ]' → logprob: -5.81821870803833
    7. ' ' → logprob: -7.19321870803833
    8. '<|end|>' → logprob: -8.568219184875488
    9. '])' → logprob: -8.943219184875488
    10. '   ' → logprob: -8.943219184875488

Token 40: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00439415592700243
    2. '-' → logprob: -5.504394054412842
    3. ')' → logprob: -8.25439453125
    4. '[' → logprob: -10.62939453125
    5. ' ' → logprob: -11.00439453125
    6. '<|end|>' → logprob: -12.37939453125
    7. '-)' → logprob: -12.37939453125
    8. ' )' → logprob: -12.87939453125
    9. '<|end|>' → logprob: -14.50439453125
    10. ' ' → logprob: -14.50439453125

Token 41: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5759417414665222
    2. 'p' → logprob: -0.8259417414665222
    3. ' ' → logprob: -14.325942039489746
    4. ')p' → logprob: -14.450942039489746
    5. '2' → logprob: -14.825942039489746
    6. ' ' → logprob: -14.950942039489746
    7. '	p' → logprob: -15.575942039489746
    8. ')' → logprob: -16.07594108581543
    9. ' п' → logprob: -16.32594108581543
    10. '1' → logprob: -17.32594108581543

Token 42: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12842804193496704
    2. '2' → logprob: -2.1284279823303223
    3. '[' → logprob: -6.503427982330322
    4. '0' → logprob: -16.003427505493164
    5. 'ython' → logprob: -16.503427505493164
    6. '5' → logprob: -16.628427505493164
    7. '3' → logprob: -17.128427505493164
    8. ' ' → logprob: -17.253427505493164
    9. '29' → logprob: -17.378427505493164
    10. '_' → logprob: -17.378427505493164

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030723062809556723
    2. '1' → logprob: -5.878072261810303
    3. ']' → logprob: -8.628072738647461
    4. '][' → logprob: -9.878072738647461
    5. '])' → logprob: -10.503072738647461
    6. '2' → logprob: -12.628072738647461
    7. '```' → logprob: -13.503072738647461
    8. '[
' → logprob: -13.878072738647461
    9. ' [' → logprob: -14.003072738647461
    10. ')' → logprob: -14.253072738647461

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.875005722045898
    3. '])' → logprob: -13.500005722045898
    4. ']' → logprob: -14.125005722045898
    5. ' ' → logprob: -14.875005722045898
    6. '[' → logprob: -15.250005722045898
    7. '   ' → logprob: -17.3750057220459
    8. '```' → logprob: -17.6250057220459
    9. ')' → logprob: -18.2500057220459
    10. '' → logprob: -19.0625057220459

Token 45: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013320252764970064
    2. '))' → logprob: -6.751331806182861
    3. '])' → logprob: -8.87633228302002
    4. ')])' → logprob: -11.25133228302002
    5. ' )' → logprob: -12.75133228302002
    6. ')))' → logprob: -13.00133228302002
    7. ']' → logprob: -14.00133228302002
    8. '[' → logprob: -14.00133228302002
    9. ']))' → logprob: -14.62633228302002
    10. '})' → logprob: -14.62633228302002

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3528878688812256
    2. '
' → logprob: -1.2278878688812256
    3. '\' → logprob: -6.102888107299805
    4. '

' → logprob: -6.977888107299805
    5. 'class' → logprob: -7.727888107299805
    6. '\n' → logprob: -7.977888107299805
    7. '```' → logprob: -8.227888107299805
    8. '
' → logprob: -9.477888107299805
    9. 'newline' → logprob: -10.477888107299805
    10. 'd' → logprob: -10.727888107299805

Token 47: ' can' (ID: 665)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0903396606445312
    2. ' find' → logprob: -1.7153396606445312
    3. ' kr' → logprob: -1.9653396606445312
    4. ' closest' → logprob: -2.4653396606445312
    5. ' k' → logprob: -2.7153396606445312
    6. ' solve' → logprob: -2.8403396606445312
    7. ' d' → logprob: -2.9653396606445312
    8. ' shortest' → logprob: -3.4653396606445312
    9. ' main' → logprob: -4.465339660644531
    10. ' prim' → logprob: -4.840339660644531

Token 48: '_st' (ID: 2518)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21674565970897675
    2. '_jump' → logprob: -2.216745615005493
    3. '_connect' → logprob: -2.966745615005493
    4. '_accept' → logprob: -5.216745853424072
    5. '_take' → logprob: -5.466745853424072
    6. '_place' → logprob: -5.466745853424072
    7. '_continue' → logprob: -5.716745853424072
    8. '_cover' → logprob: -6.091745853424072
    9. '_re' → logprob: -6.341745853424072
    10. '_use' → logprob: -6.716745853424072

Token 49: 'and' (ID: 427)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.10258086770772934
    2. 'ay' → logprob: -2.3525807857513428
    3. 'a' → logprob: -7.352581024169922
    4. 'op' → logprob: -7.352581024169922
    5. 'ar' → logprob: -8.102581024169922
    6. 'and' → logprob: -8.852581024169922
    7. 'r' → logprob: -8.977581024169922
    8. 'ep' → logprob: -9.602581024169922
    9. '_' → logprob: -9.727581024169922
    10. 'e' → logprob: -9.727581024169922

Token 50: '(pos' (ID: 24566)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.571875810623169
    2. '(' → logprob: -1.321875810623169
    3. '(p' → logprob: -3.446875810623169
    4. '(i' → logprob: -3.696875810623169
    5. '_at' → logprob: -3.696875810623169
    6. '(x' → logprob: -3.821875810623169
    7. '(point' → logprob: -3.821875810623169
    8. '(points' → logprob: -5.07187557220459
    9. '_' → logprob: -5.32187557220459
    10. '(on' → logprob: -5.69687557220459

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1491331309080124
    2. '):' → logprob: -2.2741332054138184
    3. 's' → logprob: -3.5241332054138184
    4. ')' → logprob: -5.274133205413818
    5. ' ,' → logprob: -8.27413272857666
    6. '[' → logprob: -8.77413272857666
    7. '):
' → logprob: -9.39913272857666
    8. ',p' → logprob: -9.64913272857666
    9. '   ' → logprob: -10.14913272857666
    10. 'a' → logprob: -10.27413272857666

Token 52: ' monsters' (ID: 59311)
  Prédit: ' obstacles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -1.3412251472473145
    2. ' positions' → logprob: -1.4662251472473145
    3. ' radius' → logprob: -2.4662251472473145
    4. ' points' → logprob: -2.5912251472473145
    5. ' stands' → logprob: -2.8412251472473145
    6. ' pos' → logprob: -2.9662251472473145
    7. ' rocks' → logprob: -3.3412251472473145
    8. ' obstacle' → logprob: -3.7162251472473145
    9. 'positions' → logprob: -4.3412251472473145
    10. ' stones' → logprob: -4.5912251472473145

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20317693054676056
    2. ',' → logprob: -1.7031769752502441
    3. ')' → logprob: -6.453176975250244
    4. ' ):' → logprob: -9.953176498413086
    5. '[' → logprob: -10.203176498413086
    6. '):
' → logprob: -10.203176498413086
    7. '_positions' → logprob: -11.703176498413086
    8. '[]):' → logprob: -11.703176498413086
    9. ':' → logprob: -12.078176498413086
    10. ' ,' → logprob: -12.203176498413086

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5526789426803589
    2. '):' → logprob: -1.1776789426803589
    3. ':' → logprob: -2.9276790618896484
    4. ')' → logprob: -3.4276790618896484
    5. '(' → logprob: -5.302679061889648
    6. '<|end|>' → logprob: -5.302679061889648
    7. ' ' → logprob: -5.677679061889648
    8. '):
' → logprob: -5.927679061889648
    9. '    ' → logprob: -6.052679061889648
    10. ' :' → logprob: -6.302679061889648

Token 55: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9246013760566711
    2. ' ' → logprob: -1.5496013164520264
    3. '   ' → logprob: -1.6746013164520264
    4. '<|end|>' → logprob: -2.4246013164520264
    5. '    ' → logprob: -2.9246013164520264
    6. ')' → logprob: -4.5496015548706055
    7. '(' → logprob: -4.9246015548706055
    8. ' return' → logprob: -5.1746015548706055
    9. ':' → logprob: -5.1746015548706055
    10. '  ' → logprob: -5.2996015548706055

Token 56: 'ists' (ID: 2549)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18633237481117249
    2. 'ist' → logprob: -2.5613324642181396
    3. ' =' → logprob: -2.8113324642181396
    4. 'istance' → logprob: -4.1863322257995605
    5. 'ef' → logprob: -4.5613322257995605
    6. '   ' → logprob: -6.1863322257995605
    7. ' ' → logprob: -7.1863322257995605
    8. ',' → logprob: -7.5613322257995605
    9. '```' → logprob: -7.5613322257995605
    10. '>' → logprob: -7.8113322257995605

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6384589076042175
    2. ' =' → logprob: -0.7634589076042175
    3. '(' → logprob: -6.013458728790283
    4. '=[]' → logprob: -6.763458728790283
    5. ')' → logprob: -7.763458728790283
    6. '[' → logprob: -8.013459205627441
    7. '   ' → logprob: -8.388459205627441
    8. ' >=' → logprob: -8.638459205627441
    9. '>=' → logprob: -9.013459205627441
    10. ' ' → logprob: -9.138459205627441

Token 58: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015758302062749863
    2. '[]' → logprob: -4.515758514404297
    3. '[min' → logprob: -6.140758514404297
    4. ' [' → logprob: -6.890758514404297
    5. '[max' → logprob: -7.765758514404297
    6. '[pos' → logprob: -8.265758514404297
    7. '[p' → logprob: -8.640758514404297
    8. '[m' → logprob: -8.890758514404297
    9. ' []' → logprob: -9.265758514404297
    10. '   ' → logprob: -9.390758514404297

Token 59: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004110696725547314
    2. ' dist' → logprob: -5.504110813140869
    3. '(dist' → logprob: -10.879110336303711
    4. '	dist' → logprob: -11.879110336303711
    5. '   ' → logprob: -12.129110336303711
    6. 'math' → logprob: -15.004110336303711
    7. '.dist' → logprob: -15.504110336303711
    8. 'd' → logprob: -15.504110336303711
    9. '```' → logprob: -16.00411033630371
    10. ' ' → logprob: -16.62911033630371

Token 60: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.004528861492872238
    2. '(' → logprob: -5.504528999328613
    3. '(mon' → logprob: -7.879528999328613
    4. ' (' → logprob: -10.129528999328613
    5. '(p' → logprob: -11.379528999328613
    6. '(position' → logprob: -11.504528999328613
    7. '<|end|>' → logprob: -12.504528999328613
    8. '(m' → logprob: -13.379528999328613
    9. 'pos' → logprob: -13.754528999328613
    10. '((' → logprob: -14.254528999328613

Token 61: ',' (ID: 11)
  Prédit: '(mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -0.40261515974998474
    2. '(m' → logprob: -1.2776151895523071
    3. ',' → logprob: -3.0276150703430176
    4. '(' → logprob: -6.027615070343018
    5. ',m' → logprob: -6.902615070343018
    6. ',(' → logprob: -7.527615070343018
    7. ')(' → logprob: -9.777615547180176
    8. '(p' → logprob: -9.902615547180176
    9. '(pos' → logprob: -10.027615547180176
    10. ' (' → logprob: -10.027615547180176

Token 62: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020913902670145035
    2. ' m' → logprob: -4.020914077758789
    3. 'monster' → logprob: -6.770914077758789
    4. 'mon' → logprob: -6.895914077758789
    5. ')' → logprob: -8.270914077758789
    6. ' monster' → logprob: -8.645914077758789
    7. ')m' → logprob: -9.145914077758789
    8. '   ' → logprob: -10.770914077758789
    9. '(mon' → logprob: -11.395914077758789
    10. ']' → logprob: -12.270914077758789

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.922563963802531e-05
    2. ')]' → logprob: -9.625079154968262
    3. ']' → logprob: -13.000079154968262
    4. '[' → logprob: -13.000079154968262
    5. '))' → logprob: -13.250079154968262
    6. ')
' → logprob: -13.500079154968262
    7. '])' → logprob: -13.875079154968262
    8. ')])' → logprob: -14.125079154968262
    9. 'pos' → logprob: -14.250079154968262
    10. ' )' → logprob: -14.500079154968262

Token 64: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016113892197608948
    2. ' for' → logprob: -7.001611232757568
    3. ')>=' → logprob: -8.126611709594727
    4. ')>' → logprob: -8.376611709594727
    5. ' )' → logprob: -9.251611709594727
    6. 'for' → logprob: -10.251611709594727
    7. ')<' → logprob: -11.376611709594727
    8. ')<=' → logprob: -11.626611709594727
    9. '[' → logprob: -12.001611709594727
    10. ']' → logprob: -13.251611709594727

Token 65: ' m' (ID: 284)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.08053971827030182
    2. ' monsters' → logprob: -2.5805397033691406
    3. 'm' → logprob: -6.830539703369141
    4. ' monst' → logprob: -8.83053970336914
    5. ' mon' → logprob: -9.20553970336914
    6. 'monster' → logprob: -9.33053970336914
    7. ' m' → logprob: -9.58053970336914
    8. 'mons' → logprob: -10.33053970336914
    9. ' мон' → logprob: -10.58053970336914
    10. ']' → logprob: -10.83053970336914

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0487184077501297
    2. 'in' → logprob: -3.0487184524536133
    3. ']' → logprob: -9.798718452453613
    4. '<|end|>' → logprob: -10.548718452453613
    5. 's' → logprob: -10.798718452453613
    6. ')' → logprob: -11.423718452453613
    7. 'm' → logprob: -12.423718452453613
    8. '	in' → logprob: -12.673718452453613
    9. '<|end|>' → logprob: -12.923718452453613
    10. ' ' → logprob: -12.923718452453613

Token 67: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.5762171745300293
    2. ' monsters' → logprob: -0.8262171745300293
    3. 'monster' → logprob: -9.326217651367188
    4. ' monst' → logprob: -9.576217651367188
    5. '(mon' → logprob: -10.576217651367188
    6. 'mons' → logprob: -10.826217651367188
    7. ']' → logprob: -11.576217651367188
    8. ' mon' → logprob: -11.576217651367188
    9. 'm' → logprob: -11.826217651367188
    10. ' monster' → logprob: -11.826217651367188

Token 68: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001728848903439939
    2. ' if' → logprob: -6.7517290115356445
    3. '   ' → logprob: -8.126729011535645
    4. ' ]' → logprob: -8.876729011535645
    5. 'if' → logprob: -10.251729011535645
    6. ')' → logprob: -10.251729011535645
    7. ']
' → logprob: -10.876729011535645
    8. ')]' → logprob: -11.251729011535645
    9. ']>' → logprob: -12.376729011535645
    10. ']<' → logprob: -12.626729011535645

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052731871604919434
    2. '
' → logprob: -3.802731990814209
    3. ')' → logprob: -4.552731990814209
    4. '<|end|>' → logprob: -4.552731990814209
    5. ' if' → logprob: -6.302731990814209
    6. ' ' → logprob: -6.802731990814209
    7. ',' → logprob: -7.427731990814209
    8. '>' → logprob: -7.552731990814209
    9. 'return' → logprob: -7.677731990814209
    10. '    
' → logprob: -7.802731990814209

Token 70: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011445031268522143
    2. ' return' → logprob: -7.8761444091796875
    3. ' for' → logprob: -8.126144409179688
    4. 'return' → logprob: -8.251144409179688
    5. ' if' → logprob: -9.001144409179688
    6. 'for' → logprob: -10.751144409179688
    7. '
' → logprob: -11.126144409179688
    8. '    
' → logprob: -11.376144409179688
    9. 'if' (adapté à ' if') → logprob: -12.126144409179688
    10. '    ' → logprob: -12.126144409179688

Token 71: ' not' (ID: 625)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4769860506057739
    2. ' all' → logprob: -1.101986050605774
    3. ' max' → logprob: -3.7269859313964844
    4. ' not' → logprob: -4.101985931396484
    5. 'min' → logprob: -6.351985931396484
    6. ' len' → logprob: -6.351985931396484
    7. 'all' → logprob: -6.601985931396484
    8. ' any' → logprob: -6.851985931396484
    9. ' d' → logprob: -8.101985931396484
    10. ' ' → logprob: -8.726985931396484

Token 72: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02080707810819149
    2. 'd' → logprob: -3.8958070278167725
    3. ' all' → logprob: -8.770807266235352
    4. ' any' → logprob: -9.895807266235352
    5. ' monsters' → logprob: -10.770807266235352
    6. 'all' → logprob: -11.395807266235352
    7. ' ' → logprob: -11.520807266235352
    8. 'mon' → logprob: -12.520807266235352
    9. ' min' → logprob: -12.958307266235352
    10. 'any' → logprob: -13.458307266235352

Token 73: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.009216447360813618
    2. 'ist' → logprob: -4.75921630859375
    3. '```' → logprob: -8.63421630859375
    4. '   ' → logprob: -9.75921630859375
    5. 'is' → logprob: -9.88421630859375
    6. '1' → logprob: -10.00921630859375
    7. '=' → logprob: -10.75921630859375
    8. 'ISTS' → logprob: -10.75921630859375
    9. 's' → logprob: -11.00921630859375
    10. '==' → logprob: -11.00921630859375

Token 74: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0017357517499476671
    2. 'or' → logprob: -6.376735687255859
    3. ':' → logprob: -10.50173568725586
    4. '	or' → logprob: -12.87673568725586
    5. ':return' → logprob: -13.62673568725586
    6. '   ' → logprob: -14.12673568725586
    7. ')' → logprob: -14.25173568725586
    8. ' ' → logprob: -15.87673568725586
    9. '[:]' → logprob: -16.25173568725586
    10. '<|end|>' → logprob: -16.50173568725586

Token 75: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3474448025226593
    2. '   ' → logprob: -1.722444772720337
    3. '       ' → logprob: -2.972444772720337
    4. ':' → logprob: -3.097444772720337
    5. ':return' → logprob: -4.097445011138916
    6. ' return' → logprob: -6.972445011138916
    7. 'or' → logprob: -8.347444534301758
    8. ':
' → logprob: -8.472444534301758
    9. '    ' → logprob: -8.597444534301758
    10. 'return' → logprob: -8.972444534301758

Token 76: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06168988347053528
    2. 'return' (adapté à ' return') → logprob: -3.061689853668213
    3. '   ' → logprob: -4.936689853668213
    4. '       ' → logprob: -5.561689853668213
    5. ':return' → logprob: -6.436689853668213
    6. ' ' → logprob: -8.686690330505371
    7. '	return' → logprob: -9.561690330505371
    8. ' 
' → logprob: -9.936690330505371
    9. '    ' → logprob: -10.436690330505371
    10. ' ' → logprob: -11.186690330505371

Token 77: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759594440460205
    2. ' True' → logprob: -0.8259594440460205
    3. 'False' → logprob: -11.450959205627441
    4. '   ' → logprob: -11.825959205627441
    5. ' False' → logprob: -13.575959205627441
    6. '1' → logprob: -15.200959205627441
    7. '    ' → logprob: -15.325959205627441
    8. '(True' → logprob: -16.075960159301758
    9. ' ' → logprob: -17.075960159301758
    10. '=True' → logprob: -17.575960159301758

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4444452226161957
    2. '
' → logprob: -1.569445252418518
    3. '    
' → logprob: -2.0694451332092285
    4. ' or' → logprob: -4.8194451332092285
    5. '   
' → logprob: -5.0694451332092285
    6. '\n' → logprob: -5.1944451332092285
    7. ' 
' → logprob: -6.8194451332092285
    8. 'return' → logprob: -7.0694451332092285
    9. '  ' → logprob: -8.069445610046387
    10. '  
' → logprob: -8.319445610046387

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3490399718284607
    2. '    
' → logprob: -1.8490400314331055
    3. '
' → logprob: -2.4740400314331055
    4. ' or' → logprob: -3.5990400314331055
    5. '\n' → logprob: -4.2240400314331055
    6. '   
' → logprob: -4.9740400314331055
    7. ' 
' → logprob: -6.8490400314331055
    8. 'return' → logprob: -7.0990400314331055
    9. '

' → logprob: -7.9740400314331055
    10. ' and' → logprob: -8.349040031433105

Token 80: ' mind' (ID: 4246)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6587585806846619
    2. '
' → logprob: -2.0337586402893066
    3. '   ' → logprob: -2.1587586402893066
    4. 'return' → logprob: -2.2837586402893066
    5. '    
' → logprob: -2.9087586402893066
    6. '\n' → logprob: -3.5337586402893066
    7. ' 
' → logprob: -3.5337586402893066
    8. ':return' → logprob: -4.658758640289307
    9. '   
' → logprob: -6.283758640289307
    10. '    ' → logprob: -6.408758640289307

Token 81: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.008725663647055626
    2. 'ex' → logprob: -5.758725643157959
    3. 'ax' → logprob: -6.508725643157959
    4. '=' → logprob: -6.758725643157959
    5. '   ' → logprob: -6.883725643157959
    6. 'x' → logprob: -7.633725643157959
    7. 'istance' → logprob: -7.883725643157959
    8. ' =' → logprob: -8.008726119995117
    9. 'ef' → logprob: -8.383726119995117
    10. 'e' → logprob: -9.133726119995117

Token 82: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0036107590422034264
    2. 'min' → logprob: -5.628610610961914
    3. ' max' → logprob: -11.503610610961914
    4. '(min' → logprob: -15.753610610961914
    5. 'max' → logprob: -15.878610610961914
    6. '	min' → logprob: -16.003610610961914
    7. ' minimum' → logprob: -16.128610610961914
    8. ' ' → logprob: -17.128610610961914
    9. '=min' → logprob: -17.378610610961914
    10. '.min' → logprob: -17.753610610961914

Token 83: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0024787469301372766
    2. '(' → logprob: -6.00247859954834
    3. ' (' → logprob: -13.25247859954834
    4. 'd' → logprob: -14.25247859954834
    5. '(dist' → logprob: -14.50247859954834
    6. ' d' → logprob: -15.87747859954834
    7. '(m' → logprob: -16.877479553222656
    8. '(
' → logprob: -16.877479553222656
    9. '	d' → logprob: -17.627479553222656
    10. '()' → logprob: -18.127479553222656

Token 84: 'ists' (ID: 2549)
  Prédit: 'ists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -4.036524842376821e-05
    2. 'ist' → logprob: -10.250040054321289
    3. ')' → logprob: -14.000040054321289
    4. '[' → logprob: -14.125040054321289
    5. '   ' → logprob: -14.500040054321289
    6. '`' → logprob: -14.750040054321289
    7. 's' → logprob: -14.750040054321289
    8. '```' → logprob: -15.000040054321289
    9. 'i' → logprob: -15.125040054321289
    10. ' is' → logprob: -15.500040054321289

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010171669535338879
    2. ' )' → logprob: -4.635171890258789
    3. ')>' → logprob: -7.885171890258789
    4. '>' → logprob: -11.260171890258789
    5. ')>=' → logprob: -11.260171890258789
    6. ')
' → logprob: -11.760171890258789
    7. ' )
' → logprob: -14.135171890258789
    8. ')return' → logprob: -14.510171890258789
    9. ')<' → logprob: -14.635171890258789
    10. ',' → logprob: -14.635171890258789

Token 86: '   ' (ID: 271)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18782639503479004
    2. ' >=' → logprob: -2.43782639503479
    3. '>' → logprob: -3.06282639503479
    4. '   ' → logprob: -3.56282639503479
    5. '    ' → logprob: -5.812826156616211
    6. '>=' → logprob: -5.812826156616211
    7. ' ' → logprob: -6.062826156616211
    8. '  ' → logprob: -9.312826156616211
    9. '<|end|>' → logprob: -9.812826156616211
    10. ' <=' → logprob: -10.062826156616211

Token 87: ' return' (ID: 622)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.090043067932129
    2. ' >=' → logprob: -1.090043067932129
    3. '>' → logprob: -2.090043067932129
    4. ' return' → logprob: -2.340043067932129
    5. '>=' → logprob: -3.215043067932129
    6. '   ' → logprob: -3.590043067932129
    7. '    ' → logprob: -4.215043067932129
    8. 'return' (adapté à ' return') → logprob: -4.215043067932129
    9. ' ' → logprob: -4.840043067932129
    10. ' <=' → logprob: -6.965043067932129

Token 88: ' d' (ID: 272)
  Prédit: ' mind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mind' → logprob: -0.0003361774142831564
    2. 'mind' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.625336647033691
    4. ' ' → logprob: -15.875336647033691
    5. ' math' → logprob: -16.875335693359375
    6. '>' → logprob: -17.375335693359375
    7. 'm' → logprob: -17.625335693359375
    8. '(' → logprob: -18.500335693359375
    9. ' min' → logprob: -19.125335693359375
    10. ' minds' → logprob: -19.625335693359375

Token 89: 'ists' (ID: 2549)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.06366328150033951
    2. 'ists' → logprob: -2.8136632442474365
    3. '>=' → logprob: -7.563663482666016
    4. 'mind' → logprob: -7.563663482666016
    5. '>' → logprob: -8.563663482666016
    6. '<=' → logprob: -9.313663482666016
    7. ' mind' → logprob: -9.563663482666016
    8. ' >=' → logprob: -9.688663482666016
    9. 'istance' → logprob: -10.063663482666016
    10. 'ista' → logprob: -10.313663482666016

Token 90: '.count' (ID: 14019)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.6593303680419922
    2. '[' → logprob: -0.7843303680419922
    3. '.count' → logprob: -4.909330368041992
    4. '==' → logprob: -5.534330368041992
    5. ' ==' → logprob: -6.034330368041992
    6. ' >=' → logprob: -6.034330368041992
    7. '>=' → logprob: -6.159330368041992
    8. 'index' → logprob: -6.534330368041992
    9. ' and' → logprob: -6.784330368041992
    10. '[-' → logprob: -6.909330368041992

Token 91: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.750020980834961
    4. '(min' → logprob: -14.625020980834961
    5. '(d' → logprob: -17.75002098083496
    6. '((' → logprob: -18.00002098083496
    7. 'd' → logprob: -18.62502098083496
    8. '(M' → logprob: -18.62502098083496
    9. 'm' → logprob: -18.62502098083496
    10. '[m' → logprob: -18.75002098083496

Token 92: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.0016386464703828096
    2. '[ind' → logprob: -6.501638412475586
    3. 'in' → logprob: -9.501638412475586
    4. '[' → logprob: -9.876638412475586
    5. '[in' → logprob: -12.001638412475586
    6. 'and' → logprob: -13.876638412475586
    7. '[m' → logprob: -14.001638412475586
    8. '   ' → logprob: -14.376638412475586
    9. '(ind' → logprob: -14.751638412475586
    10. 'mind' → logprob: -15.251638412475586

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1388123780488968
    2. '==' → logprob: -2.763812303543091
    3. ' ==' → logprob: -3.388812303543091
    4. ')==' → logprob: -3.638812303543091
    5. ' )' → logprob: -5.13881254196167
    6. ' <=' → logprob: -8.388812065124512
    7. '<=' → logprob: -8.638812065124512
    8. '1' → logprob: -9.388812065124512
    9. ')<=' → logprob: -9.638812065124512
    10. ' ' → logprob: -10.763812065124512

Token 94: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06937114894390106
    2. ' ==' → logprob: -3.444371223449707
    3. '>' → logprob: -4.319371223449707
    4. '<=' → logprob: -4.569371223449707
    5. '<' → logprob: -4.944371223449707
    6. '1' → logprob: -5.819371223449707
    7. '>=' → logprob: -7.569371223449707
    8. ' <=' → logprob: -8.069371223449707
    9. ' <' → logprob: -9.319371223449707
    10. '=' → logprob: -9.569371223449707

Token 95: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05027316138148308
    2. ' ' → logprob: -3.0502731800079346
    3. '1' → logprob: -6.4252729415893555
    4. '3' → logprob: -9.800272941589355
    5. ' ' → logprob: -12.925272941589355
    6. 'len' → logprob: -13.987772941589355
    7. '```' → logprob: -14.237772941589355
    8. '0' → logprob: -14.300272941589355
    9. '4' → logprob: -14.425272941589355
    10. '>' → logprob: -15.425272941589355

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011122355936095119
    2. '1' → logprob: -7.001112461090088
    3. ' ' → logprob: -8.62611198425293
    4. '3' → logprob: -10.87611198425293
    5. 'len' → logprob: -14.56361198425293
    6. '4' → logprob: -15.06361198425293
    7. '```' → logprob: -15.25111198425293
    8. '0' → logprob: -15.31361198425293
    9. 'k' → logprob: -16.00111198425293
    10. '5' → logprob: -16.12611198425293

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12499740719795227
    2. '<|end|>' → logprob: -2.24999737739563
    3. '\n' → logprob: -4.999997615814209
    4. '

' → logprob: -5.624997615814209
    5. 'def' → logprob: -7.499997615814209
    6. '<|end|>' → logprob: -8.24999713897705
    7. ':' → logprob: -8.62499713897705
    8. ' and' → logprob: -9.12499713897705
    9. '\' → logprob: -9.24999713897705
    10. 'newline' → logprob: -9.24999713897705

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6631669402122498
    2. '
' → logprob: -1.0381669998168945
    3. '<|end|>' → logprob: -2.1631669998168945
    4. '

' → logprob: -5.0381669998168945
    5. '<|end|>' → logprob: -6.0381669998168945
    6. '#' → logprob: -6.0381669998168945
    7. ':' → logprob: -6.5381669998168945
    8. '\n' → logprob: -7.2881669998168945
    9. '\' → logprob: -7.4131669998168945
    10. 'newline' → logprob: -7.4131669998168945

Token 99: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.130941390991211
    2. ' find' → logprob: -1.630941390991211
    3. ' solve' → logprob: -1.630941390991211
    4. ' bfs' → logprob: -2.880941390991211
    5. ' shortest' → logprob: -3.130941390991211
    6. ' can' → logprob: -3.130941390991211
    7. ' best' → logprob: -3.630941390991211
    8. ' closest' → logprob: -4.380941390991211
    9. ' place' → logprob: -4.505941390991211
    10. ' safe' → logprob: -4.630941390991211

Token 100: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.7088987827301025
    2. '_positions' → logprob: -0.9588987827301025
    3. '_candidates' → logprob: -2.9588987827301025
    4. '_path' → logprob: -4.333898544311523
    5. '_circle' → logprob: -4.708898544311523
    6. '_possible' → logprob: -4.833898544311523
    7. '_neighbors' → logprob: -4.958898544311523
    8. '_' → logprob: -5.208898544311523
    9. '_candidate' → logprob: -5.708898544311523
    10. '_polygon' → logprob: -6.083898544311523

Token 101: '(mon' (ID: 142845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0812166929244995
    2. '(pos' → logprob: -1.7062166929244995
    3. '(start' → logprob: -2.081216812133789
    4. '():' → logprob: -2.081216812133789
    5. '(size' → logprob: -2.706216812133789
    6. '(center' → logprob: -3.206216812133789
    7. '(points' → logprob: -3.456216812133789
    8. '(radius' → logprob: -3.706216812133789
    9. '(p' → logprob: -3.956216812133789
    10. '(x' → logprob: -4.581216812133789

Token 102: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -0.0004384174826554954
    2. 'ster' → logprob: -8.750438690185547
    3. 'st' → logprob: -9.500438690185547
    4. '```' → logprob: -9.875438690185547
    5. '=' → logprob: -10.625438690185547
    6. '(' → logprob: -10.875438690185547
    7. 's' → logprob: -11.000438690185547
    8. '()' → logprob: -11.000438690185547
    9. '#' → logprob: -11.125438690185547
    10. '[' → logprob: -11.875438690185547

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08915495127439499
    2. ',' → logprob: -2.4641549587249756
    3. ' ):' → logprob: -9.464155197143555
    4. '):
' → logprob: -9.589155197143555
    5. ')' → logprob: -9.839155197143555
    6. '   ' → logprob: -12.089155197143555
    7. ' ,' → logprob: -12.589155197143555
    8. ':' → logprob: -13.339155197143555
    9. ',m' → logprob: -13.339155197143555
    10. ']:' → logprob: -14.089155197143555

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003312937042210251
    2. ' points' → logprob: -8.250330924987793
    3. 'points' → logprob: -10.375330924987793
    4. '	points' → logprob: -11.000330924987793
    5. ' for' → logprob: -11.500330924987793
    6. '(points' → logprob: -12.000330924987793
    7. '```' → logprob: -14.000330924987793
    8. '_points' → logprob: -14.375330924987793
    9. ' new' → logprob: -14.625330924987793
    10. '   ' → logprob: -14.750330924987793

Token 105: ' pts' (ID: 66515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7623391151428223
    2. ' points' → logprob: -0.8873391151428223
    3. 'points' → logprob: -2.1373391151428223
    4. '	points' → logprob: -6.262339115142822
    5. ' for' → logprob: -7.262339115142822
    6. '(points' → logprob: -8.262338638305664
    7. 'for' → logprob: -8.887338638305664
    8. ' import' → logprob: -9.012338638305664
    9. ' n' → logprob: -9.012338638305664
    10. 'n' → logprob: -9.262338638305664

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004095854703336954
    2. '=' → logprob: -5.504096031188965
    3. '=[]' → logprob: -12.004096031188965
    4. ' ' → logprob: -12.004096031188965
    5. '   ' → logprob: -12.629096031188965
    6. ',' → logprob: -14.629096031188965
    7. ':' → logprob: -15.379096031188965
    8. '  ' → logprob: -15.504096031188965
    9. ' =[' → logprob: -15.879096031188965
    10. 's' → logprob: -16.00409507751465

Token 107: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03433118388056755
    2. ' []' → logprob: -4.284331321716309
    3. 'set' → logprob: -4.409331321716309
    4. 'mon' → logprob: -5.409331321716309
    5. ' set' → logprob: -6.409331321716309
    6. '[' → logprob: -6.909331321716309
    7. '[]
' → logprob: -8.034331321716309
    8. '[:]' → logprob: -9.409331321716309
    9. '[]}' → logprob: -10.159331321716309
    10. '[m' → logprob: -10.159331321716309

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01776648685336113
    2. ' for' → logprob: -4.51776647567749
    3. 'for' → logprob: -5.01776647567749
    4. '<|end|>' → logprob: -10.767766952514648
    5. '
' → logprob: -11.017766952514648
    6. 'n' → logprob: -11.142766952514648
    7. '    
' → logprob: -11.642766952514648
    8. '	for' → logprob: -12.642766952514648
    9. ',' → logprob: -12.892766952514648
    10. ' n' → logprob: -13.017766952514648

Token 109: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2943088114261627
    2. ' for' → logprob: -1.6693087816238403
    3. 'n' → logprob: -3.41930890083313
    4. '   ' → logprob: -3.91930890083313
    5. ' n' → logprob: -4.294308662414551
    6. 'mon' → logprob: -9.29430866241455
    7. 'if' → logprob: -9.54430866241455
    8. 'points' → logprob: -9.91930866241455
    9. ' if' → logprob: -10.29430866241455
    10. 'pts' → logprob: -10.66930866241455

Token 110: ' add' (ID: 1147)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5493853688240051
    2. 'for' → logprob: -0.9243853688240051
    3. ' n' → logprob: -4.2993855476379395
    4. 'n' → logprob: -4.4243855476379395
    5. '   ' → logprob: -9.299385070800781
    6. 'from' → logprob: -9.549385070800781
    7. ' if' → logprob: -10.549385070800781
    8. '#' → logprob: -10.674385070800781
    9. 'if' → logprob: -11.174385070800781
    10. ' from' → logprob: -11.174385070800781

Token 111: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6137160658836365
    2. 'mon' → logprob: -1.1137161254882812
    3. 'for' → logprob: -2.7387161254882812
    4. ' all' → logprob: -3.9887161254882812
    5. ' monsters' → logprob: -4.238716125488281
    6. ' mon' → logprob: -5.113716125488281
    7. '<|end|>' → logprob: -5.238716125488281
    8. '(mon' → logprob: -5.613716125488281
    9. 'import' → logprob: -5.738716125488281
    10. ' the' → logprob: -6.113716125488281

Token 112: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03631710261106491
    2. '=' → logprob: -3.6613171100616455
    3. ',' → logprob: -5.411316871643066
    4. '_pts' → logprob: -6.536316871643066
    5. '_pos' → logprob: -6.661316871643066
    6. '_point' → logprob: -7.161316871643066
    7. 'pos' → logprob: -7.161316871643066
    8. 'points' → logprob: -8.411316871643066
    9. '_points' → logprob: -8.411316871643066
    10. 'pts' → logprob: -8.786316871643066

Token 113: ' goal' (ID: 8583)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03961854428052902
    2. ' end' → logprob: -3.289618492126465
    3. '(end' → logprob: -7.414618492126465
    4. 'finish' → logprob: -8.039618492126465
    5. 'goal' → logprob: -8.539618492126465
    6. '(' → logprob: -8.664618492126465
    7. 'target' → logprob: -9.664618492126465
    8. ' (' → logprob: -9.914618492126465
    9. 'mon' → logprob: -10.039618492126465
    10. ' goal' → logprob: -10.164618492126465

Token 114: ' boundaries' (ID: 35665)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.4853503108024597
    2. '_pts' → logprob: -1.3603503704071045
    3. '   ' → logprob: -3.1103503704071045
    4. 'points' → logprob: -3.4853503704071045
    5. ' pts' → logprob: -3.4853503704071045
    6. ' =' → logprob: -4.985350131988525
    7. ',' → logprob: -5.360350131988525
    8. ' points' → logprob: -5.610350131988525
    9. '_points' → logprob: -6.110350131988525
    10. '.append' → logprob: -6.110350131988525

Token 115: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08360602706670761
    2. '<|end|>' → logprob: -3.208606004714966
    3. 'pts' → logprob: -4.583606243133545
    4. '
' → logprob: -5.083606243133545
    5. '<|end|>' → logprob: -5.333606243133545
    6. '_pts' → logprob: -5.833606243133545
    7. '    
' → logprob: -5.833606243133545
    8. ' for' → logprob: -5.958606243133545
    9. ' pts' → logprob: -6.083606243133545
    10. ',' → logprob: -6.458606243133545

Token 116: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4705013632774353
    2. '[(' → logprob: -2.22050142288208
    3. ' [(' → logprob: -2.84550142288208
    4. '[' → logprob: -3.22050142288208
    5. ' monsters' → logprob: -3.34550142288208
    6. ' corners' → logprob: -3.59550142288208
    7. 'mon' → logprob: -3.72050142288208
    8. '[
' → logprob: -4.47050142288208
    9. ' pts' → logprob: -4.72050142288208
    10. ' (' → logprob: -4.72050142288208

Token 117: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0321337953209877
    2. '
' → logprob: -3.9071338176727295
    3. '<|end|>' → logprob: -5.90713357925415
    4. '    
' → logprob: -6.03213357925415
    5. 'pts' → logprob: -6.53213357925415
    6. ' for' → logprob: -6.65713357925415
    7. '<|end|>' → logprob: -7.40713357925415
    8. 'for' → logprob: -7.53213357925415
    9. 'points' → logprob: -7.65713357925415
    10. '    ' → logprob: -7.78213357925415

Token 118: 'y' (ID: 88)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.8361173272132874
    2. ' pts' → logprob: -1.7111172676086426
    3. '(' → logprob: -1.9611172676086426
    4. ' (' → logprob: -2.2111172676086426
    5. '0' → logprob: -2.9611172676086426
    6. ')' → logprob: -3.2111172676086426
    7. ' for' → logprob: -4.336117267608643
    8. 'for' → logprob: -4.461117267608643
    9. '   ' → logprob: -5.211117267608643
    10. '(-' → logprob: -6.086117267608643

Token 119: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1649702489376068
    2. ' =' → logprob: -2.0399701595306396
    3. ',' → logprob: -4.539970397949219
    4. ' in' → logprob: -5.664970397949219
    5. ' for' → logprob: -6.039970397949219
    6. 's' → logprob: -6.664970397949219
    7. ')' → logprob: -6.789970397949219
    8. ' ,' → logprob: -7.039970397949219
    9. ' ranges' → logprob: -7.789970397949219
    10. 'range' → logprob: -8.289970397949219

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23266737163066864
    2. '-' → logprob: -1.732667326927185
    3. ' ' → logprob: -4.107667446136475
    4. ' -' → logprob: -4.982667446136475
    5. '1' → logprob: -5.232667446136475
    6. 'range' → logprob: -6.732667446136475
    7. ' range' → logprob: -8.357666969299316
    8. 'math' → logprob: -9.107666969299316
    9. '   ' → logprob: -9.857666969299316
    10. '```' → logprob: -9.982666969299316

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22130991518497467
    2. '-' → logprob: -1.7213099002838135
    3. '1' → logprob: -4.346310138702393
    4. ' ' → logprob: -5.846310138702393
    5. ' -' → logprob: -6.471310138702393
    6. 'range' → logprob: -6.471310138702393
    7. ' range' → logprob: -9.096309661865234
    8. 'math' → logprob: -9.721309661865234
    9. '2' → logprob: -9.846309661865234
    10. '100' → logprob: -9.971309661865234

Token 122: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.42833665013313293
    2. ',' → logprob: -1.1783366203308105
    3. ' ,' → logprob: -3.6783366203308105
    4. ')' → logprob: -5.0533366203308105
    5. 'to' → logprob: -5.5533366203308105
    6. ' )' → logprob: -6.3033366203308105
    7. ' ' → logprob: -6.5533366203308105
    8. '<|end|>' → logprob: -7.6783366203308105
    9. '=' → logprob: -8.428337097167969
    10. ' and' → logprob: -8.428337097167969

Token 123: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6911314129829407
    2. '100' → logprob: -1.566131353378296
    3. '1' → logprob: -2.066131353378296
    4. '10' → logprob: -2.941131353378296
    5. '20' → logprob: -4.066131591796875
    6. '499' → logprob: -4.566131591796875
    7. '0' → logprob: -4.816131591796875
    8. '50' → logprob: -4.816131591796875
    9. '99' → logprob: -4.941131591796875
    10. '500' → logprob: -5.066131591796875

Token 124: '4' (ID: 19)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5119966268539429
    2. '1' → logprob: -1.8869966268539429
    3. '10' → logprob: -2.1369967460632324
    4. '99' → logprob: -4.011996746063232
    5. '20' → logprob: -4.136996746063232
    6. '50' → logprob: -4.886996746063232
    7. '999' → logprob: -4.886996746063232
    8. '9' → logprob: -5.011996746063232
    9. '499' → logprob: -5.011996746063232
    10. '500' → logprob: -5.011996746063232

Token 125: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.525442361831665
    2. ',' → logprob: -1.275442361831665
    3. '   ' → logprob: -3.150442361831665
    4. ')' → logprob: -3.150442361831665
    5. 'for' → logprob: -3.275442361831665
    6. ' range' → logprob: -6.150442123413086
    7. 'range' → logprob: -7.150442123413086
    8. ',
' → logprob: -7.275442123413086
    9. ' ,' → logprob: -7.400442123413086
    10. ')
' → logprob: -7.525442123413086

Token 126: ' steps' (ID: 10331)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009643697179853916
    2. 'range' → logprob: -4.8846435546875
    3. ' [' → logprob: -6.8846435546875
    4. '[' → logprob: -7.0096435546875
    5. ' steps' → logprob: -10.5096435546875
    6. '   ' → logprob: -11.1346435546875
    7. ' ' → logprob: -11.5096435546875
    8. ')' → logprob: -11.8846435546875
    9. ',' → logprob: -11.8846435546875
    10. '1' → logprob: -12.2596435546875

Token 127: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02506859600543976
    2. '   ' → logprob: -4.400068759918213
    3. ' of' → logprob: -4.775068759918213
    4. '1' → logprob: -6.025068759918213
    5. ' =' → logprob: -7.400068759918213
    6. 'of' → logprob: -7.900068759918213
    7. '0' → logprob: -8.400068283081055
    8. '4' → logprob: -9.400068283081055
    9. '5' → logprob: -9.900068283081055
    10. ' ' → logprob: -10.025068283081055

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9505045413970947
    2. 'for' → logprob: -0.9505045413970947
    3. ' for' → logprob: -1.7005045413970947
    4. '
' → logprob: -3.4505045413970947
    5. '    
' → logprob: -5.825504302978516
    6. ',' → logprob: -5.950504302978516
    7. ':' → logprob: -6.325504302978516
    8. ' 
' → logprob: -6.950504302978516
    9. '   
' → logprob: -7.325504302978516
    10. '    ' → logprob: -7.575504302978516

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22593152523040771
    2. 'for' (adapté à ' for') → logprob: -1.7259315252304077
    3. '   ' → logprob: -3.7259316444396973
    4. '
' → logprob: -9.725931167602539
    5. ' y' → logprob: -10.350931167602539
    6. 'y' → logprob: -11.100931167602539
    7. '    ' → logprob: -11.850931167602539
    8. ' ' → logprob: -12.100931167602539
    9. '	for' → logprob: -12.850931167602539
    10. '    
' → logprob: -12.975931167602539

Token 130: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.012364726513624191
    2. ' i' → logprob: -5.137364864349365
    3. 'y' → logprob: -5.387364864349365
    4. ' x' → logprob: -6.512364864349365
    5. 'i' → logprob: -9.637364387512207
    6. ' j' → logprob: -9.637364387512207
    7. ' _' → logprob: -10.262364387512207
    8. 'x' → logprob: -10.262364387512207
    9. '   ' → logprob: -10.512364387512207
    10. ' ' → logprob: -10.512364387512207

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012700702995061874
    2. 'in' → logprob: -4.38770055770874
    3. ' ' → logprob: -8.762701034545898
    4. '   ' → logprob: -11.762701034545898
    5. '  ' → logprob: -12.137701034545898
    6. ')' → logprob: -12.512701034545898
    7. '```' → logprob: -12.762701034545898
    8. ',' → logprob: -12.887701034545898
    9. '	in' → logprob: -13.012701034545898
    10. '_in' → logprob: -13.512701034545898

Token 132: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4742851257324219
    2. ' range' → logprob: -0.9742851257324219
    3. '[' → logprob: -8.599285125732422
    4. '(range' → logprob: -11.849285125732422
    5. ' ' → logprob: -12.099285125732422
    6. ' [' → logprob: -12.349285125732422
    7. '   ' → logprob: -12.349285125732422
    8. '	range' → logprob: -13.474285125732422
    9. '  ' → logprob: -14.724285125732422
    10. ' xrange' → logprob: -15.599285125732422

Token 133: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5004883408546448
    2. 'i' → logprob: -1.00048828125
    3. ' i' → logprob: -3.75048828125
    4. ' ' → logprob: -6.12548828125
    5. 'x' → logprob: -8.75048828125
    6. '   ' → logprob: -9.50048828125
    7. 'j' → logprob: -9.75048828125
    8. 'float' → logprob: -10.87548828125
    9. 'round' → logprob: -11.00048828125
    10. ' x' → logprob: -11.62548828125

Token 134: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2871510684490204
    2. '*' → logprob: -1.4121510982513428
    3. '/' → logprob: -5.912150859832764
    4. ' for' → logprob: -6.037150859832764
    5. 'for' → logprob: -7.912150859832764
    6. ' ' → logprob: -8.162151336669922
    7. ' /' → logprob: -8.787151336669922
    8. '0' → logprob: -9.537151336669922
    9. ' in' → logprob: -12.787151336669922
    10. 'import' → logprob: -13.287151336669922

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030104855075478554
    2. '1' → logprob: -3.905104875564575
    3. ' ' → logprob: -4.655104637145996
    4. '   ' → logprob: -13.405104637145996
    5. '.' → logprob: -13.655104637145996
    6. '4' → logprob: -15.280104637145996
    7. '5' → logprob: -15.717604637145996
    8. '  ' → logprob: -15.967604637145996
    9. '
' → logprob: -16.030105590820312
    10. '2' → logprob: -16.155105590820312

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28466078639030457
    2. '1' → logprob: -1.409660816192627
    3. ' ' → logprob: -5.659660816192627
    4. '.' → logprob: -11.972160339355469
    5. '   ' → logprob: -12.347160339355469
    6. '
' → logprob: -13.659660339355469
    7. '4' → logprob: -13.909660339355469
    8. '(' → logprob: -13.909660339355469
    9. 'step' → logprob: -14.159660339355469
    10. '```' → logprob: -14.222160339355469

Token 137: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000329386442899704
    2. '0' → logprob: -8.50032901763916
    3. '2' → logprob: -10.00032901763916
    4. '1' → logprob: -10.25032901763916
    5. ' .' → logprob: -10.87532901763916
    6. '`.' → logprob: -11.75032901763916
    7. '4' → logprob: -12.25032901763916
    8. '```' → logprob: -12.50032901763916
    9. '5' → logprob: -12.87532901763916
    10. '3' → logprob: -13.50032901763916

Token 138: '5' (ID: 20)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.30596160888671875
    2. '5' → logprob: -1.4309616088867188
    3. '1' → logprob: -4.305961608886719
    4. '2' → logprob: -4.805961608886719
    5. '8' → logprob: -6.430961608886719
    6. 'step' → logprob: -8.180961608886719
    7. '05' → logprob: -8.305961608886719
    8. '75' → logprob: -8.680961608886719
    9. '125' → logprob: -9.180961608886719
    10. '01' → logprob: -9.493461608886719

Token 139: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02983240596950054
    2. 'for' → logprob: -3.529832363128662
    3. ' ' → logprob: -9.52983283996582
    4. '	for' → logprob: -12.27983283996582
    5. '   ' → logprob: -12.77983283996582
    6. '  ' → logprob: -14.15483283996582
    7. '    ' → logprob: -15.15483283996582
    8. ' ' → logprob: -15.27983283996582
    9. '/' → logprob: -15.90483283996582
    10. '
' → logprob: -16.90483283996582

Token 140: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08019352704286575
    2. 'range' → logprob: -2.580193519592285
    3. ' i' → logprob: -6.830193519592285
    4. 'i' → logprob: -8.455193519592285
    5. ' y' → logprob: -12.205193519592285
    6. ' ' → logprob: -13.580193519592285
    7. ' xrange' → logprob: -13.955193519592285
    8. '	range' → logprob: -14.080193519592285
    9. '[' → logprob: -14.955193519592285
    10. 'y' → logprob: -15.080193519592285

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051389992237091064
    2. ' range' → logprob: -3.4263899326324463
    3. 'range' → logprob: -4.801390171051025
    4. 'in' → logprob: -4.926390171051025
    5. '(range' → logprob: -6.176390171051025
    6. '	range' → logprob: -10.926389694213867
    7. ' ' → logprob: -11.926389694213867
    8. ' xrange' → logprob: -12.176389694213867
    9. '(' → logprob: -12.301389694213867
    10. '<|end|>' → logprob: -12.676389694213867

Token 142: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246755823493004
    2. ' range' → logprob: -3.7732467651367188
    3. '(range' → logprob: -14.023246765136719
    4. '	range' → logprob: -15.148246765136719
    5. ' ' → logprob: -16.14824676513672
    6. '[' → logprob: -16.89824676513672
    7. '   ' → logprob: -17.27324676513672
    8. '`' → logprob: -18.52324676513672
    9. ' xrange' → logprob: -18.52324676513672
    10. '  ' → logprob: -18.77324676513672

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009228924172930419
    2. '9' → logprob: -7.000922679901123
    3. ' (' → logprob: -11.625923156738281
    4. ' ' → logprob: -13.500923156738281
    5. '10' → logprob: -14.375923156738281
    6. '0' → logprob: -15.750923156738281
    7. '   ' → logprob: -16.50092315673828
    8. '(
' → logprob: -16.62592315673828
    9. '```' → logprob: -16.87592315673828
    10. '	' → logprob: -17.25092315673828

Token 144: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0007779388688504696
    2. ' ' → logprob: -7.250777721405029
    3. '10' → logprob: -10.375778198242188
    4. '(' → logprob: -10.625778198242188
    5. '0' → logprob: -12.000778198242188
    6. '   ' → logprob: -13.750778198242188
    7. '```' → logprob: -14.000778198242188
    8. '	' → logprob: -14.125778198242188
    9. '
' → logprob: -14.875778198242188
    10. '1' → logprob: -14.875778198242188

Token 145: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07638568431138992
    2. ')]' → logprob: -2.701385736465454
    3. '):' → logprob: -5.451385498046875
    4. ']' → logprob: -6.576385498046875
    5. ']:' → logprob: -8.451385498046875
    6. ']):' → logprob: -8.826385498046875
    7. ' )' → logprob: -9.201385498046875
    8. ' ]' → logprob: -9.326385498046875
    9. ',' → logprob: -10.326385498046875
    10. '   ' → logprob: -10.451385498046875

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00600819056853652
    2. ':
' → logprob: -5.256008148193359
    3. '       ' → logprob: -7.631008148193359
    4. ',' → logprob: -9.00600814819336
    5. '   ' → logprob: -9.00600814819336
    6. '):' → logprob: -10.75600814819336
    7. '<|end|>' → logprob: -11.50600814819336
    8. '):
' → logprob: -12.38100814819336
    9. ':

' → logprob: -13.25600814819336
    10. ' :' → logprob: -13.63100814819336

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000356199947418645
    2. ',' → logprob: -8.750356674194336
    3. '   ' → logprob: -8.875356674194336
    4. ':' → logprob: -10.750356674194336
    5. ' pts' → logprob: -11.750356674194336
    6. '
' → logprob: -12.750356674194336
    7. ':
' → logprob: -12.750356674194336
    8. '      ' → logprob: -13.000356674194336
    9. ' for' → logprob: -13.000356674194336
    10. '           ' → logprob: -13.000356674194336

Token 148: ' start' (ID: 1604)
  Prédit: ' pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.518452525138855
    2. '   ' → logprob: -1.393452525138855
    3. 'pts' → logprob: -2.1434526443481445
    4. '       ' → logprob: -3.3934526443481445
    5. ' for' → logprob: -6.1434526443481445
    6. 'pt' → logprob: -7.1434526443481445
    7. '_pts' → logprob: -7.2684526443481445
    8. 'for' → logprob: -7.5184526443481445
    9. '    ' → logprob: -7.8934526443481445
    10. ' ' → logprob: -8.393452644348145

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45815661549568176
    2. '_point' → logprob: -1.9581565856933594
    3. '_pts' → logprob: -1.9581565856933594
    4. '_points' → logprob: -3.5831565856933594
    5. '=' → logprob: -3.8331565856933594
    6. '_pos' → logprob: -4.333156585693359
    7. '_pt' → logprob: -4.833156585693359
    8. 'point' → logprob: -6.083156585693359
    9. 'points' → logprob: -6.458156585693359
    10. '   ' → logprob: -6.458156585693359

Token 150: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06996700167655945
    2. ' (' → logprob: -2.694967031478882
    3. '[' → logprob: -11.319967269897461
    4. '   ' → logprob: -12.069967269897461
    5. '(-' → logprob: -12.194967269897461
    6. ' [' → logprob: -13.069967269897461
    7. '0' → logprob: -13.819967269897461
    8. ' ' → logprob: -13.944967269897461
    9. '(x' → logprob: -13.944967269897461
    10. '(y' → logprob: -14.319967269897461

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021826191805303097
    2. '-' → logprob: -6.502182483673096
    3. ' ' → logprob: -8.002182960510254
    4. '1' → logprob: -8.502182960510254
    5. '(' → logprob: -10.127182960510254
    6. '4' → logprob: -10.627182960510254
    7. ' -' → logprob: -11.189682960510254
    8. '2' → logprob: -11.314682960510254
    9. '   ' → logprob: -11.377182960510254
    10. '3' → logprob: -12.002182960510254

Token 152: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004750745836645365
    2. ',y' → logprob: -5.879750728607178
    3. ' ,' → logprob: -6.254750728607178
    4. '0' → logprob: -12.254751205444336
    5. ',
' → logprob: -12.379751205444336
    6. 'y' → logprob: -12.504751205444336
    7. ' ' → logprob: -12.504751205444336
    8. '   ' → logprob: -13.254751205444336
    9. '.' → logprob: -13.754751205444336
    10. '```' → logprob: -15.067251205444336

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11434300988912582
    2. '5' → logprob: -2.3643429279327393
    3. 'y' → logprob: -4.489343166351318
    4. ',' → logprob: -6.114343166351318
    5. '   ' → logprob: -8.86434268951416
    6. ' y' → logprob: -9.11434268951416
    7. ' ' → logprob: -9.23934268951416
    8. '25' → logprob: -9.61434268951416
    9. ',y' → logprob: -9.73934268951416
    10. '       ' → logprob: -10.23934268951416

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008395071141421795
    2. ' ,' → logprob: -5.133395195007324
    3. ',y' → logprob: -6.008395195007324
    4. ' ' → logprob: -12.883395195007324
    5. '   ' → logprob: -13.758395195007324
    6. ',
' → logprob: -14.758395195007324
    7. 'y' → logprob: -14.883395195007324
    8. '‌,' → logprob: -15.383395195007324
    9. '	' → logprob: -15.508395195007324
    10. '  ' → logprob: -16.008394241333008

Token 155: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007101670489646494
    2. ' y' → logprob: -7.2507100105285645
    3. '	y' → logprob: -16.000709533691406
    4. ')y' → logprob: -17.125709533691406
    5. '   ' → logprob: -17.875709533691406
    6. '0' → logprob: -18.000709533691406
    7. ' ' → logprob: -19.125709533691406
    8. '‘y' → logprob: -19.750709533691406
    9. '    ' → logprob: -19.875709533691406
    10. '  ' → logprob: -20.250709533691406

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013317868579179049
    2. ')
' → logprob: -6.626331806182861
    3. ' )' → logprob: -12.876331329345703
    4. ')

' → logprob: -13.501331329345703
    5. ',' → logprob: -13.626331329345703
    6. ')
' → logprob: -14.751331329345703
    7. '),' → logprob: -15.626331329345703
    8. '   ' → logprob: -16.876331329345703
    9. ',)' → logprob: -17.001331329345703
    10. '))' → logprob: -17.751331329345703

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010775875998660922
    2. ',' → logprob: -7.001077651977539
    3. ')' → logprob: -10.126077651977539
    4. '<|end|>' → logprob: -10.501077651977539
    5. 'pts' → logprob: -10.626077651977539
    6. ',
' → logprob: -10.876077651977539
    7. '
' → logprob: -11.126077651977539
    8. '        
' → logprob: -11.501077651977539
    9. ' pts' → logprob: -12.001077651977539
    10. '   ' → logprob: -12.376077651977539

Token 158: ' goal' (ID: 8583)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.42510783672332764
    2. ' pts' → logprob: -1.5501078367233276
    3. '       ' → logprob: -2.300107955932617
    4. 'goal' (adapté à ' goal') → logprob: -3.925107955932617
    5. ' goal' → logprob: -4.800107955932617
    6. 'end' → logprob: -5.800107955932617
    7. 'pt' → logprob: -6.550107955932617
    8. ' end' → logprob: -8.675107955932617
    9. '_pts' → logprob: -8.925107955932617
    10. 'if' → logprob: -8.987607955932617

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012516485527157784
    2. '=' → logprob: -4.387516498565674
    3. 's' → logprob: -12.387516021728516
    4. ',' → logprob: -14.137516021728516
    5. ' ' → logprob: -14.137516021728516
    6. ')' → logprob: -14.762516021728516
    7. ' =(' → logprob: -15.262516021728516
    8. '_' → logprob: -15.512516021728516
    9. '   ' → logprob: -17.012516021728516
    10. '1' → logprob: -17.137516021728516

Token 160: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20141518115997314
    2. ' (' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.576415061950684
    4. '   ' → logprob: -14.576415061950684
    5. '  ' → logprob: -15.826415061950684
    6. '((' → logprob: -17.326416015625
    7. '1' → logprob: -17.763916015625
    8. '(float' → logprob: -17.763916015625
    9. '4' → logprob: -18.201416015625
    10. '（' → logprob: -18.263916015625

Token 161: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.765349805355072
    2. '4' → logprob: -1.0153498649597168
    3. '5' → logprob: -2.015349864959717
    4. '10' → logprob: -4.140349864959717
    5. ' (' → logprob: -4.265349864959717
    6. ' ' → logprob: -5.515349864959717
    7. '1' → logprob: -6.515349864959717
    8. '8' → logprob: -6.765349864959717
    9. '6' → logprob: -7.140349864959717
    10. '9' → logprob: -7.765349864959717

Token 162: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.47495681833243e-05
    2. ',' → logprob: -11.000024795532227
    3. '0' → logprob: -12.000024795532227
    4. ' .' → logprob: -14.125024795532227
    5. ' ' → logprob: -14.500024795532227
    6. '.,' → logprob: -14.875024795532227
    7. ' ,' → logprob: -15.500024795532227
    8. '4' → logprob: -16.625024795532227
    9. '```' → logprob: -17.000024795532227
    10. ')' → logprob: -18.000024795532227

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.500015258789062
    3. '5' → logprob: -12.750015258789062
    4. ',' → logprob: -14.000015258789062
    5. '4' → logprob: -14.875015258789062
    6. '```' → logprob: -15.125015258789062
    7. ')' → logprob: -15.687515258789062
    8. '   ' → logprob: -15.812515258789062
    9. 'float' → logprob: -17.187515258789062
    10. '  ' → logprob: -17.625015258789062

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.538490950129926e-05
    2. ' ,' → logprob: -10.000055313110352
    3. ',y' → logprob: -11.625055313110352
    4. ',
' → logprob: -15.125055313110352
    5. 'y' → logprob: -15.625055313110352
    6. ')' → logprob: -16.12505531311035
    7. '0' → logprob: -16.37505531311035
    8. '‌,' → logprob: -16.50005531311035
    9. '),' → logprob: -16.87505531311035
    10. ' ' → logprob: -17.00005531311035

Token 165: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759422183036804
    2. ' y' → logprob: -0.8259422183036804
    3. '0' → logprob: -13.825942039489746
    4. ' ' → logprob: -14.200942039489746
    5. '	y' → logprob: -14.575942039489746
    6. ')y' → logprob: -15.700942039489746
    7. ' ' → logprob: -15.825942039489746
    8. '<|end|>' → logprob: -15.825942039489746
    9. ')' → logprob: -17.450942993164062
    10. '   ' → logprob: -17.450942993164062

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004089916590601206
    2. ')
' → logprob: -5.504089832305908
    3. ' )' → logprob: -11.754090309143066
    4. '       ' → logprob: -13.629090309143066
    5. ')
' → logprob: -14.004090309143066
    6. ')

' → logprob: -14.129090309143066
    7. '   ' → logprob: -14.504090309143066
    8. ' )
' → logprob: -16.00408935546875
    9. ')#' → logprob: -16.50408935546875
    10. '),' → logprob: -16.75408935546875

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002821928064804524
    2. ',' → logprob: -8.375282287597656
    3. '<|end|>' → logprob: -10.500282287597656
    4. '   ' → logprob: -12.375282287597656
    5. ',
' → logprob: -12.375282287597656
    6. '        
' → logprob: -12.375282287597656
    7. '<|end|>' → logprob: -12.500282287597656
    8. 'pts' → logprob: -13.750282287597656
    9. ')' → logprob: -14.125282287597656
    10. '```' → logprob: -14.250282287597656

Token 168: ' if' (ID: 538)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.2949691116809845
    2. ' pts' → logprob: -1.419969081878662
    3. '
' → logprob: -4.794969081878662
    4. '       ' → logprob: -5.294969081878662
    5. 'pt' → logprob: -8.91996955871582
    6. '        
' → logprob: -9.29496955871582
    7. '_pts' → logprob: -9.66996955871582
    8. '   ' → logprob: -9.66996955871582
    9. ' 
' → logprob: -10.04496955871582
    10. '
' → logprob: -11.16996955871582

Token 169: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.03368857875466347
    2. 'can' → logprob: -3.408688545227051
    3. '	can' → logprob: -10.90868854522705
    4. ' not' → logprob: -11.28368854522705
    5. ' ' → logprob: -12.65868854522705
    6. ' all' → logprob: -12.90868854522705
    7. ' start' → logprob: -13.53368854522705
    8. '   ' → logprob: -14.03368854522705
    9. '  ' → logprob: -14.15868854522705
    10. '(can' → logprob: -14.28368854522705

Token 170: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: 0.0
    2. '_' → logprob: -18.5
    3. '_ST' → logprob: -18.75
    4. '_s' → logprob: -19.25
    5. '_can' → logprob: -19.625
    6. '_start' → logprob: -19.625
    7. 'stand' → logprob: -19.75
    8. ' _' → logprob: -20.75
    9. '_continue' → logprob: -21.5
    10. '_sta' → logprob: -22.25

Token 171: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0002655079588294029
    2. 'art' → logprob: -8.250265121459961
    3. '_and' → logprob: -14.500265121459961
    4. '(and' → logprob: -14.750265121459961
    5. 'stand' → logprob: -14.875265121459961
    6. 'op' → logprob: -14.875265121459961
    7. '(' → logprob: -15.125265121459961
    8. 'a' → logprob: -15.125265121459961
    9. ' and' → logprob: -15.125265121459961
    10. 'ad' → logprob: -15.375265121459961

Token 172: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -7.40998875699006e-05
    2. '(' → logprob: -9.87507438659668
    3. ' (' → logprob: -11.00007438659668
    4. 'start' → logprob: -12.25007438659668
    5. '(end' → logprob: -15.25007438659668
    6. ',start' → logprob: -15.37507438659668
    7. ' start' → logprob: -15.62507438659668
    8. '[start' → logprob: -15.62507438659668
    9. '(
' → logprob: -16.12507438659668
    10. '((' → logprob: -16.50007438659668

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001825642102630809
    2. ' ,' → logprob: -8.625182151794434
    3. ',
' → logprob: -13.875182151794434
    4. '(mon' → logprob: -14.500182151794434
    5. '):' → logprob: -14.875182151794434
    6. '   ' → logprob: -15.000182151794434
    7. ')' → logprob: -15.125182151794434
    8. ',

' → logprob: -15.125182151794434
    9. 'mon' → logprob: -16.12518310546875
    10. '

' → logprob: -16.62518310546875

Token 174: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.0021137394942343235
    2. ' monsters' → logprob: -6.2521138191223145
    3. ')' → logprob: -9.377113342285156
    4. '[' → logprob: -10.752113342285156
    5. '   ' → logprob: -10.752113342285156
    6. 'mons' → logprob: -11.002113342285156
    7. 'monster' → logprob: -11.252113342285156
    8. '(mon' → logprob: -12.252113342285156
    9. ' mon' → logprob: -12.377113342285156
    10. ']' → logprob: -12.627113342285156

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20163552463054657
    2. '):
' → logprob: -1.701635479927063
    3. ')' → logprob: -8.826635360717773
    4. '):
' → logprob: -9.951635360717773
    5. ':' → logprob: -11.701635360717773
    6. '):

' → logprob: -11.951635360717773
    7. '       ' → logprob: -11.951635360717773
    8. '   ' → logprob: -12.951635360717773
    9. ' ):' → logprob: -13.326635360717773
    10. '           ' → logprob: -13.701635360717773

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016504127415828407
    2. ':
' → logprob: -10.000164985656738
    3. '
' → logprob: -10.750164985656738
    4. ':' → logprob: -10.750164985656738
    5. '            
' → logprob: -11.250164985656738
    6. '               ' → logprob: -11.250164985656738
    7. '	       ' → logprob: -11.625164985656738
    8. '):
' → logprob: -11.625164985656738
    9. ' pts' → logprob: -12.125164985656738
    10. ',' → logprob: -12.250164985656738

Token 177: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.4825197756290436
    2. ' pts' → logprob: -1.1075197458267212
    3. '           ' → logprob: -2.9825198650360107
    4. 'pt' → logprob: -7.107519626617432
    5. '       ' → logprob: -7.482519626617432
    6. '               ' → logprob: -9.48252010345459
    7. '_pts' → logprob: -9.85752010345459
    8. '   ' → logprob: -10.10752010345459
    9. ' pt' → logprob: -10.35752010345459
    10. '	       ' → logprob: -10.48252010345459

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.25001335144043
    3. '.ap' → logprob: -15.12501335144043
    4. '.extend' → logprob: -15.25001335144043
    5. '.app' → logprob: -15.75001335144043
    6. '.add' → logprob: -16.62501335144043
    7. ' .' → logprob: -17.62501335144043
    8. 'append' → logprob: -17.75001335144043
    9. '.Append' → logprob: -18.37501335144043
    10. '.insert' → logprob: -19.50001335144043

Token 179: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00010425841173855588
    2. 'start' → logprob: -9.750103950500488
    3. '(' → logprob: -10.125103950500488
    4. ' (' → logprob: -12.750103950500488
    5. '((' → logprob: -13.125103950500488
    6. ' start' → logprob: -14.250103950500488
    7. ',start' → logprob: -16.625104904174805
    8. '[start' → logprob: -16.750104904174805
    9. '(end' → logprob: -17.875104904174805
    10. ':start' → logprob: -18.125104904174805

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011089440435171127
    2. ')
' → logprob: -4.511089324951172
    3. '       ' → logprob: -10.136089324951172
    4. ')
' → logprob: -13.886089324951172
    5. '   ' → logprob: -14.636089324951172
    6. ')

' → logprob: -14.761089324951172
    7. ' )' → logprob: -16.136089324951172
    8. '           ' → logprob: -16.761089324951172
    9. ')\
' → logprob: -18.011089324951172
    10. ')#' → logprob: -18.386089324951172

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022678142704535276
    2. 'if' → logprob: -9.375226974487305
    3. ' if' → logprob: -9.625226974487305
    4. '   ' → logprob: -9.625226974487305
    5. '<|end|>' → logprob: -12.375226974487305
    6. ',' → logprob: -12.875226974487305
    7. '           ' → logprob: -14.000226974487305
    8. ')' → logprob: -14.375226974487305
    9. '        
' → logprob: -15.250226974487305
    10. '      ' → logprob: -15.750226974487305

Token 182: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3522811532020569
    2. '       ' → logprob: -1.352281093597412
    3. ' if' → logprob: -3.352281093597412
    4. '   ' → logprob: -5.727281093597412
    5. '           ' → logprob: -13.22728157043457
    6. ' ' → logprob: -13.35228157043457
    7. '	if' → logprob: -13.60228157043457
    8. '```' → logprob: -14.35228157043457
    9. '        
' → logprob: -14.60228157043457
    10. '    ' → logprob: -14.72728157043457

Token 183: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.313264399766922
    2. 'can' → logprob: -1.3132643699645996
    3. '	can' → logprob: -13.688264846801758
    4. '(can' → logprob: -14.438264846801758
    5. '_can' → logprob: -15.188264846801758
    6. '   ' → logprob: -15.438264846801758
    7. ' ' → logprob: -15.563264846801758
    8. '.can' → logprob: -15.813264846801758
    9. '  ' → logprob: -16.813264846801758
    10. '    ' → logprob: -16.813264846801758

Token 184: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.2520459294319153
    2. 'stand' → logprob: -1.5020458698272705
    3. 'append' → logprob: -9.127045631408691
    4. ' stand' → logprob: -12.127045631408691
    5. 'stood' → logprob: -13.252045631408691
    6. 'stands' → logprob: -14.502045631408691
    7. 'standing' → logprob: -16.002046585083008
    8. 'st' → logprob: -16.502046585083008
    9. '.append' → logprob: -17.002046585083008
    10. '_' → logprob: -17.252046585083008

Token 185: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -8.482821431243792e-05
    2. 'stand' → logprob: -9.62508487701416
    3. 't' → logprob: -11.75008487701416
    4. 'd' → logprob: -14.00008487701416
    5. 'pt' → logprob: -14.00008487701416
    6. 'append' → logprob: -14.00008487701416
    7. '_and' → logprob: -14.12508487701416
    8. 'art' → logprob: -14.25008487701416
    9. 'app' → logprob: -14.62508487701416
    10. 'end' → logprob: -14.75008487701416

Token 186: '(goal' (ID: 196945)
  Prédit: '(goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -2.1008713702030946e-06
    2. '(go' → logprob: -13.375001907348633
    3. '(' → logprob: -15.000001907348633
    4. ' (' → logprob: -15.875001907348633
    5. 'goal' → logprob: -18.125001907348633
    6. '.goal' → logprob: -20.875001907348633
    7. '(end' → logprob: -21.125001907348633
    8. '(problem' → logprob: -21.500001907348633
    9. ')' → logprob: -21.625001907348633
    10. '(game' → logprob: -21.875001907348633

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.919942486798391e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ')' → logprob: -12.625059127807617
    4. '(' → logprob: -13.125059127807617
    5. '(goal' → logprob: -13.875059127807617
    6. ',
' → logprob: -14.875059127807617
    7. '(mon' → logprob: -15.500059127807617
    8. '),' → logprob: -15.625059127807617
    9. ',

' → logprob: -15.750059127807617
    10. 'mon' → logprob: -16.125059127807617

Token 188: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.008671657182276249
    2. ' monsters' → logprob: -4.758671760559082
    3. '(mon' → logprob: -10.258671760559082
    4. 'monster' → logprob: -12.133671760559082
    5. 'mons' → logprob: -12.133671760559082
    6. ' mon' → logprob: -12.758671760559082
    7. '[' → logprob: -13.133671760559082
    8. '   ' → logprob: -14.383671760559082
    9. ')' → logprob: -14.383671760559082
    10. ' ' → logprob: -14.508671760559082

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011171156074851751
    2. '):
' → logprob: -6.87611722946167
    3. ',' → logprob: -10.126116752624512
    4. ')' → logprob: -10.251116752624512
    5. ' ):' → logprob: -12.501116752624512
    6. ':' → logprob: -13.251116752624512
    7. '):
' → logprob: -14.001116752624512
    8. '       ' → logprob: -14.251116752624512
    9. '   ' → logprob: -14.501116752624512
    10. '           ' → logprob: -14.751116752624512

Token 190: '           ' (ID: 352)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.01949867233633995
    2. '           ' → logprob: -4.019498825073242
    3. ' pts' → logprob: -6.894498825073242
    4. '       ' → logprob: -8.144498825073242
    5. 'pt' → logprob: -10.894498825073242
    6. '_pts' → logprob: -11.894498825073242
    7. '   ' → logprob: -12.019498825073242
    8. 'points' → logprob: -12.269498825073242
    9. 'append' → logprob: -12.894498825073242
    10. 'Pts' → logprob: -13.894498825073242

Token 191: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.00018530222587287426
    2. ' pts' → logprob: -8.625185012817383
    3. 'pt' → logprob: -12.875185012817383
    4. '           ' → logprob: -13.500185012817383
    5. '       ' → logprob: -13.875185012817383
    6. 'points' → logprob: -15.000185012817383
    7. '_pts' → logprob: -15.625185012817383
    8. '   ' → logprob: -15.875185012817383
    9. 'Pts' → logprob: -17.250185012817383
    10. ' ' → logprob: -17.875185012817383

Token 192: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.265633419388905e-05
    2. '.' → logprob: -9.750062942504883
    3. 'append' → logprob: -12.625062942504883
    4. '.app' → logprob: -14.750062942504883
    5. '.extend' → logprob: -15.000062942504883
    6. ' .' → logprob: -15.375062942504883
    7. '.Append' → logprob: -17.000062942504883
    8. ').' → logprob: -17.250062942504883
    9. ' append' → logprob: -17.250062942504883
    10. '.ap' → logprob: -18.000062942504883

Token 193: '(goal' (ID: 196945)
  Prédit: '(goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -7.896309739408025e-07
    2. 'goal' → logprob: -14.875000953674316
    3. '(go' → logprob: -15.000000953674316
    4. ' (' → logprob: -17.125
    5. '(' → logprob: -18.625
    6. ' goal' → logprob: -20.25
    7. '.goal' → logprob: -22.0
    8. '((' → logprob: -22.5
    9. '(g' → logprob: -22.625
    10. '(end' → logprob: -22.625

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.141186450899113e-05
    2. ')
' → logprob: -11.125020980834961
    3. '       ' → logprob: -12.250020980834961
    4. '   ' → logprob: -14.250020980834961
    5. ' )' → logprob: -14.625020980834961
    6. '<|end|>' → logprob: -16.00002098083496
    7. ')return' → logprob: -16.25002098083496
    8. ')

' → logprob: -16.62502098083496
    9. '())' → logprob: -17.00002098083496
    10. '))' → logprob: -17.00002098083496

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064619360491633415
    2. ' for' → logprob: -5.506462097167969
    3. 'for' → logprob: -6.381462097167969
    4. '<|end|>' → logprob: -8.756462097167969
    5. ')' → logprob: -8.881462097167969
    6. '       ' → logprob: -9.131462097167969
    7. '
' → logprob: -9.256462097167969
    8. 'def' → logprob: -9.506462097167969
    9. '    
' → logprob: -10.631462097167969
    10. 'return' → logprob: -10.881462097167969

Token 196: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12164708971977234
    2. 'for' (adapté à ' for') → logprob: -2.4966471195220947
    3. ' for' → logprob: -3.6216471195220947
    4. '
' → logprob: -5.746646881103516
    5. '    
' → logprob: -6.371646881103516
    6. 'return' → logprob: -9.121646881103516
    7. 'def' → logprob: -9.371646881103516
    8. '```' → logprob: -9.621646881103516
    9. '  
' → logprob: -9.996646881103516
    10. '#' → logprob: -10.371646881103516

Token 197: ' m' (ID: 284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.323080062866211
    2. ' m' → logprob: -1.573080062866211
    3. ' x' → logprob: -1.948080062866211
    4. 'x' → logprob: -2.073080062866211
    5. 'm' → logprob: -2.198080062866211
    6. 'i' → logprob: -2.198080062866211
    7. ' y' → logprob: -4.823080062866211
    8. ' mx' → logprob: -4.948080062866211
    9. ' monster' → logprob: -5.073080062866211
    10. 'y' → logprob: -5.448080062866211

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00594065198674798
    2. 'in' → logprob: -5.1309404373168945
    3. 'on' → logprob: -11.755940437316895
    4. ',' → logprob: -13.255940437316895
    5. 'o' → logprob: -14.630940437316895
    6. '_index' → logprob: -15.005940437316895
    7. 's' → logprob: -15.130940437316895
    8. '_in' → logprob: -15.255940437316895
    9. ' ' → logprob: -15.505940437316895
    10. ' ' → logprob: -15.880940437316895

Token 199: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.005313923582434654
    2. ' monsters' → logprob: -5.255313873291016
    3. 'range' → logprob: -10.005313873291016
    4. '[' → logprob: -11.255313873291016
    5. 'monster' → logprob: -11.755313873291016
    6. '(mon' → logprob: -12.255313873291016
    7. 'mons' → logprob: -12.755313873291016
    8. ' range' → logprob: -13.380313873291016
    9. '   ' → logprob: -13.880313873291016
    10. ' monst' → logprob: -14.005313873291016

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017242035828530788
    2. ':
' → logprob: -6.3767242431640625
    3. '[' → logprob: -11.876724243164062
    4. ',' → logprob: -11.876724243164062
    5. '   ' → logprob: -12.376724243164062
    6. '):' → logprob: -13.626724243164062
    7. ' :' → logprob: -13.876724243164062
    8. '       ' → logprob: -14.751724243164062
    9. ':**' → logprob: -15.001724243164062
    10. ':

' → logprob: -15.126724243164062

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005856028292328119
    2. ' for' → logprob: -5.755856037139893
    3. ':' → logprob: -6.255856037139893
    4. ',' → logprob: -7.755856037139893
    5. 'for' → logprob: -9.130855560302734
    6. '   ' → logprob: -9.880855560302734
    7. '<|end|>' → logprob: -9.880855560302734
    8. ':
' → logprob: -10.255855560302734
    9. '#' → logprob: -11.630855560302734
    10. ' and' → logprob: -12.005855560302734

Token 202: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48353320360183716
    2. ' for' → logprob: -1.2335331439971924
    3. 'x' → logprob: -2.7335331439971924
    4. '   ' → logprob: -3.8585331439971924
    5. ' x' → logprob: -5.3585333824157715
    6. '#' → logprob: -7.3585333824157715
    7. '       ' → logprob: -8.483532905578613
    8. 'pts' → logprob: -8.608532905578613
    9. ' pts' → logprob: -9.608532905578613
    10. ' ' → logprob: -10.608532905578613

Token 203: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.211961269378662
    2. 'm' → logprob: -1.336961269378662
    3. ' m' → logprob: -1.461961269378662
    4. 'can' → logprob: -2.211961269378662
    5. ' not' → logprob: -3.086961269378662
    6. 'True' → logprob: -4.586961269378662
    7. ' isinstance' → logprob: -4.586961269378662
    8. ' True' → logprob: -4.711961269378662
    9. '0' → logprob: -5.211961269378662
    10. ' ' → logprob: -5.586961269378662

Token 204: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.735893965815194e-05
    2. 'stand' → logprob: -11.000017166137695
    3. '_ST' → logprob: -15.375017166137695
    4. '_' → logprob: -15.625017166137695
    5. ' stand' → logprob: -15.750017166137695
    6. ' m' → logprob: -17.375017166137695
    7. '_s' → logprob: -18.000017166137695
    8. 'continue' → logprob: -18.250017166137695
    9. ' _' → logprob: -18.375017166137695
    10. '\' → logprob: -18.375017166137695

Token 205: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.004787765443325043
    2. 'stand' → logprob: -5.879787921905518
    3. '_st' → logprob: -6.254787921905518
    4. 't' → logprob: -10.25478744506836
    5. 'st' → logprob: -11.50478744506836
    6. '_and' → logprob: -12.62978744506836
    7. '(m' → logprob: -13.12978744506836
    8. '(' → logprob: -13.37978744506836
    9. ' stand' → logprob: -13.87978744506836
    10. '[' → logprob: -14.25478744506836

Token 206: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00909607857465744
    2. '(' → logprob: -4.884096145629883
    3. '((' → logprob: -6.634096145629883
    4. ' (' → logprob: -8.884096145629883
    5. '(
' → logprob: -10.634096145629883
    6. ',' → logprob: -12.509096145629883
    7. '(mon' → logprob: -12.884096145629883
    8. '(tuple' → logprob: -13.259096145629883
    9. '(

' → logprob: -14.259096145629883
    10. ',m' → logprob: -14.634096145629883

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04156026616692543
    2. ',m' → logprob: -4.041560173034668
    3. '(m' → logprob: -4.166560173034668
    4. '(' → logprob: -5.416560173034668
    5. ' ,' → logprob: -6.541560173034668
    6. ',(' → logprob: -7.541560173034668
    7. '):' → logprob: -7.666560173034668
    8. ' (' → logprob: -8.291560173034668
    9. ',
' → logprob: -9.416560173034668
    10. '   ' → logprob: -9.416560173034668

Token 208: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.025380814447999
    2. ' monsters' → logprob: -3.900380849838257
    3. '[' → logprob: -5.650380611419678
    4. '[]' → logprob: -7.400380611419678
    5. '[m' → logprob: -8.525381088256836
    6. ' [' → logprob: -9.275381088256836
    7. '[(' → logprob: -9.400381088256836
    8. '[])' → logprob: -9.400381088256836
    9. '(mon' → logprob: -9.900381088256836
    10. 'mons' → logprob: -10.025381088256836

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005766546353697777
    2. '):
' → logprob: -5.25576639175415
    3. ')' → logprob: -7.63076639175415
    4. ' ):' → logprob: -10.880766868591309
    5. '       ' → logprob: -11.505766868591309
    6. ':' → logprob: -12.130766868591309
    7. '   ' → logprob: -12.255766868591309
    8. '           ' → logprob: -13.255766868591309
    9. ' and' → logprob: -13.630766868591309
    10. ',' → logprob: -13.755766868591309

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20326702296733856
    2. '       ' → logprob: -1.703266978263855
    3. 'pts' → logprob: -7.2032670974731445
    4. ' pts' → logprob: -7.5782670974731445
    5. ':' → logprob: -8.453267097473145
    6. ',' → logprob: -8.953267097473145
    7. ':
' → logprob: -9.703267097473145
    8. 'continue' → logprob: -9.828267097473145
    9. ' continue' → logprob: -10.078267097473145
    10. '          ' → logprob: -10.953267097473145

Token 211: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.5988824367523193
    2. 'pts' (adapté à ' pts') → logprob: -0.8488824367523193
    3. '       ' → logprob: -4.348882675170898
    4. '           ' → logprob: -4.973882675170898
    5. '               ' → logprob: -6.223882675170898
    6. '   ' → logprob: -7.723882675170898
    7. 'pt' → logprob: -9.223882675170898
    8. '_pts' → logprob: -9.348882675170898
    9. 'points' → logprob: -9.598882675170898
    10. '
' → logprob: -9.723882675170898

Token 212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007131471065804362
    2. '.' → logprob: -7.250713348388672
    3. ' .' → logprob: -13.875713348388672
    4. 'append' → logprob: -14.000713348388672
    5. '.extend' → logprob: -14.125713348388672
    6. '.app' → logprob: -14.875713348388672
    7. '.Append' → logprob: -16.000713348388672
    8. '           ' → logprob: -16.125713348388672
    9. '.ap' → logprob: -16.375713348388672
    10. ').' → logprob: -16.750713348388672

Token 213: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.875009536743164
    3. '(tuple' → logprob: -13.500009536743164
    4. ' (' → logprob: -14.125009536743164
    5. '((' → logprob: -15.625009536743164
    6. 'm' → logprob: -17.125009536743164
    7. '(mon' → logprob: -19.000009536743164
    8. 'tuple' → logprob: -19.250009536743164
    9. ' m' → logprob: -19.750009536743164
    10. '(
' → logprob: -19.750009536743164

Token 214: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.980854959692806e-05
    2. ')
' → logprob: -9.625069618225098
    3. '       ' → logprob: -13.125069618225098
    4. '))' → logprob: -14.375069618225098
    5. ' )' → logprob: -14.625069618225098
    6. '   ' → logprob: -14.875069618225098
    7. ')

' → logprob: -16.125070571899414
    8. '())' → logprob: -17.125070571899414
    9. ')return' → logprob: -17.375070571899414
    10. '),' → logprob: -18.000070571899414

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058895014226436615
    2. '       ' → logprob: -3.4338951110839844
    3. '
' → logprob: -4.058895111083984
    4. '<|end|>' → logprob: -5.433895111083984
    5. '    
' → logprob: -6.683895111083984
    6. ' for' → logprob: -7.433895111083984
    7. '        
' → logprob: -8.058895111083984
    8. '<|end|>' → logprob: -8.683895111083984
    9. 'import' → logprob: -8.933895111083984
    10. '	for' → logprob: -8.933895111083984

Token 216: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5498023629188538
    2. '
' → logprob: -1.174802303314209
    3. ' for' → logprob: -2.549802303314209
    4. 'for' → logprob: -4.049802303314209
    5. '    
' → logprob: -4.424802303314209
    6. ' 
' → logprob: -5.924802303314209
    7. '  
' → logprob: -6.674802303314209
    8. ' return' → logprob: -7.424802303314209
    9. '        
' → logprob: -8.299802780151367
    10. '       ' → logprob: -8.299802780151367

Token 217: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -5.848420551046729e-05
    2. ' pts' → logprob: -9.7500581741333
    3. 'pt' → logprob: -16.750059127807617
    4. '[' → logprob: -18.375059127807617
    5. 'points' → logprob: -18.500059127807617
    6. '_pts' → logprob: -20.250059127807617
    7. 'Pts' → logprob: -20.625059127807617
    8. 'nts' → logprob: -21.125059127807617
    9. 'ps' → logprob: -21.375059127807617
    10. '[]' → logprob: -21.500059127807617

Token 218: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027443159371614456
    2. '
' → logprob: -3.7774431705474854
    3. '<|end|>' → logprob: -5.652442932128906
    4. '

' → logprob: -8.402442932128906
    5. '#' → logprob: -9.027442932128906
    6. 'for' → logprob: -9.902442932128906
    7. '<|end|>' → logprob: -9.902442932128906
    8. 'import' → logprob: -9.902442932128906
    9. '\' → logprob: -10.652442932128906
    10. '  
' → logprob: -10.777442932128906

Token 220: ' build' (ID: 3024)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.38718655705451965
    2. ' build' → logprob: -1.8871865272521973
    3. ' d' → logprob: -3.0121865272521973
    4. 'build' → logprob: -3.1371865272521973
    5. 'short' → logprob: -4.262186527252197
    6. ' find' → logprob: -4.387186527252197
    7. ' main' → logprob: -4.512186527252197
    8. 'd' → logprob: -4.637186527252197
    9. ' solve' → logprob: -4.637186527252197
    10. 'main' → logprob: -5.887186527252197

Token 221: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0004216170927975327
    2. 'graph' → logprob: -8.500421524047852
    3. '_' → logprob: -9.250421524047852
    4. '(graph' → logprob: -10.250421524047852
    5. 'Graph' → logprob: -11.375421524047852
    6. '(' → logprob: -11.375421524047852
    7. '_heap' → logprob: -11.500421524047852
    8. '_points' → logprob: -11.750421524047852
    9. '_edges' → logprob: -12.125421524047852
    10. '(points' → logprob: -12.375421524047852

Token 222: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002913884585723281
    2. '(points' → logprob: -5.877913951873779
    3. ' (' → logprob: -9.377913475036621
    4. '(pt' → logprob: -11.377913475036621
    5. '(p' → logprob: -11.627913475036621
    6. '():' → logprob: -14.002913475036621
    7. '(vertices' → logprob: -14.127913475036621
    8. '(nodes' → logprob: -14.377913475036621
    9. '(ps' → logprob: -14.502913475036621
    10. '(mon' → logprob: -15.377913475036621

Token 223: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013017160817980766
    2. '):
' → logprob: -4.513017177581787
    3. ',' → logprob: -6.263017177581787
    4. ' ):' → logprob: -10.013016700744629
    5. ')' → logprob: -11.888016700744629
    6. '):
' → logprob: -12.013016700744629
    7. '   ' → logprob: -13.263016700744629
    8. '):

' → logprob: -13.638016700744629
    9. ':' → logprob: -14.513016700744629
    10. ' ):
' → logprob: -15.388016700744629

Token 224: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.20603381097316742
    2. ' monsters' → logprob: -2.206033706665039
    3. 'max' → logprob: -3.706033706665039
    4. 'threshold' → logprob: -3.956033706665039
    5. 'radius' → logprob: -4.706033706665039
    6. 'r' → logprob: -4.831033706665039
    7. ' radius' → logprob: -5.206033706665039
    8. ' threshold' → logprob: -5.831033706665039
    9. ' max' → logprob: -5.956033706665039
    10. ' r' → logprob: -6.581033706665039

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01031314954161644
    2. ',' → logprob: -5.010313034057617
    3. '):
' → logprob: -5.635313034057617
    4. '   ' → logprob: -11.260313034057617
    5. ')' → logprob: -12.760313034057617
    6. '):
' → logprob: -13.010313034057617
    7. ':' → logprob: -13.135313034057617
    8. '):

' → logprob: -14.135313034057617
    9. ' ):' → logprob: -14.385313034057617
    10. 'def' → logprob: -15.635313034057617

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02755182422697544
    2. ' graph' → logprob: -3.7775518894195557
    3. 'graph' → logprob: -5.527551651000977
    4. '	graph' → logprob: -8.277551651000977
    5. '   ' → logprob: -10.777551651000977
    6. '    
' → logprob: -11.152551651000977
    7. '(graph' → logprob: -11.652551651000977
    8. '_graph' → logprob: -11.777551651000977
    9. '
' → logprob: -12.027551651000977
    10. ' edges' → logprob: -13.277551651000977

Token 227: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10362880676984787
    2. '   ' → logprob: -2.3536288738250732
    3. ' graph' → logprob: -5.728628635406494
    4. 'g' → logprob: -8.978629112243652
    5. '
' → logprob: -11.478629112243652
    6. 'n' (adapté à ' n') → logprob: -11.728629112243652
    7. 'G' → logprob: -12.478629112243652
    8. '	graph' → logprob: -12.478629112243652
    9. 'adj' → logprob: -12.478629112243652
    10. 'Graph' → logprob: -12.853629112243652

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489153787493706
    2. '=' → logprob: -2.929891586303711
    3. ' ' → logprob: -12.804891586303711
    4. ')' → logprob: -12.929891586303711
    5. ',' → logprob: -13.679891586303711
    6. '   ' → logprob: -13.804891586303711
    7. ' =
' → logprob: -14.429891586303711
    8. '=len' → logprob: -14.929891586303711
    9. '  ' → logprob: -15.554891586303711
    10. '	' → logprob: -15.804891586303711

Token 229: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019287518225610256
    2. ' len' → logprob: -6.251928806304932
    3. '(len' → logprob: -16.251928329467773
    4. '[len' → logprob: -18.501928329467773
    5. '=len' → logprob: -20.626928329467773
    6. '	len' → logprob: -21.626928329467773
    7. '   ' → logprob: -22.876928329467773
    8. '<len' → logprob: -23.751928329467773
    9. ',len' → logprob: -24.751928329467773
    10. 'Len' → logprob: -26.001928329467773

Token 230: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.625035285949707
    3. 'points' → logprob: -11.500035285949707
    4. ' points' → logprob: -13.750035285949707
    5. '	points' → logprob: -16.250036239624023
    6. '(parts' → logprob: -17.625036239624023
    7. 'Points' → logprob: -18.125036239624023
    8. '(point' → logprob: -18.375036239624023
    9. '_points' → logprob: -18.875036239624023
    10. '(
' → logprob: -19.625036239624023

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804459050297737
    2. ')
' → logprob: -3.2880446910858154
    3. '   ' → logprob: -13.913044929504395
    4. ' )' → logprob: -14.038044929504395
    5. ')
' → logprob: -14.163044929504395
    6. ')n' → logprob: -15.038044929504395
    7. ')

' → logprob: -15.538044929504395
    8. ' )
' → logprob: -16.788043975830078
    9. ')`' → logprob: -17.038043975830078
    10. '),' → logprob: -17.413043975830078

Token 232: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8095341920852661
    2. '
' → logprob: -1.4345341920852661
    3. ' graph' → logprob: -1.6845341920852661
    4. '   ' → logprob: -2.0595340728759766
    5. '    
' → logprob: -6.434534072875977
    6. ' 
' → logprob: -6.809534072875977
    7. '	graph' → logprob: -7.934534072875977
    8. 'adj' → logprob: -8.184534072875977
    9. 'g' → logprob: -9.684534072875977
    10. ' adj' → logprob: -9.684534072875977

Token 233: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00026968008023686707
    2. ' graph' → logprob: -8.750269889831543
    3. '   ' → logprob: -9.875269889831543
    4. 'adj' → logprob: -10.500269889831543
    5. 'dist' → logprob: -10.750269889831543
    6. 'g' → logprob: -11.625269889831543
    7. 'edges' → logprob: -14.125269889831543
    8. 'G' → logprob: -15.000269889831543
    9. '
' → logprob: -15.375269889831543
    10. 'Graph' → logprob: -15.875269889831543

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510590255260468
    2. '=' → logprob: -4.387510776519775
    3. ' ' → logprob: -14.512510299682617
    4. '   ' → logprob: -16.262510299682617
    5. '[' → logprob: -16.387510299682617
    6. ')' → logprob: -16.512510299682617
    7. ' =
' → logprob: -16.887510299682617
    8. ']' → logprob: -16.887510299682617
    9. ' =[' → logprob: -16.887510299682617
    10. '  ' → logprob: -17.887510299682617

Token 235: ' [[]' (ID: 182908)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.47427505254745483
    2. '[' → logprob: -0.9742750525474548
    3. ' [[]' → logprob: -8.724274635314941
    4. 'default' → logprob: -10.974274635314941
    5. '{}' → logprob: -11.974274635314941
    6. '[{' → logprob: -12.099274635314941
    7. ' {' → logprob: -12.724274635314941
    8. '[[' → logprob: -12.724274635314941
    9. 'collections' → logprob: -15.724274635314941
    10. '[]' → logprob: -15.724274635314941

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3869020342826843
    2. ' for' → logprob: -1.136902093887329
    3. ']' → logprob: -11.38690185546875
    4. '	for' → logprob: -11.76190185546875
    5. '
' → logprob: -12.26190185546875
    6. ')' → logprob: -12.51190185546875
    7. ' ' → logprob: -13.26190185546875
    8. ',' → logprob: -14.13690185546875
    9. 'n' → logprob: -15.13690185546875
    10. '   ' → logprob: -15.76190185546875

Token 237: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014597235713154078
    2. ' range' → logprob: -9.50014591217041
    3. ' _' → logprob: -9.75014591217041
    4. 'range' → logprob: -11.87514591217041
    5. '_range' → logprob: -12.87514591217041
    6. '_i' → logprob: -12.87514591217041
    7. '_
' → logprob: -15.12514591217041
    8. 'i' → logprob: -15.62514591217041
    9. ' in' → logprob: -16.000146865844727
    10. '_]' → logprob: -16.750146865844727

Token 238: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009138475870713592
    2. ' range' → logprob: -7.000913619995117
    3. 'n' → logprob: -13.500913619995117
    4. 'in' → logprob: -14.000913619995117
    5. ' in' → logprob: -16.000913619995117
    6. ' ' → logprob: -17.250913619995117
    7. '(range' → logprob: -17.500913619995117
    8. '  ' → logprob: -17.750913619995117
    9. '   ' → logprob: -18.750913619995117
    10. '	range' → logprob: -20.000913619995117

Token 239: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -17.875553131103516
    4. ' ' → logprob: -20.750553131103516
    5. '   ' → logprob: -20.750553131103516
    6. 'n' → logprob: -21.125553131103516
    7. '	range' → logprob: -22.125553131103516
    8. ')' → logprob: -22.250553131103516
    9. '
' → logprob: -22.500553131103516
    10. '  ' → logprob: -22.625553131103516

Token 240: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12696108222007751
    2. 'n' → logprob: -2.1269609928131104
    3. ' n' → logprob: -10.501960754394531
    4. ')n' → logprob: -13.001960754394531
    5. '(' → logprob: -13.251960754394531
    6. ' (' → logprob: -14.626960754394531
    7. ')' → logprob: -14.751960754394531
    8. '	n' → logprob: -14.751960754394531
    9. '
' → logprob: -16.50196075439453
    10. '   ' → logprob: -16.62696075439453

Token 241: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.44574936106801e-05
    2. ']' → logprob: -9.62507438659668
    3. ')]
' → logprob: -11.87507438659668
    4. ')' → logprob: -15.12507438659668
    5. ')]

' → logprob: -15.12507438659668
    6. '])' → logprob: -15.25007438659668
    7. ' ]' → logprob: -15.50007438659668
    8. ' )' → logprob: -16.25007438659668
    9. '   ' → logprob: -16.50007438659668
    10. ']
' → logprob: -16.62507438659668

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03172656148672104
    2. ' for' → logprob: -3.781726598739624
    3. 'for' → logprob: -4.781726360321045
    4. '
' → logprob: -10.156726837158203
    5. '    
' → logprob: -10.906726837158203
    6. '	for' → logprob: -12.406726837158203
    7. ' ' → logprob: -14.156726837158203
    8. '  ' → logprob: -15.031726837158203
    9. ',' → logprob: -15.156726837158203
    10. ' 
' → logprob: -15.281726837158203

Token 243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025852893013507128
    2. '   ' → logprob: -6.002585411071777
    3. ' for' → logprob: -9.127585411071777
    4. '```' → logprob: -14.502585411071777
    5. 'threshold' → logprob: -15.377585411071777
    6. 'distance' → logprob: -16.00258445739746
    7. '	for' → logprob: -16.50258445739746
    8. '    
' → logprob: -17.75258445739746
    9. '``' → logprob: -18.00258445739746
    10. 'radius' → logprob: -18.12758445739746

Token 244: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06996455788612366
    2. 'i' → logprob: -2.694964647293091
    3. ' u' → logprob: -11.194964408874512
    4. '	i' → logprob: -11.694964408874512
    5. 'u' → logprob: -13.069964408874512
    6. ' ' → logprob: -13.444964408874512
    7. '   ' → logprob: -13.694964408874512
    8. ' ' → logprob: -14.194964408874512
    9. '_i' → logprob: -14.944964408874512
    10. '(i' → logprob: -15.319964408874512

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01926390267908573
    2. 'in' → logprob: -4.144263744354248
    3. ' ' → logprob: -5.769263744354248
    4. ',' → logprob: -9.644264221191406
    5. '+' → logprob: -11.519264221191406
    6. ' ,' → logprob: -11.769264221191406
    7. '  ' → logprob: -12.269264221191406
    8. '	in' → logprob: -12.769264221191406
    9. '   ' → logprob: -12.894264221191406
    10. '1' → logprob: -13.269264221191406

Token 246: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01815006136894226
    2. 'range' → logprob: -4.0181498527526855
    3. '   ' → logprob: -16.643150329589844
    4. ' ' → logprob: -16.768150329589844
    5. '(range' → logprob: -17.268150329589844
    6. '	range' → logprob: -17.643150329589844
    7. '```' → logprob: -18.268150329589844
    8. '  ' → logprob: -18.768150329589844
    9. ')' → logprob: -19.393150329589844
    10. '    ' → logprob: -20.143150329589844

Token 247: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024596223374828696
    2. '(' → logprob: -8.375246047973633
    3. ' (' → logprob: -11.750246047973633
    4. 'n' → logprob: -12.125246047973633
    5. ' n' → logprob: -13.125246047973633
    6. '(i' → logprob: -16.750246047973633
    7. '(j' → logprob: -18.250246047973633
    8. ' ' → logprob: -18.625246047973633
    9. '   ' → logprob: -19.000246047973633
    10. '(len' → logprob: -19.000246047973633

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029839929193258286
    2. '):
' → logprob: -3.5298399925231934
    3. ' ):' → logprob: -9.904839515686035
    4. '   ' → logprob: -11.029839515686035
    5. '-' → logprob: -11.654839515686035
    6. '+' → logprob: -11.904839515686035
    7. ')' → logprob: -12.404839515686035
    8. ':' → logprob: -13.654839515686035
    9. '):
' → logprob: -14.279839515686035
    10. ' -' → logprob: -14.404839515686035

Token 249: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.554775059223175
    2. ' for' → logprob: -0.929775059223175
    3. '       ' → logprob: -3.5547749996185303
    4. 'for' → logprob: -6.054775238037109
    5. '	for' → logprob: -9.92977523803711
    6. ' ' → logprob: -10.05477523803711
    7. '    ' → logprob: -10.17977523803711
    8. ',' → logprob: -10.55477523803711
    9. ' j' → logprob: -10.80477523803711
    10. '<|end|>' → logprob: -11.17977523803711

Token 250: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038134556263685226
    2. 'for' (adapté à ' for') → logprob: -3.2881345748901367
    3. ' j' → logprob: -9.663134574890137
    4. '   ' → logprob: -10.538134574890137
    5. 'j' → logprob: -12.788134574890137
    6. '	for' → logprob: -15.538134574890137
    7. '    ' → logprob: -17.53813362121582
    8. ' ' → logprob: -18.41313362121582
    9. ' ' → logprob: -18.53813362121582
    10. '```' → logprob: -18.91313362121582

Token 251: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06200163811445236
    2. 'j' → logprob: -2.8120017051696777
    3. ' range' → logprob: -11.18700122833252
    4. ' i' → logprob: -11.43700122833252
    5. 'range' → logprob: -12.06200122833252
    6. 'i' → logprob: -12.81200122833252
    7. '   ' → logprob: -15.06200122833252
    8. '	j' → logprob: -15.93700122833252
    9. '[j' → logprob: -16.687002182006836
    10. '$j' → logprob: -16.687002182006836

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009898455813527107
    2. 'in' → logprob: -4.634898662567139
    3. ' i' → logprob: -9.25989818572998
    4. ' ' → logprob: -11.00989818572998
    5. '=i' → logprob: -11.63489818572998
    6. 'i' → logprob: -11.88489818572998
    7. '(i' → logprob: -12.25989818572998
    8. '   ' → logprob: -12.25989818572998
    9. '	in' → logprob: -13.38489818572998
    10. 'range' → logprob: -14.13489818572998

Token 253: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28078925609588623
    2. 'range' → logprob: -2.155789375305176
    3. ' i' → logprob: -2.280789375305176
    4. 'i' → logprob: -3.655789375305176
    5. '(i' → logprob: -7.155789375305176
    6. ' (' → logprob: -9.280789375305176
    7. '(range' → logprob: -9.905789375305176
    8. '   ' → logprob: -11.405789375305176
    9. ' ' → logprob: -11.655789375305176
    10. '[i' → logprob: -12.280789375305176

Token 254: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0054528857581317425
    2. ' (' → logprob: -5.505453109741211
    3. '(n' → logprob: -7.005453109741211
    4. ' i' → logprob: -8.255453109741211
    5. ' range' → logprob: -9.130453109741211
    6. 'i' → logprob: -10.130453109741211
    7. '(' → logprob: -10.380453109741211
    8. 'range' → logprob: -10.880453109741211
    9. '   ' → logprob: -12.880453109741211
    10. ' n' → logprob: -13.255453109741211

Token 255: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018152866512537003
    2. ' +' → logprob: -4.018152713775635
    3. '1' → logprob: -13.268153190612793
    4. '+j' → logprob: -14.268153190612793
    5. '+i' → logprob: -14.518153190612793
    6. ' ' → logprob: -16.518152236938477
    7. '+
' → logprob: -16.518152236938477
    8. '   ' → logprob: -16.518152236938477
    9. ',' → logprob: -17.893152236938477
    10. ' +
' → logprob: -18.768152236938477

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125141143798828
    4. 'n' → logprob: -16.125141143798828
    5. '
' → logprob: -16.250141143798828
    6. ',' → logprob: -16.500141143798828
    7. '```' → logprob: -17.125141143798828
    8. '2' → logprob: -17.875141143798828
    9. ' n' → logprob: -18.000141143798828
    10. ')' → logprob: -18.125141143798828

Token 257: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03207526355981827
    2. ',n' → logprob: -4.03207540512085
    3. ' ,' → logprob: -4.28207540512085
    4. 'n' → logprob: -12.032074928283691
    5. '):' → logprob: -12.032074928283691
    6. ' ):' → logprob: -13.782074928283691
    7. ',len' → logprob: -14.907074928283691
    8. ',j' → logprob: -15.407074928283691
    9. ' n' → logprob: -15.782074928283691
    10. '‌,' → logprob: -16.032075881958008

Token 258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3868812620639801
    2. '):' → logprob: -1.1368812322616577
    3. ':' → logprob: -12.886880874633789
    4. '   ' → logprob: -13.261880874633789
    5. ' ):' → logprob: -13.386880874633789
    6. ' ):
' → logprob: -13.386880874633789
    7. '):
' → logprob: -13.761880874633789
    8. '):

' → logprob: -14.136880874633789
    9. ')' → logprob: -14.261880874633789
    10. ':
' → logprob: -15.636880874633789

Token 259: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028408952057361603
    2. '           ' → logprob: -6.752840995788574
    3. '        
' → logprob: -7.377840995788574
    4. ' if' → logprob: -7.752840995788574
    5. ',' → logprob: -8.377840995788574
    6. '
' → logprob: -8.877840995788574
    7. ' distance' → logprob: -10.002840995788574
    8. ' distances' → logprob: -10.627840995788574
    9. ' 
' → logprob: -10.752840995788574
    10. '   ' → logprob: -11.002840995788574

Token 260: ' p' (ID: 275)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9091197848320007
    2. ' d' → logprob: -1.4091198444366455
    3. '   ' → logprob: -2.2841198444366455
    4. 'dist' → logprob: -2.4091198444366455
    5. ' if' → logprob: -2.6591198444366455
    6. ' dist' → logprob: -3.1591198444366455
    7. 'if' → logprob: -3.7841198444366455
    8. '           ' → logprob: -4.034119606018066
    9. 'distance' → logprob: -6.284119606018066
    10. 'cost' → logprob: -7.284119606018066

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13992592692375183
    2. 'i' → logprob: -2.139925956726074
    3. '_i' → logprob: -4.389925956726074
    4. 't' → logprob: -8.514925956726074
    5. '0' → logprob: -9.014925956726074
    6. '[i' → logprob: -9.639925956726074
    7. 'oint' → logprob: -10.264925956726074
    8. 'oints' → logprob: -11.014925956726074
    9. 'j' → logprob: -11.139925956726074
    10. 'dist' → logprob: -11.389925956726074

Token 262: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2883782684803009
    2. ',' → logprob: -1.9133782386779785
    3. ' =' → logprob: -2.2883782386779785
    4. ')' → logprob: -6.9133782386779785
    5. ',p' → logprob: -8.038378715515137
    6. ' ,' → logprob: -9.663378715515137
    7. '   ' → logprob: -10.413378715515137
    8. ')=' → logprob: -10.538378715515137
    9. '=p' → logprob: -11.038378715515137
    10. 'p' → logprob: -11.038378715515137

Token 263: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.13323496282100677
    2. 'p' → logprob: -2.133234977722168
    3. '=' → logprob: -5.508234977722168
    4. ' =' → logprob: -6.133234977722168
    5. ',' → logprob: -10.508234977722168
    6. '=p' → logprob: -10.883234977722168
    7. ',p' → logprob: -12.383234977722168
    8. ' ' → logprob: -12.508234977722168
    9. '    ' → logprob: -13.133234977722168
    10. 'points' → logprob: -13.383234977722168

Token 264: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.589277982711792
    2. 'oints' → logprob: -1.839277982711792
    3. ' =' → logprob: -2.089277982711792
    4. 's' → logprob: -2.589277982711792
    5. '2' → logprob: -3.214277982711792
    6. 'ts' → logprob: -3.464277982711792
    7. '1' → logprob: -4.714278221130371
    8. '=
' → logprob: -5.464278221130371
    9. 'nts' → logprob: -7.464278221130371
    10. 'points' → logprob: -7.714278221130371

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '=p' → logprob: -15.311967849731445
    4. ')' → logprob: -16.936967849731445
    5. ')=' → logprob: -17.311967849731445
    6. ',' → logprob: -18.061967849731445
    7. '   ' → logprob: -18.686967849731445
    8. 'p' → logprob: -18.811967849731445
    9. '=

' → logprob: -18.811967849731445
    10. ' ' → logprob: -19.186967849731445

Token 266: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.03804241120815277
    2. 'points' → logprob: -3.2880423069000244
    3. '(points' → logprob: -13.913042068481445
    4. '	points' → logprob: -16.788042068481445
    5. '.points' → logprob: -19.538042068481445
    6. '   ' → logprob: -19.663042068481445
    7. '_points' → logprob: -20.038042068481445
    8. 'oints' → logprob: -21.413042068481445
    9. ' pontos' → logprob: -21.538042068481445
    10. ' ' → logprob: -21.538042068481445

Token 267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0041166311129927635
    2. ' =' → logprob: -6.254116535186768
    3. '=' → logprob: -6.379116535186768
    4. '[' → logprob: -8.004117012023926
    5. '
' → logprob: -9.879117012023926
    6. ',i' → logprob: -10.504117012023926
    7. ',' → logprob: -10.629117012023926
    8. ' i' → logprob: -11.254117012023926
    9. 'i' → logprob: -11.629117012023926
    10. '=i' → logprob: -11.754117012023926

Token 268: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031410206109285355
    2. '],' → logprob: -3.5314102172851562
    3. ',p' → logprob: -7.031410217285156
    4. ' ,' → logprob: -7.281410217285156
    5. ']' → logprob: -9.656410217285156
    6. ',j' → logprob: -11.656410217285156
    7. 'p' → logprob: -12.531410217285156
    8. '   ' → logprob: -12.656410217285156
    9. ',
' → logprob: -13.031410217285156
    10. ' ],' → logprob: -13.531410217285156

Token 269: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.02324547804892063
    2. 'points' → logprob: -3.7732455730438232
    3. '	points' → logprob: -17.148244857788086
    4. '(points' → logprob: -17.648244857788086
    5. ' p' → logprob: -19.523244857788086
    6. ' pontos' → logprob: -20.023244857788086
    7. '_points' → logprob: -20.148244857788086
    8. '.points' → logprob: -20.398244857788086
    9. 'p' → logprob: -20.523244857788086
    10. 'point' → logprob: -20.773244857788086

Token 270: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0325924449716695e-05
    2. 'j' → logprob: -12.12501049041748
    3. '[' → logprob: -12.62501049041748
    4. '[
' → logprob: -14.12501049041748
    5. '```' → logprob: -15.00001049041748
    6. '[i' → logprob: -15.87501049041748
    7. '   ' → logprob: -16.625009536743164
    8. ' [' → logprob: -16.750009536743164
    9. '[p' → logprob: -17.000009536743164
    10. '
' → logprob: -17.125009536743164

Token 271: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0641099363565445
    2. ')
' → logprob: -2.814110040664673
    3. ']' → logprob: -6.439109802246094
    4. ')]' → logprob: -8.564109802246094
    5. ']
' → logprob: -8.814109802246094
    6. '])' → logprob: -10.064109802246094
    7. '           ' → logprob: -10.314109802246094
    8. ' )' → logprob: -10.314109802246094
    9. '   ' → logprob: -10.439109802246094
    10. '       ' → logprob: -10.689109802246094

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008636995335109532
    2. '            
' → logprob: -8.625864028930664
    3. ' if' → logprob: -8.750864028930664
    4. ' distance' → logprob: -9.000864028930664
    5. '
' → logprob: -9.125864028930664
    6. 'distance' → logprob: -9.250864028930664
    7. 'd' → logprob: -10.000864028930664
    8. '       ' → logprob: -10.500864028930664
    9. '   ' → logprob: -10.750864028930664
    10. ' d' → logprob: -11.375864028930664

Token 273: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0327885150909424
    2. 'valid' → logprob: -1.6577885150909424
    3. 'd' → logprob: -1.9077885150909424
    4. '           ' → logprob: -2.7827885150909424
    5. 'mid' → logprob: -2.7827885150909424
    6. ' dist' → logprob: -3.2827885150909424
    7. ' d' → logprob: -3.9077885150909424
    8. ' valid' → logprob: -4.157788276672363
    9. 'line' → logprob: -4.282788276672363
    10. 'edge' → logprob: -4.282788276672363

Token 274: ' check' (ID: 2371)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.271907091140747
    2. 'd' → logprob: -1.646907091140747
    3. 'dist' → logprob: -2.021907091140747
    4. 'ok' → logprob: -2.021907091140747
    5. 'valid' → logprob: -2.271907091140747
    6. 'if' → logprob: -2.896907091140747
    7. 'safe' → logprob: -4.271906852722168
    8. ' d' → logprob: -4.396906852722168
    9. 'edge' → logprob: -4.396906852722168
    10. ' mid' → logprob: -4.646906852722168

Token 275: ' path' (ID: 3104)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1098887175321579
    2. '           ' → logprob: -2.484888792037964
    3. ' distance' → logprob: -5.234888553619385
    4. 'if' → logprob: -5.609888553619385
    5. 'distance' → logprob: -5.734888553619385
    6. ' distances' → logprob: -6.109888553619385
    7. ' dx' → logprob: -6.359888553619385
    8. ' dist' → logprob: -6.484888553619385
    9. '   ' → logprob: -7.359888553619385
    10. 'dist' → logprob: -7.859888553619385

Token 276: ' validity' (ID: 56294)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9236198663711548
    2. ' if' → logprob: -1.1736198663711548
    3. ':' → logprob: -3.1736197471618652
    4. ' for' → logprob: -3.4236197471618652
    5. ' length' → logprob: -3.4236197471618652
    6. 's' → logprob: -3.6736197471618652
    7. ' =' → logprob: -3.7986197471618652
    8. '   ' → logprob: -4.298619747161865
    9. ' ' → logprob: -4.298619747161865
    10. ' between' → logprob: -4.673619747161865

Token 277: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8655213117599487
    2. '<|end|>' → logprob: -1.1155213117599487
    3. ':' → logprob: -1.9905213117599487
    4. ' if' → logprob: -3.2405214309692383
    5. '<|end|>' → logprob: -3.9905214309692383
    6. '            
' → logprob: -4.115521430969238
    7. '
' → logprob: -4.990521430969238
    8. '               ' → logprob: -5.490521430969238
    9. '   ' → logprob: -5.865521430969238
    10. ')' → logprob: -5.990521430969238

Token 278: ' sample' (ID: 10176)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.1993875801563263
    2. '           ' → logprob: -2.574387550354004
    3. 'valid' → logprob: -2.574387550354004
    4. ' safe' → logprob: -4.949387550354004
    5. ' can' → logprob: -5.074387550354004
    6. ' if' → logprob: -5.449387550354004
    7. ' mid' → logprob: -6.074387550354004
    8. ' clear' → logprob: -6.574387550354004
    9. ' ok' → logprob: -6.949387550354004
    10. ' path' → logprob: -7.074387550354004

Token 279: ' points' (ID: 5571)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8489764928817749
    2. ' steps' → logprob: -1.348976492881775
    3. 'steps' → logprob: -2.9739766120910645
    4. ' num' → logprob: -2.9739766120910645
    5. ' points' → logprob: -3.0989766120910645
    6. ' for' → logprob: -3.4739766120910645
    7. ' s' → logprob: -3.9739766120910645
    8. 'num' → logprob: -4.2239766120910645
    9. ' ' → logprob: -4.3489766120910645
    10. 's' → logprob: -4.3489766120910645

Token 280: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.9021958112716675
    2. ' in' → logprob: -1.7771958112716675
    3. ' =' → logprob: -2.027195930480957
    4. ' between' → logprob: -2.902195930480957
    5. ' for' → logprob: -2.902195930480957
    6. ' at' → logprob: -2.902195930480957
    7. ',' → logprob: -3.152195930480957
    8. '<|end|>' → logprob: -4.402195930480957
    9. ' on' → logprob: -4.527195930480957
    10. '           ' → logprob: -4.527195930480957

Token 281: ' segment' (ID: 14806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.444854974746704
    2. ' p' → logprob: -1.819854974746704
    3. 'the' → logprob: -1.819854974746704
    4. 'p' → logprob: -2.069854974746704
    5. ' [' → logprob: -2.069854974746704
    6. '[' → logprob: -2.944854974746704
    7. '[
' → logprob: -3.444854974746704
    8. '[(' → logprob: -3.819854974746704
    9. ' line' → logprob: -4.069854736328125
    10. ' ' → logprob: -4.569854736328125

Token 282: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4957152307033539
    2. '<|end|>' → logprob: -1.4957152605056763
    3. '<|end|>' → logprob: -2.6207151412963867
    4. ',' → logprob: -3.3707151412963867
    5. ' for' → logprob: -4.245715141296387
    6. ':' → logprob: -4.495715141296387
    7. '               ' → logprob: -4.495715141296387
    8. ' if' → logprob: -5.995715141296387
    9. ' and' → logprob: -6.120715141296387
    10. '            ' → logprob: -6.120715141296387

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006195080350153148
    2. ',' → logprob: -8.500619888305664
    3. '            
' → logprob: -8.625619888305664
    4. '               ' → logprob: -9.750619888305664
    5. ' for' → logprob: -9.875619888305664
    6. '<|end|>' → logprob: -10.375619888305664
    7. '            ' → logprob: -11.125619888305664
    8. ' with' → logprob: -11.250619888305664
    9. ':' → logprob: -11.625619888305664
    10. ' ,' → logprob: -12.000619888305664

Token 284: ' steps' (ID: 10331)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.37777307629585266
    2. 'valid' → logprob: -1.5027730464935303
    3. '           ' → logprob: -3.7527730464935303
    4. 'num' → logprob: -4.127773284912109
    5. ' step' → logprob: -4.377773284912109
    6. 'steps' (adapté à ' steps') → logprob: -4.502773284912109
    7. ' steps' → logprob: -4.627773284912109
    8. 'step' → logprob: -5.252773284912109
    9. ' num' → logprob: -5.877773284912109
    10. ' length' → logprob: -6.252773284912109

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330257654190063
    2. '=' → logprob: -1.3133025169372559
    3. '   ' → logprob: -10.188302993774414
    4. '=int' → logprob: -13.313302993774414
    5. ' ' → logprob: -15.188302993774414
    6. '    ' → logprob: -15.188302993774414
    7. ',' → logprob: -15.688302993774414
    8. 's' → logprob: -15.688302993774414
    9. '  ' → logprob: -16.063302993774414
    10. 'num' → logprob: -16.938302993774414

Token 286: ' max' (ID: 2999)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33501768112182617
    2. '20' → logprob: -1.8350176811218262
    3. ' ' → logprob: -2.085017681121826
    4. 'int' → logprob: -7.710017681121826
    5. ' int' → logprob: -8.710018157958984
    6. '100' → logprob: -10.210018157958984
    7. 'max' → logprob: -10.335018157958984
    8. '50' → logprob: -10.585018157958984
    9. '21' → logprob: -11.085018157958984
    10. '5' → logprob: -11.460018157958984

Token 287: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12695519626140594
    2. '(int' → logprob: -2.126955270767212
    3. 'int' → logprob: -10.876955032348633
    4. '1' → logprob: -12.501955032348633
    5. '(abs' → logprob: -12.751955032348633
    6. '10' → logprob: -14.626955032348633
    7. '(
' → logprob: -14.876955032348633
    8. ' (' → logprob: -15.126955032348633
    9. ' int' → logprob: -15.126955032348633
    10. '(math' → logprob: -15.876955032348633

Token 288: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7659497261047363
    2. 'int' → logprob: -1.0159497261047363
    3. '10' → logprob: -1.7659497261047363
    4. 'abs' → logprob: -6.890949726104736
    5. ' int' → logprob: -7.265949726104736
    6. '(int' → logprob: -8.890949249267578
    7. ' ' → logprob: -9.390949249267578
    8. '20' → logprob: -10.140949249267578
    9. '100' → logprob: -10.265949249267578
    10. '5' → logprob: -12.890949249267578

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006319085601717234
    2. ' ,' → logprob: -5.131319046020508
    3. ',int' → logprob: -9.381319046020508
    4. ',
' → logprob: -9.506319046020508
    5. '<|end|>' → logprob: -10.131319046020508
    6. ',p' → logprob: -10.256319046020508
    7. ',(' → logprob: -10.381319046020508
    8. '+' → logprob: -10.756319046020508
    9. '0' → logprob: -11.131319046020508
    10. ',length' → logprob: -11.256319046020508

Token 290: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519426941871643
    2. ' int' → logprob: -1.5019426345825195
    3. '10' → logprob: -12.62694263458252
    4. 'math' → logprob: -12.62694263458252
    5. ' ' → logprob: -12.75194263458252
    6. ' math' → logprob: -13.25194263458252
    7. '1' → logprob: -13.37694263458252
    8. '(int' → logprob: -15.12694263458252
    9. '20' → logprob: -16.126943588256836
    10. '[int' → logprob: -16.376943588256836

Token 291: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00027468299958854914
    2. '(math' → logprob: -8.750274658203125
    3. 'dist' → logprob: -9.500274658203125
    4. '(' → logprob: -10.250274658203125
    5. ' dist' → logprob: -13.000274658203125
    6. '(max' → logprob: -13.500274658203125
    7. '(abs' → logprob: -13.625274658203125
    8. '(round' → logprob: -15.250274658203125
    9. '(distance' → logprob: -15.250274658203125
    10. '	dist' → logprob: -15.375274658203125

Token 292: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0020180940628051758
    2. ' (' → logprob: -6.377017974853516
    3. '(' → logprob: -8.127017974853516
    4. '(
' → logprob: -11.377017974853516
    5. '(points' → logprob: -13.002017974853516
    6. ')' → logprob: -13.502017974853516
    7. 'p' → logprob: -13.627017974853516
    8. '(*' → logprob: -13.752017974853516
    9. '```' → logprob: -14.127017974853516
    10. '((' → logprob: -14.252017974853516

Token 293: '1' (ID: 16)
  Prédit: 'oints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -1.0117528438568115
    2. '(p' → logprob: -1.1367528438568115
    3. '(points' → logprob: -1.7617528438568115
    4. '1' → logprob: -2.0117528438568115
    5. 'points' → logprob: -5.011753082275391
    6. 'p' → logprob: -6.261753082275391
    7. ' points' → logprob: -7.136753082275391
    8. 'nts' → logprob: -8.63675308227539
    9. '(' → logprob: -9.01175308227539
    10. ' p' → logprob: -9.38675308227539

Token 294: ',p' (ID: 14835)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.003489954397082329
    2. '(' → logprob: -6.878489971160889
    3. ')' → logprob: -6.878489971160889
    4. ' (' → logprob: -7.003489971160889
    5. ',' → logprob: -8.37848949432373
    6. '(
' → logprob: -9.62848949432373
    7. 'p' → logprob: -9.62848949432373
    8. '*' → logprob: -10.25348949432373
    9. ' /' → logprob: -10.75348949432373
    10. '
' → logprob: -11.25348949432373

Token 295: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026305755600333214
    2. '2' → logprob: -3.651305675506592
    3. '0' → logprob: -12.77630615234375
    4. '[' → logprob: -13.40130615234375
    5. ')' → logprob: -14.52630615234375
    6. '```' → logprob: -15.40130615234375
    7. '3' → logprob: -16.27630615234375
    8. 'oints' → logprob: -16.65130615234375
    9. 'p' → logprob: -17.02630615234375
    10. '   ' → logprob: -17.02630615234375

Token 296: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6738865971565247
    2. '(p' → logprob: -1.2988865375518799
    3. ')*' → logprob: -2.17388653755188
    4. '*' → logprob: -3.29888653755188
    5. ' /' → logprob: -3.29888653755188
    6. '/' → logprob: -4.548886775970459
    7. ')/' → logprob: -4.673886775970459
    8. ')))' → logprob: -5.923886775970459
    9. '(' → logprob: -6.548886775970459
    10. '(*' → logprob: -6.673886775970459

Token 297: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029666714370250702
    2. '5' → logprob: -3.9046666622161865
    3. '20' → logprob: -5.029666900634766
    4. ' ' → logprob: -6.904666900634766
    5. '50' → logprob: -6.904666900634766
    6. '100' → logprob: -8.029666900634766
    7. '25' → logprob: -8.904666900634766
    8. '4' → logprob: -10.279666900634766
    9. '2' → logprob: -10.529666900634766
    10. '30' → logprob: -12.154666900634766

Token 298: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9057177305221558
    2. ')+' → logprob: -1.1557177305221558
    3. '))' → logprob: -1.2807177305221558
    4. '))+' → logprob: -6.530717849731445
    5. '))
' → logprob: -7.030717849731445
    6. '+' → logprob: -7.780717849731445
    7. ')))' → logprob: -9.155717849731445
    8. ' )' → logprob: -9.405717849731445
    9. ' +' → logprob: -9.905717849731445
    10. ' ))' → logprob: -10.530717849731445

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026245374232530594
    2. ' for' → logprob: -4.401245594024658
    3. '            
' → logprob: -5.401245594024658
    4. ' 
' → logprob: -5.526245594024658
    5. '<|end|>' → logprob: -6.776245594024658
    6. ' ' → logprob: -6.901245594024658
    7. '  
' → logprob: -7.151245594024658
    8. '
' → logprob: -7.401245594024658
    9. '   ' → logprob: -7.901245594024658
    10. '       ' → logprob: -8.4012451171875

Token 300: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.08207383006811142
    2. 'valid' (adapté à ' valid') → logprob: -3.707073926925659
    3. '           ' → logprob: -3.832073926925659
    4. ' for' → logprob: -3.957073926925659
    5. ' 
' → logprob: -4.83207368850708
    6. ' safe' → logprob: -6.08207368850708
    7. '            
' → logprob: -6.83207368850708
    8. '
' → logprob: -6.95707368850708
    9. 'for' → logprob: -8.582074165344238
    10. '   ' → logprob: -9.207074165344238

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022798418998718
    2. '=' → logprob: -1.9102280139923096
    3. '=True' → logprob: -13.03522777557373
    4. ' ' → logprob: -14.16022777557373
    5. '_' → logprob: -14.66022777557373
    6. '_=' → logprob: -15.78522777557373
    7. '   ' → logprob: -16.410228729248047
    8. '=False' → logprob: -16.535228729248047
    9. '  ' → logprob: -16.535228729248047
    10. ',' → logprob: -16.910228729248047

Token 302: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31326258182525635
    2. ' True' → logprob: -1.3132625818252563
    3. '   ' → logprob: -14.063262939453125
    4. '(True' → logprob: -18.313262939453125
    5. '=True' → logprob: -19.813262939453125
    6. ' ' → logprob: -20.188262939453125
    7. 'all' → logprob: -20.563262939453125
    8. ' all' → logprob: -20.688262939453125
    9. '  ' → logprob: -21.813262939453125
    10. '       ' → logprob: -21.938262939453125

Token 303: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41014429926872253
    2. '
' → logprob: -1.160144329071045
    3. ' for' → logprob: -4.660144329071045
    4. '            
' → logprob: -5.660144329071045
    5. '\n' → logprob: -5.785144329071045
    6. ' 
' → logprob: -6.160144329071045
    7. '  
' → logprob: -6.660144329071045
    8. '    
' → logprob: -7.035144329071045
    9. '\t' → logprob: -7.785144329071045
    10. ',' → logprob: -7.910144329071045

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5214208364486694
    2. '
' → logprob: -1.0214208364486694
    3. '   ' → logprob: -4.396420955657959
    4. ' for' → logprob: -4.521420955657959
    5. '       ' → logprob: -5.146420955657959
    6. '\n' → logprob: -5.646420955657959
    7. '    
' → logprob: -5.771420955657959
    8. '\t' → logprob: -5.771420955657959
    9. '            
' → logprob: -6.021420955657959
    10. ' 
' → logprob: -6.021420955657959

Token 305: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1518227607011795
    2. '
' → logprob: -2.651822805404663
    3. '           ' → logprob: -3.276822805404663
    4. 'for' (adapté à ' for') → logprob: -3.526822805404663
    5. '	for' → logprob: -6.901822566986084
    6. ' 
' → logprob: -7.401822566986084
    7. '\t' → logprob: -7.651822566986084
    8. '\n' → logprob: -7.776822566986084
    9. '            
' → logprob: -7.901822566986084
    10. '   ' → logprob: -9.401823043823242

Token 306: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12795332074165344
    2. ' k' → logprob: -2.127953290939331
    3. ' t' → logprob: -7.62795352935791
    4. 't' → logprob: -8.12795352935791
    5. 'step' → logprob: -8.75295352935791
    6. ' step' → logprob: -9.50295352935791
    7. 's' → logprob: -11.87795352935791
    8. ' s' → logprob: -12.75295352935791
    9. '_k' → logprob: -15.75295352935791
    10. '	k' → logprob: -16.002952575683594

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0181704293936491
    2. 'in' → logprob: -4.018170356750488
    3. ' ' → logprob: -10.893170356750488
    4. '	in' → logprob: -13.893170356750488
    5. '1' → logprob: -15.018170356750488
    6. 'import' → logprob: -15.768170356750488
    7. ',' → logprob: -15.893170356750488
    8. 'In' → logprob: -16.393171310424805
    9. '_in' → logprob: -16.643171310424805
    10. 'space' → logprob: -16.768171310424805

Token 308: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -15.756715774536133
    4. '	range' → logprob: -16.506715774536133
    5. '[' → logprob: -18.006715774536133
    6. '   ' → logprob: -18.381715774536133
    7. '1' → logprob: -18.381715774536133
    8. ' ' → logprob: -18.631715774536133
    9. '  ' → logprob: -19.506715774536133
    10. '```' → logprob: -21.631715774536133

Token 309: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028731857310049236
    2. '1' → logprob: -8.250287055969238
    3. 'steps' → logprob: -11.125287055969238
    4. ' (' → logprob: -11.625287055969238
    5. ' ' → logprob: -13.750287055969238
    6. ' steps' → logprob: -13.875287055969238
    7. '(k' → logprob: -15.125287055969238
    8. '(step' → logprob: -17.250288009643555
    9. '(
' → logprob: -18.625288009643555
    10. '   ' → logprob: -19.125288009643555

Token 310: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.16025662422180176
    2. '1' → logprob: -1.9102566242218018
    3. ' steps' → logprob: -10.785256385803223
    4. '0' → logprob: -12.160256385803223
    5. '11' → logprob: -12.535256385803223
    6. '(' → logprob: -13.660256385803223
    7. ' ' → logprob: -14.035256385803223
    8. 'step' → logprob: -15.660256385803223
    9. 'Steps' → logprob: -15.660256385803223
    10. '_steps' → logprob: -16.16025733947754

Token 311: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12716642022132874
    2. ' +' → logprob: -2.627166509628296
    3. '):' → logprob: -3.127166509628296
    4. '):
' → logprob: -5.752166271209717
    5. ' ):' → logprob: -9.627166748046875
    6. '1' → logprob: -11.127166748046875
    7. '   ' → logprob: -11.627166748046875
    8. ')' → logprob: -12.127166748046875
    9. '+k' → logprob: -12.127166748046875
    10. ' ):
' → logprob: -12.252166748046875

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.000022888183594
    4. '=' → logprob: -16.875022888183594
    5. '```' → logprob: -17.000022888183594
    6. '0' → logprob: -17.625022888183594
    7. ')' → logprob: -17.875022888183594
    8. '+' → logprob: -18.750022888183594
    9. '           ' → logprob: -18.750022888183594
    10. '2' → logprob: -19.000022888183594

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22565750777721405
    2. '):' → logprob: -1.6006574630737305
    3. '):
' → logprob: -8.97565746307373
    4. ' ):
' → logprob: -9.85065746307373
    5. ':' → logprob: -10.35065746307373
    6. ',' → logprob: -11.47565746307373
    7. ' ):' → logprob: -11.85065746307373
    8. '):

' → logprob: -12.10065746307373
    9. ':
' → logprob: -12.60065746307373
    10. ')' → logprob: -12.72565746307373

Token 314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02562520280480385
    2. '<|end|>' → logprob: -3.775625228881836
    3. ' ' → logprob: -6.900625228881836
    4. '                
' → logprob: -8.150625228881836
    5. '           ' → logprob: -8.400625228881836
    6. '<|end|>' → logprob: -8.400625228881836
    7. '            ' → logprob: -9.150625228881836
    8. '                ' → logprob: -9.275625228881836
    9. '	           ' → logprob: -9.900625228881836
    10. '                               ' → logprob: -9.900625228881836

Token 315: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.03568796068429947
    2. ' x' → logprob: -4.2856879234313965
    3. ' s' → logprob: -4.7856879234313965
    4. 't' (adapté à ' t') → logprob: -5.4106879234313965
    5. '               ' → logprob: -5.9106879234313965
    6. '                   ' → logprob: -6.4106879234313965
    7. ' pos' → logprob: -6.7856879234313965
    8. ' p' → logprob: -7.1606879234313965
    9. ' point' → logprob: -7.2856879234313965
    10. ' ' → logprob: -7.7856879234313965

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282751709222794
    2. '=' → logprob: -2.2378275394439697
    3. ' ' → logprob: -12.86282730102539
    4. ')' → logprob: -14.23782730102539
    5. ' =
' → logprob: -14.98782730102539
    6. '=k' → logprob: -15.11282730102539
    7. 's' → logprob: -15.36282730102539
    8. ',' → logprob: -15.48782730102539
    9. '<|end|>' → logprob: -15.73782730102539
    10. '   ' → logprob: -15.73782730102539

Token 317: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004078401252627373
    2. ' k' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.379077911376953
    4. 'float' → logprob: -18.004077911376953
    5. '   ' → logprob: -18.254077911376953
    6. '	k' → logprob: -19.504077911376953
    7. ' float' → logprob: -20.379077911376953
    8. '0' → logprob: -20.879077911376953
    9. '  ' → logprob: -21.004077911376953
    10. ' ' → logprob: -21.129077911376953

Token 318: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.061968132853507996
    2. ' /' → logprob: -2.8119680881500244
    3. '/
' → logprob: -15.436967849731445
    4. ' ' → logprob: -15.936967849731445
    5. '/(' → logprob: -16.686967849731445
    6. '/st' → logprob: -17.811967849731445
    7. ' /
' → logprob: -17.936967849731445
    8. '/k' → logprob: -18.311967849731445
    9. '*' → logprob: -18.686967849731445
    10. '
' → logprob: -18.811967849731445

Token 319: 'steps' (ID: 27176)
  Prédit: 'steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.00026336227892898023
    2. ' steps' → logprob: -8.250263214111328
    3. 'float' → logprob: -13.125263214111328
    4. ' ' → logprob: -17.625263214111328
    5. '   ' → logprob: -18.000263214111328
    6. 'step' → logprob: -18.125263214111328
    7. '_steps' → logprob: -18.750263214111328
    8. '.steps' → logprob: -19.125263214111328
    9. '(' → logprob: -19.250263214111328
    10. 'esteps' → logprob: -19.375263214111328

Token 320: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0057559991255402565
    2. '<|end|>' → logprob: -6.63075590133667
    3. ' x' → logprob: -7.00575590133667
    4. '                
' → logprob: -7.38075590133667
    5. ' ' → logprob: -7.38075590133667
    6. ')' → logprob: -7.88075590133667
    7. ',' → logprob: -8.130756378173828
    8. ' 
' → logprob: -8.255756378173828
    9. ' ' → logprob: -8.505756378173828
    10. '                ' → logprob: -8.880756378173828

Token 322: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08954020589590073
    2. 'x' (adapté à ' x') → logprob: -2.4645402431488037
    3. ' px' → logprob: -8.964540481567383
    4. ' interp' → logprob: -8.964540481567383
    5. ' pos' → logprob: -9.214540481567383
    6. 'inter' → logprob: -9.464540481567383
    7. 'interp' → logprob: -9.839540481567383
    8. ' pt' → logprob: -11.214540481567383
    9. ' ix' → logprob: -11.589540481567383
    10. 'pos' → logprob: -11.589540481567383

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762304663658142
    2. ' =' → logprob: -0.8262304663658142
    3. ',' → logprob: -8.2012300491333
    4. '1' → logprob: -11.3262300491333
    5. '=p' → logprob: -13.4512300491333
    6. '0' → logprob: -14.8262300491333
    7. '=int' → logprob: -15.0762300491333
    8. '=

' → logprob: -15.2012300491333
    9. 'p' → logprob: -15.7012300491333
    10. '<|end|>' → logprob: -15.8262300491333

Token 324: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03823003172874451
    2. ' p' → logprob: -3.2882299423217773
    3. '(' → logprob: -8.663229942321777
    4. ' (' → logprob: -11.288229942321777
    5. '(p' → logprob: -13.538229942321777
    6. '   ' → logprob: -13.788229942321777
    7. 'points' → logprob: -14.663229942321777
    8. ' ' → logprob: -15.538229942321777
    9. ' points' → logprob: -15.538229942321777
    10. '	p' → logprob: -17.038230895996094

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006790731567889452
    2. 'oints' → logprob: -7.375679016113281
    3. '[' → logprob: -10.875679016113281
    4. ' points' → logprob: -11.750679016113281
    5. ' ' → logprob: -11.875679016113281
    6. 'p' → logprob: -12.625679016113281
    7. '(points' → logprob: -12.875679016113281
    8. ' p' → logprob: -13.000679016113281
    9. 'points' → logprob: -13.000679016113281
    10. '(' → logprob: -13.125679016113281

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.493430894101039e-05
    2. '0' → logprob: -9.500075340270996
    3. '1' → logprob: -17.37507438659668
    4. '(' → logprob: -17.37507438659668
    5. '
' → logprob: -17.62507438659668
    6. ' [' → logprob: -18.12507438659668
    7. '[
' → logprob: -18.62507438659668
    8. '   ' → logprob: -18.75007438659668
    9. 'x' → logprob: -19.12507438659668
    10. '=' → logprob: -19.25007438659668

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '۰' → logprob: -18.875001907348633
    5. '    ' → logprob: -19.000001907348633
    6. '
' → logprob: -19.500001907348633
    7. '00' → logprob: -19.750001907348633
    8. '  ' → logprob: -19.812501907348633
    9. '1' → logprob: -20.187501907348633
    10. '  ' → logprob: -20.312501907348633

Token 328: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7734941244125366
    2. ' +' → logprob: -0.7734941244125366
    3. '*(' → logprob: -2.773494243621826
    4. '*' → logprob: -4.523494243621826
    5. '+(' → logprob: -5.773494243621826
    6. ' *' → logprob: -7.398494243621826
    7. ' +(' → logprob: -8.898493766784668
    8. '(' → logprob: -10.523493766784668
    9. '+t' → logprob: -12.273493766784668
    10. ' *(' → logprob: -12.273493766784668

Token 329: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3500443696975708
    2. ' +' → logprob: -1.6000443696975708
    3. '*' → logprob: -2.6000442504882812
    4. '*(' → logprob: -3.9750442504882812
    5. ' *' → logprob: -8.100044250488281
    6. '+(' → logprob: -9.350044250488281
    7. '(' → logprob: -11.600044250488281
    8. '+t' → logprob: -12.350044250488281
    9. ' +(' → logprob: -15.100044250488281
    10. ',' → logprob: -15.225044250488281

Token 330: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06926993280649185
    2. ' t' → logprob: -2.819269895553589
    3. ' (' → logprob: -5.319270133972168
    4. '(p' → logprob: -6.569270133972168
    5. '(t' → logprob: -6.944270133972168
    6. '(x' → logprob: -11.819270133972168
    7. '(' → logprob: -12.694270133972168
    8. ' ' → logprob: -14.319270133972168
    9. 'p' → logprob: -14.694270133972168
    10. '(P' → logprob: -14.944270133972168

Token 331: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017126628663390875
    2. ' p' → logprob: -6.751712799072266
    3. 't' → logprob: -7.626712799072266
    4. '(p' → logprob: -10.001712799072266
    5. ' (' → logprob: -12.001712799072266
    6. ' t' → logprob: -13.376712799072266
    7. '   ' → logprob: -13.376712799072266
    8. 'x' → logprob: -15.376712799072266
    9. '	p' → logprob: -16.251712799072266
    10. ' ' → logprob: -16.626712799072266

Token 332: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -15.312501907348633
    3. '[' → logprob: -15.312501907348633
    4. '1' → logprob: -15.750001907348633
    5. ' ' → logprob: -16.062501907348633
    6. 't' → logprob: -16.312501907348633
    7. '```' → logprob: -16.500001907348633
    8. 'oints' → logprob: -16.937501907348633
    9. 'er' → logprob: -17.375001907348633
    10. 'token' → logprob: -17.375001907348633

Token 333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.000006675720215
    3. '1' → logprob: -15.125006675720215
    4. '[
' → logprob: -16.37500762939453
    5. '```' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.62500762939453
    7. ' [' → logprob: -18.25000762939453
    8. 's' → logprob: -18.37500762939453
    9. '][' → logprob: -18.50000762939453
    10. ' ' → logprob: -18.50000762939453

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.125
    5. '1' → logprob: -17.625
    6. '```' → logprob: -18.0
    7. 'x' → logprob: -18.125
    8. '۰' → logprob: -19.25
    9. '  ' → logprob: -19.3125
    10. '{' → logprob: -20.375

Token 335: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10024042427539825
    2. '-' → logprob: -2.350240468978882
    3. '[' → logprob: -11.100240707397461
    4. '-p' → logprob: -11.100240707397461
    5. ' ' → logprob: -13.225240707397461
    6. '   ' → logprob: -14.600240707397461
    7. ')' → logprob: -15.475240707397461
    8. '	' → logprob: -15.475240707397461
    9. 'p' → logprob: -15.600240707397461
    10. '```' → logprob: -15.725240707397461

Token 336: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010950337309623137
    2. ' p' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -14.750109672546387
    4. ')' → logprob: -16.50010871887207
    5. 'x' → logprob: -16.75010871887207
    6. '0' → logprob: -17.00010871887207
    7. ')p' → logprob: -17.00010871887207
    8. '<|end|>' → logprob: -17.62510871887207
    9. '	p' → logprob: -18.00010871887207
    10. '[' → logprob: -18.00010871887207

Token 337: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002646735229063779
    2. '[' → logprob: -8.875265121459961
    3. '1' → logprob: -9.000265121459961
    4. ' ' → logprob: -14.000265121459961
    5. '   ' → logprob: -16.00026512145996
    6. '```' → logprob: -16.00026512145996
    7. 'x' → logprob: -16.87526512145996
    8. ')' → logprob: -17.06276512145996
    9. '
' → logprob: -17.31276512145996
    10. ']' → logprob: -17.43776512145996

Token 338: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00081487005809322
    2. '0' → logprob: -7.125814914703369
    3. '][' → logprob: -12.125814437866211
    4. '1' → logprob: -13.500814437866211
    5. 'x' → logprob: -13.875814437866211
    6. '```' → logprob: -14.750814437866211
    7. ' [' → logprob: -15.000814437866211
    8. '   ' → logprob: -15.250814437866211
    9. '[
' → logprob: -15.250814437866211
    10. '2' → logprob: -15.375814437866211

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.125004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '   ' → logprob: -15.375004768371582
    5. 'x' → logprob: -16.125003814697266
    6. ']' → logprob: -16.687503814697266
    7. '۰' → logprob: -17.000003814697266
    8. '```' → logprob: -17.312503814697266
    9. ')' → logprob: -17.500003814697266
    10. '  ' → logprob: -18.437503814697266

Token 340: '])*' (ID: 114661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520085871219635
    2. ')*' → logprob: -1.5020085573196411
    3. ' )' → logprob: -9.627008438110352
    4. ']*' → logprob: -12.502008438110352
    5. '])' → logprob: -13.252008438110352
    6. '])*' → logprob: -13.502008438110352
    7. ')t' → logprob: -13.502008438110352
    8. ')*(' → logprob: -13.752008438110352
    9. ')]' → logprob: -14.252008438110352
    10. '）' → logprob: -14.377008438110352

Token 341: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01815006136894226
    2. ' t' → logprob: -4.0181498527526855
    3. '	t' → logprob: -16.643150329589844
    4. '<|end|>' → logprob: -17.268150329589844
    5. '`t' → logprob: -17.893150329589844
    6. ')t' → logprob: -18.643150329589844
    7. ' ' → logprob: -19.143150329589844
    8. '(t' → logprob: -20.268150329589844
    9. '_t' → logprob: -20.893150329589844
    10. '*t' → logprob: -21.393150329589844

Token 342: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11312948167324066
    2. 'y' (adapté à ' y') → logprob: -2.2381293773651123
    3. ' ' → logprob: -8.363129615783691
    4. ' 
' → logprob: -9.863129615783691
    5. '                ' → logprob: -12.238129615783691
    6. '               ' → logprob: -12.488129615783691
    7. ' ' → logprob: -12.738129615783691
    8. 'x' → logprob: -13.363129615783691
    9. ''' → logprob: -13.613129615783691
    10. ' x' → logprob: -13.613129615783691

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759617686271667
    2. '=' → logprob: -0.8259617686271667
    3. '<|end|>' → logprob: -11.45096206665039
    4. ' ' → logprob: -12.45096206665039
    5. ',' → logprob: -12.45096206665039
    6. '[' → logprob: -13.82596206665039
    7. '=p' → logprob: -14.20096206665039
    8. ')' → logprob: -14.32596206665039
    9. '<|end|>' → logprob: -14.82596206665039
    10. 's' → logprob: -15.20096206665039

Token 346: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0789279043674469
    2. ' p' → logprob: -2.578927993774414
    3. '(p' → logprob: -10.203927993774414
    4. '(' → logprob: -14.578927993774414
    5. ' (' → logprob: -14.828927993774414
    6. '   ' → logprob: -16.203927993774414
    7. '	p' → logprob: -17.203927993774414
    8. '<p' → logprob: -17.453927993774414
    9. ')p' → logprob: -17.578927993774414
    10. '=p' → logprob: -17.828927993774414

Token 347: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016070852056145668
    2. '1' → logprob: -4.14107084274292
    3. '2' → logprob: -10.391071319580078
    4. '(' → logprob: -13.266071319580078
    5. '```' → logprob: -13.266071319580078
    6. '][' → logprob: -14.641071319580078
    7. '.' → logprob: -14.766071319580078
    8. '   ' → logprob: -15.141071319580078
    9. '\[' → logprob: -15.266071319580078
    10. '
' → logprob: -15.891071319580078

Token 348: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -16.0
    3. '(' → logprob: -16.125
    4. '0' → logprob: -16.25
    5. '][' → logprob: -17.375
    6. '```' → logprob: -17.875
    7. '   ' → logprob: -18.625
    8. ')[' → logprob: -18.75
    9. '
' → logprob: -19.0
    10. '2' → logprob: -19.125

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04351462423801422
    2. '0' → logprob: -3.5435147285461426
    3. '[' → logprob: -4.293514728546143
    4. '(' → logprob: -12.168514251708984
    5. ' ' → logprob: -13.418514251708984
    6. '
' → logprob: -13.543514251708984
    7. '```' → logprob: -13.793514251708984
    8. '   ' → logprob: -13.918514251708984
    9. 'y' → logprob: -14.668514251708984
    10. 'k' → logprob: -14.668514251708984

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21748384833335876
    2. '[' → logprob: -1.9674838781356812
    3. ')' → logprob: -3.4674837589263916
    4. '+' → logprob: -4.092483997344971
    5. ']+' → logprob: -5.592483997344971
    6. ' +' → logprob: -5.842483997344971
    7. '0' → logprob: -7.217483997344971
    8. ')+' → logprob: -8.967483520507812
    9. ' ]' → logprob: -9.467483520507812
    10. ' ' → logprob: -9.967483520507812

Token 351: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048621319234371185
    2. '+' → logprob: -3.048621416091919
    3. '[' → logprob: -10.54862117767334
    4. ' +
' → logprob: -13.17362117767334
    5. ')' → logprob: -13.79862117767334
    6. '+(' → logprob: -13.92362117767334
    7. ' ' → logprob: -14.29862117767334
    8. '(' → logprob: -14.67362117767334
    9. ' +(' → logprob: -14.79862117767334
    10. ',' → logprob: -15.04862117767334

Token 352: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.20142114162445068
    2. ' (' → logprob: -1.7014211416244507
    3. '(P' → logprob: -12.826420783996582
    4. '   ' → logprob: -13.076420783996582
    5. ' ' → logprob: -13.201420783996582
    6. '  ' → logprob: -14.951420783996582
    7. '(' → logprob: -15.826420783996582
    8. '(pos' → logprob: -15.826420783996582
    9. '((' → logprob: -16.3264217376709
    10. '    ' → logprob: -16.7014217376709

Token 353: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0008170120418071747
    2. 'p' → logprob: -7.250816822052002
    3. ' (' → logprob: -9.37581729888916
    4. '[p' → logprob: -11.62581729888916
    5. '1' → logprob: -12.25081729888916
    6. '   ' → logprob: -13.25081729888916
    7. '(' → logprob: -13.25081729888916
    8. '0' → logprob: -13.87581729888916
    9. ' p' → logprob: -14.25081729888916
    10. ')' → logprob: -14.25081729888916

Token 354: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9320089817047119
    2. '2' → logprob: -1.182008981704712
    3. '[' → logprob: -1.432008981704712
    4. '(' → logprob: -2.807008981704712
    5. '0' → logprob: -8.932008743286133
    6. ' ' → logprob: -10.307008743286133
    7. '```' → logprob: -10.307008743286133
    8. 't' → logprob: -10.557008743286133
    9. '   ' → logprob: -10.682008743286133
    10. '-' → logprob: -10.682008743286133

Token 355: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.804671233519912e-05
    2. '0' → logprob: -10.12508773803711
    3. ')[' → logprob: -10.75008773803711
    4. '1' → logprob: -11.50008773803711
    5. '][' → logprob: -12.12508773803711
    6. '(' → logprob: -12.12508773803711
    7. '```' → logprob: -13.50008773803711
    8. '   ' → logprob: -13.87508773803711
    9. ')' → logprob: -14.50008773803711
    10. '#' → logprob: -15.50008773803711

Token 356: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35118499398231506
    2. '1' → logprob: -1.2261849641799927
    3. '[' → logprob: -5.976184844970703
    4. '-' → logprob: -9.851184844970703
    5. '(' → logprob: -10.913684844970703
    6. ' ' → logprob: -11.038684844970703
    7. '   ' → logprob: -11.163684844970703
    8. '```' → logprob: -11.163684844970703
    9. ')' → logprob: -11.476184844970703
    10. 'y' → logprob: -11.913684844970703

Token 357: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04006576910614967
    2. '0' → logprob: -3.7900657653808594
    3. ')*' → logprob: -4.415065765380859
    4. '-' → logprob: -6.040065765380859
    5. ')' → logprob: -6.665065765380859
    6. ')*(' → logprob: -8.16506576538086
    7. ')[' → logprob: -8.54006576538086
    8. ']*' → logprob: -9.16506576538086
    9. ')-' → logprob: -9.29006576538086
    10. ' ' → logprob: -9.54006576538086

Token 358: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04629241302609444
    2. '(p' → logprob: -3.796292304992676
    3. '1' → logprob: -3.921292304992676
    4. '(' → logprob: -5.921292304992676
    5. ' p' → logprob: -8.796292304992676
    6. ' (' → logprob: -10.671292304992676
    7. 'y' → logprob: -10.796292304992676
    8. ')p' → logprob: -10.921292304992676
    9. '-p' → logprob: -11.296292304992676
    10. '[p' → logprob: -11.421292304992676

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09865932911634445
    2. '0' → logprob: -2.7236592769622803
    3. '[' → logprob: -3.5986592769622803
    4. '2' → logprob: -8.59865951538086
    5. ' ' → logprob: -8.84865951538086
    6. '```' → logprob: -9.34865951538086
    7. '   ' → logprob: -9.47365951538086
    8. ')' → logprob: -9.47365951538086
    9. 'y' → logprob: -9.72365951538086
    10. 't' → logprob: -9.84865951538086

Token 360: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016353869810700417
    2. '0' → logprob: -4.141354084014893
    3. ')' → logprob: -8.641353607177734
    4. ')*' → logprob: -10.266353607177734
    5. '   ' → logprob: -11.391353607177734
    6. '(' → logprob: -11.516353607177734
    7. '1' → logprob: -11.641353607177734
    8. '```' → logprob: -11.641353607177734
    9. '][' → logprob: -11.891353607177734
    10. ']*' → logprob: -11.891353607177734

Token 361: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. 't' → logprob: -15.875
    3. ' ' → logprob: -16.0
    4. '1' → logprob: -16.0
    5. '[' → logprob: -17.25
    6. '```' → logprob: -17.875
    7. '   ' → logprob: -18.25
    8. 'k' → logprob: -18.5
    9. ']' → logprob: -19.125
    10. '
' → logprob: -19.1875

Token 362: '])*' (ID: 114661)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.022011976689100266
    2. '])*' → logprob: -4.022011756896973
    3. ')' → logprob: -6.272011756896973
    4. ']*' → logprob: -6.522011756896973
    5. ')*(' → logprob: -8.022011756896973
    6. '])' → logprob: -9.147011756896973
    7. '))*' → logprob: -10.397011756896973
    8. ')]' → logprob: -11.522011756896973
    9. '*)' → logprob: -12.272011756896973
    10. ')**' → logprob: -12.397011756896973

Token 363: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004293976817280054
    2. '*t' → logprob: -5.504293918609619
    3. ' t' → logprob: -8.504294395446777
    4. ')t' → logprob: -11.379294395446777
    5. ')' → logprob: -14.754294395446777
    6. '*' → logprob: -15.004294395446777
    7. ')*' → logprob: -15.379294395446777
    8. '	t' → logprob: -15.629294395446777
    9. ' *' → logprob: -16.00429344177246
    10. '`t' → logprob: -16.50429344177246

Token 364: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11080118268728256
    2. '           ' → logprob: -2.6108012199401855
    3. '<|end|>' → logprob: -3.8608012199401855
    4. '
' → logprob: -5.7358012199401855
    5. '  
' → logprob: -6.4858012199401855
    6. ',' → logprob: -6.7358012199401855
    7. ' if' → logprob: -6.9858012199401855
    8. ')' → logprob: -7.2358012199401855
    9. '                
' → logprob: -7.4858012199401855
    10. '            
' → logprob: -7.4858012199401855

Token 365: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0046349456533789635
    2. '
' → logprob: -6.754634857177734
    3. '                
' → logprob: -6.754634857177734
    4. '<|end|>' → logprob: -6.879634857177734
    5. '  
' → logprob: -8.379634857177734
    6. ' if' → logprob: -8.504634857177734
    7. ' 
' → logprob: -8.629634857177734
    8. '           ' → logprob: -8.879634857177734
    9. '       ' → logprob: -9.629634857177734
    10. '	           ' → logprob: -9.879634857177734

Token 366: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3559713363647461
    2. ' pos' → logprob: -1.855971336364746
    3. ' if' → logprob: -2.355971336364746
    4. 'if' (adapté à ' if') → logprob: -3.605971336364746
    5. ' sample' → logprob: -5.355971336364746
    6. 'sample' → logprob: -5.730971336364746
    7. ' point' → logprob: -5.980971336364746
    8. '               ' → logprob: -6.105971336364746
    9. 'pt' → logprob: -6.355971336364746
    10. 'point' → logprob: -6.355971336364746

Token 367: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3138412535190582
    2. ' not' → logprob: -1.3138412237167358
    3. 'any' → logprob: -8.313840866088867
    4. '(not' → logprob: -8.438840866088867
    5. 'can' → logprob: -9.813840866088867
    6. ' any' → logprob: -10.188840866088867
    7. '   ' → logprob: -11.813840866088867
    8. ' ' → logprob: -12.188840866088867
    9. ' can' → logprob: -12.438840866088867
    10. 'all' → logprob: -12.688840866088867

Token 368: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.01815076172351837
    2. ' can' → logprob: -4.018150806427002
    3. '(can' → logprob: -14.768150329589844
    4. '	can' → logprob: -14.893150329589844
    5. '   ' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.393150329589844
    7. '.can' → logprob: -18.268150329589844
    8. '  ' → logprob: -18.768150329589844
    9. '_can' → logprob: -18.893150329589844
    10. '
' → logprob: -18.893150329589844

Token 369: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.50000286102295
    3. '_can' → logprob: -14.00000286102295
    4. 'stand' → logprob: -14.87500286102295
    5. '_ST' → logprob: -15.50000286102295
    6. '_s' → logprob: -15.87500286102295
    7. ' _' → logprob: -16.000003814697266
    8. ' stand' → logprob: -16.375003814697266
    9. '```' → logprob: -16.625003814697266
    10. '_continue' → logprob: -17.125003814697266

Token 370: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: 0.0
    2. '(and' → logprob: -17.5
    3. 'd' → logprob: -18.0
    4. '```' → logprob: -18.75
    5. 'AND' → logprob: -18.875
    6. 'a' → logprob: -19.0
    7. '[' → logprob: -19.125
    8. ' and' → logprob: -19.25
    9. '_and' → logprob: -19.375
    10. 'andard' → logprob: -19.5

Token 371: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00010139751975657418
    2. '(' → logprob: -9.250101089477539
    3. '(x' → logprob: -13.000101089477539
    4. '(
' → logprob: -13.625101089477539
    5. ' ((' → logprob: -14.125101089477539
    6. '([' → logprob: -14.750101089477539
    7. '(((' → logprob: -14.875101089477539
    8. '   ' → logprob: -15.500101089477539
    9. '```' → logprob: -17.00010108947754
    10. '(([' → logprob: -17.50010108947754

Token 372: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030096987262368202
    2. '(x' → logprob: -3.530097007751465
    3. ' x' → logprob: -8.405097007751465
    4. ' (' → logprob: -9.280097007751465
    5. '(' → logprob: -10.655097007751465
    6. ')x' → logprob: -13.280097007751465
    7. ')' → logprob: -13.905097007751465
    8. ',x' → logprob: -13.905097007751465
    9. '{x' → logprob: -14.280097007751465
    10. ',' → logprob: -15.030097007751465

Token 373: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18043240904808044
    2. ',y' → logprob: -1.8054324388504028
    3. ' ,' → logprob: -7.555432319641113
    4. ',(' → logprob: -10.180432319641113
    5. ',x' → logprob: -10.305432319641113
    6. '),' → logprob: -10.805432319641113
    7. '),(' → logprob: -10.930432319641113
    8. ',
' → logprob: -11.305432319641113
    9. '(' → logprob: -11.555432319641113
    10. ',m' → logprob: -12.430432319641113

Token 374: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000718030845746398
    2. '),' → logprob: -7.875718116760254
    3. ' ,' → logprob: -8.125718116760254
    4. ',m' → logprob: -10.875718116760254
    5. ',
' → logprob: -12.500718116760254
    6. '```' → logprob: -13.000718116760254
    7. '[' → logprob: -13.125718116760254
    8. ',[' → logprob: -13.250718116760254
    9. 'mon' → logprob: -13.250718116760254
    10. '],' → logprob: -13.500718116760254

Token 375: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.06199255958199501
    2. ' monsters' → logprob: -2.811992645263672
    3. 'monster' → logprob: -12.186992645263672
    4. '   ' → logprob: -12.561992645263672
    5. 'mons' → logprob: -12.561992645263672
    6. '(mon' → logprob: -13.061992645263672
    7. '```' → logprob: -13.186992645263672
    8. ' ' → logprob: -13.686992645263672
    9. ')' → logprob: -14.061992645263672
    10. '_mon' → logprob: -14.186992645263672

Token 376: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134799003601074
    2. '):
' → logprob: -1.3134799003601074
    3. ')' → logprob: -9.188480377197266
    4. ':' → logprob: -9.938480377197266
    5. '):

' → logprob: -11.188480377197266
    6. '                   ' → logprob: -11.438480377197266
    7. '):
' → logprob: -11.563480377197266
    8. '                       ' → logprob: -11.563480377197266
    9. '               ' → logprob: -11.563480377197266
    10. ':
' → logprob: -12.563480377197266

Token 377: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012376103550195694
    2. '               ' → logprob: -7.251237392425537
    3. '                    
' → logprob: -8.376237869262695
    4. '                       ' → logprob: -9.126237869262695
    5. '
' → logprob: -9.376237869262695
    6. '                           ' → logprob: -10.751237869262695
    7. '                  ' → logprob: -11.501237869262695
    8. '):
' → logprob: -11.626237869262695
    9. '                
' → logprob: -12.126237869262695
    10. '                 ' → logprob: -12.126237869262695

Token 378: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.5195608735084534
    2. '                   ' → logprob: -1.2695608139038086
    3. 'valid' (adapté à ' valid') → logprob: -2.1445608139038086
    4. '               ' → logprob: -5.519560813903809
    5. '
' → logprob: -6.519560813903809
    6. '                       ' → logprob: -6.769560813903809
    7. '	valid' → logprob: -8.644560813903809
    8. '                    
' → logprob: -9.144560813903809
    9. '(valid' → logprob: -9.269560813903809
    10. '           ' → logprob: -10.019560813903809

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805606812238693
    2. '=' → logprob: -3.2880561351776123
    3. '=False' → logprob: -11.163056373596191
    4. ' ' → logprob: -15.538056373596191
    5. '=True' → logprob: -16.413055419921875
    6. '=false' → logprob: -17.038055419921875
    7. ')' → logprob: -17.163055419921875
    8. ' =
' → logprob: -18.163055419921875
    9. '   ' → logprob: -18.163055419921875
    10. '           ' → logprob: -18.288055419921875

Token 380: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. '(False' → logprob: -20.001502990722656
    4. 'false' → logprob: -20.751502990722656
    5. '=False' → logprob: -21.001502990722656
    6. 'break' → logprob: -22.001502990722656
    7. '_false' → logprob: -23.251502990722656
    8. '   ' → logprob: -24.751502990722656
    9. '.False' → logprob: -24.751502990722656
    10. 'F' → logprob: -24.876502990722656

Token 381: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.4192871175473556e-05
    2. '                       ' → logprob: -10.750054359436035
    3. '               ' → logprob: -10.875054359436035
    4. '                  ' → logprob: -12.750054359436035
    5. '           ' → logprob: -12.875054359436035
    6. '                    ' → logprob: -13.250054359436035
    7. '                    
' → logprob: -13.250054359436035
    8. '                           ' → logprob: -13.750054359436035
    9. '				' → logprob: -14.375054359436035
    10. '
' → logprob: -14.375054359436035

Token 382: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.334533878136426e-05
    2. '               ' → logprob: -10.875042915344238
    3. '                       ' → logprob: -11.250042915344238
    4. '           ' → logprob: -12.750042915344238
    5. '<|end|>' → logprob: -13.125042915344238
    6. '                    
' → logprob: -13.375042915344238
    7. '                  ' → logprob: -13.625042915344238
    8. '                           ' → logprob: -14.000042915344238
    9. '                    ' → logprob: -14.375042915344238
    10. '		           ' → logprob: -14.500042915344238

Token 383: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4078514873981476
    2. '                   ' → logprob: -1.1578514575958252
    3. ' break' → logprob: -3.907851457595825
    4. '               ' → logprob: -7.532851696014404
    5. '                       ' → logprob: -9.282851219177246
    6. '	break' → logprob: -10.282851219177246
    7. '           ' → logprob: -12.282851219177246
    8. '                  ' → logprob: -12.657851219177246
    9. '                    ' → logprob: -13.407851219177246
    10. '                 ' → logprob: -13.657851219177246

Token 384: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.9040898880339228e-05
    2. '       ' → logprob: -12.250028610229492
    3. ',' → logprob: -12.375028610229492
    4. '          ' → logprob: -12.375028610229492
    5. '		' → logprob: -12.375028610229492
    6. '               ' → logprob: -12.875028610229492
    7. '            
' → logprob: -13.500028610229492
    8. '<|end|>' → logprob: -13.500028610229492
    9. '            ' → logprob: -14.000028610229492
    10. '	       ' → logprob: -14.000028610229492

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.431207682704553e-05
    2. '       ' → logprob: -11.000054359436035
    3. '		' → logprob: -11.250054359436035
    4. '               ' → logprob: -11.875054359436035
    5. '	       ' → logprob: -12.500054359436035
    6. '   ' → logprob: -13.250054359436035
    7. ',' → logprob: -13.375054359436035
    8. '                   ' → logprob: -13.625054359436035
    9. '          ' → logprob: -13.625054359436035
    10. '[' → logprob: -13.875054359436035

Token 386: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027406851295381784
    2. '       ' → logprob: -6.627740859985352
    3. ' if' → logprob: -6.752740859985352
    4. 'if' (adapté à ' if') → logprob: -9.377740859985352
    5. '   ' → logprob: -9.502740859985352
    6. '
' → logprob: -10.252740859985352
    7. '               ' → logprob: -11.752740859985352
    8. '          ' → logprob: -12.127740859985352
    9. '            
' → logprob: -12.377740859985352
    10. '		' → logprob: -12.502740859985352

Token 387: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5759430527687073
    2. ' valid' → logprob: -0.8259430527687073
    3. '	valid' → logprob: -13.075942993164062
    4. ' not' → logprob: -14.700942993164062
    5. 'not' → logprob: -14.700942993164062
    6. '(valid' → logprob: -15.075942993164062
    7. ' ' → logprob: -16.075942993164062
    8. '   ' → logprob: -16.450942993164062
    9. '_valid' → logprob: -16.700942993164062
    10. '.valid' → logprob: -17.075942993164062

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5653403997421265
    2. ':
' → logprob: -1.1903403997421265
    3. '               ' → logprob: -2.065340518951416
    4. '           ' → logprob: -7.440340518951416
    5. '):
' → logprob: -8.940340042114258
    6. '       ' → logprob: -9.440340042114258
    7. ' and' → logprob: -10.315340042114258
    8. ',' → logprob: -10.440340042114258
    9. '   ' → logprob: -10.940340042114258
    10. '                   ' → logprob: -11.315340042114258

Token 389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011713240382960066
    2. '           ' → logprob: -9.375117301940918
    3. '       ' → logprob: -12.250117301940918
    4. ',' → logprob: -12.375117301940918
    5. '                   ' → logprob: -12.375117301940918
    6. '                
' → logprob: -12.375117301940918
    7. '                ' → logprob: -12.625117301940918
    8. '              ' → logprob: -13.000117301940918
    9. '	           ' → logprob: -13.500117301940918
    10. '   ' → logprob: -13.875117301940918

Token 390: ' d' (ID: 272)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6807011365890503
    2. ' d' → logprob: -1.5557011365890503
    3. ' dist' → logprob: -2.18070125579834
    4. ' w' → logprob: -2.43070125579834
    5. 'd' (adapté à ' d') → logprob: -3.55570125579834
    6. 'cost' → logprob: -4.05570125579834
    7. '               ' → logprob: -4.18070125579834
    8. ' graph' → logprob: -5.30570125579834
    9. ' distance' → logprob: -5.68070125579834
    10. 'w' → logprob: -5.80570125579834

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12189110368490219
    2. 'istance' → logprob: -2.3718910217285156
    3. 'ist' → logprob: -4.371891021728516
    4. '=' → logprob: -4.746891021728516
    5. '   ' → logprob: -9.246891021728516
    6. 'is' → logprob: -10.871891021728516
    7. ' ' → logprob: -11.621891021728516
    8. '_' → logprob: -11.871891021728516
    9. 'st' → logprob: -13.121891021728516
    10. '1' → logprob: -13.496891021728516

Token 392: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04858759790658951
    2. ' dist' → logprob: -3.0485875606536865
    3. '(dist' → logprob: -16.423587799072266
    4. '	dist' → logprob: -16.798587799072266
    5. 'math' → logprob: -17.298587799072266
    6. ' math' → logprob: -17.673587799072266
    7. '   ' → logprob: -17.798587799072266
    8. 'int' → logprob: -18.548587799072266
    9. 'Dist' → logprob: -18.673587799072266
    10. '           ' → logprob: -19.298587799072266

Token 393: '(p' (ID: 2407)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.5761392116546631
    2. '(p' → logprob: -0.8261392116546631
    3. 'points' → logprob: -9.201139450073242
    4. ' points' → logprob: -9.951139450073242
    5. '(' → logprob: -10.701139450073242
    6. ' (' → logprob: -11.076139450073242
    7. 'p' → logprob: -11.576139450073242
    8. '	points' → logprob: -14.076139450073242
    9. '(point' → logprob: -14.201139450073242
    10. '_points' → logprob: -14.576139450073242

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3902209401130676
    2. 'oints' → logprob: -1.1402208805084229
    3. '(p' → logprob: -6.640221118927002
    4. '(points' → logprob: -6.765221118927002
    5. 'points' → logprob: -7.765221118927002
    6. 'nts' → logprob: -8.015220642089844
    7. 'ts' → logprob: -10.515220642089844
    8. ' points' → logprob: -10.640220642089844
    9. 'ints' → logprob: -10.765220642089844
    10. 'oint' → logprob: -11.265220642089844

Token 395: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13225989043712616
    2. ',p' → logprob: -2.1322598457336426
    3. 'p' → logprob: -5.382259845733643
    4. '(p' → logprob: -8.1322603225708
    5. '(points' → logprob: -8.5072603225708
    6. ' ,' → logprob: -9.1322603225708
    7. 'points' → logprob: -9.6322603225708
    8. ' points' → logprob: -11.2572603225708
    9. ' p' → logprob: -11.7572603225708
    10. '(' → logprob: -12.2572603225708

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519682049751282
    2. 'oints' → logprob: -1.5019681453704834
    3. 'o' → logprob: -11.626968383789062
    4. 'p' → logprob: -11.751968383789062
    5. 'oint' → logprob: -11.876968383789062
    6. 'i' → logprob: -12.376968383789062
    7. '[i' → logprob: -12.876968383789062
    8. '[' → logprob: -12.876968383789062
    9. '1' → logprob: -13.376968383789062
    10. 'points' → logprob: -13.376968383789062

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25737911462783813
    2. ')
' → logprob: -1.5073790550231934
    3. ',' → logprob: -5.257379055023193
    4. ')
' → logprob: -9.132379531860352
    5. ',i' → logprob: -9.757379531860352
    6. ' )
' → logprob: -11.257379531860352
    7. ')i' → logprob: -11.257379531860352
    8. ' )' → logprob: -11.382379531860352
    9. '),' → logprob: -11.757379531860352
    10. ')+' → logprob: -13.007379531860352

Token 398: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00026181264547631145
    2. '
' → logprob: -8.875262260437012
    3. '                
' → logprob: -9.750262260437012
    4. '           ' → logprob: -10.125262260437012
    5. '                   ' → logprob: -12.375262260437012
    6. '       ' → logprob: -12.375262260437012
    7. '<|end|>' → logprob: -12.750262260437012
    8. '			' → logprob: -13.375262260437012
    9. ' graph' → logprob: -13.500262260437012
    10. '   ' → logprob: -13.500262260437012

Token 399: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.11359800398349762
    2. 'graph' (adapté à ' graph') → logprob: -2.238598108291626
    3. '               ' → logprob: -7.738597869873047
    4. '   ' → logprob: -8.738597869873047
    5. '	graph' → logprob: -8.863597869873047
    6. '           ' → logprob: -10.738597869873047
    7. '       ' → logprob: -12.488597869873047
    8. '
' → logprob: -12.738597869873047
    9. '                   ' → logprob: -12.738597869873047
    10. '(graph' → logprob: -13.488597869873047

Token 400: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. ' [' → logprob: -17.625
    3. '[I' → logprob: -17.625
    4. '[' → logprob: -17.75
    5. '[s' → logprob: -18.375
    6. '[u' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. ')[' → logprob: -19.875
    9. '[a' → logprob: -20.375
    10. '[j' → logprob: -20.625

Token 401: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00017195509281009436
    2. '.append' → logprob: -8.875171661376953
    3. ').' → logprob: -11.250171661376953
    4. '.' → logprob: -11.875171661376953
    5. '   ' → logprob: -12.250171661376953
    6. ' ].' → logprob: -12.500171661376953
    7. ']' → logprob: -12.875171661376953
    8. '       ' → logprob: -14.750171661376953
    9. '           ' → logprob: -15.250171661376953
    10. '.app' → logprob: -16.250171661376953

Token 402: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. '.append' → logprob: -13.500001907348633
    3. ' append' → logprob: -15.500001907348633
    4. 'app' → logprob: -15.750001907348633
    5. '_append' → logprob: -20.125001907348633
    6. 'Append' → logprob: -20.500001907348633
    7. 'appen' → logprob: -20.750001907348633
    8. 'push' → logprob: -20.875001907348633
    9. '	append' → logprob: -22.750001907348633
    10. 'ap' → logprob: -23.250001907348633

Token 403: '((' (ID: 2054)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.001381901791319251
    2. ' (' → logprob: -7.251381874084473
    3. '(' → logprob: -7.501381874084473
    4. '(i' → logprob: -9.126381874084473
    5. '((' → logprob: -11.501381874084473
    6. '   ' → logprob: -15.001381874084473
    7. '(ii' → logprob: -16.00138282775879
    8. ' ' → logprob: -17.00138282775879
    9. '(js' → logprob: -17.50138282775879
    10. '(I' → logprob: -17.75138282775879

Token 404: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004944138927385211
    2. ' j' → logprob: -7.625494480133057
    3. '   ' → logprob: -12.125494003295898
    4. '	j' → logprob: -14.500494003295898
    5. ',j' → logprob: -15.750494003295898
    6. ' ' → logprob: -16.2504940032959
    7. '$j' → logprob: -17.0004940032959
    8. '[j' → logprob: -17.2504940032959
    9. '_j' → logprob: -17.3754940032959
    10. '
' → logprob: -17.5004940032959

Token 405: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032154809683561325
    2. ',d' → logprob: -3.5321547985076904
    3. ' ,' → logprob: -6.0321550369262695
    4. 'd' → logprob: -14.65715503692627
    5. ',
' → logprob: -14.78215503692627
    6. ' d' → logprob: -15.40715503692627
    7. '   ' → logprob: -17.282154083251953
    8. ' ' → logprob: -17.907154083251953
    9. '‌,' → logprob: -17.907154083251953
    10. ' ,
' → logprob: -18.407154083251953

Token 406: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10936994105577469
    2. ',' → logprob: -2.484369993209839
    3. '))
' → logprob: -4.48436975479126
    4. ' ))' → logprob: -4.85936975479126
    5. ' ))
' → logprob: -7.73436975479126
    6. ' ,' → logprob: -7.85936975479126
    7. ',d' → logprob: -9.109370231628418
    8. ',))
' → logprob: -9.234370231628418
    9. ',
' → logprob: -9.359370231628418
    10. ')' → logprob: -10.734370231628418

Token 407: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000875135709065944
    2. '           ' → logprob: -7.250874996185303
    3. '       ' → logprob: -9.000875473022461
    4. '   ' → logprob: -11.750875473022461
    5. '<|end|>' → logprob: -11.750875473022461
    6. '
' → logprob: -11.875875473022461
    7. '                
' → logprob: -12.500875473022461
    8. '              ' → logprob: -12.875875473022461
    9. '                   ' → logprob: -13.000875473022461
    10. ' graph' → logprob: -13.375875473022461

Token 408: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.25362086296081543
    2. 'graph' (adapté à ' graph') → logprob: -1.5036208629608154
    3. '	graph' → logprob: -6.8786211013793945
    4. '               ' → logprob: -7.3786211013793945
    5. '(graph' → logprob: -11.753621101379395
    6. '           ' → logprob: -11.878621101379395
    7. '                   ' → logprob: -12.128621101379395
    8. '.graph' → logprob: -12.503621101379395
    9. 'Graph' → logprob: -12.753621101379395
    10. '       ' → logprob: -13.253621101379395

Token 409: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20141646265983582
    2. '[j' → logprob: -1.7014164924621582
    3. '[' → logprob: -12.826416015625
    4. '   ' → logprob: -16.076416015625
    5. ' [' → logprob: -16.451416015625
    6. 'j' → logprob: -16.951416015625
    7. '][' → logprob: -17.076416015625
    8. 'i' → logprob: -17.201416015625
    9. '.append' → logprob: -17.201416015625
    10. ')[' → logprob: -17.326416015625

Token 410: '].' (ID: 1651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7498584985733032
    2. '].' → logprob: -1.1248584985733032
    3. ',(' → logprob: -1.7498584985733032
    4. '.append' → logprob: -3.8748583793640137
    5. ',i' → logprob: -5.374858379364014
    6. ').' → logprob: -6.499858379364014
    7. '],' → logprob: -7.999858379364014
    8. '][' → logprob: -8.124858856201172
    9. ',j' → logprob: -8.249858856201172
    10. '[' → logprob: -8.249858856201172

Token 411: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. ' append' → logprob: -13.625001907348633
    3. '.append' → logprob: -15.250001907348633
    4. 'appen' → logprob: -17.750001907348633
    5. '	append' → logprob: -18.250001907348633
    6. 'app' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.250001907348633
    8. ' ' → logprob: -20.750001907348633
    9. '```' → logprob: -21.250001907348633
    10. '           ' → logprob: -22.000001907348633

Token 412: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014199115335941315
    2. '(i' → logprob: -4.264199256896973
    3. '(' → logprob: -10.514199256896973
    4. ' (' → logprob: -11.889199256896973
    5. '(
' → logprob: -14.014199256896973
    6. '   ' → logprob: -15.014199256896973
    7. '(I' → logprob: -15.389199256896973
    8. ' ((' → logprob: -16.264198303222656
    9. ' ' → logprob: -16.639198303222656
    10. '```' → logprob: -17.014198303222656

Token 413: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.3080716346157715e-05
    2. ' i' → logprob: -10.875022888183594
    3. '(i' → logprob: -13.125022888183594
    4. '   ' → logprob: -13.750022888183594
    5. ',i' → logprob: -14.000022888183594
    6. '	i' → logprob: -16.000022888183594
    7. '_i' → logprob: -17.125022888183594
    8. ' ' → logprob: -17.250022888183594
    9. ' (' → logprob: -17.250022888183594
    10. '
' → logprob: -17.625022888183594

Token 414: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0032019545324146748
    2. ',' → logprob: -5.753201961517334
    3. ' ,' → logprob: -10.628201484680176
    4. ',
' → logprob: -17.128202438354492
    5. ',(' → logprob: -18.128202438354492
    6. ',D' → logprob: -18.378202438354492
    7. '	' → logprob: -18.878202438354492
    8. ',

' → logprob: -19.253202438354492
    9. ',b' → logprob: -19.253202438354492
    10. ',int' → logprob: -19.253202438354492

Token 415: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03960594907402992
    2. ',' → logprob: -3.4146058559417725
    3. ',d' → logprob: -5.164606094360352
    4. ' ))' → logprob: -9.039606094360352
    5. ')' → logprob: -10.664606094360352
    6. ',j' → logprob: -10.914606094360352
    7. ' ,' → logprob: -11.039606094360352
    8. ',k' → logprob: -11.789606094360352
    9. '))
' → logprob: -12.289606094360352
    10. ')))' → logprob: -12.289606094360352

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044396352022886276
    2. 'return' → logprob: -3.91939640045166
    3. 'def' → logprob: -4.29439640045166
    4. '
' → logprob: -5.04439640045166
    5. '    
' → logprob: -6.41939640045166
    6. ' return' → logprob: -6.91939640045166
    7. '	return' → logprob: -7.66939640045166
    8. '<|end|>' → logprob: -9.29439640045166
    9. ')return' → logprob: -9.79439640045166
    10. ':return' → logprob: -10.04439640045166

Token 417: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2788632810115814
    2. '   ' → logprob: -1.7788633108139038
    3. '
' → logprob: -2.7788631916046143
    4. ' return' → logprob: -4.778863430023193
    5. '	return' → logprob: -5.653863430023193
    6. '    
' → logprob: -8.028862953186035
    7. 'def' → logprob: -9.278862953186035
    8. ' ' → logprob: -11.028862953186035
    9. ')return' → logprob: -11.153862953186035
    10. '
' → logprob: -11.403862953186035

Token 418: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12692831456661224
    2. ' graph' → logprob: -2.1269283294677734
    3. '	graph' → logprob: -16.126928329467773
    4. '(graph' → logprob: -16.376928329467773
    5. '_graph' → logprob: -18.501928329467773
    6. 'Graph' → logprob: -19.251928329467773
    7. '.graph' → logprob: -21.626928329467773
    8. 'graphql' → logprob: -21.626928329467773
    9. 'graphs' → logprob: -22.126928329467773
    10. '   ' → logprob: -22.251928329467773

Token 419: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007009993423707783
    2. '<|end|>' → logprob: -7.875700950622559
    3. '
' → logprob: -8.500700950622559
    4. '```' → logprob: -9.875700950622559
    5. ' def' → logprob: -10.625700950622559
    6. ')' → logprob: -11.625700950622559
    7. '

' → logprob: -12.000700950622559
    8. '<|end|>' → logprob: -12.375700950622559
    9. 'import' → logprob: -12.750700950622559
    10. ':def' → logprob: -13.125700950622559

Token 420: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.982165698194876e-05
    2. '
' → logprob: -9.625080108642578
    3. '<|end|>' → logprob: -11.875080108642578
    4. '```' → logprob: -12.125080108642578
    5. '

' → logprob: -14.375080108642578
    6. '    
' → logprob: -15.500080108642578
    7. '  
' → logprob: -15.500080108642578
    8. ' def' → logprob: -15.875080108642578
    9. '\' → logprob: -16.625080108642578
    10. '<|end|>' → logprob: -16.625080108642578

Token 421: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13455918431282043
    2. ' d' → logprob: -2.634559154510498
    3. 'short' → logprob: -3.384559154510498
    4. ' shortest' → logprob: -4.009559154510498
    5. 'astar' → logprob: -6.884559154510498
    6. 'a' → logprob: -7.509559154510498
    7. 'solve' → logprob: -8.509559631347656
    8. 'main' → logprob: -8.884559631347656
    9. 'find' → logprob: -10.009559631347656
    10. ' a' → logprob: -10.259559631347656

Token 422: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.03851659968495369
    2. 'ijk' → logprob: -3.2885165214538574
    3. 'ij' → logprob: -7.913516521453857
    4. 'jik' → logprob: -9.163516998291016
    5. 'ijs' → logprob: -13.538516998291016
    6. 'ijkl' → logprob: -13.788516998291016
    7. 'ijek' → logprob: -14.538516998291016
    8. 'i' → logprob: -14.538516998291016
    9. 'ijks' → logprob: -14.913516998291016
    10. 'jk' → logprob: -15.288516998291016

Token 423: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.14783228933811188
    2. '(start' → logprob: -2.2728323936462402
    3. '(' → logprob: -3.7728323936462402
    4. '(points' → logprob: -5.52283239364624
    5. '(nodes' → logprob: -5.52283239364624
    6. ' (' → logprob: -6.64783239364624
    7. '(source' → logprob: -7.27283239364624
    8. '(node' → logprob: -7.64783239364624
    9. '(s' → logprob: -8.897831916809082
    10. '(def' → logprob: -9.022831916809082

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -11.12502670288086
    3. ',start' → logprob: -11.37502670288086
    4. '(graph' → logprob: -15.25002670288086
    5. ',node' → logprob: -16.00002670288086
    6. ',
' → logprob: -16.25002670288086
    7. ',n' → logprob: -17.00002670288086
    8. ',s' → logprob: -17.75002670288086
    9. '‌,' → logprob: -18.37502670288086
    10. ',

' → logprob: -18.62502670288086

Token 425: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.014224857091903687
    2. ' start' → logprob: -4.264225006103516
    3. 'src' → logprob: -10.264225006103516
    4. '0' → logprob: -11.014225006103516
    5. 'source' → logprob: -11.764225006103516
    6. ' ' → logprob: -13.639225006103516
    7. 's' → logprob: -14.014225006103516
    8. ' source' → logprob: -16.139225006103516
    9. ' src' → logprob: -16.764225006103516
    10. '	start' → logprob: -17.889225006103516

Token 426: '_indices' (ID: 43508)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036287534749135375
    2. '):' → logprob: -8.12536334991455
    3. '):
' → logprob: -10.50036334991455
    4. ' ,' → logprob: -10.62536334991455
    5. ',n' → logprob: -11.62536334991455
    6. ',start' → logprob: -12.62536334991455
    7. ',int' → logprob: -13.75036334991455
    8. ',s' → logprob: -15.12536334991455
    9. '   ' → logprob: -15.25036334991455
    10. ',index' → logprob: -15.37536334991455

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033536863047629595
    2. '):' → logprob: -5.753353595733643
    3. '):
' → logprob: -9.1283540725708
    4. ' ,' → logprob: -9.7533540725708
    5. ',n' → logprob: -13.2533540725708
    6. ',start' → logprob: -13.6283540725708
    7. ',List' → logprob: -13.8783540725708
    8. '   ' → logprob: -14.1283540725708
    9. ')' → logprob: -14.1283540725708
    10. ' ):' → logprob: -14.6283540725708

Token 428: ' goal' (ID: 8583)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.318028062582016
    2. 'end' → logprob: -1.3180280923843384
    3. ' target' → logprob: -6.568027973175049
    4. 'target' → logprob: -6.693027973175049
    5. 'goal' → logprob: -7.318027973175049
    6. ' goal' → logprob: -7.693027973175049
    7. ' targets' → logprob: -7.693027973175049
    8. 'targets' → logprob: -8.568028450012207
    9. ' distances' → logprob: -8.818028450012207
    10. 'dist' → logprob: -9.193028450012207

Token 429: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.06225447729229927
    2. 's' → logprob: -2.8122544288635254
    3. 'indices' → logprob: -8.937254905700684
    4. '):
' → logprob: -10.062254905700684
    5. '):' → logprob: -10.562254905700684
    6. ',' → logprob: -11.187254905700684
    7. '_' → logprob: -11.812254905700684
    8. ')' → logprob: -11.812254905700684
    9. ')_' → logprob: -11.812254905700684
    10. ',_' → logprob: -11.937254905700684

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009865755215287209
    2. '):
' → logprob: -4.634865760803223
    3. ',' → logprob: -9.259865760803223
    4. ' ):' → logprob: -11.884865760803223
    5. '):
' → logprob: -12.634865760803223
    6. '   ' → logprob: -12.634865760803223
    7. ')' → logprob: -14.759865760803223
    8. ':' → logprob: -15.134865760803223
    9. '):

' → logprob: -15.509865760803223
    10. 'def' → logprob: -16.009864807128906

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019269285257905722
    2. ' distances' → logprob: -9.500192642211914
    3. ' dist' → logprob: -9.750192642211914
    4. 'dist' → logprob: -10.375192642211914
    5. 'import' → logprob: -11.000192642211914
    6. ' import' → logprob: -12.000192642211914
    7. '	dist' → logprob: -13.250192642211914
    8. '   ' → logprob: -13.750192642211914
    9. '    ' → logprob: -14.125192642211914
    10. '```' → logprob: -15.000192642211914

Token 432: ' n' (ID: 297)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.475007176399231
    2. 'heap' → logprob: -1.475007176399231
    3. 'dist' → logprob: -1.725007176399231
    4. ' heap' → logprob: -1.725007176399231
    5. '   ' → logprob: -2.2250070571899414
    6. ' import' → logprob: -3.1000070571899414
    7. ' dist' → logprob: -3.6000070571899414
    8. 'pq' → logprob: -5.850007057189941
    9. 'queue' → logprob: -7.350007057189941
    10. 'n' (adapté à ' n') → logprob: -7.475007057189941

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04438391700387001
    2. '=' → logprob: -3.169384002685547
    3. ')' → logprob: -7.544384002685547
    4. ',' → logprob: -7.669384002685547
    5. '   ' → logprob: -8.919384002685547
    6. ' =
' → logprob: -9.294384002685547
    7. ' ' → logprob: -9.669384002685547
    8. '
' → logprob: -10.419384002685547
    9. 'n' → logprob: -11.544384002685547
    10. '=len' → logprob: -11.669384002685547

Token 434: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759403705596924
    2. 'len' → logprob: -0.8259403705596924
    3. '(len' → logprob: -14.075940132141113
    4. '[len' → logprob: -16.82594108581543
    5. '=len' → logprob: -18.45094108581543
    6. '	len' → logprob: -19.82594108581543
    7. ' ' → logprob: -20.32594108581543
    8. '   ' → logprob: -20.57594108581543
    9. ',len' → logprob: -20.82594108581543
    10. '<len' → logprob: -21.20094108581543

Token 435: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.9266199160483666e-05
    2. 'graph' → logprob: -11.000019073486328
    3. '(' → logprob: -13.500019073486328
    4. ' graph' → logprob: -14.375019073486328
    5. '	graph' → logprob: -15.250019073486328
    6. ' (' → logprob: -15.875019073486328
    7. '(
' → logprob: -16.750019073486328
    8. 'Graph' → logprob: -18.875019073486328
    9. '(Graph' → logprob: -18.875019073486328
    10. '(grid' → logprob: -19.875019073486328

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008621551096439362
    2. ')' → logprob: -4.758621692657471
    3. ' )
' → logprob: -12.258621215820312
    4. ')
' → logprob: -13.133621215820312
    5. '   ' → logprob: -16.383621215820312
    6. ')

' → logprob: -16.508621215820312
    7. ' )' → logprob: -17.133621215820312
    8. ')n' → logprob: -18.008621215820312
    9. '
' → logprob: -18.258621215820312
    10. '):
' → logprob: -19.508621215820312

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12091490626335144
    2. 'dist' → logprob: -2.495914936065674
    3. ' dist' → logprob: -3.745914936065674
    4. 'import' → logprob: -5.870914936065674
    5. ' distances' → logprob: -6.245914936065674
    6. '
' → logprob: -6.370914936065674
    7. 'heap' → logprob: -8.120914459228516
    8. 'pq' → logprob: -8.495914459228516
    9. '	dist' → logprob: -8.620914459228516
    10. '```' → logprob: -8.745914459228516

Token 438: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.001339050941169262
    2. ' dist' → logprob: -6.751338958740234
    3. 'import' → logprob: -8.751338958740234
    4. '   ' → logprob: -12.501338958740234
    5. 'INF' → logprob: -13.126338958740234
    6. 'heap' → logprob: -13.251338958740234
    7. ' import' → logprob: -13.876338958740234
    8. 'distance' → logprob: -14.001338958740234
    9. ' distances' → logprob: -14.376338958740234
    10. 'inf' → logprob: -15.251338958740234

Token 439: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3824962377548218
    2. '=' → logprob: -1.2574962377548218
    3. 'ances' → logprob: -4.007496356964111
    4. 's' → logprob: -4.257496356964111
    5. 'ance' → logprob: -8.132495880126953
    6. '[' → logprob: -8.257495880126953
    7. '=[' → logprob: -8.882495880126953
    8. '   ' → logprob: -8.882495880126953
    9. '[]' → logprob: -9.632495880126953
    10. '=[]' → logprob: -10.257495880126953

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024528205394745
    2. '=' → logprob: -2.350245237350464
    3. '=[' → logprob: -11.225245475769043
    4. 's' → logprob: -11.350245475769043
    5. ' =[' → logprob: -11.975245475769043
    6. '[' → logprob: -12.725245475769043
    7. ' ' → logprob: -13.475245475769043
    8. '=[]' → logprob: -13.850245475769043
    9. 'ances' → logprob: -14.475245475769043
    10. '   ' → logprob: -14.600245475769043

Token 441: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005535400938242674
    2. ' [' → logprob: -5.25553560256958
    3. '{' → logprob: -8.255535125732422
    4. '[n' → logprob: -11.380535125732422
    5. '[node' → logprob: -11.880535125732422
    6. '[len' → logprob: -13.130535125732422
    7. '[a' → logprob: -13.380535125732422
    8. '[num' → logprob: -13.380535125732422
    9. '[start' → logprob: -13.505535125732422
    10. '[Math' → logprob: -13.505535125732422

Token 442: 'math' (ID: 20310)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10021141171455383
    2. 'math' → logprob: -2.3502113819122314
    3. ' float' → logprob: -12.600211143493652
    4. ' math' → logprob: -13.600211143493652
    5. '   ' → logprob: -16.10021209716797
    6. '(float' → logprob: -18.60021209716797
    7. '(math' → logprob: -19.35021209716797
    8. '	float' → logprob: -19.97521209716797
    9. ' ' → logprob: -21.22521209716797
    10. '
' → logprob: -21.60021209716797

Token 443: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.0007117166533134878
    2. 'inf' → logprob: -7.250711917877197
    3. ' inf' → logprob: -13.875711441040039
    4. '_inf' → logprob: -15.000711441040039
    5. '```' → logprob: -15.375711441040039
    6. '[' → logprob: -17.00071144104004
    7. '.' → logprob: -17.00071144104004
    8. '   ' → logprob: -17.25071144104004
    9. '``' → logprob: -17.50071144104004
    10. 'Inf' → logprob: -17.50071144104004

Token 444: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004487919621169567
    2. ']*' → logprob: -5.879487991333008
    3. ' for' → logprob: -6.879487991333008
    4. ' ]' → logprob: -7.379487991333008
    5. 'for' → logprob: -10.629487991333008
    6. ',' → logprob: -13.004487991333008
    7. ']*(' → logprob: -14.129487991333008
    8. ']+' → logprob: -14.504487991333008
    9. ')' → logprob: -14.754487991333008
    10. '```' → logprob: -15.504487991333008

Token 445: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. ' n' → logprob: -13.250001907348633
    3. '(n' → logprob: -14.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '	n' → logprob: -18.875001907348633
    6. ')n' → logprob: -20.000001907348633
    7. '```' → logprob: -20.125001907348633
    8. '(' → logprob: -20.375001907348633
    9. '
' → logprob: -20.500001907348633
    10. '[n' → logprob: -21.500001907348633

Token 446: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0005900867399759591
    2. '    
' → logprob: -8.500590324401855
    3. 'dist' → logprob: -9.125590324401855
    4. '
' → logprob: -9.250590324401855
    5. '   ' → logprob: -9.750590324401855
    6. ' 
' → logprob: -10.000590324401855
    7. '  
' → logprob: -10.125590324401855
    8. '<|end|>' → logprob: -11.500590324401855
    9. ',' → logprob: -12.125590324401855
    10. '   
' → logprob: -12.500590324401855

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13393189013004303
    2. ' for' → logprob: -2.383931875228882
    3. 'for' → logprob: -3.758931875228882
    4. 'import' → logprob: -5.508932113647461
    5. 'heap' → logprob: -5.883932113647461
    6. 'pq' → logprob: -6.258932113647461
    7. ' heap' → logprob: -7.133932113647461
    8. ' import' → logprob: -9.008932113647461
    9. ' pq' → logprob: -9.008932113647461
    10. 'queue' → logprob: -10.508932113647461

Token 448: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.14858047664165497
    2. 'import' → logprob: -2.398580551147461
    3. 'for' → logprob: -3.398580551147461
    4. 'pq' → logprob: -4.898580551147461
    5. '   ' → logprob: -5.648580551147461
    6. 'hq' → logprob: -6.773580551147461
    7. ' heap' → logprob: -7.273580551147461
    8. 'queue' → logprob: -7.273580551147461
    9. 'h' (adapté à ' h') → logprob: -8.648580551147461
    10. '```' → logprob: -9.273580551147461

Token 449: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01576627977192402
    2. 'q' → logprob: -4.390766143798828
    3. ' =' → logprob: -5.890766143798828
    4. '   ' → logprob: -8.515766143798828
    5. '=' → logprob: -9.265766143798828
    6. ' ' → logprob: -9.890766143798828
    7. '  ' → logprob: -10.515766143798828
    8. 'p' → logprob: -10.515766143798828
    9. '=[]' → logprob: -10.515766143798828
    10. 'eat' → logprob: -11.390766143798828

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03394857048988342
    2. '=' → logprob: -3.4089486598968506
    3. '=[]' → logprob: -8.78394889831543
    4. 'import' → logprob: -10.03394889831543
    5. 'q' → logprob: -10.65894889831543
    6. '.push' → logprob: -10.78394889831543
    7. ' ' → logprob: -11.15894889831543
    8. '<|end|>' → logprob: -11.78394889831543
    9. 'e' → logprob: -11.90894889831543
    10. ',' → logprob: -12.15894889831543

Token 451: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01130516268312931
    2. '[(' → logprob: -4.511305332183838
    3. ' []' → logprob: -8.76130485534668
    4. '[]
' → logprob: -9.26130485534668
    5. ' [(' → logprob: -12.26130485534668
    6. '[]

' → logprob: -14.51130485534668
    7. '[' → logprob: -15.51130485534668
    8. '[]"' → logprob: -16.88630485534668
    9. ' []
' → logprob: -17.01130485534668
    10. '[]}' → logprob: -17.26130485534668

Token 452: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14903679490089417
    2. 'for' → logprob: -2.0240368843078613
    3. '   ' → logprob: -5.649036884307861
    4. '
' → logprob: -6.274036884307861
    5. '	for' → logprob: -7.149036884307861
    6. '<|end|>' → logprob: -9.524036407470703
    7. ' 
' → logprob: -10.399036407470703
    8. '  
' → logprob: -11.274036407470703
    9. '    
' → logprob: -11.274036407470703
    10. ',' → logprob: -11.899036407470703

Token 453: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16100582480430603
    2. ' for' → logprob: -1.9110058546066284
    3. '   ' → logprob: -7.161005973815918
    4. '	for' → logprob: -12.661005973815918
    5. '
' → logprob: -13.286005973815918
    6. ' ' → logprob: -16.4110050201416
    7. '    
' → logprob: -16.7860050201416
    8. 'import' → logprob: -16.7860050201416
    9. ' 
' → logprob: -17.5360050201416
    10. '  ' → logprob: -17.9110050201416

Token 454: ' si' (ID: 1784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9739983677864075
    2. 'si' → logprob: -0.9739983677864075
    3. 'idx' → logprob: -1.7239983081817627
    4. 'start' → logprob: -2.7239983081817627
    5. 'src' → logprob: -8.098998069763184
    6. 'index' → logprob: -8.223998069763184
    7. 'i' → logprob: -8.723998069763184
    8. ' si' → logprob: -9.598998069763184
    9. ' idx' → logprob: -9.848998069763184
    10. ' s' → logprob: -10.723998069763184

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41138312220573425
    2. 'n' → logprob: -1.1613831520080566
    3. 'in' → logprob: -4.036383152008057
    4. ',' → logprob: -5.661383152008057
    5. 'nd' → logprob: -6.161383152008057
    6. 'x' → logprob: -7.161383152008057
    7. 'dx' → logprob: -9.536382675170898
    8. 'nt' → logprob: -10.786382675170898
    9. 's' → logprob: -11.161382675170898
    10. 'm' → logprob: -11.411382675170898

Token 456: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.038043901324272156
    2. ' start' → logprob: -3.288043975830078
    3. '[start' → logprob: -13.038043975830078
    4. '(start' → logprob: -15.913043975830078
    5. 'range' → logprob: -17.163043975830078
    6. '   ' → logprob: -17.288043975830078
    7. ',start' → logprob: -17.538043975830078
    8. 's' → logprob: -17.663043975830078
    9. '_start' → logprob: -17.663043975830078
    10. '	start' → logprob: -17.788043975830078

Token 457: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0015580703038722277
    2. ' in' → logprob: -8.126558303833008
    3. 'indices' → logprob: -8.126558303833008
    4. '_' → logprob: -8.876558303833008
    5. '_ind' → logprob: -8.876558303833008
    6. '_idx' → logprob: -9.251558303833008
    7. ' _' → logprob: -9.501558303833008
    8. 'in' → logprob: -9.626558303833008
    9. 's' → logprob: -9.876558303833008
    10. '   ' → logprob: -9.876558303833008

Token 458: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.038124002516269684
    2. ':' → logprob: -3.2881240844726562
    3. ',' → logprob: -10.413124084472656
    4. '   ' → logprob: -10.538124084472656
    5. '):
' → logprob: -11.163124084472656
    6. ':
' → logprob: -11.663124084472656
    7. ' :
' → logprob: -13.538124084472656
    8. ':

' → logprob: -13.913124084472656
    9. '       ' → logprob: -14.913124084472656
    10. '():
' → logprob: -16.288124084472656

Token 459: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38769420981407166
    2. ' dist' → logprob: -1.262694239616394
    3. 'dist' → logprob: -3.8876941204071045
    4. '       ' → logprob: -4.137694358825684
    5. '	dist' → logprob: -6.387694358825684
    6. '_dist' → logprob: -8.887694358825684
    7. '    ' → logprob: -9.887694358825684
    8. '```' → logprob: -10.512694358825684
    9. '    
' → logprob: -10.887694358825684
    10. '
' → logprob: -10.887694358825684

Token 460: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.01729021780192852
    2. ' dist' → logprob: -4.392290115356445
    3. 'heap' → logprob: -5.892290115356445
    4. '   ' → logprob: -6.267290115356445
    5. ' heap' → logprob: -9.392290115356445
    6. 'import' → logprob: -12.017290115356445
    7. '	dist' → logprob: -12.142290115356445
    8. 'he' → logprob: -12.392290115356445
    9. '```' → logprob: -12.642290115356445
    10. '_dist' → logprob: -13.017290115356445

Token 461: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.1472419600977446e-06
    2. '[_' → logprob: -14.500000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'arr' → logprob: -15.500000953674316
    5. 'Arr' → logprob: -16.500001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '[arr' → logprob: -17.875001907348633
    9. '```' → logprob: -18.125001907348633
    10. '	arr' → logprob: -18.250001907348633

Token 462: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. 'si' → logprob: -14.250001907348633
    3. ' [' → logprob: -14.500001907348633
    4. ')[' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '=' → logprob: -16.625001907348633
    7. '][' → logprob: -16.875001907348633
    8. '[i' → logprob: -17.000001907348633
    9. '```' → logprob: -17.000001907348633
    10. '[
' → logprob: -17.250001907348633

Token 463: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -2.1008713702030946e-06
    2. ' si' → logprob: -13.125001907348633
    3. '(si' → logprob: -17.125001907348633
    4. ']' → logprob: -18.250001907348633
    5. '[' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ' ' → logprob: -19.875001907348633
    8. ')' → logprob: -19.875001907348633
    9. '```' → logprob: -20.125001907348633
    10. 'i' → logprob: -20.625001907348633

Token 464: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005736202467232943
    2. ']=' → logprob: -5.255736351013184
    3. ' ]' → logprob: -8.255736351013184
    4. '=' → logprob: -8.380736351013184
    5. ' =' → logprob: -11.630736351013184
    6. ')' → logprob: -12.505736351013184
    7. ')=' → logprob: -14.755736351013184
    8. ',' → logprob: -16.005735397338867
    9. '   ' → logprob: -16.755735397338867
    10. '`]' → logprob: -16.755735397338867

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. ']=' → logprob: -16.001502990722656
    4. ')=' → logprob: -17.376502990722656
    5. ',' → logprob: -18.501502990722656
    6. '=
' → logprob: -19.001502990722656
    7. ']' → logprob: -19.501502990722656
    8. ')' → logprob: -19.626502990722656
    9. '=sys' → logprob: -19.626502990722656
    10. '0' → logprob: -19.876502990722656

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.25
    4. '۰' → logprob: -19.0
    5. '```' → logprob: -19.1875
    6. '  ' → logprob: -20.0
    7. '=' → logprob: -20.0625
    8. '(' → logprob: -20.3125
    9. '1' → logprob: -20.5625
    10. '`' → logprob: -20.75

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.625
    4. '۰' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. '00' → logprob: -21.625
    7. '1' → logprob: -21.8125
    8. '(' → logprob: -21.875
    9. '  ' → logprob: -22.125
    10. '=' → logprob: -22.25

Token 468: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024500858853571117
    2. '<|end|>' → logprob: -9.250245094299316
    3. '   ' → logprob: -10.000245094299316
    4. ',' → logprob: -10.375245094299316
    5. ' heap' → logprob: -10.750245094299316
    6. '	' → logprob: -10.875245094299316
    7. '
' → logprob: -11.750245094299316
    8. '               ' → logprob: -12.250245094299316
    9. '           ' → logprob: -12.250245094299316
    10. '(heap' → logprob: -12.500245094299316

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012630375567823648
    2. 'push' → logprob: -9.000125885009766
    3. 'heap' → logprob: -13.125125885009766
    4. '   ' → logprob: -14.875125885009766
    5. '```' → logprob: -15.375125885009766
    6. ' ' → logprob: -16.750125885009766
    7. 'append' → logprob: -17.000125885009766
    8. 'put' → logprob: -17.125125885009766
    9. 'he' → logprob: -17.250125885009766
    10. 'queue' → logprob: -17.250125885009766

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008609491400420666
    2. 'heap' → logprob: -5.758609294891357
    3. ' heap' → logprob: -5.758609294891357
    4. '   ' → logprob: -6.133609294891357
    5. '(heap' → logprob: -10.133609771728516
    6. ',' → logprob: -11.383609771728516
    7. '.heap' → logprob: -11.883609771728516
    8. '	   ' → logprob: -12.008609771728516
    9. '	' → logprob: -12.008609771728516
    10. '           ' → logprob: -12.133609771728516

Token 471: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03029857762157917
    2. 'heap' → logprob: -4.280298709869385
    3. '       ' → logprob: -4.780298709869385
    4. ' heap' → logprob: -4.905298709869385
    5. ' for' → logprob: -9.530298233032227
    6. 'for' → logprob: -10.530298233032227
    7. '(heap' → logprob: -10.530298233032227
    8. 'import' → logprob: -11.030298233032227
    9. '	' → logprob: -11.280298233032227
    10. '```' → logprob: -11.530298233032227

Token 472: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -13.000003814697266
    3. ' heap' → logprob: -13.500003814697266
    4. '       ' → logprob: -18.500003814697266
    5. 'he' → logprob: -19.000003814697266
    6. '```' → logprob: -19.500003814697266
    7. '           ' → logprob: -21.375003814697266
    8. 'queue' → logprob: -21.750003814697266
    9. 'import' → logprob: -21.875003814697266
    10. '(heap' → logprob: -22.125003814697266

Token 473: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. 'push' → logprob: -13.75000286102295
    3. 'h' → logprob: -13.87500286102295
    4. '```' → logprob: -15.00000286102295
    5. '.he' → logprob: -15.37500286102295
    6. 'he' → logprob: -16.000003814697266
    7. '.push' → logprob: -16.875003814697266
    8. '[' → logprob: -17.000003814697266
    9. 'p' → logprob: -17.000003814697266
    10. '_push' → logprob: -17.125003814697266

Token 474: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.659005157416686e-05
    2. '.heap' → logprob: -10.125066757202148
    3. '.push' → logprob: -10.875066757202148
    4. '.' → logprob: -11.875066757202148
    5. ').' → logprob: -15.250066757202148
    6. ' .' → logprob: -15.625066757202148
    7. '.put' → logprob: -17.12506675720215
    8. '}.' → logprob: -17.75006675720215
    9. 'he' → logprob: -17.75006675720215
    10. '>.' → logprob: -17.87506675720215

Token 475: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011164903844473884
    2. 'pp' → logprob: -9.50011157989502
    3. 'push' → logprob: -10.25011157989502
    4. 'ap' → logprob: -14.25011157989502
    5. '```' → logprob: -15.50011157989502
    6. 'q' → logprob: -15.75011157989502
    7. 'append' → logprob: -16.500112533569336
    8. 'appen' → logprob: -16.500112533569336
    9. 'p' → logprob: -16.750112533569336
    10. '[' → logprob: -16.875112533569336

Token 476: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.10119906067848206
    2. 'push' → logprob: -2.351199150085449
    3. 'app' → logprob: -7.726199150085449
    4. 'le' → logprob: -8.10119915008545
    5. 'pp' → logprob: -9.97619915008545
    6. 'p' → logprob: -9.97619915008545
    7. 'u' → logprob: -10.35119915008545
    8. '.push' → logprob: -11.22619915008545
    9. 'Push' → logprob: -11.22619915008545
    10. '```' → logprob: -11.60119915008545

Token 477: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. '(q' → logprob: -16.875
    4. ',h' → logprob: -19.125
    5. '(heap' → logprob: -19.875
    6. ' (' → logprob: -20.5
    7. '((' → logprob: -20.5
    8. '(d' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. '(s' → logprob: -22.0

Token 478: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. '(q' → logprob: -15.000000953674316
    3. 'Q' → logprob: -15.375000953674316
    4. 'c' → logprob: -15.875000953674316
    5. ')' → logprob: -16.625001907348633
    6. 'cq' → logprob: -17.375001907348633
    7. ',q' → logprob: -17.625001907348633
    8. '	q' → logprob: -17.750001907348633
    9. 'qh' → logprob: -18.000001907348633
    10. 'sq' → logprob: -18.000001907348633

Token 479: ',(' (ID: 27243)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0076278080232441425
    2. '((' → logprob: -5.257627964019775
    3. ',' → logprob: -6.257627964019775
    4. '(si' → logprob: -8.382627487182617
    5. ',(' → logprob: -8.882627487182617
    6. '(s' → logprob: -10.007627487182617
    7. ')' → logprob: -10.507627487182617
    8. ' (' → logprob: -11.257627487182617
    9. '(
' → logprob: -11.882627487182617
    10. '```' → logprob: -13.132627487182617

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'dist' → logprob: -16.5
    4. '   ' → logprob: -18.25
    5. '(' → logprob: -19.125
    6. ')' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. '۰' → logprob: -20.375
    9. '
' → logprob: -20.9375
    10. '  ' → logprob: -21.375

Token 481: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12727832794189453
    2. ',' → logprob: -2.1272783279418945
    3. '.si' → logprob: -9.877278327941895
    4. '(si' → logprob: -10.002278327941895
    5. '```' → logprob: -10.002278327941895
    6. '.,' → logprob: -10.127278327941895
    7. 'si' → logprob: -10.377278327941895
    8. '[' → logprob: -10.502278327941895
    9. ',s' → logprob: -10.627278327941895
    10. '0' → logprob: -10.752278327941895

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. 'si' → logprob: -14.250000953674316
    3. 'dist' → logprob: -14.750000953674316
    4. '```' → logprob: -16.375001907348633
    5. ',' → logprob: -16.500001907348633
    6. 'start' → logprob: -17.250001907348633
    7. 'float' → logprob: -17.625001907348633
    8. ' ' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.125001907348633
    10. 'python' → logprob: -18.125001907348633

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',s' → logprob: -14.000004768371582
    4. ' si' → logprob: -15.875004768371582
    5. 'si' → logprob: -16.625003814697266
    6. '(si' → logprob: -17.125003814697266
    7. ',
' → logprob: -17.250003814697266
    8. '_si' → logprob: -17.625003814697266
    9. ',i' → logprob: -18.750003814697266
    10. ',se' → logprob: -19.250003814697266

Token 484: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -4.842555426876061e-06
    2. ' si' → logprob: -12.250004768371582
    3. '(si' → logprob: -18.3750057220459
    4. '   ' → logprob: -20.5000057220459
    5. '_si' → logprob: -21.1250057220459
    6. 's' → logprob: -21.6250057220459
    7. ')' → logprob: -21.8750057220459
    8. 'Si' → logprob: -22.3750057220459
    9. '```' → logprob: -22.3750057220459
    10. '.si' → logprob: -22.6250057220459

Token 485: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005195511621423066
    2. '))
' → logprob: -7.875519752502441
    3. ')' → logprob: -9.125519752502441
    4. ')))' → logprob: -10.500519752502441
    5. ' ))' → logprob: -13.500519752502441
    6. '))

' → logprob: -14.250519752502441
    7. '));' → logprob: -14.625519752502441
    8. '))
' → logprob: -15.500519752502441
    9. '   ' → logprob: -15.750519752502441
    10. ' ' → logprob: -16.875518798828125

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3907181918621063
    2. 'while' → logprob: -1.3907182216644287
    3. ' while' → logprob: -2.6407182216644287
    4. '
' → logprob: -6.51571798324585
    5. '	while' → logprob: -6.51571798324585
    6. '    
' → logprob: -9.265718460083008
    7. '```' → logprob: -9.640718460083008
    8. '<|end|>' → logprob: -10.140718460083008
    9. 'While' → logprob: -10.515718460083008
    10. ')' → logprob: -10.640718460083008

Token 487: ' goal' (ID: 8583)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010471829213202
    2. '   ' → logprob: -5.260471820831299
    3. ' while' → logprob: -5.260471820831299
    4. '
' → logprob: -10.635472297668457
    5. '	while' → logprob: -12.010472297668457
    6. '```' → logprob: -14.260472297668457
    7. '    
' → logprob: -14.635472297668457
    8. 'While' → logprob: -15.885472297668457
    9. ' 
' → logprob: -17.26047134399414
    10. '  ' → logprob: -18.13547134399414

Token 488: '_set' (ID: 5451)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0045695616863667965
    2. '_' → logprob: -6.0045695304870605
    3. '_set' → logprob: -6.6295695304870605
    4. 's' → logprob: -7.2545695304870605
    5. '_inds' → logprob: -11.254570007324219
    6. ' _' → logprob: -11.504570007324219
    7. '_positions' → logprob: -11.754570007324219
    8. '_dist' → logprob: -12.129570007324219
    9. '_idxs' → logprob: -12.504570007324219
    10. 'Indices' → logprob: -12.504570007324219

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1605103760957718
    2. '=' → logprob: -1.9105104207992554
    3. '=set' → logprob: -8.160510063171387
    4. ' ={' → logprob: -16.160511016845703
    5. ' ' → logprob: -16.285511016845703
    6. '={' → logprob: -16.535511016845703
    7. '={"' → logprob: -17.160511016845703
    8. ')' → logprob: -17.410511016845703
    9. ' =
' → logprob: -17.535511016845703
    10. '=create' → logprob: -18.035511016845703

Token 490: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001170225441455841
    2. ' set' → logprob: -6.7511701583862305
    3. '	set' → logprob: -17.876171112060547
    4. '=set' → logprob: -17.876171112060547
    5. '(set' → logprob: -18.376171112060547
    6. '{' → logprob: -19.626171112060547
    7. '   ' → logprob: -20.751171112060547
    8. ')set' → logprob: -20.751171112060547
    9. ' ' → logprob: -21.626171112060547
    10. '```' → logprob: -22.751171112060547

Token 491: '(goal' (ID: 196945)
  Prédit: '(goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(goal' → logprob: -5.512236498361744e-07
    2. 'goal' → logprob: -15.250000953674316
    3. '(go' → logprob: -15.500000953674316
    4. '(' → logprob: -19.625
    5. ' goal' → logprob: -20.0
    6. '(
' → logprob: -20.625
    7. '.goal' → logprob: -21.0
    8. '_goal' → logprob: -21.125
    9. '((' → logprob: -21.625
    10. 'Goal' → logprob: -21.75

Token 492: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -1.1160349458805285e-05
    2. 'indices' → logprob: -11.750011444091797
    3. '(indices' → logprob: -13.500011444091797
    4. 'Indices' → logprob: -13.625011444091797
    5. '"indices' → logprob: -14.750011444091797
    6. ' indices' → logprob: -17.625011444091797
    7. ')' → logprob: -17.750011444091797
    8. '(goal' → logprob: -18.125011444091797
    9. '.indices' → logprob: -18.250011444091797
    10. 's' → logprob: -18.375011444091797

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.500003814697266
    4. '   ' → logprob: -16.375003814697266
    5. ')}' → logprob: -16.500003814697266
    6. '))' → logprob: -16.500003814697266
    7. '}' → logprob: -18.500003814697266
    8. ')

' → logprob: -19.000003814697266
    9. ')
' → logprob: -19.000003814697266
    10. '())' → logprob: -19.125003814697266

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5655546188354492
    2. 'while' → logprob: -1.0655546188354492
    3. ' while' → logprob: -2.565554618835449
    4. '
' → logprob: -4.565554618835449
    5. '    
' → logprob: -9.94055461883545
    6. '	while' → logprob: -9.94055461883545
    7. '```' → logprob: -10.31555461883545
    8. 'While' → logprob: -12.19055461883545
    9. ' 
' → logprob: -13.44055461883545
    10. '
' → logprob: -15.06555461883545

Token 495: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0011839192593470216
    2. ' while' → logprob: -7.001183986663818
    3. '   ' → logprob: -8.25118350982666
    4. '
' → logprob: -11.50118350982666
    5. '	while' → logprob: -14.37618350982666
    6. '```' → logprob: -14.50118350982666
    7. 'While' → logprob: -15.62618350982666
    8. '    
' → logprob: -16.376184463500977
    9. '``' → logprob: -20.001184463500977
    10. ' 
' → logprob: -20.251184463500977

Token 496: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.062231749296188354
    2. ' h' → logprob: -2.8122317790985107
    3. '(h' → logprob: -8.56223201751709
    4. '	h' → logprob: -9.68723201751709
    5. '[h' → logprob: -11.56223201751709
    6. ',h' → logprob: -14.93723201751709
    7. '   ' → logprob: -15.18723201751709
    8. 'h' → logprob: -15.81223201751709
    9. '<h' → logprob: -16.312231063842773
    10. '_h' → logprob: -16.437231063842773

Token 497: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5776860184123507e-06
    2. 'qc' → logprob: -14.12500286102295
    3. 'qh' → logprob: -14.87500286102295
    4. '(q' → logprob: -15.25000286102295
    5. 'hq' → logprob: -15.25000286102295
    6. '.q' → logprob: -16.125001907348633
    7. '	q' → logprob: -16.250001907348633
    8. '_q' → logprob: -16.437501907348633
    9. 'Q' → logprob: -16.562501907348633
    10. 'cq' → logprob: -16.750001907348633

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6335874199867249
    2. ':
' → logprob: -0.7585874199867249
    3. '[' → logprob: -7.75858736038208
    4. ' and' → logprob: -8.008587837219238
    5. 'and' → logprob: -9.008587837219238
    6. '   ' → logprob: -10.133587837219238
    7. '):
' → logprob: -10.383587837219238
    8. ':

' → logprob: -11.633587837219238
    9. ':
' → logprob: -11.758587837219238
    10. ',' → logprob: -12.758587837219238

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017696917057037354
    2. 'dist' → logprob: -4.892696857452393
    3. ',' → logprob: -5.517696857452393
    4. ' dist' → logprob: -6.017696857452393
    5. '   ' → logprob: -6.767696857452393
    6. 'd' → logprob: -6.892696857452393
    7. ' ,' → logprob: -7.642696857452393
    8. 'cost' → logprob: -8.26769733428955
    9. 'distance' → logprob: -9.26769733428955
    10. ' cost' → logprob: -9.64269733428955

Token 500: ' cd' (ID: 24852)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5158811807632446
    2. 'cur' → logprob: -1.5158811807632446
    3. 'cost' → logprob: -2.640881061553955
    4. 'dist' → logprob: -2.890881061553955
    5. 'curr' → logprob: -3.140881061553955
    6. '   ' → logprob: -5.265881061553955
    7. 'cd' (adapté à ' cd') → logprob: -5.640881061553955
    8. ' d' → logprob: -6.140881061553955
    9. 'current' → logprob: -6.765881061553955
    10. ' cur' → logprob: -7.265881061553955

Token 501: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.05934098735451698
    2. ',' → logprob: -2.9343409538269043
    3. 'istance' → logprob: -5.559340953826904
    4. 'is' → logprob: -8.184341430664062
    5. 'dist' → logprob: -8.809341430664062
    6. 'st' → logprob: -9.809341430664062
    7. '_dist' → logprob: -10.559341430664062
    8. 'cost' → logprob: -10.809341430664062
    9. 't' → logprob: -11.184341430664062
    10. ',d' → logprob: -11.684341430664062

Token 502: ' u' (ID: 337)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.21259060502052307
    2. ' ci' → logprob: -1.7125905752182007
    3. 'u' → logprob: -5.71259069442749
    4. 'idx' → logprob: -5.83759069442749
    5. ' u' → logprob: -5.96259069442749
    6. ' idx' → logprob: -6.83759069442749
    7. 'vi' → logprob: -7.96259069442749
    8. 'ui' → logprob: -8.462590217590332
    9. 'cv' → logprob: -8.837590217590332
    10. 'node' → logprob: -8.962590217590332

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014210639521479607
    2. ' =' → logprob: -4.2642107009887695
    3. '=u' → logprob: -10.13921070098877
    4. ',' → logprob: -12.26421070098877
    5. ',u' → logprob: -14.38921070098877
    6. ')' → logprob: -14.38921070098877
    7. '   ' → logprob: -14.51421070098877
    8. '=user' → logprob: -14.63921070098877
    9. ')=' → logprob: -14.88921070098877
    10. 'u' → logprob: -15.76421070098877

Token 504: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1269361972808838
    2. ' heap' → logprob: -2.126936197280884
    3. 'he' → logprob: -11.876935958862305
    4. ' he' → logprob: -14.001935958862305
    5. '(heap' → logprob: -15.251935958862305
    6. '.heap' → logprob: -16.251935958862305
    7. '_heap' → logprob: -16.876935958862305
    8. 'hq' → logprob: -17.001935958862305
    9. '   ' → logprob: -17.751935958862305
    10. 'h' → logprob: -18.126935958862305

Token 505: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10025595128536224
    2. 'app' → logprob: -2.3502559661865234
    3. 'p' → logprob: -10.475255966186523
    4. '[' → logprob: -11.600255966186523
    5. 'ap' → logprob: -12.725255966186523
    6. 'pp' → logprob: -12.850255966186523
    7. 'pop' → logprob: -13.725255966186523
    8. 'op' → logprob: -13.975255966186523
    9. 'qp' → logprob: -13.975255966186523
    10. '   ' → logprob: -14.225255966186523

Token 506: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.10835649818181992
    2. 'q' → logprob: -2.358356475830078
    3. 'he' → logprob: -5.233356475830078
    4. 'app' → logprob: -6.108356475830078
    5. '[' → logprob: -8.983356475830078
    6. '```' → logprob: -8.983356475830078
    7. ' he' → logprob: -9.358356475830078
    8. '
' → logprob: -9.733356475830078
    9. '.' → logprob: -9.733356475830078
    10. 'op' → logprob: -10.858356475830078

Token 507: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.896309739408025e-07
    2. 'ap' → logprob: -14.500000953674316
    3. 'pp' → logprob: -15.625000953674316
    4. '[' → logprob: -16.875
    5. 'appen' → logprob: -17.875
    6. 'appe' → logprob: -18.0
    7. 'a' → logprob: -18.25
    8. 'q' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '(app' → logprob: -20.125

Token 508: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.07786262780427933
    2. 'ush' → logprob: -2.9528627395629883
    3. 'op' → logprob: -3.9528627395629883
    4. 'pp' → logprob: -6.077862739562988
    5. 'q' → logprob: -7.702862739562988
    6. 'ap' → logprob: -7.952862739562988
    7. 'p' → logprob: -8.327862739562988
    8. 'pop' → logprob: -8.827862739562988
    9. '[' → logprob: -11.327862739562988
    10. 'ep' → logprob: -12.327862739562988

Token 509: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. '(q' → logprob: -15.125000953674316
    3. 'h' → logprob: -16.0
    4. '(' → logprob: -16.25
    5. 'hq' → logprob: -16.25
    6. ',h' → logprob: -16.625
    7. '(
' → logprob: -18.5
    8. '[h' → logprob: -18.875
    9. ' (' → logprob: -18.875
    10. '   ' → logprob: -19.25

Token 510: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.5861724831629544e-05
    2. ')
' → logprob: -10.375056266784668
    3. '_q' → logprob: -12.000056266784668
    4. ')' → logprob: -12.375056266784668
    5. '
' → logprob: -12.750056266784668
    6. 'c' → logprob: -13.125056266784668
    7. 'graph' → logprob: -13.250056266784668
    8. 'Q' → logprob: -13.750056266784668
    9. '       ' → logprob: -14.125056266784668
    10. '[' → logprob: -14.375056266784668

Token 511: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25199005007743835
    2. ')' → logprob: -1.5019900798797607
    3. '       ' → logprob: -9.87699031829834
    4. ')
' → logprob: -12.00199031829834
    5. '   ' → logprob: -13.50199031829834
    6. ')

' → logprob: -14.12699031829834
    7. '):
' → logprob: -14.50199031829834
    8. ' )
' → logprob: -14.62699031829834
    9. ')#' → logprob: -16.126989364624023
    10. '           ' → logprob: -16.376989364624023

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.400689305039123e-05
    2. '<|end|>' → logprob: -9.500094413757324
    3. '
' → logprob: -11.875094413757324
    4. '        
' → logprob: -12.250094413757324
    5. ' if' → logprob: -12.750094413757324
    6. 'if' → logprob: -13.125094413757324
    7. '           ' → logprob: -14.625094413757324
    8. ',' → logprob: -14.625094413757324
    9. '   ' → logprob: -14.625094413757324
    10. '<|end|>' → logprob: -15.000094413757324

Token 513: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05178895220160484
    2. ' if' → logprob: -3.3017890453338623
    3. 'if' (adapté à ' if') → logprob: -4.301788806915283
    4. '
' → logprob: -9.426789283752441
    5. '        
' → logprob: -11.051789283752441
    6. '   ' → logprob: -12.676789283752441
    7. ' 
' → logprob: -12.801789283752441
    8. '        ' → logprob: -13.551789283752441
    9. '           ' → logprob: -13.551789283752441
    10. '	if' → logprob: -13.801789283752441

Token 514: ' dist' (ID: 3601)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014943250454962254
    2. 'cd' → logprob: -4.7649431228637695
    3. 'dist' → logprob: -5.1399431228637695
    4. ' u' → logprob: -8.01494312286377
    5. ' cd' → logprob: -9.26494312286377
    6. ' dist' → logprob: -11.38994312286377
    7. 'd' → logprob: -12.01494312286377
    8. '(cd' → logprob: -13.13994312286377
    9. '   ' → logprob: -14.01494312286377
    10. 'CD' → logprob: -14.26494312286377

Token 515: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.676981345459353e-06
    2. '[u' → logprob: -12.375005722045898
    3. 'arr' → logprob: -14.625005722045898
    4. '(u' → logprob: -15.625005722045898
    5. 'Arr' → logprob: -16.3750057220459
    6. '_' → logprob: -16.3750057220459
    7. 'u' → logprob: -16.5000057220459
    8. '_array' → logprob: -16.7500057220459
    9. '	arr' → logprob: -16.8750057220459
    10. 's' → logprob: -17.0000057220459

Token 516: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. 'u' → logprob: -17.375
    3. '[' → logprob: -18.25
    4. '<u' → logprob: -19.25
    5. '```' → logprob: -19.375
    6. ' [' → logprob: -20.5
    7. '[c' → logprob: -21.0
    8. '
' → logprob: -21.5
    9. '	u' → logprob: -22.0
    10. ' u' → logprob: -22.125

Token 517: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03129282966256142
    2. ' <' → logprob: -3.6562929153442383
    3. '<u' → logprob: -5.656292915344238
    4. '<int' → logprob: -7.406292915344238
    5. '<data' → logprob: -8.406292915344238
    6. '<v' → logprob: -9.281292915344238
    7. '<float' → logprob: -9.531292915344238
    8. '<c' → logprob: -9.656292915344238
    9. '<ll' → logprob: -10.031292915344238
    10. '<string' → logprob: -10.031292915344238

Token 518: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.000556012790184468
    2. ' cd' → logprob: -7.500555992126465
    3. '	cd' → logprob: -12.875555992126465
    4. '_cd' → logprob: -14.750555992126465
    5. '(cd' → logprob: -16.87555694580078
    6. ' ' → logprob: -17.62555694580078
    7. '   ' → logprob: -17.75055694580078
    8. 'cdn' → logprob: -18.00055694580078
    9. '.cd' → logprob: -18.75055694580078
    10. 'c' → logprob: -19.37555694580078

Token 519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16035450994968414
    2. ':
' → logprob: -1.910354495048523
    3. 'continue' → logprob: -9.410354614257812
    4. ' continue' → logprob: -11.535354614257812
    5. '       ' → logprob: -11.660354614257812
    6. '):
' → logprob: -11.785354614257812
    7. '):' → logprob: -12.160354614257812
    8. ':return' → logprob: -12.160354614257812
    9. '	continue' → logprob: -12.910354614257812
    10. ':
' → logprob: -13.035354614257812

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010391960851848125
    2. ' continue' → logprob: -4.760392189025879
    3. 'continue' → logprob: -6.385392189025879
    4. '       ' → logprob: -9.510392189025879
    5. '	continue' → logprob: -12.260392189025879
    6. '_continue' → logprob: -12.760392189025879
    7. ':' → logprob: -13.135392189025879
    8. '		' → logprob: -13.260392189025879
    9. ' continues' → logprob: -13.635392189025879
    10. '   ' → logprob: -14.385392189025879

Token 521: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3613324761390686
    2. '           ' → logprob: -1.3613324165344238
    3. ' continue' → logprob: -3.111332416534424
    4. '       ' → logprob: -6.236332416534424
    5. '	continue' → logprob: -8.236332893371582
    6. '               ' → logprob: -9.486332893371582
    7. '_continue' → logprob: -9.861332893371582
    8. '		' → logprob: -10.486332893371582
    9. 'contin' → logprob: -12.361332893371582
    10. '	       ' → logprob: -12.861332893371582

Token 522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.670925358776003e-05
    2. '<|end|>' → logprob: -9.750066757202148
    3. '
' → logprob: -12.500066757202148
    4. ' if' → logprob: -13.000066757202148
    5. 'if' → logprob: -14.375066757202148
    6. ',' → logprob: -14.625066757202148
    7. '        
' → logprob: -15.000066757202148
    8. ')' → logprob: -15.500066757202148
    9. '           ' → logprob: -15.875066757202148
    10. '	' → logprob: -15.875066757202148

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012624947121366858
    2. ' if' → logprob: -7.376262664794922
    3. 'if' → logprob: -7.376262664794922
    4. '   ' → logprob: -12.501262664794922
    5. '
' → logprob: -13.001262664794922
    6. '<|end|>' → logprob: -14.251262664794922
    7. '      ' → logprob: -14.501262664794922
    8. 'for' → logprob: -14.501262664794922
    9. '           ' → logprob: -14.751262664794922
    10. ' for' → logprob: -14.751262664794922

Token 524: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0805167406797409
    2. 'if' (adapté à ' if') → logprob: -2.580516815185547
    3. ' if' → logprob: -6.455516815185547
    4. 'for' → logprob: -10.455516815185547
    5. '   ' → logprob: -10.705516815185547
    6. ' for' → logprob: -14.080516815185547
    7. '	if' → logprob: -14.455516815185547
    8. '           ' → logprob: -14.580516815185547
    9. '	' → logprob: -14.830516815185547
    10. '      ' → logprob: -16.330516815185547

Token 525: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02324547804892063
    2. ' u' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.398244857788086
    4. '
' → logprob: -18.398244857788086
    5. '	u' → logprob: -18.398244857788086
    6. '[u' → logprob: -18.773244857788086
    7. '(u' → logprob: -19.773244857788086
    8. ' ' → logprob: -20.023244857788086
    9. '    ' → logprob: -20.773244857788086
    10. ' ' → logprob: -20.898244857788086

Token 526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014170088805258274
    2. 'in' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.014169692993164
    4. ')' → logprob: -15.764169692993164
    5. ' i' → logprob: -16.014169692993164
    6. ' ' → logprob: -16.139169692993164
    7. 'In' → logprob: -16.764169692993164
    8. 'n' → logprob: -17.139169692993164
    9. '	in' → logprob: -17.264169692993164
    10. '   ' → logprob: -17.514169692993164

Token 527: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.023245712742209435
    2. ' goal' → logprob: -3.7732458114624023
    3. '(goal' → logprob: -15.398245811462402
    4. '.goal' → logprob: -18.523244857788086
    5. '   ' → logprob: -18.648244857788086
    6. 'go' → logprob: -18.773244857788086
    7. '_goal' → logprob: -19.148244857788086
    8. ' ' → logprob: -20.023244857788086
    9. 'Goal' → logprob: -20.523244857788086
    10. '  ' → logprob: -21.398244857788086

Token 528: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -1.2352385965641588e-05
    2. '_indices' → logprob: -11.375012397766113
    3. 'indices' → logprob: -14.625012397766113
    4. 'set' → logprob: -15.375012397766113
    5. '_' → logprob: -16.500011444091797
    6. '_sets' → logprob: -16.750011444091797
    7. '   ' → logprob: -17.000011444091797
    8. 'Set' → logprob: -17.375011444091797
    9. 's' → logprob: -17.500011444091797
    10. '_SET' → logprob: -17.875011444091797

Token 529: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3906075060367584
    2. ':' → logprob: -1.140607476234436
    3. '       ' → logprob: -5.8906073570251465
    4. '           ' → logprob: -7.7656073570251465
    5. '):
' → logprob: -8.390607833862305
    6. ':return' → logprob: -9.140607833862305
    7. ' :
' → logprob: -9.140607833862305
    8. '   ' → logprob: -10.515607833862305
    9. ':

' → logprob: -11.265607833862305
    10. ' :' → logprob: -11.265607833862305

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010926496179308742
    2. 'return' → logprob: -9.500109672546387
    3. ' return' → logprob: -10.500109672546387
    4. '               ' → logprob: -12.625109672546387
    5. '       ' → logprob: -12.750109672546387
    6. '		' → logprob: -15.250109672546387
    7. '
' → logprob: -15.500109672546387
    8. '          ' → logprob: -16.75010871887207
    9. '```' → logprob: -16.87510871887207
    10. '	       ' → logprob: -17.00010871887207

Token 531: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.042034510523080826
    2. '           ' → logprob: -3.29203462600708
    3. ' return' → logprob: -5.79203462600708
    4. '       ' → logprob: -7.16703462600708
    5. '
' → logprob: -8.917034149169922
    6. '{return' → logprob: -11.292034149169922
    7. '	return' → logprob: -12.542034149169922
    8. '               ' → logprob: -12.542034149169922
    9. 'print' → logprob: -12.667034149169922
    10. '   ' → logprob: -13.042034149169922

Token 532: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002774246677290648
    2. ' cd' → logprob: -8.250277519226074
    3. 'dist' → logprob: -11.250277519226074
    4. '(cd' → logprob: -13.000277519226074
    5. '	cd' → logprob: -14.500277519226074
    6. ' dist' → logprob: -15.625277519226074
    7. 'cdn' → logprob: -16.375276565551758
    8. '_cd' → logprob: -17.000276565551758
    9. '   ' → logprob: -17.750276565551758
    10. '.cd' → logprob: -18.750276565551758

Token 533: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.138441237155348e-05
    2. '
' → logprob: -10.000091552734375
    3. '        
' → logprob: -10.250091552734375
    4. '<|end|>' → logprob: -12.125091552734375
    5. ',' → logprob: -13.125091552734375
    6. ' for' → logprob: -13.500091552734375
    7. '   ' → logprob: -14.375091552734375
    8. 'for' → logprob: -15.625091552734375
    9. '            
' → logprob: -15.875091552734375
    10. '           ' → logprob: -15.875091552734375

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.825890159234405e-05
    2. 'for' → logprob: -10.625068664550781
    3. '   ' → logprob: -10.875068664550781
    4. '        
' → logprob: -11.625068664550781
    5. '
' → logprob: -11.750068664550781
    6. ' for' → logprob: -12.000068664550781
    7. '           ' → logprob: -14.625068664550781
    8. '<|end|>' → logprob: -14.750068664550781
    9. '     ' → logprob: -15.625068664550781
    10. ',' → logprob: -15.625068664550781

Token 535: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004123399965465069
    2. '       ' → logprob: -5.754123210906982
    3. ' for' → logprob: -7.004123210906982
    4. '   ' → logprob: -10.25412368774414
    5. '	for' → logprob: -14.00412368774414
    6. '```' → logprob: -14.75412368774414
    7. '        
' → logprob: -14.87912368774414
    8. '
' → logprob: -15.62912368774414
    9. '           ' → logprob: -17.12912368774414
    10. '    
' → logprob: -18.25412368774414

Token 536: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31336942315101624
    2. '(v' → logprob: -1.3133693933486938
    3. ' v' → logprob: -9.188369750976562
    4. ' (' → logprob: -13.063369750976562
    5. '(' → logprob: -13.688369750976562
    6. 'w' → logprob: -15.063369750976562
    7. '[v' → logprob: -15.188369750976562
    8. 'to' → logprob: -15.188369750976562
    9. '   ' → logprob: -15.438369750976562
    10. ',v' → logprob: -15.438369750976562

Token 537: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029078235384076834
    2. ',d' → logprob: -6.002907752990723
    3. ',v' → logprob: -8.252907752990723
    4. ',w' → logprob: -9.127907752990723
    5. ' ,' → logprob: -9.877907752990723
    6. ',c' → logprob: -11.502907752990723
    7. '_,' → logprob: -14.377907752990723
    8. ',
' → logprob: -15.127907752990723
    9. ',val' → logprob: -15.502907752990723
    10. ',value' → logprob: -15.752907752990723

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0171769130975008
    2. 'in' → logprob: -4.142177104949951
    3. ',' → logprob: -7.517177104949951
    4. ')' → logprob: -7.517177104949951
    5. ' ' → logprob: -11.392176628112793
    6. ',v' → logprob: -11.767176628112793
    7. ' ,' → logprob: -12.017176628112793
    8. ' )' → logprob: -12.017176628112793
    9. '<|end|>' → logprob: -12.017176628112793
    10. '),' → logprob: -12.267176628112793

Token 539: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00020354038861114532
    2. ' graph' → logprob: -8.500203132629395
    3. '(graph' → logprob: -17.87520408630371
    4. '	graph' → logprob: -17.87520408630371
    5. ' ' → logprob: -20.25020408630371
    6. 'graphql' → logprob: -20.62520408630371
    7. 'raph' → logprob: -20.75020408630371
    8. '   ' → logprob: -21.12520408630371
    9. '_graph' → logprob: -21.37520408630371
    10. 'Graph' → logprob: -21.37520408630371

Token 540: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[' → logprob: -17.75
    3. 'u' → logprob: -18.0
    4. '(u' → logprob: -19.625
    5. '   ' → logprob: -20.0
    6. ' [' → logprob: -20.875
    7. '[v' → logprob: -21.0
    8. '
' → logprob: -21.25
    9. ',u' → logprob: -21.375
    10. '[q' → logprob: -21.5

Token 541: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.593733012676239
    2. ']:' → logprob: -1.0937330722808838
    3. ',' → logprob: -2.718733072280884
    4. '):
' → logprob: -4.343732833862305
    5. ':' → logprob: -4.468732833862305
    6. ',w' → logprob: -4.843732833862305
    7. '):' → logprob: -5.593732833862305
    8. '   ' → logprob: -5.593732833862305
    9. ':
' → logprob: -6.218732833862305
    10. '       ' → logprob: -6.718732833862305

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025084958178922534
    2. '	       ' → logprob: -9.875250816345215
    3. ' if' → logprob: -10.000250816345215
    4. '       ' → logprob: -10.000250816345215
    5. ',' → logprob: -10.375250816345215
    6. ':' → logprob: -10.875250816345215
    7. '   ' → logprob: -11.250250816345215
    8. '               ' → logprob: -11.375250816345215
    9. ':
' → logprob: -11.750250816345215
    10. '            
' → logprob: -11.875250816345215

Token 543: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.026279976591467857
    2. 'nd' (adapté à ' nd') → logprob: -3.901279926300049
    3. '           ' → logprob: -5.776279926300049
    4. ' if' → logprob: -7.026279926300049
    5. 'new' → logprob: -7.151279926300049
    6. 'if' → logprob: -7.526279926300049
    7. ' new' → logprob: -8.026280403137207
    8. 'alt' → logprob: -10.901280403137207
    9. '   ' → logprob: -11.026280403137207
    10. '(nd' → logprob: -11.026280403137207

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10177107900381088
    2. '=' → logprob: -2.351771116256714
    3. 'ist' → logprob: -6.476770877838135
    4. 'istance' → logprob: -10.851771354675293
    5. '   ' → logprob: -13.601771354675293
    6. '=d' → logprob: -13.851771354675293
    7. '_dist' → logprob: -14.351771354675293
    8. 'st' → logprob: -14.476771354675293
    9. ' ' → logprob: -14.851771354675293
    10. 'is' → logprob: -15.226771354675293

Token 545: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0019289902411401272
    2. ' cd' → logprob: -6.251928806304932
    3. '	cd' → logprob: -15.12692928314209
    4. '   ' → logprob: -17.001928329467773
    5. '(cd' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.751928329467773
    7. '_cd' → logprob: -18.126928329467773
    8. 'cdn' → logprob: -19.251928329467773
    9. '.cd' → logprob: -19.751928329467773
    10. '  ' → logprob: -19.876928329467773

Token 546: '+w' (ID: 155687)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40271899104118347
    2. '+' → logprob: -1.1527190208435059
    3. '+w' → logprob: -4.152719020843506
    4. ' ' → logprob: -14.027718544006348
    5. '+
' → logprob: -15.402718544006348
    6. ' +
' → logprob: -15.902718544006348
    7. '＋' → logprob: -16.152719497680664
    8. ' ' → logprob: -16.527719497680664
    9. '   ' → logprob: -17.277719497680664
    10. '+n' → logprob: -17.652719497680664

Token 547: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10144907981157303
    2. '
' → logprob: -3.1014490127563477
    3. '<|end|>' → logprob: -3.3514490127563477
    4. '       ' → logprob: -5.226449012756348
    5. '               ' → logprob: -5.976449012756348
    6. '<|end|>' → logprob: -6.226449012756348
    7. ' 
' → logprob: -6.726449012756348
    8. '          ' → logprob: -6.851449012756348
    9. ' if' → logprob: -6.976449012756348
    10. '   ' → logprob: -7.476449012756348

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8802491215174086e-05
    2. '<|end|>' → logprob: -11.375028610229492
    3. '		' → logprob: -12.875028610229492
    4. '               ' → logprob: -12.875028610229492
    5. '          ' → logprob: -12.875028610229492
    6. '
' → logprob: -13.125028610229492
    7. ' if' → logprob: -13.375028610229492
    8. '       ' → logprob: -13.625028610229492
    9. '	       ' → logprob: -13.750028610229492
    10. '            
' → logprob: -13.875028610229492

Token 549: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43384477496147156
    2. ' if' → logprob: -1.058844804763794
    3. 'if' (adapté à ' if') → logprob: -5.308844566345215
    4. '<|end|>' → logprob: -9.433844566345215
    5. '               ' → logprob: -11.183844566345215
    6. '	if' → logprob: -11.183844566345215
    7. '	       ' → logprob: -11.308844566345215
    8. ' ' → logprob: -11.683844566345215
    9. '		' → logprob: -11.808844566345215
    10. '          ' → logprob: -11.808844566345215

Token 550: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.17116211354732513
    2. 'nd' → logprob: -1.9211621284484863
    3. ' dist' → logprob: -4.546162128448486
    4. 'dist' → logprob: -8.296161651611328
    5. '(nd' → logprob: -11.171161651611328
    6. '   ' → logprob: -13.546161651611328
    7. '	dist' → logprob: -13.671161651611328
    8. 'ndl' → logprob: -14.046161651611328
    9. '_nd' → logprob: -14.421161651611328
    10. ' ' → logprob: -14.671161651611328

Token 551: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4741116166114807
    2. '<' → logprob: -0.9741116166114807
    3. '[' → logprob: -11.599111557006836
    4. '<n' → logprob: -11.849111557006836
    5. '<|end|>' → logprob: -12.724111557006836
    6. '<th' → logprob: -13.349111557006836
    7. '<std' → logprob: -13.474111557006836
    8. '<v' → logprob: -13.474111557006836
    9. ' ' → logprob: -13.724111557006836
    10. ' ' → logprob: -13.974111557006836

Token 552: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019288709154352546
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -16.126928329467773
    4. '(dist' → logprob: -17.376928329467773
    5. '   ' → logprob: -17.626928329467773
    6. '_dist' → logprob: -17.876928329467773
    7. '
' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.251928329467773
    9. 'distance' → logprob: -19.751928329467773
    10. 'Dist' → logprob: -19.876928329467773

Token 553: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.128163257315464e-07
    2. '_dist' → logprob: -15.5
    3. 'arr' → logprob: -18.0
    4. 'Arr' → logprob: -19.75
    5. '	arr' → logprob: -20.125
    6. '_' → logprob: -20.75
    7. 'ance' → logprob: -21.5
    8. '
' → logprob: -21.625
    9. '[arr' → logprob: -21.75
    10. '_array' → logprob: -21.875

Token 554: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -17.0
    3. '[' → logprob: -17.25
    4. '[u' → logprob: -18.25
    5. ' [' → logprob: -18.75
    6. '<v' → logprob: -20.125
    7. '(v' → logprob: -20.5
    8. '```' → logprob: -20.75
    9. '   ' → logprob: -21.0
    10. '[V' → logprob: -21.0

Token 555: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6681925654411316
    2. ']:' → logprob: -0.9181925654411316
    3. ']:
' → logprob: -3.2931926250457764
    4. ':
' → logprob: -3.5431926250457764
    5. ']' → logprob: -4.293192386627197
    6. '):' → logprob: -5.168192386627197
    7. '):
' → logprob: -6.293192386627197
    8. '[' → logprob: -8.168192863464355
    9. '           ' → logprob: -9.168192863464355
    10. '               ' → logprob: -9.168192863464355

Token 556: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002593130338937044
    2. ':
' → logprob: -8.625259399414062
    3. ':' → logprob: -10.125259399414062
    4. '):
' → logprob: -11.750259399414062
    5. '                   ' → logprob: -12.125259399414062
    6. '           ' → logprob: -12.375259399414062
    7. 'dist' → logprob: -12.500259399414062
    8. ' dist' → logprob: -12.625259399414062
    9. ' :
' → logprob: -13.250259399414062
    10. '[' → logprob: -13.375259399414062

Token 557: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011170309036970139
    2. 'dist' (adapté à ' dist') → logprob: -4.511170387268066
    3. '               ' → logprob: -9.386170387268066
    4. '                   ' → logprob: -10.511170387268066
    5. '	dist' → logprob: -11.886170387268066
    6. '                ' → logprob: -13.261170387268066
    7. '_dist' → logprob: -13.636170387268066
    8. '(dist' → logprob: -14.261170387268066
    9. '   ' → logprob: -15.511170387268066
    10. '```' → logprob: -15.761170387268066

Token 558: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.128163257315464e-07
    2. 'arr' → logprob: -16.25
    3. '_dist' → logprob: -16.75
    4. '	arr' → logprob: -17.625
    5. '[arr' → logprob: -18.625
    6. '(arr' → logprob: -18.75
    7. 'Arr' → logprob: -18.75
    8. '_vec' → logprob: -20.0
    9. '_ar' → logprob: -20.0
    10. '
' → logprob: -20.125

Token 559: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -16.875
    3. '[u' → logprob: -20.125
    4. '<v' → logprob: -20.5
    5. '[' → logprob: -21.125
    6. '=v' → logprob: -21.25
    7. '[val' → logprob: -21.75
    8. '```' → logprob: -22.625
    9. '	v' → logprob: -22.875
    10. ' [' → logprob: -22.875

Token 560: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9276235699653625
    2. ']' → logprob: -1.1776235103607178
    3. '[v' → logprob: -2.0526235103607178
    4. ']=' → logprob: -2.4276235103607178
    5. ' =' → logprob: -2.6776235103607178
    6. '=v' → logprob: -4.552623748779297
    7. ')' → logprob: -8.802623748779297
    8. '<v' → logprob: -9.302623748779297
    9. ')=' → logprob: -9.552623748779297
    10. '[' → logprob: -9.802623748779297

Token 561: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.008614926598966122
    2. ' nd' → logprob: -4.758615016937256
    3. '(nd' → logprob: -15.383614540100098
    4. '_nd' → logprob: -17.383615493774414
    5. 'ndl' → logprob: -17.633615493774414
    6. 'ng' → logprob: -17.758615493774414
    7. ' ' → logprob: -18.008615493774414
    8. '
' → logprob: -18.258615493774414
    9. '   ' → logprob: -18.508615493774414
    10. ' ' → logprob: -18.883615493774414

Token 562: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003044802288059145
    2. ',' → logprob: -8.500304222106934
    3. 'heap' → logprob: -10.000304222106934
    4. ' heap' → logprob: -10.750304222106934
    5. ',
' → logprob: -11.750304222106934
    6. '(heap' → logprob: -11.750304222106934
    7. '<|end|>' → logprob: -12.125304222106934
    8. '              ' → logprob: -12.375304222106934
    9. '           ' → logprob: -13.125304222106934
    10. '
' → logprob: -13.875304222106934

Token 563: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025752498186193407
    2. 'heap' → logprob: -8.50025749206543
    3. ' heap' → logprob: -9.87525749206543
    4. '(heap' → logprob: -13.87525749206543
    5. '              ' → logprob: -14.12525749206543
    6. '			' → logprob: -15.00025749206543
    7. 'import' → logprob: -15.75025749206543
    8. ',' → logprob: -16.12525749206543
    9. '           ' → logprob: -16.12525749206543
    10. '```' → logprob: -16.37525749206543

Token 564: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.676292231422849e-05
    2. ' heap' → logprob: -11.000017166137695
    3. '               ' → logprob: -19.500017166137695
    4. 'he' → logprob: -22.125017166137695
    5. 'heat' → logprob: -23.250017166137695
    6. '                   ' → logprob: -24.250017166137695
    7. '```' → logprob: -24.500017166137695
    8. '.heap' → logprob: -24.875017166137695
    9. 'Heap' → logprob: -25.000017166137695
    10. '(heap' → logprob: -25.000017166137695

Token 565: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'push' → logprob: -17.5
    3. '```' → logprob: -17.625
    4. 'p' → logprob: -18.625
    5. '.push' → logprob: -19.0
    6. '.he' → logprob: -19.0
    7. '[' → logprob: -19.25
    8. 'he' → logprob: -19.5
    9. 'h' → logprob: -20.0
    10. 'queue' → logprob: -20.125

Token 566: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.5826651453971863
    2. 'q' → logprob: -0.8326651453971863
    3. 'he' → logprob: -5.707664966583252
    4. 'push' → logprob: -6.207664966583252
    5. 'ush' → logprob: -7.082664966583252
    6. 'p' → logprob: -7.957664966583252
    7. 'app' → logprob: -9.83266544342041
    8. '.push' → logprob: -9.95766544342041
    9. ' he' → logprob: -11.08266544342041
    10. '```' → logprob: -11.33266544342041

Token 567: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.1093578804284334e-05
    2. 'push' → logprob: -10.500051498413086
    3. 'ap' → logprob: -11.375051498413086
    4. 'pp' → logprob: -11.500051498413086
    5. 'ush' → logprob: -13.375051498413086
    6. 'p' → logprob: -15.750051498413086
    7. '[' → logprob: -17.625051498413086
    8. 'q' → logprob: -17.875051498413086
    9. 'he' → logprob: -17.875051498413086
    10. 'a' → logprob: -18.250051498413086

Token 568: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.011809751391410828
    2. 'app' → logprob: -4.761809825897217
    3. 'push' → logprob: -5.761809825897217
    4. 'pp' → logprob: -10.511809349060059
    5. 'p' → logprob: -11.386809349060059
    6. 'q' → logprob: -13.136809349060059
    7. '.push' → logprob: -13.886809349060059
    8. 'sh' → logprob: -14.261809349060059
    9. 'ap' → logprob: -14.511809349060059
    10. 'u' → logprob: -14.636809349060059

Token 569: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(q' → logprob: -17.0
    4. '(
' → logprob: -18.625
    5. ' (' → logprob: -19.25
    6. ',h' → logprob: -19.75
    7. '(heap' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '	h' → logprob: -20.375
    10. '(graph' → logprob: -20.875

Token 570: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.0259150157216936e-05
    2. '(h' → logprob: -10.25005054473877
    3. '(q' → logprob: -11.25005054473877
    4. 'graph' → logprob: -14.00005054473877
    5. '(graph' → logprob: -14.87505054473877
    6. '[q' → logprob: -16.250049591064453
    7. 'h' → logprob: -16.500049591064453
    8. '[h' → logprob: -16.750049591064453
    9. 'qh' → logprob: -16.750049591064453
    10. '	q' → logprob: -16.750049591064453

Token 571: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.010836162604391575
    2. ',' → logprob: -5.135836124420166
    3. ',(' → logprob: -5.635836124420166
    4. ',h' → logprob: -6.635836124420166
    5. '(q' → logprob: -12.010836601257324
    6. ' (' → logprob: -12.385836601257324
    7. ')(' → logprob: -13.635836601257324
    8. '(' → logprob: -13.885836601257324
    9. ',q' → logprob: -14.010836601257324
    10. ' ,' → logprob: -14.260836601257324

Token 572: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -3.8889261304575484e-06
    2. ' nd' → logprob: -12.500003814697266
    3. '(nd' → logprob: -17.125003814697266
    4. '_nd' → logprob: -20.625003814697266
    5. '   ' → logprob: -21.125003814697266
    6. '
' → logprob: -21.250003814697266
    7. 'ndl' → logprob: -21.375003814697266
    8. 'nds' → logprob: -21.750003814697266
    9. 'ndo' → logprob: -22.625003814697266
    10. 'nt' → logprob: -22.750003814697266

Token 573: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.008615754544734955
    2. ',' → logprob: -4.758615970611572
    3. ' ,' → logprob: -14.633615493774414
    4. 'v' → logprob: -14.633615493774414
    5. ',
' → logprob: -15.758615493774414
    6. ',w' → logprob: -16.008615493774414
    7. ')v' → logprob: -18.133615493774414
    8. ',u' → logprob: -18.258615493774414
    9. '<|end|>' → logprob: -18.383615493774414
    10. '[v' → logprob: -18.383615493774414

Token 574: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00674142362549901
    2. ')' → logprob: -5.006741523742676
    3. '))
' → logprob: -11.256741523742676
    4. ')))' → logprob: -11.381741523742676
    5. ' ))' → logprob: -14.631741523742676
    6. '));' → logprob: -15.381741523742676
    7. ')v' → logprob: -15.506741523742676
    8. ',' → logprob: -15.756741523742676
    9. ')
' → logprob: -16.00674057006836
    10. '),' → logprob: -16.13174057006836

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1162048950791359
    2. 'return' → logprob: -2.3662049770355225
    3. '
' → logprob: -4.366204738616943
    4. ' return' → logprob: -6.241204738616943
    5. '```' → logprob: -7.741204738616943
    6. 'def' → logprob: -8.116205215454102
    7. '<|end|>' → logprob: -8.741205215454102
    8. '    
' → logprob: -9.241205215454102
    9. '	return' → logprob: -9.741205215454102
    10. ')' → logprob: -9.991205215454102

Token 576: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0024832691997289658
    2. '
' → logprob: -7.002483367919922
    3. ' return' → logprob: -7.002483367919922
    4. '   ' → logprob: -7.752483367919922
    5. 'None' → logprob: -8.627483367919922
    6. '```' → logprob: -10.127483367919922
    7. '    
' → logprob: -12.002483367919922
    8. '	return' → logprob: -13.002483367919922
    9. ':return' → logprob: -14.127483367919922
    10. '@return' → logprob: -15.127483367919922

Token 577: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00944285187870264
    2. 'None' → logprob: -5.2594428062438965
    3. ' math' → logprob: -5.5094428062438965
    4. ' None' → logprob: -9.384443283081055
    5. 'float' → logprob: -9.759443283081055
    6. '-' → logprob: -11.884443283081055
    7. ' -' → logprob: -13.134443283081055
    8. '-m' → logprob: -14.509443283081055
    9. 'Math' → logprob: -15.884443283081055
    10. '(math' → logprob: -16.009443283081055

Token 578: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -8.537868779967539e-06
    2. '.infinity' → logprob: -12.000008583068848
    3. 'inf' → logprob: -13.375008583068848
    4. '.h' → logprob: -14.875008583068848
    5. '.' → logprob: -15.625008583068848
    6. '```' → logprob: -16.50000762939453
    7. '
' → logprob: -16.87500762939453
    8. '.nan' → logprob: -17.50000762939453
    9. '.in' → logprob: -18.25000762939453
    10. ' inf' → logprob: -18.62500762939453

Token 579: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2885095179080963
    2. '<|end|>' → logprob: -1.413509488105774
    3. '
' → logprob: -5.038509368896484
    4. '<|end|>' → logprob: -7.538509368896484
    5. '#' → logprob: -9.038509368896484
    6. '```' → logprob: -9.038509368896484
    7. '

' → logprob: -10.538509368896484
    8. 'import' → logprob: -11.288509368896484
    9. '\' → logprob: -11.663509368896484
    10. '\n' → logprob: -11.788509368896484

Token 580: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005433809128589928
    2. 'import' → logprob: -8.250543594360352
    3. 'if' → logprob: -9.125543594360352
    4. '```' → logprob: -9.625543594360352
    5. '<|end|>' → logprob: -10.000543594360352
    6. '#' → logprob: -10.250543594360352
    7. 'n' → logprob: -11.500543594360352
    8. '
' → logprob: -11.750543594360352
    9. 'mon' → logprob: -13.125543594360352
    10. '<|end|>' → logprob: -13.625543594360352

Token 581: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038854580372571945
    2. 'solve' → logprob: -3.5388545989990234
    3. ' main' → logprob: -5.163854598999023
    4. 'find' → logprob: -5.913854598999023
    5. 'short' → logprob: -8.163854598999023
    6. ' solve' → logprob: -9.413854598999023
    7. 'path' → logprob: -9.413854598999023
    8. 'can' → logprob: -9.788854598999023
    9. ' find' → logprob: -10.288854598999023
    10. 'minimum' → logprob: -10.913854598999023

Token 582: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0445127372804563e-05
    2. '():
' → logprob: -11.87501049041748
    3. ' ():' → logprob: -12.62501049041748
    4. '()' → logprob: -15.87501049041748
    5. '(' → logprob: -17.375009536743164
    6. '():
' → logprob: -17.750009536743164
    7. '():

' → logprob: -18.625009536743164
    8. '().' → logprob: -20.250009536743164
    9. '()>' → logprob: -21.000009536743164
    10. '(":' → logprob: -21.750009536743164

Token 583: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6640393733978271
    2. '   ' → logprob: -1.2890393733978271
    3. 'import' → logprob: -1.6640393733978271
    4. 'mon' → logprob: -4.414039611816406
    5. ' monsters' → logprob: -5.664039611816406
    6. 'n' → logprob: -6.414039611816406
    7. ' n' → logprob: -6.414039611816406
    8. ' input' → logprob: -7.039039611816406
    9. ' monst' → logprob: -9.164039611816406
    10. 'input' → logprob: -9.289039611816406

Token 584: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3145498037338257
    2. ' n' → logprob: -2.3145499229431152
    3. ' input' → logprob: -2.8145499229431152
    4. '   ' → logprob: -3.0645499229431152
    5. 'input' (adapté à ' input') → logprob: -3.5645499229431152
    6. 'import' → logprob: -3.8145499229431152
    7. ' import' → logprob: -4.939549922943115
    8. 'mon' → logprob: -5.564549922943115
    9. 'num' → logprob: -6.689549922943115
    10. 't' → logprob: -7.314549922943115

Token 585: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4138372242450714
    2. '_line' → logprob: -1.663837194442749
    3. '_data' → logprob: -2.038837194442749
    4. '_lines' → logprob: -4.288837432861328
    5. '=' → logprob: -6.538837432861328
    6. ' =' → logprob: -6.663837432861328
    7. 'data' → logprob: -7.163837432861328
    8. '_' → logprob: -7.663837432861328
    9. '_str' → logprob: -7.788837432861328
    10. 'line' → logprob: -8.038837432861328

Token 586: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.028237322345376015
    2. '.readline' → logprob: -4.153237342834473
    3. '().' → logprob: -4.528237342834473
    4. '.' → logprob: -7.278237342834473
    5. '()' → logprob: -8.653237342834473
    6. '(stdin' → logprob: -8.778237342834473
    7. 'stdin' → logprob: -9.153237342834473
    8. '.stdout' → logprob: -9.403237342834473
    9. '.argv' → logprob: -9.778237342834473
    10. '()
' → logprob: -10.653237342834473

Token 587: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011013631708920002
    2. '.stdin' → logprob: -5.386013507843018
    3. '().' → logprob: -5.511013507843018
    4. '()
' → logprob: -7.511013507843018
    5. 'read' → logprob: -7.511013507843018
    6. ' readline' → logprob: -8.261013984680176
    7. '()' → logprob: -8.636013984680176
    8. '.read' → logprob: -8.761013984680176
    9. '(stdin' → logprob: -9.011013984680176
    10. 'stdin' → logprob: -9.136013984680176

Token 588: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06253547221422195
    2. '()' → logprob: -3.437535524368286
    3. '()
' → logprob: -3.562535524368286
    4. 'line' → logprob: -10.437535285949707
    5. '   ' → logprob: -10.562535285949707
    6. '
' → logprob: -10.687535285949707
    7. '()
' → logprob: -11.687535285949707
    8. 'strip' → logprob: -12.187535285949707
    9. ' line' → logprob: -12.562535285949707
    10. 'def' → logprob: -12.937535285949707

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003967266529798508
    2. 'n' → logprob: -5.62896728515625
    3. ' n' → logprob: -8.50396728515625
    4. 't' → logprob: -9.75396728515625
    5. '()' → logprob: -10.25396728515625
    6. '(n' → logprob: -10.62896728515625
    7. 'm' → logprob: -11.50396728515625
    8. 'num' → logprob: -12.12896728515625
    9. '	n' → logprob: -12.12896728515625
    10. '
' → logprob: -12.37896728515625

Token 590: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10125809907913208
    2. '   ' → logprob: -2.7262580394744873
    3. 'N' → logprob: -4.476258277893066
    4. 'm' → logprob: -5.226258277893066
    5. 't' → logprob: -5.351258277893066
    6. 'M' → logprob: -5.726258277893066
    7. 'T' → logprob: -6.226258277893066
    8. 'num' → logprob: -6.351258277893066
    9. 'mon' → logprob: -6.601258277893066
    10. 'nm' → logprob: -7.476258277893066

Token 591: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16047941148281097
    2. 'True' → logprob: -1.9104794263839722
    3. '(True' → logprob: -8.285479545593262
    4. '1' → logprob: -13.535479545593262
    5. '=True' → logprob: -13.660479545593262
    6. '   ' → logprob: -16.035478591918945
    7. ' ' → logprob: -16.285478591918945
    8. '_true' → logprob: -16.785478591918945
    9. ' line' → logprob: -16.785478591918945
    10. '
' → logprob: -17.410478591918945

Token 592: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2973879873752594
    2. '():' → logprob: -2.2973880767822266
    3. '       ' → logprob: -2.5473880767822266
    4. '   ' → logprob: -3.0473880767822266
    5. ':
' → logprob: -4.422388076782227
    6. '():
' → logprob: -4.922388076782227
    7. '(line' → logprob: -5.547388076782227
    8. ',' → logprob: -5.922388076782227
    9. ' line' → logprob: -6.547388076782227
    10. '(' → logprob: -6.922388076782227

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7695371508598328
    2. '   ' → logprob: -1.0195372104644775
    3. ' line' → logprob: -1.7695372104644775
    4. 'line' → logprob: -5.269536972045898
    5. '	line' → logprob: -8.144536972045898
    6. '```' → logprob: -10.394536972045898
    7. 'try' → logprob: -10.644536972045898
    8. '    ' → logprob: -10.769536972045898
    9. '#line' → logprob: -10.894536972045898
    10. ' try' → logprob: -11.394536972045898

Token 594: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10775644332170486
    2. ' line' → logprob: -2.3577563762664795
    3. 'n' (adapté à ' n') → logprob: -5.232756614685059
    4. 'l' → logprob: -6.732756614685059
    5. 'L' → logprob: -7.107756614685059
    6. 'N' → logprob: -9.232756614685059
    7. '   ' → logprob: -10.732756614685059
    8. ' n' → logprob: -11.107756614685059
    9. 'w' → logprob: -11.482756614685059
    10. 'W' → logprob: -11.607756614685059

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031734298914670944
    2. ' =' → logprob: -3.5317342281341553
    3. '=int' → logprob: -6.281734466552734
    4. '=input' → logprob: -9.656734466552734
    5. '=line' → logprob: -10.031734466552734
    6. '=n' → logprob: -13.656734466552734
    7. '=

' → logprob: -14.281734466552734
    8. '=sys' → logprob: -14.406734466552734
    9. '=
' → logprob: -14.406734466552734
    10. '_line' → logprob: -16.156734466552734

Token 596: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01816398836672306
    2. ' int' → logprob: -4.018164157867432
    3. 'input' → logprob: -11.893163681030273
    4. '=int' → logprob: -12.643163681030273
    5. '(int' → logprob: -13.643163681030273
    6. 'n' → logprob: -13.643163681030273
    7. ' n' → logprob: -14.643163681030273
    8. '[int' → logprob: -14.893163681030273
    9. ' input' → logprob: -15.268163681030273
    10. '0' → logprob: -15.643163681030273

Token 597: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08268806338310242
    2. '()' → logprob: -2.582688093185425
    3. '()
' → logprob: -5.582687854766846
    4. '(' → logprob: -12.082688331604004
    5. '()

' → logprob: -12.582688331604004
    6. '.strip' → logprob: -12.582688331604004
    7. '())' → logprob: -12.832688331604004
    8. ' ().' → logprob: -12.832688331604004
    9. '()<' → logprob: -13.582688331604004
    10. '()?.' → logprob: -13.582688331604004

Token 598: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1114518791437149
    2. '().' → logprob: -2.9864518642425537
    3. '
' → logprob: -3.2364518642425537
    4. '       ' → logprob: -5.111452102661133
    5. '.rstrip' → logprob: -5.236452102661133
    6. '()
' → logprob: -6.486452102661133
    7. '   ' → logprob: -6.611452102661133
    8. 'strip' → logprob: -7.986452102661133
    9. '=' → logprob: -8.486452102661133
    10. '.' → logprob: -8.486452102661133

Token 599: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5959778428077698
    2. ' if' → logprob: -0.8459778428077698
    3. '
' → logprob: -4.470977783203125
    4. '       ' → logprob: -4.970977783203125
    5. '.strip' → logprob: -6.845977783203125
    6. '=' → logprob: -8.845977783203125
    7. 'n' → logprob: -9.345977783203125
    8. ' =' → logprob: -10.095977783203125
    9. ' n' → logprob: -10.220977783203125
    10. ';if' → logprob: -11.095977783203125

Token 600: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1276380717754364
    2. 'not' → logprob: -2.127638101577759
    3. 'n' → logprob: -7.37763786315918
    4. ' n' → logprob: -9.37763786315918
    5. '	not' → logprob: -17.25263786315918
    6. '(not' → logprob: -17.62763786315918
    7. ' ' → logprob: -19.00263786315918
    8. '(n' → logprob: -19.25263786315918
    9. 'n't' → logprob: -19.37763786315918
    10. '!' → logprob: -19.37763786315918

Token 601: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861456897109747
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -17.633615493774414
    4. '(n' → logprob: -18.508615493774414
    5. ')n' → logprob: -19.008615493774414
    6. '_n' → logprob: -19.258615493774414
    7. '
' → logprob: -21.133615493774414
    8. '$n' → logprob: -21.883615493774414
    9. '.n' → logprob: -22.008615493774414
    10. '<n' → logprob: -22.508615493774414

Token 602: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.18029356002807617
    2. ':
' → logprob: -2.055293560028076
    3. ':' → logprob: -3.430293560028076
    4. ' or' → logprob: -5.680293560028076
    5. '.' → logprob: -6.930293560028076
    6. '.rstrip' → logprob: -9.930294036865234
    7. ':return' → logprob: -10.430294036865234
    8. '.readline' → logprob: -10.805294036865234
    9. 'strip' → logprob: -11.180294036865234
    10. '.trim' → logprob: -11.430294036865234

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008857536129653454
    2. '       ' → logprob: -5.008857727050781
    3. ' break' → logprob: -6.258857727050781
    4. '   ' → logprob: -9.008857727050781
    5. 'break' → logprob: -9.633857727050781
    6. ' ' → logprob: -12.258857727050781
    7. '               ' → logprob: -12.383857727050781
    8. '	break' → logprob: -12.633857727050781
    9. ' =' → logprob: -12.758857727050781
    10. '     ' → logprob: -12.883857727050781

Token 604: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.30277693271636963
    2. ' break' → logprob: -1.5527769327163696
    3. '       ' → logprob: -3.55277681350708
    4. '           ' → logprob: -3.92777681350708
    5. 'return' → logprob: -7.17777681350708
    6. '	break' → logprob: -8.552777290344238
    7. '   ' → logprob: -9.302777290344238
    8. '               ' → logprob: -9.552777290344238
    9. '
' → logprob: -9.677777290344238
    10. '```' → logprob: -10.552777290344238

Token 605: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012303499970585108
    2. 'n' → logprob: -7.126230239868164
    3. ' n' → logprob: -8.001230239868164
    4. '        
' → logprob: -10.626230239868164
    5. '   ' → logprob: -11.126230239868164
    6. '<|end|>' → logprob: -11.251230239868164
    7. ',n' → logprob: -11.626230239868164
    8. '
' → logprob: -11.751230239868164
    9. ',' → logprob: -12.126230239868164
    10. '	n' → logprob: -12.251230239868164

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00903062243014574
    2. 'n' → logprob: -5.009030818939209
    3. ' n' → logprob: -6.134030818939209
    4. '        
' → logprob: -9.63403034210205
    5. '   ' → logprob: -10.50903034210205
    6. ',n' → logprob: -11.50903034210205
    7. ',' → logprob: -11.63403034210205
    8. '	n' → logprob: -11.88403034210205
    9. '<|end|>' → logprob: -11.88403034210205
    10. '
' → logprob: -13.00903034210205

Token 607: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.31352269649505615
    2. ' n' → logprob: -1.3135226964950562
    3. '       ' → logprob: -8.563522338867188
    4. 'mon' → logprob: -9.938522338867188
    5. '   ' → logprob: -11.438522338867188
    6. 'm' → logprob: -12.563522338867188
    7. '	n' → logprob: -13.188522338867188
    8. ' monsters' → logprob: -13.688522338867188
    9. 'num' → logprob: -13.938522338867188
    10. ' ' → logprob: -14.563522338867188

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006400696467608213
    2. ' =' → logprob: -5.2564005851745605
    3. '=int' → logprob: -6.7564005851745605
    4. '=n' → logprob: -12.881401062011719
    5. '=
' → logprob: -15.506401062011719
    6. '=

' → logprob: -17.25640106201172
    7. '＝' → logprob: -17.38140106201172
    8. '=line' → logprob: -18.63140106201172
    9. 'int' → logprob: -18.75640106201172
    10. '=input' → logprob: -18.88140106201172

Token 609: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004309076175559312
    2. ' int' → logprob: -7.750431060791016
    3. 'n' → logprob: -15.250431060791016
    4. '=int' → logprob: -19.625431060791016
    5. ' n' → logprob: -19.750431060791016
    6. '(int' → logprob: -21.125431060791016
    7. '   ' → logprob: -22.125431060791016
    8. '[int' → logprob: -22.750431060791016
    9. '	int' → logprob: -23.250431060791016
    10. '
' → logprob: -24.250431060791016

Token 610: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.750012397766113
    3. 'n' → logprob: -12.625012397766113
    4. ' (' → logprob: -14.125012397766113
    5. ' n' → logprob: -18.875011444091797
    6. '(
' → logprob: -20.125011444091797
    7. ')n' → logprob: -20.250011444091797
    8. '	n' → logprob: -20.625011444091797
    9. ')' → logprob: -21.500011444091797
    10. '
' → logprob: -22.000011444091797

Token 611: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000579719664528966
    2. ')
' → logprob: -7.500579833984375
    3. '.strip' → logprob: -10.750579833984375
    4. ' )' → logprob: -12.625579833984375
    5. '())' → logprob: -14.875579833984375
    6. '<|end|>' → logprob: -15.000579833984375
    7. ')
' → logprob: -15.375579833984375
    8. '),' → logprob: -15.500579833984375
    9. '.rstrip' → logprob: -16.000579833984375
    10. '[' → logprob: -16.000579833984375

Token 612: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11881338804960251
    2. 'mon' → logprob: -2.4938132762908936
    3. '   ' → logprob: -3.6188132762908936
    4. ' monsters' → logprob: -6.618813514709473
    5. 'm' → logprob: -7.368813514709473
    6. '	' → logprob: -8.118813514709473
    7. '	m' → logprob: -9.493813514709473
    8. ' mon' → logprob: -9.618813514709473
    9. '        
' → logprob: -9.993813514709473
    10. '	   ' → logprob: -10.493813514709473

Token 613: ' if' (ID: 538)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.0023732734844088554
    2. ' monsters' → logprob: -6.502373218536377
    3. '       ' → logprob: -7.502373218536377
    4. 'if' (adapté à ' if') → logprob: -8.627373695373535
    5. 'm' → logprob: -9.752373695373535
    6. 'monster' → logprob: -10.377373695373535
    7. 'mons' → logprob: -11.002373695373535
    8. '   ' → logprob: -11.752373695373535
    9. ' if' → logprob: -12.002373695373535
    10. 'mo' → logprob: -12.252373695373535

Token 614: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3869169354438782
    2. ' n' → logprob: -1.1369168758392334
    3. ' not' → logprob: -10.011917114257812
    4. 'not' → logprob: -14.136917114257812
    5. '	n' → logprob: -15.511917114257812
    6. 'n't' → logprob: -15.886917114257812
    7. ' ' → logprob: -18.011917114257812
    8. ')n' → logprob: -18.011917114257812
    9. '   ' → logprob: -18.386917114257812
    10. '(n' → logprob: -18.636917114257812

Token 615: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014286369085312
    2. ' ==' → logprob: -1.7014286518096924
    3. '=' → logprob: -11.576428413391113
    4. ')==' → logprob: -12.951428413391113
    5. '===' → logprob: -13.701428413391113
    6. '()==' → logprob: -14.076428413391113
    7. '<=' → logprob: -14.576428413391113
    8. '0' → logprob: -14.701428413391113
    9. '==
' → logprob: -15.326428413391113
    10. ']==' → logprob: -15.826428413391113

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -17.625
    4. '   ' → logprob: -21.5
    5. '۰' → logprob: -21.625
    6. '=' → logprob: -22.0
    7. '  ' → logprob: -23.0
    8. ' -' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. '０' → logprob: -24.0

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5760233998298645
    2. ':
' → logprob: -0.8260233998298645
    3. '   ' → logprob: -9.95102310180664
    4. '       ' → logprob: -11.07602310180664
    5. '           ' → logprob: -11.32602310180664
    6. ':return' → logprob: -12.20102310180664
    7. ':
' → logprob: -13.32602310180664
    8. ':

' → logprob: -14.95102310180664
    9. ' ' → logprob: -15.07602310180664
    10. '):
' → logprob: -15.32602310180664

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005568009335547686
    2. '       ' → logprob: -5.255568027496338
    3. 'break' → logprob: -8.38056755065918
    4. ' break' → logprob: -9.50556755065918
    5. '   ' → logprob: -11.13056755065918
    6. '		' → logprob: -11.75556755065918
    7. '	break' → logprob: -13.13056755065918
    8. '               ' → logprob: -13.13056755065918
    9. '	       ' → logprob: -13.75556755065918
    10. '     ' → logprob: -14.25556755065918

Token 619: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.17888282239437103
    2. ' break' → logprob: -1.9288828372955322
    3. 'return' → logprob: -4.178882598876953
    4. '       ' → logprob: -5.928882598876953
    5. ' return' → logprob: -8.178882598876953
    6. '           ' → logprob: -9.303882598876953
    7. '   ' → logprob: -9.553882598876953
    8. '	break' → logprob: -9.678882598876953
    9. '               ' → logprob: -13.553882598876953
    10. ' ' → logprob: -13.553882598876953

Token 620: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007651951164007187
    2. 'mon' → logprob: -7.875765323638916
    3. '        
' → logprob: -8.500764846801758
    4. '   ' → logprob: -9.875764846801758
    5. '	' → logprob: -10.250764846801758
    6. '
' → logprob: -10.250764846801758
    7. '<|end|>' → logprob: -10.875764846801758
    8. '		
' → logprob: -11.750764846801758
    9. '	   ' → logprob: -11.750764846801758
    10. ' monsters' → logprob: -12.500764846801758

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017481282353401184
    2. 'mon' → logprob: -4.517481327056885
    3. '   ' → logprob: -5.142481327056885
    4. '        
' → logprob: -8.517480850219727
    5. '	' → logprob: -9.017480850219727
    6. ' monsters' → logprob: -9.142480850219727
    7. '	   ' → logprob: -10.767480850219727
    8. ' mon' → logprob: -10.767480850219727
    9. '(mon' → logprob: -10.892480850219727
    10. '	m' → logprob: -11.267480850219727

Token 622: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.0007235141238197684
    2. ' monsters' → logprob: -8.000723838806152
    3. '       ' → logprob: -8.125723838806152
    4. '   ' → logprob: -10.000723838806152
    5. 'monster' → logprob: -10.875723838806152
    6. 'm' → logprob: -11.375723838806152
    7. 'mons' → logprob: -12.375723838806152
    8. 'points' → logprob: -12.500723838806152
    9. '           ' → logprob: -13.250723838806152
    10. '```' → logprob: -13.375723838806152

Token 623: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5785413980484009
    2. ' =' → logprob: -0.8285413980484009
    3. '=[]' → logprob: -5.953541278839111
    4. '=[]
' → logprob: -14.07854175567627
    5. '=[' → logprob: -14.57854175567627
    6. '＝' → logprob: -15.57854175567627
    7. '=list' → logprob: -15.95354175567627
    8. ' =[' → logprob: -15.95354175567627
    9. '=[]
' → logprob: -16.328540802001953
    10. '=[],' → logprob: -16.953540802001953

Token 624: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005544173996895552
    2. '[]' → logprob: -5.505544185638428
    3. '[array' → logprob: -7.755544185638428
    4. '[int' → logprob: -8.50554370880127
    5. '[]
' → logprob: -8.50554370880127
    6. '[input' → logprob: -8.75554370880127
    7. '[line' → logprob: -9.88054370880127
    8. '[class' → logprob: -10.38054370880127
    9. '[list' → logprob: -10.38054370880127
    10. '[element' → logprob: -10.50554370880127

Token 625: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00012976066500414163
    2. ' tuple' → logprob: -9.000129699707031
    3. '(tuple' → logprob: -12.000129699707031
    4. '
' → logprob: -16.50012969970703
    5. ']' → logprob: -17.12512969970703
    6. '   ' → logprob: -17.75012969970703
    7. 'list' → logprob: -17.75012969970703
    8. 'float' → logprob: -19.50012969970703
    9. ' ' → logprob: -20.12512969970703
    10. '  ' → logprob: -20.37512969970703

Token 626: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004311460361350328
    2. 'map' → logprob: -7.750431060791016
    3. '(' → logprob: -14.875431060791016
    4. ' map' → logprob: -16.125431060791016
    5. '	map' → logprob: -18.000431060791016
    6. '(float' → logprob: -18.000431060791016
    7. '.map' → logprob: -18.125431060791016
    8. '_map' → logprob: -19.000431060791016
    9. ',map' → logprob: -19.000431060791016
    10. '[' → logprob: -19.875431060791016

Token 627: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.03860548883676529
    2. 'float' → logprob: -3.2886054515838623
    3. '(int' → logprob: -7.538605690002441
    4. 'int' → logprob: -11.163605690002441
    5. ',float' → logprob: -11.163605690002441
    6. ' float' → logprob: -13.663605690002441
    7. '=float' → logprob: -13.663605690002441
    8. '(' → logprob: -15.163605690002441
    9. '<float' → logprob: -15.538605690002441
    10. '	float' → logprob: -15.788605690002441

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932764053344727
    2. ',input' → logprob: -0.6932764053344727
    3. 'input' → logprob: -9.068276405334473
    4. '(input' → logprob: -11.443276405334473
    5. ',x' → logprob: -13.943276405334473
    6. ' ,' → logprob: -14.068276405334473
    7. ',(' → logprob: -14.693276405334473
    8. ',
' → logprob: -15.443276405334473
    9. ' input' → logprob: -15.568276405334473
    10. ',line' → logprob: -15.568276405334473

Token 629: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033593899570405483
    2. ' input' → logprob: -8.000335693359375
    3. 'sys' → logprob: -14.875335693359375
    4. '(input' → logprob: -16.625335693359375
    5. '   ' → logprob: -19.000335693359375
    6. ',input' → logprob: -19.250335693359375
    7. '[input' → logprob: -19.500335693359375
    8. ')' → logprob: -19.625335693359375
    9. '	input' → logprob: -20.500335693359375
    10. ' ' → logprob: -20.750335693359375

Token 630: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.750000953674316
    3. '.readline' → logprob: -16.5
    4. '(' → logprob: -18.375
    5. ' ().' → logprob: -18.375
    6. '()
' → logprob: -19.25
    7. '.strip' → logprob: -20.375
    8. '   ' → logprob: -20.75
    9. '()))' → logprob: -20.875
    10. '()[' → logprob: -20.875

Token 631: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.38692665100097656
    2. 'strip' → logprob: -1.1369266510009766
    3. 'rstrip' → logprob: -10.136926651000977
    4. 'read' → logprob: -11.886926651000977
    5. '().' → logprob: -12.011926651000977
    6. '.strip' → logprob: -13.761926651000977
    7. ' strip' → logprob: -14.261926651000977
    8. ' split' → logprob: -14.511926651000977
    9. '(split' → logprob: -14.886926651000977
    10. '.split' → logprob: -15.636926651000977

Token 632: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0035278520081192255
    2. '))' → logprob: -5.753527641296387
    3. '()' → logprob: -8.503527641296387
    4. '()))
' → logprob: -9.003527641296387
    5. '(' → logprob: -11.503527641296387
    6. '())))' → logprob: -11.503527641296387
    7. ' ))' → logprob: -14.003527641296387
    8. '()
' → logprob: -14.378527641296387
    9. ')))' → logprob: -14.503527641296387
    10. '().' → logprob: -14.503527641296387

Token 633: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6736965775489807
    2. ')' → logprob: -0.7986965775489807
    3. ' for' → logprob: -3.923696517944336
    4. ')]' → logprob: -5.173696517944336
    5. '()]' → logprob: -5.298696517944336
    6. 'for' → logprob: -5.673696517944336
    7. '())' → logprob: -5.798696517944336
    8. ']' → logprob: -5.923696517944336
    9. '(n' → logprob: -8.423696517944336
    10. '       ' → logprob: -8.423696517944336

Token 634: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009659400209784508
    2. 'range' → logprob: -4.759659290313721
    3. ' range' → logprob: -7.009659290313721
    4. '_range' → logprob: -8.884659767150879
    5. ' _' → logprob: -14.009659767150879
    6. '_i' → logprob: -14.259659767150879
    7. '_=' → logprob: -14.759659767150879
    8. '	range' → logprob: -15.134659767150879
    9. '(range' → logprob: -15.759659767150879
    10. '_in' → logprob: -16.009658813476562

Token 635: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6974853277206421
    2. 'range' → logprob: -0.9474853277206421
    3. 'in' → logprob: -2.1974854469299316
    4. ' range' → logprob: -5.697485446929932
    5. '(range' → logprob: -12.322484970092773
    6. 'i' → logprob: -12.322484970092773
    7. 'n' → logprob: -13.447484970092773
    8. ' ' → logprob: -14.447484970092773
    9. '
' → logprob: -14.447484970092773
    10. '	range' → logprob: -14.822484970092773

Token 636: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.512236498361744e-07
    2. ' range' → logprob: -14.500000953674316
    3. '(range' → logprob: -19.5
    4. '
' → logprob: -20.25
    5. '	range' → logprob: -21.75
    6. '[' → logprob: -22.375
    7. '.range' → logprob: -22.5
    8. 'r' → logprob: -22.75
    9. '   ' → logprob: -23.625
    10. ']' → logprob: -23.75

Token 637: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004078639671206474
    2. 'n' → logprob: -5.5040788650512695
    3. ' n' → logprob: -16.379077911376953
    4. ' (' → logprob: -16.879077911376953
    5. '(' → logprob: -17.129077911376953
    6. '	n' → logprob: -20.129077911376953
    7. ')n' → logprob: -21.754077911376953
    8. '_n' → logprob: -21.879077911376953
    9. '   ' → logprob: -22.129077911376953
    10. '
' → logprob: -22.379077911376953

Token 638: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003939728485420346
    2. ']' → logprob: -7.875393867492676
    3. ')' → logprob: -11.250393867492676
    4. ')]
' → logprob: -15.125393867492676
    5. '()]' → logprob: -16.000394821166992
    6. '   ' → logprob: -16.250394821166992
    7. ' ]' → logprob: -16.375394821166992
    8. ' )' → logprob: -16.500394821166992
    9. '       ' → logprob: -17.000394821166992
    10. ')],' → logprob: -17.125394821166992

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01477448083460331
    2. 'points' → logprob: -4.764774322509766
    3. ' points' → logprob: -6.139774322509766
    4. 'start' → logprob: -6.889774322509766
    5. '        
' → logprob: -6.889774322509766
    6. '
' → logprob: -7.264774322509766
    7. '   ' → logprob: -7.389774322509766
    8. 'pts' → logprob: -8.389774322509766
    9. ' start' → logprob: -9.014774322509766
    10. '```' → logprob: -9.514774322509766

Token 640: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.009118160232901573
    2. 'pts' → logprob: -4.88411808013916
    3. ' points' → logprob: -6.63411808013916
    4. '       ' → logprob: -8.88411808013916
    5. ' pts' → logprob: -10.00911808013916
    6. 'start' → logprob: -12.63411808013916
    7. '
' → logprob: -13.00911808013916
    8. '   ' → logprob: -13.63411808013916
    9. 'all' → logprob: -13.75911808013916
    10. '	points' → logprob: -13.88411808013916

Token 641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. ' +=' → logprob: -15.761871337890625
    4. '+=' → logprob: -15.886871337890625
    5. '=create' → logprob: -16.386871337890625
    6. '.extend' → logprob: -16.511871337890625
    7. '＝' → logprob: -16.886871337890625
    8. ',' → logprob: -16.886871337890625
    9. '=[]' → logprob: -17.261871337890625
    10. '.=' → logprob: -18.136871337890625

Token 642: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.04858794063329697
    2. ' generate' → logprob: -3.0485880374908447
    3. '(generate' → logprob: -14.298587799072266
    4. '   ' → logprob: -18.923587799072266
    5. '.generate' → logprob: -19.798587799072266
    6. ' ' → logprob: -21.048587799072266
    7. '_generate' → logprob: -21.298587799072266
    8. '
' → logprob: -22.173587799072266
    9. '  ' → logprob: -22.298587799072266
    10. 'list' → logprob: -22.673587799072266

Token 643: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -5.676981345459353e-06
    2. 'points' → logprob: -12.125005722045898
    3. '_pts' → logprob: -16.2500057220459
    4. '(points' → logprob: -16.6250057220459
    5. ' points' → logprob: -17.0000057220459
    6. '_POINTS' → logprob: -19.3750057220459
    7. '_' → logprob: -20.0000057220459
    8. '```' → logprob: -20.1250057220459
    9. 'Points' → logprob: -20.2500057220459
    10. '	points' → logprob: -20.6250057220459

Token 644: '(mon' (ID: 142845)
  Prédit: '(mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mon' → logprob: -1.2113979209971149e-05
    2. 'mon' → logprob: -11.375012397766113
    3. '(points' → logprob: -14.375012397766113
    4. '(m' → logprob: -17.125011444091797
    5. '```' → logprob: -18.375011444091797
    6. ' (' → logprob: -19.250011444091797
    7. '.mon' → logprob: -20.125011444091797
    8. '(' → logprob: -20.250011444091797
    9. 'mons' → logprob: -20.625011444091797
    10. '_mon' → logprob: -20.875011444091797

Token 645: 'sters' (ID: 17541)
  Prédit: 'sters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sters' → logprob: -3.452426608419046e-05
    2. 'ters' → logprob: -10.37503433227539
    3. 's' → logprob: -13.62503433227539
    4. 'st' → logprob: -13.62503433227539
    5. '```' → logprob: -15.25003433227539
    6. '[' → logprob: -16.25003433227539
    7. '(' → logprob: -16.25003433227539
    8. '=' → logprob: -16.62503433227539
    9. 'stars' → logprob: -16.62503433227539
    10. '       ' → logprob: -17.37503433227539

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048980534076690674
    2. ')
' → logprob: -3.048980474472046
    3. '   ' → logprob: -8.548980712890625
    4. '       ' → logprob: -8.548980712890625
    5. '
' → logprob: -13.673980712890625
    6. ')
' → logprob: -14.048980712890625
    7. ' )' → logprob: -14.548980712890625
    8. '),' → logprob: -14.673980712890625
    9. ',' → logprob: -15.048980712890625
    10. ')

' → logprob: -15.173980712890625

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6139125227928162
    2. ' graph' → logprob: -0.9889125227928162
    3. 'graph' → logprob: -2.488912582397461
    4. '   ' → logprob: -5.988912582397461
    5. ' start' → logprob: -7.363912582397461
    6. '
' → logprob: -8.238912582397461
    7. 'start' → logprob: -8.863912582397461
    8. '	graph' → logprob: -8.988912582397461
    9. '_graph' → logprob: -10.613912582397461
    10. ' points' → logprob: -10.738912582397461

Token 648: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0002406090497970581
    2. ' graph' → logprob: -8.375240325927734
    3. 'start' → logprob: -12.625240325927734
    4. 'goal' → logprob: -13.000240325927734
    5. '   ' → logprob: -13.375240325927734
    6. 'mon' → logprob: -14.250240325927734
    7. 'points' → logprob: -14.500240325927734
    8. '
' → logprob: -14.750240325927734
    9. '	graph' → logprob: -14.750240325927734
    10. '```' → logprob: -15.125240325927734

Token 649: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9154747724533081
    2. ' not' → logprob: -1.040474772453308
    3. ' len' → logprob: -1.790474772453308
    4. 'not' → logprob: -2.9154748916625977
    5. '4' → logprob: -5.415474891662598
    6. 'all' → logprob: -5.665474891662598
    7. '(' → logprob: -5.665474891662598
    8. '(len' → logprob: -5.915474891662598
    9. 'points' → logprob: -6.040474891662598
    10. ' all' → logprob: -6.165474891662598

Token 650: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4306863844394684
    2. ' points' → logprob: -1.055686354637146
    3. 'can' → logprob: -7.1806864738464355
    4. 'any' → logprob: -7.8056864738464355
    5. ' any' → logprob: -7.9306864738464355
    6. '(points' → logprob: -8.430685997009277
    7. ' can' → logprob: -9.055685997009277
    8. 'generate' → logprob: -10.180685997009277
    9. 'mon' → logprob: -10.555685997009277
    10. '[' → logprob: -11.305685997009277

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0430779792368412
    2. ':
' → logprob: -3.1680779457092285
    3. ':return' → logprob: -9.793078422546387
    4. ' or' → logprob: -12.043078422546387
    5. '   ' → logprob: -12.168078422546387
    6. '       ' → logprob: -12.793078422546387
    7. '[' → logprob: -12.918078422546387
    8. 'continue' → logprob: -13.293078422546387
    9. ':

' → logprob: -13.793078422546387
    10. '):' → logprob: -14.043078422546387

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1815759241580963
    2. '       ' → logprob: -1.806575894355774
    3. 'print' → logprob: -7.056575775146484
    4. '
' → logprob: -7.806575775146484
    5. ',' → logprob: -9.181575775146484
    6. ' print' → logprob: -9.306575775146484
    7. ':' → logprob: -9.556575775146484
    8. '```' → logprob: -9.556575775146484
    9. ':
' → logprob: -9.931575775146484
    10. '   ' → logprob: -10.056575775146484

Token 653: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6039574146270752
    2. 'print' (adapté à ' print') → logprob: -0.8539574146270752
    3. ' print' → logprob: -3.603957414627075
    4. '           ' → logprob: -8.603957176208496
    5. '   ' → logprob: -8.603957176208496
    6. '
' → logprob: -10.478957176208496
    7. '```' → logprob: -11.228957176208496
    8. '	print' → logprob: -13.228957176208496
    9. ' ' → logprob: -13.978957176208496
    10. '        
' → logprob: -13.978957176208496

Token 654: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6380404829978943
    2. '("' → logprob: -1.263040542602539
    3. '-' → logprob: -1.888040542602539
    4. '(' → logprob: -3.513040542602539
    5. '0' → logprob: -5.388040542602539
    6. '('' → logprob: -6.263040542602539
    7. '("-' → logprob: -7.138040542602539
    8. '"' → logprob: -8.263040542602539
    9. 'Impossible' → logprob: -9.888040542602539
    10. '"No' → logprob: -11.013040542602539

Token 655: 'im' (ID: 321)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5757582187652588
    2. 'im' → logprob: -1.5757582187652588
    3. 'Impossible' → logprob: -2.075758218765259
    4. '0' → logprob: -3.325758218765259
    5. 'No' → logprob: -3.325758218765259
    6. 'IMP' → logprob: -3.700758218765259
    7. 'NA' → logprob: -6.07575798034668
    8. 'NO' → logprob: -6.32575798034668
    9. 'no' → logprob: -6.95075798034668
    10. 'cannot' → logprob: -7.70075798034668

Token 656: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -5.0020742492051795e-05
    2. 'p' → logprob: -10.750049591064453
    3. 'poss' → logprob: -10.875049591064453
    4. 'pass' → logprob: -12.625049591064453
    5. 'Possible' → logprob: -13.125049591064453
    6. '_possible' → logprob: -13.250049591064453
    7. 'pos' → logprob: -13.625049591064453
    8. ' possible' → logprob: -14.750049591064453
    9. 'port' → logprob: -15.250049591064453
    10. 'm' → logprob: -15.250049591064453

Token 657: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.47411054372787476
    2. '")' → logprob: -0.9741105437278748
    3. '")
' → logprob: -10.34911060333252
    4. ')
' → logprob: -14.47411060333252
    5. ')' → logprob: -14.84911060333252
    6. ')")
' → logprob: -15.47411060333252
    7. '");' → logprob: -15.72411060333252
    8. '")

' → logprob: -16.474109649658203
    9. '"' → logprob: -16.474109649658203
    10. '')
' → logprob: -16.974109649658203

Token 658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016182278341148049
    2. '       ' → logprob: -8.750162124633789
    3. '               ' → logprob: -13.000162124633789
    4. '		' → logprob: -15.250162124633789
    5. '   ' → logprob: -15.375162124633789
    6. '	       ' → logprob: -15.750162124633789
    7. '```' → logprob: -15.875162124633789
    8. '          ' → logprob: -16.87516212463379
    9. 'continue' → logprob: -17.00016212463379
    10. ' continue' → logprob: -17.37516212463379

Token 659: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001460831263102591
    2. 'continue' (adapté à ' continue') → logprob: -6.751461029052734
    3. ' continue' → logprob: -8.376461029052734
    4. '       ' → logprob: -9.876461029052734
    5. '		' → logprob: -13.126461029052734
    6. '
' → logprob: -13.251461029052734
    7. '```' → logprob: -13.501461029052734
    8. '               ' → logprob: -13.751461029052734
    9. '   ' → logprob: -14.001461029052734
    10. ' ' → logprob: -14.251461029052734

Token 660: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008999044075608253
    2. '
' → logprob: -7.625899791717529
    3. '   ' → logprob: -8.500900268554688
    4. '        
' → logprob: -9.250900268554688
    5. 'start' → logprob: -10.250900268554688
    6. '```' → logprob: -11.125900268554688
    7. 's' → logprob: -11.625900268554688
    8. '    
' → logprob: -11.875900268554688
    9. '#' → logprob: -12.000900268554688
    10. ',' → logprob: -12.250900268554688

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012401456013321877
    2. '   ' → logprob: -4.637401580810547
    3. 'graph' → logprob: -6.512401580810547
    4. ' graph' → logprob: -7.012401580810547
    5. '	graph' → logprob: -9.137401580810547
    6. '
' → logprob: -10.012401580810547
    7. '```' → logprob: -10.012401580810547
    8. '           ' → logprob: -10.762401580810547
    9. '        
' → logprob: -11.887401580810547
    10. '<|end|>' → logprob: -12.512401580810547

Token 662: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.009090407751500607
    2. 'goal' → logprob: -5.509090423583984
    3. 'start' → logprob: -5.884090423583984
    4. ' graph' → logprob: -6.759090423583984
    5. '   ' → logprob: -7.134090423583984
    6. 'go' → logprob: -9.259090423583984
    7. '       ' → logprob: -9.384090423583984
    8. ' start' → logprob: -10.759090423583984
    9. ' goal' → logprob: -11.134090423583984
    10. 'points' → logprob: -11.384090423583984

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326258182525635
    2. ' =' → logprob: -1.3132625818252563
    3. '=create' → logprob: -14.438262939453125
    4. ',' → logprob: -16.438262939453125
    5. '＝' → logprob: -16.688262939453125
    6. '=get' → logprob: -17.438262939453125
    7. '=line' → logprob: -17.688262939453125
    8. '=
' → logprob: -18.188262939453125
    9. '=find' → logprob: -18.438262939453125
    10. '=b' → logprob: -18.563262939453125

Token 664: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0015023599844425917
    2. ' build' → logprob: -6.501502513885498
    3. '(build' → logprob: -21.001502990722656
    4. '	build' → logprob: -22.126502990722656
    5. '.build' → logprob: -24.751502990722656
    6. '_build' → logprob: -25.626502990722656
    7. 'building' → logprob: -26.001502990722656
    8. 'built' → logprob: -26.126502990722656
    9. 'Build' → logprob: -27.251502990722656
    10. 'b' → logprob: -27.501502990722656

Token 665: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.0010917582549154758
    2. '(graph' → logprob: -7.001091957092285
    3. 'graph' → logprob: -8.626091957092285
    4. '_points' → logprob: -15.376091957092285
    5. ' graph' → logprob: -15.626091957092285
    6. '	graph' → logprob: -15.626091957092285
    7. '_' → logprob: -16.12609100341797
    8. '_GRAPH' → logprob: -16.50109100341797
    9. '\' → logprob: -17.75109100341797
    10. '```' → logprob: -17.75109100341797

Token 666: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.339278580620885e-06
    2. '(graph' → logprob: -13.000001907348633
    3. '(' → logprob: -17.500001907348633
    4. ' (' → logprob: -19.250001907348633
    5. '(parts' → logprob: -19.500001907348633
    6. 'points' → logprob: -20.000001907348633
    7. '	points' → logprob: -20.750001907348633
    8. '(point' → logprob: -21.000001907348633
    9. '(lines' → logprob: -21.625001907348633
    10. ' points' → logprob: -21.625001907348633

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004388942907098681
    2. '(points' → logprob: -8.000438690185547
    3. '(graph' → logprob: -9.625438690185547
    4. ',
' → logprob: -11.250438690185547
    5. ')' → logprob: -11.500438690185547
    6. ' ,' → logprob: -12.125438690185547
    7. '(' → logprob: -12.875438690185547
    8. '   ' → logprob: -13.000438690185547
    9. 'graph' → logprob: -14.125438690185547
    10. '       ' → logprob: -14.250438690185547

Token 668: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.0036211006809026003
    2. ' monsters' → logprob: -5.6286211013793945
    3. 'monster' → logprob: -12.003621101379395
    4. 'mons' → logprob: -12.378621101379395
    5. '   ' → logprob: -13.128621101379395
    6. '(mon' → logprob: -13.378621101379395
    7. ' mon' → logprob: -13.628621101379395
    8. '```' → logprob: -13.753621101379395
    9. '       ' → logprob: -14.128621101379395
    10. ' monst' → logprob: -14.628621101379395

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4866429567337036
    2. '       ' → logprob: -0.9866429567337036
    3. '
' → logprob: -4.861642837524414
    4. '<|end|>' → logprob: -6.236642837524414
    5. ')
' → logprob: -6.361642837524414
    6. '        
' → logprob: -7.736642837524414
    7. ',' → logprob: -8.111642837524414
    8. '   ' → logprob: -8.611642837524414
    9. '),' → logprob: -10.361642837524414
    10. '```' → logprob: -11.361642837524414

Token 670: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.23701238632202148
    2. '       ' → logprob: -1.7370123863220215
    3. ' start' → logprob: -3.3620123863220215
    4. '   ' → logprob: -8.36201286315918
    5. '	start' → logprob: -10.61201286315918
    6. '```' → logprob: -11.23701286315918
    7. '
' → logprob: -11.48701286315918
    8. ' ' → logprob: -12.23701286315918
    9. '        ' → logprob: -12.36201286315918
    10. '[start' → logprob: -12.48701286315918

Token 671: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.001535216229967773
    2. 'starts' → logprob: -6.626535415649414
    3. '       ' → logprob: -8.751535415649414
    4. '#' → logprob: -10.251535415649414
    5. ' start' → logprob: -12.251535415649414
    6. '   ' → logprob: -12.376535415649414
    7. '        
' → logprob: -13.126535415649414
    8. 'import' → logprob: -13.876535415649414
    9. 'try' → logprob: -14.501535415649414
    10. ' starts' → logprob: -14.501535415649414

Token 672: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00038896629121154547
    2. '_points' → logprob: -8.250389099121094
    3. '_inds' → logprob: -9.875389099121094
    4. 's' → logprob: -10.000389099121094
    5. '_pts' → logprob: -11.500389099121094
    6. ' =' → logprob: -12.000389099121094
    7. '_positions' → logprob: -12.125389099121094
    8. '_idxs' → logprob: -12.500389099121094
    9. '_idx' → logprob: -13.250389099121094
    10. '_' → logprob: -13.625389099121094

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6942642331123352
    2. ' =' → logprob: -0.6942642331123352
    3. '=[' → logprob: -7.1942644119262695
    4. '=[]' → logprob: -7.9442644119262695
    5. ' =[' → logprob: -11.56926441192627
    6. '=[]
' → logprob: -13.81926441192627
    7. ',' → logprob: -15.81926441192627
    8. '[' → logprob: -16.819263458251953
    9. '[]' → logprob: -17.069263458251953
    10. '=[],' → logprob: -17.194263458251953

Token 674: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011160066351294518
    2. '[' → logprob: -4.511159896850586
    3. '[idx' → logprob: -9.761159896850586
    4. ' [' → logprob: -10.761159896850586
    5. '[k' → logprob: -11.511159896850586
    6. '[s' → logprob: -11.761159896850586
    7. '[x' → logprob: -11.886159896850586
    8. '[j' → logprob: -13.136159896850586
    9. '[p' → logprob: -13.261159896850586
    10. '[]
' → logprob: -14.011159896850586

Token 675: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.930552313453518e-05
    2. ' i' → logprob: -10.750049591064453
    3. 'idx' → logprob: -11.125049591064453
    4. '[i' → logprob: -11.875049591064453
    5. '0' → logprob: -13.125049591064453
    6. '(i' → logprob: -14.000049591064453
    7. '   ' → logprob: -14.250049591064453
    8. ']' → logprob: -14.875049591064453
    9. '       ' → logprob: -15.125049591064453
    10. '	i' → logprob: -15.250049591064453

Token 676: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759515166282654
    2. ' for' → logprob: -0.8259515166282654
    3. '
' → logprob: -11.70095157623291
    4. '   ' → logprob: -13.70095157623291
    5. ' ' → logprob: -13.95095157623291
    6. '	for' → logprob: -14.57595157623291
    7. '       ' → logprob: -14.95095157623291
    8. ' 
' → logprob: -15.57595157623291
    9. 'i' → logprob: -15.95095157623291
    10. '           ' → logprob: -16.200950622558594

Token 677: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017419204115867615
    2. ' i' → logprob: -4.267419338226318
    3. ',' → logprob: -5.767419338226318
    4. ',i' → logprob: -9.14241886138916
    5. 'range' → logprob: -11.76741886138916
    6. ' range' → logprob: -12.26741886138916
    7. 'idx' → logprob: -13.26741886138916
    8. ' in' → logprob: -13.89241886138916
    9. ' idx' → logprob: -15.01741886138916
    10. 'in' → logprob: -16.392419815063477

Token 678: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4490855038166046
    2. 'in' → logprob: -1.4490854740142822
    3. ',p' → logprob: -2.1990854740142822
    4. ' in' → logprob: -4.324085712432861
    5. ',x' → logprob: -6.324085712432861
    6. ',in' → logprob: -7.574085712432861
    7. ',i' → logprob: -8.574085235595703
    8. ',s' → logprob: -9.574085235595703
    9. ',e' → logprob: -9.574085235595703
    10. ',pos' → logprob: -9.699085235595703

Token 679: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005278107710182667
    2. 'in' → logprob: -5.25527811050415
    3. 'n' → logprob: -10.380277633666992
    4. ',' → logprob: -11.380277633666992
    5. 'i' → logprob: -14.505277633666992
    6. 's' → logprob: -14.755277633666992
    7. ',p' → logprob: -16.005277633666992
    8. 'nt' → logprob: -16.130277633666992
    9. 't' → logprob: -16.380277633666992
    10. 'nd' → logprob: -16.505277633666992

Token 680: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.018158607184886932
    2. ' enumerate' → logprob: -4.018158435821533
    3. '
' → logprob: -11.893158912658691
    4. 'en' → logprob: -14.018158912658691
    5. 'enum' → logprob: -14.268158912658691
    6. 'in' → logprob: -15.893158912658691
    7. '```' → logprob: -16.893157958984375
    8. 'import' → logprob: -17.018157958984375
    9. '(en' → logprob: -17.143157958984375
    10. 'range' → logprob: -17.518157958984375

Token 681: '(points' (ID: 72131)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5777291655540466
    2. '(points' → logprob: -0.8277291655540466
    3. ' points' → logprob: -6.327729225158691
    4. '	points' → logprob: -13.202729225158691
    5. '.points' → logprob: -16.202728271484375
    6. 'pts' → logprob: -16.952728271484375
    7. '
' → logprob: -17.577728271484375
    8. '_points' → logprob: -17.577728271484375
    9. 'Points' → logprob: -17.952728271484375
    10. 'point' → logprob: -18.202728271484375

Token 682: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02978207916021347
    2. ' if' → logprob: -3.5297820568084717
    3. ')' → logprob: -10.52978229522705
    4. '   ' → logprob: -13.40478229522705
    5. 'in' → logprob: -13.52978229522705
    6. '       ' → logprob: -14.27978229522705
    7. '           ' → logprob: -14.52978229522705
    8. '()' → logprob: -14.90478229522705
    9. ' ' → logprob: -16.029781341552734
    10. '
' → logprob: -16.404781341552734

Token 683: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00861456897109747
    2. ' if' → logprob: -4.758614540100098
    3. '
' → logprob: -17.133615493774414
    4. '   ' → logprob: -17.133615493774414
    5. '       ' → logprob: -17.133615493774414
    6. ')' → logprob: -17.633615493774414
    7. '           ' → logprob: -18.133615493774414
    8. '	if' → logprob: -18.633615493774414
    9. ']' → logprob: -19.383615493774414
    10. ' ' → logprob: -19.383615493774414

Token 684: ' abs' (ID: 8443)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05300121754407883
    2. 'abs' → logprob: -3.1780011653900146
    3. ' p' → logprob: -4.928001403808594
    4. ' abs' → logprob: -5.928001403808594
    5. 'math' → logprob: -10.053001403808594
    6. ' math' → logprob: -13.053001403808594
    7. '0' → logprob: -14.553001403808594
    8. ' ' → logprob: -14.803001403808594
    9. '(abs' → logprob: -14.928001403808594
    10. '   ' → logprob: -15.303001403808594

Token 685: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000205566844670102
    2. 'p' → logprob: -8.500205993652344
    3. '(' → logprob: -13.375205993652344
    4. ' p' → logprob: -15.250205993652344
    5. ' (' → logprob: -15.375205993652344
    6. '<p' → logprob: -19.500205993652344
    7. '((' → logprob: -19.500205993652344
    8. '(
' → logprob: -19.625205993652344
    9. '[p' → logprob: -19.750205993652344
    10. '```' → logprob: -20.500205993652344

Token 686: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.875001907348633
    3. '```' → logprob: -14.250001907348633
    4. '[
' → logprob: -16.500001907348633
    5. '
' → logprob: -17.125001907348633
    6. '(' → logprob: -17.500001907348633
    7. '\[' → logprob: -18.375001907348633
    8. '1' → logprob: -18.375001907348633
    9. 'import' → logprob: -18.625001907348633
    10. '.' → logprob: -18.625001907348633

Token 687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022758185863495
    2. '[' → logprob: -1.9102275371551514
    3. ' ' → logprob: -12.91022777557373
    4. '
' → logprob: -15.53522777557373
    5. 'x' → logprob: -16.035226821899414
    6. '[
' → logprob: -16.035226821899414
    7. '```' → logprob: -16.285226821899414
    8. '1' → logprob: -16.535226821899414
    9. '   ' → logprob: -16.785226821899414
    10. ' [' → logprob: -16.910226821899414

Token 688: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1237490251660347
    2. ')' → logprob: -2.748749017715454
    3. '-' → logprob: -3.373749017715454
    4. ')==' → logprob: -4.873749256134033
    5. ' -' → logprob: -5.748749256134033
    6. '0' → logprob: -5.748749256134033
    7. ')<' → logprob: -6.623749256134033
    8. '(' → logprob: -7.123749256134033
    9. ')<=' → logprob: -7.248749256134033
    10. ' ' → logprob: -7.748749256134033

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.7500057220459
    4. '=' → logprob: -18.2500057220459
    5. '(' → logprob: -18.2500057220459
    6. '`' → logprob: -18.6250057220459
    7. '
' → logprob: -18.8750057220459
    8. ')' → logprob: -19.2500057220459
    9. '   ' → logprob: -19.5000057220459
    10. '[' → logprob: -19.6250057220459

Token 690: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00100113230291754
    2. '0' → logprob: -7.626001358032227
    3. ')' → logprob: -7.751001358032227
    4. ')<' → logprob: -9.501001358032227
    5. ')<=' → logprob: -12.001001358032227
    6. ')==' → logprob: -13.751001358032227
    7. '.)' → logprob: -14.751001358032227
    8. '<' → logprob: -16.251001358032227
    9. '[' → logprob: -16.751001358032227
    10. '.<' → logprob: -17.251001358032227

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ')' → logprob: -18.875
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -20.25
    5. '00' → logprob: -20.5
    6. '   ' → logprob: -21.125
    7. '000' → logprob: -21.5
    8. '  ' → logprob: -21.75
    9. '    ' → logprob: -22.5
    10. '۰' → logprob: -22.6875

Token 692: ')<' (ID: 62287)
  Prédit: ')<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.12731757760047913
    2. ')' → logprob: -2.1273176670074463
    3. ')<=' → logprob: -7.877317428588867
    4. '<' → logprob: -12.252317428588867
    5. ')==' → logprob: -13.002317428588867
    6. ' )' → logprob: -13.627317428588867
    7. ')
' → logprob: -14.002317428588867
    8. '.' → logprob: -15.502317428588867
    9. '0' → logprob: -15.627317428588867
    10. ']<' → logprob: -16.127317428588867

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '0' → logprob: -11.500020980834961
    3. ' ' → logprob: -11.750020980834961
    4. '=' → logprob: -13.000020980834961
    5. '   ' → logprob: -15.875020980834961
    6. '(' → logprob: -16.87502098083496
    7. '
' → logprob: -17.00002098083496
    8. '**' → logprob: -17.12502098083496
    9. '```' → logprob: -17.62502098083496
    10. ' ' → logprob: -17.75002098083496

Token 694: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.813969957875088e-05
    2. '1' → logprob: -9.625067710876465
    3. '-' → logprob: -13.500067710876465
    4. 'E' → logprob: -14.375067710876465
    5. '-e' → logprob: -19.00006866455078
    6. '```' → logprob: -19.25006866455078
    7. '
' → logprob: -19.75006866455078
    8. '0' → logprob: -20.50006866455078
    9. '**' → logprob: -20.62506866455078
    10. ' ' → logprob: -20.62506866455078

Token 695: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.061676347395405e-05
    2. '6' → logprob: -11.00005054473877
    3. '9' → logprob: -11.12505054473877
    4. '8' → logprob: -11.50005054473877
    5. '7' → logprob: -12.87505054473877
    6. '3' → logprob: -12.87505054473877
    7. '5' → logprob: -13.62505054473877
    8. '```' → logprob: -14.12505054473877
    9. ' -' → logprob: -14.25005054473877
    10. '4' → logprob: -14.87505054473877

Token 696: '9' (ID: 24)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6916426420211792
    2. '8' → logprob: -1.1916426420211792
    3. '7' → logprob: -2.3166427612304688
    4. '9' → logprob: -2.5666427612304688
    5. '5' → logprob: -4.066642761230469
    6. '3' → logprob: -6.441642761230469
    7. '4' → logprob: -6.691642761230469
    8. '10' → logprob: -9.441642761230469
    9. '-' → logprob: -9.816642761230469
    10. '2' → logprob: -11.566642761230469

Token 697: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2690833806991577
    2. ']' → logprob: -2.1440834999084473
    3. 'and' → logprob: -2.1440834999084473
    4. ']
' → logprob: -6.894083499908447
    5. ' or' → logprob: -8.019083023071289
    6. ' ]' → logprob: -8.894083023071289
    7. ']

' → logprob: -10.144083023071289
    8. '   ' → logprob: -10.894083023071289
    9. 'or' → logprob: -12.269083023071289
    10. ')' → logprob: -12.519083023071289

Token 698: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6361485719680786
    2. 'abs' → logprob: -1.5111485719680786
    3. 'p' → logprob: -2.636148452758789
    4. ' abs' → logprob: -3.011148452758789
    5. ' p' → logprob: -3.386148452758789
    6. '(' → logprob: -3.386148452758789
    7. ' ' → logprob: -3.761148452758789
    8. ' (' → logprob: -3.886148452758789
    9. '(p' → logprob: -4.886148452758789
    10. '(abs' → logprob: -5.011148452758789

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27614694833755493
    2. 'p' → logprob: -2.02614688873291
    3. 'abs' → logprob: -3.02614688873291
    4. '(' → logprob: -3.15114688873291
    5. 'can' → logprob: -5.02614688873291
    6. '(p' → logprob: -5.02614688873291
    7. ' ' → logprob: -6.90114688873291
    8. '(can' → logprob: -6.90114688873291
    9. '(abs' → logprob: -6.90114688873291
    10. ' (' → logprob: -7.27614688873291

Token 700: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6995214223861694
    2. '<=' → logprob: -0.6995214223861694
    3. ' <=' → logprob: -5.074521541595459
    4. '0' → logprob: -10.4495210647583
    5. ']<=' → logprob: -11.1995210647583
    6. ')<=' → logprob: -11.1995210647583
    7. '<' → logprob: -11.5745210647583
    8. 'e' → logprob: -11.6995210647583
    9. 'p' → logprob: -12.8245210647583
    10. '≤' → logprob: -12.9495210647583

Token 701: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0014046367723494768
    2. '0' → logprob: -6.876404762268066
    3. '<=' → logprob: -8.876404762268066
    4. '000' → logprob: -10.251404762268066
    5. '05' → logprob: -10.626404762268066
    6. '<|end|>' → logprob: -11.126404762268066
    7. '.' → logprob: -11.251404762268066
    8. '   ' → logprob: -11.376404762268066
    9. '4' → logprob: -11.376404762268066
    10. '1' → logprob: -11.501404762268066

Token 702: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0013778526335954666
    2. ' <=' → logprob: -6.626378059387207
    3. '<' → logprob: -10.876378059387207
    4. '.' → logprob: -11.126378059387207
    5. ')<=' → logprob: -12.126378059387207
    6. ']<=' → logprob: -12.376378059387207
    7. '≤' → logprob: -13.501378059387207
    8. '==' → logprob: -13.626378059387207
    9. '&lt' → logprob: -13.751378059387207
    10. '>=' → logprob: -14.126378059387207

Token 703: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '<p' → logprob: -17.50009536743164
    4. '   ' → logprob: -19.37509536743164
    5. ' ' → logprob: -19.87509536743164
    6. '(p' → logprob: -20.50009536743164
    7. '  ' → logprob: -20.62509536743164
    8. '	p' → logprob: -20.62509536743164
    9. ')p' → logprob: -21.62509536743164
    10. 'pt' → logprob: -21.87509536743164

Token 704: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8325677703833207e-05
    2. 'p' → logprob: -10.875028610229492
    3. '.' → logprob: -12.125028610229492
    4. '1' → logprob: -12.875028610229492
    5. '<=' → logprob: -14.750028610229492
    6. 'and' → logprob: -15.250028610229492
    7. ',' → logprob: -16.000028610229492
    8. '<' → logprob: -16.125028610229492
    9. '```' → logprob: -16.375028610229492
    10. '
' → logprob: -17.000028610229492

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.053629036992788315
    2. '[' → logprob: -3.053628921508789
    3. 'p' → logprob: -5.303628921508789
    4. ' p' → logprob: -10.553628921508789
    5. 'y' → logprob: -12.053628921508789
    6. ' ' → logprob: -12.428628921508789
    7. '(' → logprob: -12.428628921508789
    8. '<' → logprob: -13.053628921508789
    9. '{' → logprob: -13.053628921508789
    10. '<p' → logprob: -13.178628921508789

Token 706: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.001991682220250368
    2. '<' → logprob: -6.7519917488098145
    3. 'and' → logprob: -7.5019917488098145
    4. ' <=' → logprob: -9.126991271972656
    5. ' and' → logprob: -9.626991271972656
    6. ']<=' → logprob: -10.001991271972656
    7. ')<=' → logprob: -11.376991271972656
    8. '0' → logprob: -11.751991271972656
    9. '```' → logprob: -11.876991271972656
    10. '≤' → logprob: -12.001991271972656

Token 707: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.750017166137695
    4. '  ' → logprob: -16.500017166137695
    5. '5' → logprob: -16.750017166137695
    6. '    ' → logprob: -18.125017166137695
    7. '４' → logprob: -18.312517166137695
    8. '     ' → logprob: -18.375017166137695
    9. '2' → logprob: -18.937517166137695
    10. '' → logprob: -19.062517166137695

Token 708: '.' (ID: 13)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8072807192802429
    2. '.' → logprob: -1.3072807788848877
    3. ']' → logprob: -1.4322807788848877
    4. ']
' → logprob: -3.1822807788848877
    5. '0' → logprob: -7.057280540466309
    6. 'e' → logprob: -7.182280540466309
    7. '1' → logprob: -8.432280540466309
    8. ']

' → logprob: -8.682280540466309
    9. ' +' → logprob: -8.682280540466309
    10. '   ' → logprob: -8.807280540466309

Token 709: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.7962949275970459
    2. '0' → logprob: -1.046294927597046
    3. '1' → logprob: -2.421294927597046
    4. '5' → logprob: -2.671294927597046
    5. '9' → logprob: -4.046295166015625
    6. '001' → logprob: -4.796295166015625
    7. '   ' → logprob: -5.796295166015625
    8. '```' → logprob: -6.046295166015625
    9. '01' → logprob: -6.296295166015625
    10. '999' → logprob: -6.546295166015625

Token 710: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012368020601570606
    2. ']
' → logprob: -4.512368202209473
    3. ' ]' → logprob: -6.762368202209473
    4. ' and' → logprob: -10.012368202209473
    5. ' ]
' → logprob: -10.387368202209473
    6. ')]' → logprob: -10.637368202209473
    7. ']

' → logprob: -10.762368202209473
    8. '   ' → logprob: -11.012368202209473
    9. ']
' → logprob: -11.262368202209473
    10. 'and' → logprob: -12.262368202209473

Token 711: '       ' (ID: 309)
  Prédit: ' goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.3203660845756531
    2. 'goal' → logprob: -1.9453661441802979
    3. '       ' → logprob: -2.070366144180298
    4. '_goal' → logprob: -6.695365905761719
    5. '(goal' → logprob: -6.695365905761719
    6. '
' → logprob: -7.070365905761719
    7. '.goal' → logprob: -7.070365905761719
    8. '   ' → logprob: -8.070365905761719
    9. '<|end|>' → logprob: -8.445365905761719
    10. '        
' → logprob: -9.445365905761719

Token 712: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -0.0031793788075447083
    2. ' goal' → logprob: -5.753179550170898
    3. '       ' → logprob: -13.378179550170898
    4. '   ' → logprob: -17.0031795501709
    5. '(goal' → logprob: -17.2531795501709
    6. '_goal' → logprob: -17.3781795501709
    7. 'Goal' → logprob: -18.0031795501709
    8. '.goal' → logprob: -18.1281795501709
    9. ' ' → logprob: -18.7531795501709
    10. 'go' → logprob: -18.8781795501709

Token 713: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -7.3458322731312364e-06
    2. 'indices' → logprob: -12.375007629394531
    3. '"indices' → logprob: -13.500007629394531
    4. '```' → logprob: -14.875007629394531
    5. 'Indices' → logprob: -15.000007629394531
    6. '_' → logprob: -15.125007629394531
    7. '\' → logprob: -15.500007629394531
    8. '_indexes' → logprob: -15.750007629394531
    9. 's' → logprob: -16.00000762939453
    10. '_tokens' → logprob: -17.12500762939453

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132709264755249
    2. ' =' → logprob: -1.313270926475525
    3. '=[' → logprob: -11.938270568847656
    4. ' =[' → logprob: -13.063270568847656
    5. '＝' → logprob: -14.813270568847656
    6. '=[]' → logprob: -15.813270568847656
    7. '[' → logprob: -17.063270568847656
    8. '=[
' → logprob: -17.688270568847656
    9. '=

' → logprob: -17.813270568847656
    10. ',' → logprob: -18.688270568847656

Token 715: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008617054671049118
    2. ' [' → logprob: -4.758616924285889
    3. '[' → logprob: -13.133617401123047
    4. ' ' → logprob: -15.633617401123047
    5. '   ' → logprob: -15.633617401123047
    6. '[j' → logprob: -16.133617401123047
    7. '[p' → logprob: -16.758617401123047
    8. '[a' → logprob: -17.633617401123047
    9. '[k' → logprob: -17.758617401123047
    10. '[int' → logprob: -18.008617401123047

Token 716: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.700132997939363e-05
    2. ' i' → logprob: -11.000017166137695
    3. '           ' → logprob: -16.500017166137695
    4. '   ' → logprob: -16.750017166137695
    5. '       ' → logprob: -16.875017166137695
    6. '     ' → logprob: -17.875017166137695
    7. '                   ' → logprob: -18.250017166137695
    8. '         ' → logprob: -18.375017166137695
    9. '[i' → logprob: -18.375017166137695
    10. '               ' → logprob: -18.875017166137695

Token 717: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759409070014954
    2. ' for' → logprob: -0.8259409070014954
    3. '
' → logprob: -14.20094108581543
    4. ' ' → logprob: -15.20094108581543
    5. '   ' → logprob: -15.45094108581543
    6. '	for' → logprob: -15.82594108581543
    7. '```' → logprob: -17.32594108581543
    8. '       ' → logprob: -17.57594108581543
    9. ' 
' → logprob: -17.57594108581543
    10. '  ' → logprob: -18.32594108581543

Token 718: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005574395763687789
    2. ' i' → logprob: -7.5005574226379395
    3. 'p' → logprob: -12.375557899475098
    4. ',' → logprob: -16.12555694580078
    5. ',i' → logprob: -16.75055694580078
    6. ' ' → logprob: -18.12555694580078
    7. '	i' → logprob: -18.37555694580078
    8. '1' → logprob: -18.37555694580078
    9. ' p' → logprob: -18.62555694580078
    10. '0' → logprob: -18.75055694580078

Token 719: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.00352524034678936
    2. ',' → logprob: -5.878525257110596
    3. 'p' → logprob: -7.253525257110596
    4. 'for' → logprob: -12.253524780273438
    5. ' ,' → logprob: -12.503524780273438
    6. 'in' → logprob: -13.003524780273438
    7. ' in' → logprob: -15.003524780273438
    8. ',t' → logprob: -15.253524780273438
    9. ',s' → logprob: -15.753524780273438
    10. ',v' → logprob: -15.753524780273438

Token 720: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026303550228476524
    2. 'in' → logprob: -3.65130352973938
    3. ',' → logprob: -14.1513032913208
    4. ' ' → logprob: -14.6513032913208
    5. 'enumer' → logprob: -14.9013032913208
    6. 'import' → logprob: -15.0263032913208
    7. '[' → logprob: -15.5263032913208
    8. 'p' → logprob: -15.5263032913208
    9. 's' → logprob: -15.7763032913208
    10. 'ind' → logprob: -16.276304244995117

Token 721: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0015024791937321424
    2. ' enumerate' → logprob: -6.501502513885498
    3. 'enum' → logprob: -17.001502990722656
    4. 'points' → logprob: -17.501502990722656
    5. 'range' → logprob: -18.001502990722656
    6. 'en' → logprob: -18.501502990722656
    7. '.enumer' → logprob: -18.501502990722656
    8. ' points' → logprob: -19.251502990722656
    9. '
' → logprob: -19.376502990722656
    10. ' enumer' → logprob: -19.501502990722656

Token 722: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0007117166533134878
    2. 'points' → logprob: -7.250711917877197
    3. ' points' → logprob: -13.250711441040039
    4. '	points' → logprob: -16.75071144104004
    5. '.points' → logprob: -19.25071144104004
    6. 'Points' → logprob: -19.75071144104004
    7. 'oints' → logprob: -21.12571144104004
    8. '(parts' → logprob: -21.12571144104004
    9. '(' → logprob: -21.62571144104004
    10. '_points' → logprob: -22.37571144104004

Token 723: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04860905185341835
    2. 'if' → logprob: -3.0486090183258057
    3. ' in' → logprob: -11.298608779907227
    4. '        ' → logprob: -13.048608779907227
    5. '       ' → logprob: -13.548608779907227
    6. '   ' → logprob: -13.548608779907227
    7. '           ' → logprob: -13.923608779907227
    8. '         ' → logprob: -14.048608779907227
    9. 'in' → logprob: -14.298608779907227
    10. '          ' → logprob: -14.423608779907227

Token 724: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3132844567298889
    2. ' if' → logprob: -1.3132843971252441
    3. ' in' → logprob: -11.813284873962402
    4. 'f' → logprob: -12.063284873962402
    5. 'in' → logprob: -12.063284873962402
    6. '   ' → logprob: -13.688284873962402
    7. '       ' → logprob: -14.313284873962402
    8. '        ' → logprob: -14.438284873962402
    9. ' ' → logprob: -15.313284873962402
    10. '           ' → logprob: -15.563284873962402

Token 725: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.56102097814437e-05
    2. ' abs' → logprob: -10.000045776367188
    3. '(abs' → logprob: -16.000045776367188
    4. '4' → logprob: -17.875045776367188
    5. ' ' → logprob: -21.500045776367188
    6. '   ' → logprob: -21.625045776367188
    7. '.abs' → logprob: -21.750045776367188
    8. '
' → logprob: -22.250045776367188
    9. '```' → logprob: -23.500045776367188
    10. 'fabs' → logprob: -23.875045776367188

Token 726: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.875001907348633
    3. 'p' → logprob: -14.250001907348633
    4. '(' → logprob: -15.000001907348633
    5. '((' → logprob: -17.500001907348633
    6. ' p' → logprob: -19.500001907348633
    7. '(
' → logprob: -20.125001907348633
    8. '<p' → logprob: -21.125001907348633
    9. '(i' → logprob: -21.125001907348633
    10. '>' → logprob: -21.875001907348633

Token 727: '[' (ID: 58)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02467334270477295
    2. '[' → logprob: -3.7746734619140625
    3. '[p' → logprob: -7.1496734619140625
    4. 'p' → logprob: -7.5246734619140625
    5. '-p' → logprob: -9.399673461914062
    6. '(' → logprob: -12.524673461914062
    7. '-' → logprob: -12.899673461914062
    8. '0' → logprob: -13.024673461914062
    9. '<|end|>' → logprob: -13.399673461914062
    10. ' p' → logprob: -13.649673461914062

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029396675527095795
    2. '[' → logprob: -6.377939701080322
    3. 'p' → logprob: -6.752939701080322
    4. '(' → logprob: -10.752939224243164
    5. 'x' → logprob: -10.877939224243164
    6. '(p' → logprob: -11.377939224243164
    7. '4' → logprob: -11.627939224243164
    8. 'i' → logprob: -13.002939224243164
    9. '[p' → logprob: -13.502939224243164
    10. '1' → logprob: -13.752939224243164

Token 729: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0053472439758479595
    2. '[' → logprob: -5.25534725189209
    3. '(p' → logprob: -9.38034725189209
    4. '(' → logprob: -11.25534725189209
    5. ' -' → logprob: -11.88034725189209
    6. 'p' → logprob: -12.00534725189209
    7. '-p' → logprob: -13.25534725189209
    8. ' p' → logprob: -15.13034725189209
    9. '()-' → logprob: -15.13034725189209
    10. '–' → logprob: -15.38034725189209

Token 730: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -11.50001049041748
    3. '(' → logprob: -14.62501049041748
    4. '```' → logprob: -16.000011444091797
    5. '   ' → logprob: -17.125011444091797
    6. '.' → logprob: -17.875011444091797
    7. '' → logprob: -18.250011444091797
    8. '{' → logprob: -18.437511444091797
    9. '-' → logprob: -18.625011444091797
    10. 'float' → logprob: -18.750011444091797

Token 731: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00022773505770601332
    2. '[' → logprob: -8.500227928161621
    3. '-' → logprob: -11.250227928161621
    4. '0' → logprob: -12.375227928161621
    5. 'p' → logprob: -13.375227928161621
    6. ' .' → logprob: -13.500227928161621
    7. '```' → logprob: -13.750227928161621
    8. '(' → logprob: -14.125227928161621
    9. ')' → logprob: -15.000227928161621
    10. '1' → logprob: -15.250227928161621

Token 732: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04863414540886879
    2. '9' → logprob: -3.0486340522766113
    3. ' ' → logprob: -10.54863452911377
    4. '1' → logprob: -11.29863452911377
    5. '```' → logprob: -13.17363452911377
    6. '09' → logprob: -13.67363452911377
    7. '   ' → logprob: -13.67363452911377
    8. '-' → logprob: -14.04863452911377
    9. '``' → logprob: -14.67363452911377
    10. '**' → logprob: -15.04863452911377

Token 733: ')<' (ID: 62287)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5507704615592957
    2. ')<' → logprob: -1.1757705211639404
    3. '-p' → logprob: -2.1757705211639404
    4. ' -' → logprob: -6.925770282745361
    5. '<p' → logprob: -9.30077075958252
    6. ')<=' → logprob: -9.67577075958252
    7. ')' → logprob: -9.80077075958252
    8. '(p' → logprob: -10.05077075958252
    9. '<' → logprob: -10.17577075958252
    10. ' ' → logprob: -10.92577075958252

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.500017166137695
    4. '=' → logprob: -17.062517166137695
    5. '0' → logprob: -17.187517166137695
    6. '```' → logprob: -17.625017166137695
    7. '(' → logprob: -17.687517166137695
    8. '[' → logprob: -18.000017166137695
    9. '  ' → logprob: -18.187517166137695
    10. '
' → logprob: -18.500017166137695

Token 735: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006717386189848185
    2. 'e' → logprob: -5.006717205047607
    3. '9' → logprob: -13.506717681884766
    4. '```' → logprob: -15.006717681884766
    5. '-e' → logprob: -16.006717681884766
    6. '−' → logprob: -17.006717681884766
    7. '``' → logprob: -17.131717681884766
    8. ' -' → logprob: -17.631717681884766
    9. '[' → logprob: -17.881717681884766
    10. '=' → logprob: -18.006717681884766

Token 736: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.466968650580384e-05
    2. '9' → logprob: -9.875054359436035
    3. '```' → logprob: -13.375054359436035
    4. '``' → logprob: -14.875054359436035
    5. '−' → logprob: -16.00005531311035
    6. '   ' → logprob: -16.00005531311035
    7. '-
' → logprob: -16.37505531311035
    8. 'e' → logprob: -16.43755531311035
    9. '       ' → logprob: -16.50005531311035
    10. '-n' → logprob: -16.62505531311035

Token 737: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.62500286102295
    3. '09' → logprob: -14.75000286102295
    4. ' ' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.75000286102295
    6. '-' → logprob: -15.81250286102295
    7. '``' → logprob: -16.000003814697266
    8. 's' → logprob: -16.750003814697266
    9. '6' → logprob: -16.937503814697266
    10. '4' → logprob: -17.500003814697266

Token 738: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692873179912567
    2. 'and' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.626928329467773
    4. '```' → logprob: -16.876928329467773
    5. 'def' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.126928329467773
    7. 'if' → logprob: -17.251928329467773
    8. '        ' → logprob: -17.251928329467773
    9. '
' → logprob: -17.251928329467773
    10. '0' → logprob: -17.376928329467773

Token 739: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889044284820557
    2. ' ' → logprob: -2.578890323638916
    3. ' (' → logprob: -15.453890800476074
    4. '   ' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.078889846801758
    6. '(' → logprob: -16.328889846801758
    7. '  ' → logprob: -16.328889846801758
    8. '
' → logprob: -17.203889846801758
    9. ' 
' → logprob: -17.641389846801758
    10. '1' → logprob: -17.703889846801758

Token 740: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004079112783074379
    2. ' ' → logprob: -5.504079341888428
    3. 'p' → logprob: -15.12907886505127
    4. '(' → logprob: -15.62907886505127
    5. ' (' → logprob: -15.87907886505127
    6. ' p' → logprob: -17.004079818725586
    7. '   ' → logprob: -17.254079818725586
    8. ' ' → logprob: -17.379079818725586
    9. '  ' → logprob: -17.691579818725586
    10. '00' → logprob: -17.879079818725586

Token 741: '.' (ID: 13)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.656697154045105
    2. '.' → logprob: -0.781697154045105
    3. '[' → logprob: -3.9066972732543945
    4. 'p' → logprob: -6.9066972732543945
    5. '(p' → logprob: -7.0316972732543945
    6. ' <=' → logprob: -7.2816972732543945
    7. '[p' → logprob: -8.406697273254395
    8. ']<=' → logprob: -8.656697273254395
    9. '```' → logprob: -8.906697273254395
    10. ')<=' → logprob: -8.906697273254395

Token 742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018169842660427094
    2. '9' → logprob: -4.01816987991333
    3. '[' → logprob: -12.143169403076172
    4. '<=' → logprob: -12.768169403076172
    5. '(' → logprob: -12.893169403076172
    6. '   ' → logprob: -13.268169403076172
    7. '       ' → logprob: -13.518169403076172
    8. '4' → logprob: -14.018169403076172
    9. '```' → logprob: -14.018169403076172
    10. ' ' → logprob: -14.268169403076172

Token 743: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -2.8444881536415778e-05
    2. ' <=' → logprob: -10.875028610229492
    3. '>=' → logprob: -11.750028610229492
    4. ']<=' → logprob: -14.125028610229492
    5. '<p' → logprob: -14.500028610229492
    6. ')<=' → logprob: -15.500028610229492
    7. '
' → logprob: -16.750028610229492
    8. 'p' → logprob: -17.250028610229492
    9. '(p' → logprob: -17.750028610229492
    10. '```' → logprob: -17.750028610229492

Token 744: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.5491004129871726e-05
    2. ' p' → logprob: -10.000045776367188
    3. '(p' → logprob: -17.125045776367188
    4. '   ' → logprob: -18.000045776367188
    5. '<p' → logprob: -18.625045776367188
    6. '	p' → logprob: -18.875045776367188
    7. '
' → logprob: -19.000045776367188
    8. ' ' → logprob: -19.375045776367188
    9. '[p' → logprob: -20.000045776367188
    10. '  ' → logprob: -20.125045776367188

Token 745: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008734061382710934
    2. '-' → logprob: -5.008734226226807
    3. '(p' → logprob: -7.008734226226807
    4. '-p' → logprob: -7.133734226226807
    5. '[p' → logprob: -8.758733749389648
    6. '-[' → logprob: -9.508733749389648
    7. 'p' → logprob: -10.758733749389648
    8. ' [' → logprob: -11.008733749389648
    9. ' -' → logprob: -11.508733749389648
    10. '[i' → logprob: -11.758733749389648

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011010414455085993
    2. '[' → logprob: -6.876101016998291
    3. 'p' → logprob: -9.62610149383545
    4. 'i' → logprob: -13.75110149383545
    5. '(' → logprob: -15.12610149383545
    6. ' p' → logprob: -15.25110149383545
    7. '```' → logprob: -16.126100540161133
    8. 'y' → logprob: -16.251100540161133
    9. '(p' → logprob: -16.501100540161133
    10. '   ' → logprob: -16.876100540161133

Token 747: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07245661318302155
    2. ']<=' → logprob: -3.0724565982818604
    3. '[' → logprob: -4.0724568367004395
    4. '(p' → logprob: -5.9474568367004395
    5. '[p' → logprob: -6.0724568367004395
    6. ')<=' → logprob: -7.3224568367004395
    7. 'p' → logprob: -7.9474568367004395
    8. '-p' → logprob: -8.947456359863281
    9. '[i' → logprob: -8.947456359863281
    10. '<p' → logprob: -9.072456359863281

Token 748: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '```' → logprob: -19.750003814697266
    5. '４' → logprob: -20.000003814697266
    6. '  ' → logprob: -20.250003814697266
    7. '' → logprob: -20.750003814697266
    8. '۴' → logprob: -21.125003814697266
    9. '5' → logprob: -21.312503814697266
    10. '٤' → logprob: -21.375003814697266

Token 749: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.7755875129951164e-05
    2. '[' → logprob: -11.12504768371582
    3. '0' → logprob: -11.75004768371582
    4. '<=' → logprob: -11.75004768371582
    5. '[i' → logprob: -12.00004768371582
    6. '<p' → logprob: -12.87504768371582
    7. '1' → logprob: -13.50004768371582
    8. '<|end|>' → logprob: -13.75004768371582
    9. '(p' → logprob: -14.50004768371582
    10. '       ' → logprob: -14.62504768371582

Token 750: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007161272224038839
    2. '9' → logprob: -7.250716209411621
    3. ' ' → logprob: -12.625716209411621
    4. '```' → logprob: -13.250716209411621
    5. '   ' → logprob: -14.375716209411621
    6. '4' → logprob: -16.250715255737305
    7. '       ' → logprob: -16.250715255737305
    8. 'f' → logprob: -16.625715255737305
    9. '``' → logprob: -16.625715255737305
    10. '+' → logprob: -17.125715255737305

Token 751: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.027225754223764e-05
    2. ' ]' → logprob: -10.500060081481934
    3. ']
' → logprob: -10.625060081481934
    4. ')]' → logprob: -12.625060081481934
    5. '   ' → logprob: -13.375060081481934
    6. '()]' → logprob: -13.750060081481934
    7. '       ' → logprob: -14.000060081481934
    8. ')' → logprob: -15.000060081481934
    9. '<|end|>' → logprob: -15.250060081481934
    10. ']

' → logprob: -15.375060081481934

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1540910303592682
    2. '   ' → logprob: -2.4040911197662354
    3. 'dist' → logprob: -3.9040911197662354
    4. 'result' → logprob: -4.404090881347656
    5. 'res' → logprob: -4.654090881347656
    6. 'd' → logprob: -5.529090881347656
    7. 'distance' → logprob: -5.904090881347656
    8. '```' → logprob: -6.279090881347656
    9. ' dist' → logprob: -8.029090881347656
    10. 'if' → logprob: -8.154090881347656

Token 753: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7946551442146301
    2. '       ' → logprob: -1.5446550846099854
    3. 'dist' → logprob: -1.5446550846099854
    4. 'd' → logprob: -2.9196550846099854
    5. 'result' → logprob: -3.4196550846099854
    6. ' res' → logprob: -4.0446553230285645
    7. ' dist' → logprob: -4.7946553230285645
    8. 'distance' → logprob: -5.4196553230285645
    9. ' d' → logprob: -6.6696553230285645
    10. '   ' → logprob: -6.9196553230285645

Token 754: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6378384828567505
    2. ' not' → logprob: -1.0128384828567505
    3. 'len' → logprob: -2.637838363647461
    4. 'start' → logprob: -3.512838363647461
    5. ' len' → logprob: -5.887838363647461
    6. 'math' → logprob: -6.512838363647461
    7. ' start' → logprob: -6.762838363647461
    8. 'dist' → logprob: -7.137838363647461
    9. ' math' → logprob: -8.012838363647461
    10. 'all' → logprob: -8.762838363647461

Token 755: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020457327365875244
    2. ' start' → logprob: -4.0204572677612305
    3. 'goal' → logprob: -6.2704572677612305
    4. '(start' → logprob: -7.8954572677612305
    5. ' goal' → logprob: -10.39545726776123
    6. ' (' → logprob: -12.64545726776123
    7. '(goal' → logprob: -12.64545726776123
    8. '(' → logprob: -12.64545726776123
    9. ' ' → logprob: -15.77045726776123
    10. 'possible' → logprob: -16.020458221435547

Token 756: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -1.1160349458805285e-05
    2. 'indices' → logprob: -11.750011444091797
    3. '_' → logprob: -14.000011444091797
    4. '\' → logprob: -14.125011444091797
    5. '
' → logprob: -14.375011444091797
    6. 's' → logprob: -15.125011444091797
    7. '_
' → logprob: -15.375011444091797
    8. ' _' → logprob: -15.625011444091797
    9. '"indices' → logprob: -15.750011444091797
    10. '   ' → logprob: -16.250011444091797

Token 757: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21733202040195465
    2. ':
' → logprob: -1.7173320055007935
    3. ' or' → logprob: -4.217331886291504
    4. 'or' → logprob: -6.967331886291504
    5. '       ' → logprob: -10.467331886291504
    6. ':return' → logprob: -10.967331886291504
    7. '   ' → logprob: -11.092331886291504
    8. 'print' → logprob: -11.342331886291504
    9. '           ' → logprob: -11.467331886291504
    10. ':

' → logprob: -11.592331886291504

Token 758: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16022492945194244
    2. 'not' → logprob: -1.9102249145507812
    3. '(not' → logprob: -15.285224914550781
    4. '   ' → logprob: -16.16022491455078
    5. '	not' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.41022491455078
    7. 'len' → logprob: -16.66022491455078
    8. '       ' → logprob: -16.91022491455078
    9. '```' → logprob: -17.03522491455078
    10. '_not' → logprob: -17.16022491455078

Token 759: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.002475777640938759
    2. ' goal' → logprob: -6.002475738525391
    3. '(goal' → logprob: -16.25247573852539
    4. ' ' → logprob: -17.87747573852539
    5. '_goal' → logprob: -17.87747573852539
    6. 'Goal' → logprob: -18.25247573852539
    7. 'go' → logprob: -18.25247573852539
    8. '   ' → logprob: -18.62747573852539
    9. '  ' → logprob: -18.62747573852539
    10. 'len' → logprob: -19.50247573852539

Token 760: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -7.93448489275761e-05
    2. 'indices' → logprob: -9.750079154968262
    3. 's' → logprob: -11.875079154968262
    4. '   ' → logprob: -13.000079154968262
    5. 'goal' → logprob: -13.250079154968262
    6. '       ' → logprob: -13.375079154968262
    7. '
' → logprob: -13.625079154968262
    8. '_' → logprob: -13.625079154968262
    9. ' _' → logprob: -13.875079154968262
    10. 'Indices' → logprob: -13.875079154968262

Token 761: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14280888438224792
    2. ':
' → logprob: -2.0178089141845703
    3. '           ' → logprob: -9.14280891418457
    4. '       ' → logprob: -11.39280891418457
    5. ' or' → logprob: -11.76780891418457
    6. ':

' → logprob: -13.01780891418457
    7. '   ' → logprob: -14.26780891418457
    8. 'print' → logprob: -14.39280891418457
    9. '{
' → logprob: -14.39280891418457
    10. '<|end|>' → logprob: -14.39280891418457

Token 762: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002246357616968453
    2. ':
' → logprob: -9.000225067138672
    3. ':' → logprob: -9.500225067138672
    4. '               ' → logprob: -12.250225067138672
    5. '       ' → logprob: -12.250225067138672
    6. '```' → logprob: -12.500225067138672
    7. '
' → logprob: -12.750225067138672
    8. 'print' → logprob: -13.250225067138672
    9. '<|end|>' → logprob: -13.625225067138672
    10. ',' → logprob: -13.625225067138672

Token 763: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05913357809185982
    2. '           ' → logprob: -3.559133529663086
    3. ' print' → logprob: -3.559133529663086
    4. '       ' → logprob: -7.934133529663086
    5. '   ' → logprob: -9.559133529663086
    6. '	print' → logprob: -10.809133529663086
    7. '```' → logprob: -10.809133529663086
    8. '               ' → logprob: -11.184133529663086
    9. '	       ' → logprob: -12.434133529663086
    10. ' ' → logprob: -12.559133529663086

Token 764: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. '('' → logprob: -15.00001335144043
    4. '(
' → logprob: -21.12501335144043
    5. '("\"' → logprob: -21.25001335144043
    6. ' ("' → logprob: -21.50001335144043
    7. '("""' → logprob: -21.62501335144043
    8. '('"' → logprob: -21.75001335144043
    9. '("(' → logprob: -22.37501335144043
    10. '(("' → logprob: -22.37501335144043

Token 765: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -1.9361264946837764e-07
    2. ' impossible' → logprob: -15.875
    3. 'Impossible' → logprob: -18.0
    4. 'imp' → logprob: -19.25
    5. '"' → logprob: -20.375
    6. 'possible' → logprob: -21.125
    7. '	im' → logprob: -22.375
    8. 'invalid' → logprob: -23.0
    9. '-im' → logprob: -23.5
    10. '``' → logprob: -23.75

Token 766: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -2.5776860184123507e-06
    2. 'poss' → logprob: -13.75000286102295
    3. 'Possible' → logprob: -14.62500286102295
    4. '_possible' → logprob: -14.62500286102295
    5. 'oss' → logprob: -15.12500286102295
    6. 'pos' → logprob: -16.000001907348633
    7. ' possible' → logprob: -16.125001907348633
    8. 'p' → logprob: -17.750001907348633
    9. 'possibly' → logprob: -19.125001907348633
    10. 'im' → logprob: -19.125001907348633

Token 767: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4250945746898651
    2. '")
' → logprob: -1.4250946044921875
    3. '           ' → logprob: -2.8000946044921875
    4. '")' → logprob: -3.1750946044921875
    5. ')
' → logprob: -6.3000946044921875
    6. ')' → logprob: -6.8000946044921875
    7. '   ' → logprob: -9.050094604492188
    8. '               ' → logprob: -9.800094604492188
    9. ')")
' → logprob: -10.050094604492188
    10. '")
' → logprob: -11.300094604492188

Token 768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005345634999684989
    2. '       ' → logprob: -7.750534534454346
    3. '               ' → logprob: -9.500535011291504
    4. '```' → logprob: -11.625535011291504
    5. ' continue' → logprob: -12.125535011291504
    6. 'continue' → logprob: -12.250535011291504
    7. '<|end|>' → logprob: -12.750535011291504
    8. '   ' → logprob: -12.750535011291504
    9. '                   ' → logprob: -14.250535011291504
    10. ',' → logprob: -14.375535011291504

Token 769: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020449401927180588
    2. '       ' → logprob: -9.125204086303711
    3. 'continue' (adapté à ' continue') → logprob: -9.625204086303711
    4. ' continue' → logprob: -10.750204086303711
    5. '               ' → logprob: -12.750204086303711
    6. '		' → logprob: -13.000204086303711
    7. '   ' → logprob: -13.375204086303711
    8. '	       ' → logprob: -14.125204086303711
    9. '	continue' → logprob: -15.500204086303711
    10. ' ' → logprob: -16.12520408630371

Token 770: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033413327764719725
    2. 'result' → logprob: -6.378341197967529
    3. ' result' → logprob: -7.753341197967529
    4. '```' → logprob: -8.253341674804688
    5. 'dist' → logprob: -8.378341674804688
    6. 'distance' → logprob: -8.628341674804688
    7. 'res' → logprob: -8.753341674804688
    8. '
' → logprob: -8.753341674804688
    9. 'd' → logprob: -10.003341674804688
    10. '   ' → logprob: -10.253341674804688

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003577495808713138
    2. '   ' → logprob: -9.000357627868652
    3. 'result' → logprob: -9.500357627868652
    4. 'distance' → logprob: -10.250357627868652
    5. '           ' → logprob: -10.500357627868652
    6. 'd' → logprob: -10.500357627868652
    7. 'dist' → logprob: -10.750357627868652
    8. '
' → logprob: -11.125357627868652
    9. 'next' → logprob: -11.875357627868652
    10. '```' → logprob: -12.375357627868652

Token 772: ' ans' (ID: 3345)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0974062830209732
    2. 'dist' → logprob: -2.8474063873291016
    3. 'd' → logprob: -3.9724063873291016
    4. 'result' → logprob: -4.597406387329102
    5. '       ' → logprob: -6.097406387329102
    6. ' res' → logprob: -6.472406387329102
    7. 'distance' → logprob: -7.222406387329102
    8. 'ans' (adapté à ' ans') → logprob: -7.472406387329102
    9. ' dist' → logprob: -8.097406387329102
    10. 'cost' → logprob: -9.472406387329102

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42874017357826233
    2. '=' → logprob: -1.05374014377594
    3. ' ' → logprob: -11.178740501403809
    4. ',' → logprob: -11.803740501403809
    5. '   ' → logprob: -11.928740501403809
    6. ' =
' → logprob: -13.303740501403809
    7. '_' → logprob: -13.303740501403809
    8. ')' → logprob: -13.553740501403809
    9. '    ' → logprob: -14.178740501403809
    10. ' =)' → logprob: -14.303740501403809

Token 774: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005547016044147313
    2. ' d' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.375555038452148
    4. 'round' → logprob: -17.00055503845215
    5. '	d' → logprob: -17.12555503845215
    6. '  ' → logprob: -18.25055503845215
    7. ' ' → logprob: -18.37555503845215
    8. '       ' → logprob: -18.87555503845215
    9. 'dist' → logprob: -19.00055503845215
    10. '"d' → logprob: -19.12555503845215

Token 775: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -7.896309739408025e-07
    2. 'ijk' → logprob: -14.125000953674316
    3. 'ij' → logprob: -18.375
    4. 'ijkl' → logprob: -20.0
    5. 'jik' → logprob: -20.375
    6. 'ijks' → logprob: -20.75
    7. '```' → logprob: -21.75
    8. 'ijs' → logprob: -22.875
    9. 'j' → logprob: -23.25
    10. 'ijkt' → logprob: -23.5

Token 776: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.875004768371582
    4. '(
' → logprob: -16.375003814697266
    5. '(Graph' → logprob: -16.625003814697266
    6. '(grammar' → logprob: -17.000003814697266
    7. '	graph' → logprob: -17.375003814697266
    8. '(game' → logprob: -17.625003814697266
    9. '(grid' → logprob: -18.000003814697266
    10. 'graph' → logprob: -18.500003814697266

Token 777: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012734019197523594
    2. '(graph' → logprob: -4.7627339363098145
    3. ',start' → logprob: -5.5127339363098145
    4. '(start' → logprob: -10.137734413146973
    5. ' ,' → logprob: -11.012734413146973
    6. 'graph' → logprob: -11.887734413146973
    7. '(' → logprob: -12.137734413146973
    8. ',end' → logprob: -13.137734413146973
    9. ',(' → logprob: -13.262734413146973
    10. ',[' → logprob: -13.887734413146973

Token 778: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -1.0921942703134846e-05
    2. 'indices' → logprob: -11.50001049041748
    3. 'Indices' → logprob: -14.62501049041748
    4. '"indices' → logprob: -16.250011444091797
    5. 'start' → logprob: -16.875011444091797
    6. '(indices' → logprob: -17.000011444091797
    7. ',' → logprob: -18.000011444091797
    8. 's' → logprob: -18.375011444091797
    9. '
' → logprob: -18.750011444091797
    10. '_,' → logprob: -19.000011444091797

Token 779: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ' ,' → logprob: -11.250016212463379
    3. '(goal' → logprob: -13.125016212463379
    4. ',
' → logprob: -14.000016212463379
    5. 'goal' → logprob: -14.500016212463379
    6. '```' → logprob: -16.375017166137695
    7. '   ' → logprob: -18.625017166137695
    8. '       ' → logprob: -19.000017166137695
    9. ',[' → logprob: -19.250017166137695
    10. ',
' → logprob: -19.250017166137695

Token 780: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.001170225441455841
    2. ' goal' → logprob: -6.7511701583862305
    3. '(goal' → logprob: -18.251171112060547
    4. '.goal' → logprob: -20.251171112060547
    5. '   ' → logprob: -20.626171112060547
    6. '_goal' → logprob: -21.001171112060547
    7. 'Goal' → logprob: -21.751171112060547
    8. ' ' → logprob: -22.001171112060547
    9. '       ' → logprob: -22.251171112060547
    10. 'go' → logprob: -22.376171112060547

Token 781: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.00010688089241739362
    2. 'indices' → logprob: -9.250106811523438
    3. 's' → logprob: -11.750106811523438
    4. 'goal' → logprob: -13.750106811523438
    5. 'Indices' → logprob: -14.000106811523438
    6. '"indices' → logprob: -14.875106811523438
    7. '_indexes' → logprob: -15.875106811523438
    8. '_ind' → logprob: -16.500106811523438
    9. '```' → logprob: -16.750106811523438
    10. '[' → logprob: -16.750106811523438

Token 782: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048743151128292084
    2. ')' → logprob: -3.04874324798584
    3. '       ' → logprob: -8.92374324798584
    4. '   ' → logprob: -11.79874324798584
    5. ')
' → logprob: -11.79874324798584
    6. '()
' → logprob: -13.42374324798584
    7. 'if' → logprob: -13.67374324798584
    8. '())
' → logprob: -13.67374324798584
    9. ' )
' → logprob: -13.92374324798584
    10. '
' → logprob: -14.04874324798584

Token 783: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2929697036743164
    2. '       ' → logprob: -1.4179697036743164
    3. '<|end|>' → logprob: -5.042969703674316
    4. ' if' → logprob: -6.292969703674316
    5. '```' → logprob: -6.292969703674316
    6. '
' → logprob: -7.417969703674316
    7. 'if' → logprob: -7.917969703674316
    8. 'print' → logprob: -8.792969703674316
    9. '<|end|>' → logprob: -9.292969703674316
    10. '	if' → logprob: -9.417969703674316

Token 784: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08018209785223007
    2. '       ' → logprob: -2.5801820755004883
    3. ' if' → logprob: -6.705182075500488
    4. '   ' → logprob: -9.955182075500488
    5. 'print' → logprob: -11.080182075500488
    6. '	if' → logprob: -12.705182075500488
    7. '```' → logprob: -14.705182075500488
    8. 'import' → logprob: -15.580182075500488
    9. ' ' → logprob: -16.830183029174805
    10. '           ' → logprob: -16.955183029174805

Token 785: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04337035119533539
    2. 'math' → logprob: -3.293370246887207
    3. ' ans' → logprob: -5.418370246887207
    4. ' math' → logprob: -7.043370246887207
    5. '(ans' → logprob: -12.168370246887207
    6. '   ' → logprob: -14.418370246887207
    7. '	ans' → logprob: -14.418370246887207
    8. 'abs' → logprob: -14.543370246887207
    9. '(math' → logprob: -15.918370246887207
    10. '_ans' → logprob: -16.168371200561523

Token 786: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4291476607322693
    2. '==' → logprob: -1.054147720336914
    3. '<' → logprob: -8.429147720336914
    4. ' <' → logprob: -9.054147720336914
    5. '>=' → logprob: -10.554147720336914
    6. '==-' → logprob: -10.679147720336914
    7. '<float' → logprob: -11.304147720336914
    8. '>' → logprob: -11.304147720336914
    9. ' >=' → logprob: -11.929147720336914
    10. '```' → logprob: -12.054147720336914

Token 787: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -7.896309739408025e-07
    2. ' math' → logprob: -14.250000953674316
    3. 'float' → logprob: -17.0
    4. '   ' → logprob: -18.625
    5. '(math' → logprob: -21.0
    6. 'Math' → logprob: -22.125
    7. '0' → logprob: -22.625
    8. '  ' → logprob: -23.5
    9. '.math' → logprob: -23.5
    10. '```' → logprob: -23.5

Token 788: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.00012654215970542282
    2. '.' → logprob: -9.125126838684082
    3. 'inf' → logprob: -11.375126838684082
    4. '.infinity' → logprob: -12.250126838684082
    5. ' .' → logprob: -14.750126838684082
    6. '```' → logprob: -15.000126838684082
    7. '.in' → logprob: -15.750126838684082
    8. ' inf' → logprob: -16.500125885009766
    9. '.is' → logprob: -16.500125885009766
    10. '
' → logprob: -17.125125885009766

Token 789: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2911980450153351
    2. ':
' → logprob: -1.4161980152130127
    3. '       ' → logprob: -5.291198253631592
    4. '           ' → logprob: -5.791198253631592
    5. 'print' → logprob: -6.666198253631592
    6. '   ' → logprob: -8.041197776794434
    7. ' or' → logprob: -9.916197776794434
    8. '):
' → logprob: -10.166197776794434
    9. '.' → logprob: -10.541197776794434
    10. '=' → logprob: -10.666197776794434

Token 790: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13556502759456635
    2. '           ' → logprob: -2.2605650424957275
    3. 'print' → logprob: -4.385564804077148
    4. ' print' → logprob: -4.635564804077148
    5. '	       ' → logprob: -9.135564804077148
    6. '               ' → logprob: -9.635564804077148
    7. '<|end|>' → logprob: -10.010564804077148
    8. '	print' → logprob: -10.385564804077148
    9. '   ' → logprob: -10.885564804077148
    10. '(print' → logprob: -11.135564804077148

Token 791: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04952717199921608
    2. ' print' → logprob: -3.049527168273926
    3. '       ' → logprob: -7.549527168273926
    4. '           ' → logprob: -7.799527168273926
    5. '	print' → logprob: -13.424527168273926
    6. '```' → logprob: -14.049527168273926
    7. '   ' → logprob: -14.549527168273926
    8. '               ' → logprob: -15.299527168273926
    9. '.print' → logprob: -17.674528121948242
    10. '(print' → logprob: -17.799528121948242

Token 792: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.1472419600977446e-06
    2. '(im' → logprob: -14.000000953674316
    3. '('' → logprob: -16.250001907348633
    4. ' ("' → logprob: -16.375001907348633
    5. '(' → logprob: -17.625001907348633
    6. 'im' → logprob: -18.875001907348633
    7. '"' → logprob: -19.625001907348633
    8. '(("' → logprob: -22.000001907348633
    9. 'Impossible' → logprob: -22.500001907348633
    10. '	im' → logprob: -23.125001907348633

Token 793: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -6.034592388459714e-06
    2. '"' → logprob: -12.125005722045898
    3. ' impossible' → logprob: -15.625005722045898
    4. ''im' → logprob: -15.750005722045898
    5. 'Impossible' → logprob: -16.1250057220459
    6. 'imp' → logprob: -16.5000057220459
    7. '	im' → logprob: -16.7500057220459
    8. '(im' → logprob: -17.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. '-im' → logprob: -18.6250057220459

Token 794: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -2.339278580620885e-06
    2. 'poss' → logprob: -13.375001907348633
    3. 'Possible' → logprob: -15.125001907348633
    4. '_possible' → logprob: -15.875001907348633
    5. ' possible' → logprob: -16.250001907348633
    6. 'pos' → logprob: -16.250001907348633
    7. 'oss' → logprob: -17.375001907348633
    8. 'posable' → logprob: -18.000001907348633
    9. 'pass' → logprob: -18.000001907348633
    10. 'p' → logprob: -18.375001907348633

Token 795: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26205974817276
    2. ')' → logprob: -1.6370596885681152
    3. '")' → logprob: -3.7620596885681152
    4. ')
' → logprob: -4.762059688568115
    5. '")
' → logprob: -5.762059688568115
    6. 'else' → logprob: -7.012059688568115
    7. ' else' → logprob: -9.512060165405273
    8. '   ' → logprob: -10.387060165405273
    9. '<|end|>' → logprob: -10.762060165405273
    10. ')")
' → logprob: -11.512060165405273

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020020268857479095
    2. 'else' → logprob: -8.625200271606445
    3. ' else' → logprob: -11.125200271606445
    4. '   ' → logprob: -13.500200271606445
    5. '```' → logprob: -13.750200271606445
    6. '<|end|>' → logprob: -13.750200271606445
    7. '           ' → logprob: -14.125200271606445
    8. '	' → logprob: -14.500200271606445
    9. ')' → logprob: -14.750200271606445
    10. '(' → logprob: -16.500200271606445

Token 797: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16482043266296387
    2. 'else' (adapté à ' else') → logprob: -1.9148204326629639
    3. ' else' → logprob: -5.414820671081543
    4. '   ' → logprob: -9.039820671081543
    5. '	else' → logprob: -12.039820671081543
    6. '<|end|>' → logprob: -12.664820671081543
    7. 'elif' → logprob: -13.039820671081543
    8. '           ' → logprob: -13.664820671081543
    9. '	' → logprob: -13.789820671081543
    10. '```' → logprob: -14.289820671081543

Token 798: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01076706126332283
    2. ' print' → logprob: -5.385766983032227
    3. ':
' → logprob: -5.510766983032227
    4. 'print' → logprob: -6.760766983032227
    5. ':' → logprob: -7.135766983032227
    6. '       ' → logprob: -10.385766983032227
    7. '{' → logprob: -10.760766983032227
    8. ' :
' → logprob: -11.135766983032227
    9. '(f' → logprob: -11.385766983032227
    10. '(' → logprob: -11.385766983032227

Token 799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014376221224665642
    2. ' print' → logprob: -5.014376163482666
    3. 'print' → logprob: -5.514376163482666
    4. '       ' → logprob: -5.639376163482666
    5. '   ' → logprob: -10.514376640319824
    6. '               ' → logprob: -11.639376640319824
    7. '```' → logprob: -11.889376640319824
    8. '{' → logprob: -13.639376640319824
    9. ' f' → logprob: -13.764376640319824
    10. '         ' → logprob: -14.639376640319824

Token 800: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5807943940162659
    2. 'print' (adapté à ' print') → logprob: -0.8307943940162659
    3. '           ' → logprob: -5.330794334411621
    4. '{' → logprob: -13.955794334411621
    5. '   ' → logprob: -13.955794334411621
    6. 'printf' → logprob: -14.830794334411621
    7. '       ' → logprob: -14.955794334411621
    8. '	print' → logprob: -16.080795288085938
    9. '               ' → logprob: -16.205795288085938
    10. ' {:.' → logprob: -16.205795288085938

Token 801: '(ans' (ID: 70054)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0007741317385807633
    2. '("{' → logprob: -7.250773906707764
    3. '(round' → logprob: -10.250774383544922
    4. '(int' → logprob: -11.250774383544922
    5. '("%.' → logprob: -11.500774383544922
    6. '(format' → logprob: -12.750774383544922
    7. '(' → logprob: -13.250774383544922
    8. '('{' → logprob: -14.875774383544922
    9. '("' → logprob: -15.000774383544922
    10. '(ans' → logprob: -15.500774383544922

Token 802: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. '())' → logprob: -11.875029563903809
    3. ' )' → logprob: -11.875029563903809
    4. '()' → logprob: -12.375029563903809
    5. ')
' → logprob: -12.750029563903809
    6. '   ' → logprob: -13.375029563903809
    7. ':.' → logprob: -13.500029563903809
    8. '.' → logprob: -13.625029563903809
    9. '")' → logprob: -13.875029563903809
    10. ':' → logprob: -14.750029563903809

Token 803: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041981469839811325
    2. 'if' → logprob: -3.5419814586639404
    3. '<|end|>' → logprob: -4.5419816970825195
    4. '```' → logprob: -6.6669816970825195
    5. '\n' → logprob: -9.41698169708252
    6. '

' → logprob: -9.91698169708252
    7. ' if' → logprob: -10.54198169708252
    8. '  
' → logprob: -11.29198169708252
    9. '<|end|>' → logprob: -11.29198169708252
    10. '
' → logprob: -11.41698169708252

Token 804: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31326475739479065
    2. ' __' → logprob: -1.3132647275924683
    3. 'name' → logprob: -14.313264846801758
    4. '(__' → logprob: -14.438264846801758
    5. '___' → logprob: -14.813264846801758
    6. ''' → logprob: -14.813264846801758
    7. '.__' → logprob: -15.188264846801758
    8. 'if' → logprob: -15.813264846801758
    9. '____' → logprob: -15.938264846801758
    10. '_name' → logprob: -16.063264846801758

Token 805: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5430525541305542
    2. ' ==' → logprob: -1.4180525541305542
    3. '==' → logprob: -1.7930525541305542
    4. '=="' → logprob: -4.793052673339844
    5. '=='' → logprob: -7.168052673339844
    6. '.__' → logprob: -7.543052673339844
    7. '__.__' → logprob: -7.918052673339844
    8. ' __' → logprob: -8.668052673339844
    9. '```' → logprob: -9.168052673339844
    10. '__.' → logprob: -10.168052673339844

Token 806: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000500966387335211
    2. '==' → logprob: -8.125500679016113
    3. '__.__' → logprob: -8.625500679016113
    4. '=="' → logprob: -10.875500679016113
    5. '__.' → logprob: -13.000500679016113
    6. ' ==' → logprob: -13.250500679016113
    7. '__["' → logprob: -14.500500679016113
    8. '=='' → logprob: -14.625500679016113
    9. '___' → logprob: -14.875500679016113
    10. '____' → logprob: -15.250500679016113

Token 807: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08231057226657867
    2. '==' → logprob: -2.957310676574707
    3. '=="' → logprob: -3.707310676574707
    4. '=='' → logprob: -6.582310676574707
    5. ' ==' → logprob: -6.832310676574707
    6. '__.__' → logprob: -10.707310676574707
    7. '___' → logprob: -11.707310676574707
    8. '==="' → logprob: -12.332310676574707
    9. '===' → logprob: -12.957310676574707
    10. '__["' → logprob: -12.957310676574707

Token 808: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018113377154804766
    2. ''' → logprob: -9.250181198120117
    3. '"' → logprob: -9.375181198120117
    4. 'main' → logprob: -15.875181198120117
    5. '___' → logprob: -16.625181198120117
    6. ' __' → logprob: -18.375181198120117
    7. '____' → logprob: -19.000181198120117
    8. '/__' → logprob: -20.125181198120117
    9. ' "__' → logprob: -20.250181198120117
    10. '_main' → logprob: -20.250181198120117

Token 809: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -17.875
    3. ' main' → logprob: -19.75
    4. '_main' → logprob: -19.75
    5. '__' → logprob: -21.625
    6. 'ma' → logprob: -22.5
    7. '	main' → logprob: -23.75
    8. 'built' → logprob: -24.0
    9. '(main' → logprob: -24.125
    10. '-main' → logprob: -24.625

Token 810: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0488763265311718
    2. '__' → logprob: -3.0488762855529785
    3. '__':
' → logprob: -8.173876762390137
    4. '__["' → logprob: -12.673876762390137
    5. '__:' → logprob: -13.548876762390137
    6. '```' → logprob: -13.923876762390137
    7. '"' → logprob: -14.798876762390137
    8. '__.__' → logprob: -15.048876762390137
    9. '__.' → logprob: -15.173876762390137
    10. '__("' → logprob: -15.423876762390137

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05037461966276169
    2. 'main' → logprob: -3.0503745079040527
    3. '	main' → logprob: -6.425374507904053
    4. ' main' → logprob: -8.800374984741211
    5. '    
' → logprob: -12.425374984741211
    6. '   ' → logprob: -12.550374984741211
    7. '_main' → logprob: -12.800374984741211
    8. '(main' → logprob: -13.550374984741211
    9. '```' → logprob: -14.300374984741211
    10. '__' → logprob: -14.300374984741211

Token 812: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00011868205183418468
    2. ' main' → logprob: -9.250118255615234
    3. '   ' → logprob: -10.750118255615234
    4. '	main' → logprob: -13.750118255615234
    5. '_main' → logprob: -19.875118255615234
    6. '.main' → logprob: -21.250118255615234
    7. '(main' → logprob: -22.375118255615234
    8. ' ' → logprob: -22.750118255615234
    9. '  ' → logprob: -22.750118255615234
    10. 'Main' → logprob: -23.625118255615234

Token 813: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 811
Tokens correctement prédits (1ère position, stricte): 409
Tokens correctement prédits (1ère position, avec adaptation): 438
Tokens correctement prédits (top 10): 742
Précision stricte (1ère position): 50.43%
Précision adaptée (1ère position): 54.01%
Précision (top 10): 91.49%
================================================================================
